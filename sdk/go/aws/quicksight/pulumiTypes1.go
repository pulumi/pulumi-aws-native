// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DashboardColorScale struct {
	ColorFillType  DashboardColorFillType `pulumi:"colorFillType"`
	Colors         []DashboardDataColor   `pulumi:"colors"`
	NullValueColor *DashboardDataColor    `pulumi:"nullValueColor"`
}

// DashboardColorScaleInput is an input type that accepts DashboardColorScaleArgs and DashboardColorScaleOutput values.
// You can construct a concrete instance of `DashboardColorScaleInput` via:
//
//	DashboardColorScaleArgs{...}
type DashboardColorScaleInput interface {
	pulumi.Input

	ToDashboardColorScaleOutput() DashboardColorScaleOutput
	ToDashboardColorScaleOutputWithContext(context.Context) DashboardColorScaleOutput
}

type DashboardColorScaleArgs struct {
	ColorFillType  DashboardColorFillTypeInput  `pulumi:"colorFillType"`
	Colors         DashboardDataColorArrayInput `pulumi:"colors"`
	NullValueColor DashboardDataColorPtrInput   `pulumi:"nullValueColor"`
}

func (DashboardColorScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorScale)(nil)).Elem()
}

func (i DashboardColorScaleArgs) ToDashboardColorScaleOutput() DashboardColorScaleOutput {
	return i.ToDashboardColorScaleOutputWithContext(context.Background())
}

func (i DashboardColorScaleArgs) ToDashboardColorScaleOutputWithContext(ctx context.Context) DashboardColorScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorScaleOutput)
}

func (i DashboardColorScaleArgs) ToDashboardColorScalePtrOutput() DashboardColorScalePtrOutput {
	return i.ToDashboardColorScalePtrOutputWithContext(context.Background())
}

func (i DashboardColorScaleArgs) ToDashboardColorScalePtrOutputWithContext(ctx context.Context) DashboardColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorScaleOutput).ToDashboardColorScalePtrOutputWithContext(ctx)
}

// DashboardColorScalePtrInput is an input type that accepts DashboardColorScaleArgs, DashboardColorScalePtr and DashboardColorScalePtrOutput values.
// You can construct a concrete instance of `DashboardColorScalePtrInput` via:
//
//	        DashboardColorScaleArgs{...}
//
//	or:
//
//	        nil
type DashboardColorScalePtrInput interface {
	pulumi.Input

	ToDashboardColorScalePtrOutput() DashboardColorScalePtrOutput
	ToDashboardColorScalePtrOutputWithContext(context.Context) DashboardColorScalePtrOutput
}

type dashboardColorScalePtrType DashboardColorScaleArgs

func DashboardColorScalePtr(v *DashboardColorScaleArgs) DashboardColorScalePtrInput {
	return (*dashboardColorScalePtrType)(v)
}

func (*dashboardColorScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColorScale)(nil)).Elem()
}

func (i *dashboardColorScalePtrType) ToDashboardColorScalePtrOutput() DashboardColorScalePtrOutput {
	return i.ToDashboardColorScalePtrOutputWithContext(context.Background())
}

func (i *dashboardColorScalePtrType) ToDashboardColorScalePtrOutputWithContext(ctx context.Context) DashboardColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorScalePtrOutput)
}

type DashboardColorScaleOutput struct{ *pulumi.OutputState }

func (DashboardColorScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorScale)(nil)).Elem()
}

func (o DashboardColorScaleOutput) ToDashboardColorScaleOutput() DashboardColorScaleOutput {
	return o
}

func (o DashboardColorScaleOutput) ToDashboardColorScaleOutputWithContext(ctx context.Context) DashboardColorScaleOutput {
	return o
}

func (o DashboardColorScaleOutput) ToDashboardColorScalePtrOutput() DashboardColorScalePtrOutput {
	return o.ToDashboardColorScalePtrOutputWithContext(context.Background())
}

func (o DashboardColorScaleOutput) ToDashboardColorScalePtrOutputWithContext(ctx context.Context) DashboardColorScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColorScale) *DashboardColorScale {
		return &v
	}).(DashboardColorScalePtrOutput)
}

func (o DashboardColorScaleOutput) ColorFillType() DashboardColorFillTypeOutput {
	return o.ApplyT(func(v DashboardColorScale) DashboardColorFillType { return v.ColorFillType }).(DashboardColorFillTypeOutput)
}

func (o DashboardColorScaleOutput) Colors() DashboardDataColorArrayOutput {
	return o.ApplyT(func(v DashboardColorScale) []DashboardDataColor { return v.Colors }).(DashboardDataColorArrayOutput)
}

func (o DashboardColorScaleOutput) NullValueColor() DashboardDataColorPtrOutput {
	return o.ApplyT(func(v DashboardColorScale) *DashboardDataColor { return v.NullValueColor }).(DashboardDataColorPtrOutput)
}

type DashboardColorScalePtrOutput struct{ *pulumi.OutputState }

func (DashboardColorScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColorScale)(nil)).Elem()
}

func (o DashboardColorScalePtrOutput) ToDashboardColorScalePtrOutput() DashboardColorScalePtrOutput {
	return o
}

func (o DashboardColorScalePtrOutput) ToDashboardColorScalePtrOutputWithContext(ctx context.Context) DashboardColorScalePtrOutput {
	return o
}

func (o DashboardColorScalePtrOutput) Elem() DashboardColorScaleOutput {
	return o.ApplyT(func(v *DashboardColorScale) DashboardColorScale {
		if v != nil {
			return *v
		}
		var ret DashboardColorScale
		return ret
	}).(DashboardColorScaleOutput)
}

func (o DashboardColorScalePtrOutput) ColorFillType() DashboardColorFillTypePtrOutput {
	return o.ApplyT(func(v *DashboardColorScale) *DashboardColorFillType {
		if v == nil {
			return nil
		}
		return &v.ColorFillType
	}).(DashboardColorFillTypePtrOutput)
}

func (o DashboardColorScalePtrOutput) Colors() DashboardDataColorArrayOutput {
	return o.ApplyT(func(v *DashboardColorScale) []DashboardDataColor {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardDataColorArrayOutput)
}

func (o DashboardColorScalePtrOutput) NullValueColor() DashboardDataColorPtrOutput {
	return o.ApplyT(func(v *DashboardColorScale) *DashboardDataColor {
		if v == nil {
			return nil
		}
		return v.NullValueColor
	}).(DashboardDataColorPtrOutput)
}

type DashboardColorsConfiguration struct {
	CustomColors []DashboardCustomColor `pulumi:"customColors"`
}

// DashboardColorsConfigurationInput is an input type that accepts DashboardColorsConfigurationArgs and DashboardColorsConfigurationOutput values.
// You can construct a concrete instance of `DashboardColorsConfigurationInput` via:
//
//	DashboardColorsConfigurationArgs{...}
type DashboardColorsConfigurationInput interface {
	pulumi.Input

	ToDashboardColorsConfigurationOutput() DashboardColorsConfigurationOutput
	ToDashboardColorsConfigurationOutputWithContext(context.Context) DashboardColorsConfigurationOutput
}

type DashboardColorsConfigurationArgs struct {
	CustomColors DashboardCustomColorArrayInput `pulumi:"customColors"`
}

func (DashboardColorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorsConfiguration)(nil)).Elem()
}

func (i DashboardColorsConfigurationArgs) ToDashboardColorsConfigurationOutput() DashboardColorsConfigurationOutput {
	return i.ToDashboardColorsConfigurationOutputWithContext(context.Background())
}

func (i DashboardColorsConfigurationArgs) ToDashboardColorsConfigurationOutputWithContext(ctx context.Context) DashboardColorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorsConfigurationOutput)
}

func (i DashboardColorsConfigurationArgs) ToDashboardColorsConfigurationPtrOutput() DashboardColorsConfigurationPtrOutput {
	return i.ToDashboardColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardColorsConfigurationArgs) ToDashboardColorsConfigurationPtrOutputWithContext(ctx context.Context) DashboardColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorsConfigurationOutput).ToDashboardColorsConfigurationPtrOutputWithContext(ctx)
}

// DashboardColorsConfigurationPtrInput is an input type that accepts DashboardColorsConfigurationArgs, DashboardColorsConfigurationPtr and DashboardColorsConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardColorsConfigurationPtrInput` via:
//
//	        DashboardColorsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardColorsConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardColorsConfigurationPtrOutput() DashboardColorsConfigurationPtrOutput
	ToDashboardColorsConfigurationPtrOutputWithContext(context.Context) DashboardColorsConfigurationPtrOutput
}

type dashboardColorsConfigurationPtrType DashboardColorsConfigurationArgs

func DashboardColorsConfigurationPtr(v *DashboardColorsConfigurationArgs) DashboardColorsConfigurationPtrInput {
	return (*dashboardColorsConfigurationPtrType)(v)
}

func (*dashboardColorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColorsConfiguration)(nil)).Elem()
}

func (i *dashboardColorsConfigurationPtrType) ToDashboardColorsConfigurationPtrOutput() DashboardColorsConfigurationPtrOutput {
	return i.ToDashboardColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardColorsConfigurationPtrType) ToDashboardColorsConfigurationPtrOutputWithContext(ctx context.Context) DashboardColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColorsConfigurationPtrOutput)
}

type DashboardColorsConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardColorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColorsConfiguration)(nil)).Elem()
}

func (o DashboardColorsConfigurationOutput) ToDashboardColorsConfigurationOutput() DashboardColorsConfigurationOutput {
	return o
}

func (o DashboardColorsConfigurationOutput) ToDashboardColorsConfigurationOutputWithContext(ctx context.Context) DashboardColorsConfigurationOutput {
	return o
}

func (o DashboardColorsConfigurationOutput) ToDashboardColorsConfigurationPtrOutput() DashboardColorsConfigurationPtrOutput {
	return o.ToDashboardColorsConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardColorsConfigurationOutput) ToDashboardColorsConfigurationPtrOutputWithContext(ctx context.Context) DashboardColorsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColorsConfiguration) *DashboardColorsConfiguration {
		return &v
	}).(DashboardColorsConfigurationPtrOutput)
}

func (o DashboardColorsConfigurationOutput) CustomColors() DashboardCustomColorArrayOutput {
	return o.ApplyT(func(v DashboardColorsConfiguration) []DashboardCustomColor { return v.CustomColors }).(DashboardCustomColorArrayOutput)
}

type DashboardColorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardColorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColorsConfiguration)(nil)).Elem()
}

func (o DashboardColorsConfigurationPtrOutput) ToDashboardColorsConfigurationPtrOutput() DashboardColorsConfigurationPtrOutput {
	return o
}

func (o DashboardColorsConfigurationPtrOutput) ToDashboardColorsConfigurationPtrOutputWithContext(ctx context.Context) DashboardColorsConfigurationPtrOutput {
	return o
}

func (o DashboardColorsConfigurationPtrOutput) Elem() DashboardColorsConfigurationOutput {
	return o.ApplyT(func(v *DashboardColorsConfiguration) DashboardColorsConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardColorsConfiguration
		return ret
	}).(DashboardColorsConfigurationOutput)
}

func (o DashboardColorsConfigurationPtrOutput) CustomColors() DashboardCustomColorArrayOutput {
	return o.ApplyT(func(v *DashboardColorsConfiguration) []DashboardCustomColor {
		if v == nil {
			return nil
		}
		return v.CustomColors
	}).(DashboardCustomColorArrayOutput)
}

type DashboardColumnConfiguration struct {
	ColorsConfiguration *DashboardColorsConfiguration `pulumi:"colorsConfiguration"`
	Column              DashboardColumnIdentifier     `pulumi:"column"`
	FormatConfiguration *DashboardFormatConfiguration `pulumi:"formatConfiguration"`
	Role                *DashboardColumnRole          `pulumi:"role"`
}

// DashboardColumnConfigurationInput is an input type that accepts DashboardColumnConfigurationArgs and DashboardColumnConfigurationOutput values.
// You can construct a concrete instance of `DashboardColumnConfigurationInput` via:
//
//	DashboardColumnConfigurationArgs{...}
type DashboardColumnConfigurationInput interface {
	pulumi.Input

	ToDashboardColumnConfigurationOutput() DashboardColumnConfigurationOutput
	ToDashboardColumnConfigurationOutputWithContext(context.Context) DashboardColumnConfigurationOutput
}

type DashboardColumnConfigurationArgs struct {
	ColorsConfiguration DashboardColorsConfigurationPtrInput `pulumi:"colorsConfiguration"`
	Column              DashboardColumnIdentifierInput       `pulumi:"column"`
	FormatConfiguration DashboardFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	Role                DashboardColumnRolePtrInput          `pulumi:"role"`
}

func (DashboardColumnConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnConfiguration)(nil)).Elem()
}

func (i DashboardColumnConfigurationArgs) ToDashboardColumnConfigurationOutput() DashboardColumnConfigurationOutput {
	return i.ToDashboardColumnConfigurationOutputWithContext(context.Background())
}

func (i DashboardColumnConfigurationArgs) ToDashboardColumnConfigurationOutputWithContext(ctx context.Context) DashboardColumnConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnConfigurationOutput)
}

// DashboardColumnConfigurationArrayInput is an input type that accepts DashboardColumnConfigurationArray and DashboardColumnConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardColumnConfigurationArrayInput` via:
//
//	DashboardColumnConfigurationArray{ DashboardColumnConfigurationArgs{...} }
type DashboardColumnConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardColumnConfigurationArrayOutput() DashboardColumnConfigurationArrayOutput
	ToDashboardColumnConfigurationArrayOutputWithContext(context.Context) DashboardColumnConfigurationArrayOutput
}

type DashboardColumnConfigurationArray []DashboardColumnConfigurationInput

func (DashboardColumnConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnConfiguration)(nil)).Elem()
}

func (i DashboardColumnConfigurationArray) ToDashboardColumnConfigurationArrayOutput() DashboardColumnConfigurationArrayOutput {
	return i.ToDashboardColumnConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardColumnConfigurationArray) ToDashboardColumnConfigurationArrayOutputWithContext(ctx context.Context) DashboardColumnConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnConfigurationArrayOutput)
}

type DashboardColumnConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardColumnConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnConfiguration)(nil)).Elem()
}

func (o DashboardColumnConfigurationOutput) ToDashboardColumnConfigurationOutput() DashboardColumnConfigurationOutput {
	return o
}

func (o DashboardColumnConfigurationOutput) ToDashboardColumnConfigurationOutputWithContext(ctx context.Context) DashboardColumnConfigurationOutput {
	return o
}

func (o DashboardColumnConfigurationOutput) ColorsConfiguration() DashboardColorsConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardColumnConfiguration) *DashboardColorsConfiguration { return v.ColorsConfiguration }).(DashboardColorsConfigurationPtrOutput)
}

func (o DashboardColumnConfigurationOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardColumnConfiguration) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardColumnConfigurationOutput) FormatConfiguration() DashboardFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardColumnConfiguration) *DashboardFormatConfiguration { return v.FormatConfiguration }).(DashboardFormatConfigurationPtrOutput)
}

func (o DashboardColumnConfigurationOutput) Role() DashboardColumnRolePtrOutput {
	return o.ApplyT(func(v DashboardColumnConfiguration) *DashboardColumnRole { return v.Role }).(DashboardColumnRolePtrOutput)
}

type DashboardColumnConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardColumnConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnConfiguration)(nil)).Elem()
}

func (o DashboardColumnConfigurationArrayOutput) ToDashboardColumnConfigurationArrayOutput() DashboardColumnConfigurationArrayOutput {
	return o
}

func (o DashboardColumnConfigurationArrayOutput) ToDashboardColumnConfigurationArrayOutputWithContext(ctx context.Context) DashboardColumnConfigurationArrayOutput {
	return o
}

func (o DashboardColumnConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardColumnConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColumnConfiguration {
		return vs[0].([]DashboardColumnConfiguration)[vs[1].(int)]
	}).(DashboardColumnConfigurationOutput)
}

type DashboardColumnHierarchy struct {
	DateTimeHierarchy   *DashboardDateTimeHierarchy   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   *DashboardExplicitHierarchy   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy *DashboardPredefinedHierarchy `pulumi:"predefinedHierarchy"`
}

// DashboardColumnHierarchyInput is an input type that accepts DashboardColumnHierarchyArgs and DashboardColumnHierarchyOutput values.
// You can construct a concrete instance of `DashboardColumnHierarchyInput` via:
//
//	DashboardColumnHierarchyArgs{...}
type DashboardColumnHierarchyInput interface {
	pulumi.Input

	ToDashboardColumnHierarchyOutput() DashboardColumnHierarchyOutput
	ToDashboardColumnHierarchyOutputWithContext(context.Context) DashboardColumnHierarchyOutput
}

type DashboardColumnHierarchyArgs struct {
	DateTimeHierarchy   DashboardDateTimeHierarchyPtrInput   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   DashboardExplicitHierarchyPtrInput   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy DashboardPredefinedHierarchyPtrInput `pulumi:"predefinedHierarchy"`
}

func (DashboardColumnHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnHierarchy)(nil)).Elem()
}

func (i DashboardColumnHierarchyArgs) ToDashboardColumnHierarchyOutput() DashboardColumnHierarchyOutput {
	return i.ToDashboardColumnHierarchyOutputWithContext(context.Background())
}

func (i DashboardColumnHierarchyArgs) ToDashboardColumnHierarchyOutputWithContext(ctx context.Context) DashboardColumnHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnHierarchyOutput)
}

// DashboardColumnHierarchyArrayInput is an input type that accepts DashboardColumnHierarchyArray and DashboardColumnHierarchyArrayOutput values.
// You can construct a concrete instance of `DashboardColumnHierarchyArrayInput` via:
//
//	DashboardColumnHierarchyArray{ DashboardColumnHierarchyArgs{...} }
type DashboardColumnHierarchyArrayInput interface {
	pulumi.Input

	ToDashboardColumnHierarchyArrayOutput() DashboardColumnHierarchyArrayOutput
	ToDashboardColumnHierarchyArrayOutputWithContext(context.Context) DashboardColumnHierarchyArrayOutput
}

type DashboardColumnHierarchyArray []DashboardColumnHierarchyInput

func (DashboardColumnHierarchyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnHierarchy)(nil)).Elem()
}

func (i DashboardColumnHierarchyArray) ToDashboardColumnHierarchyArrayOutput() DashboardColumnHierarchyArrayOutput {
	return i.ToDashboardColumnHierarchyArrayOutputWithContext(context.Background())
}

func (i DashboardColumnHierarchyArray) ToDashboardColumnHierarchyArrayOutputWithContext(ctx context.Context) DashboardColumnHierarchyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnHierarchyArrayOutput)
}

type DashboardColumnHierarchyOutput struct{ *pulumi.OutputState }

func (DashboardColumnHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnHierarchy)(nil)).Elem()
}

func (o DashboardColumnHierarchyOutput) ToDashboardColumnHierarchyOutput() DashboardColumnHierarchyOutput {
	return o
}

func (o DashboardColumnHierarchyOutput) ToDashboardColumnHierarchyOutputWithContext(ctx context.Context) DashboardColumnHierarchyOutput {
	return o
}

func (o DashboardColumnHierarchyOutput) DateTimeHierarchy() DashboardDateTimeHierarchyPtrOutput {
	return o.ApplyT(func(v DashboardColumnHierarchy) *DashboardDateTimeHierarchy { return v.DateTimeHierarchy }).(DashboardDateTimeHierarchyPtrOutput)
}

func (o DashboardColumnHierarchyOutput) ExplicitHierarchy() DashboardExplicitHierarchyPtrOutput {
	return o.ApplyT(func(v DashboardColumnHierarchy) *DashboardExplicitHierarchy { return v.ExplicitHierarchy }).(DashboardExplicitHierarchyPtrOutput)
}

func (o DashboardColumnHierarchyOutput) PredefinedHierarchy() DashboardPredefinedHierarchyPtrOutput {
	return o.ApplyT(func(v DashboardColumnHierarchy) *DashboardPredefinedHierarchy { return v.PredefinedHierarchy }).(DashboardPredefinedHierarchyPtrOutput)
}

type DashboardColumnHierarchyArrayOutput struct{ *pulumi.OutputState }

func (DashboardColumnHierarchyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnHierarchy)(nil)).Elem()
}

func (o DashboardColumnHierarchyArrayOutput) ToDashboardColumnHierarchyArrayOutput() DashboardColumnHierarchyArrayOutput {
	return o
}

func (o DashboardColumnHierarchyArrayOutput) ToDashboardColumnHierarchyArrayOutputWithContext(ctx context.Context) DashboardColumnHierarchyArrayOutput {
	return o
}

func (o DashboardColumnHierarchyArrayOutput) Index(i pulumi.IntInput) DashboardColumnHierarchyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColumnHierarchy {
		return vs[0].([]DashboardColumnHierarchy)[vs[1].(int)]
	}).(DashboardColumnHierarchyOutput)
}

type DashboardColumnIdentifier struct {
	ColumnName        string `pulumi:"columnName"`
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
}

// DashboardColumnIdentifierInput is an input type that accepts DashboardColumnIdentifierArgs and DashboardColumnIdentifierOutput values.
// You can construct a concrete instance of `DashboardColumnIdentifierInput` via:
//
//	DashboardColumnIdentifierArgs{...}
type DashboardColumnIdentifierInput interface {
	pulumi.Input

	ToDashboardColumnIdentifierOutput() DashboardColumnIdentifierOutput
	ToDashboardColumnIdentifierOutputWithContext(context.Context) DashboardColumnIdentifierOutput
}

type DashboardColumnIdentifierArgs struct {
	ColumnName        pulumi.StringInput `pulumi:"columnName"`
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
}

func (DashboardColumnIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnIdentifier)(nil)).Elem()
}

func (i DashboardColumnIdentifierArgs) ToDashboardColumnIdentifierOutput() DashboardColumnIdentifierOutput {
	return i.ToDashboardColumnIdentifierOutputWithContext(context.Background())
}

func (i DashboardColumnIdentifierArgs) ToDashboardColumnIdentifierOutputWithContext(ctx context.Context) DashboardColumnIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnIdentifierOutput)
}

func (i DashboardColumnIdentifierArgs) ToDashboardColumnIdentifierPtrOutput() DashboardColumnIdentifierPtrOutput {
	return i.ToDashboardColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i DashboardColumnIdentifierArgs) ToDashboardColumnIdentifierPtrOutputWithContext(ctx context.Context) DashboardColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnIdentifierOutput).ToDashboardColumnIdentifierPtrOutputWithContext(ctx)
}

// DashboardColumnIdentifierPtrInput is an input type that accepts DashboardColumnIdentifierArgs, DashboardColumnIdentifierPtr and DashboardColumnIdentifierPtrOutput values.
// You can construct a concrete instance of `DashboardColumnIdentifierPtrInput` via:
//
//	        DashboardColumnIdentifierArgs{...}
//
//	or:
//
//	        nil
type DashboardColumnIdentifierPtrInput interface {
	pulumi.Input

	ToDashboardColumnIdentifierPtrOutput() DashboardColumnIdentifierPtrOutput
	ToDashboardColumnIdentifierPtrOutputWithContext(context.Context) DashboardColumnIdentifierPtrOutput
}

type dashboardColumnIdentifierPtrType DashboardColumnIdentifierArgs

func DashboardColumnIdentifierPtr(v *DashboardColumnIdentifierArgs) DashboardColumnIdentifierPtrInput {
	return (*dashboardColumnIdentifierPtrType)(v)
}

func (*dashboardColumnIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnIdentifier)(nil)).Elem()
}

func (i *dashboardColumnIdentifierPtrType) ToDashboardColumnIdentifierPtrOutput() DashboardColumnIdentifierPtrOutput {
	return i.ToDashboardColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i *dashboardColumnIdentifierPtrType) ToDashboardColumnIdentifierPtrOutputWithContext(ctx context.Context) DashboardColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnIdentifierPtrOutput)
}

// DashboardColumnIdentifierArrayInput is an input type that accepts DashboardColumnIdentifierArray and DashboardColumnIdentifierArrayOutput values.
// You can construct a concrete instance of `DashboardColumnIdentifierArrayInput` via:
//
//	DashboardColumnIdentifierArray{ DashboardColumnIdentifierArgs{...} }
type DashboardColumnIdentifierArrayInput interface {
	pulumi.Input

	ToDashboardColumnIdentifierArrayOutput() DashboardColumnIdentifierArrayOutput
	ToDashboardColumnIdentifierArrayOutputWithContext(context.Context) DashboardColumnIdentifierArrayOutput
}

type DashboardColumnIdentifierArray []DashboardColumnIdentifierInput

func (DashboardColumnIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnIdentifier)(nil)).Elem()
}

func (i DashboardColumnIdentifierArray) ToDashboardColumnIdentifierArrayOutput() DashboardColumnIdentifierArrayOutput {
	return i.ToDashboardColumnIdentifierArrayOutputWithContext(context.Background())
}

func (i DashboardColumnIdentifierArray) ToDashboardColumnIdentifierArrayOutputWithContext(ctx context.Context) DashboardColumnIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnIdentifierArrayOutput)
}

type DashboardColumnIdentifierOutput struct{ *pulumi.OutputState }

func (DashboardColumnIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnIdentifier)(nil)).Elem()
}

func (o DashboardColumnIdentifierOutput) ToDashboardColumnIdentifierOutput() DashboardColumnIdentifierOutput {
	return o
}

func (o DashboardColumnIdentifierOutput) ToDashboardColumnIdentifierOutputWithContext(ctx context.Context) DashboardColumnIdentifierOutput {
	return o
}

func (o DashboardColumnIdentifierOutput) ToDashboardColumnIdentifierPtrOutput() DashboardColumnIdentifierPtrOutput {
	return o.ToDashboardColumnIdentifierPtrOutputWithContext(context.Background())
}

func (o DashboardColumnIdentifierOutput) ToDashboardColumnIdentifierPtrOutputWithContext(ctx context.Context) DashboardColumnIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColumnIdentifier) *DashboardColumnIdentifier {
		return &v
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardColumnIdentifierOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColumnIdentifier) string { return v.ColumnName }).(pulumi.StringOutput)
}

func (o DashboardColumnIdentifierOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColumnIdentifier) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

type DashboardColumnIdentifierPtrOutput struct{ *pulumi.OutputState }

func (DashboardColumnIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnIdentifier)(nil)).Elem()
}

func (o DashboardColumnIdentifierPtrOutput) ToDashboardColumnIdentifierPtrOutput() DashboardColumnIdentifierPtrOutput {
	return o
}

func (o DashboardColumnIdentifierPtrOutput) ToDashboardColumnIdentifierPtrOutputWithContext(ctx context.Context) DashboardColumnIdentifierPtrOutput {
	return o
}

func (o DashboardColumnIdentifierPtrOutput) Elem() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v *DashboardColumnIdentifier) DashboardColumnIdentifier {
		if v != nil {
			return *v
		}
		var ret DashboardColumnIdentifier
		return ret
	}).(DashboardColumnIdentifierOutput)
}

func (o DashboardColumnIdentifierPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardColumnIdentifierPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

type DashboardColumnIdentifierArrayOutput struct{ *pulumi.OutputState }

func (DashboardColumnIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColumnIdentifier)(nil)).Elem()
}

func (o DashboardColumnIdentifierArrayOutput) ToDashboardColumnIdentifierArrayOutput() DashboardColumnIdentifierArrayOutput {
	return o
}

func (o DashboardColumnIdentifierArrayOutput) ToDashboardColumnIdentifierArrayOutputWithContext(ctx context.Context) DashboardColumnIdentifierArrayOutput {
	return o
}

func (o DashboardColumnIdentifierArrayOutput) Index(i pulumi.IntInput) DashboardColumnIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColumnIdentifier {
		return vs[0].([]DashboardColumnIdentifier)[vs[1].(int)]
	}).(DashboardColumnIdentifierOutput)
}

type DashboardColumnSort struct {
	AggregationFunction *DashboardAggregationFunction `pulumi:"aggregationFunction"`
	Direction           DashboardSortDirection        `pulumi:"direction"`
	SortBy              DashboardColumnIdentifier     `pulumi:"sortBy"`
}

// DashboardColumnSortInput is an input type that accepts DashboardColumnSortArgs and DashboardColumnSortOutput values.
// You can construct a concrete instance of `DashboardColumnSortInput` via:
//
//	DashboardColumnSortArgs{...}
type DashboardColumnSortInput interface {
	pulumi.Input

	ToDashboardColumnSortOutput() DashboardColumnSortOutput
	ToDashboardColumnSortOutputWithContext(context.Context) DashboardColumnSortOutput
}

type DashboardColumnSortArgs struct {
	AggregationFunction DashboardAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Direction           DashboardSortDirectionInput          `pulumi:"direction"`
	SortBy              DashboardColumnIdentifierInput       `pulumi:"sortBy"`
}

func (DashboardColumnSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnSort)(nil)).Elem()
}

func (i DashboardColumnSortArgs) ToDashboardColumnSortOutput() DashboardColumnSortOutput {
	return i.ToDashboardColumnSortOutputWithContext(context.Background())
}

func (i DashboardColumnSortArgs) ToDashboardColumnSortOutputWithContext(ctx context.Context) DashboardColumnSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnSortOutput)
}

func (i DashboardColumnSortArgs) ToDashboardColumnSortPtrOutput() DashboardColumnSortPtrOutput {
	return i.ToDashboardColumnSortPtrOutputWithContext(context.Background())
}

func (i DashboardColumnSortArgs) ToDashboardColumnSortPtrOutputWithContext(ctx context.Context) DashboardColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnSortOutput).ToDashboardColumnSortPtrOutputWithContext(ctx)
}

// DashboardColumnSortPtrInput is an input type that accepts DashboardColumnSortArgs, DashboardColumnSortPtr and DashboardColumnSortPtrOutput values.
// You can construct a concrete instance of `DashboardColumnSortPtrInput` via:
//
//	        DashboardColumnSortArgs{...}
//
//	or:
//
//	        nil
type DashboardColumnSortPtrInput interface {
	pulumi.Input

	ToDashboardColumnSortPtrOutput() DashboardColumnSortPtrOutput
	ToDashboardColumnSortPtrOutputWithContext(context.Context) DashboardColumnSortPtrOutput
}

type dashboardColumnSortPtrType DashboardColumnSortArgs

func DashboardColumnSortPtr(v *DashboardColumnSortArgs) DashboardColumnSortPtrInput {
	return (*dashboardColumnSortPtrType)(v)
}

func (*dashboardColumnSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnSort)(nil)).Elem()
}

func (i *dashboardColumnSortPtrType) ToDashboardColumnSortPtrOutput() DashboardColumnSortPtrOutput {
	return i.ToDashboardColumnSortPtrOutputWithContext(context.Background())
}

func (i *dashboardColumnSortPtrType) ToDashboardColumnSortPtrOutputWithContext(ctx context.Context) DashboardColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnSortPtrOutput)
}

type DashboardColumnSortOutput struct{ *pulumi.OutputState }

func (DashboardColumnSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnSort)(nil)).Elem()
}

func (o DashboardColumnSortOutput) ToDashboardColumnSortOutput() DashboardColumnSortOutput {
	return o
}

func (o DashboardColumnSortOutput) ToDashboardColumnSortOutputWithContext(ctx context.Context) DashboardColumnSortOutput {
	return o
}

func (o DashboardColumnSortOutput) ToDashboardColumnSortPtrOutput() DashboardColumnSortPtrOutput {
	return o.ToDashboardColumnSortPtrOutputWithContext(context.Background())
}

func (o DashboardColumnSortOutput) ToDashboardColumnSortPtrOutputWithContext(ctx context.Context) DashboardColumnSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColumnSort) *DashboardColumnSort {
		return &v
	}).(DashboardColumnSortPtrOutput)
}

func (o DashboardColumnSortOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardColumnSort) *DashboardAggregationFunction { return v.AggregationFunction }).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardColumnSortOutput) Direction() DashboardSortDirectionOutput {
	return o.ApplyT(func(v DashboardColumnSort) DashboardSortDirection { return v.Direction }).(DashboardSortDirectionOutput)
}

func (o DashboardColumnSortOutput) SortBy() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardColumnSort) DashboardColumnIdentifier { return v.SortBy }).(DashboardColumnIdentifierOutput)
}

type DashboardColumnSortPtrOutput struct{ *pulumi.OutputState }

func (DashboardColumnSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnSort)(nil)).Elem()
}

func (o DashboardColumnSortPtrOutput) ToDashboardColumnSortPtrOutput() DashboardColumnSortPtrOutput {
	return o
}

func (o DashboardColumnSortPtrOutput) ToDashboardColumnSortPtrOutputWithContext(ctx context.Context) DashboardColumnSortPtrOutput {
	return o
}

func (o DashboardColumnSortPtrOutput) Elem() DashboardColumnSortOutput {
	return o.ApplyT(func(v *DashboardColumnSort) DashboardColumnSort {
		if v != nil {
			return *v
		}
		var ret DashboardColumnSort
		return ret
	}).(DashboardColumnSortOutput)
}

func (o DashboardColumnSortPtrOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardColumnSort) *DashboardAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardColumnSortPtrOutput) Direction() DashboardSortDirectionPtrOutput {
	return o.ApplyT(func(v *DashboardColumnSort) *DashboardSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(DashboardSortDirectionPtrOutput)
}

func (o DashboardColumnSortPtrOutput) SortBy() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardColumnSort) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.SortBy
	}).(DashboardColumnIdentifierPtrOutput)
}

type DashboardColumnTooltipItem struct {
	Aggregation *DashboardAggregationFunction `pulumi:"aggregation"`
	Column      DashboardColumnIdentifier     `pulumi:"column"`
	Label       *string                       `pulumi:"label"`
	Visibility  *DashboardVisibility          `pulumi:"visibility"`
}

// DashboardColumnTooltipItemInput is an input type that accepts DashboardColumnTooltipItemArgs and DashboardColumnTooltipItemOutput values.
// You can construct a concrete instance of `DashboardColumnTooltipItemInput` via:
//
//	DashboardColumnTooltipItemArgs{...}
type DashboardColumnTooltipItemInput interface {
	pulumi.Input

	ToDashboardColumnTooltipItemOutput() DashboardColumnTooltipItemOutput
	ToDashboardColumnTooltipItemOutputWithContext(context.Context) DashboardColumnTooltipItemOutput
}

type DashboardColumnTooltipItemArgs struct {
	Aggregation DashboardAggregationFunctionPtrInput `pulumi:"aggregation"`
	Column      DashboardColumnIdentifierInput       `pulumi:"column"`
	Label       pulumi.StringPtrInput                `pulumi:"label"`
	Visibility  DashboardVisibilityPtrInput          `pulumi:"visibility"`
}

func (DashboardColumnTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnTooltipItem)(nil)).Elem()
}

func (i DashboardColumnTooltipItemArgs) ToDashboardColumnTooltipItemOutput() DashboardColumnTooltipItemOutput {
	return i.ToDashboardColumnTooltipItemOutputWithContext(context.Background())
}

func (i DashboardColumnTooltipItemArgs) ToDashboardColumnTooltipItemOutputWithContext(ctx context.Context) DashboardColumnTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnTooltipItemOutput)
}

func (i DashboardColumnTooltipItemArgs) ToDashboardColumnTooltipItemPtrOutput() DashboardColumnTooltipItemPtrOutput {
	return i.ToDashboardColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i DashboardColumnTooltipItemArgs) ToDashboardColumnTooltipItemPtrOutputWithContext(ctx context.Context) DashboardColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnTooltipItemOutput).ToDashboardColumnTooltipItemPtrOutputWithContext(ctx)
}

// DashboardColumnTooltipItemPtrInput is an input type that accepts DashboardColumnTooltipItemArgs, DashboardColumnTooltipItemPtr and DashboardColumnTooltipItemPtrOutput values.
// You can construct a concrete instance of `DashboardColumnTooltipItemPtrInput` via:
//
//	        DashboardColumnTooltipItemArgs{...}
//
//	or:
//
//	        nil
type DashboardColumnTooltipItemPtrInput interface {
	pulumi.Input

	ToDashboardColumnTooltipItemPtrOutput() DashboardColumnTooltipItemPtrOutput
	ToDashboardColumnTooltipItemPtrOutputWithContext(context.Context) DashboardColumnTooltipItemPtrOutput
}

type dashboardColumnTooltipItemPtrType DashboardColumnTooltipItemArgs

func DashboardColumnTooltipItemPtr(v *DashboardColumnTooltipItemArgs) DashboardColumnTooltipItemPtrInput {
	return (*dashboardColumnTooltipItemPtrType)(v)
}

func (*dashboardColumnTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnTooltipItem)(nil)).Elem()
}

func (i *dashboardColumnTooltipItemPtrType) ToDashboardColumnTooltipItemPtrOutput() DashboardColumnTooltipItemPtrOutput {
	return i.ToDashboardColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i *dashboardColumnTooltipItemPtrType) ToDashboardColumnTooltipItemPtrOutputWithContext(ctx context.Context) DashboardColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColumnTooltipItemPtrOutput)
}

type DashboardColumnTooltipItemOutput struct{ *pulumi.OutputState }

func (DashboardColumnTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColumnTooltipItem)(nil)).Elem()
}

func (o DashboardColumnTooltipItemOutput) ToDashboardColumnTooltipItemOutput() DashboardColumnTooltipItemOutput {
	return o
}

func (o DashboardColumnTooltipItemOutput) ToDashboardColumnTooltipItemOutputWithContext(ctx context.Context) DashboardColumnTooltipItemOutput {
	return o
}

func (o DashboardColumnTooltipItemOutput) ToDashboardColumnTooltipItemPtrOutput() DashboardColumnTooltipItemPtrOutput {
	return o.ToDashboardColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (o DashboardColumnTooltipItemOutput) ToDashboardColumnTooltipItemPtrOutputWithContext(ctx context.Context) DashboardColumnTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardColumnTooltipItem) *DashboardColumnTooltipItem {
		return &v
	}).(DashboardColumnTooltipItemPtrOutput)
}

func (o DashboardColumnTooltipItemOutput) Aggregation() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardColumnTooltipItem) *DashboardAggregationFunction { return v.Aggregation }).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardColumnTooltipItemOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardColumnTooltipItem) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardColumnTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardColumnTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o DashboardColumnTooltipItemOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardColumnTooltipItem) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardColumnTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (DashboardColumnTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardColumnTooltipItem)(nil)).Elem()
}

func (o DashboardColumnTooltipItemPtrOutput) ToDashboardColumnTooltipItemPtrOutput() DashboardColumnTooltipItemPtrOutput {
	return o
}

func (o DashboardColumnTooltipItemPtrOutput) ToDashboardColumnTooltipItemPtrOutputWithContext(ctx context.Context) DashboardColumnTooltipItemPtrOutput {
	return o
}

func (o DashboardColumnTooltipItemPtrOutput) Elem() DashboardColumnTooltipItemOutput {
	return o.ApplyT(func(v *DashboardColumnTooltipItem) DashboardColumnTooltipItem {
		if v != nil {
			return *v
		}
		var ret DashboardColumnTooltipItem
		return ret
	}).(DashboardColumnTooltipItemOutput)
}

func (o DashboardColumnTooltipItemPtrOutput) Aggregation() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardColumnTooltipItem) *DashboardAggregationFunction {
		if v == nil {
			return nil
		}
		return v.Aggregation
	}).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardColumnTooltipItemPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardColumnTooltipItem) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardColumnTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardColumnTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o DashboardColumnTooltipItemPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardColumnTooltipItem) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardComboChartAggregatedFieldWells struct {
	BarValues  []DashboardMeasureField   `pulumi:"barValues"`
	Category   []DashboardDimensionField `pulumi:"category"`
	Colors     []DashboardDimensionField `pulumi:"colors"`
	LineValues []DashboardMeasureField   `pulumi:"lineValues"`
}

// DashboardComboChartAggregatedFieldWellsInput is an input type that accepts DashboardComboChartAggregatedFieldWellsArgs and DashboardComboChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardComboChartAggregatedFieldWellsInput` via:
//
//	DashboardComboChartAggregatedFieldWellsArgs{...}
type DashboardComboChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardComboChartAggregatedFieldWellsOutput() DashboardComboChartAggregatedFieldWellsOutput
	ToDashboardComboChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardComboChartAggregatedFieldWellsOutput
}

type DashboardComboChartAggregatedFieldWellsArgs struct {
	BarValues  DashboardMeasureFieldArrayInput   `pulumi:"barValues"`
	Category   DashboardDimensionFieldArrayInput `pulumi:"category"`
	Colors     DashboardDimensionFieldArrayInput `pulumi:"colors"`
	LineValues DashboardMeasureFieldArrayInput   `pulumi:"lineValues"`
}

func (DashboardComboChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardComboChartAggregatedFieldWellsArgs) ToDashboardComboChartAggregatedFieldWellsOutput() DashboardComboChartAggregatedFieldWellsOutput {
	return i.ToDashboardComboChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardComboChartAggregatedFieldWellsArgs) ToDashboardComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartAggregatedFieldWellsOutput)
}

func (i DashboardComboChartAggregatedFieldWellsArgs) ToDashboardComboChartAggregatedFieldWellsPtrOutput() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardComboChartAggregatedFieldWellsArgs) ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartAggregatedFieldWellsOutput).ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardComboChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardComboChartAggregatedFieldWellsArgs, DashboardComboChartAggregatedFieldWellsPtr and DashboardComboChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardComboChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardComboChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardComboChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardComboChartAggregatedFieldWellsPtrOutput() DashboardComboChartAggregatedFieldWellsPtrOutput
	ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardComboChartAggregatedFieldWellsPtrOutput
}

type dashboardComboChartAggregatedFieldWellsPtrType DashboardComboChartAggregatedFieldWellsArgs

func DashboardComboChartAggregatedFieldWellsPtr(v *DashboardComboChartAggregatedFieldWellsArgs) DashboardComboChartAggregatedFieldWellsPtrInput {
	return (*dashboardComboChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardComboChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardComboChartAggregatedFieldWellsPtrType) ToDashboardComboChartAggregatedFieldWellsPtrOutput() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardComboChartAggregatedFieldWellsPtrType) ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartAggregatedFieldWellsPtrOutput)
}

type DashboardComboChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardComboChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardComboChartAggregatedFieldWellsOutput) ToDashboardComboChartAggregatedFieldWellsOutput() DashboardComboChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardComboChartAggregatedFieldWellsOutput) ToDashboardComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardComboChartAggregatedFieldWellsOutput) ToDashboardComboChartAggregatedFieldWellsPtrOutput() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardComboChartAggregatedFieldWellsOutput) ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComboChartAggregatedFieldWells) *DashboardComboChartAggregatedFieldWells {
		return &v
	}).(DashboardComboChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardComboChartAggregatedFieldWellsOutput) BarValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardComboChartAggregatedFieldWells) []DashboardMeasureField { return v.BarValues }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardComboChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardComboChartAggregatedFieldWells) []DashboardDimensionField { return v.Colors }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsOutput) LineValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardComboChartAggregatedFieldWells) []DashboardMeasureField { return v.LineValues }).(DashboardMeasureFieldArrayOutput)
}

type DashboardComboChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardComboChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) ToDashboardComboChartAggregatedFieldWellsPtrOutput() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) ToDashboardComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) Elem() DashboardComboChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardComboChartAggregatedFieldWells) DashboardComboChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardComboChartAggregatedFieldWells
		return ret
	}).(DashboardComboChartAggregatedFieldWellsOutput)
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) BarValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.BarValues
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardComboChartAggregatedFieldWellsPtrOutput) LineValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.LineValues
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardComboChartConfiguration struct {
	BarDataLabels                *DashboardDataLabelOptions            `pulumi:"barDataLabels"`
	BarsArrangement              *DashboardBarsArrangement             `pulumi:"barsArrangement"`
	CategoryAxis                 *DashboardAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions         *DashboardChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *DashboardChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                   *DashboardComboChartFieldWells        `pulumi:"fieldWells"`
	Legend                       *DashboardLegendOptions               `pulumi:"legend"`
	LineDataLabels               *DashboardDataLabelOptions            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   *DashboardAxisDisplayOptions          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *DashboardChartAxisLabelOptions       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []DashboardReferenceLine              `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *DashboardAxisDisplayOptions          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *DashboardChartAxisLabelOptions       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            *DashboardComboChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                      *DashboardTooltipOptions              `pulumi:"tooltip"`
	VisualPalette                *DashboardVisualPalette               `pulumi:"visualPalette"`
}

// DashboardComboChartConfigurationInput is an input type that accepts DashboardComboChartConfigurationArgs and DashboardComboChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardComboChartConfigurationInput` via:
//
//	DashboardComboChartConfigurationArgs{...}
type DashboardComboChartConfigurationInput interface {
	pulumi.Input

	ToDashboardComboChartConfigurationOutput() DashboardComboChartConfigurationOutput
	ToDashboardComboChartConfigurationOutputWithContext(context.Context) DashboardComboChartConfigurationOutput
}

type DashboardComboChartConfigurationArgs struct {
	BarDataLabels                DashboardDataLabelOptionsPtrInput            `pulumi:"barDataLabels"`
	BarsArrangement              DashboardBarsArrangementPtrInput             `pulumi:"barsArrangement"`
	CategoryAxis                 DashboardAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions         DashboardChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            DashboardChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                   DashboardComboChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                       DashboardLegendOptionsPtrInput               `pulumi:"legend"`
	LineDataLabels               DashboardDataLabelOptionsPtrInput            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   DashboardAxisDisplayOptionsPtrInput          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     DashboardChartAxisLabelOptionsPtrInput       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               DashboardReferenceLineArrayInput             `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            DashboardComboChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                      DashboardTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette                DashboardVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (DashboardComboChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartConfiguration)(nil)).Elem()
}

func (i DashboardComboChartConfigurationArgs) ToDashboardComboChartConfigurationOutput() DashboardComboChartConfigurationOutput {
	return i.ToDashboardComboChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardComboChartConfigurationArgs) ToDashboardComboChartConfigurationOutputWithContext(ctx context.Context) DashboardComboChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartConfigurationOutput)
}

func (i DashboardComboChartConfigurationArgs) ToDashboardComboChartConfigurationPtrOutput() DashboardComboChartConfigurationPtrOutput {
	return i.ToDashboardComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardComboChartConfigurationArgs) ToDashboardComboChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartConfigurationOutput).ToDashboardComboChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardComboChartConfigurationPtrInput is an input type that accepts DashboardComboChartConfigurationArgs, DashboardComboChartConfigurationPtr and DashboardComboChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardComboChartConfigurationPtrInput` via:
//
//	        DashboardComboChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardComboChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardComboChartConfigurationPtrOutput() DashboardComboChartConfigurationPtrOutput
	ToDashboardComboChartConfigurationPtrOutputWithContext(context.Context) DashboardComboChartConfigurationPtrOutput
}

type dashboardComboChartConfigurationPtrType DashboardComboChartConfigurationArgs

func DashboardComboChartConfigurationPtr(v *DashboardComboChartConfigurationArgs) DashboardComboChartConfigurationPtrInput {
	return (*dashboardComboChartConfigurationPtrType)(v)
}

func (*dashboardComboChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartConfiguration)(nil)).Elem()
}

func (i *dashboardComboChartConfigurationPtrType) ToDashboardComboChartConfigurationPtrOutput() DashboardComboChartConfigurationPtrOutput {
	return i.ToDashboardComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardComboChartConfigurationPtrType) ToDashboardComboChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartConfigurationPtrOutput)
}

type DashboardComboChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardComboChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartConfiguration)(nil)).Elem()
}

func (o DashboardComboChartConfigurationOutput) ToDashboardComboChartConfigurationOutput() DashboardComboChartConfigurationOutput {
	return o
}

func (o DashboardComboChartConfigurationOutput) ToDashboardComboChartConfigurationOutputWithContext(ctx context.Context) DashboardComboChartConfigurationOutput {
	return o
}

func (o DashboardComboChartConfigurationOutput) ToDashboardComboChartConfigurationPtrOutput() DashboardComboChartConfigurationPtrOutput {
	return o.ToDashboardComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardComboChartConfigurationOutput) ToDashboardComboChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComboChartConfiguration) *DashboardComboChartConfiguration {
		return &v
	}).(DashboardComboChartConfigurationPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) BarDataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardDataLabelOptions { return v.BarDataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) BarsArrangement() DashboardBarsArrangementPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardBarsArrangement { return v.BarsArrangement }).(DashboardBarsArrangementPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardAxisDisplayOptions { return v.CategoryAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions { return v.ColorLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) FieldWells() DashboardComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardComboChartFieldWells { return v.FieldWells }).(DashboardComboChartFieldWellsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) LineDataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardDataLabelOptions { return v.LineDataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) []DashboardReferenceLine { return v.ReferenceLines }).(DashboardReferenceLineArrayOutput)
}

func (o DashboardComboChartConfigurationOutput) SecondaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) SecondaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) SortConfiguration() DashboardComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardComboChartSortConfiguration {
		return v.SortConfiguration
	}).(DashboardComboChartSortConfigurationPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardComboChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardComboChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardComboChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartConfiguration)(nil)).Elem()
}

func (o DashboardComboChartConfigurationPtrOutput) ToDashboardComboChartConfigurationPtrOutput() DashboardComboChartConfigurationPtrOutput {
	return o
}

func (o DashboardComboChartConfigurationPtrOutput) ToDashboardComboChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartConfigurationPtrOutput {
	return o
}

func (o DashboardComboChartConfigurationPtrOutput) Elem() DashboardComboChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) DashboardComboChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardComboChartConfiguration
		return ret
	}).(DashboardComboChartConfigurationOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) BarDataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.BarDataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) BarsArrangement() DashboardBarsArrangementPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(DashboardBarsArrangementPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) FieldWells() DashboardComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardComboChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardComboChartFieldWellsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) LineDataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.LineDataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) []DashboardReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(DashboardReferenceLineArrayOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) SortConfiguration() DashboardComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardComboChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardComboChartSortConfigurationPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardComboChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardComboChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardComboChartFieldWells struct {
	ComboChartAggregatedFieldWells *DashboardComboChartAggregatedFieldWells `pulumi:"comboChartAggregatedFieldWells"`
}

// DashboardComboChartFieldWellsInput is an input type that accepts DashboardComboChartFieldWellsArgs and DashboardComboChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardComboChartFieldWellsInput` via:
//
//	DashboardComboChartFieldWellsArgs{...}
type DashboardComboChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardComboChartFieldWellsOutput() DashboardComboChartFieldWellsOutput
	ToDashboardComboChartFieldWellsOutputWithContext(context.Context) DashboardComboChartFieldWellsOutput
}

type DashboardComboChartFieldWellsArgs struct {
	ComboChartAggregatedFieldWells DashboardComboChartAggregatedFieldWellsPtrInput `pulumi:"comboChartAggregatedFieldWells"`
}

func (DashboardComboChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartFieldWells)(nil)).Elem()
}

func (i DashboardComboChartFieldWellsArgs) ToDashboardComboChartFieldWellsOutput() DashboardComboChartFieldWellsOutput {
	return i.ToDashboardComboChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardComboChartFieldWellsArgs) ToDashboardComboChartFieldWellsOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartFieldWellsOutput)
}

func (i DashboardComboChartFieldWellsArgs) ToDashboardComboChartFieldWellsPtrOutput() DashboardComboChartFieldWellsPtrOutput {
	return i.ToDashboardComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardComboChartFieldWellsArgs) ToDashboardComboChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartFieldWellsOutput).ToDashboardComboChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardComboChartFieldWellsPtrInput is an input type that accepts DashboardComboChartFieldWellsArgs, DashboardComboChartFieldWellsPtr and DashboardComboChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardComboChartFieldWellsPtrInput` via:
//
//	        DashboardComboChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardComboChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardComboChartFieldWellsPtrOutput() DashboardComboChartFieldWellsPtrOutput
	ToDashboardComboChartFieldWellsPtrOutputWithContext(context.Context) DashboardComboChartFieldWellsPtrOutput
}

type dashboardComboChartFieldWellsPtrType DashboardComboChartFieldWellsArgs

func DashboardComboChartFieldWellsPtr(v *DashboardComboChartFieldWellsArgs) DashboardComboChartFieldWellsPtrInput {
	return (*dashboardComboChartFieldWellsPtrType)(v)
}

func (*dashboardComboChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartFieldWells)(nil)).Elem()
}

func (i *dashboardComboChartFieldWellsPtrType) ToDashboardComboChartFieldWellsPtrOutput() DashboardComboChartFieldWellsPtrOutput {
	return i.ToDashboardComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardComboChartFieldWellsPtrType) ToDashboardComboChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartFieldWellsPtrOutput)
}

type DashboardComboChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardComboChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartFieldWells)(nil)).Elem()
}

func (o DashboardComboChartFieldWellsOutput) ToDashboardComboChartFieldWellsOutput() DashboardComboChartFieldWellsOutput {
	return o
}

func (o DashboardComboChartFieldWellsOutput) ToDashboardComboChartFieldWellsOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsOutput {
	return o
}

func (o DashboardComboChartFieldWellsOutput) ToDashboardComboChartFieldWellsPtrOutput() DashboardComboChartFieldWellsPtrOutput {
	return o.ToDashboardComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardComboChartFieldWellsOutput) ToDashboardComboChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComboChartFieldWells) *DashboardComboChartFieldWells {
		return &v
	}).(DashboardComboChartFieldWellsPtrOutput)
}

func (o DashboardComboChartFieldWellsOutput) ComboChartAggregatedFieldWells() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartFieldWells) *DashboardComboChartAggregatedFieldWells {
		return v.ComboChartAggregatedFieldWells
	}).(DashboardComboChartAggregatedFieldWellsPtrOutput)
}

type DashboardComboChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardComboChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartFieldWells)(nil)).Elem()
}

func (o DashboardComboChartFieldWellsPtrOutput) ToDashboardComboChartFieldWellsPtrOutput() DashboardComboChartFieldWellsPtrOutput {
	return o
}

func (o DashboardComboChartFieldWellsPtrOutput) ToDashboardComboChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardComboChartFieldWellsPtrOutput {
	return o
}

func (o DashboardComboChartFieldWellsPtrOutput) Elem() DashboardComboChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardComboChartFieldWells) DashboardComboChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardComboChartFieldWells
		return ret
	}).(DashboardComboChartFieldWellsOutput)
}

func (o DashboardComboChartFieldWellsPtrOutput) ComboChartAggregatedFieldWells() DashboardComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartFieldWells) *DashboardComboChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ComboChartAggregatedFieldWells
	}).(DashboardComboChartAggregatedFieldWellsPtrOutput)
}

type DashboardComboChartSortConfiguration struct {
	CategoryItemsLimit *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []DashboardFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *DashboardItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []DashboardFieldSortOptions       `pulumi:"colorSort"`
}

// DashboardComboChartSortConfigurationInput is an input type that accepts DashboardComboChartSortConfigurationArgs and DashboardComboChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardComboChartSortConfigurationInput` via:
//
//	DashboardComboChartSortConfigurationArgs{...}
type DashboardComboChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardComboChartSortConfigurationOutput() DashboardComboChartSortConfigurationOutput
	ToDashboardComboChartSortConfigurationOutputWithContext(context.Context) DashboardComboChartSortConfigurationOutput
}

type DashboardComboChartSortConfigurationArgs struct {
	CategoryItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    DashboardItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          DashboardFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (DashboardComboChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartSortConfiguration)(nil)).Elem()
}

func (i DashboardComboChartSortConfigurationArgs) ToDashboardComboChartSortConfigurationOutput() DashboardComboChartSortConfigurationOutput {
	return i.ToDashboardComboChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardComboChartSortConfigurationArgs) ToDashboardComboChartSortConfigurationOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartSortConfigurationOutput)
}

func (i DashboardComboChartSortConfigurationArgs) ToDashboardComboChartSortConfigurationPtrOutput() DashboardComboChartSortConfigurationPtrOutput {
	return i.ToDashboardComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardComboChartSortConfigurationArgs) ToDashboardComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartSortConfigurationOutput).ToDashboardComboChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardComboChartSortConfigurationPtrInput is an input type that accepts DashboardComboChartSortConfigurationArgs, DashboardComboChartSortConfigurationPtr and DashboardComboChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardComboChartSortConfigurationPtrInput` via:
//
//	        DashboardComboChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardComboChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardComboChartSortConfigurationPtrOutput() DashboardComboChartSortConfigurationPtrOutput
	ToDashboardComboChartSortConfigurationPtrOutputWithContext(context.Context) DashboardComboChartSortConfigurationPtrOutput
}

type dashboardComboChartSortConfigurationPtrType DashboardComboChartSortConfigurationArgs

func DashboardComboChartSortConfigurationPtr(v *DashboardComboChartSortConfigurationArgs) DashboardComboChartSortConfigurationPtrInput {
	return (*dashboardComboChartSortConfigurationPtrType)(v)
}

func (*dashboardComboChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardComboChartSortConfigurationPtrType) ToDashboardComboChartSortConfigurationPtrOutput() DashboardComboChartSortConfigurationPtrOutput {
	return i.ToDashboardComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardComboChartSortConfigurationPtrType) ToDashboardComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartSortConfigurationPtrOutput)
}

type DashboardComboChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardComboChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartSortConfiguration)(nil)).Elem()
}

func (o DashboardComboChartSortConfigurationOutput) ToDashboardComboChartSortConfigurationOutput() DashboardComboChartSortConfigurationOutput {
	return o
}

func (o DashboardComboChartSortConfigurationOutput) ToDashboardComboChartSortConfigurationOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationOutput {
	return o
}

func (o DashboardComboChartSortConfigurationOutput) ToDashboardComboChartSortConfigurationPtrOutput() DashboardComboChartSortConfigurationPtrOutput {
	return o.ToDashboardComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardComboChartSortConfigurationOutput) ToDashboardComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComboChartSortConfiguration) *DashboardComboChartSortConfiguration {
		return &v
	}).(DashboardComboChartSortConfigurationPtrOutput)
}

func (o DashboardComboChartSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComboChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardComboChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardComboChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardComboChartSortConfigurationOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComboChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.ColorItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardComboChartSortConfigurationOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardComboChartSortConfiguration) []DashboardFieldSortOptions { return v.ColorSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardComboChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardComboChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartSortConfiguration)(nil)).Elem()
}

func (o DashboardComboChartSortConfigurationPtrOutput) ToDashboardComboChartSortConfigurationPtrOutput() DashboardComboChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardComboChartSortConfigurationPtrOutput) ToDashboardComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardComboChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardComboChartSortConfigurationPtrOutput) Elem() DashboardComboChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardComboChartSortConfiguration) DashboardComboChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardComboChartSortConfiguration
		return ret
	}).(DashboardComboChartSortConfigurationOutput)
}

func (o DashboardComboChartSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardComboChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardComboChartSortConfigurationPtrOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardComboChartSortConfigurationPtrOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardComboChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardComboChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardComboChartVisualInput is an input type that accepts DashboardComboChartVisualArgs and DashboardComboChartVisualOutput values.
// You can construct a concrete instance of `DashboardComboChartVisualInput` via:
//
//	DashboardComboChartVisualArgs{...}
type DashboardComboChartVisualInput interface {
	pulumi.Input

	ToDashboardComboChartVisualOutput() DashboardComboChartVisualOutput
	ToDashboardComboChartVisualOutputWithContext(context.Context) DashboardComboChartVisualOutput
}

type DashboardComboChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardComboChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardComboChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartVisual)(nil)).Elem()
}

func (i DashboardComboChartVisualArgs) ToDashboardComboChartVisualOutput() DashboardComboChartVisualOutput {
	return i.ToDashboardComboChartVisualOutputWithContext(context.Background())
}

func (i DashboardComboChartVisualArgs) ToDashboardComboChartVisualOutputWithContext(ctx context.Context) DashboardComboChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartVisualOutput)
}

func (i DashboardComboChartVisualArgs) ToDashboardComboChartVisualPtrOutput() DashboardComboChartVisualPtrOutput {
	return i.ToDashboardComboChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardComboChartVisualArgs) ToDashboardComboChartVisualPtrOutputWithContext(ctx context.Context) DashboardComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartVisualOutput).ToDashboardComboChartVisualPtrOutputWithContext(ctx)
}

// DashboardComboChartVisualPtrInput is an input type that accepts DashboardComboChartVisualArgs, DashboardComboChartVisualPtr and DashboardComboChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardComboChartVisualPtrInput` via:
//
//	        DashboardComboChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardComboChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardComboChartVisualPtrOutput() DashboardComboChartVisualPtrOutput
	ToDashboardComboChartVisualPtrOutputWithContext(context.Context) DashboardComboChartVisualPtrOutput
}

type dashboardComboChartVisualPtrType DashboardComboChartVisualArgs

func DashboardComboChartVisualPtr(v *DashboardComboChartVisualArgs) DashboardComboChartVisualPtrInput {
	return (*dashboardComboChartVisualPtrType)(v)
}

func (*dashboardComboChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartVisual)(nil)).Elem()
}

func (i *dashboardComboChartVisualPtrType) ToDashboardComboChartVisualPtrOutput() DashboardComboChartVisualPtrOutput {
	return i.ToDashboardComboChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardComboChartVisualPtrType) ToDashboardComboChartVisualPtrOutputWithContext(ctx context.Context) DashboardComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComboChartVisualPtrOutput)
}

type DashboardComboChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardComboChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComboChartVisual)(nil)).Elem()
}

func (o DashboardComboChartVisualOutput) ToDashboardComboChartVisualOutput() DashboardComboChartVisualOutput {
	return o
}

func (o DashboardComboChartVisualOutput) ToDashboardComboChartVisualOutputWithContext(ctx context.Context) DashboardComboChartVisualOutput {
	return o
}

func (o DashboardComboChartVisualOutput) ToDashboardComboChartVisualPtrOutput() DashboardComboChartVisualPtrOutput {
	return o.ToDashboardComboChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardComboChartVisualOutput) ToDashboardComboChartVisualPtrOutputWithContext(ctx context.Context) DashboardComboChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComboChartVisual) *DashboardComboChartVisual {
		return &v
	}).(DashboardComboChartVisualPtrOutput)
}

func (o DashboardComboChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardComboChartVisualOutput) ChartConfiguration() DashboardComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) *DashboardComboChartConfiguration { return v.ChartConfiguration }).(DashboardComboChartConfigurationPtrOutput)
}

func (o DashboardComboChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardComboChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardComboChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardComboChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardComboChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardComboChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardComboChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComboChartVisual)(nil)).Elem()
}

func (o DashboardComboChartVisualPtrOutput) ToDashboardComboChartVisualPtrOutput() DashboardComboChartVisualPtrOutput {
	return o
}

func (o DashboardComboChartVisualPtrOutput) ToDashboardComboChartVisualPtrOutputWithContext(ctx context.Context) DashboardComboChartVisualPtrOutput {
	return o
}

func (o DashboardComboChartVisualPtrOutput) Elem() DashboardComboChartVisualOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) DashboardComboChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardComboChartVisual
		return ret
	}).(DashboardComboChartVisualOutput)
}

func (o DashboardComboChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardComboChartVisualPtrOutput) ChartConfiguration() DashboardComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) *DashboardComboChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardComboChartConfigurationPtrOutput)
}

func (o DashboardComboChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardComboChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardComboChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardComboChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardComboChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardComparisonConfiguration struct {
	ComparisonFormat *DashboardComparisonFormatConfiguration `pulumi:"comparisonFormat"`
	ComparisonMethod *DashboardComparisonMethod              `pulumi:"comparisonMethod"`
}

// DashboardComparisonConfigurationInput is an input type that accepts DashboardComparisonConfigurationArgs and DashboardComparisonConfigurationOutput values.
// You can construct a concrete instance of `DashboardComparisonConfigurationInput` via:
//
//	DashboardComparisonConfigurationArgs{...}
type DashboardComparisonConfigurationInput interface {
	pulumi.Input

	ToDashboardComparisonConfigurationOutput() DashboardComparisonConfigurationOutput
	ToDashboardComparisonConfigurationOutputWithContext(context.Context) DashboardComparisonConfigurationOutput
}

type DashboardComparisonConfigurationArgs struct {
	ComparisonFormat DashboardComparisonFormatConfigurationPtrInput `pulumi:"comparisonFormat"`
	ComparisonMethod DashboardComparisonMethodPtrInput              `pulumi:"comparisonMethod"`
}

func (DashboardComparisonConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonConfiguration)(nil)).Elem()
}

func (i DashboardComparisonConfigurationArgs) ToDashboardComparisonConfigurationOutput() DashboardComparisonConfigurationOutput {
	return i.ToDashboardComparisonConfigurationOutputWithContext(context.Background())
}

func (i DashboardComparisonConfigurationArgs) ToDashboardComparisonConfigurationOutputWithContext(ctx context.Context) DashboardComparisonConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonConfigurationOutput)
}

func (i DashboardComparisonConfigurationArgs) ToDashboardComparisonConfigurationPtrOutput() DashboardComparisonConfigurationPtrOutput {
	return i.ToDashboardComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardComparisonConfigurationArgs) ToDashboardComparisonConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonConfigurationOutput).ToDashboardComparisonConfigurationPtrOutputWithContext(ctx)
}

// DashboardComparisonConfigurationPtrInput is an input type that accepts DashboardComparisonConfigurationArgs, DashboardComparisonConfigurationPtr and DashboardComparisonConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardComparisonConfigurationPtrInput` via:
//
//	        DashboardComparisonConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardComparisonConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardComparisonConfigurationPtrOutput() DashboardComparisonConfigurationPtrOutput
	ToDashboardComparisonConfigurationPtrOutputWithContext(context.Context) DashboardComparisonConfigurationPtrOutput
}

type dashboardComparisonConfigurationPtrType DashboardComparisonConfigurationArgs

func DashboardComparisonConfigurationPtr(v *DashboardComparisonConfigurationArgs) DashboardComparisonConfigurationPtrInput {
	return (*dashboardComparisonConfigurationPtrType)(v)
}

func (*dashboardComparisonConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComparisonConfiguration)(nil)).Elem()
}

func (i *dashboardComparisonConfigurationPtrType) ToDashboardComparisonConfigurationPtrOutput() DashboardComparisonConfigurationPtrOutput {
	return i.ToDashboardComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardComparisonConfigurationPtrType) ToDashboardComparisonConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonConfigurationPtrOutput)
}

type DashboardComparisonConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardComparisonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonConfiguration)(nil)).Elem()
}

func (o DashboardComparisonConfigurationOutput) ToDashboardComparisonConfigurationOutput() DashboardComparisonConfigurationOutput {
	return o
}

func (o DashboardComparisonConfigurationOutput) ToDashboardComparisonConfigurationOutputWithContext(ctx context.Context) DashboardComparisonConfigurationOutput {
	return o
}

func (o DashboardComparisonConfigurationOutput) ToDashboardComparisonConfigurationPtrOutput() DashboardComparisonConfigurationPtrOutput {
	return o.ToDashboardComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardComparisonConfigurationOutput) ToDashboardComparisonConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComparisonConfiguration) *DashboardComparisonConfiguration {
		return &v
	}).(DashboardComparisonConfigurationPtrOutput)
}

func (o DashboardComparisonConfigurationOutput) ComparisonFormat() DashboardComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComparisonConfiguration) *DashboardComparisonFormatConfiguration {
		return v.ComparisonFormat
	}).(DashboardComparisonFormatConfigurationPtrOutput)
}

func (o DashboardComparisonConfigurationOutput) ComparisonMethod() DashboardComparisonMethodPtrOutput {
	return o.ApplyT(func(v DashboardComparisonConfiguration) *DashboardComparisonMethod { return v.ComparisonMethod }).(DashboardComparisonMethodPtrOutput)
}

type DashboardComparisonConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardComparisonConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComparisonConfiguration)(nil)).Elem()
}

func (o DashboardComparisonConfigurationPtrOutput) ToDashboardComparisonConfigurationPtrOutput() DashboardComparisonConfigurationPtrOutput {
	return o
}

func (o DashboardComparisonConfigurationPtrOutput) ToDashboardComparisonConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonConfigurationPtrOutput {
	return o
}

func (o DashboardComparisonConfigurationPtrOutput) Elem() DashboardComparisonConfigurationOutput {
	return o.ApplyT(func(v *DashboardComparisonConfiguration) DashboardComparisonConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardComparisonConfiguration
		return ret
	}).(DashboardComparisonConfigurationOutput)
}

func (o DashboardComparisonConfigurationPtrOutput) ComparisonFormat() DashboardComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComparisonConfiguration) *DashboardComparisonFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.ComparisonFormat
	}).(DashboardComparisonFormatConfigurationPtrOutput)
}

func (o DashboardComparisonConfigurationPtrOutput) ComparisonMethod() DashboardComparisonMethodPtrOutput {
	return o.ApplyT(func(v *DashboardComparisonConfiguration) *DashboardComparisonMethod {
		if v == nil {
			return nil
		}
		return v.ComparisonMethod
	}).(DashboardComparisonMethodPtrOutput)
}

type DashboardComparisonFormatConfiguration struct {
	NumberDisplayFormatConfiguration     *DashboardNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *DashboardPercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// DashboardComparisonFormatConfigurationInput is an input type that accepts DashboardComparisonFormatConfigurationArgs and DashboardComparisonFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardComparisonFormatConfigurationInput` via:
//
//	DashboardComparisonFormatConfigurationArgs{...}
type DashboardComparisonFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardComparisonFormatConfigurationOutput() DashboardComparisonFormatConfigurationOutput
	ToDashboardComparisonFormatConfigurationOutputWithContext(context.Context) DashboardComparisonFormatConfigurationOutput
}

type DashboardComparisonFormatConfigurationArgs struct {
	NumberDisplayFormatConfiguration     DashboardNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration DashboardPercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (DashboardComparisonFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonFormatConfiguration)(nil)).Elem()
}

func (i DashboardComparisonFormatConfigurationArgs) ToDashboardComparisonFormatConfigurationOutput() DashboardComparisonFormatConfigurationOutput {
	return i.ToDashboardComparisonFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardComparisonFormatConfigurationArgs) ToDashboardComparisonFormatConfigurationOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonFormatConfigurationOutput)
}

func (i DashboardComparisonFormatConfigurationArgs) ToDashboardComparisonFormatConfigurationPtrOutput() DashboardComparisonFormatConfigurationPtrOutput {
	return i.ToDashboardComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardComparisonFormatConfigurationArgs) ToDashboardComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonFormatConfigurationOutput).ToDashboardComparisonFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardComparisonFormatConfigurationPtrInput is an input type that accepts DashboardComparisonFormatConfigurationArgs, DashboardComparisonFormatConfigurationPtr and DashboardComparisonFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardComparisonFormatConfigurationPtrInput` via:
//
//	        DashboardComparisonFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardComparisonFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardComparisonFormatConfigurationPtrOutput() DashboardComparisonFormatConfigurationPtrOutput
	ToDashboardComparisonFormatConfigurationPtrOutputWithContext(context.Context) DashboardComparisonFormatConfigurationPtrOutput
}

type dashboardComparisonFormatConfigurationPtrType DashboardComparisonFormatConfigurationArgs

func DashboardComparisonFormatConfigurationPtr(v *DashboardComparisonFormatConfigurationArgs) DashboardComparisonFormatConfigurationPtrInput {
	return (*dashboardComparisonFormatConfigurationPtrType)(v)
}

func (*dashboardComparisonFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComparisonFormatConfiguration)(nil)).Elem()
}

func (i *dashboardComparisonFormatConfigurationPtrType) ToDashboardComparisonFormatConfigurationPtrOutput() DashboardComparisonFormatConfigurationPtrOutput {
	return i.ToDashboardComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardComparisonFormatConfigurationPtrType) ToDashboardComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComparisonFormatConfigurationPtrOutput)
}

type DashboardComparisonFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardComparisonFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComparisonFormatConfiguration)(nil)).Elem()
}

func (o DashboardComparisonFormatConfigurationOutput) ToDashboardComparisonFormatConfigurationOutput() DashboardComparisonFormatConfigurationOutput {
	return o
}

func (o DashboardComparisonFormatConfigurationOutput) ToDashboardComparisonFormatConfigurationOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationOutput {
	return o
}

func (o DashboardComparisonFormatConfigurationOutput) ToDashboardComparisonFormatConfigurationPtrOutput() DashboardComparisonFormatConfigurationPtrOutput {
	return o.ToDashboardComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardComparisonFormatConfigurationOutput) ToDashboardComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardComparisonFormatConfiguration) *DashboardComparisonFormatConfiguration {
		return &v
	}).(DashboardComparisonFormatConfigurationPtrOutput)
}

func (o DashboardComparisonFormatConfigurationOutput) NumberDisplayFormatConfiguration() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComparisonFormatConfiguration) *DashboardNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

func (o DashboardComparisonFormatConfigurationOutput) PercentageDisplayFormatConfiguration() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardComparisonFormatConfiguration) *DashboardPercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

type DashboardComparisonFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardComparisonFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardComparisonFormatConfiguration)(nil)).Elem()
}

func (o DashboardComparisonFormatConfigurationPtrOutput) ToDashboardComparisonFormatConfigurationPtrOutput() DashboardComparisonFormatConfigurationPtrOutput {
	return o
}

func (o DashboardComparisonFormatConfigurationPtrOutput) ToDashboardComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardComparisonFormatConfigurationPtrOutput {
	return o
}

func (o DashboardComparisonFormatConfigurationPtrOutput) Elem() DashboardComparisonFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardComparisonFormatConfiguration) DashboardComparisonFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardComparisonFormatConfiguration
		return ret
	}).(DashboardComparisonFormatConfigurationOutput)
}

func (o DashboardComparisonFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComparisonFormatConfiguration) *DashboardNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

func (o DashboardComparisonFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardComparisonFormatConfiguration) *DashboardPercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

type DashboardComputation struct {
	Forecast         *DashboardForecastComputation         `pulumi:"forecast"`
	GrowthRate       *DashboardGrowthRateComputation       `pulumi:"growthRate"`
	MaximumMinimum   *DashboardMaximumMinimumComputation   `pulumi:"maximumMinimum"`
	MetricComparison *DashboardMetricComparisonComputation `pulumi:"metricComparison"`
	PeriodOverPeriod *DashboardPeriodOverPeriodComputation `pulumi:"periodOverPeriod"`
	PeriodToDate     *DashboardPeriodToDateComputation     `pulumi:"periodToDate"`
	TopBottomMovers  *DashboardTopBottomMoversComputation  `pulumi:"topBottomMovers"`
	TopBottomRanked  *DashboardTopBottomRankedComputation  `pulumi:"topBottomRanked"`
	TotalAggregation *DashboardTotalAggregationComputation `pulumi:"totalAggregation"`
	UniqueValues     *DashboardUniqueValuesComputation     `pulumi:"uniqueValues"`
}

// DashboardComputationInput is an input type that accepts DashboardComputationArgs and DashboardComputationOutput values.
// You can construct a concrete instance of `DashboardComputationInput` via:
//
//	DashboardComputationArgs{...}
type DashboardComputationInput interface {
	pulumi.Input

	ToDashboardComputationOutput() DashboardComputationOutput
	ToDashboardComputationOutputWithContext(context.Context) DashboardComputationOutput
}

type DashboardComputationArgs struct {
	Forecast         DashboardForecastComputationPtrInput         `pulumi:"forecast"`
	GrowthRate       DashboardGrowthRateComputationPtrInput       `pulumi:"growthRate"`
	MaximumMinimum   DashboardMaximumMinimumComputationPtrInput   `pulumi:"maximumMinimum"`
	MetricComparison DashboardMetricComparisonComputationPtrInput `pulumi:"metricComparison"`
	PeriodOverPeriod DashboardPeriodOverPeriodComputationPtrInput `pulumi:"periodOverPeriod"`
	PeriodToDate     DashboardPeriodToDateComputationPtrInput     `pulumi:"periodToDate"`
	TopBottomMovers  DashboardTopBottomMoversComputationPtrInput  `pulumi:"topBottomMovers"`
	TopBottomRanked  DashboardTopBottomRankedComputationPtrInput  `pulumi:"topBottomRanked"`
	TotalAggregation DashboardTotalAggregationComputationPtrInput `pulumi:"totalAggregation"`
	UniqueValues     DashboardUniqueValuesComputationPtrInput     `pulumi:"uniqueValues"`
}

func (DashboardComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComputation)(nil)).Elem()
}

func (i DashboardComputationArgs) ToDashboardComputationOutput() DashboardComputationOutput {
	return i.ToDashboardComputationOutputWithContext(context.Background())
}

func (i DashboardComputationArgs) ToDashboardComputationOutputWithContext(ctx context.Context) DashboardComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComputationOutput)
}

// DashboardComputationArrayInput is an input type that accepts DashboardComputationArray and DashboardComputationArrayOutput values.
// You can construct a concrete instance of `DashboardComputationArrayInput` via:
//
//	DashboardComputationArray{ DashboardComputationArgs{...} }
type DashboardComputationArrayInput interface {
	pulumi.Input

	ToDashboardComputationArrayOutput() DashboardComputationArrayOutput
	ToDashboardComputationArrayOutputWithContext(context.Context) DashboardComputationArrayOutput
}

type DashboardComputationArray []DashboardComputationInput

func (DashboardComputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardComputation)(nil)).Elem()
}

func (i DashboardComputationArray) ToDashboardComputationArrayOutput() DashboardComputationArrayOutput {
	return i.ToDashboardComputationArrayOutputWithContext(context.Background())
}

func (i DashboardComputationArray) ToDashboardComputationArrayOutputWithContext(ctx context.Context) DashboardComputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardComputationArrayOutput)
}

type DashboardComputationOutput struct{ *pulumi.OutputState }

func (DashboardComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardComputation)(nil)).Elem()
}

func (o DashboardComputationOutput) ToDashboardComputationOutput() DashboardComputationOutput {
	return o
}

func (o DashboardComputationOutput) ToDashboardComputationOutputWithContext(ctx context.Context) DashboardComputationOutput {
	return o
}

func (o DashboardComputationOutput) Forecast() DashboardForecastComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardForecastComputation { return v.Forecast }).(DashboardForecastComputationPtrOutput)
}

func (o DashboardComputationOutput) GrowthRate() DashboardGrowthRateComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardGrowthRateComputation { return v.GrowthRate }).(DashboardGrowthRateComputationPtrOutput)
}

func (o DashboardComputationOutput) MaximumMinimum() DashboardMaximumMinimumComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardMaximumMinimumComputation { return v.MaximumMinimum }).(DashboardMaximumMinimumComputationPtrOutput)
}

func (o DashboardComputationOutput) MetricComparison() DashboardMetricComparisonComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardMetricComparisonComputation { return v.MetricComparison }).(DashboardMetricComparisonComputationPtrOutput)
}

func (o DashboardComputationOutput) PeriodOverPeriod() DashboardPeriodOverPeriodComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardPeriodOverPeriodComputation { return v.PeriodOverPeriod }).(DashboardPeriodOverPeriodComputationPtrOutput)
}

func (o DashboardComputationOutput) PeriodToDate() DashboardPeriodToDateComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardPeriodToDateComputation { return v.PeriodToDate }).(DashboardPeriodToDateComputationPtrOutput)
}

func (o DashboardComputationOutput) TopBottomMovers() DashboardTopBottomMoversComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardTopBottomMoversComputation { return v.TopBottomMovers }).(DashboardTopBottomMoversComputationPtrOutput)
}

func (o DashboardComputationOutput) TopBottomRanked() DashboardTopBottomRankedComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardTopBottomRankedComputation { return v.TopBottomRanked }).(DashboardTopBottomRankedComputationPtrOutput)
}

func (o DashboardComputationOutput) TotalAggregation() DashboardTotalAggregationComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardTotalAggregationComputation { return v.TotalAggregation }).(DashboardTotalAggregationComputationPtrOutput)
}

func (o DashboardComputationOutput) UniqueValues() DashboardUniqueValuesComputationPtrOutput {
	return o.ApplyT(func(v DashboardComputation) *DashboardUniqueValuesComputation { return v.UniqueValues }).(DashboardUniqueValuesComputationPtrOutput)
}

type DashboardComputationArrayOutput struct{ *pulumi.OutputState }

func (DashboardComputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardComputation)(nil)).Elem()
}

func (o DashboardComputationArrayOutput) ToDashboardComputationArrayOutput() DashboardComputationArrayOutput {
	return o
}

func (o DashboardComputationArrayOutput) ToDashboardComputationArrayOutputWithContext(ctx context.Context) DashboardComputationArrayOutput {
	return o
}

func (o DashboardComputationArrayOutput) Index(i pulumi.IntInput) DashboardComputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardComputation {
		return vs[0].([]DashboardComputation)[vs[1].(int)]
	}).(DashboardComputationOutput)
}

type DashboardConditionalFormattingColor struct {
	Gradient *DashboardConditionalFormattingGradientColor `pulumi:"gradient"`
	Solid    *DashboardConditionalFormattingSolidColor    `pulumi:"solid"`
}

// DashboardConditionalFormattingColorInput is an input type that accepts DashboardConditionalFormattingColorArgs and DashboardConditionalFormattingColorOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingColorInput` via:
//
//	DashboardConditionalFormattingColorArgs{...}
type DashboardConditionalFormattingColorInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingColorOutput() DashboardConditionalFormattingColorOutput
	ToDashboardConditionalFormattingColorOutputWithContext(context.Context) DashboardConditionalFormattingColorOutput
}

type DashboardConditionalFormattingColorArgs struct {
	Gradient DashboardConditionalFormattingGradientColorPtrInput `pulumi:"gradient"`
	Solid    DashboardConditionalFormattingSolidColorPtrInput    `pulumi:"solid"`
}

func (DashboardConditionalFormattingColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingColor)(nil)).Elem()
}

func (i DashboardConditionalFormattingColorArgs) ToDashboardConditionalFormattingColorOutput() DashboardConditionalFormattingColorOutput {
	return i.ToDashboardConditionalFormattingColorOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingColorArgs) ToDashboardConditionalFormattingColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingColorOutput)
}

func (i DashboardConditionalFormattingColorArgs) ToDashboardConditionalFormattingColorPtrOutput() DashboardConditionalFormattingColorPtrOutput {
	return i.ToDashboardConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingColorArgs) ToDashboardConditionalFormattingColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingColorOutput).ToDashboardConditionalFormattingColorPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingColorPtrInput is an input type that accepts DashboardConditionalFormattingColorArgs, DashboardConditionalFormattingColorPtr and DashboardConditionalFormattingColorPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingColorPtrInput` via:
//
//	        DashboardConditionalFormattingColorArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingColorPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingColorPtrOutput() DashboardConditionalFormattingColorPtrOutput
	ToDashboardConditionalFormattingColorPtrOutputWithContext(context.Context) DashboardConditionalFormattingColorPtrOutput
}

type dashboardConditionalFormattingColorPtrType DashboardConditionalFormattingColorArgs

func DashboardConditionalFormattingColorPtr(v *DashboardConditionalFormattingColorArgs) DashboardConditionalFormattingColorPtrInput {
	return (*dashboardConditionalFormattingColorPtrType)(v)
}

func (*dashboardConditionalFormattingColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingColor)(nil)).Elem()
}

func (i *dashboardConditionalFormattingColorPtrType) ToDashboardConditionalFormattingColorPtrOutput() DashboardConditionalFormattingColorPtrOutput {
	return i.ToDashboardConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingColorPtrType) ToDashboardConditionalFormattingColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardConditionalFormattingColorOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingColorOutput) ToDashboardConditionalFormattingColorOutput() DashboardConditionalFormattingColorOutput {
	return o
}

func (o DashboardConditionalFormattingColorOutput) ToDashboardConditionalFormattingColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorOutput {
	return o
}

func (o DashboardConditionalFormattingColorOutput) ToDashboardConditionalFormattingColorPtrOutput() DashboardConditionalFormattingColorPtrOutput {
	return o.ToDashboardConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingColorOutput) ToDashboardConditionalFormattingColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingColor) *DashboardConditionalFormattingColor {
		return &v
	}).(DashboardConditionalFormattingColorPtrOutput)
}

func (o DashboardConditionalFormattingColorOutput) Gradient() DashboardConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingColor) *DashboardConditionalFormattingGradientColor {
		return v.Gradient
	}).(DashboardConditionalFormattingGradientColorPtrOutput)
}

func (o DashboardConditionalFormattingColorOutput) Solid() DashboardConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingColor) *DashboardConditionalFormattingSolidColor { return v.Solid }).(DashboardConditionalFormattingSolidColorPtrOutput)
}

type DashboardConditionalFormattingColorPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingColorPtrOutput) ToDashboardConditionalFormattingColorPtrOutput() DashboardConditionalFormattingColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingColorPtrOutput) ToDashboardConditionalFormattingColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingColorPtrOutput) Elem() DashboardConditionalFormattingColorOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingColor) DashboardConditionalFormattingColor {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingColor
		return ret
	}).(DashboardConditionalFormattingColorOutput)
}

func (o DashboardConditionalFormattingColorPtrOutput) Gradient() DashboardConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingColor) *DashboardConditionalFormattingGradientColor {
		if v == nil {
			return nil
		}
		return v.Gradient
	}).(DashboardConditionalFormattingGradientColorPtrOutput)
}

func (o DashboardConditionalFormattingColorPtrOutput) Solid() DashboardConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingColor) *DashboardConditionalFormattingSolidColor {
		if v == nil {
			return nil
		}
		return v.Solid
	}).(DashboardConditionalFormattingSolidColorPtrOutput)
}

type DashboardConditionalFormattingCustomIconCondition struct {
	Color                *string                                                 `pulumi:"color"`
	DisplayConfiguration *DashboardConditionalFormattingIconDisplayConfiguration `pulumi:"displayConfiguration"`
	Expression           string                                                  `pulumi:"expression"`
	IconOptions          DashboardConditionalFormattingCustomIconOptions         `pulumi:"iconOptions"`
}

// DashboardConditionalFormattingCustomIconConditionInput is an input type that accepts DashboardConditionalFormattingCustomIconConditionArgs and DashboardConditionalFormattingCustomIconConditionOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingCustomIconConditionInput` via:
//
//	DashboardConditionalFormattingCustomIconConditionArgs{...}
type DashboardConditionalFormattingCustomIconConditionInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingCustomIconConditionOutput() DashboardConditionalFormattingCustomIconConditionOutput
	ToDashboardConditionalFormattingCustomIconConditionOutputWithContext(context.Context) DashboardConditionalFormattingCustomIconConditionOutput
}

type DashboardConditionalFormattingCustomIconConditionArgs struct {
	Color                pulumi.StringPtrInput                                          `pulumi:"color"`
	DisplayConfiguration DashboardConditionalFormattingIconDisplayConfigurationPtrInput `pulumi:"displayConfiguration"`
	Expression           pulumi.StringInput                                             `pulumi:"expression"`
	IconOptions          DashboardConditionalFormattingCustomIconOptionsInput           `pulumi:"iconOptions"`
}

func (DashboardConditionalFormattingCustomIconConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i DashboardConditionalFormattingCustomIconConditionArgs) ToDashboardConditionalFormattingCustomIconConditionOutput() DashboardConditionalFormattingCustomIconConditionOutput {
	return i.ToDashboardConditionalFormattingCustomIconConditionOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingCustomIconConditionArgs) ToDashboardConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconConditionOutput)
}

func (i DashboardConditionalFormattingCustomIconConditionArgs) ToDashboardConditionalFormattingCustomIconConditionPtrOutput() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingCustomIconConditionArgs) ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconConditionOutput).ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingCustomIconConditionPtrInput is an input type that accepts DashboardConditionalFormattingCustomIconConditionArgs, DashboardConditionalFormattingCustomIconConditionPtr and DashboardConditionalFormattingCustomIconConditionPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingCustomIconConditionPtrInput` via:
//
//	        DashboardConditionalFormattingCustomIconConditionArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingCustomIconConditionPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingCustomIconConditionPtrOutput() DashboardConditionalFormattingCustomIconConditionPtrOutput
	ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Context) DashboardConditionalFormattingCustomIconConditionPtrOutput
}

type dashboardConditionalFormattingCustomIconConditionPtrType DashboardConditionalFormattingCustomIconConditionArgs

func DashboardConditionalFormattingCustomIconConditionPtr(v *DashboardConditionalFormattingCustomIconConditionArgs) DashboardConditionalFormattingCustomIconConditionPtrInput {
	return (*dashboardConditionalFormattingCustomIconConditionPtrType)(v)
}

func (*dashboardConditionalFormattingCustomIconConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i *dashboardConditionalFormattingCustomIconConditionPtrType) ToDashboardConditionalFormattingCustomIconConditionPtrOutput() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingCustomIconConditionPtrType) ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconConditionPtrOutput)
}

type DashboardConditionalFormattingCustomIconConditionOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingCustomIconConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) ToDashboardConditionalFormattingCustomIconConditionOutput() DashboardConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) ToDashboardConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) ToDashboardConditionalFormattingCustomIconConditionPtrOutput() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o.ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingCustomIconCondition) *DashboardConditionalFormattingCustomIconCondition {
		return &v
	}).(DashboardConditionalFormattingCustomIconConditionPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconCondition) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) DisplayConfiguration() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconCondition) *DashboardConditionalFormattingIconDisplayConfiguration {
		return v.DisplayConfiguration
	}).(DashboardConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionOutput) IconOptions() DashboardConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconCondition) DashboardConditionalFormattingCustomIconOptions {
		return v.IconOptions
	}).(DashboardConditionalFormattingCustomIconOptionsOutput)
}

type DashboardConditionalFormattingCustomIconConditionPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingCustomIconConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) ToDashboardConditionalFormattingCustomIconConditionPtrOutput() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) ToDashboardConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) Elem() DashboardConditionalFormattingCustomIconConditionOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconCondition) DashboardConditionalFormattingCustomIconCondition {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingCustomIconCondition
		return ret
	}).(DashboardConditionalFormattingCustomIconConditionOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) DisplayConfiguration() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconCondition) *DashboardConditionalFormattingIconDisplayConfiguration {
		if v == nil {
			return nil
		}
		return v.DisplayConfiguration
	}).(DashboardConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconConditionPtrOutput) IconOptions() DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconCondition) *DashboardConditionalFormattingCustomIconOptions {
		if v == nil {
			return nil
		}
		return &v.IconOptions
	}).(DashboardConditionalFormattingCustomIconOptionsPtrOutput)
}

type DashboardConditionalFormattingCustomIconOptions struct {
	Icon        *DashboardIcon `pulumi:"icon"`
	UnicodeIcon *string        `pulumi:"unicodeIcon"`
}

// DashboardConditionalFormattingCustomIconOptionsInput is an input type that accepts DashboardConditionalFormattingCustomIconOptionsArgs and DashboardConditionalFormattingCustomIconOptionsOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingCustomIconOptionsInput` via:
//
//	DashboardConditionalFormattingCustomIconOptionsArgs{...}
type DashboardConditionalFormattingCustomIconOptionsInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingCustomIconOptionsOutput() DashboardConditionalFormattingCustomIconOptionsOutput
	ToDashboardConditionalFormattingCustomIconOptionsOutputWithContext(context.Context) DashboardConditionalFormattingCustomIconOptionsOutput
}

type DashboardConditionalFormattingCustomIconOptionsArgs struct {
	Icon        DashboardIconPtrInput `pulumi:"icon"`
	UnicodeIcon pulumi.StringPtrInput `pulumi:"unicodeIcon"`
}

func (DashboardConditionalFormattingCustomIconOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i DashboardConditionalFormattingCustomIconOptionsArgs) ToDashboardConditionalFormattingCustomIconOptionsOutput() DashboardConditionalFormattingCustomIconOptionsOutput {
	return i.ToDashboardConditionalFormattingCustomIconOptionsOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingCustomIconOptionsArgs) ToDashboardConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconOptionsOutput)
}

func (i DashboardConditionalFormattingCustomIconOptionsArgs) ToDashboardConditionalFormattingCustomIconOptionsPtrOutput() DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingCustomIconOptionsArgs) ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconOptionsOutput).ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingCustomIconOptionsPtrInput is an input type that accepts DashboardConditionalFormattingCustomIconOptionsArgs, DashboardConditionalFormattingCustomIconOptionsPtr and DashboardConditionalFormattingCustomIconOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingCustomIconOptionsPtrInput` via:
//
//	        DashboardConditionalFormattingCustomIconOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingCustomIconOptionsPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingCustomIconOptionsPtrOutput() DashboardConditionalFormattingCustomIconOptionsPtrOutput
	ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Context) DashboardConditionalFormattingCustomIconOptionsPtrOutput
}

type dashboardConditionalFormattingCustomIconOptionsPtrType DashboardConditionalFormattingCustomIconOptionsArgs

func DashboardConditionalFormattingCustomIconOptionsPtr(v *DashboardConditionalFormattingCustomIconOptionsArgs) DashboardConditionalFormattingCustomIconOptionsPtrInput {
	return (*dashboardConditionalFormattingCustomIconOptionsPtrType)(v)
}

func (*dashboardConditionalFormattingCustomIconOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i *dashboardConditionalFormattingCustomIconOptionsPtrType) ToDashboardConditionalFormattingCustomIconOptionsPtrOutput() DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingCustomIconOptionsPtrType) ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingCustomIconOptionsPtrOutput)
}

type DashboardConditionalFormattingCustomIconOptionsOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingCustomIconOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) ToDashboardConditionalFormattingCustomIconOptionsOutput() DashboardConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) ToDashboardConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) ToDashboardConditionalFormattingCustomIconOptionsPtrOutput() DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingCustomIconOptions) *DashboardConditionalFormattingCustomIconOptions {
		return &v
	}).(DashboardConditionalFormattingCustomIconOptionsPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) Icon() DashboardIconPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconOptions) *DashboardIcon { return v.Icon }).(DashboardIconPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconOptionsOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingCustomIconOptions) *string { return v.UnicodeIcon }).(pulumi.StringPtrOutput)
}

type DashboardConditionalFormattingCustomIconOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingCustomIconOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o DashboardConditionalFormattingCustomIconOptionsPtrOutput) ToDashboardConditionalFormattingCustomIconOptionsPtrOutput() DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconOptionsPtrOutput) ToDashboardConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o DashboardConditionalFormattingCustomIconOptionsPtrOutput) Elem() DashboardConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconOptions) DashboardConditionalFormattingCustomIconOptions {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingCustomIconOptions
		return ret
	}).(DashboardConditionalFormattingCustomIconOptionsOutput)
}

func (o DashboardConditionalFormattingCustomIconOptionsPtrOutput) Icon() DashboardIconPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconOptions) *DashboardIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(DashboardIconPtrOutput)
}

func (o DashboardConditionalFormattingCustomIconOptionsPtrOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingCustomIconOptions) *string {
		if v == nil {
			return nil
		}
		return v.UnicodeIcon
	}).(pulumi.StringPtrOutput)
}

type DashboardConditionalFormattingGradientColor struct {
	Color      DashboardGradientColor `pulumi:"color"`
	Expression string                 `pulumi:"expression"`
}

// DashboardConditionalFormattingGradientColorInput is an input type that accepts DashboardConditionalFormattingGradientColorArgs and DashboardConditionalFormattingGradientColorOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingGradientColorInput` via:
//
//	DashboardConditionalFormattingGradientColorArgs{...}
type DashboardConditionalFormattingGradientColorInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingGradientColorOutput() DashboardConditionalFormattingGradientColorOutput
	ToDashboardConditionalFormattingGradientColorOutputWithContext(context.Context) DashboardConditionalFormattingGradientColorOutput
}

type DashboardConditionalFormattingGradientColorArgs struct {
	Color      DashboardGradientColorInput `pulumi:"color"`
	Expression pulumi.StringInput          `pulumi:"expression"`
}

func (DashboardConditionalFormattingGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingGradientColor)(nil)).Elem()
}

func (i DashboardConditionalFormattingGradientColorArgs) ToDashboardConditionalFormattingGradientColorOutput() DashboardConditionalFormattingGradientColorOutput {
	return i.ToDashboardConditionalFormattingGradientColorOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingGradientColorArgs) ToDashboardConditionalFormattingGradientColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingGradientColorOutput)
}

func (i DashboardConditionalFormattingGradientColorArgs) ToDashboardConditionalFormattingGradientColorPtrOutput() DashboardConditionalFormattingGradientColorPtrOutput {
	return i.ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingGradientColorArgs) ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingGradientColorOutput).ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingGradientColorPtrInput is an input type that accepts DashboardConditionalFormattingGradientColorArgs, DashboardConditionalFormattingGradientColorPtr and DashboardConditionalFormattingGradientColorPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingGradientColorPtrInput` via:
//
//	        DashboardConditionalFormattingGradientColorArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingGradientColorPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingGradientColorPtrOutput() DashboardConditionalFormattingGradientColorPtrOutput
	ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(context.Context) DashboardConditionalFormattingGradientColorPtrOutput
}

type dashboardConditionalFormattingGradientColorPtrType DashboardConditionalFormattingGradientColorArgs

func DashboardConditionalFormattingGradientColorPtr(v *DashboardConditionalFormattingGradientColorArgs) DashboardConditionalFormattingGradientColorPtrInput {
	return (*dashboardConditionalFormattingGradientColorPtrType)(v)
}

func (*dashboardConditionalFormattingGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingGradientColor)(nil)).Elem()
}

func (i *dashboardConditionalFormattingGradientColorPtrType) ToDashboardConditionalFormattingGradientColorPtrOutput() DashboardConditionalFormattingGradientColorPtrOutput {
	return i.ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingGradientColorPtrType) ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingGradientColorPtrOutput)
}

type DashboardConditionalFormattingGradientColorOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingGradientColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingGradientColorOutput) ToDashboardConditionalFormattingGradientColorOutput() DashboardConditionalFormattingGradientColorOutput {
	return o
}

func (o DashboardConditionalFormattingGradientColorOutput) ToDashboardConditionalFormattingGradientColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorOutput {
	return o
}

func (o DashboardConditionalFormattingGradientColorOutput) ToDashboardConditionalFormattingGradientColorPtrOutput() DashboardConditionalFormattingGradientColorPtrOutput {
	return o.ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingGradientColorOutput) ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingGradientColor) *DashboardConditionalFormattingGradientColor {
		return &v
	}).(DashboardConditionalFormattingGradientColorPtrOutput)
}

func (o DashboardConditionalFormattingGradientColorOutput) Color() DashboardGradientColorOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingGradientColor) DashboardGradientColor { return v.Color }).(DashboardGradientColorOutput)
}

func (o DashboardConditionalFormattingGradientColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingGradientColor) string { return v.Expression }).(pulumi.StringOutput)
}

type DashboardConditionalFormattingGradientColorPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingGradientColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingGradientColorPtrOutput) ToDashboardConditionalFormattingGradientColorPtrOutput() DashboardConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingGradientColorPtrOutput) ToDashboardConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingGradientColorPtrOutput) Elem() DashboardConditionalFormattingGradientColorOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingGradientColor) DashboardConditionalFormattingGradientColor {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingGradientColor
		return ret
	}).(DashboardConditionalFormattingGradientColorOutput)
}

func (o DashboardConditionalFormattingGradientColorPtrOutput) Color() DashboardGradientColorPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingGradientColor) *DashboardGradientColor {
		if v == nil {
			return nil
		}
		return &v.Color
	}).(DashboardGradientColorPtrOutput)
}

func (o DashboardConditionalFormattingGradientColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingGradientColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type DashboardConditionalFormattingIcon struct {
	CustomCondition *DashboardConditionalFormattingCustomIconCondition `pulumi:"customCondition"`
	IconSet         *DashboardConditionalFormattingIconSet             `pulumi:"iconSet"`
}

// DashboardConditionalFormattingIconInput is an input type that accepts DashboardConditionalFormattingIconArgs and DashboardConditionalFormattingIconOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconInput` via:
//
//	DashboardConditionalFormattingIconArgs{...}
type DashboardConditionalFormattingIconInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconOutput() DashboardConditionalFormattingIconOutput
	ToDashboardConditionalFormattingIconOutputWithContext(context.Context) DashboardConditionalFormattingIconOutput
}

type DashboardConditionalFormattingIconArgs struct {
	CustomCondition DashboardConditionalFormattingCustomIconConditionPtrInput `pulumi:"customCondition"`
	IconSet         DashboardConditionalFormattingIconSetPtrInput             `pulumi:"iconSet"`
}

func (DashboardConditionalFormattingIconArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIcon)(nil)).Elem()
}

func (i DashboardConditionalFormattingIconArgs) ToDashboardConditionalFormattingIconOutput() DashboardConditionalFormattingIconOutput {
	return i.ToDashboardConditionalFormattingIconOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconArgs) ToDashboardConditionalFormattingIconOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconOutput)
}

func (i DashboardConditionalFormattingIconArgs) ToDashboardConditionalFormattingIconPtrOutput() DashboardConditionalFormattingIconPtrOutput {
	return i.ToDashboardConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconArgs) ToDashboardConditionalFormattingIconPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconOutput).ToDashboardConditionalFormattingIconPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingIconPtrInput is an input type that accepts DashboardConditionalFormattingIconArgs, DashboardConditionalFormattingIconPtr and DashboardConditionalFormattingIconPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconPtrInput` via:
//
//	        DashboardConditionalFormattingIconArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingIconPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconPtrOutput() DashboardConditionalFormattingIconPtrOutput
	ToDashboardConditionalFormattingIconPtrOutputWithContext(context.Context) DashboardConditionalFormattingIconPtrOutput
}

type dashboardConditionalFormattingIconPtrType DashboardConditionalFormattingIconArgs

func DashboardConditionalFormattingIconPtr(v *DashboardConditionalFormattingIconArgs) DashboardConditionalFormattingIconPtrInput {
	return (*dashboardConditionalFormattingIconPtrType)(v)
}

func (*dashboardConditionalFormattingIconPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIcon)(nil)).Elem()
}

func (i *dashboardConditionalFormattingIconPtrType) ToDashboardConditionalFormattingIconPtrOutput() DashboardConditionalFormattingIconPtrOutput {
	return i.ToDashboardConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingIconPtrType) ToDashboardConditionalFormattingIconPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconPtrOutput)
}

type DashboardConditionalFormattingIconOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIcon)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconOutput) ToDashboardConditionalFormattingIconOutput() DashboardConditionalFormattingIconOutput {
	return o
}

func (o DashboardConditionalFormattingIconOutput) ToDashboardConditionalFormattingIconOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconOutput {
	return o
}

func (o DashboardConditionalFormattingIconOutput) ToDashboardConditionalFormattingIconPtrOutput() DashboardConditionalFormattingIconPtrOutput {
	return o.ToDashboardConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconOutput) ToDashboardConditionalFormattingIconPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingIcon) *DashboardConditionalFormattingIcon {
		return &v
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardConditionalFormattingIconOutput) CustomCondition() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingIcon) *DashboardConditionalFormattingCustomIconCondition {
		return v.CustomCondition
	}).(DashboardConditionalFormattingCustomIconConditionPtrOutput)
}

func (o DashboardConditionalFormattingIconOutput) IconSet() DashboardConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingIcon) *DashboardConditionalFormattingIconSet { return v.IconSet }).(DashboardConditionalFormattingIconSetPtrOutput)
}

type DashboardConditionalFormattingIconPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIcon)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconPtrOutput) ToDashboardConditionalFormattingIconPtrOutput() DashboardConditionalFormattingIconPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconPtrOutput) ToDashboardConditionalFormattingIconPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconPtrOutput) Elem() DashboardConditionalFormattingIconOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIcon) DashboardConditionalFormattingIcon {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingIcon
		return ret
	}).(DashboardConditionalFormattingIconOutput)
}

func (o DashboardConditionalFormattingIconPtrOutput) CustomCondition() DashboardConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIcon) *DashboardConditionalFormattingCustomIconCondition {
		if v == nil {
			return nil
		}
		return v.CustomCondition
	}).(DashboardConditionalFormattingCustomIconConditionPtrOutput)
}

func (o DashboardConditionalFormattingIconPtrOutput) IconSet() DashboardConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIcon) *DashboardConditionalFormattingIconSet {
		if v == nil {
			return nil
		}
		return v.IconSet
	}).(DashboardConditionalFormattingIconSetPtrOutput)
}

type DashboardConditionalFormattingIconDisplayConfiguration struct {
	IconDisplayOption *DashboardConditionalFormattingIconDisplayOption `pulumi:"iconDisplayOption"`
}

// DashboardConditionalFormattingIconDisplayConfigurationInput is an input type that accepts DashboardConditionalFormattingIconDisplayConfigurationArgs and DashboardConditionalFormattingIconDisplayConfigurationOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconDisplayConfigurationInput` via:
//
//	DashboardConditionalFormattingIconDisplayConfigurationArgs{...}
type DashboardConditionalFormattingIconDisplayConfigurationInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconDisplayConfigurationOutput() DashboardConditionalFormattingIconDisplayConfigurationOutput
	ToDashboardConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Context) DashboardConditionalFormattingIconDisplayConfigurationOutput
}

type DashboardConditionalFormattingIconDisplayConfigurationArgs struct {
	IconDisplayOption DashboardConditionalFormattingIconDisplayOptionPtrInput `pulumi:"iconDisplayOption"`
}

func (DashboardConditionalFormattingIconDisplayConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i DashboardConditionalFormattingIconDisplayConfigurationArgs) ToDashboardConditionalFormattingIconDisplayConfigurationOutput() DashboardConditionalFormattingIconDisplayConfigurationOutput {
	return i.ToDashboardConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconDisplayConfigurationArgs) ToDashboardConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconDisplayConfigurationOutput)
}

func (i DashboardConditionalFormattingIconDisplayConfigurationArgs) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutput() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconDisplayConfigurationArgs) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconDisplayConfigurationOutput).ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingIconDisplayConfigurationPtrInput is an input type that accepts DashboardConditionalFormattingIconDisplayConfigurationArgs, DashboardConditionalFormattingIconDisplayConfigurationPtr and DashboardConditionalFormattingIconDisplayConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconDisplayConfigurationPtrInput` via:
//
//	        DashboardConditionalFormattingIconDisplayConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingIconDisplayConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutput() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput
	ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Context) DashboardConditionalFormattingIconDisplayConfigurationPtrOutput
}

type dashboardConditionalFormattingIconDisplayConfigurationPtrType DashboardConditionalFormattingIconDisplayConfigurationArgs

func DashboardConditionalFormattingIconDisplayConfigurationPtr(v *DashboardConditionalFormattingIconDisplayConfigurationArgs) DashboardConditionalFormattingIconDisplayConfigurationPtrInput {
	return (*dashboardConditionalFormattingIconDisplayConfigurationPtrType)(v)
}

func (*dashboardConditionalFormattingIconDisplayConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i *dashboardConditionalFormattingIconDisplayConfigurationPtrType) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutput() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingIconDisplayConfigurationPtrType) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconDisplayConfigurationPtrOutput)
}

type DashboardConditionalFormattingIconDisplayConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconDisplayConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconDisplayConfigurationOutput) ToDashboardConditionalFormattingIconDisplayConfigurationOutput() DashboardConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayConfigurationOutput) ToDashboardConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayConfigurationOutput) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutput() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconDisplayConfigurationOutput) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingIconDisplayConfiguration) *DashboardConditionalFormattingIconDisplayConfiguration {
		return &v
	}).(DashboardConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o DashboardConditionalFormattingIconDisplayConfigurationOutput) IconDisplayOption() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingIconDisplayConfiguration) *DashboardConditionalFormattingIconDisplayOption {
		return v.IconDisplayOption
	}).(DashboardConditionalFormattingIconDisplayOptionPtrOutput)
}

type DashboardConditionalFormattingIconDisplayConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconDisplayConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconDisplayConfigurationPtrOutput) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutput() DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayConfigurationPtrOutput) ToDashboardConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconDisplayConfigurationPtrOutput) Elem() DashboardConditionalFormattingIconDisplayConfigurationOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconDisplayConfiguration) DashboardConditionalFormattingIconDisplayConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingIconDisplayConfiguration
		return ret
	}).(DashboardConditionalFormattingIconDisplayConfigurationOutput)
}

func (o DashboardConditionalFormattingIconDisplayConfigurationPtrOutput) IconDisplayOption() DashboardConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconDisplayConfiguration) *DashboardConditionalFormattingIconDisplayOption {
		if v == nil {
			return nil
		}
		return v.IconDisplayOption
	}).(DashboardConditionalFormattingIconDisplayOptionPtrOutput)
}

type DashboardConditionalFormattingIconSet struct {
	Expression  string                                     `pulumi:"expression"`
	IconSetType *DashboardConditionalFormattingIconSetType `pulumi:"iconSetType"`
}

// DashboardConditionalFormattingIconSetInput is an input type that accepts DashboardConditionalFormattingIconSetArgs and DashboardConditionalFormattingIconSetOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconSetInput` via:
//
//	DashboardConditionalFormattingIconSetArgs{...}
type DashboardConditionalFormattingIconSetInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconSetOutput() DashboardConditionalFormattingIconSetOutput
	ToDashboardConditionalFormattingIconSetOutputWithContext(context.Context) DashboardConditionalFormattingIconSetOutput
}

type DashboardConditionalFormattingIconSetArgs struct {
	Expression  pulumi.StringInput                                `pulumi:"expression"`
	IconSetType DashboardConditionalFormattingIconSetTypePtrInput `pulumi:"iconSetType"`
}

func (DashboardConditionalFormattingIconSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconSet)(nil)).Elem()
}

func (i DashboardConditionalFormattingIconSetArgs) ToDashboardConditionalFormattingIconSetOutput() DashboardConditionalFormattingIconSetOutput {
	return i.ToDashboardConditionalFormattingIconSetOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconSetArgs) ToDashboardConditionalFormattingIconSetOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconSetOutput)
}

func (i DashboardConditionalFormattingIconSetArgs) ToDashboardConditionalFormattingIconSetPtrOutput() DashboardConditionalFormattingIconSetPtrOutput {
	return i.ToDashboardConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingIconSetArgs) ToDashboardConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconSetOutput).ToDashboardConditionalFormattingIconSetPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingIconSetPtrInput is an input type that accepts DashboardConditionalFormattingIconSetArgs, DashboardConditionalFormattingIconSetPtr and DashboardConditionalFormattingIconSetPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingIconSetPtrInput` via:
//
//	        DashboardConditionalFormattingIconSetArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingIconSetPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingIconSetPtrOutput() DashboardConditionalFormattingIconSetPtrOutput
	ToDashboardConditionalFormattingIconSetPtrOutputWithContext(context.Context) DashboardConditionalFormattingIconSetPtrOutput
}

type dashboardConditionalFormattingIconSetPtrType DashboardConditionalFormattingIconSetArgs

func DashboardConditionalFormattingIconSetPtr(v *DashboardConditionalFormattingIconSetArgs) DashboardConditionalFormattingIconSetPtrInput {
	return (*dashboardConditionalFormattingIconSetPtrType)(v)
}

func (*dashboardConditionalFormattingIconSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconSet)(nil)).Elem()
}

func (i *dashboardConditionalFormattingIconSetPtrType) ToDashboardConditionalFormattingIconSetPtrOutput() DashboardConditionalFormattingIconSetPtrOutput {
	return i.ToDashboardConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingIconSetPtrType) ToDashboardConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingIconSetPtrOutput)
}

type DashboardConditionalFormattingIconSetOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingIconSet)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconSetOutput) ToDashboardConditionalFormattingIconSetOutput() DashboardConditionalFormattingIconSetOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetOutput) ToDashboardConditionalFormattingIconSetOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetOutput) ToDashboardConditionalFormattingIconSetPtrOutput() DashboardConditionalFormattingIconSetPtrOutput {
	return o.ToDashboardConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingIconSetOutput) ToDashboardConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingIconSet) *DashboardConditionalFormattingIconSet {
		return &v
	}).(DashboardConditionalFormattingIconSetPtrOutput)
}

func (o DashboardConditionalFormattingIconSetOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingIconSet) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DashboardConditionalFormattingIconSetOutput) IconSetType() DashboardConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingIconSet) *DashboardConditionalFormattingIconSetType {
		return v.IconSetType
	}).(DashboardConditionalFormattingIconSetTypePtrOutput)
}

type DashboardConditionalFormattingIconSetPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingIconSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingIconSet)(nil)).Elem()
}

func (o DashboardConditionalFormattingIconSetPtrOutput) ToDashboardConditionalFormattingIconSetPtrOutput() DashboardConditionalFormattingIconSetPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetPtrOutput) ToDashboardConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingIconSetPtrOutput {
	return o
}

func (o DashboardConditionalFormattingIconSetPtrOutput) Elem() DashboardConditionalFormattingIconSetOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconSet) DashboardConditionalFormattingIconSet {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingIconSet
		return ret
	}).(DashboardConditionalFormattingIconSetOutput)
}

func (o DashboardConditionalFormattingIconSetPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconSet) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingIconSetPtrOutput) IconSetType() DashboardConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingIconSet) *DashboardConditionalFormattingIconSetType {
		if v == nil {
			return nil
		}
		return v.IconSetType
	}).(DashboardConditionalFormattingIconSetTypePtrOutput)
}

type DashboardConditionalFormattingSolidColor struct {
	Color      *string `pulumi:"color"`
	Expression string  `pulumi:"expression"`
}

// DashboardConditionalFormattingSolidColorInput is an input type that accepts DashboardConditionalFormattingSolidColorArgs and DashboardConditionalFormattingSolidColorOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingSolidColorInput` via:
//
//	DashboardConditionalFormattingSolidColorArgs{...}
type DashboardConditionalFormattingSolidColorInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingSolidColorOutput() DashboardConditionalFormattingSolidColorOutput
	ToDashboardConditionalFormattingSolidColorOutputWithContext(context.Context) DashboardConditionalFormattingSolidColorOutput
}

type DashboardConditionalFormattingSolidColorArgs struct {
	Color      pulumi.StringPtrInput `pulumi:"color"`
	Expression pulumi.StringInput    `pulumi:"expression"`
}

func (DashboardConditionalFormattingSolidColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingSolidColor)(nil)).Elem()
}

func (i DashboardConditionalFormattingSolidColorArgs) ToDashboardConditionalFormattingSolidColorOutput() DashboardConditionalFormattingSolidColorOutput {
	return i.ToDashboardConditionalFormattingSolidColorOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingSolidColorArgs) ToDashboardConditionalFormattingSolidColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingSolidColorOutput)
}

func (i DashboardConditionalFormattingSolidColorArgs) ToDashboardConditionalFormattingSolidColorPtrOutput() DashboardConditionalFormattingSolidColorPtrOutput {
	return i.ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i DashboardConditionalFormattingSolidColorArgs) ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingSolidColorOutput).ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(ctx)
}

// DashboardConditionalFormattingSolidColorPtrInput is an input type that accepts DashboardConditionalFormattingSolidColorArgs, DashboardConditionalFormattingSolidColorPtr and DashboardConditionalFormattingSolidColorPtrOutput values.
// You can construct a concrete instance of `DashboardConditionalFormattingSolidColorPtrInput` via:
//
//	        DashboardConditionalFormattingSolidColorArgs{...}
//
//	or:
//
//	        nil
type DashboardConditionalFormattingSolidColorPtrInput interface {
	pulumi.Input

	ToDashboardConditionalFormattingSolidColorPtrOutput() DashboardConditionalFormattingSolidColorPtrOutput
	ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(context.Context) DashboardConditionalFormattingSolidColorPtrOutput
}

type dashboardConditionalFormattingSolidColorPtrType DashboardConditionalFormattingSolidColorArgs

func DashboardConditionalFormattingSolidColorPtr(v *DashboardConditionalFormattingSolidColorArgs) DashboardConditionalFormattingSolidColorPtrInput {
	return (*dashboardConditionalFormattingSolidColorPtrType)(v)
}

func (*dashboardConditionalFormattingSolidColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingSolidColor)(nil)).Elem()
}

func (i *dashboardConditionalFormattingSolidColorPtrType) ToDashboardConditionalFormattingSolidColorPtrOutput() DashboardConditionalFormattingSolidColorPtrOutput {
	return i.ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i *dashboardConditionalFormattingSolidColorPtrType) ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardConditionalFormattingSolidColorPtrOutput)
}

type DashboardConditionalFormattingSolidColorOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingSolidColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardConditionalFormattingSolidColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingSolidColorOutput) ToDashboardConditionalFormattingSolidColorOutput() DashboardConditionalFormattingSolidColorOutput {
	return o
}

func (o DashboardConditionalFormattingSolidColorOutput) ToDashboardConditionalFormattingSolidColorOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorOutput {
	return o
}

func (o DashboardConditionalFormattingSolidColorOutput) ToDashboardConditionalFormattingSolidColorPtrOutput() DashboardConditionalFormattingSolidColorPtrOutput {
	return o.ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (o DashboardConditionalFormattingSolidColorOutput) ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardConditionalFormattingSolidColor) *DashboardConditionalFormattingSolidColor {
		return &v
	}).(DashboardConditionalFormattingSolidColorPtrOutput)
}

func (o DashboardConditionalFormattingSolidColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingSolidColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingSolidColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardConditionalFormattingSolidColor) string { return v.Expression }).(pulumi.StringOutput)
}

type DashboardConditionalFormattingSolidColorPtrOutput struct{ *pulumi.OutputState }

func (DashboardConditionalFormattingSolidColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardConditionalFormattingSolidColor)(nil)).Elem()
}

func (o DashboardConditionalFormattingSolidColorPtrOutput) ToDashboardConditionalFormattingSolidColorPtrOutput() DashboardConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingSolidColorPtrOutput) ToDashboardConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) DashboardConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o DashboardConditionalFormattingSolidColorPtrOutput) Elem() DashboardConditionalFormattingSolidColorOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingSolidColor) DashboardConditionalFormattingSolidColor {
		if v != nil {
			return *v
		}
		var ret DashboardConditionalFormattingSolidColor
		return ret
	}).(DashboardConditionalFormattingSolidColorOutput)
}

func (o DashboardConditionalFormattingSolidColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardConditionalFormattingSolidColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type DashboardContributionAnalysisDefault struct {
	ContributorDimensions []DashboardColumnIdentifier `pulumi:"contributorDimensions"`
	MeasureFieldId        string                      `pulumi:"measureFieldId"`
}

// DashboardContributionAnalysisDefaultInput is an input type that accepts DashboardContributionAnalysisDefaultArgs and DashboardContributionAnalysisDefaultOutput values.
// You can construct a concrete instance of `DashboardContributionAnalysisDefaultInput` via:
//
//	DashboardContributionAnalysisDefaultArgs{...}
type DashboardContributionAnalysisDefaultInput interface {
	pulumi.Input

	ToDashboardContributionAnalysisDefaultOutput() DashboardContributionAnalysisDefaultOutput
	ToDashboardContributionAnalysisDefaultOutputWithContext(context.Context) DashboardContributionAnalysisDefaultOutput
}

type DashboardContributionAnalysisDefaultArgs struct {
	ContributorDimensions DashboardColumnIdentifierArrayInput `pulumi:"contributorDimensions"`
	MeasureFieldId        pulumi.StringInput                  `pulumi:"measureFieldId"`
}

func (DashboardContributionAnalysisDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardContributionAnalysisDefault)(nil)).Elem()
}

func (i DashboardContributionAnalysisDefaultArgs) ToDashboardContributionAnalysisDefaultOutput() DashboardContributionAnalysisDefaultOutput {
	return i.ToDashboardContributionAnalysisDefaultOutputWithContext(context.Background())
}

func (i DashboardContributionAnalysisDefaultArgs) ToDashboardContributionAnalysisDefaultOutputWithContext(ctx context.Context) DashboardContributionAnalysisDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardContributionAnalysisDefaultOutput)
}

// DashboardContributionAnalysisDefaultArrayInput is an input type that accepts DashboardContributionAnalysisDefaultArray and DashboardContributionAnalysisDefaultArrayOutput values.
// You can construct a concrete instance of `DashboardContributionAnalysisDefaultArrayInput` via:
//
//	DashboardContributionAnalysisDefaultArray{ DashboardContributionAnalysisDefaultArgs{...} }
type DashboardContributionAnalysisDefaultArrayInput interface {
	pulumi.Input

	ToDashboardContributionAnalysisDefaultArrayOutput() DashboardContributionAnalysisDefaultArrayOutput
	ToDashboardContributionAnalysisDefaultArrayOutputWithContext(context.Context) DashboardContributionAnalysisDefaultArrayOutput
}

type DashboardContributionAnalysisDefaultArray []DashboardContributionAnalysisDefaultInput

func (DashboardContributionAnalysisDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardContributionAnalysisDefault)(nil)).Elem()
}

func (i DashboardContributionAnalysisDefaultArray) ToDashboardContributionAnalysisDefaultArrayOutput() DashboardContributionAnalysisDefaultArrayOutput {
	return i.ToDashboardContributionAnalysisDefaultArrayOutputWithContext(context.Background())
}

func (i DashboardContributionAnalysisDefaultArray) ToDashboardContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) DashboardContributionAnalysisDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardContributionAnalysisDefaultArrayOutput)
}

type DashboardContributionAnalysisDefaultOutput struct{ *pulumi.OutputState }

func (DashboardContributionAnalysisDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardContributionAnalysisDefault)(nil)).Elem()
}

func (o DashboardContributionAnalysisDefaultOutput) ToDashboardContributionAnalysisDefaultOutput() DashboardContributionAnalysisDefaultOutput {
	return o
}

func (o DashboardContributionAnalysisDefaultOutput) ToDashboardContributionAnalysisDefaultOutputWithContext(ctx context.Context) DashboardContributionAnalysisDefaultOutput {
	return o
}

func (o DashboardContributionAnalysisDefaultOutput) ContributorDimensions() DashboardColumnIdentifierArrayOutput {
	return o.ApplyT(func(v DashboardContributionAnalysisDefault) []DashboardColumnIdentifier {
		return v.ContributorDimensions
	}).(DashboardColumnIdentifierArrayOutput)
}

func (o DashboardContributionAnalysisDefaultOutput) MeasureFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardContributionAnalysisDefault) string { return v.MeasureFieldId }).(pulumi.StringOutput)
}

type DashboardContributionAnalysisDefaultArrayOutput struct{ *pulumi.OutputState }

func (DashboardContributionAnalysisDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardContributionAnalysisDefault)(nil)).Elem()
}

func (o DashboardContributionAnalysisDefaultArrayOutput) ToDashboardContributionAnalysisDefaultArrayOutput() DashboardContributionAnalysisDefaultArrayOutput {
	return o
}

func (o DashboardContributionAnalysisDefaultArrayOutput) ToDashboardContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) DashboardContributionAnalysisDefaultArrayOutput {
	return o
}

func (o DashboardContributionAnalysisDefaultArrayOutput) Index(i pulumi.IntInput) DashboardContributionAnalysisDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardContributionAnalysisDefault {
		return vs[0].([]DashboardContributionAnalysisDefault)[vs[1].(int)]
	}).(DashboardContributionAnalysisDefaultOutput)
}

type DashboardCurrencyDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *DashboardDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *DashboardNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *DashboardNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *DashboardNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                 `pulumi:"prefix"`
	SeparatorConfiguration       *DashboardNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                 `pulumi:"suffix"`
	Symbol                       *string                                 `pulumi:"symbol"`
}

// DashboardCurrencyDisplayFormatConfigurationInput is an input type that accepts DashboardCurrencyDisplayFormatConfigurationArgs and DashboardCurrencyDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardCurrencyDisplayFormatConfigurationInput` via:
//
//	DashboardCurrencyDisplayFormatConfigurationArgs{...}
type DashboardCurrencyDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardCurrencyDisplayFormatConfigurationOutput() DashboardCurrencyDisplayFormatConfigurationOutput
	ToDashboardCurrencyDisplayFormatConfigurationOutputWithContext(context.Context) DashboardCurrencyDisplayFormatConfigurationOutput
}

type DashboardCurrencyDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   DashboardDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   DashboardNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration DashboardNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  DashboardNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                          `pulumi:"prefix"`
	SeparatorConfiguration       DashboardNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                          `pulumi:"suffix"`
	Symbol                       pulumi.StringPtrInput                          `pulumi:"symbol"`
}

func (DashboardCurrencyDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i DashboardCurrencyDisplayFormatConfigurationArgs) ToDashboardCurrencyDisplayFormatConfigurationOutput() DashboardCurrencyDisplayFormatConfigurationOutput {
	return i.ToDashboardCurrencyDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardCurrencyDisplayFormatConfigurationArgs) ToDashboardCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCurrencyDisplayFormatConfigurationOutput)
}

func (i DashboardCurrencyDisplayFormatConfigurationArgs) ToDashboardCurrencyDisplayFormatConfigurationPtrOutput() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCurrencyDisplayFormatConfigurationArgs) ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCurrencyDisplayFormatConfigurationOutput).ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardCurrencyDisplayFormatConfigurationPtrInput is an input type that accepts DashboardCurrencyDisplayFormatConfigurationArgs, DashboardCurrencyDisplayFormatConfigurationPtr and DashboardCurrencyDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCurrencyDisplayFormatConfigurationPtrInput` via:
//
//	        DashboardCurrencyDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCurrencyDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCurrencyDisplayFormatConfigurationPtrOutput() DashboardCurrencyDisplayFormatConfigurationPtrOutput
	ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Context) DashboardCurrencyDisplayFormatConfigurationPtrOutput
}

type dashboardCurrencyDisplayFormatConfigurationPtrType DashboardCurrencyDisplayFormatConfigurationArgs

func DashboardCurrencyDisplayFormatConfigurationPtr(v *DashboardCurrencyDisplayFormatConfigurationArgs) DashboardCurrencyDisplayFormatConfigurationPtrInput {
	return (*dashboardCurrencyDisplayFormatConfigurationPtrType)(v)
}

func (*dashboardCurrencyDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i *dashboardCurrencyDisplayFormatConfigurationPtrType) ToDashboardCurrencyDisplayFormatConfigurationPtrOutput() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCurrencyDisplayFormatConfigurationPtrType) ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCurrencyDisplayFormatConfigurationPtrOutput)
}

type DashboardCurrencyDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCurrencyDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) ToDashboardCurrencyDisplayFormatConfigurationOutput() DashboardCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) ToDashboardCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) ToDashboardCurrencyDisplayFormatConfigurationPtrOutput() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCurrencyDisplayFormatConfiguration) *DashboardCurrencyDisplayFormatConfiguration {
		return &v
	}).(DashboardCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) NumberScale() DashboardNumberScalePtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *DashboardNumberScale { return v.NumberScale }).(DashboardNumberScalePtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCurrencyDisplayFormatConfiguration) *string { return v.Symbol }).(pulumi.StringPtrOutput)
}

type DashboardCurrencyDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCurrencyDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) ToDashboardCurrencyDisplayFormatConfigurationPtrOutput() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) ToDashboardCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) Elem() DashboardCurrencyDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) DashboardCurrencyDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCurrencyDisplayFormatConfiguration
		return ret
	}).(DashboardCurrencyDisplayFormatConfigurationOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) NumberScale() DashboardNumberScalePtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *DashboardNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(DashboardNumberScalePtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCurrencyDisplayFormatConfigurationPtrOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomActionFilterOperation struct {
	SelectedFieldsConfiguration DashboardFilterOperationSelectedFieldsConfiguration `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  DashboardFilterOperationTargetVisualsConfiguration  `pulumi:"targetVisualsConfiguration"`
}

// DashboardCustomActionFilterOperationInput is an input type that accepts DashboardCustomActionFilterOperationArgs and DashboardCustomActionFilterOperationOutput values.
// You can construct a concrete instance of `DashboardCustomActionFilterOperationInput` via:
//
//	DashboardCustomActionFilterOperationArgs{...}
type DashboardCustomActionFilterOperationInput interface {
	pulumi.Input

	ToDashboardCustomActionFilterOperationOutput() DashboardCustomActionFilterOperationOutput
	ToDashboardCustomActionFilterOperationOutputWithContext(context.Context) DashboardCustomActionFilterOperationOutput
}

type DashboardCustomActionFilterOperationArgs struct {
	SelectedFieldsConfiguration DashboardFilterOperationSelectedFieldsConfigurationInput `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  DashboardFilterOperationTargetVisualsConfigurationInput  `pulumi:"targetVisualsConfiguration"`
}

func (DashboardCustomActionFilterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionFilterOperation)(nil)).Elem()
}

func (i DashboardCustomActionFilterOperationArgs) ToDashboardCustomActionFilterOperationOutput() DashboardCustomActionFilterOperationOutput {
	return i.ToDashboardCustomActionFilterOperationOutputWithContext(context.Background())
}

func (i DashboardCustomActionFilterOperationArgs) ToDashboardCustomActionFilterOperationOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionFilterOperationOutput)
}

func (i DashboardCustomActionFilterOperationArgs) ToDashboardCustomActionFilterOperationPtrOutput() DashboardCustomActionFilterOperationPtrOutput {
	return i.ToDashboardCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomActionFilterOperationArgs) ToDashboardCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionFilterOperationOutput).ToDashboardCustomActionFilterOperationPtrOutputWithContext(ctx)
}

// DashboardCustomActionFilterOperationPtrInput is an input type that accepts DashboardCustomActionFilterOperationArgs, DashboardCustomActionFilterOperationPtr and DashboardCustomActionFilterOperationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomActionFilterOperationPtrInput` via:
//
//	        DashboardCustomActionFilterOperationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomActionFilterOperationPtrInput interface {
	pulumi.Input

	ToDashboardCustomActionFilterOperationPtrOutput() DashboardCustomActionFilterOperationPtrOutput
	ToDashboardCustomActionFilterOperationPtrOutputWithContext(context.Context) DashboardCustomActionFilterOperationPtrOutput
}

type dashboardCustomActionFilterOperationPtrType DashboardCustomActionFilterOperationArgs

func DashboardCustomActionFilterOperationPtr(v *DashboardCustomActionFilterOperationArgs) DashboardCustomActionFilterOperationPtrInput {
	return (*dashboardCustomActionFilterOperationPtrType)(v)
}

func (*dashboardCustomActionFilterOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionFilterOperation)(nil)).Elem()
}

func (i *dashboardCustomActionFilterOperationPtrType) ToDashboardCustomActionFilterOperationPtrOutput() DashboardCustomActionFilterOperationPtrOutput {
	return i.ToDashboardCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomActionFilterOperationPtrType) ToDashboardCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionFilterOperationPtrOutput)
}

type DashboardCustomActionFilterOperationOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionFilterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionFilterOperation)(nil)).Elem()
}

func (o DashboardCustomActionFilterOperationOutput) ToDashboardCustomActionFilterOperationOutput() DashboardCustomActionFilterOperationOutput {
	return o
}

func (o DashboardCustomActionFilterOperationOutput) ToDashboardCustomActionFilterOperationOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationOutput {
	return o
}

func (o DashboardCustomActionFilterOperationOutput) ToDashboardCustomActionFilterOperationPtrOutput() DashboardCustomActionFilterOperationPtrOutput {
	return o.ToDashboardCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomActionFilterOperationOutput) ToDashboardCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomActionFilterOperation) *DashboardCustomActionFilterOperation {
		return &v
	}).(DashboardCustomActionFilterOperationPtrOutput)
}

func (o DashboardCustomActionFilterOperationOutput) SelectedFieldsConfiguration() DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v DashboardCustomActionFilterOperation) DashboardFilterOperationSelectedFieldsConfiguration {
		return v.SelectedFieldsConfiguration
	}).(DashboardFilterOperationSelectedFieldsConfigurationOutput)
}

func (o DashboardCustomActionFilterOperationOutput) TargetVisualsConfiguration() DashboardFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v DashboardCustomActionFilterOperation) DashboardFilterOperationTargetVisualsConfiguration {
		return v.TargetVisualsConfiguration
	}).(DashboardFilterOperationTargetVisualsConfigurationOutput)
}

type DashboardCustomActionFilterOperationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionFilterOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionFilterOperation)(nil)).Elem()
}

func (o DashboardCustomActionFilterOperationPtrOutput) ToDashboardCustomActionFilterOperationPtrOutput() DashboardCustomActionFilterOperationPtrOutput {
	return o
}

func (o DashboardCustomActionFilterOperationPtrOutput) ToDashboardCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionFilterOperationPtrOutput {
	return o
}

func (o DashboardCustomActionFilterOperationPtrOutput) Elem() DashboardCustomActionFilterOperationOutput {
	return o.ApplyT(func(v *DashboardCustomActionFilterOperation) DashboardCustomActionFilterOperation {
		if v != nil {
			return *v
		}
		var ret DashboardCustomActionFilterOperation
		return ret
	}).(DashboardCustomActionFilterOperationOutput)
}

func (o DashboardCustomActionFilterOperationPtrOutput) SelectedFieldsConfiguration() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomActionFilterOperation) *DashboardFilterOperationSelectedFieldsConfiguration {
		if v == nil {
			return nil
		}
		return &v.SelectedFieldsConfiguration
	}).(DashboardFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o DashboardCustomActionFilterOperationPtrOutput) TargetVisualsConfiguration() DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomActionFilterOperation) *DashboardFilterOperationTargetVisualsConfiguration {
		if v == nil {
			return nil
		}
		return &v.TargetVisualsConfiguration
	}).(DashboardFilterOperationTargetVisualsConfigurationPtrOutput)
}

type DashboardCustomActionNavigationOperation struct {
	LocalNavigationConfiguration *DashboardLocalNavigationConfiguration `pulumi:"localNavigationConfiguration"`
}

// DashboardCustomActionNavigationOperationInput is an input type that accepts DashboardCustomActionNavigationOperationArgs and DashboardCustomActionNavigationOperationOutput values.
// You can construct a concrete instance of `DashboardCustomActionNavigationOperationInput` via:
//
//	DashboardCustomActionNavigationOperationArgs{...}
type DashboardCustomActionNavigationOperationInput interface {
	pulumi.Input

	ToDashboardCustomActionNavigationOperationOutput() DashboardCustomActionNavigationOperationOutput
	ToDashboardCustomActionNavigationOperationOutputWithContext(context.Context) DashboardCustomActionNavigationOperationOutput
}

type DashboardCustomActionNavigationOperationArgs struct {
	LocalNavigationConfiguration DashboardLocalNavigationConfigurationPtrInput `pulumi:"localNavigationConfiguration"`
}

func (DashboardCustomActionNavigationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionNavigationOperation)(nil)).Elem()
}

func (i DashboardCustomActionNavigationOperationArgs) ToDashboardCustomActionNavigationOperationOutput() DashboardCustomActionNavigationOperationOutput {
	return i.ToDashboardCustomActionNavigationOperationOutputWithContext(context.Background())
}

func (i DashboardCustomActionNavigationOperationArgs) ToDashboardCustomActionNavigationOperationOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionNavigationOperationOutput)
}

func (i DashboardCustomActionNavigationOperationArgs) ToDashboardCustomActionNavigationOperationPtrOutput() DashboardCustomActionNavigationOperationPtrOutput {
	return i.ToDashboardCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomActionNavigationOperationArgs) ToDashboardCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionNavigationOperationOutput).ToDashboardCustomActionNavigationOperationPtrOutputWithContext(ctx)
}

// DashboardCustomActionNavigationOperationPtrInput is an input type that accepts DashboardCustomActionNavigationOperationArgs, DashboardCustomActionNavigationOperationPtr and DashboardCustomActionNavigationOperationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomActionNavigationOperationPtrInput` via:
//
//	        DashboardCustomActionNavigationOperationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomActionNavigationOperationPtrInput interface {
	pulumi.Input

	ToDashboardCustomActionNavigationOperationPtrOutput() DashboardCustomActionNavigationOperationPtrOutput
	ToDashboardCustomActionNavigationOperationPtrOutputWithContext(context.Context) DashboardCustomActionNavigationOperationPtrOutput
}

type dashboardCustomActionNavigationOperationPtrType DashboardCustomActionNavigationOperationArgs

func DashboardCustomActionNavigationOperationPtr(v *DashboardCustomActionNavigationOperationArgs) DashboardCustomActionNavigationOperationPtrInput {
	return (*dashboardCustomActionNavigationOperationPtrType)(v)
}

func (*dashboardCustomActionNavigationOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionNavigationOperation)(nil)).Elem()
}

func (i *dashboardCustomActionNavigationOperationPtrType) ToDashboardCustomActionNavigationOperationPtrOutput() DashboardCustomActionNavigationOperationPtrOutput {
	return i.ToDashboardCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomActionNavigationOperationPtrType) ToDashboardCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionNavigationOperationPtrOutput)
}

type DashboardCustomActionNavigationOperationOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionNavigationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionNavigationOperation)(nil)).Elem()
}

func (o DashboardCustomActionNavigationOperationOutput) ToDashboardCustomActionNavigationOperationOutput() DashboardCustomActionNavigationOperationOutput {
	return o
}

func (o DashboardCustomActionNavigationOperationOutput) ToDashboardCustomActionNavigationOperationOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationOutput {
	return o
}

func (o DashboardCustomActionNavigationOperationOutput) ToDashboardCustomActionNavigationOperationPtrOutput() DashboardCustomActionNavigationOperationPtrOutput {
	return o.ToDashboardCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomActionNavigationOperationOutput) ToDashboardCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomActionNavigationOperation) *DashboardCustomActionNavigationOperation {
		return &v
	}).(DashboardCustomActionNavigationOperationPtrOutput)
}

func (o DashboardCustomActionNavigationOperationOutput) LocalNavigationConfiguration() DashboardLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCustomActionNavigationOperation) *DashboardLocalNavigationConfiguration {
		return v.LocalNavigationConfiguration
	}).(DashboardLocalNavigationConfigurationPtrOutput)
}

type DashboardCustomActionNavigationOperationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionNavigationOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionNavigationOperation)(nil)).Elem()
}

func (o DashboardCustomActionNavigationOperationPtrOutput) ToDashboardCustomActionNavigationOperationPtrOutput() DashboardCustomActionNavigationOperationPtrOutput {
	return o
}

func (o DashboardCustomActionNavigationOperationPtrOutput) ToDashboardCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionNavigationOperationPtrOutput {
	return o
}

func (o DashboardCustomActionNavigationOperationPtrOutput) Elem() DashboardCustomActionNavigationOperationOutput {
	return o.ApplyT(func(v *DashboardCustomActionNavigationOperation) DashboardCustomActionNavigationOperation {
		if v != nil {
			return *v
		}
		var ret DashboardCustomActionNavigationOperation
		return ret
	}).(DashboardCustomActionNavigationOperationOutput)
}

func (o DashboardCustomActionNavigationOperationPtrOutput) LocalNavigationConfiguration() DashboardLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomActionNavigationOperation) *DashboardLocalNavigationConfiguration {
		if v == nil {
			return nil
		}
		return v.LocalNavigationConfiguration
	}).(DashboardLocalNavigationConfigurationPtrOutput)
}

type DashboardCustomActionSetParametersOperation struct {
	ParameterValueConfigurations []DashboardSetParameterValueConfiguration `pulumi:"parameterValueConfigurations"`
}

// DashboardCustomActionSetParametersOperationInput is an input type that accepts DashboardCustomActionSetParametersOperationArgs and DashboardCustomActionSetParametersOperationOutput values.
// You can construct a concrete instance of `DashboardCustomActionSetParametersOperationInput` via:
//
//	DashboardCustomActionSetParametersOperationArgs{...}
type DashboardCustomActionSetParametersOperationInput interface {
	pulumi.Input

	ToDashboardCustomActionSetParametersOperationOutput() DashboardCustomActionSetParametersOperationOutput
	ToDashboardCustomActionSetParametersOperationOutputWithContext(context.Context) DashboardCustomActionSetParametersOperationOutput
}

type DashboardCustomActionSetParametersOperationArgs struct {
	ParameterValueConfigurations DashboardSetParameterValueConfigurationArrayInput `pulumi:"parameterValueConfigurations"`
}

func (DashboardCustomActionSetParametersOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionSetParametersOperation)(nil)).Elem()
}

func (i DashboardCustomActionSetParametersOperationArgs) ToDashboardCustomActionSetParametersOperationOutput() DashboardCustomActionSetParametersOperationOutput {
	return i.ToDashboardCustomActionSetParametersOperationOutputWithContext(context.Background())
}

func (i DashboardCustomActionSetParametersOperationArgs) ToDashboardCustomActionSetParametersOperationOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionSetParametersOperationOutput)
}

func (i DashboardCustomActionSetParametersOperationArgs) ToDashboardCustomActionSetParametersOperationPtrOutput() DashboardCustomActionSetParametersOperationPtrOutput {
	return i.ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomActionSetParametersOperationArgs) ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionSetParametersOperationOutput).ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(ctx)
}

// DashboardCustomActionSetParametersOperationPtrInput is an input type that accepts DashboardCustomActionSetParametersOperationArgs, DashboardCustomActionSetParametersOperationPtr and DashboardCustomActionSetParametersOperationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomActionSetParametersOperationPtrInput` via:
//
//	        DashboardCustomActionSetParametersOperationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomActionSetParametersOperationPtrInput interface {
	pulumi.Input

	ToDashboardCustomActionSetParametersOperationPtrOutput() DashboardCustomActionSetParametersOperationPtrOutput
	ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(context.Context) DashboardCustomActionSetParametersOperationPtrOutput
}

type dashboardCustomActionSetParametersOperationPtrType DashboardCustomActionSetParametersOperationArgs

func DashboardCustomActionSetParametersOperationPtr(v *DashboardCustomActionSetParametersOperationArgs) DashboardCustomActionSetParametersOperationPtrInput {
	return (*dashboardCustomActionSetParametersOperationPtrType)(v)
}

func (*dashboardCustomActionSetParametersOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionSetParametersOperation)(nil)).Elem()
}

func (i *dashboardCustomActionSetParametersOperationPtrType) ToDashboardCustomActionSetParametersOperationPtrOutput() DashboardCustomActionSetParametersOperationPtrOutput {
	return i.ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomActionSetParametersOperationPtrType) ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionSetParametersOperationPtrOutput)
}

type DashboardCustomActionSetParametersOperationOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionSetParametersOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionSetParametersOperation)(nil)).Elem()
}

func (o DashboardCustomActionSetParametersOperationOutput) ToDashboardCustomActionSetParametersOperationOutput() DashboardCustomActionSetParametersOperationOutput {
	return o
}

func (o DashboardCustomActionSetParametersOperationOutput) ToDashboardCustomActionSetParametersOperationOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationOutput {
	return o
}

func (o DashboardCustomActionSetParametersOperationOutput) ToDashboardCustomActionSetParametersOperationPtrOutput() DashboardCustomActionSetParametersOperationPtrOutput {
	return o.ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomActionSetParametersOperationOutput) ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomActionSetParametersOperation) *DashboardCustomActionSetParametersOperation {
		return &v
	}).(DashboardCustomActionSetParametersOperationPtrOutput)
}

func (o DashboardCustomActionSetParametersOperationOutput) ParameterValueConfigurations() DashboardSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardCustomActionSetParametersOperation) []DashboardSetParameterValueConfiguration {
		return v.ParameterValueConfigurations
	}).(DashboardSetParameterValueConfigurationArrayOutput)
}

type DashboardCustomActionSetParametersOperationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionSetParametersOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionSetParametersOperation)(nil)).Elem()
}

func (o DashboardCustomActionSetParametersOperationPtrOutput) ToDashboardCustomActionSetParametersOperationPtrOutput() DashboardCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o DashboardCustomActionSetParametersOperationPtrOutput) ToDashboardCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o DashboardCustomActionSetParametersOperationPtrOutput) Elem() DashboardCustomActionSetParametersOperationOutput {
	return o.ApplyT(func(v *DashboardCustomActionSetParametersOperation) DashboardCustomActionSetParametersOperation {
		if v != nil {
			return *v
		}
		var ret DashboardCustomActionSetParametersOperation
		return ret
	}).(DashboardCustomActionSetParametersOperationOutput)
}

func (o DashboardCustomActionSetParametersOperationPtrOutput) ParameterValueConfigurations() DashboardSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardCustomActionSetParametersOperation) []DashboardSetParameterValueConfiguration {
		if v == nil {
			return nil
		}
		return v.ParameterValueConfigurations
	}).(DashboardSetParameterValueConfigurationArrayOutput)
}

type DashboardCustomActionURLOperation struct {
	URLTarget   DashboardURLTargetConfiguration `pulumi:"uRLTarget"`
	URLTemplate string                          `pulumi:"uRLTemplate"`
}

// DashboardCustomActionURLOperationInput is an input type that accepts DashboardCustomActionURLOperationArgs and DashboardCustomActionURLOperationOutput values.
// You can construct a concrete instance of `DashboardCustomActionURLOperationInput` via:
//
//	DashboardCustomActionURLOperationArgs{...}
type DashboardCustomActionURLOperationInput interface {
	pulumi.Input

	ToDashboardCustomActionURLOperationOutput() DashboardCustomActionURLOperationOutput
	ToDashboardCustomActionURLOperationOutputWithContext(context.Context) DashboardCustomActionURLOperationOutput
}

type DashboardCustomActionURLOperationArgs struct {
	URLTarget   DashboardURLTargetConfigurationInput `pulumi:"uRLTarget"`
	URLTemplate pulumi.StringInput                   `pulumi:"uRLTemplate"`
}

func (DashboardCustomActionURLOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionURLOperation)(nil)).Elem()
}

func (i DashboardCustomActionURLOperationArgs) ToDashboardCustomActionURLOperationOutput() DashboardCustomActionURLOperationOutput {
	return i.ToDashboardCustomActionURLOperationOutputWithContext(context.Background())
}

func (i DashboardCustomActionURLOperationArgs) ToDashboardCustomActionURLOperationOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionURLOperationOutput)
}

func (i DashboardCustomActionURLOperationArgs) ToDashboardCustomActionURLOperationPtrOutput() DashboardCustomActionURLOperationPtrOutput {
	return i.ToDashboardCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomActionURLOperationArgs) ToDashboardCustomActionURLOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionURLOperationOutput).ToDashboardCustomActionURLOperationPtrOutputWithContext(ctx)
}

// DashboardCustomActionURLOperationPtrInput is an input type that accepts DashboardCustomActionURLOperationArgs, DashboardCustomActionURLOperationPtr and DashboardCustomActionURLOperationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomActionURLOperationPtrInput` via:
//
//	        DashboardCustomActionURLOperationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomActionURLOperationPtrInput interface {
	pulumi.Input

	ToDashboardCustomActionURLOperationPtrOutput() DashboardCustomActionURLOperationPtrOutput
	ToDashboardCustomActionURLOperationPtrOutputWithContext(context.Context) DashboardCustomActionURLOperationPtrOutput
}

type dashboardCustomActionURLOperationPtrType DashboardCustomActionURLOperationArgs

func DashboardCustomActionURLOperationPtr(v *DashboardCustomActionURLOperationArgs) DashboardCustomActionURLOperationPtrInput {
	return (*dashboardCustomActionURLOperationPtrType)(v)
}

func (*dashboardCustomActionURLOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionURLOperation)(nil)).Elem()
}

func (i *dashboardCustomActionURLOperationPtrType) ToDashboardCustomActionURLOperationPtrOutput() DashboardCustomActionURLOperationPtrOutput {
	return i.ToDashboardCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomActionURLOperationPtrType) ToDashboardCustomActionURLOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomActionURLOperationPtrOutput)
}

type DashboardCustomActionURLOperationOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionURLOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomActionURLOperation)(nil)).Elem()
}

func (o DashboardCustomActionURLOperationOutput) ToDashboardCustomActionURLOperationOutput() DashboardCustomActionURLOperationOutput {
	return o
}

func (o DashboardCustomActionURLOperationOutput) ToDashboardCustomActionURLOperationOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationOutput {
	return o
}

func (o DashboardCustomActionURLOperationOutput) ToDashboardCustomActionURLOperationPtrOutput() DashboardCustomActionURLOperationPtrOutput {
	return o.ToDashboardCustomActionURLOperationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomActionURLOperationOutput) ToDashboardCustomActionURLOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomActionURLOperation) *DashboardCustomActionURLOperation {
		return &v
	}).(DashboardCustomActionURLOperationPtrOutput)
}

func (o DashboardCustomActionURLOperationOutput) URLTarget() DashboardURLTargetConfigurationOutput {
	return o.ApplyT(func(v DashboardCustomActionURLOperation) DashboardURLTargetConfiguration { return v.URLTarget }).(DashboardURLTargetConfigurationOutput)
}

func (o DashboardCustomActionURLOperationOutput) URLTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCustomActionURLOperation) string { return v.URLTemplate }).(pulumi.StringOutput)
}

type DashboardCustomActionURLOperationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomActionURLOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomActionURLOperation)(nil)).Elem()
}

func (o DashboardCustomActionURLOperationPtrOutput) ToDashboardCustomActionURLOperationPtrOutput() DashboardCustomActionURLOperationPtrOutput {
	return o
}

func (o DashboardCustomActionURLOperationPtrOutput) ToDashboardCustomActionURLOperationPtrOutputWithContext(ctx context.Context) DashboardCustomActionURLOperationPtrOutput {
	return o
}

func (o DashboardCustomActionURLOperationPtrOutput) Elem() DashboardCustomActionURLOperationOutput {
	return o.ApplyT(func(v *DashboardCustomActionURLOperation) DashboardCustomActionURLOperation {
		if v != nil {
			return *v
		}
		var ret DashboardCustomActionURLOperation
		return ret
	}).(DashboardCustomActionURLOperationOutput)
}

func (o DashboardCustomActionURLOperationPtrOutput) URLTarget() DashboardURLTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomActionURLOperation) *DashboardURLTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.URLTarget
	}).(DashboardURLTargetConfigurationPtrOutput)
}

func (o DashboardCustomActionURLOperationPtrOutput) URLTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomActionURLOperation) *string {
		if v == nil {
			return nil
		}
		return &v.URLTemplate
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomColor struct {
	Color        string                 `pulumi:"color"`
	FieldValue   *string                `pulumi:"fieldValue"`
	SpecialValue *DashboardSpecialValue `pulumi:"specialValue"`
}

// DashboardCustomColorInput is an input type that accepts DashboardCustomColorArgs and DashboardCustomColorOutput values.
// You can construct a concrete instance of `DashboardCustomColorInput` via:
//
//	DashboardCustomColorArgs{...}
type DashboardCustomColorInput interface {
	pulumi.Input

	ToDashboardCustomColorOutput() DashboardCustomColorOutput
	ToDashboardCustomColorOutputWithContext(context.Context) DashboardCustomColorOutput
}

type DashboardCustomColorArgs struct {
	Color        pulumi.StringInput            `pulumi:"color"`
	FieldValue   pulumi.StringPtrInput         `pulumi:"fieldValue"`
	SpecialValue DashboardSpecialValuePtrInput `pulumi:"specialValue"`
}

func (DashboardCustomColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomColor)(nil)).Elem()
}

func (i DashboardCustomColorArgs) ToDashboardCustomColorOutput() DashboardCustomColorOutput {
	return i.ToDashboardCustomColorOutputWithContext(context.Background())
}

func (i DashboardCustomColorArgs) ToDashboardCustomColorOutputWithContext(ctx context.Context) DashboardCustomColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomColorOutput)
}

// DashboardCustomColorArrayInput is an input type that accepts DashboardCustomColorArray and DashboardCustomColorArrayOutput values.
// You can construct a concrete instance of `DashboardCustomColorArrayInput` via:
//
//	DashboardCustomColorArray{ DashboardCustomColorArgs{...} }
type DashboardCustomColorArrayInput interface {
	pulumi.Input

	ToDashboardCustomColorArrayOutput() DashboardCustomColorArrayOutput
	ToDashboardCustomColorArrayOutputWithContext(context.Context) DashboardCustomColorArrayOutput
}

type DashboardCustomColorArray []DashboardCustomColorInput

func (DashboardCustomColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCustomColor)(nil)).Elem()
}

func (i DashboardCustomColorArray) ToDashboardCustomColorArrayOutput() DashboardCustomColorArrayOutput {
	return i.ToDashboardCustomColorArrayOutputWithContext(context.Background())
}

func (i DashboardCustomColorArray) ToDashboardCustomColorArrayOutputWithContext(ctx context.Context) DashboardCustomColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomColorArrayOutput)
}

type DashboardCustomColorOutput struct{ *pulumi.OutputState }

func (DashboardCustomColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomColor)(nil)).Elem()
}

func (o DashboardCustomColorOutput) ToDashboardCustomColorOutput() DashboardCustomColorOutput {
	return o
}

func (o DashboardCustomColorOutput) ToDashboardCustomColorOutputWithContext(ctx context.Context) DashboardCustomColorOutput {
	return o
}

func (o DashboardCustomColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCustomColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardCustomColorOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCustomColor) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o DashboardCustomColorOutput) SpecialValue() DashboardSpecialValuePtrOutput {
	return o.ApplyT(func(v DashboardCustomColor) *DashboardSpecialValue { return v.SpecialValue }).(DashboardSpecialValuePtrOutput)
}

type DashboardCustomColorArrayOutput struct{ *pulumi.OutputState }

func (DashboardCustomColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardCustomColor)(nil)).Elem()
}

func (o DashboardCustomColorArrayOutput) ToDashboardCustomColorArrayOutput() DashboardCustomColorArrayOutput {
	return o
}

func (o DashboardCustomColorArrayOutput) ToDashboardCustomColorArrayOutputWithContext(ctx context.Context) DashboardCustomColorArrayOutput {
	return o
}

func (o DashboardCustomColorArrayOutput) Index(i pulumi.IntInput) DashboardCustomColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardCustomColor {
		return vs[0].([]DashboardCustomColor)[vs[1].(int)]
	}).(DashboardCustomColorOutput)
}

type DashboardCustomContentConfiguration struct {
	ContentType  *DashboardCustomContentType                      `pulumi:"contentType"`
	ContentUrl   *string                                          `pulumi:"contentUrl"`
	ImageScaling *DashboardCustomContentImageScalingConfiguration `pulumi:"imageScaling"`
}

// DashboardCustomContentConfigurationInput is an input type that accepts DashboardCustomContentConfigurationArgs and DashboardCustomContentConfigurationOutput values.
// You can construct a concrete instance of `DashboardCustomContentConfigurationInput` via:
//
//	DashboardCustomContentConfigurationArgs{...}
type DashboardCustomContentConfigurationInput interface {
	pulumi.Input

	ToDashboardCustomContentConfigurationOutput() DashboardCustomContentConfigurationOutput
	ToDashboardCustomContentConfigurationOutputWithContext(context.Context) DashboardCustomContentConfigurationOutput
}

type DashboardCustomContentConfigurationArgs struct {
	ContentType  DashboardCustomContentTypePtrInput                      `pulumi:"contentType"`
	ContentUrl   pulumi.StringPtrInput                                   `pulumi:"contentUrl"`
	ImageScaling DashboardCustomContentImageScalingConfigurationPtrInput `pulumi:"imageScaling"`
}

func (DashboardCustomContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentConfiguration)(nil)).Elem()
}

func (i DashboardCustomContentConfigurationArgs) ToDashboardCustomContentConfigurationOutput() DashboardCustomContentConfigurationOutput {
	return i.ToDashboardCustomContentConfigurationOutputWithContext(context.Background())
}

func (i DashboardCustomContentConfigurationArgs) ToDashboardCustomContentConfigurationOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentConfigurationOutput)
}

func (i DashboardCustomContentConfigurationArgs) ToDashboardCustomContentConfigurationPtrOutput() DashboardCustomContentConfigurationPtrOutput {
	return i.ToDashboardCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomContentConfigurationArgs) ToDashboardCustomContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentConfigurationOutput).ToDashboardCustomContentConfigurationPtrOutputWithContext(ctx)
}

// DashboardCustomContentConfigurationPtrInput is an input type that accepts DashboardCustomContentConfigurationArgs, DashboardCustomContentConfigurationPtr and DashboardCustomContentConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomContentConfigurationPtrInput` via:
//
//	        DashboardCustomContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomContentConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCustomContentConfigurationPtrOutput() DashboardCustomContentConfigurationPtrOutput
	ToDashboardCustomContentConfigurationPtrOutputWithContext(context.Context) DashboardCustomContentConfigurationPtrOutput
}

type dashboardCustomContentConfigurationPtrType DashboardCustomContentConfigurationArgs

func DashboardCustomContentConfigurationPtr(v *DashboardCustomContentConfigurationArgs) DashboardCustomContentConfigurationPtrInput {
	return (*dashboardCustomContentConfigurationPtrType)(v)
}

func (*dashboardCustomContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentConfiguration)(nil)).Elem()
}

func (i *dashboardCustomContentConfigurationPtrType) ToDashboardCustomContentConfigurationPtrOutput() DashboardCustomContentConfigurationPtrOutput {
	return i.ToDashboardCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomContentConfigurationPtrType) ToDashboardCustomContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentConfigurationPtrOutput)
}

type DashboardCustomContentConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentConfiguration)(nil)).Elem()
}

func (o DashboardCustomContentConfigurationOutput) ToDashboardCustomContentConfigurationOutput() DashboardCustomContentConfigurationOutput {
	return o
}

func (o DashboardCustomContentConfigurationOutput) ToDashboardCustomContentConfigurationOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationOutput {
	return o
}

func (o DashboardCustomContentConfigurationOutput) ToDashboardCustomContentConfigurationPtrOutput() DashboardCustomContentConfigurationPtrOutput {
	return o.ToDashboardCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentConfigurationOutput) ToDashboardCustomContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomContentConfiguration) *DashboardCustomContentConfiguration {
		return &v
	}).(DashboardCustomContentConfigurationPtrOutput)
}

func (o DashboardCustomContentConfigurationOutput) ContentType() DashboardCustomContentTypePtrOutput {
	return o.ApplyT(func(v DashboardCustomContentConfiguration) *DashboardCustomContentType { return v.ContentType }).(DashboardCustomContentTypePtrOutput)
}

func (o DashboardCustomContentConfigurationOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCustomContentConfiguration) *string { return v.ContentUrl }).(pulumi.StringPtrOutput)
}

func (o DashboardCustomContentConfigurationOutput) ImageScaling() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCustomContentConfiguration) *DashboardCustomContentImageScalingConfiguration {
		return v.ImageScaling
	}).(DashboardCustomContentImageScalingConfigurationPtrOutput)
}

type DashboardCustomContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentConfiguration)(nil)).Elem()
}

func (o DashboardCustomContentConfigurationPtrOutput) ToDashboardCustomContentConfigurationPtrOutput() DashboardCustomContentConfigurationPtrOutput {
	return o
}

func (o DashboardCustomContentConfigurationPtrOutput) ToDashboardCustomContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomContentConfigurationPtrOutput {
	return o
}

func (o DashboardCustomContentConfigurationPtrOutput) Elem() DashboardCustomContentConfigurationOutput {
	return o.ApplyT(func(v *DashboardCustomContentConfiguration) DashboardCustomContentConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCustomContentConfiguration
		return ret
	}).(DashboardCustomContentConfigurationOutput)
}

func (o DashboardCustomContentConfigurationPtrOutput) ContentType() DashboardCustomContentTypePtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentConfiguration) *DashboardCustomContentType {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(DashboardCustomContentTypePtrOutput)
}

func (o DashboardCustomContentConfigurationPtrOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentUrl
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCustomContentConfigurationPtrOutput) ImageScaling() DashboardCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentConfiguration) *DashboardCustomContentImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageScaling
	}).(DashboardCustomContentImageScalingConfigurationPtrOutput)
}

type DashboardCustomContentVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardCustomContentConfiguration `pulumi:"chartConfiguration"`
	DataSetIdentifier  string                               `pulumi:"dataSetIdentifier"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardCustomContentVisualInput is an input type that accepts DashboardCustomContentVisualArgs and DashboardCustomContentVisualOutput values.
// You can construct a concrete instance of `DashboardCustomContentVisualInput` via:
//
//	DashboardCustomContentVisualArgs{...}
type DashboardCustomContentVisualInput interface {
	pulumi.Input

	ToDashboardCustomContentVisualOutput() DashboardCustomContentVisualOutput
	ToDashboardCustomContentVisualOutputWithContext(context.Context) DashboardCustomContentVisualOutput
}

type DashboardCustomContentVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardCustomContentConfigurationPtrInput `pulumi:"chartConfiguration"`
	DataSetIdentifier  pulumi.StringInput                          `pulumi:"dataSetIdentifier"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardCustomContentVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentVisual)(nil)).Elem()
}

func (i DashboardCustomContentVisualArgs) ToDashboardCustomContentVisualOutput() DashboardCustomContentVisualOutput {
	return i.ToDashboardCustomContentVisualOutputWithContext(context.Background())
}

func (i DashboardCustomContentVisualArgs) ToDashboardCustomContentVisualOutputWithContext(ctx context.Context) DashboardCustomContentVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentVisualOutput)
}

func (i DashboardCustomContentVisualArgs) ToDashboardCustomContentVisualPtrOutput() DashboardCustomContentVisualPtrOutput {
	return i.ToDashboardCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i DashboardCustomContentVisualArgs) ToDashboardCustomContentVisualPtrOutputWithContext(ctx context.Context) DashboardCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentVisualOutput).ToDashboardCustomContentVisualPtrOutputWithContext(ctx)
}

// DashboardCustomContentVisualPtrInput is an input type that accepts DashboardCustomContentVisualArgs, DashboardCustomContentVisualPtr and DashboardCustomContentVisualPtrOutput values.
// You can construct a concrete instance of `DashboardCustomContentVisualPtrInput` via:
//
//	        DashboardCustomContentVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomContentVisualPtrInput interface {
	pulumi.Input

	ToDashboardCustomContentVisualPtrOutput() DashboardCustomContentVisualPtrOutput
	ToDashboardCustomContentVisualPtrOutputWithContext(context.Context) DashboardCustomContentVisualPtrOutput
}

type dashboardCustomContentVisualPtrType DashboardCustomContentVisualArgs

func DashboardCustomContentVisualPtr(v *DashboardCustomContentVisualArgs) DashboardCustomContentVisualPtrInput {
	return (*dashboardCustomContentVisualPtrType)(v)
}

func (*dashboardCustomContentVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentVisual)(nil)).Elem()
}

func (i *dashboardCustomContentVisualPtrType) ToDashboardCustomContentVisualPtrOutput() DashboardCustomContentVisualPtrOutput {
	return i.ToDashboardCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomContentVisualPtrType) ToDashboardCustomContentVisualPtrOutputWithContext(ctx context.Context) DashboardCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomContentVisualPtrOutput)
}

type DashboardCustomContentVisualOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomContentVisual)(nil)).Elem()
}

func (o DashboardCustomContentVisualOutput) ToDashboardCustomContentVisualOutput() DashboardCustomContentVisualOutput {
	return o
}

func (o DashboardCustomContentVisualOutput) ToDashboardCustomContentVisualOutputWithContext(ctx context.Context) DashboardCustomContentVisualOutput {
	return o
}

func (o DashboardCustomContentVisualOutput) ToDashboardCustomContentVisualPtrOutput() DashboardCustomContentVisualPtrOutput {
	return o.ToDashboardCustomContentVisualPtrOutputWithContext(context.Background())
}

func (o DashboardCustomContentVisualOutput) ToDashboardCustomContentVisualPtrOutputWithContext(ctx context.Context) DashboardCustomContentVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomContentVisual) *DashboardCustomContentVisual {
		return &v
	}).(DashboardCustomContentVisualPtrOutput)
}

func (o DashboardCustomContentVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardCustomContentVisualOutput) ChartConfiguration() DashboardCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) *DashboardCustomContentConfiguration { return v.ChartConfiguration }).(DashboardCustomContentConfigurationPtrOutput)
}

func (o DashboardCustomContentVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o DashboardCustomContentVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardCustomContentVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardCustomContentVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCustomContentVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardCustomContentVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomContentVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomContentVisual)(nil)).Elem()
}

func (o DashboardCustomContentVisualPtrOutput) ToDashboardCustomContentVisualPtrOutput() DashboardCustomContentVisualPtrOutput {
	return o
}

func (o DashboardCustomContentVisualPtrOutput) ToDashboardCustomContentVisualPtrOutputWithContext(ctx context.Context) DashboardCustomContentVisualPtrOutput {
	return o
}

func (o DashboardCustomContentVisualPtrOutput) Elem() DashboardCustomContentVisualOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) DashboardCustomContentVisual {
		if v != nil {
			return *v
		}
		var ret DashboardCustomContentVisual
		return ret
	}).(DashboardCustomContentVisualOutput)
}

func (o DashboardCustomContentVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardCustomContentVisualPtrOutput) ChartConfiguration() DashboardCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) *DashboardCustomContentConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardCustomContentConfigurationPtrOutput)
}

func (o DashboardCustomContentVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCustomContentVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardCustomContentVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardCustomContentVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomFilterConfiguration struct {
	CategoryValue    *string                                  `pulumi:"categoryValue"`
	MatchOperator    DashboardCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       DashboardFilterNullOption                `pulumi:"nullOption"`
	ParameterName    *string                                  `pulumi:"parameterName"`
	SelectAllOptions *DashboardCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// DashboardCustomFilterConfigurationInput is an input type that accepts DashboardCustomFilterConfigurationArgs and DashboardCustomFilterConfigurationOutput values.
// You can construct a concrete instance of `DashboardCustomFilterConfigurationInput` via:
//
//	DashboardCustomFilterConfigurationArgs{...}
type DashboardCustomFilterConfigurationInput interface {
	pulumi.Input

	ToDashboardCustomFilterConfigurationOutput() DashboardCustomFilterConfigurationOutput
	ToDashboardCustomFilterConfigurationOutputWithContext(context.Context) DashboardCustomFilterConfigurationOutput
}

type DashboardCustomFilterConfigurationArgs struct {
	CategoryValue    pulumi.StringPtrInput                           `pulumi:"categoryValue"`
	MatchOperator    DashboardCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       DashboardFilterNullOptionInput                  `pulumi:"nullOption"`
	ParameterName    pulumi.StringPtrInput                           `pulumi:"parameterName"`
	SelectAllOptions DashboardCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (DashboardCustomFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomFilterConfiguration)(nil)).Elem()
}

func (i DashboardCustomFilterConfigurationArgs) ToDashboardCustomFilterConfigurationOutput() DashboardCustomFilterConfigurationOutput {
	return i.ToDashboardCustomFilterConfigurationOutputWithContext(context.Background())
}

func (i DashboardCustomFilterConfigurationArgs) ToDashboardCustomFilterConfigurationOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterConfigurationOutput)
}

func (i DashboardCustomFilterConfigurationArgs) ToDashboardCustomFilterConfigurationPtrOutput() DashboardCustomFilterConfigurationPtrOutput {
	return i.ToDashboardCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomFilterConfigurationArgs) ToDashboardCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterConfigurationOutput).ToDashboardCustomFilterConfigurationPtrOutputWithContext(ctx)
}

// DashboardCustomFilterConfigurationPtrInput is an input type that accepts DashboardCustomFilterConfigurationArgs, DashboardCustomFilterConfigurationPtr and DashboardCustomFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomFilterConfigurationPtrInput` via:
//
//	        DashboardCustomFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomFilterConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCustomFilterConfigurationPtrOutput() DashboardCustomFilterConfigurationPtrOutput
	ToDashboardCustomFilterConfigurationPtrOutputWithContext(context.Context) DashboardCustomFilterConfigurationPtrOutput
}

type dashboardCustomFilterConfigurationPtrType DashboardCustomFilterConfigurationArgs

func DashboardCustomFilterConfigurationPtr(v *DashboardCustomFilterConfigurationArgs) DashboardCustomFilterConfigurationPtrInput {
	return (*dashboardCustomFilterConfigurationPtrType)(v)
}

func (*dashboardCustomFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomFilterConfiguration)(nil)).Elem()
}

func (i *dashboardCustomFilterConfigurationPtrType) ToDashboardCustomFilterConfigurationPtrOutput() DashboardCustomFilterConfigurationPtrOutput {
	return i.ToDashboardCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomFilterConfigurationPtrType) ToDashboardCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterConfigurationPtrOutput)
}

type DashboardCustomFilterConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCustomFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomFilterConfiguration)(nil)).Elem()
}

func (o DashboardCustomFilterConfigurationOutput) ToDashboardCustomFilterConfigurationOutput() DashboardCustomFilterConfigurationOutput {
	return o
}

func (o DashboardCustomFilterConfigurationOutput) ToDashboardCustomFilterConfigurationOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationOutput {
	return o
}

func (o DashboardCustomFilterConfigurationOutput) ToDashboardCustomFilterConfigurationPtrOutput() DashboardCustomFilterConfigurationPtrOutput {
	return o.ToDashboardCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomFilterConfigurationOutput) ToDashboardCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomFilterConfiguration) *DashboardCustomFilterConfiguration {
		return &v
	}).(DashboardCustomFilterConfigurationPtrOutput)
}

func (o DashboardCustomFilterConfigurationOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCustomFilterConfiguration) *string { return v.CategoryValue }).(pulumi.StringPtrOutput)
}

func (o DashboardCustomFilterConfigurationOutput) MatchOperator() DashboardCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v DashboardCustomFilterConfiguration) DashboardCategoryFilterMatchOperator {
		return v.MatchOperator
	}).(DashboardCategoryFilterMatchOperatorOutput)
}

func (o DashboardCustomFilterConfigurationOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardCustomFilterConfiguration) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardCustomFilterConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardCustomFilterConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o DashboardCustomFilterConfigurationOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardCustomFilterConfiguration) *DashboardCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardCustomFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomFilterConfiguration)(nil)).Elem()
}

func (o DashboardCustomFilterConfigurationPtrOutput) ToDashboardCustomFilterConfigurationPtrOutput() DashboardCustomFilterConfigurationPtrOutput {
	return o
}

func (o DashboardCustomFilterConfigurationPtrOutput) ToDashboardCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterConfigurationPtrOutput {
	return o
}

func (o DashboardCustomFilterConfigurationPtrOutput) Elem() DashboardCustomFilterConfigurationOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) DashboardCustomFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCustomFilterConfiguration
		return ret
	}).(DashboardCustomFilterConfigurationOutput)
}

func (o DashboardCustomFilterConfigurationPtrOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CategoryValue
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCustomFilterConfigurationPtrOutput) MatchOperator() DashboardCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) *DashboardCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

func (o DashboardCustomFilterConfigurationPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardCustomFilterConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardCustomFilterConfigurationPtrOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterConfiguration) *DashboardCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardCustomFilterListConfiguration struct {
	CategoryValues   []string                                 `pulumi:"categoryValues"`
	MatchOperator    DashboardCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       DashboardFilterNullOption                `pulumi:"nullOption"`
	SelectAllOptions *DashboardCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// DashboardCustomFilterListConfigurationInput is an input type that accepts DashboardCustomFilterListConfigurationArgs and DashboardCustomFilterListConfigurationOutput values.
// You can construct a concrete instance of `DashboardCustomFilterListConfigurationInput` via:
//
//	DashboardCustomFilterListConfigurationArgs{...}
type DashboardCustomFilterListConfigurationInput interface {
	pulumi.Input

	ToDashboardCustomFilterListConfigurationOutput() DashboardCustomFilterListConfigurationOutput
	ToDashboardCustomFilterListConfigurationOutputWithContext(context.Context) DashboardCustomFilterListConfigurationOutput
}

type DashboardCustomFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                         `pulumi:"categoryValues"`
	MatchOperator    DashboardCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       DashboardFilterNullOptionInput                  `pulumi:"nullOption"`
	SelectAllOptions DashboardCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (DashboardCustomFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomFilterListConfiguration)(nil)).Elem()
}

func (i DashboardCustomFilterListConfigurationArgs) ToDashboardCustomFilterListConfigurationOutput() DashboardCustomFilterListConfigurationOutput {
	return i.ToDashboardCustomFilterListConfigurationOutputWithContext(context.Background())
}

func (i DashboardCustomFilterListConfigurationArgs) ToDashboardCustomFilterListConfigurationOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterListConfigurationOutput)
}

func (i DashboardCustomFilterListConfigurationArgs) ToDashboardCustomFilterListConfigurationPtrOutput() DashboardCustomFilterListConfigurationPtrOutput {
	return i.ToDashboardCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomFilterListConfigurationArgs) ToDashboardCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterListConfigurationOutput).ToDashboardCustomFilterListConfigurationPtrOutputWithContext(ctx)
}

// DashboardCustomFilterListConfigurationPtrInput is an input type that accepts DashboardCustomFilterListConfigurationArgs, DashboardCustomFilterListConfigurationPtr and DashboardCustomFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomFilterListConfigurationPtrInput` via:
//
//	        DashboardCustomFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCustomFilterListConfigurationPtrOutput() DashboardCustomFilterListConfigurationPtrOutput
	ToDashboardCustomFilterListConfigurationPtrOutputWithContext(context.Context) DashboardCustomFilterListConfigurationPtrOutput
}

type dashboardCustomFilterListConfigurationPtrType DashboardCustomFilterListConfigurationArgs

func DashboardCustomFilterListConfigurationPtr(v *DashboardCustomFilterListConfigurationArgs) DashboardCustomFilterListConfigurationPtrInput {
	return (*dashboardCustomFilterListConfigurationPtrType)(v)
}

func (*dashboardCustomFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomFilterListConfiguration)(nil)).Elem()
}

func (i *dashboardCustomFilterListConfigurationPtrType) ToDashboardCustomFilterListConfigurationPtrOutput() DashboardCustomFilterListConfigurationPtrOutput {
	return i.ToDashboardCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomFilterListConfigurationPtrType) ToDashboardCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomFilterListConfigurationPtrOutput)
}

type DashboardCustomFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCustomFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomFilterListConfiguration)(nil)).Elem()
}

func (o DashboardCustomFilterListConfigurationOutput) ToDashboardCustomFilterListConfigurationOutput() DashboardCustomFilterListConfigurationOutput {
	return o
}

func (o DashboardCustomFilterListConfigurationOutput) ToDashboardCustomFilterListConfigurationOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationOutput {
	return o
}

func (o DashboardCustomFilterListConfigurationOutput) ToDashboardCustomFilterListConfigurationPtrOutput() DashboardCustomFilterListConfigurationPtrOutput {
	return o.ToDashboardCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomFilterListConfigurationOutput) ToDashboardCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomFilterListConfiguration) *DashboardCustomFilterListConfiguration {
		return &v
	}).(DashboardCustomFilterListConfigurationPtrOutput)
}

func (o DashboardCustomFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardCustomFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o DashboardCustomFilterListConfigurationOutput) MatchOperator() DashboardCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v DashboardCustomFilterListConfiguration) DashboardCategoryFilterMatchOperator {
		return v.MatchOperator
	}).(DashboardCategoryFilterMatchOperatorOutput)
}

func (o DashboardCustomFilterListConfigurationOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardCustomFilterListConfiguration) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardCustomFilterListConfigurationOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardCustomFilterListConfiguration) *DashboardCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardCustomFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomFilterListConfiguration)(nil)).Elem()
}

func (o DashboardCustomFilterListConfigurationPtrOutput) ToDashboardCustomFilterListConfigurationPtrOutput() DashboardCustomFilterListConfigurationPtrOutput {
	return o
}

func (o DashboardCustomFilterListConfigurationPtrOutput) ToDashboardCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomFilterListConfigurationPtrOutput {
	return o
}

func (o DashboardCustomFilterListConfigurationPtrOutput) Elem() DashboardCustomFilterListConfigurationOutput {
	return o.ApplyT(func(v *DashboardCustomFilterListConfiguration) DashboardCustomFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCustomFilterListConfiguration
		return ret
	}).(DashboardCustomFilterListConfigurationOutput)
}

func (o DashboardCustomFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardCustomFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o DashboardCustomFilterListConfigurationPtrOutput) MatchOperator() DashboardCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterListConfiguration) *DashboardCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

func (o DashboardCustomFilterListConfigurationPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterListConfiguration) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardCustomFilterListConfigurationPtrOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardCustomFilterListConfiguration) *DashboardCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardCustomNarrativeOptions struct {
	Narrative string `pulumi:"narrative"`
}

// DashboardCustomNarrativeOptionsInput is an input type that accepts DashboardCustomNarrativeOptionsArgs and DashboardCustomNarrativeOptionsOutput values.
// You can construct a concrete instance of `DashboardCustomNarrativeOptionsInput` via:
//
//	DashboardCustomNarrativeOptionsArgs{...}
type DashboardCustomNarrativeOptionsInput interface {
	pulumi.Input

	ToDashboardCustomNarrativeOptionsOutput() DashboardCustomNarrativeOptionsOutput
	ToDashboardCustomNarrativeOptionsOutputWithContext(context.Context) DashboardCustomNarrativeOptionsOutput
}

type DashboardCustomNarrativeOptionsArgs struct {
	Narrative pulumi.StringInput `pulumi:"narrative"`
}

func (DashboardCustomNarrativeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomNarrativeOptions)(nil)).Elem()
}

func (i DashboardCustomNarrativeOptionsArgs) ToDashboardCustomNarrativeOptionsOutput() DashboardCustomNarrativeOptionsOutput {
	return i.ToDashboardCustomNarrativeOptionsOutputWithContext(context.Background())
}

func (i DashboardCustomNarrativeOptionsArgs) ToDashboardCustomNarrativeOptionsOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomNarrativeOptionsOutput)
}

func (i DashboardCustomNarrativeOptionsArgs) ToDashboardCustomNarrativeOptionsPtrOutput() DashboardCustomNarrativeOptionsPtrOutput {
	return i.ToDashboardCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardCustomNarrativeOptionsArgs) ToDashboardCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomNarrativeOptionsOutput).ToDashboardCustomNarrativeOptionsPtrOutputWithContext(ctx)
}

// DashboardCustomNarrativeOptionsPtrInput is an input type that accepts DashboardCustomNarrativeOptionsArgs, DashboardCustomNarrativeOptionsPtr and DashboardCustomNarrativeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardCustomNarrativeOptionsPtrInput` via:
//
//	        DashboardCustomNarrativeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomNarrativeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardCustomNarrativeOptionsPtrOutput() DashboardCustomNarrativeOptionsPtrOutput
	ToDashboardCustomNarrativeOptionsPtrOutputWithContext(context.Context) DashboardCustomNarrativeOptionsPtrOutput
}

type dashboardCustomNarrativeOptionsPtrType DashboardCustomNarrativeOptionsArgs

func DashboardCustomNarrativeOptionsPtr(v *DashboardCustomNarrativeOptionsArgs) DashboardCustomNarrativeOptionsPtrInput {
	return (*dashboardCustomNarrativeOptionsPtrType)(v)
}

func (*dashboardCustomNarrativeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomNarrativeOptions)(nil)).Elem()
}

func (i *dashboardCustomNarrativeOptionsPtrType) ToDashboardCustomNarrativeOptionsPtrOutput() DashboardCustomNarrativeOptionsPtrOutput {
	return i.ToDashboardCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomNarrativeOptionsPtrType) ToDashboardCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomNarrativeOptionsPtrOutput)
}

type DashboardCustomNarrativeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardCustomNarrativeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomNarrativeOptions)(nil)).Elem()
}

func (o DashboardCustomNarrativeOptionsOutput) ToDashboardCustomNarrativeOptionsOutput() DashboardCustomNarrativeOptionsOutput {
	return o
}

func (o DashboardCustomNarrativeOptionsOutput) ToDashboardCustomNarrativeOptionsOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsOutput {
	return o
}

func (o DashboardCustomNarrativeOptionsOutput) ToDashboardCustomNarrativeOptionsPtrOutput() DashboardCustomNarrativeOptionsPtrOutput {
	return o.ToDashboardCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardCustomNarrativeOptionsOutput) ToDashboardCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomNarrativeOptions) *DashboardCustomNarrativeOptions {
		return &v
	}).(DashboardCustomNarrativeOptionsPtrOutput)
}

func (o DashboardCustomNarrativeOptionsOutput) Narrative() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardCustomNarrativeOptions) string { return v.Narrative }).(pulumi.StringOutput)
}

type DashboardCustomNarrativeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomNarrativeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomNarrativeOptions)(nil)).Elem()
}

func (o DashboardCustomNarrativeOptionsPtrOutput) ToDashboardCustomNarrativeOptionsPtrOutput() DashboardCustomNarrativeOptionsPtrOutput {
	return o
}

func (o DashboardCustomNarrativeOptionsPtrOutput) ToDashboardCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) DashboardCustomNarrativeOptionsPtrOutput {
	return o
}

func (o DashboardCustomNarrativeOptionsPtrOutput) Elem() DashboardCustomNarrativeOptionsOutput {
	return o.ApplyT(func(v *DashboardCustomNarrativeOptions) DashboardCustomNarrativeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardCustomNarrativeOptions
		return ret
	}).(DashboardCustomNarrativeOptionsOutput)
}

func (o DashboardCustomNarrativeOptionsPtrOutput) Narrative() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardCustomNarrativeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Narrative
	}).(pulumi.StringPtrOutput)
}

type DashboardCustomParameterValues struct {
	DateTimeValues []string  `pulumi:"dateTimeValues"`
	DecimalValues  []float64 `pulumi:"decimalValues"`
	IntegerValues  []float64 `pulumi:"integerValues"`
	StringValues   []string  `pulumi:"stringValues"`
}

// DashboardCustomParameterValuesInput is an input type that accepts DashboardCustomParameterValuesArgs and DashboardCustomParameterValuesOutput values.
// You can construct a concrete instance of `DashboardCustomParameterValuesInput` via:
//
//	DashboardCustomParameterValuesArgs{...}
type DashboardCustomParameterValuesInput interface {
	pulumi.Input

	ToDashboardCustomParameterValuesOutput() DashboardCustomParameterValuesOutput
	ToDashboardCustomParameterValuesOutputWithContext(context.Context) DashboardCustomParameterValuesOutput
}

type DashboardCustomParameterValuesArgs struct {
	DateTimeValues pulumi.StringArrayInput  `pulumi:"dateTimeValues"`
	DecimalValues  pulumi.Float64ArrayInput `pulumi:"decimalValues"`
	IntegerValues  pulumi.Float64ArrayInput `pulumi:"integerValues"`
	StringValues   pulumi.StringArrayInput  `pulumi:"stringValues"`
}

func (DashboardCustomParameterValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomParameterValues)(nil)).Elem()
}

func (i DashboardCustomParameterValuesArgs) ToDashboardCustomParameterValuesOutput() DashboardCustomParameterValuesOutput {
	return i.ToDashboardCustomParameterValuesOutputWithContext(context.Background())
}

func (i DashboardCustomParameterValuesArgs) ToDashboardCustomParameterValuesOutputWithContext(ctx context.Context) DashboardCustomParameterValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomParameterValuesOutput)
}

func (i DashboardCustomParameterValuesArgs) ToDashboardCustomParameterValuesPtrOutput() DashboardCustomParameterValuesPtrOutput {
	return i.ToDashboardCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i DashboardCustomParameterValuesArgs) ToDashboardCustomParameterValuesPtrOutputWithContext(ctx context.Context) DashboardCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomParameterValuesOutput).ToDashboardCustomParameterValuesPtrOutputWithContext(ctx)
}

// DashboardCustomParameterValuesPtrInput is an input type that accepts DashboardCustomParameterValuesArgs, DashboardCustomParameterValuesPtr and DashboardCustomParameterValuesPtrOutput values.
// You can construct a concrete instance of `DashboardCustomParameterValuesPtrInput` via:
//
//	        DashboardCustomParameterValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomParameterValuesPtrInput interface {
	pulumi.Input

	ToDashboardCustomParameterValuesPtrOutput() DashboardCustomParameterValuesPtrOutput
	ToDashboardCustomParameterValuesPtrOutputWithContext(context.Context) DashboardCustomParameterValuesPtrOutput
}

type dashboardCustomParameterValuesPtrType DashboardCustomParameterValuesArgs

func DashboardCustomParameterValuesPtr(v *DashboardCustomParameterValuesArgs) DashboardCustomParameterValuesPtrInput {
	return (*dashboardCustomParameterValuesPtrType)(v)
}

func (*dashboardCustomParameterValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomParameterValues)(nil)).Elem()
}

func (i *dashboardCustomParameterValuesPtrType) ToDashboardCustomParameterValuesPtrOutput() DashboardCustomParameterValuesPtrOutput {
	return i.ToDashboardCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomParameterValuesPtrType) ToDashboardCustomParameterValuesPtrOutputWithContext(ctx context.Context) DashboardCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomParameterValuesPtrOutput)
}

type DashboardCustomParameterValuesOutput struct{ *pulumi.OutputState }

func (DashboardCustomParameterValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomParameterValues)(nil)).Elem()
}

func (o DashboardCustomParameterValuesOutput) ToDashboardCustomParameterValuesOutput() DashboardCustomParameterValuesOutput {
	return o
}

func (o DashboardCustomParameterValuesOutput) ToDashboardCustomParameterValuesOutputWithContext(ctx context.Context) DashboardCustomParameterValuesOutput {
	return o
}

func (o DashboardCustomParameterValuesOutput) ToDashboardCustomParameterValuesPtrOutput() DashboardCustomParameterValuesPtrOutput {
	return o.ToDashboardCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (o DashboardCustomParameterValuesOutput) ToDashboardCustomParameterValuesPtrOutputWithContext(ctx context.Context) DashboardCustomParameterValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomParameterValues) *DashboardCustomParameterValues {
		return &v
	}).(DashboardCustomParameterValuesPtrOutput)
}

func (o DashboardCustomParameterValuesOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardCustomParameterValues) []string { return v.DateTimeValues }).(pulumi.StringArrayOutput)
}

func (o DashboardCustomParameterValuesOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardCustomParameterValues) []float64 { return v.DecimalValues }).(pulumi.Float64ArrayOutput)
}

func (o DashboardCustomParameterValuesOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardCustomParameterValues) []float64 { return v.IntegerValues }).(pulumi.Float64ArrayOutput)
}

func (o DashboardCustomParameterValuesOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardCustomParameterValues) []string { return v.StringValues }).(pulumi.StringArrayOutput)
}

type DashboardCustomParameterValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomParameterValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomParameterValues)(nil)).Elem()
}

func (o DashboardCustomParameterValuesPtrOutput) ToDashboardCustomParameterValuesPtrOutput() DashboardCustomParameterValuesPtrOutput {
	return o
}

func (o DashboardCustomParameterValuesPtrOutput) ToDashboardCustomParameterValuesPtrOutputWithContext(ctx context.Context) DashboardCustomParameterValuesPtrOutput {
	return o
}

func (o DashboardCustomParameterValuesPtrOutput) Elem() DashboardCustomParameterValuesOutput {
	return o.ApplyT(func(v *DashboardCustomParameterValues) DashboardCustomParameterValues {
		if v != nil {
			return *v
		}
		var ret DashboardCustomParameterValues
		return ret
	}).(DashboardCustomParameterValuesOutput)
}

func (o DashboardCustomParameterValuesPtrOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.DateTimeValues
	}).(pulumi.StringArrayOutput)
}

func (o DashboardCustomParameterValuesPtrOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *DashboardCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.DecimalValues
	}).(pulumi.Float64ArrayOutput)
}

func (o DashboardCustomParameterValuesPtrOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *DashboardCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.IntegerValues
	}).(pulumi.Float64ArrayOutput)
}

func (o DashboardCustomParameterValuesPtrOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.StringValues
	}).(pulumi.StringArrayOutput)
}

type DashboardCustomValuesConfiguration struct {
	CustomValues     DashboardCustomParameterValues `pulumi:"customValues"`
	IncludeNullValue *bool                          `pulumi:"includeNullValue"`
}

// DashboardCustomValuesConfigurationInput is an input type that accepts DashboardCustomValuesConfigurationArgs and DashboardCustomValuesConfigurationOutput values.
// You can construct a concrete instance of `DashboardCustomValuesConfigurationInput` via:
//
//	DashboardCustomValuesConfigurationArgs{...}
type DashboardCustomValuesConfigurationInput interface {
	pulumi.Input

	ToDashboardCustomValuesConfigurationOutput() DashboardCustomValuesConfigurationOutput
	ToDashboardCustomValuesConfigurationOutputWithContext(context.Context) DashboardCustomValuesConfigurationOutput
}

type DashboardCustomValuesConfigurationArgs struct {
	CustomValues     DashboardCustomParameterValuesInput `pulumi:"customValues"`
	IncludeNullValue pulumi.BoolPtrInput                 `pulumi:"includeNullValue"`
}

func (DashboardCustomValuesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomValuesConfiguration)(nil)).Elem()
}

func (i DashboardCustomValuesConfigurationArgs) ToDashboardCustomValuesConfigurationOutput() DashboardCustomValuesConfigurationOutput {
	return i.ToDashboardCustomValuesConfigurationOutputWithContext(context.Background())
}

func (i DashboardCustomValuesConfigurationArgs) ToDashboardCustomValuesConfigurationOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomValuesConfigurationOutput)
}

func (i DashboardCustomValuesConfigurationArgs) ToDashboardCustomValuesConfigurationPtrOutput() DashboardCustomValuesConfigurationPtrOutput {
	return i.ToDashboardCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardCustomValuesConfigurationArgs) ToDashboardCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomValuesConfigurationOutput).ToDashboardCustomValuesConfigurationPtrOutputWithContext(ctx)
}

// DashboardCustomValuesConfigurationPtrInput is an input type that accepts DashboardCustomValuesConfigurationArgs, DashboardCustomValuesConfigurationPtr and DashboardCustomValuesConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardCustomValuesConfigurationPtrInput` via:
//
//	        DashboardCustomValuesConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardCustomValuesConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardCustomValuesConfigurationPtrOutput() DashboardCustomValuesConfigurationPtrOutput
	ToDashboardCustomValuesConfigurationPtrOutputWithContext(context.Context) DashboardCustomValuesConfigurationPtrOutput
}

type dashboardCustomValuesConfigurationPtrType DashboardCustomValuesConfigurationArgs

func DashboardCustomValuesConfigurationPtr(v *DashboardCustomValuesConfigurationArgs) DashboardCustomValuesConfigurationPtrInput {
	return (*dashboardCustomValuesConfigurationPtrType)(v)
}

func (*dashboardCustomValuesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomValuesConfiguration)(nil)).Elem()
}

func (i *dashboardCustomValuesConfigurationPtrType) ToDashboardCustomValuesConfigurationPtrOutput() DashboardCustomValuesConfigurationPtrOutput {
	return i.ToDashboardCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardCustomValuesConfigurationPtrType) ToDashboardCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardCustomValuesConfigurationPtrOutput)
}

type DashboardCustomValuesConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardCustomValuesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardCustomValuesConfiguration)(nil)).Elem()
}

func (o DashboardCustomValuesConfigurationOutput) ToDashboardCustomValuesConfigurationOutput() DashboardCustomValuesConfigurationOutput {
	return o
}

func (o DashboardCustomValuesConfigurationOutput) ToDashboardCustomValuesConfigurationOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationOutput {
	return o
}

func (o DashboardCustomValuesConfigurationOutput) ToDashboardCustomValuesConfigurationPtrOutput() DashboardCustomValuesConfigurationPtrOutput {
	return o.ToDashboardCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardCustomValuesConfigurationOutput) ToDashboardCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardCustomValuesConfiguration) *DashboardCustomValuesConfiguration {
		return &v
	}).(DashboardCustomValuesConfigurationPtrOutput)
}

func (o DashboardCustomValuesConfigurationOutput) CustomValues() DashboardCustomParameterValuesOutput {
	return o.ApplyT(func(v DashboardCustomValuesConfiguration) DashboardCustomParameterValues { return v.CustomValues }).(DashboardCustomParameterValuesOutput)
}

func (o DashboardCustomValuesConfigurationOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardCustomValuesConfiguration) *bool { return v.IncludeNullValue }).(pulumi.BoolPtrOutput)
}

type DashboardCustomValuesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardCustomValuesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardCustomValuesConfiguration)(nil)).Elem()
}

func (o DashboardCustomValuesConfigurationPtrOutput) ToDashboardCustomValuesConfigurationPtrOutput() DashboardCustomValuesConfigurationPtrOutput {
	return o
}

func (o DashboardCustomValuesConfigurationPtrOutput) ToDashboardCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) DashboardCustomValuesConfigurationPtrOutput {
	return o
}

func (o DashboardCustomValuesConfigurationPtrOutput) Elem() DashboardCustomValuesConfigurationOutput {
	return o.ApplyT(func(v *DashboardCustomValuesConfiguration) DashboardCustomValuesConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardCustomValuesConfiguration
		return ret
	}).(DashboardCustomValuesConfigurationOutput)
}

func (o DashboardCustomValuesConfigurationPtrOutput) CustomValues() DashboardCustomParameterValuesPtrOutput {
	return o.ApplyT(func(v *DashboardCustomValuesConfiguration) *DashboardCustomParameterValues {
		if v == nil {
			return nil
		}
		return &v.CustomValues
	}).(DashboardCustomParameterValuesPtrOutput)
}

func (o DashboardCustomValuesConfigurationPtrOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardCustomValuesConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeNullValue
	}).(pulumi.BoolPtrOutput)
}

type DashboardDataBarsOptions struct {
	FieldId       string  `pulumi:"fieldId"`
	NegativeColor *string `pulumi:"negativeColor"`
	PositiveColor *string `pulumi:"positiveColor"`
}

// DashboardDataBarsOptionsInput is an input type that accepts DashboardDataBarsOptionsArgs and DashboardDataBarsOptionsOutput values.
// You can construct a concrete instance of `DashboardDataBarsOptionsInput` via:
//
//	DashboardDataBarsOptionsArgs{...}
type DashboardDataBarsOptionsInput interface {
	pulumi.Input

	ToDashboardDataBarsOptionsOutput() DashboardDataBarsOptionsOutput
	ToDashboardDataBarsOptionsOutputWithContext(context.Context) DashboardDataBarsOptionsOutput
}

type DashboardDataBarsOptionsArgs struct {
	FieldId       pulumi.StringInput    `pulumi:"fieldId"`
	NegativeColor pulumi.StringPtrInput `pulumi:"negativeColor"`
	PositiveColor pulumi.StringPtrInput `pulumi:"positiveColor"`
}

func (DashboardDataBarsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataBarsOptions)(nil)).Elem()
}

func (i DashboardDataBarsOptionsArgs) ToDashboardDataBarsOptionsOutput() DashboardDataBarsOptionsOutput {
	return i.ToDashboardDataBarsOptionsOutputWithContext(context.Background())
}

func (i DashboardDataBarsOptionsArgs) ToDashboardDataBarsOptionsOutputWithContext(ctx context.Context) DashboardDataBarsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataBarsOptionsOutput)
}

func (i DashboardDataBarsOptionsArgs) ToDashboardDataBarsOptionsPtrOutput() DashboardDataBarsOptionsPtrOutput {
	return i.ToDashboardDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDataBarsOptionsArgs) ToDashboardDataBarsOptionsPtrOutputWithContext(ctx context.Context) DashboardDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataBarsOptionsOutput).ToDashboardDataBarsOptionsPtrOutputWithContext(ctx)
}

// DashboardDataBarsOptionsPtrInput is an input type that accepts DashboardDataBarsOptionsArgs, DashboardDataBarsOptionsPtr and DashboardDataBarsOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDataBarsOptionsPtrInput` via:
//
//	        DashboardDataBarsOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDataBarsOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDataBarsOptionsPtrOutput() DashboardDataBarsOptionsPtrOutput
	ToDashboardDataBarsOptionsPtrOutputWithContext(context.Context) DashboardDataBarsOptionsPtrOutput
}

type dashboardDataBarsOptionsPtrType DashboardDataBarsOptionsArgs

func DashboardDataBarsOptionsPtr(v *DashboardDataBarsOptionsArgs) DashboardDataBarsOptionsPtrInput {
	return (*dashboardDataBarsOptionsPtrType)(v)
}

func (*dashboardDataBarsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataBarsOptions)(nil)).Elem()
}

func (i *dashboardDataBarsOptionsPtrType) ToDashboardDataBarsOptionsPtrOutput() DashboardDataBarsOptionsPtrOutput {
	return i.ToDashboardDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDataBarsOptionsPtrType) ToDashboardDataBarsOptionsPtrOutputWithContext(ctx context.Context) DashboardDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataBarsOptionsPtrOutput)
}

type DashboardDataBarsOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDataBarsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataBarsOptions)(nil)).Elem()
}

func (o DashboardDataBarsOptionsOutput) ToDashboardDataBarsOptionsOutput() DashboardDataBarsOptionsOutput {
	return o
}

func (o DashboardDataBarsOptionsOutput) ToDashboardDataBarsOptionsOutputWithContext(ctx context.Context) DashboardDataBarsOptionsOutput {
	return o
}

func (o DashboardDataBarsOptionsOutput) ToDashboardDataBarsOptionsPtrOutput() DashboardDataBarsOptionsPtrOutput {
	return o.ToDashboardDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDataBarsOptionsOutput) ToDashboardDataBarsOptionsPtrOutputWithContext(ctx context.Context) DashboardDataBarsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataBarsOptions) *DashboardDataBarsOptions {
		return &v
	}).(DashboardDataBarsOptionsPtrOutput)
}

func (o DashboardDataBarsOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataBarsOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardDataBarsOptionsOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataBarsOptions) *string { return v.NegativeColor }).(pulumi.StringPtrOutput)
}

func (o DashboardDataBarsOptionsOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataBarsOptions) *string { return v.PositiveColor }).(pulumi.StringPtrOutput)
}

type DashboardDataBarsOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataBarsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataBarsOptions)(nil)).Elem()
}

func (o DashboardDataBarsOptionsPtrOutput) ToDashboardDataBarsOptionsPtrOutput() DashboardDataBarsOptionsPtrOutput {
	return o
}

func (o DashboardDataBarsOptionsPtrOutput) ToDashboardDataBarsOptionsPtrOutputWithContext(ctx context.Context) DashboardDataBarsOptionsPtrOutput {
	return o
}

func (o DashboardDataBarsOptionsPtrOutput) Elem() DashboardDataBarsOptionsOutput {
	return o.ApplyT(func(v *DashboardDataBarsOptions) DashboardDataBarsOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDataBarsOptions
		return ret
	}).(DashboardDataBarsOptionsOutput)
}

func (o DashboardDataBarsOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataBarsOptionsPtrOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.NegativeColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataBarsOptionsPtrOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.PositiveColor
	}).(pulumi.StringPtrOutput)
}

type DashboardDataColor struct {
	Color     *string  `pulumi:"color"`
	DataValue *float64 `pulumi:"dataValue"`
}

// DashboardDataColorInput is an input type that accepts DashboardDataColorArgs and DashboardDataColorOutput values.
// You can construct a concrete instance of `DashboardDataColorInput` via:
//
//	DashboardDataColorArgs{...}
type DashboardDataColorInput interface {
	pulumi.Input

	ToDashboardDataColorOutput() DashboardDataColorOutput
	ToDashboardDataColorOutputWithContext(context.Context) DashboardDataColorOutput
}

type DashboardDataColorArgs struct {
	Color     pulumi.StringPtrInput  `pulumi:"color"`
	DataValue pulumi.Float64PtrInput `pulumi:"dataValue"`
}

func (DashboardDataColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataColor)(nil)).Elem()
}

func (i DashboardDataColorArgs) ToDashboardDataColorOutput() DashboardDataColorOutput {
	return i.ToDashboardDataColorOutputWithContext(context.Background())
}

func (i DashboardDataColorArgs) ToDashboardDataColorOutputWithContext(ctx context.Context) DashboardDataColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataColorOutput)
}

func (i DashboardDataColorArgs) ToDashboardDataColorPtrOutput() DashboardDataColorPtrOutput {
	return i.ToDashboardDataColorPtrOutputWithContext(context.Background())
}

func (i DashboardDataColorArgs) ToDashboardDataColorPtrOutputWithContext(ctx context.Context) DashboardDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataColorOutput).ToDashboardDataColorPtrOutputWithContext(ctx)
}

// DashboardDataColorPtrInput is an input type that accepts DashboardDataColorArgs, DashboardDataColorPtr and DashboardDataColorPtrOutput values.
// You can construct a concrete instance of `DashboardDataColorPtrInput` via:
//
//	        DashboardDataColorArgs{...}
//
//	or:
//
//	        nil
type DashboardDataColorPtrInput interface {
	pulumi.Input

	ToDashboardDataColorPtrOutput() DashboardDataColorPtrOutput
	ToDashboardDataColorPtrOutputWithContext(context.Context) DashboardDataColorPtrOutput
}

type dashboardDataColorPtrType DashboardDataColorArgs

func DashboardDataColorPtr(v *DashboardDataColorArgs) DashboardDataColorPtrInput {
	return (*dashboardDataColorPtrType)(v)
}

func (*dashboardDataColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataColor)(nil)).Elem()
}

func (i *dashboardDataColorPtrType) ToDashboardDataColorPtrOutput() DashboardDataColorPtrOutput {
	return i.ToDashboardDataColorPtrOutputWithContext(context.Background())
}

func (i *dashboardDataColorPtrType) ToDashboardDataColorPtrOutputWithContext(ctx context.Context) DashboardDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataColorPtrOutput)
}

// DashboardDataColorArrayInput is an input type that accepts DashboardDataColorArray and DashboardDataColorArrayOutput values.
// You can construct a concrete instance of `DashboardDataColorArrayInput` via:
//
//	DashboardDataColorArray{ DashboardDataColorArgs{...} }
type DashboardDataColorArrayInput interface {
	pulumi.Input

	ToDashboardDataColorArrayOutput() DashboardDataColorArrayOutput
	ToDashboardDataColorArrayOutputWithContext(context.Context) DashboardDataColorArrayOutput
}

type DashboardDataColorArray []DashboardDataColorInput

func (DashboardDataColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataColor)(nil)).Elem()
}

func (i DashboardDataColorArray) ToDashboardDataColorArrayOutput() DashboardDataColorArrayOutput {
	return i.ToDashboardDataColorArrayOutputWithContext(context.Background())
}

func (i DashboardDataColorArray) ToDashboardDataColorArrayOutputWithContext(ctx context.Context) DashboardDataColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataColorArrayOutput)
}

type DashboardDataColorOutput struct{ *pulumi.OutputState }

func (DashboardDataColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataColor)(nil)).Elem()
}

func (o DashboardDataColorOutput) ToDashboardDataColorOutput() DashboardDataColorOutput {
	return o
}

func (o DashboardDataColorOutput) ToDashboardDataColorOutputWithContext(ctx context.Context) DashboardDataColorOutput {
	return o
}

func (o DashboardDataColorOutput) ToDashboardDataColorPtrOutput() DashboardDataColorPtrOutput {
	return o.ToDashboardDataColorPtrOutputWithContext(context.Background())
}

func (o DashboardDataColorOutput) ToDashboardDataColorPtrOutputWithContext(ctx context.Context) DashboardDataColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataColor) *DashboardDataColor {
		return &v
	}).(DashboardDataColorPtrOutput)
}

func (o DashboardDataColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardDataColorOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardDataColor) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

type DashboardDataColorPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataColor)(nil)).Elem()
}

func (o DashboardDataColorPtrOutput) ToDashboardDataColorPtrOutput() DashboardDataColorPtrOutput {
	return o
}

func (o DashboardDataColorPtrOutput) ToDashboardDataColorPtrOutputWithContext(ctx context.Context) DashboardDataColorPtrOutput {
	return o
}

func (o DashboardDataColorPtrOutput) Elem() DashboardDataColorOutput {
	return o.ApplyT(func(v *DashboardDataColor) DashboardDataColor {
		if v != nil {
			return *v
		}
		var ret DashboardDataColor
		return ret
	}).(DashboardDataColorOutput)
}

func (o DashboardDataColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataColorPtrOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardDataColor) *float64 {
		if v == nil {
			return nil
		}
		return v.DataValue
	}).(pulumi.Float64PtrOutput)
}

type DashboardDataColorArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataColor)(nil)).Elem()
}

func (o DashboardDataColorArrayOutput) ToDashboardDataColorArrayOutput() DashboardDataColorArrayOutput {
	return o
}

func (o DashboardDataColorArrayOutput) ToDashboardDataColorArrayOutputWithContext(ctx context.Context) DashboardDataColorArrayOutput {
	return o
}

func (o DashboardDataColorArrayOutput) Index(i pulumi.IntInput) DashboardDataColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataColor {
		return vs[0].([]DashboardDataColor)[vs[1].(int)]
	}).(DashboardDataColorOutput)
}

type DashboardDataFieldSeriesItem struct {
	AxisBinding DashboardAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                            `pulumi:"fieldId"`
	FieldValue  *string                           `pulumi:"fieldValue"`
	Settings    *DashboardLineChartSeriesSettings `pulumi:"settings"`
}

// DashboardDataFieldSeriesItemInput is an input type that accepts DashboardDataFieldSeriesItemArgs and DashboardDataFieldSeriesItemOutput values.
// You can construct a concrete instance of `DashboardDataFieldSeriesItemInput` via:
//
//	DashboardDataFieldSeriesItemArgs{...}
type DashboardDataFieldSeriesItemInput interface {
	pulumi.Input

	ToDashboardDataFieldSeriesItemOutput() DashboardDataFieldSeriesItemOutput
	ToDashboardDataFieldSeriesItemOutputWithContext(context.Context) DashboardDataFieldSeriesItemOutput
}

type DashboardDataFieldSeriesItemArgs struct {
	AxisBinding DashboardAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                       `pulumi:"fieldId"`
	FieldValue  pulumi.StringPtrInput                    `pulumi:"fieldValue"`
	Settings    DashboardLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (DashboardDataFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataFieldSeriesItem)(nil)).Elem()
}

func (i DashboardDataFieldSeriesItemArgs) ToDashboardDataFieldSeriesItemOutput() DashboardDataFieldSeriesItemOutput {
	return i.ToDashboardDataFieldSeriesItemOutputWithContext(context.Background())
}

func (i DashboardDataFieldSeriesItemArgs) ToDashboardDataFieldSeriesItemOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataFieldSeriesItemOutput)
}

func (i DashboardDataFieldSeriesItemArgs) ToDashboardDataFieldSeriesItemPtrOutput() DashboardDataFieldSeriesItemPtrOutput {
	return i.ToDashboardDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i DashboardDataFieldSeriesItemArgs) ToDashboardDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataFieldSeriesItemOutput).ToDashboardDataFieldSeriesItemPtrOutputWithContext(ctx)
}

// DashboardDataFieldSeriesItemPtrInput is an input type that accepts DashboardDataFieldSeriesItemArgs, DashboardDataFieldSeriesItemPtr and DashboardDataFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `DashboardDataFieldSeriesItemPtrInput` via:
//
//	        DashboardDataFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type DashboardDataFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToDashboardDataFieldSeriesItemPtrOutput() DashboardDataFieldSeriesItemPtrOutput
	ToDashboardDataFieldSeriesItemPtrOutputWithContext(context.Context) DashboardDataFieldSeriesItemPtrOutput
}

type dashboardDataFieldSeriesItemPtrType DashboardDataFieldSeriesItemArgs

func DashboardDataFieldSeriesItemPtr(v *DashboardDataFieldSeriesItemArgs) DashboardDataFieldSeriesItemPtrInput {
	return (*dashboardDataFieldSeriesItemPtrType)(v)
}

func (*dashboardDataFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataFieldSeriesItem)(nil)).Elem()
}

func (i *dashboardDataFieldSeriesItemPtrType) ToDashboardDataFieldSeriesItemPtrOutput() DashboardDataFieldSeriesItemPtrOutput {
	return i.ToDashboardDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *dashboardDataFieldSeriesItemPtrType) ToDashboardDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataFieldSeriesItemPtrOutput)
}

type DashboardDataFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (DashboardDataFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataFieldSeriesItem)(nil)).Elem()
}

func (o DashboardDataFieldSeriesItemOutput) ToDashboardDataFieldSeriesItemOutput() DashboardDataFieldSeriesItemOutput {
	return o
}

func (o DashboardDataFieldSeriesItemOutput) ToDashboardDataFieldSeriesItemOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemOutput {
	return o
}

func (o DashboardDataFieldSeriesItemOutput) ToDashboardDataFieldSeriesItemPtrOutput() DashboardDataFieldSeriesItemPtrOutput {
	return o.ToDashboardDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o DashboardDataFieldSeriesItemOutput) ToDashboardDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataFieldSeriesItem) *DashboardDataFieldSeriesItem {
		return &v
	}).(DashboardDataFieldSeriesItemPtrOutput)
}

func (o DashboardDataFieldSeriesItemOutput) AxisBinding() DashboardAxisBindingOutput {
	return o.ApplyT(func(v DashboardDataFieldSeriesItem) DashboardAxisBinding { return v.AxisBinding }).(DashboardAxisBindingOutput)
}

func (o DashboardDataFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardDataFieldSeriesItemOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataFieldSeriesItem) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o DashboardDataFieldSeriesItemOutput) Settings() DashboardLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v DashboardDataFieldSeriesItem) *DashboardLineChartSeriesSettings { return v.Settings }).(DashboardLineChartSeriesSettingsPtrOutput)
}

type DashboardDataFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataFieldSeriesItem)(nil)).Elem()
}

func (o DashboardDataFieldSeriesItemPtrOutput) ToDashboardDataFieldSeriesItemPtrOutput() DashboardDataFieldSeriesItemPtrOutput {
	return o
}

func (o DashboardDataFieldSeriesItemPtrOutput) ToDashboardDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardDataFieldSeriesItemPtrOutput {
	return o
}

func (o DashboardDataFieldSeriesItemPtrOutput) Elem() DashboardDataFieldSeriesItemOutput {
	return o.ApplyT(func(v *DashboardDataFieldSeriesItem) DashboardDataFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret DashboardDataFieldSeriesItem
		return ret
	}).(DashboardDataFieldSeriesItemOutput)
}

func (o DashboardDataFieldSeriesItemPtrOutput) AxisBinding() DashboardAxisBindingPtrOutput {
	return o.ApplyT(func(v *DashboardDataFieldSeriesItem) *DashboardAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(DashboardAxisBindingPtrOutput)
}

func (o DashboardDataFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataFieldSeriesItemPtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataFieldSeriesItemPtrOutput) Settings() DashboardLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardDataFieldSeriesItem) *DashboardLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(DashboardLineChartSeriesSettingsPtrOutput)
}

type DashboardDataLabelOptions struct {
	CategoryLabelVisibility *DashboardVisibility        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          []DashboardDataLabelType    `pulumi:"dataLabelTypes"`
	LabelColor              *string                     `pulumi:"labelColor"`
	LabelContent            *DashboardDataLabelContent  `pulumi:"labelContent"`
	LabelFontConfiguration  *DashboardFontConfiguration `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  *DashboardVisibility        `pulumi:"measureLabelVisibility"`
	Overlap                 *DashboardDataLabelOverlap  `pulumi:"overlap"`
	Position                *DashboardDataLabelPosition `pulumi:"position"`
	Visibility              *DashboardVisibility        `pulumi:"visibility"`
}

// DashboardDataLabelOptionsInput is an input type that accepts DashboardDataLabelOptionsArgs and DashboardDataLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardDataLabelOptionsInput` via:
//
//	DashboardDataLabelOptionsArgs{...}
type DashboardDataLabelOptionsInput interface {
	pulumi.Input

	ToDashboardDataLabelOptionsOutput() DashboardDataLabelOptionsOutput
	ToDashboardDataLabelOptionsOutputWithContext(context.Context) DashboardDataLabelOptionsOutput
}

type DashboardDataLabelOptionsArgs struct {
	CategoryLabelVisibility DashboardVisibilityPtrInput        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          DashboardDataLabelTypeArrayInput   `pulumi:"dataLabelTypes"`
	LabelColor              pulumi.StringPtrInput              `pulumi:"labelColor"`
	LabelContent            DashboardDataLabelContentPtrInput  `pulumi:"labelContent"`
	LabelFontConfiguration  DashboardFontConfigurationPtrInput `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  DashboardVisibilityPtrInput        `pulumi:"measureLabelVisibility"`
	Overlap                 DashboardDataLabelOverlapPtrInput  `pulumi:"overlap"`
	Position                DashboardDataLabelPositionPtrInput `pulumi:"position"`
	Visibility              DashboardVisibilityPtrInput        `pulumi:"visibility"`
}

func (DashboardDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelOptions)(nil)).Elem()
}

func (i DashboardDataLabelOptionsArgs) ToDashboardDataLabelOptionsOutput() DashboardDataLabelOptionsOutput {
	return i.ToDashboardDataLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardDataLabelOptionsArgs) ToDashboardDataLabelOptionsOutputWithContext(ctx context.Context) DashboardDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataLabelOptionsOutput)
}

func (i DashboardDataLabelOptionsArgs) ToDashboardDataLabelOptionsPtrOutput() DashboardDataLabelOptionsPtrOutput {
	return i.ToDashboardDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDataLabelOptionsArgs) ToDashboardDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataLabelOptionsOutput).ToDashboardDataLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardDataLabelOptionsPtrInput is an input type that accepts DashboardDataLabelOptionsArgs, DashboardDataLabelOptionsPtr and DashboardDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDataLabelOptionsPtrInput` via:
//
//	        DashboardDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDataLabelOptionsPtrOutput() DashboardDataLabelOptionsPtrOutput
	ToDashboardDataLabelOptionsPtrOutputWithContext(context.Context) DashboardDataLabelOptionsPtrOutput
}

type dashboardDataLabelOptionsPtrType DashboardDataLabelOptionsArgs

func DashboardDataLabelOptionsPtr(v *DashboardDataLabelOptionsArgs) DashboardDataLabelOptionsPtrInput {
	return (*dashboardDataLabelOptionsPtrType)(v)
}

func (*dashboardDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataLabelOptions)(nil)).Elem()
}

func (i *dashboardDataLabelOptionsPtrType) ToDashboardDataLabelOptionsPtrOutput() DashboardDataLabelOptionsPtrOutput {
	return i.ToDashboardDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDataLabelOptionsPtrType) ToDashboardDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataLabelOptionsPtrOutput)
}

type DashboardDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelOptions)(nil)).Elem()
}

func (o DashboardDataLabelOptionsOutput) ToDashboardDataLabelOptionsOutput() DashboardDataLabelOptionsOutput {
	return o
}

func (o DashboardDataLabelOptionsOutput) ToDashboardDataLabelOptionsOutputWithContext(ctx context.Context) DashboardDataLabelOptionsOutput {
	return o
}

func (o DashboardDataLabelOptionsOutput) ToDashboardDataLabelOptionsPtrOutput() DashboardDataLabelOptionsPtrOutput {
	return o.ToDashboardDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDataLabelOptionsOutput) ToDashboardDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataLabelOptions) *DashboardDataLabelOptions {
		return &v
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) CategoryLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardVisibility { return v.CategoryLabelVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) DataLabelTypes() DashboardDataLabelTypeArrayOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) []DashboardDataLabelType { return v.DataLabelTypes }).(DashboardDataLabelTypeArrayOutput)
}

func (o DashboardDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) LabelContent() DashboardDataLabelContentPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardDataLabelContent { return v.LabelContent }).(DashboardDataLabelContentPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) LabelFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardFontConfiguration { return v.LabelFontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) MeasureLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardVisibility { return v.MeasureLabelVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) Overlap() DashboardDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardDataLabelOverlap { return v.Overlap }).(DashboardDataLabelOverlapPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) Position() DashboardDataLabelPositionPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardDataLabelPosition { return v.Position }).(DashboardDataLabelPositionPtrOutput)
}

func (o DashboardDataLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDataLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataLabelOptions)(nil)).Elem()
}

func (o DashboardDataLabelOptionsPtrOutput) ToDashboardDataLabelOptionsPtrOutput() DashboardDataLabelOptionsPtrOutput {
	return o
}

func (o DashboardDataLabelOptionsPtrOutput) ToDashboardDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardDataLabelOptionsPtrOutput {
	return o
}

func (o DashboardDataLabelOptionsPtrOutput) Elem() DashboardDataLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) DashboardDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDataLabelOptions
		return ret
	}).(DashboardDataLabelOptionsOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) CategoryLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) DataLabelTypes() DashboardDataLabelTypeArrayOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) []DashboardDataLabelType {
		if v == nil {
			return nil
		}
		return v.DataLabelTypes
	}).(DashboardDataLabelTypeArrayOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) LabelContent() DashboardDataLabelContentPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardDataLabelContent {
		if v == nil {
			return nil
		}
		return v.LabelContent
	}).(DashboardDataLabelContentPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) LabelFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) MeasureLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) Overlap() DashboardDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardDataLabelOverlap {
		if v == nil {
			return nil
		}
		return v.Overlap
	}).(DashboardDataLabelOverlapPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) Position() DashboardDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(DashboardDataLabelPositionPtrOutput)
}

func (o DashboardDataLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardDataLabelType struct {
	DataPathLabelType  *DashboardDataPathLabelType  `pulumi:"dataPathLabelType"`
	FieldLabelType     *DashboardFieldLabelType     `pulumi:"fieldLabelType"`
	MaximumLabelType   *DashboardMaximumLabelType   `pulumi:"maximumLabelType"`
	MinimumLabelType   *DashboardMinimumLabelType   `pulumi:"minimumLabelType"`
	RangeEndsLabelType *DashboardRangeEndsLabelType `pulumi:"rangeEndsLabelType"`
}

// DashboardDataLabelTypeInput is an input type that accepts DashboardDataLabelTypeArgs and DashboardDataLabelTypeOutput values.
// You can construct a concrete instance of `DashboardDataLabelTypeInput` via:
//
//	DashboardDataLabelTypeArgs{...}
type DashboardDataLabelTypeInput interface {
	pulumi.Input

	ToDashboardDataLabelTypeOutput() DashboardDataLabelTypeOutput
	ToDashboardDataLabelTypeOutputWithContext(context.Context) DashboardDataLabelTypeOutput
}

type DashboardDataLabelTypeArgs struct {
	DataPathLabelType  DashboardDataPathLabelTypePtrInput  `pulumi:"dataPathLabelType"`
	FieldLabelType     DashboardFieldLabelTypePtrInput     `pulumi:"fieldLabelType"`
	MaximumLabelType   DashboardMaximumLabelTypePtrInput   `pulumi:"maximumLabelType"`
	MinimumLabelType   DashboardMinimumLabelTypePtrInput   `pulumi:"minimumLabelType"`
	RangeEndsLabelType DashboardRangeEndsLabelTypePtrInput `pulumi:"rangeEndsLabelType"`
}

func (DashboardDataLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelType)(nil)).Elem()
}

func (i DashboardDataLabelTypeArgs) ToDashboardDataLabelTypeOutput() DashboardDataLabelTypeOutput {
	return i.ToDashboardDataLabelTypeOutputWithContext(context.Background())
}

func (i DashboardDataLabelTypeArgs) ToDashboardDataLabelTypeOutputWithContext(ctx context.Context) DashboardDataLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataLabelTypeOutput)
}

// DashboardDataLabelTypeArrayInput is an input type that accepts DashboardDataLabelTypeArray and DashboardDataLabelTypeArrayOutput values.
// You can construct a concrete instance of `DashboardDataLabelTypeArrayInput` via:
//
//	DashboardDataLabelTypeArray{ DashboardDataLabelTypeArgs{...} }
type DashboardDataLabelTypeArrayInput interface {
	pulumi.Input

	ToDashboardDataLabelTypeArrayOutput() DashboardDataLabelTypeArrayOutput
	ToDashboardDataLabelTypeArrayOutputWithContext(context.Context) DashboardDataLabelTypeArrayOutput
}

type DashboardDataLabelTypeArray []DashboardDataLabelTypeInput

func (DashboardDataLabelTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataLabelType)(nil)).Elem()
}

func (i DashboardDataLabelTypeArray) ToDashboardDataLabelTypeArrayOutput() DashboardDataLabelTypeArrayOutput {
	return i.ToDashboardDataLabelTypeArrayOutputWithContext(context.Background())
}

func (i DashboardDataLabelTypeArray) ToDashboardDataLabelTypeArrayOutputWithContext(ctx context.Context) DashboardDataLabelTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataLabelTypeArrayOutput)
}

type DashboardDataLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataLabelType)(nil)).Elem()
}

func (o DashboardDataLabelTypeOutput) ToDashboardDataLabelTypeOutput() DashboardDataLabelTypeOutput {
	return o
}

func (o DashboardDataLabelTypeOutput) ToDashboardDataLabelTypeOutputWithContext(ctx context.Context) DashboardDataLabelTypeOutput {
	return o
}

func (o DashboardDataLabelTypeOutput) DataPathLabelType() DashboardDataPathLabelTypePtrOutput {
	return o.ApplyT(func(v DashboardDataLabelType) *DashboardDataPathLabelType { return v.DataPathLabelType }).(DashboardDataPathLabelTypePtrOutput)
}

func (o DashboardDataLabelTypeOutput) FieldLabelType() DashboardFieldLabelTypePtrOutput {
	return o.ApplyT(func(v DashboardDataLabelType) *DashboardFieldLabelType { return v.FieldLabelType }).(DashboardFieldLabelTypePtrOutput)
}

func (o DashboardDataLabelTypeOutput) MaximumLabelType() DashboardMaximumLabelTypePtrOutput {
	return o.ApplyT(func(v DashboardDataLabelType) *DashboardMaximumLabelType { return v.MaximumLabelType }).(DashboardMaximumLabelTypePtrOutput)
}

func (o DashboardDataLabelTypeOutput) MinimumLabelType() DashboardMinimumLabelTypePtrOutput {
	return o.ApplyT(func(v DashboardDataLabelType) *DashboardMinimumLabelType { return v.MinimumLabelType }).(DashboardMinimumLabelTypePtrOutput)
}

func (o DashboardDataLabelTypeOutput) RangeEndsLabelType() DashboardRangeEndsLabelTypePtrOutput {
	return o.ApplyT(func(v DashboardDataLabelType) *DashboardRangeEndsLabelType { return v.RangeEndsLabelType }).(DashboardRangeEndsLabelTypePtrOutput)
}

type DashboardDataLabelTypeArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataLabelTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataLabelType)(nil)).Elem()
}

func (o DashboardDataLabelTypeArrayOutput) ToDashboardDataLabelTypeArrayOutput() DashboardDataLabelTypeArrayOutput {
	return o
}

func (o DashboardDataLabelTypeArrayOutput) ToDashboardDataLabelTypeArrayOutputWithContext(ctx context.Context) DashboardDataLabelTypeArrayOutput {
	return o
}

func (o DashboardDataLabelTypeArrayOutput) Index(i pulumi.IntInput) DashboardDataLabelTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataLabelType {
		return vs[0].([]DashboardDataLabelType)[vs[1].(int)]
	}).(DashboardDataLabelTypeOutput)
}

type DashboardDataPathColor struct {
	Color           string                    `pulumi:"color"`
	Element         DashboardDataPathValue    `pulumi:"element"`
	TimeGranularity *DashboardTimeGranularity `pulumi:"timeGranularity"`
}

// DashboardDataPathColorInput is an input type that accepts DashboardDataPathColorArgs and DashboardDataPathColorOutput values.
// You can construct a concrete instance of `DashboardDataPathColorInput` via:
//
//	DashboardDataPathColorArgs{...}
type DashboardDataPathColorInput interface {
	pulumi.Input

	ToDashboardDataPathColorOutput() DashboardDataPathColorOutput
	ToDashboardDataPathColorOutputWithContext(context.Context) DashboardDataPathColorOutput
}

type DashboardDataPathColorArgs struct {
	Color           pulumi.StringInput               `pulumi:"color"`
	Element         DashboardDataPathValueInput      `pulumi:"element"`
	TimeGranularity DashboardTimeGranularityPtrInput `pulumi:"timeGranularity"`
}

func (DashboardDataPathColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathColor)(nil)).Elem()
}

func (i DashboardDataPathColorArgs) ToDashboardDataPathColorOutput() DashboardDataPathColorOutput {
	return i.ToDashboardDataPathColorOutputWithContext(context.Background())
}

func (i DashboardDataPathColorArgs) ToDashboardDataPathColorOutputWithContext(ctx context.Context) DashboardDataPathColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathColorOutput)
}

// DashboardDataPathColorArrayInput is an input type that accepts DashboardDataPathColorArray and DashboardDataPathColorArrayOutput values.
// You can construct a concrete instance of `DashboardDataPathColorArrayInput` via:
//
//	DashboardDataPathColorArray{ DashboardDataPathColorArgs{...} }
type DashboardDataPathColorArrayInput interface {
	pulumi.Input

	ToDashboardDataPathColorArrayOutput() DashboardDataPathColorArrayOutput
	ToDashboardDataPathColorArrayOutputWithContext(context.Context) DashboardDataPathColorArrayOutput
}

type DashboardDataPathColorArray []DashboardDataPathColorInput

func (DashboardDataPathColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataPathColor)(nil)).Elem()
}

func (i DashboardDataPathColorArray) ToDashboardDataPathColorArrayOutput() DashboardDataPathColorArrayOutput {
	return i.ToDashboardDataPathColorArrayOutputWithContext(context.Background())
}

func (i DashboardDataPathColorArray) ToDashboardDataPathColorArrayOutputWithContext(ctx context.Context) DashboardDataPathColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathColorArrayOutput)
}

type DashboardDataPathColorOutput struct{ *pulumi.OutputState }

func (DashboardDataPathColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathColor)(nil)).Elem()
}

func (o DashboardDataPathColorOutput) ToDashboardDataPathColorOutput() DashboardDataPathColorOutput {
	return o
}

func (o DashboardDataPathColorOutput) ToDashboardDataPathColorOutputWithContext(ctx context.Context) DashboardDataPathColorOutput {
	return o
}

func (o DashboardDataPathColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataPathColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardDataPathColorOutput) Element() DashboardDataPathValueOutput {
	return o.ApplyT(func(v DashboardDataPathColor) DashboardDataPathValue { return v.Element }).(DashboardDataPathValueOutput)
}

func (o DashboardDataPathColorOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardDataPathColor) *DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

type DashboardDataPathColorArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataPathColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataPathColor)(nil)).Elem()
}

func (o DashboardDataPathColorArrayOutput) ToDashboardDataPathColorArrayOutput() DashboardDataPathColorArrayOutput {
	return o
}

func (o DashboardDataPathColorArrayOutput) ToDashboardDataPathColorArrayOutputWithContext(ctx context.Context) DashboardDataPathColorArrayOutput {
	return o
}

func (o DashboardDataPathColorArrayOutput) Index(i pulumi.IntInput) DashboardDataPathColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataPathColor {
		return vs[0].([]DashboardDataPathColor)[vs[1].(int)]
	}).(DashboardDataPathColorOutput)
}

type DashboardDataPathLabelType struct {
	FieldId    *string              `pulumi:"fieldId"`
	FieldValue *string              `pulumi:"fieldValue"`
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardDataPathLabelTypeInput is an input type that accepts DashboardDataPathLabelTypeArgs and DashboardDataPathLabelTypeOutput values.
// You can construct a concrete instance of `DashboardDataPathLabelTypeInput` via:
//
//	DashboardDataPathLabelTypeArgs{...}
type DashboardDataPathLabelTypeInput interface {
	pulumi.Input

	ToDashboardDataPathLabelTypeOutput() DashboardDataPathLabelTypeOutput
	ToDashboardDataPathLabelTypeOutputWithContext(context.Context) DashboardDataPathLabelTypeOutput
}

type DashboardDataPathLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput       `pulumi:"fieldId"`
	FieldValue pulumi.StringPtrInput       `pulumi:"fieldValue"`
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardDataPathLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathLabelType)(nil)).Elem()
}

func (i DashboardDataPathLabelTypeArgs) ToDashboardDataPathLabelTypeOutput() DashboardDataPathLabelTypeOutput {
	return i.ToDashboardDataPathLabelTypeOutputWithContext(context.Background())
}

func (i DashboardDataPathLabelTypeArgs) ToDashboardDataPathLabelTypeOutputWithContext(ctx context.Context) DashboardDataPathLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathLabelTypeOutput)
}

func (i DashboardDataPathLabelTypeArgs) ToDashboardDataPathLabelTypePtrOutput() DashboardDataPathLabelTypePtrOutput {
	return i.ToDashboardDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i DashboardDataPathLabelTypeArgs) ToDashboardDataPathLabelTypePtrOutputWithContext(ctx context.Context) DashboardDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathLabelTypeOutput).ToDashboardDataPathLabelTypePtrOutputWithContext(ctx)
}

// DashboardDataPathLabelTypePtrInput is an input type that accepts DashboardDataPathLabelTypeArgs, DashboardDataPathLabelTypePtr and DashboardDataPathLabelTypePtrOutput values.
// You can construct a concrete instance of `DashboardDataPathLabelTypePtrInput` via:
//
//	        DashboardDataPathLabelTypeArgs{...}
//
//	or:
//
//	        nil
type DashboardDataPathLabelTypePtrInput interface {
	pulumi.Input

	ToDashboardDataPathLabelTypePtrOutput() DashboardDataPathLabelTypePtrOutput
	ToDashboardDataPathLabelTypePtrOutputWithContext(context.Context) DashboardDataPathLabelTypePtrOutput
}

type dashboardDataPathLabelTypePtrType DashboardDataPathLabelTypeArgs

func DashboardDataPathLabelTypePtr(v *DashboardDataPathLabelTypeArgs) DashboardDataPathLabelTypePtrInput {
	return (*dashboardDataPathLabelTypePtrType)(v)
}

func (*dashboardDataPathLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPathLabelType)(nil)).Elem()
}

func (i *dashboardDataPathLabelTypePtrType) ToDashboardDataPathLabelTypePtrOutput() DashboardDataPathLabelTypePtrOutput {
	return i.ToDashboardDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i *dashboardDataPathLabelTypePtrType) ToDashboardDataPathLabelTypePtrOutputWithContext(ctx context.Context) DashboardDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathLabelTypePtrOutput)
}

type DashboardDataPathLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardDataPathLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathLabelType)(nil)).Elem()
}

func (o DashboardDataPathLabelTypeOutput) ToDashboardDataPathLabelTypeOutput() DashboardDataPathLabelTypeOutput {
	return o
}

func (o DashboardDataPathLabelTypeOutput) ToDashboardDataPathLabelTypeOutputWithContext(ctx context.Context) DashboardDataPathLabelTypeOutput {
	return o
}

func (o DashboardDataPathLabelTypeOutput) ToDashboardDataPathLabelTypePtrOutput() DashboardDataPathLabelTypePtrOutput {
	return o.ToDashboardDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (o DashboardDataPathLabelTypeOutput) ToDashboardDataPathLabelTypePtrOutputWithContext(ctx context.Context) DashboardDataPathLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataPathLabelType) *DashboardDataPathLabelType {
		return &v
	}).(DashboardDataPathLabelTypePtrOutput)
}

func (o DashboardDataPathLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataPathLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o DashboardDataPathLabelTypeOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDataPathLabelType) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o DashboardDataPathLabelTypeOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDataPathLabelType) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardDataPathLabelTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardDataPathLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPathLabelType)(nil)).Elem()
}

func (o DashboardDataPathLabelTypePtrOutput) ToDashboardDataPathLabelTypePtrOutput() DashboardDataPathLabelTypePtrOutput {
	return o
}

func (o DashboardDataPathLabelTypePtrOutput) ToDashboardDataPathLabelTypePtrOutputWithContext(ctx context.Context) DashboardDataPathLabelTypePtrOutput {
	return o
}

func (o DashboardDataPathLabelTypePtrOutput) Elem() DashboardDataPathLabelTypeOutput {
	return o.ApplyT(func(v *DashboardDataPathLabelType) DashboardDataPathLabelType {
		if v != nil {
			return *v
		}
		var ret DashboardDataPathLabelType
		return ret
	}).(DashboardDataPathLabelTypeOutput)
}

func (o DashboardDataPathLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataPathLabelTypePtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDataPathLabelTypePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDataPathLabelType) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardDataPathSort struct {
	Direction DashboardSortDirection   `pulumi:"direction"`
	SortPaths []DashboardDataPathValue `pulumi:"sortPaths"`
}

// DashboardDataPathSortInput is an input type that accepts DashboardDataPathSortArgs and DashboardDataPathSortOutput values.
// You can construct a concrete instance of `DashboardDataPathSortInput` via:
//
//	DashboardDataPathSortArgs{...}
type DashboardDataPathSortInput interface {
	pulumi.Input

	ToDashboardDataPathSortOutput() DashboardDataPathSortOutput
	ToDashboardDataPathSortOutputWithContext(context.Context) DashboardDataPathSortOutput
}

type DashboardDataPathSortArgs struct {
	Direction DashboardSortDirectionInput      `pulumi:"direction"`
	SortPaths DashboardDataPathValueArrayInput `pulumi:"sortPaths"`
}

func (DashboardDataPathSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathSort)(nil)).Elem()
}

func (i DashboardDataPathSortArgs) ToDashboardDataPathSortOutput() DashboardDataPathSortOutput {
	return i.ToDashboardDataPathSortOutputWithContext(context.Background())
}

func (i DashboardDataPathSortArgs) ToDashboardDataPathSortOutputWithContext(ctx context.Context) DashboardDataPathSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathSortOutput)
}

func (i DashboardDataPathSortArgs) ToDashboardDataPathSortPtrOutput() DashboardDataPathSortPtrOutput {
	return i.ToDashboardDataPathSortPtrOutputWithContext(context.Background())
}

func (i DashboardDataPathSortArgs) ToDashboardDataPathSortPtrOutputWithContext(ctx context.Context) DashboardDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathSortOutput).ToDashboardDataPathSortPtrOutputWithContext(ctx)
}

// DashboardDataPathSortPtrInput is an input type that accepts DashboardDataPathSortArgs, DashboardDataPathSortPtr and DashboardDataPathSortPtrOutput values.
// You can construct a concrete instance of `DashboardDataPathSortPtrInput` via:
//
//	        DashboardDataPathSortArgs{...}
//
//	or:
//
//	        nil
type DashboardDataPathSortPtrInput interface {
	pulumi.Input

	ToDashboardDataPathSortPtrOutput() DashboardDataPathSortPtrOutput
	ToDashboardDataPathSortPtrOutputWithContext(context.Context) DashboardDataPathSortPtrOutput
}

type dashboardDataPathSortPtrType DashboardDataPathSortArgs

func DashboardDataPathSortPtr(v *DashboardDataPathSortArgs) DashboardDataPathSortPtrInput {
	return (*dashboardDataPathSortPtrType)(v)
}

func (*dashboardDataPathSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPathSort)(nil)).Elem()
}

func (i *dashboardDataPathSortPtrType) ToDashboardDataPathSortPtrOutput() DashboardDataPathSortPtrOutput {
	return i.ToDashboardDataPathSortPtrOutputWithContext(context.Background())
}

func (i *dashboardDataPathSortPtrType) ToDashboardDataPathSortPtrOutputWithContext(ctx context.Context) DashboardDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathSortPtrOutput)
}

type DashboardDataPathSortOutput struct{ *pulumi.OutputState }

func (DashboardDataPathSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathSort)(nil)).Elem()
}

func (o DashboardDataPathSortOutput) ToDashboardDataPathSortOutput() DashboardDataPathSortOutput {
	return o
}

func (o DashboardDataPathSortOutput) ToDashboardDataPathSortOutputWithContext(ctx context.Context) DashboardDataPathSortOutput {
	return o
}

func (o DashboardDataPathSortOutput) ToDashboardDataPathSortPtrOutput() DashboardDataPathSortPtrOutput {
	return o.ToDashboardDataPathSortPtrOutputWithContext(context.Background())
}

func (o DashboardDataPathSortOutput) ToDashboardDataPathSortPtrOutputWithContext(ctx context.Context) DashboardDataPathSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataPathSort) *DashboardDataPathSort {
		return &v
	}).(DashboardDataPathSortPtrOutput)
}

func (o DashboardDataPathSortOutput) Direction() DashboardSortDirectionOutput {
	return o.ApplyT(func(v DashboardDataPathSort) DashboardSortDirection { return v.Direction }).(DashboardSortDirectionOutput)
}

func (o DashboardDataPathSortOutput) SortPaths() DashboardDataPathValueArrayOutput {
	return o.ApplyT(func(v DashboardDataPathSort) []DashboardDataPathValue { return v.SortPaths }).(DashboardDataPathValueArrayOutput)
}

type DashboardDataPathSortPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataPathSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPathSort)(nil)).Elem()
}

func (o DashboardDataPathSortPtrOutput) ToDashboardDataPathSortPtrOutput() DashboardDataPathSortPtrOutput {
	return o
}

func (o DashboardDataPathSortPtrOutput) ToDashboardDataPathSortPtrOutputWithContext(ctx context.Context) DashboardDataPathSortPtrOutput {
	return o
}

func (o DashboardDataPathSortPtrOutput) Elem() DashboardDataPathSortOutput {
	return o.ApplyT(func(v *DashboardDataPathSort) DashboardDataPathSort {
		if v != nil {
			return *v
		}
		var ret DashboardDataPathSort
		return ret
	}).(DashboardDataPathSortOutput)
}

func (o DashboardDataPathSortPtrOutput) Direction() DashboardSortDirectionPtrOutput {
	return o.ApplyT(func(v *DashboardDataPathSort) *DashboardSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(DashboardSortDirectionPtrOutput)
}

func (o DashboardDataPathSortPtrOutput) SortPaths() DashboardDataPathValueArrayOutput {
	return o.ApplyT(func(v *DashboardDataPathSort) []DashboardDataPathValue {
		if v == nil {
			return nil
		}
		return v.SortPaths
	}).(DashboardDataPathValueArrayOutput)
}

type DashboardDataPathValue struct {
	FieldId    string `pulumi:"fieldId"`
	FieldValue string `pulumi:"fieldValue"`
}

// DashboardDataPathValueInput is an input type that accepts DashboardDataPathValueArgs and DashboardDataPathValueOutput values.
// You can construct a concrete instance of `DashboardDataPathValueInput` via:
//
//	DashboardDataPathValueArgs{...}
type DashboardDataPathValueInput interface {
	pulumi.Input

	ToDashboardDataPathValueOutput() DashboardDataPathValueOutput
	ToDashboardDataPathValueOutputWithContext(context.Context) DashboardDataPathValueOutput
}

type DashboardDataPathValueArgs struct {
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
	FieldValue pulumi.StringInput `pulumi:"fieldValue"`
}

func (DashboardDataPathValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathValue)(nil)).Elem()
}

func (i DashboardDataPathValueArgs) ToDashboardDataPathValueOutput() DashboardDataPathValueOutput {
	return i.ToDashboardDataPathValueOutputWithContext(context.Background())
}

func (i DashboardDataPathValueArgs) ToDashboardDataPathValueOutputWithContext(ctx context.Context) DashboardDataPathValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathValueOutput)
}

// DashboardDataPathValueArrayInput is an input type that accepts DashboardDataPathValueArray and DashboardDataPathValueArrayOutput values.
// You can construct a concrete instance of `DashboardDataPathValueArrayInput` via:
//
//	DashboardDataPathValueArray{ DashboardDataPathValueArgs{...} }
type DashboardDataPathValueArrayInput interface {
	pulumi.Input

	ToDashboardDataPathValueArrayOutput() DashboardDataPathValueArrayOutput
	ToDashboardDataPathValueArrayOutputWithContext(context.Context) DashboardDataPathValueArrayOutput
}

type DashboardDataPathValueArray []DashboardDataPathValueInput

func (DashboardDataPathValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataPathValue)(nil)).Elem()
}

func (i DashboardDataPathValueArray) ToDashboardDataPathValueArrayOutput() DashboardDataPathValueArrayOutput {
	return i.ToDashboardDataPathValueArrayOutputWithContext(context.Background())
}

func (i DashboardDataPathValueArray) ToDashboardDataPathValueArrayOutputWithContext(ctx context.Context) DashboardDataPathValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPathValueArrayOutput)
}

type DashboardDataPathValueOutput struct{ *pulumi.OutputState }

func (DashboardDataPathValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPathValue)(nil)).Elem()
}

func (o DashboardDataPathValueOutput) ToDashboardDataPathValueOutput() DashboardDataPathValueOutput {
	return o
}

func (o DashboardDataPathValueOutput) ToDashboardDataPathValueOutputWithContext(ctx context.Context) DashboardDataPathValueOutput {
	return o
}

func (o DashboardDataPathValueOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataPathValue) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardDataPathValueOutput) FieldValue() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataPathValue) string { return v.FieldValue }).(pulumi.StringOutput)
}

type DashboardDataPathValueArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataPathValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataPathValue)(nil)).Elem()
}

func (o DashboardDataPathValueArrayOutput) ToDashboardDataPathValueArrayOutput() DashboardDataPathValueArrayOutput {
	return o
}

func (o DashboardDataPathValueArrayOutput) ToDashboardDataPathValueArrayOutputWithContext(ctx context.Context) DashboardDataPathValueArrayOutput {
	return o
}

func (o DashboardDataPathValueArrayOutput) Index(i pulumi.IntInput) DashboardDataPathValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataPathValue {
		return vs[0].([]DashboardDataPathValue)[vs[1].(int)]
	}).(DashboardDataPathValueOutput)
}

type DashboardDataPointDrillUpDownOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardDataPointDrillUpDownOptionInput is an input type that accepts DashboardDataPointDrillUpDownOptionArgs and DashboardDataPointDrillUpDownOptionOutput values.
// You can construct a concrete instance of `DashboardDataPointDrillUpDownOptionInput` via:
//
//	DashboardDataPointDrillUpDownOptionArgs{...}
type DashboardDataPointDrillUpDownOptionInput interface {
	pulumi.Input

	ToDashboardDataPointDrillUpDownOptionOutput() DashboardDataPointDrillUpDownOptionOutput
	ToDashboardDataPointDrillUpDownOptionOutputWithContext(context.Context) DashboardDataPointDrillUpDownOptionOutput
}

type DashboardDataPointDrillUpDownOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardDataPointDrillUpDownOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointDrillUpDownOption)(nil)).Elem()
}

func (i DashboardDataPointDrillUpDownOptionArgs) ToDashboardDataPointDrillUpDownOptionOutput() DashboardDataPointDrillUpDownOptionOutput {
	return i.ToDashboardDataPointDrillUpDownOptionOutputWithContext(context.Background())
}

func (i DashboardDataPointDrillUpDownOptionArgs) ToDashboardDataPointDrillUpDownOptionOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointDrillUpDownOptionOutput)
}

func (i DashboardDataPointDrillUpDownOptionArgs) ToDashboardDataPointDrillUpDownOptionPtrOutput() DashboardDataPointDrillUpDownOptionPtrOutput {
	return i.ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(context.Background())
}

func (i DashboardDataPointDrillUpDownOptionArgs) ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointDrillUpDownOptionOutput).ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(ctx)
}

// DashboardDataPointDrillUpDownOptionPtrInput is an input type that accepts DashboardDataPointDrillUpDownOptionArgs, DashboardDataPointDrillUpDownOptionPtr and DashboardDataPointDrillUpDownOptionPtrOutput values.
// You can construct a concrete instance of `DashboardDataPointDrillUpDownOptionPtrInput` via:
//
//	        DashboardDataPointDrillUpDownOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardDataPointDrillUpDownOptionPtrInput interface {
	pulumi.Input

	ToDashboardDataPointDrillUpDownOptionPtrOutput() DashboardDataPointDrillUpDownOptionPtrOutput
	ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(context.Context) DashboardDataPointDrillUpDownOptionPtrOutput
}

type dashboardDataPointDrillUpDownOptionPtrType DashboardDataPointDrillUpDownOptionArgs

func DashboardDataPointDrillUpDownOptionPtr(v *DashboardDataPointDrillUpDownOptionArgs) DashboardDataPointDrillUpDownOptionPtrInput {
	return (*dashboardDataPointDrillUpDownOptionPtrType)(v)
}

func (*dashboardDataPointDrillUpDownOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointDrillUpDownOption)(nil)).Elem()
}

func (i *dashboardDataPointDrillUpDownOptionPtrType) ToDashboardDataPointDrillUpDownOptionPtrOutput() DashboardDataPointDrillUpDownOptionPtrOutput {
	return i.ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardDataPointDrillUpDownOptionPtrType) ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointDrillUpDownOptionPtrOutput)
}

type DashboardDataPointDrillUpDownOptionOutput struct{ *pulumi.OutputState }

func (DashboardDataPointDrillUpDownOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointDrillUpDownOption)(nil)).Elem()
}

func (o DashboardDataPointDrillUpDownOptionOutput) ToDashboardDataPointDrillUpDownOptionOutput() DashboardDataPointDrillUpDownOptionOutput {
	return o
}

func (o DashboardDataPointDrillUpDownOptionOutput) ToDashboardDataPointDrillUpDownOptionOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionOutput {
	return o
}

func (o DashboardDataPointDrillUpDownOptionOutput) ToDashboardDataPointDrillUpDownOptionPtrOutput() DashboardDataPointDrillUpDownOptionPtrOutput {
	return o.ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(context.Background())
}

func (o DashboardDataPointDrillUpDownOptionOutput) ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataPointDrillUpDownOption) *DashboardDataPointDrillUpDownOption {
		return &v
	}).(DashboardDataPointDrillUpDownOptionPtrOutput)
}

func (o DashboardDataPointDrillUpDownOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardDataPointDrillUpDownOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardDataPointDrillUpDownOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataPointDrillUpDownOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointDrillUpDownOption)(nil)).Elem()
}

func (o DashboardDataPointDrillUpDownOptionPtrOutput) ToDashboardDataPointDrillUpDownOptionPtrOutput() DashboardDataPointDrillUpDownOptionPtrOutput {
	return o
}

func (o DashboardDataPointDrillUpDownOptionPtrOutput) ToDashboardDataPointDrillUpDownOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointDrillUpDownOptionPtrOutput {
	return o
}

func (o DashboardDataPointDrillUpDownOptionPtrOutput) Elem() DashboardDataPointDrillUpDownOptionOutput {
	return o.ApplyT(func(v *DashboardDataPointDrillUpDownOption) DashboardDataPointDrillUpDownOption {
		if v != nil {
			return *v
		}
		var ret DashboardDataPointDrillUpDownOption
		return ret
	}).(DashboardDataPointDrillUpDownOptionOutput)
}

func (o DashboardDataPointDrillUpDownOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardDataPointDrillUpDownOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardDataPointMenuLabelOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardDataPointMenuLabelOptionInput is an input type that accepts DashboardDataPointMenuLabelOptionArgs and DashboardDataPointMenuLabelOptionOutput values.
// You can construct a concrete instance of `DashboardDataPointMenuLabelOptionInput` via:
//
//	DashboardDataPointMenuLabelOptionArgs{...}
type DashboardDataPointMenuLabelOptionInput interface {
	pulumi.Input

	ToDashboardDataPointMenuLabelOptionOutput() DashboardDataPointMenuLabelOptionOutput
	ToDashboardDataPointMenuLabelOptionOutputWithContext(context.Context) DashboardDataPointMenuLabelOptionOutput
}

type DashboardDataPointMenuLabelOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardDataPointMenuLabelOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointMenuLabelOption)(nil)).Elem()
}

func (i DashboardDataPointMenuLabelOptionArgs) ToDashboardDataPointMenuLabelOptionOutput() DashboardDataPointMenuLabelOptionOutput {
	return i.ToDashboardDataPointMenuLabelOptionOutputWithContext(context.Background())
}

func (i DashboardDataPointMenuLabelOptionArgs) ToDashboardDataPointMenuLabelOptionOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointMenuLabelOptionOutput)
}

func (i DashboardDataPointMenuLabelOptionArgs) ToDashboardDataPointMenuLabelOptionPtrOutput() DashboardDataPointMenuLabelOptionPtrOutput {
	return i.ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(context.Background())
}

func (i DashboardDataPointMenuLabelOptionArgs) ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointMenuLabelOptionOutput).ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(ctx)
}

// DashboardDataPointMenuLabelOptionPtrInput is an input type that accepts DashboardDataPointMenuLabelOptionArgs, DashboardDataPointMenuLabelOptionPtr and DashboardDataPointMenuLabelOptionPtrOutput values.
// You can construct a concrete instance of `DashboardDataPointMenuLabelOptionPtrInput` via:
//
//	        DashboardDataPointMenuLabelOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardDataPointMenuLabelOptionPtrInput interface {
	pulumi.Input

	ToDashboardDataPointMenuLabelOptionPtrOutput() DashboardDataPointMenuLabelOptionPtrOutput
	ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(context.Context) DashboardDataPointMenuLabelOptionPtrOutput
}

type dashboardDataPointMenuLabelOptionPtrType DashboardDataPointMenuLabelOptionArgs

func DashboardDataPointMenuLabelOptionPtr(v *DashboardDataPointMenuLabelOptionArgs) DashboardDataPointMenuLabelOptionPtrInput {
	return (*dashboardDataPointMenuLabelOptionPtrType)(v)
}

func (*dashboardDataPointMenuLabelOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointMenuLabelOption)(nil)).Elem()
}

func (i *dashboardDataPointMenuLabelOptionPtrType) ToDashboardDataPointMenuLabelOptionPtrOutput() DashboardDataPointMenuLabelOptionPtrOutput {
	return i.ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardDataPointMenuLabelOptionPtrType) ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointMenuLabelOptionPtrOutput)
}

type DashboardDataPointMenuLabelOptionOutput struct{ *pulumi.OutputState }

func (DashboardDataPointMenuLabelOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointMenuLabelOption)(nil)).Elem()
}

func (o DashboardDataPointMenuLabelOptionOutput) ToDashboardDataPointMenuLabelOptionOutput() DashboardDataPointMenuLabelOptionOutput {
	return o
}

func (o DashboardDataPointMenuLabelOptionOutput) ToDashboardDataPointMenuLabelOptionOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionOutput {
	return o
}

func (o DashboardDataPointMenuLabelOptionOutput) ToDashboardDataPointMenuLabelOptionPtrOutput() DashboardDataPointMenuLabelOptionPtrOutput {
	return o.ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(context.Background())
}

func (o DashboardDataPointMenuLabelOptionOutput) ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataPointMenuLabelOption) *DashboardDataPointMenuLabelOption {
		return &v
	}).(DashboardDataPointMenuLabelOptionPtrOutput)
}

func (o DashboardDataPointMenuLabelOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardDataPointMenuLabelOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardDataPointMenuLabelOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataPointMenuLabelOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointMenuLabelOption)(nil)).Elem()
}

func (o DashboardDataPointMenuLabelOptionPtrOutput) ToDashboardDataPointMenuLabelOptionPtrOutput() DashboardDataPointMenuLabelOptionPtrOutput {
	return o
}

func (o DashboardDataPointMenuLabelOptionPtrOutput) ToDashboardDataPointMenuLabelOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointMenuLabelOptionPtrOutput {
	return o
}

func (o DashboardDataPointMenuLabelOptionPtrOutput) Elem() DashboardDataPointMenuLabelOptionOutput {
	return o.ApplyT(func(v *DashboardDataPointMenuLabelOption) DashboardDataPointMenuLabelOption {
		if v != nil {
			return *v
		}
		var ret DashboardDataPointMenuLabelOption
		return ret
	}).(DashboardDataPointMenuLabelOptionOutput)
}

func (o DashboardDataPointMenuLabelOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardDataPointMenuLabelOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardDataPointTooltipOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardDataPointTooltipOptionInput is an input type that accepts DashboardDataPointTooltipOptionArgs and DashboardDataPointTooltipOptionOutput values.
// You can construct a concrete instance of `DashboardDataPointTooltipOptionInput` via:
//
//	DashboardDataPointTooltipOptionArgs{...}
type DashboardDataPointTooltipOptionInput interface {
	pulumi.Input

	ToDashboardDataPointTooltipOptionOutput() DashboardDataPointTooltipOptionOutput
	ToDashboardDataPointTooltipOptionOutputWithContext(context.Context) DashboardDataPointTooltipOptionOutput
}

type DashboardDataPointTooltipOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardDataPointTooltipOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointTooltipOption)(nil)).Elem()
}

func (i DashboardDataPointTooltipOptionArgs) ToDashboardDataPointTooltipOptionOutput() DashboardDataPointTooltipOptionOutput {
	return i.ToDashboardDataPointTooltipOptionOutputWithContext(context.Background())
}

func (i DashboardDataPointTooltipOptionArgs) ToDashboardDataPointTooltipOptionOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointTooltipOptionOutput)
}

func (i DashboardDataPointTooltipOptionArgs) ToDashboardDataPointTooltipOptionPtrOutput() DashboardDataPointTooltipOptionPtrOutput {
	return i.ToDashboardDataPointTooltipOptionPtrOutputWithContext(context.Background())
}

func (i DashboardDataPointTooltipOptionArgs) ToDashboardDataPointTooltipOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointTooltipOptionOutput).ToDashboardDataPointTooltipOptionPtrOutputWithContext(ctx)
}

// DashboardDataPointTooltipOptionPtrInput is an input type that accepts DashboardDataPointTooltipOptionArgs, DashboardDataPointTooltipOptionPtr and DashboardDataPointTooltipOptionPtrOutput values.
// You can construct a concrete instance of `DashboardDataPointTooltipOptionPtrInput` via:
//
//	        DashboardDataPointTooltipOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardDataPointTooltipOptionPtrInput interface {
	pulumi.Input

	ToDashboardDataPointTooltipOptionPtrOutput() DashboardDataPointTooltipOptionPtrOutput
	ToDashboardDataPointTooltipOptionPtrOutputWithContext(context.Context) DashboardDataPointTooltipOptionPtrOutput
}

type dashboardDataPointTooltipOptionPtrType DashboardDataPointTooltipOptionArgs

func DashboardDataPointTooltipOptionPtr(v *DashboardDataPointTooltipOptionArgs) DashboardDataPointTooltipOptionPtrInput {
	return (*dashboardDataPointTooltipOptionPtrType)(v)
}

func (*dashboardDataPointTooltipOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointTooltipOption)(nil)).Elem()
}

func (i *dashboardDataPointTooltipOptionPtrType) ToDashboardDataPointTooltipOptionPtrOutput() DashboardDataPointTooltipOptionPtrOutput {
	return i.ToDashboardDataPointTooltipOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardDataPointTooltipOptionPtrType) ToDashboardDataPointTooltipOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataPointTooltipOptionPtrOutput)
}

type DashboardDataPointTooltipOptionOutput struct{ *pulumi.OutputState }

func (DashboardDataPointTooltipOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataPointTooltipOption)(nil)).Elem()
}

func (o DashboardDataPointTooltipOptionOutput) ToDashboardDataPointTooltipOptionOutput() DashboardDataPointTooltipOptionOutput {
	return o
}

func (o DashboardDataPointTooltipOptionOutput) ToDashboardDataPointTooltipOptionOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionOutput {
	return o
}

func (o DashboardDataPointTooltipOptionOutput) ToDashboardDataPointTooltipOptionPtrOutput() DashboardDataPointTooltipOptionPtrOutput {
	return o.ToDashboardDataPointTooltipOptionPtrOutputWithContext(context.Background())
}

func (o DashboardDataPointTooltipOptionOutput) ToDashboardDataPointTooltipOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDataPointTooltipOption) *DashboardDataPointTooltipOption {
		return &v
	}).(DashboardDataPointTooltipOptionPtrOutput)
}

func (o DashboardDataPointTooltipOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardDataPointTooltipOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardDataPointTooltipOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardDataPointTooltipOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDataPointTooltipOption)(nil)).Elem()
}

func (o DashboardDataPointTooltipOptionPtrOutput) ToDashboardDataPointTooltipOptionPtrOutput() DashboardDataPointTooltipOptionPtrOutput {
	return o
}

func (o DashboardDataPointTooltipOptionPtrOutput) ToDashboardDataPointTooltipOptionPtrOutputWithContext(ctx context.Context) DashboardDataPointTooltipOptionPtrOutput {
	return o
}

func (o DashboardDataPointTooltipOptionPtrOutput) Elem() DashboardDataPointTooltipOptionOutput {
	return o.ApplyT(func(v *DashboardDataPointTooltipOption) DashboardDataPointTooltipOption {
		if v != nil {
			return *v
		}
		var ret DashboardDataPointTooltipOption
		return ret
	}).(DashboardDataPointTooltipOptionOutput)
}

func (o DashboardDataPointTooltipOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardDataPointTooltipOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardDataSetIdentifierDeclaration struct {
	DataSetArn string `pulumi:"dataSetArn"`
	Identifier string `pulumi:"identifier"`
}

// DashboardDataSetIdentifierDeclarationInput is an input type that accepts DashboardDataSetIdentifierDeclarationArgs and DashboardDataSetIdentifierDeclarationOutput values.
// You can construct a concrete instance of `DashboardDataSetIdentifierDeclarationInput` via:
//
//	DashboardDataSetIdentifierDeclarationArgs{...}
type DashboardDataSetIdentifierDeclarationInput interface {
	pulumi.Input

	ToDashboardDataSetIdentifierDeclarationOutput() DashboardDataSetIdentifierDeclarationOutput
	ToDashboardDataSetIdentifierDeclarationOutputWithContext(context.Context) DashboardDataSetIdentifierDeclarationOutput
}

type DashboardDataSetIdentifierDeclarationArgs struct {
	DataSetArn pulumi.StringInput `pulumi:"dataSetArn"`
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (DashboardDataSetIdentifierDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetIdentifierDeclaration)(nil)).Elem()
}

func (i DashboardDataSetIdentifierDeclarationArgs) ToDashboardDataSetIdentifierDeclarationOutput() DashboardDataSetIdentifierDeclarationOutput {
	return i.ToDashboardDataSetIdentifierDeclarationOutputWithContext(context.Background())
}

func (i DashboardDataSetIdentifierDeclarationArgs) ToDashboardDataSetIdentifierDeclarationOutputWithContext(ctx context.Context) DashboardDataSetIdentifierDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetIdentifierDeclarationOutput)
}

// DashboardDataSetIdentifierDeclarationArrayInput is an input type that accepts DashboardDataSetIdentifierDeclarationArray and DashboardDataSetIdentifierDeclarationArrayOutput values.
// You can construct a concrete instance of `DashboardDataSetIdentifierDeclarationArrayInput` via:
//
//	DashboardDataSetIdentifierDeclarationArray{ DashboardDataSetIdentifierDeclarationArgs{...} }
type DashboardDataSetIdentifierDeclarationArrayInput interface {
	pulumi.Input

	ToDashboardDataSetIdentifierDeclarationArrayOutput() DashboardDataSetIdentifierDeclarationArrayOutput
	ToDashboardDataSetIdentifierDeclarationArrayOutputWithContext(context.Context) DashboardDataSetIdentifierDeclarationArrayOutput
}

type DashboardDataSetIdentifierDeclarationArray []DashboardDataSetIdentifierDeclarationInput

func (DashboardDataSetIdentifierDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetIdentifierDeclaration)(nil)).Elem()
}

func (i DashboardDataSetIdentifierDeclarationArray) ToDashboardDataSetIdentifierDeclarationArrayOutput() DashboardDataSetIdentifierDeclarationArrayOutput {
	return i.ToDashboardDataSetIdentifierDeclarationArrayOutputWithContext(context.Background())
}

func (i DashboardDataSetIdentifierDeclarationArray) ToDashboardDataSetIdentifierDeclarationArrayOutputWithContext(ctx context.Context) DashboardDataSetIdentifierDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetIdentifierDeclarationArrayOutput)
}

type DashboardDataSetIdentifierDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardDataSetIdentifierDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetIdentifierDeclaration)(nil)).Elem()
}

func (o DashboardDataSetIdentifierDeclarationOutput) ToDashboardDataSetIdentifierDeclarationOutput() DashboardDataSetIdentifierDeclarationOutput {
	return o
}

func (o DashboardDataSetIdentifierDeclarationOutput) ToDashboardDataSetIdentifierDeclarationOutputWithContext(ctx context.Context) DashboardDataSetIdentifierDeclarationOutput {
	return o
}

func (o DashboardDataSetIdentifierDeclarationOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetIdentifierDeclaration) string { return v.DataSetArn }).(pulumi.StringOutput)
}

func (o DashboardDataSetIdentifierDeclarationOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetIdentifierDeclaration) string { return v.Identifier }).(pulumi.StringOutput)
}

type DashboardDataSetIdentifierDeclarationArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataSetIdentifierDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetIdentifierDeclaration)(nil)).Elem()
}

func (o DashboardDataSetIdentifierDeclarationArrayOutput) ToDashboardDataSetIdentifierDeclarationArrayOutput() DashboardDataSetIdentifierDeclarationArrayOutput {
	return o
}

func (o DashboardDataSetIdentifierDeclarationArrayOutput) ToDashboardDataSetIdentifierDeclarationArrayOutputWithContext(ctx context.Context) DashboardDataSetIdentifierDeclarationArrayOutput {
	return o
}

func (o DashboardDataSetIdentifierDeclarationArrayOutput) Index(i pulumi.IntInput) DashboardDataSetIdentifierDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataSetIdentifierDeclaration {
		return vs[0].([]DashboardDataSetIdentifierDeclaration)[vs[1].(int)]
	}).(DashboardDataSetIdentifierDeclarationOutput)
}

type DashboardDataSetReference struct {
	DataSetArn         string `pulumi:"dataSetArn"`
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// DashboardDataSetReferenceInput is an input type that accepts DashboardDataSetReferenceArgs and DashboardDataSetReferenceOutput values.
// You can construct a concrete instance of `DashboardDataSetReferenceInput` via:
//
//	DashboardDataSetReferenceArgs{...}
type DashboardDataSetReferenceInput interface {
	pulumi.Input

	ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput
	ToDashboardDataSetReferenceOutputWithContext(context.Context) DashboardDataSetReferenceOutput
}

type DashboardDataSetReferenceArgs struct {
	DataSetArn         pulumi.StringInput `pulumi:"dataSetArn"`
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (DashboardDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetReference)(nil)).Elem()
}

func (i DashboardDataSetReferenceArgs) ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput {
	return i.ToDashboardDataSetReferenceOutputWithContext(context.Background())
}

func (i DashboardDataSetReferenceArgs) ToDashboardDataSetReferenceOutputWithContext(ctx context.Context) DashboardDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetReferenceOutput)
}

// DashboardDataSetReferenceArrayInput is an input type that accepts DashboardDataSetReferenceArray and DashboardDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `DashboardDataSetReferenceArrayInput` via:
//
//	DashboardDataSetReferenceArray{ DashboardDataSetReferenceArgs{...} }
type DashboardDataSetReferenceArrayInput interface {
	pulumi.Input

	ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput
	ToDashboardDataSetReferenceArrayOutputWithContext(context.Context) DashboardDataSetReferenceArrayOutput
}

type DashboardDataSetReferenceArray []DashboardDataSetReferenceInput

func (DashboardDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetReference)(nil)).Elem()
}

func (i DashboardDataSetReferenceArray) ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput {
	return i.ToDashboardDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i DashboardDataSetReferenceArray) ToDashboardDataSetReferenceArrayOutputWithContext(ctx context.Context) DashboardDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDataSetReferenceArrayOutput)
}

type DashboardDataSetReferenceOutput struct{ *pulumi.OutputState }

func (DashboardDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDataSetReference)(nil)).Elem()
}

func (o DashboardDataSetReferenceOutput) ToDashboardDataSetReferenceOutput() DashboardDataSetReferenceOutput {
	return o
}

func (o DashboardDataSetReferenceOutput) ToDashboardDataSetReferenceOutputWithContext(ctx context.Context) DashboardDataSetReferenceOutput {
	return o
}

func (o DashboardDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

func (o DashboardDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type DashboardDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (DashboardDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDataSetReference)(nil)).Elem()
}

func (o DashboardDataSetReferenceArrayOutput) ToDashboardDataSetReferenceArrayOutput() DashboardDataSetReferenceArrayOutput {
	return o
}

func (o DashboardDataSetReferenceArrayOutput) ToDashboardDataSetReferenceArrayOutputWithContext(ctx context.Context) DashboardDataSetReferenceArrayOutput {
	return o
}

func (o DashboardDataSetReferenceArrayOutput) Index(i pulumi.IntInput) DashboardDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDataSetReference {
		return vs[0].([]DashboardDataSetReference)[vs[1].(int)]
	}).(DashboardDataSetReferenceOutput)
}

type DashboardDateAxisOptions struct {
	MissingDateVisibility *DashboardVisibility `pulumi:"missingDateVisibility"`
}

// DashboardDateAxisOptionsInput is an input type that accepts DashboardDateAxisOptionsArgs and DashboardDateAxisOptionsOutput values.
// You can construct a concrete instance of `DashboardDateAxisOptionsInput` via:
//
//	DashboardDateAxisOptionsArgs{...}
type DashboardDateAxisOptionsInput interface {
	pulumi.Input

	ToDashboardDateAxisOptionsOutput() DashboardDateAxisOptionsOutput
	ToDashboardDateAxisOptionsOutputWithContext(context.Context) DashboardDateAxisOptionsOutput
}

type DashboardDateAxisOptionsArgs struct {
	MissingDateVisibility DashboardVisibilityPtrInput `pulumi:"missingDateVisibility"`
}

func (DashboardDateAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateAxisOptions)(nil)).Elem()
}

func (i DashboardDateAxisOptionsArgs) ToDashboardDateAxisOptionsOutput() DashboardDateAxisOptionsOutput {
	return i.ToDashboardDateAxisOptionsOutputWithContext(context.Background())
}

func (i DashboardDateAxisOptionsArgs) ToDashboardDateAxisOptionsOutputWithContext(ctx context.Context) DashboardDateAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateAxisOptionsOutput)
}

func (i DashboardDateAxisOptionsArgs) ToDashboardDateAxisOptionsPtrOutput() DashboardDateAxisOptionsPtrOutput {
	return i.ToDashboardDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDateAxisOptionsArgs) ToDashboardDateAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateAxisOptionsOutput).ToDashboardDateAxisOptionsPtrOutputWithContext(ctx)
}

// DashboardDateAxisOptionsPtrInput is an input type that accepts DashboardDateAxisOptionsArgs, DashboardDateAxisOptionsPtr and DashboardDateAxisOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDateAxisOptionsPtrInput` via:
//
//	        DashboardDateAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDateAxisOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDateAxisOptionsPtrOutput() DashboardDateAxisOptionsPtrOutput
	ToDashboardDateAxisOptionsPtrOutputWithContext(context.Context) DashboardDateAxisOptionsPtrOutput
}

type dashboardDateAxisOptionsPtrType DashboardDateAxisOptionsArgs

func DashboardDateAxisOptionsPtr(v *DashboardDateAxisOptionsArgs) DashboardDateAxisOptionsPtrInput {
	return (*dashboardDateAxisOptionsPtrType)(v)
}

func (*dashboardDateAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateAxisOptions)(nil)).Elem()
}

func (i *dashboardDateAxisOptionsPtrType) ToDashboardDateAxisOptionsPtrOutput() DashboardDateAxisOptionsPtrOutput {
	return i.ToDashboardDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDateAxisOptionsPtrType) ToDashboardDateAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateAxisOptionsPtrOutput)
}

type DashboardDateAxisOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDateAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateAxisOptions)(nil)).Elem()
}

func (o DashboardDateAxisOptionsOutput) ToDashboardDateAxisOptionsOutput() DashboardDateAxisOptionsOutput {
	return o
}

func (o DashboardDateAxisOptionsOutput) ToDashboardDateAxisOptionsOutputWithContext(ctx context.Context) DashboardDateAxisOptionsOutput {
	return o
}

func (o DashboardDateAxisOptionsOutput) ToDashboardDateAxisOptionsPtrOutput() DashboardDateAxisOptionsPtrOutput {
	return o.ToDashboardDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDateAxisOptionsOutput) ToDashboardDateAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardDateAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateAxisOptions) *DashboardDateAxisOptions {
		return &v
	}).(DashboardDateAxisOptionsPtrOutput)
}

func (o DashboardDateAxisOptionsOutput) MissingDateVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDateAxisOptions) *DashboardVisibility { return v.MissingDateVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardDateAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateAxisOptions)(nil)).Elem()
}

func (o DashboardDateAxisOptionsPtrOutput) ToDashboardDateAxisOptionsPtrOutput() DashboardDateAxisOptionsPtrOutput {
	return o
}

func (o DashboardDateAxisOptionsPtrOutput) ToDashboardDateAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardDateAxisOptionsPtrOutput {
	return o
}

func (o DashboardDateAxisOptionsPtrOutput) Elem() DashboardDateAxisOptionsOutput {
	return o.ApplyT(func(v *DashboardDateAxisOptions) DashboardDateAxisOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDateAxisOptions
		return ret
	}).(DashboardDateAxisOptionsOutput)
}

func (o DashboardDateAxisOptionsPtrOutput) MissingDateVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDateAxisOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.MissingDateVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardDateDimensionField struct {
	Column              DashboardColumnIdentifier             `pulumi:"column"`
	DateGranularity     *DashboardTimeGranularity             `pulumi:"dateGranularity"`
	FieldId             string                                `pulumi:"fieldId"`
	FormatConfiguration *DashboardDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                               `pulumi:"hierarchyId"`
}

// DashboardDateDimensionFieldInput is an input type that accepts DashboardDateDimensionFieldArgs and DashboardDateDimensionFieldOutput values.
// You can construct a concrete instance of `DashboardDateDimensionFieldInput` via:
//
//	DashboardDateDimensionFieldArgs{...}
type DashboardDateDimensionFieldInput interface {
	pulumi.Input

	ToDashboardDateDimensionFieldOutput() DashboardDateDimensionFieldOutput
	ToDashboardDateDimensionFieldOutputWithContext(context.Context) DashboardDateDimensionFieldOutput
}

type DashboardDateDimensionFieldArgs struct {
	Column              DashboardColumnIdentifierInput               `pulumi:"column"`
	DateGranularity     DashboardTimeGranularityPtrInput             `pulumi:"dateGranularity"`
	FieldId             pulumi.StringInput                           `pulumi:"fieldId"`
	FormatConfiguration DashboardDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                        `pulumi:"hierarchyId"`
}

func (DashboardDateDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateDimensionField)(nil)).Elem()
}

func (i DashboardDateDimensionFieldArgs) ToDashboardDateDimensionFieldOutput() DashboardDateDimensionFieldOutput {
	return i.ToDashboardDateDimensionFieldOutputWithContext(context.Background())
}

func (i DashboardDateDimensionFieldArgs) ToDashboardDateDimensionFieldOutputWithContext(ctx context.Context) DashboardDateDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateDimensionFieldOutput)
}

func (i DashboardDateDimensionFieldArgs) ToDashboardDateDimensionFieldPtrOutput() DashboardDateDimensionFieldPtrOutput {
	return i.ToDashboardDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i DashboardDateDimensionFieldArgs) ToDashboardDateDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateDimensionFieldOutput).ToDashboardDateDimensionFieldPtrOutputWithContext(ctx)
}

// DashboardDateDimensionFieldPtrInput is an input type that accepts DashboardDateDimensionFieldArgs, DashboardDateDimensionFieldPtr and DashboardDateDimensionFieldPtrOutput values.
// You can construct a concrete instance of `DashboardDateDimensionFieldPtrInput` via:
//
//	        DashboardDateDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardDateDimensionFieldPtrInput interface {
	pulumi.Input

	ToDashboardDateDimensionFieldPtrOutput() DashboardDateDimensionFieldPtrOutput
	ToDashboardDateDimensionFieldPtrOutputWithContext(context.Context) DashboardDateDimensionFieldPtrOutput
}

type dashboardDateDimensionFieldPtrType DashboardDateDimensionFieldArgs

func DashboardDateDimensionFieldPtr(v *DashboardDateDimensionFieldArgs) DashboardDateDimensionFieldPtrInput {
	return (*dashboardDateDimensionFieldPtrType)(v)
}

func (*dashboardDateDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateDimensionField)(nil)).Elem()
}

func (i *dashboardDateDimensionFieldPtrType) ToDashboardDateDimensionFieldPtrOutput() DashboardDateDimensionFieldPtrOutput {
	return i.ToDashboardDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardDateDimensionFieldPtrType) ToDashboardDateDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateDimensionFieldPtrOutput)
}

type DashboardDateDimensionFieldOutput struct{ *pulumi.OutputState }

func (DashboardDateDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateDimensionField)(nil)).Elem()
}

func (o DashboardDateDimensionFieldOutput) ToDashboardDateDimensionFieldOutput() DashboardDateDimensionFieldOutput {
	return o
}

func (o DashboardDateDimensionFieldOutput) ToDashboardDateDimensionFieldOutputWithContext(ctx context.Context) DashboardDateDimensionFieldOutput {
	return o
}

func (o DashboardDateDimensionFieldOutput) ToDashboardDateDimensionFieldPtrOutput() DashboardDateDimensionFieldPtrOutput {
	return o.ToDashboardDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (o DashboardDateDimensionFieldOutput) ToDashboardDateDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDateDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateDimensionField) *DashboardDateDimensionField {
		return &v
	}).(DashboardDateDimensionFieldPtrOutput)
}

func (o DashboardDateDimensionFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardDateDimensionField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardDateDimensionFieldOutput) DateGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardDateDimensionField) *DashboardTimeGranularity { return v.DateGranularity }).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardDateDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardDateDimensionFieldOutput) FormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateDimensionField) *DashboardDateTimeFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

func (o DashboardDateDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDateDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type DashboardDateDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateDimensionField)(nil)).Elem()
}

func (o DashboardDateDimensionFieldPtrOutput) ToDashboardDateDimensionFieldPtrOutput() DashboardDateDimensionFieldPtrOutput {
	return o
}

func (o DashboardDateDimensionFieldPtrOutput) ToDashboardDateDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDateDimensionFieldPtrOutput {
	return o
}

func (o DashboardDateDimensionFieldPtrOutput) Elem() DashboardDateDimensionFieldOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) DashboardDateDimensionField {
		if v != nil {
			return *v
		}
		var ret DashboardDateDimensionField
		return ret
	}).(DashboardDateDimensionFieldOutput)
}

func (o DashboardDateDimensionFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardDateDimensionFieldPtrOutput) DateGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.DateGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardDateDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateDimensionFieldPtrOutput) FormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) *DashboardDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

func (o DashboardDateDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardDateMeasureField struct {
	AggregationFunction *DashboardDateAggregationFunction     `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier             `pulumi:"column"`
	FieldId             string                                `pulumi:"fieldId"`
	FormatConfiguration *DashboardDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
}

// DashboardDateMeasureFieldInput is an input type that accepts DashboardDateMeasureFieldArgs and DashboardDateMeasureFieldOutput values.
// You can construct a concrete instance of `DashboardDateMeasureFieldInput` via:
//
//	DashboardDateMeasureFieldArgs{...}
type DashboardDateMeasureFieldInput interface {
	pulumi.Input

	ToDashboardDateMeasureFieldOutput() DashboardDateMeasureFieldOutput
	ToDashboardDateMeasureFieldOutputWithContext(context.Context) DashboardDateMeasureFieldOutput
}

type DashboardDateMeasureFieldArgs struct {
	AggregationFunction DashboardDateAggregationFunctionPtrInput     `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput               `pulumi:"column"`
	FieldId             pulumi.StringInput                           `pulumi:"fieldId"`
	FormatConfiguration DashboardDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (DashboardDateMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateMeasureField)(nil)).Elem()
}

func (i DashboardDateMeasureFieldArgs) ToDashboardDateMeasureFieldOutput() DashboardDateMeasureFieldOutput {
	return i.ToDashboardDateMeasureFieldOutputWithContext(context.Background())
}

func (i DashboardDateMeasureFieldArgs) ToDashboardDateMeasureFieldOutputWithContext(ctx context.Context) DashboardDateMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateMeasureFieldOutput)
}

func (i DashboardDateMeasureFieldArgs) ToDashboardDateMeasureFieldPtrOutput() DashboardDateMeasureFieldPtrOutput {
	return i.ToDashboardDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i DashboardDateMeasureFieldArgs) ToDashboardDateMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateMeasureFieldOutput).ToDashboardDateMeasureFieldPtrOutputWithContext(ctx)
}

// DashboardDateMeasureFieldPtrInput is an input type that accepts DashboardDateMeasureFieldArgs, DashboardDateMeasureFieldPtr and DashboardDateMeasureFieldPtrOutput values.
// You can construct a concrete instance of `DashboardDateMeasureFieldPtrInput` via:
//
//	        DashboardDateMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardDateMeasureFieldPtrInput interface {
	pulumi.Input

	ToDashboardDateMeasureFieldPtrOutput() DashboardDateMeasureFieldPtrOutput
	ToDashboardDateMeasureFieldPtrOutputWithContext(context.Context) DashboardDateMeasureFieldPtrOutput
}

type dashboardDateMeasureFieldPtrType DashboardDateMeasureFieldArgs

func DashboardDateMeasureFieldPtr(v *DashboardDateMeasureFieldArgs) DashboardDateMeasureFieldPtrInput {
	return (*dashboardDateMeasureFieldPtrType)(v)
}

func (*dashboardDateMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateMeasureField)(nil)).Elem()
}

func (i *dashboardDateMeasureFieldPtrType) ToDashboardDateMeasureFieldPtrOutput() DashboardDateMeasureFieldPtrOutput {
	return i.ToDashboardDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardDateMeasureFieldPtrType) ToDashboardDateMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateMeasureFieldPtrOutput)
}

type DashboardDateMeasureFieldOutput struct{ *pulumi.OutputState }

func (DashboardDateMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateMeasureField)(nil)).Elem()
}

func (o DashboardDateMeasureFieldOutput) ToDashboardDateMeasureFieldOutput() DashboardDateMeasureFieldOutput {
	return o
}

func (o DashboardDateMeasureFieldOutput) ToDashboardDateMeasureFieldOutputWithContext(ctx context.Context) DashboardDateMeasureFieldOutput {
	return o
}

func (o DashboardDateMeasureFieldOutput) ToDashboardDateMeasureFieldPtrOutput() DashboardDateMeasureFieldPtrOutput {
	return o.ToDashboardDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (o DashboardDateMeasureFieldOutput) ToDashboardDateMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardDateMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateMeasureField) *DashboardDateMeasureField {
		return &v
	}).(DashboardDateMeasureFieldPtrOutput)
}

func (o DashboardDateMeasureFieldOutput) AggregationFunction() DashboardDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardDateMeasureField) *DashboardDateAggregationFunction { return v.AggregationFunction }).(DashboardDateAggregationFunctionPtrOutput)
}

func (o DashboardDateMeasureFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardDateMeasureField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardDateMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardDateMeasureFieldOutput) FormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateMeasureField) *DashboardDateTimeFormatConfiguration { return v.FormatConfiguration }).(DashboardDateTimeFormatConfigurationPtrOutput)
}

type DashboardDateMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateMeasureField)(nil)).Elem()
}

func (o DashboardDateMeasureFieldPtrOutput) ToDashboardDateMeasureFieldPtrOutput() DashboardDateMeasureFieldPtrOutput {
	return o
}

func (o DashboardDateMeasureFieldPtrOutput) ToDashboardDateMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardDateMeasureFieldPtrOutput {
	return o
}

func (o DashboardDateMeasureFieldPtrOutput) Elem() DashboardDateMeasureFieldOutput {
	return o.ApplyT(func(v *DashboardDateMeasureField) DashboardDateMeasureField {
		if v != nil {
			return *v
		}
		var ret DashboardDateMeasureField
		return ret
	}).(DashboardDateMeasureFieldOutput)
}

func (o DashboardDateMeasureFieldPtrOutput) AggregationFunction() DashboardDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardDateMeasureField) *DashboardDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardDateAggregationFunctionPtrOutput)
}

func (o DashboardDateMeasureFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardDateMeasureField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardDateMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateMeasureFieldPtrOutput) FormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateMeasureField) *DashboardDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

type DashboardDateTimeDefaultValues struct {
	DynamicValue *DashboardDynamicDefaultValue      `pulumi:"dynamicValue"`
	RollingDate  *DashboardRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValues []string                           `pulumi:"staticValues"`
}

// DashboardDateTimeDefaultValuesInput is an input type that accepts DashboardDateTimeDefaultValuesArgs and DashboardDateTimeDefaultValuesOutput values.
// You can construct a concrete instance of `DashboardDateTimeDefaultValuesInput` via:
//
//	DashboardDateTimeDefaultValuesArgs{...}
type DashboardDateTimeDefaultValuesInput interface {
	pulumi.Input

	ToDashboardDateTimeDefaultValuesOutput() DashboardDateTimeDefaultValuesOutput
	ToDashboardDateTimeDefaultValuesOutputWithContext(context.Context) DashboardDateTimeDefaultValuesOutput
}

type DashboardDateTimeDefaultValuesArgs struct {
	DynamicValue DashboardDynamicDefaultValuePtrInput      `pulumi:"dynamicValue"`
	RollingDate  DashboardRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValues pulumi.StringArrayInput                   `pulumi:"staticValues"`
}

func (DashboardDateTimeDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeDefaultValues)(nil)).Elem()
}

func (i DashboardDateTimeDefaultValuesArgs) ToDashboardDateTimeDefaultValuesOutput() DashboardDateTimeDefaultValuesOutput {
	return i.ToDashboardDateTimeDefaultValuesOutputWithContext(context.Background())
}

func (i DashboardDateTimeDefaultValuesArgs) ToDashboardDateTimeDefaultValuesOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeDefaultValuesOutput)
}

func (i DashboardDateTimeDefaultValuesArgs) ToDashboardDateTimeDefaultValuesPtrOutput() DashboardDateTimeDefaultValuesPtrOutput {
	return i.ToDashboardDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimeDefaultValuesArgs) ToDashboardDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeDefaultValuesOutput).ToDashboardDateTimeDefaultValuesPtrOutputWithContext(ctx)
}

// DashboardDateTimeDefaultValuesPtrInput is an input type that accepts DashboardDateTimeDefaultValuesArgs, DashboardDateTimeDefaultValuesPtr and DashboardDateTimeDefaultValuesPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimeDefaultValuesPtrInput` via:
//
//	        DashboardDateTimeDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimeDefaultValuesPtrInput interface {
	pulumi.Input

	ToDashboardDateTimeDefaultValuesPtrOutput() DashboardDateTimeDefaultValuesPtrOutput
	ToDashboardDateTimeDefaultValuesPtrOutputWithContext(context.Context) DashboardDateTimeDefaultValuesPtrOutput
}

type dashboardDateTimeDefaultValuesPtrType DashboardDateTimeDefaultValuesArgs

func DashboardDateTimeDefaultValuesPtr(v *DashboardDateTimeDefaultValuesArgs) DashboardDateTimeDefaultValuesPtrInput {
	return (*dashboardDateTimeDefaultValuesPtrType)(v)
}

func (*dashboardDateTimeDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeDefaultValues)(nil)).Elem()
}

func (i *dashboardDateTimeDefaultValuesPtrType) ToDashboardDateTimeDefaultValuesPtrOutput() DashboardDateTimeDefaultValuesPtrOutput {
	return i.ToDashboardDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimeDefaultValuesPtrType) ToDashboardDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeDefaultValuesPtrOutput)
}

type DashboardDateTimeDefaultValuesOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeDefaultValues)(nil)).Elem()
}

func (o DashboardDateTimeDefaultValuesOutput) ToDashboardDateTimeDefaultValuesOutput() DashboardDateTimeDefaultValuesOutput {
	return o
}

func (o DashboardDateTimeDefaultValuesOutput) ToDashboardDateTimeDefaultValuesOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesOutput {
	return o
}

func (o DashboardDateTimeDefaultValuesOutput) ToDashboardDateTimeDefaultValuesPtrOutput() DashboardDateTimeDefaultValuesPtrOutput {
	return o.ToDashboardDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimeDefaultValuesOutput) ToDashboardDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimeDefaultValues) *DashboardDateTimeDefaultValues {
		return &v
	}).(DashboardDateTimeDefaultValuesPtrOutput)
}

func (o DashboardDateTimeDefaultValuesOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v DashboardDateTimeDefaultValues) *DashboardDynamicDefaultValue { return v.DynamicValue }).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardDateTimeDefaultValuesOutput) RollingDate() DashboardRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeDefaultValues) *DashboardRollingDateConfiguration { return v.RollingDate }).(DashboardRollingDateConfigurationPtrOutput)
}

func (o DashboardDateTimeDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardDateTimeDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type DashboardDateTimeDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeDefaultValues)(nil)).Elem()
}

func (o DashboardDateTimeDefaultValuesPtrOutput) ToDashboardDateTimeDefaultValuesPtrOutput() DashboardDateTimeDefaultValuesPtrOutput {
	return o
}

func (o DashboardDateTimeDefaultValuesPtrOutput) ToDashboardDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDateTimeDefaultValuesPtrOutput {
	return o
}

func (o DashboardDateTimeDefaultValuesPtrOutput) Elem() DashboardDateTimeDefaultValuesOutput {
	return o.ApplyT(func(v *DashboardDateTimeDefaultValues) DashboardDateTimeDefaultValues {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimeDefaultValues
		return ret
	}).(DashboardDateTimeDefaultValuesOutput)
}

func (o DashboardDateTimeDefaultValuesPtrOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeDefaultValues) *DashboardDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardDateTimeDefaultValuesPtrOutput) RollingDate() DashboardRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeDefaultValues) *DashboardRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(DashboardRollingDateConfigurationPtrOutput)
}

func (o DashboardDateTimeDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardDateTimeDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type DashboardDateTimeFormatConfiguration struct {
	DateTimeFormat               *string                                `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration *DashboardNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *DashboardNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// DashboardDateTimeFormatConfigurationInput is an input type that accepts DashboardDateTimeFormatConfigurationArgs and DashboardDateTimeFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardDateTimeFormatConfigurationInput` via:
//
//	DashboardDateTimeFormatConfigurationArgs{...}
type DashboardDateTimeFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardDateTimeFormatConfigurationOutput() DashboardDateTimeFormatConfigurationOutput
	ToDashboardDateTimeFormatConfigurationOutputWithContext(context.Context) DashboardDateTimeFormatConfigurationOutput
}

type DashboardDateTimeFormatConfigurationArgs struct {
	DateTimeFormat               pulumi.StringPtrInput                         `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration DashboardNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   DashboardNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (DashboardDateTimeFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeFormatConfiguration)(nil)).Elem()
}

func (i DashboardDateTimeFormatConfigurationArgs) ToDashboardDateTimeFormatConfigurationOutput() DashboardDateTimeFormatConfigurationOutput {
	return i.ToDashboardDateTimeFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardDateTimeFormatConfigurationArgs) ToDashboardDateTimeFormatConfigurationOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeFormatConfigurationOutput)
}

func (i DashboardDateTimeFormatConfigurationArgs) ToDashboardDateTimeFormatConfigurationPtrOutput() DashboardDateTimeFormatConfigurationPtrOutput {
	return i.ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimeFormatConfigurationArgs) ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeFormatConfigurationOutput).ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardDateTimeFormatConfigurationPtrInput is an input type that accepts DashboardDateTimeFormatConfigurationArgs, DashboardDateTimeFormatConfigurationPtr and DashboardDateTimeFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimeFormatConfigurationPtrInput` via:
//
//	        DashboardDateTimeFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimeFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDateTimeFormatConfigurationPtrOutput() DashboardDateTimeFormatConfigurationPtrOutput
	ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(context.Context) DashboardDateTimeFormatConfigurationPtrOutput
}

type dashboardDateTimeFormatConfigurationPtrType DashboardDateTimeFormatConfigurationArgs

func DashboardDateTimeFormatConfigurationPtr(v *DashboardDateTimeFormatConfigurationArgs) DashboardDateTimeFormatConfigurationPtrInput {
	return (*dashboardDateTimeFormatConfigurationPtrType)(v)
}

func (*dashboardDateTimeFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeFormatConfiguration)(nil)).Elem()
}

func (i *dashboardDateTimeFormatConfigurationPtrType) ToDashboardDateTimeFormatConfigurationPtrOutput() DashboardDateTimeFormatConfigurationPtrOutput {
	return i.ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimeFormatConfigurationPtrType) ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeFormatConfigurationPtrOutput)
}

type DashboardDateTimeFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeFormatConfiguration)(nil)).Elem()
}

func (o DashboardDateTimeFormatConfigurationOutput) ToDashboardDateTimeFormatConfigurationOutput() DashboardDateTimeFormatConfigurationOutput {
	return o
}

func (o DashboardDateTimeFormatConfigurationOutput) ToDashboardDateTimeFormatConfigurationOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationOutput {
	return o
}

func (o DashboardDateTimeFormatConfigurationOutput) ToDashboardDateTimeFormatConfigurationPtrOutput() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimeFormatConfigurationOutput) ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimeFormatConfiguration) *DashboardDateTimeFormatConfiguration {
		return &v
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

func (o DashboardDateTimeFormatConfigurationOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeFormatConfiguration) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimeFormatConfigurationOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardDateTimeFormatConfigurationOutput) NumericFormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeFormatConfiguration) *DashboardNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardDateTimeFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeFormatConfiguration)(nil)).Elem()
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) ToDashboardDateTimeFormatConfigurationPtrOutput() DashboardDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) ToDashboardDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) Elem() DashboardDateTimeFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardDateTimeFormatConfiguration) DashboardDateTimeFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimeFormatConfiguration
		return ret
	}).(DashboardDateTimeFormatConfigurationOutput)
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeFormatConfiguration) *DashboardNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardDateTimeFormatConfigurationPtrOutput) NumericFormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeFormatConfiguration) *DashboardNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardDateTimeHierarchy struct {
	DrillDownFilters []DashboardDrillDownFilter `pulumi:"drillDownFilters"`
	HierarchyId      string                     `pulumi:"hierarchyId"`
}

// DashboardDateTimeHierarchyInput is an input type that accepts DashboardDateTimeHierarchyArgs and DashboardDateTimeHierarchyOutput values.
// You can construct a concrete instance of `DashboardDateTimeHierarchyInput` via:
//
//	DashboardDateTimeHierarchyArgs{...}
type DashboardDateTimeHierarchyInput interface {
	pulumi.Input

	ToDashboardDateTimeHierarchyOutput() DashboardDateTimeHierarchyOutput
	ToDashboardDateTimeHierarchyOutputWithContext(context.Context) DashboardDateTimeHierarchyOutput
}

type DashboardDateTimeHierarchyArgs struct {
	DrillDownFilters DashboardDrillDownFilterArrayInput `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                 `pulumi:"hierarchyId"`
}

func (DashboardDateTimeHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeHierarchy)(nil)).Elem()
}

func (i DashboardDateTimeHierarchyArgs) ToDashboardDateTimeHierarchyOutput() DashboardDateTimeHierarchyOutput {
	return i.ToDashboardDateTimeHierarchyOutputWithContext(context.Background())
}

func (i DashboardDateTimeHierarchyArgs) ToDashboardDateTimeHierarchyOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeHierarchyOutput)
}

func (i DashboardDateTimeHierarchyArgs) ToDashboardDateTimeHierarchyPtrOutput() DashboardDateTimeHierarchyPtrOutput {
	return i.ToDashboardDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimeHierarchyArgs) ToDashboardDateTimeHierarchyPtrOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeHierarchyOutput).ToDashboardDateTimeHierarchyPtrOutputWithContext(ctx)
}

// DashboardDateTimeHierarchyPtrInput is an input type that accepts DashboardDateTimeHierarchyArgs, DashboardDateTimeHierarchyPtr and DashboardDateTimeHierarchyPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimeHierarchyPtrInput` via:
//
//	        DashboardDateTimeHierarchyArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimeHierarchyPtrInput interface {
	pulumi.Input

	ToDashboardDateTimeHierarchyPtrOutput() DashboardDateTimeHierarchyPtrOutput
	ToDashboardDateTimeHierarchyPtrOutputWithContext(context.Context) DashboardDateTimeHierarchyPtrOutput
}

type dashboardDateTimeHierarchyPtrType DashboardDateTimeHierarchyArgs

func DashboardDateTimeHierarchyPtr(v *DashboardDateTimeHierarchyArgs) DashboardDateTimeHierarchyPtrInput {
	return (*dashboardDateTimeHierarchyPtrType)(v)
}

func (*dashboardDateTimeHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeHierarchy)(nil)).Elem()
}

func (i *dashboardDateTimeHierarchyPtrType) ToDashboardDateTimeHierarchyPtrOutput() DashboardDateTimeHierarchyPtrOutput {
	return i.ToDashboardDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimeHierarchyPtrType) ToDashboardDateTimeHierarchyPtrOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeHierarchyPtrOutput)
}

type DashboardDateTimeHierarchyOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeHierarchy)(nil)).Elem()
}

func (o DashboardDateTimeHierarchyOutput) ToDashboardDateTimeHierarchyOutput() DashboardDateTimeHierarchyOutput {
	return o
}

func (o DashboardDateTimeHierarchyOutput) ToDashboardDateTimeHierarchyOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyOutput {
	return o
}

func (o DashboardDateTimeHierarchyOutput) ToDashboardDateTimeHierarchyPtrOutput() DashboardDateTimeHierarchyPtrOutput {
	return o.ToDashboardDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimeHierarchyOutput) ToDashboardDateTimeHierarchyPtrOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimeHierarchy) *DashboardDateTimeHierarchy {
		return &v
	}).(DashboardDateTimeHierarchyPtrOutput)
}

func (o DashboardDateTimeHierarchyOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v DashboardDateTimeHierarchy) []DashboardDrillDownFilter { return v.DrillDownFilters }).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardDateTimeHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateTimeHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type DashboardDateTimeHierarchyPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeHierarchy)(nil)).Elem()
}

func (o DashboardDateTimeHierarchyPtrOutput) ToDashboardDateTimeHierarchyPtrOutput() DashboardDateTimeHierarchyPtrOutput {
	return o
}

func (o DashboardDateTimeHierarchyPtrOutput) ToDashboardDateTimeHierarchyPtrOutputWithContext(ctx context.Context) DashboardDateTimeHierarchyPtrOutput {
	return o
}

func (o DashboardDateTimeHierarchyPtrOutput) Elem() DashboardDateTimeHierarchyOutput {
	return o.ApplyT(func(v *DashboardDateTimeHierarchy) DashboardDateTimeHierarchy {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimeHierarchy
		return ret
	}).(DashboardDateTimeHierarchyOutput)
}

func (o DashboardDateTimeHierarchyPtrOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *DashboardDateTimeHierarchy) []DashboardDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardDateTimeHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardDateTimeParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// DashboardDateTimeParameterInput is an input type that accepts DashboardDateTimeParameterArgs and DashboardDateTimeParameterOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterInput` via:
//
//	DashboardDateTimeParameterArgs{...}
type DashboardDateTimeParameterInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput
	ToDashboardDateTimeParameterOutputWithContext(context.Context) DashboardDateTimeParameterOutput
}

type DashboardDateTimeParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardDateTimeParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameter)(nil)).Elem()
}

func (i DashboardDateTimeParameterArgs) ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput {
	return i.ToDashboardDateTimeParameterOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterArgs) ToDashboardDateTimeParameterOutputWithContext(ctx context.Context) DashboardDateTimeParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterOutput)
}

// DashboardDateTimeParameterArrayInput is an input type that accepts DashboardDateTimeParameterArray and DashboardDateTimeParameterArrayOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterArrayInput` via:
//
//	DashboardDateTimeParameterArray{ DashboardDateTimeParameterArgs{...} }
type DashboardDateTimeParameterArrayInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput
	ToDashboardDateTimeParameterArrayOutputWithContext(context.Context) DashboardDateTimeParameterArrayOutput
}

type DashboardDateTimeParameterArray []DashboardDateTimeParameterInput

func (DashboardDateTimeParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDateTimeParameter)(nil)).Elem()
}

func (i DashboardDateTimeParameterArray) ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput {
	return i.ToDashboardDateTimeParameterArrayOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterArray) ToDashboardDateTimeParameterArrayOutputWithContext(ctx context.Context) DashboardDateTimeParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterArrayOutput)
}

type DashboardDateTimeParameterOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameter)(nil)).Elem()
}

func (o DashboardDateTimeParameterOutput) ToDashboardDateTimeParameterOutput() DashboardDateTimeParameterOutput {
	return o
}

func (o DashboardDateTimeParameterOutput) ToDashboardDateTimeParameterOutputWithContext(ctx context.Context) DashboardDateTimeParameterOutput {
	return o
}

func (o DashboardDateTimeParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateTimeParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardDateTimeParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardDateTimeParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardDateTimeParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDateTimeParameter)(nil)).Elem()
}

func (o DashboardDateTimeParameterArrayOutput) ToDashboardDateTimeParameterArrayOutput() DashboardDateTimeParameterArrayOutput {
	return o
}

func (o DashboardDateTimeParameterArrayOutput) ToDashboardDateTimeParameterArrayOutputWithContext(ctx context.Context) DashboardDateTimeParameterArrayOutput {
	return o
}

func (o DashboardDateTimeParameterArrayOutput) Index(i pulumi.IntInput) DashboardDateTimeParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDateTimeParameter {
		return vs[0].([]DashboardDateTimeParameter)[vs[1].(int)]
	}).(DashboardDateTimeParameterOutput)
}

type DashboardDateTimeParameterDeclaration struct {
	DefaultValues           *DashboardDateTimeDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []DashboardMappedDataSetParameter             `pulumi:"mappedDataSetParameters"`
	Name                    string                                        `pulumi:"name"`
	TimeGranularity         *DashboardTimeGranularity                     `pulumi:"timeGranularity"`
	ValueWhenUnset          *DashboardDateTimeValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// DashboardDateTimeParameterDeclarationInput is an input type that accepts DashboardDateTimeParameterDeclarationArgs and DashboardDateTimeParameterDeclarationOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterDeclarationInput` via:
//
//	DashboardDateTimeParameterDeclarationArgs{...}
type DashboardDateTimeParameterDeclarationInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterDeclarationOutput() DashboardDateTimeParameterDeclarationOutput
	ToDashboardDateTimeParameterDeclarationOutputWithContext(context.Context) DashboardDateTimeParameterDeclarationOutput
}

type DashboardDateTimeParameterDeclarationArgs struct {
	DefaultValues           DashboardDateTimeDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters DashboardMappedDataSetParameterArrayInput            `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                   `pulumi:"name"`
	TimeGranularity         DashboardTimeGranularityPtrInput                     `pulumi:"timeGranularity"`
	ValueWhenUnset          DashboardDateTimeValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (DashboardDateTimeParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameterDeclaration)(nil)).Elem()
}

func (i DashboardDateTimeParameterDeclarationArgs) ToDashboardDateTimeParameterDeclarationOutput() DashboardDateTimeParameterDeclarationOutput {
	return i.ToDashboardDateTimeParameterDeclarationOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterDeclarationArgs) ToDashboardDateTimeParameterDeclarationOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterDeclarationOutput)
}

func (i DashboardDateTimeParameterDeclarationArgs) ToDashboardDateTimeParameterDeclarationPtrOutput() DashboardDateTimeParameterDeclarationPtrOutput {
	return i.ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimeParameterDeclarationArgs) ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterDeclarationOutput).ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(ctx)
}

// DashboardDateTimeParameterDeclarationPtrInput is an input type that accepts DashboardDateTimeParameterDeclarationArgs, DashboardDateTimeParameterDeclarationPtr and DashboardDateTimeParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimeParameterDeclarationPtrInput` via:
//
//	        DashboardDateTimeParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimeParameterDeclarationPtrInput interface {
	pulumi.Input

	ToDashboardDateTimeParameterDeclarationPtrOutput() DashboardDateTimeParameterDeclarationPtrOutput
	ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(context.Context) DashboardDateTimeParameterDeclarationPtrOutput
}

type dashboardDateTimeParameterDeclarationPtrType DashboardDateTimeParameterDeclarationArgs

func DashboardDateTimeParameterDeclarationPtr(v *DashboardDateTimeParameterDeclarationArgs) DashboardDateTimeParameterDeclarationPtrInput {
	return (*dashboardDateTimeParameterDeclarationPtrType)(v)
}

func (*dashboardDateTimeParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeParameterDeclaration)(nil)).Elem()
}

func (i *dashboardDateTimeParameterDeclarationPtrType) ToDashboardDateTimeParameterDeclarationPtrOutput() DashboardDateTimeParameterDeclarationPtrOutput {
	return i.ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimeParameterDeclarationPtrType) ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeParameterDeclarationPtrOutput)
}

type DashboardDateTimeParameterDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeParameterDeclaration)(nil)).Elem()
}

func (o DashboardDateTimeParameterDeclarationOutput) ToDashboardDateTimeParameterDeclarationOutput() DashboardDateTimeParameterDeclarationOutput {
	return o
}

func (o DashboardDateTimeParameterDeclarationOutput) ToDashboardDateTimeParameterDeclarationOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationOutput {
	return o
}

func (o DashboardDateTimeParameterDeclarationOutput) ToDashboardDateTimeParameterDeclarationPtrOutput() DashboardDateTimeParameterDeclarationPtrOutput {
	return o.ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimeParameterDeclarationOutput) ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimeParameterDeclaration) *DashboardDateTimeParameterDeclaration {
		return &v
	}).(DashboardDateTimeParameterDeclarationPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationOutput) DefaultValues() DashboardDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeParameterDeclaration) *DashboardDateTimeDefaultValues { return v.DefaultValues }).(DashboardDateTimeDefaultValuesPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v DashboardDateTimeParameterDeclaration) []DashboardMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardDateTimeParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDateTimeParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardDateTimeParameterDeclarationOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeParameterDeclaration) *DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationOutput) ValueWhenUnset() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeParameterDeclaration) *DashboardDateTimeValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(DashboardDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDateTimeParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeParameterDeclaration)(nil)).Elem()
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) ToDashboardDateTimeParameterDeclarationPtrOutput() DashboardDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) ToDashboardDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) Elem() DashboardDateTimeParameterDeclarationOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) DashboardDateTimeParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimeParameterDeclaration
		return ret
	}).(DashboardDateTimeParameterDeclarationOutput)
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) DefaultValues() DashboardDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) *DashboardDateTimeDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(DashboardDateTimeDefaultValuesPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) []DashboardMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardDateTimeParameterDeclarationPtrOutput) ValueWhenUnset() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeParameterDeclaration) *DashboardDateTimeValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(DashboardDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDateTimePickerControlDisplayOptions struct {
	DateTimeFormat *string                `pulumi:"dateTimeFormat"`
	TitleOptions   *DashboardLabelOptions `pulumi:"titleOptions"`
}

// DashboardDateTimePickerControlDisplayOptionsInput is an input type that accepts DashboardDateTimePickerControlDisplayOptionsArgs and DashboardDateTimePickerControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardDateTimePickerControlDisplayOptionsInput` via:
//
//	DashboardDateTimePickerControlDisplayOptionsArgs{...}
type DashboardDateTimePickerControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardDateTimePickerControlDisplayOptionsOutput() DashboardDateTimePickerControlDisplayOptionsOutput
	ToDashboardDateTimePickerControlDisplayOptionsOutputWithContext(context.Context) DashboardDateTimePickerControlDisplayOptionsOutput
}

type DashboardDateTimePickerControlDisplayOptionsArgs struct {
	DateTimeFormat pulumi.StringPtrInput         `pulumi:"dateTimeFormat"`
	TitleOptions   DashboardLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (DashboardDateTimePickerControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i DashboardDateTimePickerControlDisplayOptionsArgs) ToDashboardDateTimePickerControlDisplayOptionsOutput() DashboardDateTimePickerControlDisplayOptionsOutput {
	return i.ToDashboardDateTimePickerControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardDateTimePickerControlDisplayOptionsArgs) ToDashboardDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimePickerControlDisplayOptionsOutput)
}

func (i DashboardDateTimePickerControlDisplayOptionsArgs) ToDashboardDateTimePickerControlDisplayOptionsPtrOutput() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimePickerControlDisplayOptionsArgs) ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimePickerControlDisplayOptionsOutput).ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardDateTimePickerControlDisplayOptionsPtrInput is an input type that accepts DashboardDateTimePickerControlDisplayOptionsArgs, DashboardDateTimePickerControlDisplayOptionsPtr and DashboardDateTimePickerControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimePickerControlDisplayOptionsPtrInput` via:
//
//	        DashboardDateTimePickerControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimePickerControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDateTimePickerControlDisplayOptionsPtrOutput() DashboardDateTimePickerControlDisplayOptionsPtrOutput
	ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardDateTimePickerControlDisplayOptionsPtrOutput
}

type dashboardDateTimePickerControlDisplayOptionsPtrType DashboardDateTimePickerControlDisplayOptionsArgs

func DashboardDateTimePickerControlDisplayOptionsPtr(v *DashboardDateTimePickerControlDisplayOptionsArgs) DashboardDateTimePickerControlDisplayOptionsPtrInput {
	return (*dashboardDateTimePickerControlDisplayOptionsPtrType)(v)
}

func (*dashboardDateTimePickerControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardDateTimePickerControlDisplayOptionsPtrType) ToDashboardDateTimePickerControlDisplayOptionsPtrOutput() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimePickerControlDisplayOptionsPtrType) ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

type DashboardDateTimePickerControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDateTimePickerControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) ToDashboardDateTimePickerControlDisplayOptionsOutput() DashboardDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) ToDashboardDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) ToDashboardDateTimePickerControlDisplayOptionsPtrOutput() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimePickerControlDisplayOptions) *DashboardDateTimePickerControlDisplayOptions {
		return &v
	}).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDateTimePickerControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimePickerControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDateTimePickerControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardDateTimePickerControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimePickerControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o DashboardDateTimePickerControlDisplayOptionsPtrOutput) ToDashboardDateTimePickerControlDisplayOptionsPtrOutput() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardDateTimePickerControlDisplayOptionsPtrOutput) ToDashboardDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardDateTimePickerControlDisplayOptionsPtrOutput) Elem() DashboardDateTimePickerControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardDateTimePickerControlDisplayOptions) DashboardDateTimePickerControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimePickerControlDisplayOptions
		return ret
	}).(DashboardDateTimePickerControlDisplayOptionsOutput)
}

func (o DashboardDateTimePickerControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimePickerControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimePickerControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimePickerControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardDateTimeValueWhenUnsetConfiguration struct {
	CustomValue          *string                        `pulumi:"customValue"`
	ValueWhenUnsetOption *DashboardValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// DashboardDateTimeValueWhenUnsetConfigurationInput is an input type that accepts DashboardDateTimeValueWhenUnsetConfigurationArgs and DashboardDateTimeValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `DashboardDateTimeValueWhenUnsetConfigurationInput` via:
//
//	DashboardDateTimeValueWhenUnsetConfigurationArgs{...}
type DashboardDateTimeValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToDashboardDateTimeValueWhenUnsetConfigurationOutput() DashboardDateTimeValueWhenUnsetConfigurationOutput
	ToDashboardDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Context) DashboardDateTimeValueWhenUnsetConfigurationOutput
}

type DashboardDateTimeValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                 `pulumi:"customValue"`
	ValueWhenUnsetOption DashboardValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (DashboardDateTimeValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i DashboardDateTimeValueWhenUnsetConfigurationArgs) ToDashboardDateTimeValueWhenUnsetConfigurationOutput() DashboardDateTimeValueWhenUnsetConfigurationOutput {
	return i.ToDashboardDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i DashboardDateTimeValueWhenUnsetConfigurationArgs) ToDashboardDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeValueWhenUnsetConfigurationOutput)
}

func (i DashboardDateTimeValueWhenUnsetConfigurationArgs) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutput() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDateTimeValueWhenUnsetConfigurationArgs) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeValueWhenUnsetConfigurationOutput).ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// DashboardDateTimeValueWhenUnsetConfigurationPtrInput is an input type that accepts DashboardDateTimeValueWhenUnsetConfigurationArgs, DashboardDateTimeValueWhenUnsetConfigurationPtr and DashboardDateTimeValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDateTimeValueWhenUnsetConfigurationPtrInput` via:
//
//	        DashboardDateTimeValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDateTimeValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutput() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput
	ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) DashboardDateTimeValueWhenUnsetConfigurationPtrOutput
}

type dashboardDateTimeValueWhenUnsetConfigurationPtrType DashboardDateTimeValueWhenUnsetConfigurationArgs

func DashboardDateTimeValueWhenUnsetConfigurationPtr(v *DashboardDateTimeValueWhenUnsetConfigurationArgs) DashboardDateTimeValueWhenUnsetConfigurationPtrInput {
	return (*dashboardDateTimeValueWhenUnsetConfigurationPtrType)(v)
}

func (*dashboardDateTimeValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *dashboardDateTimeValueWhenUnsetConfigurationPtrType) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutput() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDateTimeValueWhenUnsetConfigurationPtrType) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDateTimeValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) ToDashboardDateTimeValueWhenUnsetConfigurationOutput() DashboardDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) ToDashboardDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutput() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDateTimeValueWhenUnsetConfiguration) *DashboardDateTimeValueWhenUnsetConfiguration {
		return &v
	}).(DashboardDateTimeValueWhenUnsetConfigurationPtrOutput)
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimeValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v DashboardDateTimeValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardDateTimeValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutput() DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) ToDashboardDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) Elem() DashboardDateTimeValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *DashboardDateTimeValueWhenUnsetConfiguration) DashboardDateTimeValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDateTimeValueWhenUnsetConfiguration
		return ret
	}).(DashboardDateTimeValueWhenUnsetConfigurationOutput)
}

func (o DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDateTimeValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *DashboardDateTimeValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardDecimalDefaultValues struct {
	DynamicValue *DashboardDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                     `pulumi:"staticValues"`
}

// DashboardDecimalDefaultValuesInput is an input type that accepts DashboardDecimalDefaultValuesArgs and DashboardDecimalDefaultValuesOutput values.
// You can construct a concrete instance of `DashboardDecimalDefaultValuesInput` via:
//
//	DashboardDecimalDefaultValuesArgs{...}
type DashboardDecimalDefaultValuesInput interface {
	pulumi.Input

	ToDashboardDecimalDefaultValuesOutput() DashboardDecimalDefaultValuesOutput
	ToDashboardDecimalDefaultValuesOutputWithContext(context.Context) DashboardDecimalDefaultValuesOutput
}

type DashboardDecimalDefaultValuesArgs struct {
	DynamicValue DashboardDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput             `pulumi:"staticValues"`
}

func (DashboardDecimalDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalDefaultValues)(nil)).Elem()
}

func (i DashboardDecimalDefaultValuesArgs) ToDashboardDecimalDefaultValuesOutput() DashboardDecimalDefaultValuesOutput {
	return i.ToDashboardDecimalDefaultValuesOutputWithContext(context.Background())
}

func (i DashboardDecimalDefaultValuesArgs) ToDashboardDecimalDefaultValuesOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalDefaultValuesOutput)
}

func (i DashboardDecimalDefaultValuesArgs) ToDashboardDecimalDefaultValuesPtrOutput() DashboardDecimalDefaultValuesPtrOutput {
	return i.ToDashboardDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i DashboardDecimalDefaultValuesArgs) ToDashboardDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalDefaultValuesOutput).ToDashboardDecimalDefaultValuesPtrOutputWithContext(ctx)
}

// DashboardDecimalDefaultValuesPtrInput is an input type that accepts DashboardDecimalDefaultValuesArgs, DashboardDecimalDefaultValuesPtr and DashboardDecimalDefaultValuesPtrOutput values.
// You can construct a concrete instance of `DashboardDecimalDefaultValuesPtrInput` via:
//
//	        DashboardDecimalDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardDecimalDefaultValuesPtrInput interface {
	pulumi.Input

	ToDashboardDecimalDefaultValuesPtrOutput() DashboardDecimalDefaultValuesPtrOutput
	ToDashboardDecimalDefaultValuesPtrOutputWithContext(context.Context) DashboardDecimalDefaultValuesPtrOutput
}

type dashboardDecimalDefaultValuesPtrType DashboardDecimalDefaultValuesArgs

func DashboardDecimalDefaultValuesPtr(v *DashboardDecimalDefaultValuesArgs) DashboardDecimalDefaultValuesPtrInput {
	return (*dashboardDecimalDefaultValuesPtrType)(v)
}

func (*dashboardDecimalDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalDefaultValues)(nil)).Elem()
}

func (i *dashboardDecimalDefaultValuesPtrType) ToDashboardDecimalDefaultValuesPtrOutput() DashboardDecimalDefaultValuesPtrOutput {
	return i.ToDashboardDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardDecimalDefaultValuesPtrType) ToDashboardDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalDefaultValuesPtrOutput)
}

type DashboardDecimalDefaultValuesOutput struct{ *pulumi.OutputState }

func (DashboardDecimalDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalDefaultValues)(nil)).Elem()
}

func (o DashboardDecimalDefaultValuesOutput) ToDashboardDecimalDefaultValuesOutput() DashboardDecimalDefaultValuesOutput {
	return o
}

func (o DashboardDecimalDefaultValuesOutput) ToDashboardDecimalDefaultValuesOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesOutput {
	return o
}

func (o DashboardDecimalDefaultValuesOutput) ToDashboardDecimalDefaultValuesPtrOutput() DashboardDecimalDefaultValuesPtrOutput {
	return o.ToDashboardDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (o DashboardDecimalDefaultValuesOutput) ToDashboardDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDecimalDefaultValues) *DashboardDecimalDefaultValues {
		return &v
	}).(DashboardDecimalDefaultValuesPtrOutput)
}

func (o DashboardDecimalDefaultValuesOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v DashboardDecimalDefaultValues) *DashboardDynamicDefaultValue { return v.DynamicValue }).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardDecimalDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardDecimalDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type DashboardDecimalDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardDecimalDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalDefaultValues)(nil)).Elem()
}

func (o DashboardDecimalDefaultValuesPtrOutput) ToDashboardDecimalDefaultValuesPtrOutput() DashboardDecimalDefaultValuesPtrOutput {
	return o
}

func (o DashboardDecimalDefaultValuesPtrOutput) ToDashboardDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardDecimalDefaultValuesPtrOutput {
	return o
}

func (o DashboardDecimalDefaultValuesPtrOutput) Elem() DashboardDecimalDefaultValuesOutput {
	return o.ApplyT(func(v *DashboardDecimalDefaultValues) DashboardDecimalDefaultValues {
		if v != nil {
			return *v
		}
		var ret DashboardDecimalDefaultValues
		return ret
	}).(DashboardDecimalDefaultValuesOutput)
}

func (o DashboardDecimalDefaultValuesPtrOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *DashboardDecimalDefaultValues) *DashboardDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardDecimalDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *DashboardDecimalDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type DashboardDecimalParameter struct {
	Name   string    `pulumi:"name"`
	Values []float64 `pulumi:"values"`
}

// DashboardDecimalParameterInput is an input type that accepts DashboardDecimalParameterArgs and DashboardDecimalParameterOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterInput` via:
//
//	DashboardDecimalParameterArgs{...}
type DashboardDecimalParameterInput interface {
	pulumi.Input

	ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput
	ToDashboardDecimalParameterOutputWithContext(context.Context) DashboardDecimalParameterOutput
}

type DashboardDecimalParameterArgs struct {
	Name   pulumi.StringInput       `pulumi:"name"`
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (DashboardDecimalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameter)(nil)).Elem()
}

func (i DashboardDecimalParameterArgs) ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput {
	return i.ToDashboardDecimalParameterOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterArgs) ToDashboardDecimalParameterOutputWithContext(ctx context.Context) DashboardDecimalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterOutput)
}

// DashboardDecimalParameterArrayInput is an input type that accepts DashboardDecimalParameterArray and DashboardDecimalParameterArrayOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterArrayInput` via:
//
//	DashboardDecimalParameterArray{ DashboardDecimalParameterArgs{...} }
type DashboardDecimalParameterArrayInput interface {
	pulumi.Input

	ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput
	ToDashboardDecimalParameterArrayOutputWithContext(context.Context) DashboardDecimalParameterArrayOutput
}

type DashboardDecimalParameterArray []DashboardDecimalParameterInput

func (DashboardDecimalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDecimalParameter)(nil)).Elem()
}

func (i DashboardDecimalParameterArray) ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput {
	return i.ToDashboardDecimalParameterArrayOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterArray) ToDashboardDecimalParameterArrayOutputWithContext(ctx context.Context) DashboardDecimalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterArrayOutput)
}

type DashboardDecimalParameterOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameter)(nil)).Elem()
}

func (o DashboardDecimalParameterOutput) ToDashboardDecimalParameterOutput() DashboardDecimalParameterOutput {
	return o
}

func (o DashboardDecimalParameterOutput) ToDashboardDecimalParameterOutputWithContext(ctx context.Context) DashboardDecimalParameterOutput {
	return o
}

func (o DashboardDecimalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDecimalParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardDecimalParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardDecimalParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type DashboardDecimalParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDecimalParameter)(nil)).Elem()
}

func (o DashboardDecimalParameterArrayOutput) ToDashboardDecimalParameterArrayOutput() DashboardDecimalParameterArrayOutput {
	return o
}

func (o DashboardDecimalParameterArrayOutput) ToDashboardDecimalParameterArrayOutputWithContext(ctx context.Context) DashboardDecimalParameterArrayOutput {
	return o
}

func (o DashboardDecimalParameterArrayOutput) Index(i pulumi.IntInput) DashboardDecimalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDecimalParameter {
		return vs[0].([]DashboardDecimalParameter)[vs[1].(int)]
	}).(DashboardDecimalParameterOutput)
}

type DashboardDecimalParameterDeclaration struct {
	DefaultValues           *DashboardDecimalDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []DashboardMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                       `pulumi:"name"`
	ParameterValueType      DashboardParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *DashboardDecimalValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// DashboardDecimalParameterDeclarationInput is an input type that accepts DashboardDecimalParameterDeclarationArgs and DashboardDecimalParameterDeclarationOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterDeclarationInput` via:
//
//	DashboardDecimalParameterDeclarationArgs{...}
type DashboardDecimalParameterDeclarationInput interface {
	pulumi.Input

	ToDashboardDecimalParameterDeclarationOutput() DashboardDecimalParameterDeclarationOutput
	ToDashboardDecimalParameterDeclarationOutputWithContext(context.Context) DashboardDecimalParameterDeclarationOutput
}

type DashboardDecimalParameterDeclarationArgs struct {
	DefaultValues           DashboardDecimalDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters DashboardMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                  `pulumi:"name"`
	ParameterValueType      DashboardParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          DashboardDecimalValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (DashboardDecimalParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameterDeclaration)(nil)).Elem()
}

func (i DashboardDecimalParameterDeclarationArgs) ToDashboardDecimalParameterDeclarationOutput() DashboardDecimalParameterDeclarationOutput {
	return i.ToDashboardDecimalParameterDeclarationOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterDeclarationArgs) ToDashboardDecimalParameterDeclarationOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterDeclarationOutput)
}

func (i DashboardDecimalParameterDeclarationArgs) ToDashboardDecimalParameterDeclarationPtrOutput() DashboardDecimalParameterDeclarationPtrOutput {
	return i.ToDashboardDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i DashboardDecimalParameterDeclarationArgs) ToDashboardDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterDeclarationOutput).ToDashboardDecimalParameterDeclarationPtrOutputWithContext(ctx)
}

// DashboardDecimalParameterDeclarationPtrInput is an input type that accepts DashboardDecimalParameterDeclarationArgs, DashboardDecimalParameterDeclarationPtr and DashboardDecimalParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `DashboardDecimalParameterDeclarationPtrInput` via:
//
//	        DashboardDecimalParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type DashboardDecimalParameterDeclarationPtrInput interface {
	pulumi.Input

	ToDashboardDecimalParameterDeclarationPtrOutput() DashboardDecimalParameterDeclarationPtrOutput
	ToDashboardDecimalParameterDeclarationPtrOutputWithContext(context.Context) DashboardDecimalParameterDeclarationPtrOutput
}

type dashboardDecimalParameterDeclarationPtrType DashboardDecimalParameterDeclarationArgs

func DashboardDecimalParameterDeclarationPtr(v *DashboardDecimalParameterDeclarationArgs) DashboardDecimalParameterDeclarationPtrInput {
	return (*dashboardDecimalParameterDeclarationPtrType)(v)
}

func (*dashboardDecimalParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalParameterDeclaration)(nil)).Elem()
}

func (i *dashboardDecimalParameterDeclarationPtrType) ToDashboardDecimalParameterDeclarationPtrOutput() DashboardDecimalParameterDeclarationPtrOutput {
	return i.ToDashboardDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *dashboardDecimalParameterDeclarationPtrType) ToDashboardDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalParameterDeclarationPtrOutput)
}

type DashboardDecimalParameterDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalParameterDeclaration)(nil)).Elem()
}

func (o DashboardDecimalParameterDeclarationOutput) ToDashboardDecimalParameterDeclarationOutput() DashboardDecimalParameterDeclarationOutput {
	return o
}

func (o DashboardDecimalParameterDeclarationOutput) ToDashboardDecimalParameterDeclarationOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationOutput {
	return o
}

func (o DashboardDecimalParameterDeclarationOutput) ToDashboardDecimalParameterDeclarationPtrOutput() DashboardDecimalParameterDeclarationPtrOutput {
	return o.ToDashboardDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o DashboardDecimalParameterDeclarationOutput) ToDashboardDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDecimalParameterDeclaration) *DashboardDecimalParameterDeclaration {
		return &v
	}).(DashboardDecimalParameterDeclarationPtrOutput)
}

func (o DashboardDecimalParameterDeclarationOutput) DefaultValues() DashboardDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v DashboardDecimalParameterDeclaration) *DashboardDecimalDefaultValues { return v.DefaultValues }).(DashboardDecimalDefaultValuesPtrOutput)
}

func (o DashboardDecimalParameterDeclarationOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v DashboardDecimalParameterDeclaration) []DashboardMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardDecimalParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardDecimalParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardDecimalParameterDeclarationOutput) ParameterValueType() DashboardParameterValueTypeOutput {
	return o.ApplyT(func(v DashboardDecimalParameterDeclaration) DashboardParameterValueType { return v.ParameterValueType }).(DashboardParameterValueTypeOutput)
}

func (o DashboardDecimalParameterDeclarationOutput) ValueWhenUnset() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDecimalParameterDeclaration) *DashboardDecimalValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(DashboardDecimalValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDecimalParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDecimalParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalParameterDeclaration)(nil)).Elem()
}

func (o DashboardDecimalParameterDeclarationPtrOutput) ToDashboardDecimalParameterDeclarationPtrOutput() DashboardDecimalParameterDeclarationPtrOutput {
	return o
}

func (o DashboardDecimalParameterDeclarationPtrOutput) ToDashboardDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardDecimalParameterDeclarationPtrOutput {
	return o
}

func (o DashboardDecimalParameterDeclarationPtrOutput) Elem() DashboardDecimalParameterDeclarationOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) DashboardDecimalParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret DashboardDecimalParameterDeclaration
		return ret
	}).(DashboardDecimalParameterDeclarationOutput)
}

func (o DashboardDecimalParameterDeclarationPtrOutput) DefaultValues() DashboardDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) *DashboardDecimalDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(DashboardDecimalDefaultValuesPtrOutput)
}

func (o DashboardDecimalParameterDeclarationPtrOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) []DashboardMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardDecimalParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardDecimalParameterDeclarationPtrOutput) ParameterValueType() DashboardParameterValueTypePtrOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) *DashboardParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(DashboardParameterValueTypePtrOutput)
}

func (o DashboardDecimalParameterDeclarationPtrOutput) ValueWhenUnset() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDecimalParameterDeclaration) *DashboardDecimalValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(DashboardDecimalValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDecimalPlacesConfiguration struct {
	DecimalPlaces float64 `pulumi:"decimalPlaces"`
}

// DashboardDecimalPlacesConfigurationInput is an input type that accepts DashboardDecimalPlacesConfigurationArgs and DashboardDecimalPlacesConfigurationOutput values.
// You can construct a concrete instance of `DashboardDecimalPlacesConfigurationInput` via:
//
//	DashboardDecimalPlacesConfigurationArgs{...}
type DashboardDecimalPlacesConfigurationInput interface {
	pulumi.Input

	ToDashboardDecimalPlacesConfigurationOutput() DashboardDecimalPlacesConfigurationOutput
	ToDashboardDecimalPlacesConfigurationOutputWithContext(context.Context) DashboardDecimalPlacesConfigurationOutput
}

type DashboardDecimalPlacesConfigurationArgs struct {
	DecimalPlaces pulumi.Float64Input `pulumi:"decimalPlaces"`
}

func (DashboardDecimalPlacesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalPlacesConfiguration)(nil)).Elem()
}

func (i DashboardDecimalPlacesConfigurationArgs) ToDashboardDecimalPlacesConfigurationOutput() DashboardDecimalPlacesConfigurationOutput {
	return i.ToDashboardDecimalPlacesConfigurationOutputWithContext(context.Background())
}

func (i DashboardDecimalPlacesConfigurationArgs) ToDashboardDecimalPlacesConfigurationOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalPlacesConfigurationOutput)
}

func (i DashboardDecimalPlacesConfigurationArgs) ToDashboardDecimalPlacesConfigurationPtrOutput() DashboardDecimalPlacesConfigurationPtrOutput {
	return i.ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDecimalPlacesConfigurationArgs) ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalPlacesConfigurationOutput).ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(ctx)
}

// DashboardDecimalPlacesConfigurationPtrInput is an input type that accepts DashboardDecimalPlacesConfigurationArgs, DashboardDecimalPlacesConfigurationPtr and DashboardDecimalPlacesConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDecimalPlacesConfigurationPtrInput` via:
//
//	        DashboardDecimalPlacesConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDecimalPlacesConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDecimalPlacesConfigurationPtrOutput() DashboardDecimalPlacesConfigurationPtrOutput
	ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(context.Context) DashboardDecimalPlacesConfigurationPtrOutput
}

type dashboardDecimalPlacesConfigurationPtrType DashboardDecimalPlacesConfigurationArgs

func DashboardDecimalPlacesConfigurationPtr(v *DashboardDecimalPlacesConfigurationArgs) DashboardDecimalPlacesConfigurationPtrInput {
	return (*dashboardDecimalPlacesConfigurationPtrType)(v)
}

func (*dashboardDecimalPlacesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalPlacesConfiguration)(nil)).Elem()
}

func (i *dashboardDecimalPlacesConfigurationPtrType) ToDashboardDecimalPlacesConfigurationPtrOutput() DashboardDecimalPlacesConfigurationPtrOutput {
	return i.ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDecimalPlacesConfigurationPtrType) ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalPlacesConfigurationPtrOutput)
}

type DashboardDecimalPlacesConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDecimalPlacesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalPlacesConfiguration)(nil)).Elem()
}

func (o DashboardDecimalPlacesConfigurationOutput) ToDashboardDecimalPlacesConfigurationOutput() DashboardDecimalPlacesConfigurationOutput {
	return o
}

func (o DashboardDecimalPlacesConfigurationOutput) ToDashboardDecimalPlacesConfigurationOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationOutput {
	return o
}

func (o DashboardDecimalPlacesConfigurationOutput) ToDashboardDecimalPlacesConfigurationPtrOutput() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDecimalPlacesConfigurationOutput) ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDecimalPlacesConfiguration) *DashboardDecimalPlacesConfiguration {
		return &v
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardDecimalPlacesConfigurationOutput) DecimalPlaces() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardDecimalPlacesConfiguration) float64 { return v.DecimalPlaces }).(pulumi.Float64Output)
}

type DashboardDecimalPlacesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDecimalPlacesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalPlacesConfiguration)(nil)).Elem()
}

func (o DashboardDecimalPlacesConfigurationPtrOutput) ToDashboardDecimalPlacesConfigurationPtrOutput() DashboardDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o DashboardDecimalPlacesConfigurationPtrOutput) ToDashboardDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o DashboardDecimalPlacesConfigurationPtrOutput) Elem() DashboardDecimalPlacesConfigurationOutput {
	return o.ApplyT(func(v *DashboardDecimalPlacesConfiguration) DashboardDecimalPlacesConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDecimalPlacesConfiguration
		return ret
	}).(DashboardDecimalPlacesConfigurationOutput)
}

func (o DashboardDecimalPlacesConfigurationPtrOutput) DecimalPlaces() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardDecimalPlacesConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.DecimalPlaces
	}).(pulumi.Float64PtrOutput)
}

type DashboardDecimalValueWhenUnsetConfiguration struct {
	CustomValue          *float64                       `pulumi:"customValue"`
	ValueWhenUnsetOption *DashboardValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// DashboardDecimalValueWhenUnsetConfigurationInput is an input type that accepts DashboardDecimalValueWhenUnsetConfigurationArgs and DashboardDecimalValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `DashboardDecimalValueWhenUnsetConfigurationInput` via:
//
//	DashboardDecimalValueWhenUnsetConfigurationArgs{...}
type DashboardDecimalValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToDashboardDecimalValueWhenUnsetConfigurationOutput() DashboardDecimalValueWhenUnsetConfigurationOutput
	ToDashboardDecimalValueWhenUnsetConfigurationOutputWithContext(context.Context) DashboardDecimalValueWhenUnsetConfigurationOutput
}

type DashboardDecimalValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption DashboardValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (DashboardDecimalValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i DashboardDecimalValueWhenUnsetConfigurationArgs) ToDashboardDecimalValueWhenUnsetConfigurationOutput() DashboardDecimalValueWhenUnsetConfigurationOutput {
	return i.ToDashboardDecimalValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i DashboardDecimalValueWhenUnsetConfigurationArgs) ToDashboardDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalValueWhenUnsetConfigurationOutput)
}

func (i DashboardDecimalValueWhenUnsetConfigurationArgs) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutput() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDecimalValueWhenUnsetConfigurationArgs) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalValueWhenUnsetConfigurationOutput).ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// DashboardDecimalValueWhenUnsetConfigurationPtrInput is an input type that accepts DashboardDecimalValueWhenUnsetConfigurationArgs, DashboardDecimalValueWhenUnsetConfigurationPtr and DashboardDecimalValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDecimalValueWhenUnsetConfigurationPtrInput` via:
//
//	        DashboardDecimalValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDecimalValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDecimalValueWhenUnsetConfigurationPtrOutput() DashboardDecimalValueWhenUnsetConfigurationPtrOutput
	ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) DashboardDecimalValueWhenUnsetConfigurationPtrOutput
}

type dashboardDecimalValueWhenUnsetConfigurationPtrType DashboardDecimalValueWhenUnsetConfigurationArgs

func DashboardDecimalValueWhenUnsetConfigurationPtr(v *DashboardDecimalValueWhenUnsetConfigurationArgs) DashboardDecimalValueWhenUnsetConfigurationPtrInput {
	return (*dashboardDecimalValueWhenUnsetConfigurationPtrType)(v)
}

func (*dashboardDecimalValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *dashboardDecimalValueWhenUnsetConfigurationPtrType) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutput() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDecimalValueWhenUnsetConfigurationPtrType) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDecimalValueWhenUnsetConfigurationPtrOutput)
}

type DashboardDecimalValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDecimalValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) ToDashboardDecimalValueWhenUnsetConfigurationOutput() DashboardDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) ToDashboardDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutput() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDecimalValueWhenUnsetConfiguration) *DashboardDecimalValueWhenUnsetConfiguration {
		return &v
	}).(DashboardDecimalValueWhenUnsetConfigurationPtrOutput)
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardDecimalValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o DashboardDecimalValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v DashboardDecimalValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardDecimalValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDecimalValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardDecimalValueWhenUnsetConfigurationPtrOutput) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutput() DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardDecimalValueWhenUnsetConfigurationPtrOutput) ToDashboardDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardDecimalValueWhenUnsetConfigurationPtrOutput) Elem() DashboardDecimalValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *DashboardDecimalValueWhenUnsetConfiguration) DashboardDecimalValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDecimalValueWhenUnsetConfiguration
		return ret
	}).(DashboardDecimalValueWhenUnsetConfigurationOutput)
}

func (o DashboardDecimalValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardDecimalValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardDecimalValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *DashboardDecimalValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardDefaultFreeFormLayoutConfiguration struct {
	CanvasSizeOptions DashboardFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// DashboardDefaultFreeFormLayoutConfigurationInput is an input type that accepts DashboardDefaultFreeFormLayoutConfigurationArgs and DashboardDefaultFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultFreeFormLayoutConfigurationInput` via:
//
//	DashboardDefaultFreeFormLayoutConfigurationArgs{...}
type DashboardDefaultFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultFreeFormLayoutConfigurationOutput() DashboardDefaultFreeFormLayoutConfigurationOutput
	ToDashboardDefaultFreeFormLayoutConfigurationOutputWithContext(context.Context) DashboardDefaultFreeFormLayoutConfigurationOutput
}

type DashboardDefaultFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions DashboardFreeFormLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (DashboardDefaultFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i DashboardDefaultFreeFormLayoutConfigurationArgs) ToDashboardDefaultFreeFormLayoutConfigurationOutput() DashboardDefaultFreeFormLayoutConfigurationOutput {
	return i.ToDashboardDefaultFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultFreeFormLayoutConfigurationArgs) ToDashboardDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultFreeFormLayoutConfigurationOutput)
}

func (i DashboardDefaultFreeFormLayoutConfigurationArgs) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutput() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultFreeFormLayoutConfigurationArgs) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultFreeFormLayoutConfigurationOutput).ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultFreeFormLayoutConfigurationPtrInput is an input type that accepts DashboardDefaultFreeFormLayoutConfigurationArgs, DashboardDefaultFreeFormLayoutConfigurationPtr and DashboardDefaultFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultFreeFormLayoutConfigurationPtrInput` via:
//
//	        DashboardDefaultFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultFreeFormLayoutConfigurationPtrOutput() DashboardDefaultFreeFormLayoutConfigurationPtrOutput
	ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) DashboardDefaultFreeFormLayoutConfigurationPtrOutput
}

type dashboardDefaultFreeFormLayoutConfigurationPtrType DashboardDefaultFreeFormLayoutConfigurationArgs

func DashboardDefaultFreeFormLayoutConfigurationPtr(v *DashboardDefaultFreeFormLayoutConfigurationArgs) DashboardDefaultFreeFormLayoutConfigurationPtrInput {
	return (*dashboardDefaultFreeFormLayoutConfigurationPtrType)(v)
}

func (*dashboardDefaultFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultFreeFormLayoutConfigurationPtrType) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutput() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultFreeFormLayoutConfigurationPtrType) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultFreeFormLayoutConfigurationPtrOutput)
}

type DashboardDefaultFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultFreeFormLayoutConfigurationOutput) ToDashboardDefaultFreeFormLayoutConfigurationOutput() DashboardDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultFreeFormLayoutConfigurationOutput) ToDashboardDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultFreeFormLayoutConfigurationOutput) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutput() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultFreeFormLayoutConfigurationOutput) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultFreeFormLayoutConfiguration) *DashboardDefaultFreeFormLayoutConfiguration {
		return &v
	}).(DashboardDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultFreeFormLayoutConfigurationOutput) CanvasSizeOptions() DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v DashboardDefaultFreeFormLayoutConfiguration) DashboardFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardFreeFormLayoutCanvasSizeOptionsOutput)
}

type DashboardDefaultFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultFreeFormLayoutConfigurationPtrOutput) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutput() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultFreeFormLayoutConfigurationPtrOutput) ToDashboardDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultFreeFormLayoutConfigurationPtrOutput) Elem() DashboardDefaultFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultFreeFormLayoutConfiguration) DashboardDefaultFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultFreeFormLayoutConfiguration
		return ret
	}).(DashboardDefaultFreeFormLayoutConfigurationOutput)
}

func (o DashboardDefaultFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultFreeFormLayoutConfiguration) *DashboardFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardDefaultGridLayoutConfiguration struct {
	CanvasSizeOptions DashboardGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// DashboardDefaultGridLayoutConfigurationInput is an input type that accepts DashboardDefaultGridLayoutConfigurationArgs and DashboardDefaultGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultGridLayoutConfigurationInput` via:
//
//	DashboardDefaultGridLayoutConfigurationArgs{...}
type DashboardDefaultGridLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultGridLayoutConfigurationOutput() DashboardDefaultGridLayoutConfigurationOutput
	ToDashboardDefaultGridLayoutConfigurationOutputWithContext(context.Context) DashboardDefaultGridLayoutConfigurationOutput
}

type DashboardDefaultGridLayoutConfigurationArgs struct {
	CanvasSizeOptions DashboardGridLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (DashboardDefaultGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i DashboardDefaultGridLayoutConfigurationArgs) ToDashboardDefaultGridLayoutConfigurationOutput() DashboardDefaultGridLayoutConfigurationOutput {
	return i.ToDashboardDefaultGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultGridLayoutConfigurationArgs) ToDashboardDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultGridLayoutConfigurationOutput)
}

func (i DashboardDefaultGridLayoutConfigurationArgs) ToDashboardDefaultGridLayoutConfigurationPtrOutput() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultGridLayoutConfigurationArgs) ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultGridLayoutConfigurationOutput).ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultGridLayoutConfigurationPtrInput is an input type that accepts DashboardDefaultGridLayoutConfigurationArgs, DashboardDefaultGridLayoutConfigurationPtr and DashboardDefaultGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultGridLayoutConfigurationPtrInput` via:
//
//	        DashboardDefaultGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultGridLayoutConfigurationPtrOutput() DashboardDefaultGridLayoutConfigurationPtrOutput
	ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(context.Context) DashboardDefaultGridLayoutConfigurationPtrOutput
}

type dashboardDefaultGridLayoutConfigurationPtrType DashboardDefaultGridLayoutConfigurationArgs

func DashboardDefaultGridLayoutConfigurationPtr(v *DashboardDefaultGridLayoutConfigurationArgs) DashboardDefaultGridLayoutConfigurationPtrInput {
	return (*dashboardDefaultGridLayoutConfigurationPtrType)(v)
}

func (*dashboardDefaultGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultGridLayoutConfigurationPtrType) ToDashboardDefaultGridLayoutConfigurationPtrOutput() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultGridLayoutConfigurationPtrType) ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultGridLayoutConfigurationPtrOutput)
}

type DashboardDefaultGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultGridLayoutConfigurationOutput) ToDashboardDefaultGridLayoutConfigurationOutput() DashboardDefaultGridLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultGridLayoutConfigurationOutput) ToDashboardDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultGridLayoutConfigurationOutput) ToDashboardDefaultGridLayoutConfigurationPtrOutput() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o.ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultGridLayoutConfigurationOutput) ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultGridLayoutConfiguration) *DashboardDefaultGridLayoutConfiguration {
		return &v
	}).(DashboardDefaultGridLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultGridLayoutConfigurationOutput) CanvasSizeOptions() DashboardGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v DashboardDefaultGridLayoutConfiguration) DashboardGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardGridLayoutCanvasSizeOptionsOutput)
}

type DashboardDefaultGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultGridLayoutConfigurationPtrOutput) ToDashboardDefaultGridLayoutConfigurationPtrOutput() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultGridLayoutConfigurationPtrOutput) ToDashboardDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultGridLayoutConfigurationPtrOutput) Elem() DashboardDefaultGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultGridLayoutConfiguration) DashboardDefaultGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultGridLayoutConfiguration
		return ret
	}).(DashboardDefaultGridLayoutConfigurationOutput)
}

func (o DashboardDefaultGridLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultGridLayoutConfiguration) *DashboardGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(DashboardGridLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardDefaultInteractiveLayoutConfiguration struct {
	FreeForm *DashboardDefaultFreeFormLayoutConfiguration `pulumi:"freeForm"`
	Grid     *DashboardDefaultGridLayoutConfiguration     `pulumi:"grid"`
}

// DashboardDefaultInteractiveLayoutConfigurationInput is an input type that accepts DashboardDefaultInteractiveLayoutConfigurationArgs and DashboardDefaultInteractiveLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultInteractiveLayoutConfigurationInput` via:
//
//	DashboardDefaultInteractiveLayoutConfigurationArgs{...}
type DashboardDefaultInteractiveLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultInteractiveLayoutConfigurationOutput() DashboardDefaultInteractiveLayoutConfigurationOutput
	ToDashboardDefaultInteractiveLayoutConfigurationOutputWithContext(context.Context) DashboardDefaultInteractiveLayoutConfigurationOutput
}

type DashboardDefaultInteractiveLayoutConfigurationArgs struct {
	FreeForm DashboardDefaultFreeFormLayoutConfigurationPtrInput `pulumi:"freeForm"`
	Grid     DashboardDefaultGridLayoutConfigurationPtrInput     `pulumi:"grid"`
}

func (DashboardDefaultInteractiveLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i DashboardDefaultInteractiveLayoutConfigurationArgs) ToDashboardDefaultInteractiveLayoutConfigurationOutput() DashboardDefaultInteractiveLayoutConfigurationOutput {
	return i.ToDashboardDefaultInteractiveLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultInteractiveLayoutConfigurationArgs) ToDashboardDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultInteractiveLayoutConfigurationOutput)
}

func (i DashboardDefaultInteractiveLayoutConfigurationArgs) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutput() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultInteractiveLayoutConfigurationArgs) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultInteractiveLayoutConfigurationOutput).ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultInteractiveLayoutConfigurationPtrInput is an input type that accepts DashboardDefaultInteractiveLayoutConfigurationArgs, DashboardDefaultInteractiveLayoutConfigurationPtr and DashboardDefaultInteractiveLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultInteractiveLayoutConfigurationPtrInput` via:
//
//	        DashboardDefaultInteractiveLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultInteractiveLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultInteractiveLayoutConfigurationPtrOutput() DashboardDefaultInteractiveLayoutConfigurationPtrOutput
	ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Context) DashboardDefaultInteractiveLayoutConfigurationPtrOutput
}

type dashboardDefaultInteractiveLayoutConfigurationPtrType DashboardDefaultInteractiveLayoutConfigurationArgs

func DashboardDefaultInteractiveLayoutConfigurationPtr(v *DashboardDefaultInteractiveLayoutConfigurationArgs) DashboardDefaultInteractiveLayoutConfigurationPtrInput {
	return (*dashboardDefaultInteractiveLayoutConfigurationPtrType)(v)
}

func (*dashboardDefaultInteractiveLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultInteractiveLayoutConfigurationPtrType) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutput() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultInteractiveLayoutConfigurationPtrType) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultInteractiveLayoutConfigurationPtrOutput)
}

type DashboardDefaultInteractiveLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultInteractiveLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) ToDashboardDefaultInteractiveLayoutConfigurationOutput() DashboardDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) ToDashboardDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutput() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultInteractiveLayoutConfiguration) *DashboardDefaultInteractiveLayoutConfiguration {
		return &v
	}).(DashboardDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) FreeForm() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDefaultInteractiveLayoutConfiguration) *DashboardDefaultFreeFormLayoutConfiguration {
		return v.FreeForm
	}).(DashboardDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultInteractiveLayoutConfigurationOutput) Grid() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDefaultInteractiveLayoutConfiguration) *DashboardDefaultGridLayoutConfiguration {
		return v.Grid
	}).(DashboardDefaultGridLayoutConfigurationPtrOutput)
}

type DashboardDefaultInteractiveLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultInteractiveLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultInteractiveLayoutConfigurationPtrOutput) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutput() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultInteractiveLayoutConfigurationPtrOutput) ToDashboardDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultInteractiveLayoutConfigurationPtrOutput) Elem() DashboardDefaultInteractiveLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultInteractiveLayoutConfiguration) DashboardDefaultInteractiveLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultInteractiveLayoutConfiguration
		return ret
	}).(DashboardDefaultInteractiveLayoutConfigurationOutput)
}

func (o DashboardDefaultInteractiveLayoutConfigurationPtrOutput) FreeForm() DashboardDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultInteractiveLayoutConfiguration) *DashboardDefaultFreeFormLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.FreeForm
	}).(DashboardDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultInteractiveLayoutConfigurationPtrOutput) Grid() DashboardDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultInteractiveLayoutConfiguration) *DashboardDefaultGridLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.Grid
	}).(DashboardDefaultGridLayoutConfigurationPtrOutput)
}

type DashboardDefaultNewSheetConfiguration struct {
	InteractiveLayoutConfiguration *DashboardDefaultInteractiveLayoutConfiguration `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   *DashboardDefaultPaginatedLayoutConfiguration   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               *DashboardSheetContentType                      `pulumi:"sheetContentType"`
}

// DashboardDefaultNewSheetConfigurationInput is an input type that accepts DashboardDefaultNewSheetConfigurationArgs and DashboardDefaultNewSheetConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultNewSheetConfigurationInput` via:
//
//	DashboardDefaultNewSheetConfigurationArgs{...}
type DashboardDefaultNewSheetConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultNewSheetConfigurationOutput() DashboardDefaultNewSheetConfigurationOutput
	ToDashboardDefaultNewSheetConfigurationOutputWithContext(context.Context) DashboardDefaultNewSheetConfigurationOutput
}

type DashboardDefaultNewSheetConfigurationArgs struct {
	InteractiveLayoutConfiguration DashboardDefaultInteractiveLayoutConfigurationPtrInput `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   DashboardDefaultPaginatedLayoutConfigurationPtrInput   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               DashboardSheetContentTypePtrInput                      `pulumi:"sheetContentType"`
}

func (DashboardDefaultNewSheetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i DashboardDefaultNewSheetConfigurationArgs) ToDashboardDefaultNewSheetConfigurationOutput() DashboardDefaultNewSheetConfigurationOutput {
	return i.ToDashboardDefaultNewSheetConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultNewSheetConfigurationArgs) ToDashboardDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultNewSheetConfigurationOutput)
}

func (i DashboardDefaultNewSheetConfigurationArgs) ToDashboardDefaultNewSheetConfigurationPtrOutput() DashboardDefaultNewSheetConfigurationPtrOutput {
	return i.ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultNewSheetConfigurationArgs) ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultNewSheetConfigurationOutput).ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultNewSheetConfigurationPtrInput is an input type that accepts DashboardDefaultNewSheetConfigurationArgs, DashboardDefaultNewSheetConfigurationPtr and DashboardDefaultNewSheetConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultNewSheetConfigurationPtrInput` via:
//
//	        DashboardDefaultNewSheetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultNewSheetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultNewSheetConfigurationPtrOutput() DashboardDefaultNewSheetConfigurationPtrOutput
	ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(context.Context) DashboardDefaultNewSheetConfigurationPtrOutput
}

type dashboardDefaultNewSheetConfigurationPtrType DashboardDefaultNewSheetConfigurationArgs

func DashboardDefaultNewSheetConfigurationPtr(v *DashboardDefaultNewSheetConfigurationArgs) DashboardDefaultNewSheetConfigurationPtrInput {
	return (*dashboardDefaultNewSheetConfigurationPtrType)(v)
}

func (*dashboardDefaultNewSheetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultNewSheetConfigurationPtrType) ToDashboardDefaultNewSheetConfigurationPtrOutput() DashboardDefaultNewSheetConfigurationPtrOutput {
	return i.ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultNewSheetConfigurationPtrType) ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultNewSheetConfigurationPtrOutput)
}

type DashboardDefaultNewSheetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultNewSheetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o DashboardDefaultNewSheetConfigurationOutput) ToDashboardDefaultNewSheetConfigurationOutput() DashboardDefaultNewSheetConfigurationOutput {
	return o
}

func (o DashboardDefaultNewSheetConfigurationOutput) ToDashboardDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationOutput {
	return o
}

func (o DashboardDefaultNewSheetConfigurationOutput) ToDashboardDefaultNewSheetConfigurationPtrOutput() DashboardDefaultNewSheetConfigurationPtrOutput {
	return o.ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultNewSheetConfigurationOutput) ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultNewSheetConfiguration) *DashboardDefaultNewSheetConfiguration {
		return &v
	}).(DashboardDefaultNewSheetConfigurationPtrOutput)
}

func (o DashboardDefaultNewSheetConfigurationOutput) InteractiveLayoutConfiguration() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDefaultNewSheetConfiguration) *DashboardDefaultInteractiveLayoutConfiguration {
		return v.InteractiveLayoutConfiguration
	}).(DashboardDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultNewSheetConfigurationOutput) PaginatedLayoutConfiguration() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDefaultNewSheetConfiguration) *DashboardDefaultPaginatedLayoutConfiguration {
		return v.PaginatedLayoutConfiguration
	}).(DashboardDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultNewSheetConfigurationOutput) SheetContentType() DashboardSheetContentTypePtrOutput {
	return o.ApplyT(func(v DashboardDefaultNewSheetConfiguration) *DashboardSheetContentType { return v.SheetContentType }).(DashboardSheetContentTypePtrOutput)
}

type DashboardDefaultNewSheetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultNewSheetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) ToDashboardDefaultNewSheetConfigurationPtrOutput() DashboardDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) ToDashboardDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) Elem() DashboardDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultNewSheetConfiguration) DashboardDefaultNewSheetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultNewSheetConfiguration
		return ret
	}).(DashboardDefaultNewSheetConfigurationOutput)
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) InteractiveLayoutConfiguration() DashboardDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultNewSheetConfiguration) *DashboardDefaultInteractiveLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.InteractiveLayoutConfiguration
	}).(DashboardDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) PaginatedLayoutConfiguration() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultNewSheetConfiguration) *DashboardDefaultPaginatedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginatedLayoutConfiguration
	}).(DashboardDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultNewSheetConfigurationPtrOutput) SheetContentType() DashboardSheetContentTypePtrOutput {
	return o.ApplyT(func(v *DashboardDefaultNewSheetConfiguration) *DashboardSheetContentType {
		if v == nil {
			return nil
		}
		return v.SheetContentType
	}).(DashboardSheetContentTypePtrOutput)
}

type DashboardDefaultPaginatedLayoutConfiguration struct {
	SectionBased *DashboardDefaultSectionBasedLayoutConfiguration `pulumi:"sectionBased"`
}

// DashboardDefaultPaginatedLayoutConfigurationInput is an input type that accepts DashboardDefaultPaginatedLayoutConfigurationArgs and DashboardDefaultPaginatedLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultPaginatedLayoutConfigurationInput` via:
//
//	DashboardDefaultPaginatedLayoutConfigurationArgs{...}
type DashboardDefaultPaginatedLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultPaginatedLayoutConfigurationOutput() DashboardDefaultPaginatedLayoutConfigurationOutput
	ToDashboardDefaultPaginatedLayoutConfigurationOutputWithContext(context.Context) DashboardDefaultPaginatedLayoutConfigurationOutput
}

type DashboardDefaultPaginatedLayoutConfigurationArgs struct {
	SectionBased DashboardDefaultSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBased"`
}

func (DashboardDefaultPaginatedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i DashboardDefaultPaginatedLayoutConfigurationArgs) ToDashboardDefaultPaginatedLayoutConfigurationOutput() DashboardDefaultPaginatedLayoutConfigurationOutput {
	return i.ToDashboardDefaultPaginatedLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultPaginatedLayoutConfigurationArgs) ToDashboardDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultPaginatedLayoutConfigurationOutput)
}

func (i DashboardDefaultPaginatedLayoutConfigurationArgs) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutput() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultPaginatedLayoutConfigurationArgs) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultPaginatedLayoutConfigurationOutput).ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultPaginatedLayoutConfigurationPtrInput is an input type that accepts DashboardDefaultPaginatedLayoutConfigurationArgs, DashboardDefaultPaginatedLayoutConfigurationPtr and DashboardDefaultPaginatedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultPaginatedLayoutConfigurationPtrInput` via:
//
//	        DashboardDefaultPaginatedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultPaginatedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultPaginatedLayoutConfigurationPtrOutput() DashboardDefaultPaginatedLayoutConfigurationPtrOutput
	ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Context) DashboardDefaultPaginatedLayoutConfigurationPtrOutput
}

type dashboardDefaultPaginatedLayoutConfigurationPtrType DashboardDefaultPaginatedLayoutConfigurationArgs

func DashboardDefaultPaginatedLayoutConfigurationPtr(v *DashboardDefaultPaginatedLayoutConfigurationArgs) DashboardDefaultPaginatedLayoutConfigurationPtrInput {
	return (*dashboardDefaultPaginatedLayoutConfigurationPtrType)(v)
}

func (*dashboardDefaultPaginatedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultPaginatedLayoutConfigurationPtrType) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutput() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultPaginatedLayoutConfigurationPtrType) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultPaginatedLayoutConfigurationPtrOutput)
}

type DashboardDefaultPaginatedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultPaginatedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultPaginatedLayoutConfigurationOutput) ToDashboardDefaultPaginatedLayoutConfigurationOutput() DashboardDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultPaginatedLayoutConfigurationOutput) ToDashboardDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultPaginatedLayoutConfigurationOutput) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutput() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultPaginatedLayoutConfigurationOutput) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultPaginatedLayoutConfiguration) *DashboardDefaultPaginatedLayoutConfiguration {
		return &v
	}).(DashboardDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultPaginatedLayoutConfigurationOutput) SectionBased() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDefaultPaginatedLayoutConfiguration) *DashboardDefaultSectionBasedLayoutConfiguration {
		return v.SectionBased
	}).(DashboardDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type DashboardDefaultPaginatedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultPaginatedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultPaginatedLayoutConfigurationPtrOutput) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutput() DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultPaginatedLayoutConfigurationPtrOutput) ToDashboardDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultPaginatedLayoutConfigurationPtrOutput) Elem() DashboardDefaultPaginatedLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultPaginatedLayoutConfiguration) DashboardDefaultPaginatedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultPaginatedLayoutConfiguration
		return ret
	}).(DashboardDefaultPaginatedLayoutConfigurationOutput)
}

func (o DashboardDefaultPaginatedLayoutConfigurationPtrOutput) SectionBased() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultPaginatedLayoutConfiguration) *DashboardDefaultSectionBasedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.SectionBased
	}).(DashboardDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type DashboardDefaultSectionBasedLayoutConfiguration struct {
	CanvasSizeOptions DashboardSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// DashboardDefaultSectionBasedLayoutConfigurationInput is an input type that accepts DashboardDefaultSectionBasedLayoutConfigurationArgs and DashboardDefaultSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardDefaultSectionBasedLayoutConfigurationInput` via:
//
//	DashboardDefaultSectionBasedLayoutConfigurationArgs{...}
type DashboardDefaultSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardDefaultSectionBasedLayoutConfigurationOutput() DashboardDefaultSectionBasedLayoutConfigurationOutput
	ToDashboardDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Context) DashboardDefaultSectionBasedLayoutConfigurationOutput
}

type DashboardDefaultSectionBasedLayoutConfigurationArgs struct {
	CanvasSizeOptions DashboardSectionBasedLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (DashboardDefaultSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i DashboardDefaultSectionBasedLayoutConfigurationArgs) ToDashboardDefaultSectionBasedLayoutConfigurationOutput() DashboardDefaultSectionBasedLayoutConfigurationOutput {
	return i.ToDashboardDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardDefaultSectionBasedLayoutConfigurationArgs) ToDashboardDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultSectionBasedLayoutConfigurationOutput)
}

func (i DashboardDefaultSectionBasedLayoutConfigurationArgs) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutput() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardDefaultSectionBasedLayoutConfigurationArgs) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultSectionBasedLayoutConfigurationOutput).ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardDefaultSectionBasedLayoutConfigurationPtrInput is an input type that accepts DashboardDefaultSectionBasedLayoutConfigurationArgs, DashboardDefaultSectionBasedLayoutConfigurationPtr and DashboardDefaultSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardDefaultSectionBasedLayoutConfigurationPtrInput` via:
//
//	        DashboardDefaultSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardDefaultSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutput() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput
	ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) DashboardDefaultSectionBasedLayoutConfigurationPtrOutput
}

type dashboardDefaultSectionBasedLayoutConfigurationPtrType DashboardDefaultSectionBasedLayoutConfigurationArgs

func DashboardDefaultSectionBasedLayoutConfigurationPtr(v *DashboardDefaultSectionBasedLayoutConfigurationArgs) DashboardDefaultSectionBasedLayoutConfigurationPtrInput {
	return (*dashboardDefaultSectionBasedLayoutConfigurationPtrType)(v)
}

func (*dashboardDefaultSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardDefaultSectionBasedLayoutConfigurationPtrType) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutput() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardDefaultSectionBasedLayoutConfigurationPtrType) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type DashboardDefaultSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDefaultSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultSectionBasedLayoutConfigurationOutput) ToDashboardDefaultSectionBasedLayoutConfigurationOutput() DashboardDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultSectionBasedLayoutConfigurationOutput) ToDashboardDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o DashboardDefaultSectionBasedLayoutConfigurationOutput) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutput() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardDefaultSectionBasedLayoutConfigurationOutput) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDefaultSectionBasedLayoutConfiguration) *DashboardDefaultSectionBasedLayoutConfiguration {
		return &v
	}).(DashboardDefaultSectionBasedLayoutConfigurationPtrOutput)
}

func (o DashboardDefaultSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v DashboardDefaultSectionBasedLayoutConfiguration) DashboardSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsOutput)
}

type DashboardDefaultSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardDefaultSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardDefaultSectionBasedLayoutConfigurationPtrOutput) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutput() DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultSectionBasedLayoutConfigurationPtrOutput) ToDashboardDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardDefaultSectionBasedLayoutConfigurationPtrOutput) Elem() DashboardDefaultSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardDefaultSectionBasedLayoutConfiguration) DashboardDefaultSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardDefaultSectionBasedLayoutConfiguration
		return ret
	}).(DashboardDefaultSectionBasedLayoutConfigurationOutput)
}

func (o DashboardDefaultSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDefaultSectionBasedLayoutConfiguration) *DashboardSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardDestinationParameterValueConfiguration struct {
	CustomValuesConfiguration *DashboardCustomValuesConfiguration `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     *DashboardSelectAllValueOptions     `pulumi:"selectAllValueOptions"`
	SourceField               *string                             `pulumi:"sourceField"`
	SourceParameterName       *string                             `pulumi:"sourceParameterName"`
}

// DashboardDestinationParameterValueConfigurationInput is an input type that accepts DashboardDestinationParameterValueConfigurationArgs and DashboardDestinationParameterValueConfigurationOutput values.
// You can construct a concrete instance of `DashboardDestinationParameterValueConfigurationInput` via:
//
//	DashboardDestinationParameterValueConfigurationArgs{...}
type DashboardDestinationParameterValueConfigurationInput interface {
	pulumi.Input

	ToDashboardDestinationParameterValueConfigurationOutput() DashboardDestinationParameterValueConfigurationOutput
	ToDashboardDestinationParameterValueConfigurationOutputWithContext(context.Context) DashboardDestinationParameterValueConfigurationOutput
}

type DashboardDestinationParameterValueConfigurationArgs struct {
	CustomValuesConfiguration DashboardCustomValuesConfigurationPtrInput `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     DashboardSelectAllValueOptionsPtrInput     `pulumi:"selectAllValueOptions"`
	SourceField               pulumi.StringPtrInput                      `pulumi:"sourceField"`
	SourceParameterName       pulumi.StringPtrInput                      `pulumi:"sourceParameterName"`
}

func (DashboardDestinationParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDestinationParameterValueConfiguration)(nil)).Elem()
}

func (i DashboardDestinationParameterValueConfigurationArgs) ToDashboardDestinationParameterValueConfigurationOutput() DashboardDestinationParameterValueConfigurationOutput {
	return i.ToDashboardDestinationParameterValueConfigurationOutputWithContext(context.Background())
}

func (i DashboardDestinationParameterValueConfigurationArgs) ToDashboardDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) DashboardDestinationParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDestinationParameterValueConfigurationOutput)
}

type DashboardDestinationParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardDestinationParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDestinationParameterValueConfiguration)(nil)).Elem()
}

func (o DashboardDestinationParameterValueConfigurationOutput) ToDashboardDestinationParameterValueConfigurationOutput() DashboardDestinationParameterValueConfigurationOutput {
	return o
}

func (o DashboardDestinationParameterValueConfigurationOutput) ToDashboardDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) DashboardDestinationParameterValueConfigurationOutput {
	return o
}

func (o DashboardDestinationParameterValueConfigurationOutput) CustomValuesConfiguration() DashboardCustomValuesConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardDestinationParameterValueConfiguration) *DashboardCustomValuesConfiguration {
		return v.CustomValuesConfiguration
	}).(DashboardCustomValuesConfigurationPtrOutput)
}

func (o DashboardDestinationParameterValueConfigurationOutput) SelectAllValueOptions() DashboardSelectAllValueOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDestinationParameterValueConfiguration) *DashboardSelectAllValueOptions {
		return v.SelectAllValueOptions
	}).(DashboardSelectAllValueOptionsPtrOutput)
}

func (o DashboardDestinationParameterValueConfigurationOutput) SourceField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDestinationParameterValueConfiguration) *string { return v.SourceField }).(pulumi.StringPtrOutput)
}

func (o DashboardDestinationParameterValueConfigurationOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardDestinationParameterValueConfiguration) *string { return v.SourceParameterName }).(pulumi.StringPtrOutput)
}

type DashboardDimensionField struct {
	CategoricalDimensionField *DashboardCategoricalDimensionField `pulumi:"categoricalDimensionField"`
	DateDimensionField        *DashboardDateDimensionField        `pulumi:"dateDimensionField"`
	NumericalDimensionField   *DashboardNumericalDimensionField   `pulumi:"numericalDimensionField"`
}

// DashboardDimensionFieldInput is an input type that accepts DashboardDimensionFieldArgs and DashboardDimensionFieldOutput values.
// You can construct a concrete instance of `DashboardDimensionFieldInput` via:
//
//	DashboardDimensionFieldArgs{...}
type DashboardDimensionFieldInput interface {
	pulumi.Input

	ToDashboardDimensionFieldOutput() DashboardDimensionFieldOutput
	ToDashboardDimensionFieldOutputWithContext(context.Context) DashboardDimensionFieldOutput
}

type DashboardDimensionFieldArgs struct {
	CategoricalDimensionField DashboardCategoricalDimensionFieldPtrInput `pulumi:"categoricalDimensionField"`
	DateDimensionField        DashboardDateDimensionFieldPtrInput        `pulumi:"dateDimensionField"`
	NumericalDimensionField   DashboardNumericalDimensionFieldPtrInput   `pulumi:"numericalDimensionField"`
}

func (DashboardDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDimensionField)(nil)).Elem()
}

func (i DashboardDimensionFieldArgs) ToDashboardDimensionFieldOutput() DashboardDimensionFieldOutput {
	return i.ToDashboardDimensionFieldOutputWithContext(context.Background())
}

func (i DashboardDimensionFieldArgs) ToDashboardDimensionFieldOutputWithContext(ctx context.Context) DashboardDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDimensionFieldOutput)
}

func (i DashboardDimensionFieldArgs) ToDashboardDimensionFieldPtrOutput() DashboardDimensionFieldPtrOutput {
	return i.ToDashboardDimensionFieldPtrOutputWithContext(context.Background())
}

func (i DashboardDimensionFieldArgs) ToDashboardDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDimensionFieldOutput).ToDashboardDimensionFieldPtrOutputWithContext(ctx)
}

// DashboardDimensionFieldPtrInput is an input type that accepts DashboardDimensionFieldArgs, DashboardDimensionFieldPtr and DashboardDimensionFieldPtrOutput values.
// You can construct a concrete instance of `DashboardDimensionFieldPtrInput` via:
//
//	        DashboardDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardDimensionFieldPtrInput interface {
	pulumi.Input

	ToDashboardDimensionFieldPtrOutput() DashboardDimensionFieldPtrOutput
	ToDashboardDimensionFieldPtrOutputWithContext(context.Context) DashboardDimensionFieldPtrOutput
}

type dashboardDimensionFieldPtrType DashboardDimensionFieldArgs

func DashboardDimensionFieldPtr(v *DashboardDimensionFieldArgs) DashboardDimensionFieldPtrInput {
	return (*dashboardDimensionFieldPtrType)(v)
}

func (*dashboardDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDimensionField)(nil)).Elem()
}

func (i *dashboardDimensionFieldPtrType) ToDashboardDimensionFieldPtrOutput() DashboardDimensionFieldPtrOutput {
	return i.ToDashboardDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardDimensionFieldPtrType) ToDashboardDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDimensionFieldPtrOutput)
}

// DashboardDimensionFieldArrayInput is an input type that accepts DashboardDimensionFieldArray and DashboardDimensionFieldArrayOutput values.
// You can construct a concrete instance of `DashboardDimensionFieldArrayInput` via:
//
//	DashboardDimensionFieldArray{ DashboardDimensionFieldArgs{...} }
type DashboardDimensionFieldArrayInput interface {
	pulumi.Input

	ToDashboardDimensionFieldArrayOutput() DashboardDimensionFieldArrayOutput
	ToDashboardDimensionFieldArrayOutputWithContext(context.Context) DashboardDimensionFieldArrayOutput
}

type DashboardDimensionFieldArray []DashboardDimensionFieldInput

func (DashboardDimensionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDimensionField)(nil)).Elem()
}

func (i DashboardDimensionFieldArray) ToDashboardDimensionFieldArrayOutput() DashboardDimensionFieldArrayOutput {
	return i.ToDashboardDimensionFieldArrayOutputWithContext(context.Background())
}

func (i DashboardDimensionFieldArray) ToDashboardDimensionFieldArrayOutputWithContext(ctx context.Context) DashboardDimensionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDimensionFieldArrayOutput)
}

type DashboardDimensionFieldOutput struct{ *pulumi.OutputState }

func (DashboardDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDimensionField)(nil)).Elem()
}

func (o DashboardDimensionFieldOutput) ToDashboardDimensionFieldOutput() DashboardDimensionFieldOutput {
	return o
}

func (o DashboardDimensionFieldOutput) ToDashboardDimensionFieldOutputWithContext(ctx context.Context) DashboardDimensionFieldOutput {
	return o
}

func (o DashboardDimensionFieldOutput) ToDashboardDimensionFieldPtrOutput() DashboardDimensionFieldPtrOutput {
	return o.ToDashboardDimensionFieldPtrOutputWithContext(context.Background())
}

func (o DashboardDimensionFieldOutput) ToDashboardDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDimensionField) *DashboardDimensionField {
		return &v
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardDimensionFieldOutput) CategoricalDimensionField() DashboardCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v DashboardDimensionField) *DashboardCategoricalDimensionField {
		return v.CategoricalDimensionField
	}).(DashboardCategoricalDimensionFieldPtrOutput)
}

func (o DashboardDimensionFieldOutput) DateDimensionField() DashboardDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v DashboardDimensionField) *DashboardDateDimensionField { return v.DateDimensionField }).(DashboardDateDimensionFieldPtrOutput)
}

func (o DashboardDimensionFieldOutput) NumericalDimensionField() DashboardNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v DashboardDimensionField) *DashboardNumericalDimensionField { return v.NumericalDimensionField }).(DashboardNumericalDimensionFieldPtrOutput)
}

type DashboardDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDimensionField)(nil)).Elem()
}

func (o DashboardDimensionFieldPtrOutput) ToDashboardDimensionFieldPtrOutput() DashboardDimensionFieldPtrOutput {
	return o
}

func (o DashboardDimensionFieldPtrOutput) ToDashboardDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardDimensionFieldPtrOutput {
	return o
}

func (o DashboardDimensionFieldPtrOutput) Elem() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v *DashboardDimensionField) DashboardDimensionField {
		if v != nil {
			return *v
		}
		var ret DashboardDimensionField
		return ret
	}).(DashboardDimensionFieldOutput)
}

func (o DashboardDimensionFieldPtrOutput) CategoricalDimensionField() DashboardCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardDimensionField) *DashboardCategoricalDimensionField {
		if v == nil {
			return nil
		}
		return v.CategoricalDimensionField
	}).(DashboardCategoricalDimensionFieldPtrOutput)
}

func (o DashboardDimensionFieldPtrOutput) DateDimensionField() DashboardDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardDimensionField) *DashboardDateDimensionField {
		if v == nil {
			return nil
		}
		return v.DateDimensionField
	}).(DashboardDateDimensionFieldPtrOutput)
}

func (o DashboardDimensionFieldPtrOutput) NumericalDimensionField() DashboardNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardDimensionField) *DashboardNumericalDimensionField {
		if v == nil {
			return nil
		}
		return v.NumericalDimensionField
	}).(DashboardNumericalDimensionFieldPtrOutput)
}

type DashboardDimensionFieldArrayOutput struct{ *pulumi.OutputState }

func (DashboardDimensionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDimensionField)(nil)).Elem()
}

func (o DashboardDimensionFieldArrayOutput) ToDashboardDimensionFieldArrayOutput() DashboardDimensionFieldArrayOutput {
	return o
}

func (o DashboardDimensionFieldArrayOutput) ToDashboardDimensionFieldArrayOutputWithContext(ctx context.Context) DashboardDimensionFieldArrayOutput {
	return o
}

func (o DashboardDimensionFieldArrayOutput) Index(i pulumi.IntInput) DashboardDimensionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDimensionField {
		return vs[0].([]DashboardDimensionField)[vs[1].(int)]
	}).(DashboardDimensionFieldOutput)
}

type DashboardDonutCenterOptions struct {
	LabelVisibility *DashboardVisibility `pulumi:"labelVisibility"`
}

// DashboardDonutCenterOptionsInput is an input type that accepts DashboardDonutCenterOptionsArgs and DashboardDonutCenterOptionsOutput values.
// You can construct a concrete instance of `DashboardDonutCenterOptionsInput` via:
//
//	DashboardDonutCenterOptionsArgs{...}
type DashboardDonutCenterOptionsInput interface {
	pulumi.Input

	ToDashboardDonutCenterOptionsOutput() DashboardDonutCenterOptionsOutput
	ToDashboardDonutCenterOptionsOutputWithContext(context.Context) DashboardDonutCenterOptionsOutput
}

type DashboardDonutCenterOptionsArgs struct {
	LabelVisibility DashboardVisibilityPtrInput `pulumi:"labelVisibility"`
}

func (DashboardDonutCenterOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDonutCenterOptions)(nil)).Elem()
}

func (i DashboardDonutCenterOptionsArgs) ToDashboardDonutCenterOptionsOutput() DashboardDonutCenterOptionsOutput {
	return i.ToDashboardDonutCenterOptionsOutputWithContext(context.Background())
}

func (i DashboardDonutCenterOptionsArgs) ToDashboardDonutCenterOptionsOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutCenterOptionsOutput)
}

func (i DashboardDonutCenterOptionsArgs) ToDashboardDonutCenterOptionsPtrOutput() DashboardDonutCenterOptionsPtrOutput {
	return i.ToDashboardDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDonutCenterOptionsArgs) ToDashboardDonutCenterOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutCenterOptionsOutput).ToDashboardDonutCenterOptionsPtrOutputWithContext(ctx)
}

// DashboardDonutCenterOptionsPtrInput is an input type that accepts DashboardDonutCenterOptionsArgs, DashboardDonutCenterOptionsPtr and DashboardDonutCenterOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDonutCenterOptionsPtrInput` via:
//
//	        DashboardDonutCenterOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDonutCenterOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDonutCenterOptionsPtrOutput() DashboardDonutCenterOptionsPtrOutput
	ToDashboardDonutCenterOptionsPtrOutputWithContext(context.Context) DashboardDonutCenterOptionsPtrOutput
}

type dashboardDonutCenterOptionsPtrType DashboardDonutCenterOptionsArgs

func DashboardDonutCenterOptionsPtr(v *DashboardDonutCenterOptionsArgs) DashboardDonutCenterOptionsPtrInput {
	return (*dashboardDonutCenterOptionsPtrType)(v)
}

func (*dashboardDonutCenterOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDonutCenterOptions)(nil)).Elem()
}

func (i *dashboardDonutCenterOptionsPtrType) ToDashboardDonutCenterOptionsPtrOutput() DashboardDonutCenterOptionsPtrOutput {
	return i.ToDashboardDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDonutCenterOptionsPtrType) ToDashboardDonutCenterOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutCenterOptionsPtrOutput)
}

type DashboardDonutCenterOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDonutCenterOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDonutCenterOptions)(nil)).Elem()
}

func (o DashboardDonutCenterOptionsOutput) ToDashboardDonutCenterOptionsOutput() DashboardDonutCenterOptionsOutput {
	return o
}

func (o DashboardDonutCenterOptionsOutput) ToDashboardDonutCenterOptionsOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsOutput {
	return o
}

func (o DashboardDonutCenterOptionsOutput) ToDashboardDonutCenterOptionsPtrOutput() DashboardDonutCenterOptionsPtrOutput {
	return o.ToDashboardDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDonutCenterOptionsOutput) ToDashboardDonutCenterOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDonutCenterOptions) *DashboardDonutCenterOptions {
		return &v
	}).(DashboardDonutCenterOptionsPtrOutput)
}

func (o DashboardDonutCenterOptionsOutput) LabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardDonutCenterOptions) *DashboardVisibility { return v.LabelVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardDonutCenterOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDonutCenterOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDonutCenterOptions)(nil)).Elem()
}

func (o DashboardDonutCenterOptionsPtrOutput) ToDashboardDonutCenterOptionsPtrOutput() DashboardDonutCenterOptionsPtrOutput {
	return o
}

func (o DashboardDonutCenterOptionsPtrOutput) ToDashboardDonutCenterOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutCenterOptionsPtrOutput {
	return o
}

func (o DashboardDonutCenterOptionsPtrOutput) Elem() DashboardDonutCenterOptionsOutput {
	return o.ApplyT(func(v *DashboardDonutCenterOptions) DashboardDonutCenterOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDonutCenterOptions
		return ret
	}).(DashboardDonutCenterOptionsOutput)
}

func (o DashboardDonutCenterOptionsPtrOutput) LabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardDonutCenterOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.LabelVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardDonutOptions struct {
	ArcOptions         *DashboardArcOptions         `pulumi:"arcOptions"`
	DonutCenterOptions *DashboardDonutCenterOptions `pulumi:"donutCenterOptions"`
}

// DashboardDonutOptionsInput is an input type that accepts DashboardDonutOptionsArgs and DashboardDonutOptionsOutput values.
// You can construct a concrete instance of `DashboardDonutOptionsInput` via:
//
//	DashboardDonutOptionsArgs{...}
type DashboardDonutOptionsInput interface {
	pulumi.Input

	ToDashboardDonutOptionsOutput() DashboardDonutOptionsOutput
	ToDashboardDonutOptionsOutputWithContext(context.Context) DashboardDonutOptionsOutput
}

type DashboardDonutOptionsArgs struct {
	ArcOptions         DashboardArcOptionsPtrInput         `pulumi:"arcOptions"`
	DonutCenterOptions DashboardDonutCenterOptionsPtrInput `pulumi:"donutCenterOptions"`
}

func (DashboardDonutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDonutOptions)(nil)).Elem()
}

func (i DashboardDonutOptionsArgs) ToDashboardDonutOptionsOutput() DashboardDonutOptionsOutput {
	return i.ToDashboardDonutOptionsOutputWithContext(context.Background())
}

func (i DashboardDonutOptionsArgs) ToDashboardDonutOptionsOutputWithContext(ctx context.Context) DashboardDonutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutOptionsOutput)
}

func (i DashboardDonutOptionsArgs) ToDashboardDonutOptionsPtrOutput() DashboardDonutOptionsPtrOutput {
	return i.ToDashboardDonutOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDonutOptionsArgs) ToDashboardDonutOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutOptionsOutput).ToDashboardDonutOptionsPtrOutputWithContext(ctx)
}

// DashboardDonutOptionsPtrInput is an input type that accepts DashboardDonutOptionsArgs, DashboardDonutOptionsPtr and DashboardDonutOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDonutOptionsPtrInput` via:
//
//	        DashboardDonutOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDonutOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDonutOptionsPtrOutput() DashboardDonutOptionsPtrOutput
	ToDashboardDonutOptionsPtrOutputWithContext(context.Context) DashboardDonutOptionsPtrOutput
}

type dashboardDonutOptionsPtrType DashboardDonutOptionsArgs

func DashboardDonutOptionsPtr(v *DashboardDonutOptionsArgs) DashboardDonutOptionsPtrInput {
	return (*dashboardDonutOptionsPtrType)(v)
}

func (*dashboardDonutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDonutOptions)(nil)).Elem()
}

func (i *dashboardDonutOptionsPtrType) ToDashboardDonutOptionsPtrOutput() DashboardDonutOptionsPtrOutput {
	return i.ToDashboardDonutOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDonutOptionsPtrType) ToDashboardDonutOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDonutOptionsPtrOutput)
}

type DashboardDonutOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDonutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDonutOptions)(nil)).Elem()
}

func (o DashboardDonutOptionsOutput) ToDashboardDonutOptionsOutput() DashboardDonutOptionsOutput {
	return o
}

func (o DashboardDonutOptionsOutput) ToDashboardDonutOptionsOutputWithContext(ctx context.Context) DashboardDonutOptionsOutput {
	return o
}

func (o DashboardDonutOptionsOutput) ToDashboardDonutOptionsPtrOutput() DashboardDonutOptionsPtrOutput {
	return o.ToDashboardDonutOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDonutOptionsOutput) ToDashboardDonutOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDonutOptions) *DashboardDonutOptions {
		return &v
	}).(DashboardDonutOptionsPtrOutput)
}

func (o DashboardDonutOptionsOutput) ArcOptions() DashboardArcOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDonutOptions) *DashboardArcOptions { return v.ArcOptions }).(DashboardArcOptionsPtrOutput)
}

func (o DashboardDonutOptionsOutput) DonutCenterOptions() DashboardDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDonutOptions) *DashboardDonutCenterOptions { return v.DonutCenterOptions }).(DashboardDonutCenterOptionsPtrOutput)
}

type DashboardDonutOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDonutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDonutOptions)(nil)).Elem()
}

func (o DashboardDonutOptionsPtrOutput) ToDashboardDonutOptionsPtrOutput() DashboardDonutOptionsPtrOutput {
	return o
}

func (o DashboardDonutOptionsPtrOutput) ToDashboardDonutOptionsPtrOutputWithContext(ctx context.Context) DashboardDonutOptionsPtrOutput {
	return o
}

func (o DashboardDonutOptionsPtrOutput) Elem() DashboardDonutOptionsOutput {
	return o.ApplyT(func(v *DashboardDonutOptions) DashboardDonutOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDonutOptions
		return ret
	}).(DashboardDonutOptionsOutput)
}

func (o DashboardDonutOptionsPtrOutput) ArcOptions() DashboardArcOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDonutOptions) *DashboardArcOptions {
		if v == nil {
			return nil
		}
		return v.ArcOptions
	}).(DashboardArcOptionsPtrOutput)
}

func (o DashboardDonutOptionsPtrOutput) DonutCenterOptions() DashboardDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDonutOptions) *DashboardDonutCenterOptions {
		if v == nil {
			return nil
		}
		return v.DonutCenterOptions
	}).(DashboardDonutCenterOptionsPtrOutput)
}

type DashboardDrillDownFilter struct {
	CategoryFilter        *DashboardCategoryDrillDownFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *DashboardNumericEqualityDrillDownFilter `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       *DashboardTimeRangeDrillDownFilter       `pulumi:"timeRangeFilter"`
}

// DashboardDrillDownFilterInput is an input type that accepts DashboardDrillDownFilterArgs and DashboardDrillDownFilterOutput values.
// You can construct a concrete instance of `DashboardDrillDownFilterInput` via:
//
//	DashboardDrillDownFilterArgs{...}
type DashboardDrillDownFilterInput interface {
	pulumi.Input

	ToDashboardDrillDownFilterOutput() DashboardDrillDownFilterOutput
	ToDashboardDrillDownFilterOutputWithContext(context.Context) DashboardDrillDownFilterOutput
}

type DashboardDrillDownFilterArgs struct {
	CategoryFilter        DashboardCategoryDrillDownFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter DashboardNumericEqualityDrillDownFilterPtrInput `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       DashboardTimeRangeDrillDownFilterPtrInput       `pulumi:"timeRangeFilter"`
}

func (DashboardDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDrillDownFilter)(nil)).Elem()
}

func (i DashboardDrillDownFilterArgs) ToDashboardDrillDownFilterOutput() DashboardDrillDownFilterOutput {
	return i.ToDashboardDrillDownFilterOutputWithContext(context.Background())
}

func (i DashboardDrillDownFilterArgs) ToDashboardDrillDownFilterOutputWithContext(ctx context.Context) DashboardDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDrillDownFilterOutput)
}

// DashboardDrillDownFilterArrayInput is an input type that accepts DashboardDrillDownFilterArray and DashboardDrillDownFilterArrayOutput values.
// You can construct a concrete instance of `DashboardDrillDownFilterArrayInput` via:
//
//	DashboardDrillDownFilterArray{ DashboardDrillDownFilterArgs{...} }
type DashboardDrillDownFilterArrayInput interface {
	pulumi.Input

	ToDashboardDrillDownFilterArrayOutput() DashboardDrillDownFilterArrayOutput
	ToDashboardDrillDownFilterArrayOutputWithContext(context.Context) DashboardDrillDownFilterArrayOutput
}

type DashboardDrillDownFilterArray []DashboardDrillDownFilterInput

func (DashboardDrillDownFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDrillDownFilter)(nil)).Elem()
}

func (i DashboardDrillDownFilterArray) ToDashboardDrillDownFilterArrayOutput() DashboardDrillDownFilterArrayOutput {
	return i.ToDashboardDrillDownFilterArrayOutputWithContext(context.Background())
}

func (i DashboardDrillDownFilterArray) ToDashboardDrillDownFilterArrayOutputWithContext(ctx context.Context) DashboardDrillDownFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDrillDownFilterArrayOutput)
}

type DashboardDrillDownFilterOutput struct{ *pulumi.OutputState }

func (DashboardDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDrillDownFilter)(nil)).Elem()
}

func (o DashboardDrillDownFilterOutput) ToDashboardDrillDownFilterOutput() DashboardDrillDownFilterOutput {
	return o
}

func (o DashboardDrillDownFilterOutput) ToDashboardDrillDownFilterOutputWithContext(ctx context.Context) DashboardDrillDownFilterOutput {
	return o
}

func (o DashboardDrillDownFilterOutput) CategoryFilter() DashboardCategoryDrillDownFilterPtrOutput {
	return o.ApplyT(func(v DashboardDrillDownFilter) *DashboardCategoryDrillDownFilter { return v.CategoryFilter }).(DashboardCategoryDrillDownFilterPtrOutput)
}

func (o DashboardDrillDownFilterOutput) NumericEqualityFilter() DashboardNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyT(func(v DashboardDrillDownFilter) *DashboardNumericEqualityDrillDownFilter {
		return v.NumericEqualityFilter
	}).(DashboardNumericEqualityDrillDownFilterPtrOutput)
}

func (o DashboardDrillDownFilterOutput) TimeRangeFilter() DashboardTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyT(func(v DashboardDrillDownFilter) *DashboardTimeRangeDrillDownFilter { return v.TimeRangeFilter }).(DashboardTimeRangeDrillDownFilterPtrOutput)
}

type DashboardDrillDownFilterArrayOutput struct{ *pulumi.OutputState }

func (DashboardDrillDownFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardDrillDownFilter)(nil)).Elem()
}

func (o DashboardDrillDownFilterArrayOutput) ToDashboardDrillDownFilterArrayOutput() DashboardDrillDownFilterArrayOutput {
	return o
}

func (o DashboardDrillDownFilterArrayOutput) ToDashboardDrillDownFilterArrayOutputWithContext(ctx context.Context) DashboardDrillDownFilterArrayOutput {
	return o
}

func (o DashboardDrillDownFilterArrayOutput) Index(i pulumi.IntInput) DashboardDrillDownFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardDrillDownFilter {
		return vs[0].([]DashboardDrillDownFilter)[vs[1].(int)]
	}).(DashboardDrillDownFilterOutput)
}

type DashboardDropDownControlDisplayOptions struct {
	SelectAllOptions *DashboardListControlSelectAllOptions `pulumi:"selectAllOptions"`
	TitleOptions     *DashboardLabelOptions                `pulumi:"titleOptions"`
}

// DashboardDropDownControlDisplayOptionsInput is an input type that accepts DashboardDropDownControlDisplayOptionsArgs and DashboardDropDownControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardDropDownControlDisplayOptionsInput` via:
//
//	DashboardDropDownControlDisplayOptionsArgs{...}
type DashboardDropDownControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardDropDownControlDisplayOptionsOutput() DashboardDropDownControlDisplayOptionsOutput
	ToDashboardDropDownControlDisplayOptionsOutputWithContext(context.Context) DashboardDropDownControlDisplayOptionsOutput
}

type DashboardDropDownControlDisplayOptionsArgs struct {
	SelectAllOptions DashboardListControlSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	TitleOptions     DashboardLabelOptionsPtrInput                `pulumi:"titleOptions"`
}

func (DashboardDropDownControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDropDownControlDisplayOptions)(nil)).Elem()
}

func (i DashboardDropDownControlDisplayOptionsArgs) ToDashboardDropDownControlDisplayOptionsOutput() DashboardDropDownControlDisplayOptionsOutput {
	return i.ToDashboardDropDownControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardDropDownControlDisplayOptionsArgs) ToDashboardDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDropDownControlDisplayOptionsOutput)
}

func (i DashboardDropDownControlDisplayOptionsArgs) ToDashboardDropDownControlDisplayOptionsPtrOutput() DashboardDropDownControlDisplayOptionsPtrOutput {
	return i.ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardDropDownControlDisplayOptionsArgs) ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDropDownControlDisplayOptionsOutput).ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardDropDownControlDisplayOptionsPtrInput is an input type that accepts DashboardDropDownControlDisplayOptionsArgs, DashboardDropDownControlDisplayOptionsPtr and DashboardDropDownControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardDropDownControlDisplayOptionsPtrInput` via:
//
//	        DashboardDropDownControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardDropDownControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardDropDownControlDisplayOptionsPtrOutput() DashboardDropDownControlDisplayOptionsPtrOutput
	ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardDropDownControlDisplayOptionsPtrOutput
}

type dashboardDropDownControlDisplayOptionsPtrType DashboardDropDownControlDisplayOptionsArgs

func DashboardDropDownControlDisplayOptionsPtr(v *DashboardDropDownControlDisplayOptionsArgs) DashboardDropDownControlDisplayOptionsPtrInput {
	return (*dashboardDropDownControlDisplayOptionsPtrType)(v)
}

func (*dashboardDropDownControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDropDownControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardDropDownControlDisplayOptionsPtrType) ToDashboardDropDownControlDisplayOptionsPtrOutput() DashboardDropDownControlDisplayOptionsPtrOutput {
	return i.ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardDropDownControlDisplayOptionsPtrType) ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

type DashboardDropDownControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardDropDownControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDropDownControlDisplayOptions)(nil)).Elem()
}

func (o DashboardDropDownControlDisplayOptionsOutput) ToDashboardDropDownControlDisplayOptionsOutput() DashboardDropDownControlDisplayOptionsOutput {
	return o
}

func (o DashboardDropDownControlDisplayOptionsOutput) ToDashboardDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsOutput {
	return o
}

func (o DashboardDropDownControlDisplayOptionsOutput) ToDashboardDropDownControlDisplayOptionsPtrOutput() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardDropDownControlDisplayOptionsOutput) ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDropDownControlDisplayOptions) *DashboardDropDownControlDisplayOptions {
		return &v
	}).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

func (o DashboardDropDownControlDisplayOptionsOutput) SelectAllOptions() DashboardListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDropDownControlDisplayOptions) *DashboardListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardListControlSelectAllOptionsPtrOutput)
}

func (o DashboardDropDownControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardDropDownControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardDropDownControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardDropDownControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDropDownControlDisplayOptions)(nil)).Elem()
}

func (o DashboardDropDownControlDisplayOptionsPtrOutput) ToDashboardDropDownControlDisplayOptionsPtrOutput() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardDropDownControlDisplayOptionsPtrOutput) ToDashboardDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardDropDownControlDisplayOptionsPtrOutput) Elem() DashboardDropDownControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardDropDownControlDisplayOptions) DashboardDropDownControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardDropDownControlDisplayOptions
		return ret
	}).(DashboardDropDownControlDisplayOptionsOutput)
}

func (o DashboardDropDownControlDisplayOptionsPtrOutput) SelectAllOptions() DashboardListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDropDownControlDisplayOptions) *DashboardListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardListControlSelectAllOptionsPtrOutput)
}

func (o DashboardDropDownControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardDropDownControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardDynamicDefaultValue struct {
	DefaultValueColumn DashboardColumnIdentifier  `pulumi:"defaultValueColumn"`
	GroupNameColumn    *DashboardColumnIdentifier `pulumi:"groupNameColumn"`
	UserNameColumn     *DashboardColumnIdentifier `pulumi:"userNameColumn"`
}

// DashboardDynamicDefaultValueInput is an input type that accepts DashboardDynamicDefaultValueArgs and DashboardDynamicDefaultValueOutput values.
// You can construct a concrete instance of `DashboardDynamicDefaultValueInput` via:
//
//	DashboardDynamicDefaultValueArgs{...}
type DashboardDynamicDefaultValueInput interface {
	pulumi.Input

	ToDashboardDynamicDefaultValueOutput() DashboardDynamicDefaultValueOutput
	ToDashboardDynamicDefaultValueOutputWithContext(context.Context) DashboardDynamicDefaultValueOutput
}

type DashboardDynamicDefaultValueArgs struct {
	DefaultValueColumn DashboardColumnIdentifierInput    `pulumi:"defaultValueColumn"`
	GroupNameColumn    DashboardColumnIdentifierPtrInput `pulumi:"groupNameColumn"`
	UserNameColumn     DashboardColumnIdentifierPtrInput `pulumi:"userNameColumn"`
}

func (DashboardDynamicDefaultValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDynamicDefaultValue)(nil)).Elem()
}

func (i DashboardDynamicDefaultValueArgs) ToDashboardDynamicDefaultValueOutput() DashboardDynamicDefaultValueOutput {
	return i.ToDashboardDynamicDefaultValueOutputWithContext(context.Background())
}

func (i DashboardDynamicDefaultValueArgs) ToDashboardDynamicDefaultValueOutputWithContext(ctx context.Context) DashboardDynamicDefaultValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDynamicDefaultValueOutput)
}

func (i DashboardDynamicDefaultValueArgs) ToDashboardDynamicDefaultValuePtrOutput() DashboardDynamicDefaultValuePtrOutput {
	return i.ToDashboardDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i DashboardDynamicDefaultValueArgs) ToDashboardDynamicDefaultValuePtrOutputWithContext(ctx context.Context) DashboardDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDynamicDefaultValueOutput).ToDashboardDynamicDefaultValuePtrOutputWithContext(ctx)
}

// DashboardDynamicDefaultValuePtrInput is an input type that accepts DashboardDynamicDefaultValueArgs, DashboardDynamicDefaultValuePtr and DashboardDynamicDefaultValuePtrOutput values.
// You can construct a concrete instance of `DashboardDynamicDefaultValuePtrInput` via:
//
//	        DashboardDynamicDefaultValueArgs{...}
//
//	or:
//
//	        nil
type DashboardDynamicDefaultValuePtrInput interface {
	pulumi.Input

	ToDashboardDynamicDefaultValuePtrOutput() DashboardDynamicDefaultValuePtrOutput
	ToDashboardDynamicDefaultValuePtrOutputWithContext(context.Context) DashboardDynamicDefaultValuePtrOutput
}

type dashboardDynamicDefaultValuePtrType DashboardDynamicDefaultValueArgs

func DashboardDynamicDefaultValuePtr(v *DashboardDynamicDefaultValueArgs) DashboardDynamicDefaultValuePtrInput {
	return (*dashboardDynamicDefaultValuePtrType)(v)
}

func (*dashboardDynamicDefaultValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDynamicDefaultValue)(nil)).Elem()
}

func (i *dashboardDynamicDefaultValuePtrType) ToDashboardDynamicDefaultValuePtrOutput() DashboardDynamicDefaultValuePtrOutput {
	return i.ToDashboardDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i *dashboardDynamicDefaultValuePtrType) ToDashboardDynamicDefaultValuePtrOutputWithContext(ctx context.Context) DashboardDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardDynamicDefaultValuePtrOutput)
}

type DashboardDynamicDefaultValueOutput struct{ *pulumi.OutputState }

func (DashboardDynamicDefaultValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardDynamicDefaultValue)(nil)).Elem()
}

func (o DashboardDynamicDefaultValueOutput) ToDashboardDynamicDefaultValueOutput() DashboardDynamicDefaultValueOutput {
	return o
}

func (o DashboardDynamicDefaultValueOutput) ToDashboardDynamicDefaultValueOutputWithContext(ctx context.Context) DashboardDynamicDefaultValueOutput {
	return o
}

func (o DashboardDynamicDefaultValueOutput) ToDashboardDynamicDefaultValuePtrOutput() DashboardDynamicDefaultValuePtrOutput {
	return o.ToDashboardDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (o DashboardDynamicDefaultValueOutput) ToDashboardDynamicDefaultValuePtrOutputWithContext(ctx context.Context) DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardDynamicDefaultValue) *DashboardDynamicDefaultValue {
		return &v
	}).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardDynamicDefaultValueOutput) DefaultValueColumn() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardDynamicDefaultValue) DashboardColumnIdentifier { return v.DefaultValueColumn }).(DashboardColumnIdentifierOutput)
}

func (o DashboardDynamicDefaultValueOutput) GroupNameColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v DashboardDynamicDefaultValue) *DashboardColumnIdentifier { return v.GroupNameColumn }).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardDynamicDefaultValueOutput) UserNameColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v DashboardDynamicDefaultValue) *DashboardColumnIdentifier { return v.UserNameColumn }).(DashboardColumnIdentifierPtrOutput)
}

type DashboardDynamicDefaultValuePtrOutput struct{ *pulumi.OutputState }

func (DashboardDynamicDefaultValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardDynamicDefaultValue)(nil)).Elem()
}

func (o DashboardDynamicDefaultValuePtrOutput) ToDashboardDynamicDefaultValuePtrOutput() DashboardDynamicDefaultValuePtrOutput {
	return o
}

func (o DashboardDynamicDefaultValuePtrOutput) ToDashboardDynamicDefaultValuePtrOutputWithContext(ctx context.Context) DashboardDynamicDefaultValuePtrOutput {
	return o
}

func (o DashboardDynamicDefaultValuePtrOutput) Elem() DashboardDynamicDefaultValueOutput {
	return o.ApplyT(func(v *DashboardDynamicDefaultValue) DashboardDynamicDefaultValue {
		if v != nil {
			return *v
		}
		var ret DashboardDynamicDefaultValue
		return ret
	}).(DashboardDynamicDefaultValueOutput)
}

func (o DashboardDynamicDefaultValuePtrOutput) DefaultValueColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardDynamicDefaultValue) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.DefaultValueColumn
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardDynamicDefaultValuePtrOutput) GroupNameColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardDynamicDefaultValue) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.GroupNameColumn
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardDynamicDefaultValuePtrOutput) UserNameColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardDynamicDefaultValue) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.UserNameColumn
	}).(DashboardColumnIdentifierPtrOutput)
}

type DashboardEmptyVisual struct {
	Actions           []DashboardVisualCustomAction `pulumi:"actions"`
	DataSetIdentifier string                        `pulumi:"dataSetIdentifier"`
	VisualId          string                        `pulumi:"visualId"`
}

// DashboardEmptyVisualInput is an input type that accepts DashboardEmptyVisualArgs and DashboardEmptyVisualOutput values.
// You can construct a concrete instance of `DashboardEmptyVisualInput` via:
//
//	DashboardEmptyVisualArgs{...}
type DashboardEmptyVisualInput interface {
	pulumi.Input

	ToDashboardEmptyVisualOutput() DashboardEmptyVisualOutput
	ToDashboardEmptyVisualOutputWithContext(context.Context) DashboardEmptyVisualOutput
}

type DashboardEmptyVisualArgs struct {
	Actions           DashboardVisualCustomActionArrayInput `pulumi:"actions"`
	DataSetIdentifier pulumi.StringInput                    `pulumi:"dataSetIdentifier"`
	VisualId          pulumi.StringInput                    `pulumi:"visualId"`
}

func (DashboardEmptyVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardEmptyVisual)(nil)).Elem()
}

func (i DashboardEmptyVisualArgs) ToDashboardEmptyVisualOutput() DashboardEmptyVisualOutput {
	return i.ToDashboardEmptyVisualOutputWithContext(context.Background())
}

func (i DashboardEmptyVisualArgs) ToDashboardEmptyVisualOutputWithContext(ctx context.Context) DashboardEmptyVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardEmptyVisualOutput)
}

func (i DashboardEmptyVisualArgs) ToDashboardEmptyVisualPtrOutput() DashboardEmptyVisualPtrOutput {
	return i.ToDashboardEmptyVisualPtrOutputWithContext(context.Background())
}

func (i DashboardEmptyVisualArgs) ToDashboardEmptyVisualPtrOutputWithContext(ctx context.Context) DashboardEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardEmptyVisualOutput).ToDashboardEmptyVisualPtrOutputWithContext(ctx)
}

// DashboardEmptyVisualPtrInput is an input type that accepts DashboardEmptyVisualArgs, DashboardEmptyVisualPtr and DashboardEmptyVisualPtrOutput values.
// You can construct a concrete instance of `DashboardEmptyVisualPtrInput` via:
//
//	        DashboardEmptyVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardEmptyVisualPtrInput interface {
	pulumi.Input

	ToDashboardEmptyVisualPtrOutput() DashboardEmptyVisualPtrOutput
	ToDashboardEmptyVisualPtrOutputWithContext(context.Context) DashboardEmptyVisualPtrOutput
}

type dashboardEmptyVisualPtrType DashboardEmptyVisualArgs

func DashboardEmptyVisualPtr(v *DashboardEmptyVisualArgs) DashboardEmptyVisualPtrInput {
	return (*dashboardEmptyVisualPtrType)(v)
}

func (*dashboardEmptyVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardEmptyVisual)(nil)).Elem()
}

func (i *dashboardEmptyVisualPtrType) ToDashboardEmptyVisualPtrOutput() DashboardEmptyVisualPtrOutput {
	return i.ToDashboardEmptyVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardEmptyVisualPtrType) ToDashboardEmptyVisualPtrOutputWithContext(ctx context.Context) DashboardEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardEmptyVisualPtrOutput)
}

type DashboardEmptyVisualOutput struct{ *pulumi.OutputState }

func (DashboardEmptyVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardEmptyVisual)(nil)).Elem()
}

func (o DashboardEmptyVisualOutput) ToDashboardEmptyVisualOutput() DashboardEmptyVisualOutput {
	return o
}

func (o DashboardEmptyVisualOutput) ToDashboardEmptyVisualOutputWithContext(ctx context.Context) DashboardEmptyVisualOutput {
	return o
}

func (o DashboardEmptyVisualOutput) ToDashboardEmptyVisualPtrOutput() DashboardEmptyVisualPtrOutput {
	return o.ToDashboardEmptyVisualPtrOutputWithContext(context.Background())
}

func (o DashboardEmptyVisualOutput) ToDashboardEmptyVisualPtrOutputWithContext(ctx context.Context) DashboardEmptyVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardEmptyVisual) *DashboardEmptyVisual {
		return &v
	}).(DashboardEmptyVisualPtrOutput)
}

func (o DashboardEmptyVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardEmptyVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardEmptyVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardEmptyVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o DashboardEmptyVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardEmptyVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardEmptyVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardEmptyVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardEmptyVisual)(nil)).Elem()
}

func (o DashboardEmptyVisualPtrOutput) ToDashboardEmptyVisualPtrOutput() DashboardEmptyVisualPtrOutput {
	return o
}

func (o DashboardEmptyVisualPtrOutput) ToDashboardEmptyVisualPtrOutputWithContext(ctx context.Context) DashboardEmptyVisualPtrOutput {
	return o
}

func (o DashboardEmptyVisualPtrOutput) Elem() DashboardEmptyVisualOutput {
	return o.ApplyT(func(v *DashboardEmptyVisual) DashboardEmptyVisual {
		if v != nil {
			return *v
		}
		var ret DashboardEmptyVisual
		return ret
	}).(DashboardEmptyVisualOutput)
}

func (o DashboardEmptyVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardEmptyVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardEmptyVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o DashboardEmptyVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardEntity struct {
	Path *string `pulumi:"path"`
}

type DashboardEntityOutput struct{ *pulumi.OutputState }

func (DashboardEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardEntity)(nil)).Elem()
}

func (o DashboardEntityOutput) ToDashboardEntityOutput() DashboardEntityOutput {
	return o
}

func (o DashboardEntityOutput) ToDashboardEntityOutputWithContext(ctx context.Context) DashboardEntityOutput {
	return o
}

func (o DashboardEntityOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardEntity) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DashboardEntityArrayOutput struct{ *pulumi.OutputState }

func (DashboardEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardEntity)(nil)).Elem()
}

func (o DashboardEntityArrayOutput) ToDashboardEntityArrayOutput() DashboardEntityArrayOutput {
	return o
}

func (o DashboardEntityArrayOutput) ToDashboardEntityArrayOutputWithContext(ctx context.Context) DashboardEntityArrayOutput {
	return o
}

func (o DashboardEntityArrayOutput) Index(i pulumi.IntInput) DashboardEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardEntity {
		return vs[0].([]DashboardEntity)[vs[1].(int)]
	}).(DashboardEntityOutput)
}

type DashboardError struct {
	Message          *string             `pulumi:"message"`
	Type             *DashboardErrorType `pulumi:"type"`
	ViolatedEntities []DashboardEntity   `pulumi:"violatedEntities"`
}

type DashboardErrorOutput struct{ *pulumi.OutputState }

func (DashboardErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardError)(nil)).Elem()
}

func (o DashboardErrorOutput) ToDashboardErrorOutput() DashboardErrorOutput {
	return o
}

func (o DashboardErrorOutput) ToDashboardErrorOutputWithContext(ctx context.Context) DashboardErrorOutput {
	return o
}

func (o DashboardErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o DashboardErrorOutput) Type() DashboardErrorTypePtrOutput {
	return o.ApplyT(func(v DashboardError) *DashboardErrorType { return v.Type }).(DashboardErrorTypePtrOutput)
}

func (o DashboardErrorOutput) ViolatedEntities() DashboardEntityArrayOutput {
	return o.ApplyT(func(v DashboardError) []DashboardEntity { return v.ViolatedEntities }).(DashboardEntityArrayOutput)
}

type DashboardErrorArrayOutput struct{ *pulumi.OutputState }

func (DashboardErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardError)(nil)).Elem()
}

func (o DashboardErrorArrayOutput) ToDashboardErrorArrayOutput() DashboardErrorArrayOutput {
	return o
}

func (o DashboardErrorArrayOutput) ToDashboardErrorArrayOutputWithContext(ctx context.Context) DashboardErrorArrayOutput {
	return o
}

func (o DashboardErrorArrayOutput) Index(i pulumi.IntInput) DashboardErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardError {
		return vs[0].([]DashboardError)[vs[1].(int)]
	}).(DashboardErrorOutput)
}

type DashboardExcludePeriodConfiguration struct {
	Amount      float64                  `pulumi:"amount"`
	Granularity DashboardTimeGranularity `pulumi:"granularity"`
	Status      *DashboardWidgetStatus   `pulumi:"status"`
}

// DashboardExcludePeriodConfigurationInput is an input type that accepts DashboardExcludePeriodConfigurationArgs and DashboardExcludePeriodConfigurationOutput values.
// You can construct a concrete instance of `DashboardExcludePeriodConfigurationInput` via:
//
//	DashboardExcludePeriodConfigurationArgs{...}
type DashboardExcludePeriodConfigurationInput interface {
	pulumi.Input

	ToDashboardExcludePeriodConfigurationOutput() DashboardExcludePeriodConfigurationOutput
	ToDashboardExcludePeriodConfigurationOutputWithContext(context.Context) DashboardExcludePeriodConfigurationOutput
}

type DashboardExcludePeriodConfigurationArgs struct {
	Amount      pulumi.Float64Input           `pulumi:"amount"`
	Granularity DashboardTimeGranularityInput `pulumi:"granularity"`
	Status      DashboardWidgetStatusPtrInput `pulumi:"status"`
}

func (DashboardExcludePeriodConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExcludePeriodConfiguration)(nil)).Elem()
}

func (i DashboardExcludePeriodConfigurationArgs) ToDashboardExcludePeriodConfigurationOutput() DashboardExcludePeriodConfigurationOutput {
	return i.ToDashboardExcludePeriodConfigurationOutputWithContext(context.Background())
}

func (i DashboardExcludePeriodConfigurationArgs) ToDashboardExcludePeriodConfigurationOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExcludePeriodConfigurationOutput)
}

func (i DashboardExcludePeriodConfigurationArgs) ToDashboardExcludePeriodConfigurationPtrOutput() DashboardExcludePeriodConfigurationPtrOutput {
	return i.ToDashboardExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardExcludePeriodConfigurationArgs) ToDashboardExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExcludePeriodConfigurationOutput).ToDashboardExcludePeriodConfigurationPtrOutputWithContext(ctx)
}

// DashboardExcludePeriodConfigurationPtrInput is an input type that accepts DashboardExcludePeriodConfigurationArgs, DashboardExcludePeriodConfigurationPtr and DashboardExcludePeriodConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardExcludePeriodConfigurationPtrInput` via:
//
//	        DashboardExcludePeriodConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardExcludePeriodConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardExcludePeriodConfigurationPtrOutput() DashboardExcludePeriodConfigurationPtrOutput
	ToDashboardExcludePeriodConfigurationPtrOutputWithContext(context.Context) DashboardExcludePeriodConfigurationPtrOutput
}

type dashboardExcludePeriodConfigurationPtrType DashboardExcludePeriodConfigurationArgs

func DashboardExcludePeriodConfigurationPtr(v *DashboardExcludePeriodConfigurationArgs) DashboardExcludePeriodConfigurationPtrInput {
	return (*dashboardExcludePeriodConfigurationPtrType)(v)
}

func (*dashboardExcludePeriodConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExcludePeriodConfiguration)(nil)).Elem()
}

func (i *dashboardExcludePeriodConfigurationPtrType) ToDashboardExcludePeriodConfigurationPtrOutput() DashboardExcludePeriodConfigurationPtrOutput {
	return i.ToDashboardExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardExcludePeriodConfigurationPtrType) ToDashboardExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExcludePeriodConfigurationPtrOutput)
}

type DashboardExcludePeriodConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardExcludePeriodConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExcludePeriodConfiguration)(nil)).Elem()
}

func (o DashboardExcludePeriodConfigurationOutput) ToDashboardExcludePeriodConfigurationOutput() DashboardExcludePeriodConfigurationOutput {
	return o
}

func (o DashboardExcludePeriodConfigurationOutput) ToDashboardExcludePeriodConfigurationOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationOutput {
	return o
}

func (o DashboardExcludePeriodConfigurationOutput) ToDashboardExcludePeriodConfigurationPtrOutput() DashboardExcludePeriodConfigurationPtrOutput {
	return o.ToDashboardExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardExcludePeriodConfigurationOutput) ToDashboardExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExcludePeriodConfiguration) *DashboardExcludePeriodConfiguration {
		return &v
	}).(DashboardExcludePeriodConfigurationPtrOutput)
}

func (o DashboardExcludePeriodConfigurationOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardExcludePeriodConfiguration) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o DashboardExcludePeriodConfigurationOutput) Granularity() DashboardTimeGranularityOutput {
	return o.ApplyT(func(v DashboardExcludePeriodConfiguration) DashboardTimeGranularity { return v.Granularity }).(DashboardTimeGranularityOutput)
}

func (o DashboardExcludePeriodConfigurationOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v DashboardExcludePeriodConfiguration) *DashboardWidgetStatus { return v.Status }).(DashboardWidgetStatusPtrOutput)
}

type DashboardExcludePeriodConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardExcludePeriodConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExcludePeriodConfiguration)(nil)).Elem()
}

func (o DashboardExcludePeriodConfigurationPtrOutput) ToDashboardExcludePeriodConfigurationPtrOutput() DashboardExcludePeriodConfigurationPtrOutput {
	return o
}

func (o DashboardExcludePeriodConfigurationPtrOutput) ToDashboardExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) DashboardExcludePeriodConfigurationPtrOutput {
	return o
}

func (o DashboardExcludePeriodConfigurationPtrOutput) Elem() DashboardExcludePeriodConfigurationOutput {
	return o.ApplyT(func(v *DashboardExcludePeriodConfiguration) DashboardExcludePeriodConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardExcludePeriodConfiguration
		return ret
	}).(DashboardExcludePeriodConfigurationOutput)
}

func (o DashboardExcludePeriodConfigurationPtrOutput) Amount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardExcludePeriodConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardExcludePeriodConfigurationPtrOutput) Granularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardExcludePeriodConfiguration) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardExcludePeriodConfigurationPtrOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v *DashboardExcludePeriodConfiguration) *DashboardWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DashboardWidgetStatusPtrOutput)
}

type DashboardExplicitHierarchy struct {
	Columns          []DashboardColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []DashboardDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                      `pulumi:"hierarchyId"`
}

// DashboardExplicitHierarchyInput is an input type that accepts DashboardExplicitHierarchyArgs and DashboardExplicitHierarchyOutput values.
// You can construct a concrete instance of `DashboardExplicitHierarchyInput` via:
//
//	DashboardExplicitHierarchyArgs{...}
type DashboardExplicitHierarchyInput interface {
	pulumi.Input

	ToDashboardExplicitHierarchyOutput() DashboardExplicitHierarchyOutput
	ToDashboardExplicitHierarchyOutputWithContext(context.Context) DashboardExplicitHierarchyOutput
}

type DashboardExplicitHierarchyArgs struct {
	Columns          DashboardColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters DashboardDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                  `pulumi:"hierarchyId"`
}

func (DashboardExplicitHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExplicitHierarchy)(nil)).Elem()
}

func (i DashboardExplicitHierarchyArgs) ToDashboardExplicitHierarchyOutput() DashboardExplicitHierarchyOutput {
	return i.ToDashboardExplicitHierarchyOutputWithContext(context.Background())
}

func (i DashboardExplicitHierarchyArgs) ToDashboardExplicitHierarchyOutputWithContext(ctx context.Context) DashboardExplicitHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExplicitHierarchyOutput)
}

func (i DashboardExplicitHierarchyArgs) ToDashboardExplicitHierarchyPtrOutput() DashboardExplicitHierarchyPtrOutput {
	return i.ToDashboardExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i DashboardExplicitHierarchyArgs) ToDashboardExplicitHierarchyPtrOutputWithContext(ctx context.Context) DashboardExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExplicitHierarchyOutput).ToDashboardExplicitHierarchyPtrOutputWithContext(ctx)
}

// DashboardExplicitHierarchyPtrInput is an input type that accepts DashboardExplicitHierarchyArgs, DashboardExplicitHierarchyPtr and DashboardExplicitHierarchyPtrOutput values.
// You can construct a concrete instance of `DashboardExplicitHierarchyPtrInput` via:
//
//	        DashboardExplicitHierarchyArgs{...}
//
//	or:
//
//	        nil
type DashboardExplicitHierarchyPtrInput interface {
	pulumi.Input

	ToDashboardExplicitHierarchyPtrOutput() DashboardExplicitHierarchyPtrOutput
	ToDashboardExplicitHierarchyPtrOutputWithContext(context.Context) DashboardExplicitHierarchyPtrOutput
}

type dashboardExplicitHierarchyPtrType DashboardExplicitHierarchyArgs

func DashboardExplicitHierarchyPtr(v *DashboardExplicitHierarchyArgs) DashboardExplicitHierarchyPtrInput {
	return (*dashboardExplicitHierarchyPtrType)(v)
}

func (*dashboardExplicitHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExplicitHierarchy)(nil)).Elem()
}

func (i *dashboardExplicitHierarchyPtrType) ToDashboardExplicitHierarchyPtrOutput() DashboardExplicitHierarchyPtrOutput {
	return i.ToDashboardExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i *dashboardExplicitHierarchyPtrType) ToDashboardExplicitHierarchyPtrOutputWithContext(ctx context.Context) DashboardExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExplicitHierarchyPtrOutput)
}

type DashboardExplicitHierarchyOutput struct{ *pulumi.OutputState }

func (DashboardExplicitHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExplicitHierarchy)(nil)).Elem()
}

func (o DashboardExplicitHierarchyOutput) ToDashboardExplicitHierarchyOutput() DashboardExplicitHierarchyOutput {
	return o
}

func (o DashboardExplicitHierarchyOutput) ToDashboardExplicitHierarchyOutputWithContext(ctx context.Context) DashboardExplicitHierarchyOutput {
	return o
}

func (o DashboardExplicitHierarchyOutput) ToDashboardExplicitHierarchyPtrOutput() DashboardExplicitHierarchyPtrOutput {
	return o.ToDashboardExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (o DashboardExplicitHierarchyOutput) ToDashboardExplicitHierarchyPtrOutputWithContext(ctx context.Context) DashboardExplicitHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExplicitHierarchy) *DashboardExplicitHierarchy {
		return &v
	}).(DashboardExplicitHierarchyPtrOutput)
}

func (o DashboardExplicitHierarchyOutput) Columns() DashboardColumnIdentifierArrayOutput {
	return o.ApplyT(func(v DashboardExplicitHierarchy) []DashboardColumnIdentifier { return v.Columns }).(DashboardColumnIdentifierArrayOutput)
}

func (o DashboardExplicitHierarchyOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v DashboardExplicitHierarchy) []DashboardDrillDownFilter { return v.DrillDownFilters }).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardExplicitHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardExplicitHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type DashboardExplicitHierarchyPtrOutput struct{ *pulumi.OutputState }

func (DashboardExplicitHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExplicitHierarchy)(nil)).Elem()
}

func (o DashboardExplicitHierarchyPtrOutput) ToDashboardExplicitHierarchyPtrOutput() DashboardExplicitHierarchyPtrOutput {
	return o
}

func (o DashboardExplicitHierarchyPtrOutput) ToDashboardExplicitHierarchyPtrOutputWithContext(ctx context.Context) DashboardExplicitHierarchyPtrOutput {
	return o
}

func (o DashboardExplicitHierarchyPtrOutput) Elem() DashboardExplicitHierarchyOutput {
	return o.ApplyT(func(v *DashboardExplicitHierarchy) DashboardExplicitHierarchy {
		if v != nil {
			return *v
		}
		var ret DashboardExplicitHierarchy
		return ret
	}).(DashboardExplicitHierarchyOutput)
}

func (o DashboardExplicitHierarchyPtrOutput) Columns() DashboardColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *DashboardExplicitHierarchy) []DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DashboardColumnIdentifierArrayOutput)
}

func (o DashboardExplicitHierarchyPtrOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *DashboardExplicitHierarchy) []DashboardDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardExplicitHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardExplicitHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardExportHiddenFieldsOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardExportHiddenFieldsOptionInput is an input type that accepts DashboardExportHiddenFieldsOptionArgs and DashboardExportHiddenFieldsOptionOutput values.
// You can construct a concrete instance of `DashboardExportHiddenFieldsOptionInput` via:
//
//	DashboardExportHiddenFieldsOptionArgs{...}
type DashboardExportHiddenFieldsOptionInput interface {
	pulumi.Input

	ToDashboardExportHiddenFieldsOptionOutput() DashboardExportHiddenFieldsOptionOutput
	ToDashboardExportHiddenFieldsOptionOutputWithContext(context.Context) DashboardExportHiddenFieldsOptionOutput
}

type DashboardExportHiddenFieldsOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardExportHiddenFieldsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportHiddenFieldsOption)(nil)).Elem()
}

func (i DashboardExportHiddenFieldsOptionArgs) ToDashboardExportHiddenFieldsOptionOutput() DashboardExportHiddenFieldsOptionOutput {
	return i.ToDashboardExportHiddenFieldsOptionOutputWithContext(context.Background())
}

func (i DashboardExportHiddenFieldsOptionArgs) ToDashboardExportHiddenFieldsOptionOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportHiddenFieldsOptionOutput)
}

func (i DashboardExportHiddenFieldsOptionArgs) ToDashboardExportHiddenFieldsOptionPtrOutput() DashboardExportHiddenFieldsOptionPtrOutput {
	return i.ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (i DashboardExportHiddenFieldsOptionArgs) ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportHiddenFieldsOptionOutput).ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(ctx)
}

// DashboardExportHiddenFieldsOptionPtrInput is an input type that accepts DashboardExportHiddenFieldsOptionArgs, DashboardExportHiddenFieldsOptionPtr and DashboardExportHiddenFieldsOptionPtrOutput values.
// You can construct a concrete instance of `DashboardExportHiddenFieldsOptionPtrInput` via:
//
//	        DashboardExportHiddenFieldsOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardExportHiddenFieldsOptionPtrInput interface {
	pulumi.Input

	ToDashboardExportHiddenFieldsOptionPtrOutput() DashboardExportHiddenFieldsOptionPtrOutput
	ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(context.Context) DashboardExportHiddenFieldsOptionPtrOutput
}

type dashboardExportHiddenFieldsOptionPtrType DashboardExportHiddenFieldsOptionArgs

func DashboardExportHiddenFieldsOptionPtr(v *DashboardExportHiddenFieldsOptionArgs) DashboardExportHiddenFieldsOptionPtrInput {
	return (*dashboardExportHiddenFieldsOptionPtrType)(v)
}

func (*dashboardExportHiddenFieldsOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportHiddenFieldsOption)(nil)).Elem()
}

func (i *dashboardExportHiddenFieldsOptionPtrType) ToDashboardExportHiddenFieldsOptionPtrOutput() DashboardExportHiddenFieldsOptionPtrOutput {
	return i.ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardExportHiddenFieldsOptionPtrType) ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportHiddenFieldsOptionPtrOutput)
}

type DashboardExportHiddenFieldsOptionOutput struct{ *pulumi.OutputState }

func (DashboardExportHiddenFieldsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportHiddenFieldsOption)(nil)).Elem()
}

func (o DashboardExportHiddenFieldsOptionOutput) ToDashboardExportHiddenFieldsOptionOutput() DashboardExportHiddenFieldsOptionOutput {
	return o
}

func (o DashboardExportHiddenFieldsOptionOutput) ToDashboardExportHiddenFieldsOptionOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionOutput {
	return o
}

func (o DashboardExportHiddenFieldsOptionOutput) ToDashboardExportHiddenFieldsOptionPtrOutput() DashboardExportHiddenFieldsOptionPtrOutput {
	return o.ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (o DashboardExportHiddenFieldsOptionOutput) ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExportHiddenFieldsOption) *DashboardExportHiddenFieldsOption {
		return &v
	}).(DashboardExportHiddenFieldsOptionPtrOutput)
}

func (o DashboardExportHiddenFieldsOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardExportHiddenFieldsOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardExportHiddenFieldsOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardExportHiddenFieldsOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportHiddenFieldsOption)(nil)).Elem()
}

func (o DashboardExportHiddenFieldsOptionPtrOutput) ToDashboardExportHiddenFieldsOptionPtrOutput() DashboardExportHiddenFieldsOptionPtrOutput {
	return o
}

func (o DashboardExportHiddenFieldsOptionPtrOutput) ToDashboardExportHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportHiddenFieldsOptionPtrOutput {
	return o
}

func (o DashboardExportHiddenFieldsOptionPtrOutput) Elem() DashboardExportHiddenFieldsOptionOutput {
	return o.ApplyT(func(v *DashboardExportHiddenFieldsOption) DashboardExportHiddenFieldsOption {
		if v != nil {
			return *v
		}
		var ret DashboardExportHiddenFieldsOption
		return ret
	}).(DashboardExportHiddenFieldsOptionOutput)
}

func (o DashboardExportHiddenFieldsOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardExportHiddenFieldsOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardExportToCSVOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardExportToCSVOptionInput is an input type that accepts DashboardExportToCSVOptionArgs and DashboardExportToCSVOptionOutput values.
// You can construct a concrete instance of `DashboardExportToCSVOptionInput` via:
//
//	DashboardExportToCSVOptionArgs{...}
type DashboardExportToCSVOptionInput interface {
	pulumi.Input

	ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput
	ToDashboardExportToCSVOptionOutputWithContext(context.Context) DashboardExportToCSVOptionOutput
}

type DashboardExportToCSVOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardExportToCSVOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportToCSVOption)(nil)).Elem()
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput {
	return i.ToDashboardExportToCSVOptionOutputWithContext(context.Background())
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionOutputWithContext(ctx context.Context) DashboardExportToCSVOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionOutput)
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return i.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (i DashboardExportToCSVOptionArgs) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionOutput).ToDashboardExportToCSVOptionPtrOutputWithContext(ctx)
}

// DashboardExportToCSVOptionPtrInput is an input type that accepts DashboardExportToCSVOptionArgs, DashboardExportToCSVOptionPtr and DashboardExportToCSVOptionPtrOutput values.
// You can construct a concrete instance of `DashboardExportToCSVOptionPtrInput` via:
//
//	        DashboardExportToCSVOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardExportToCSVOptionPtrInput interface {
	pulumi.Input

	ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput
	ToDashboardExportToCSVOptionPtrOutputWithContext(context.Context) DashboardExportToCSVOptionPtrOutput
}

type dashboardExportToCSVOptionPtrType DashboardExportToCSVOptionArgs

func DashboardExportToCSVOptionPtr(v *DashboardExportToCSVOptionArgs) DashboardExportToCSVOptionPtrInput {
	return (*dashboardExportToCSVOptionPtrType)(v)
}

func (*dashboardExportToCSVOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportToCSVOption)(nil)).Elem()
}

func (i *dashboardExportToCSVOptionPtrType) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return i.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardExportToCSVOptionPtrType) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportToCSVOptionPtrOutput)
}

type DashboardExportToCSVOptionOutput struct{ *pulumi.OutputState }

func (DashboardExportToCSVOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportToCSVOption)(nil)).Elem()
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionOutput() DashboardExportToCSVOptionOutput {
	return o
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionOutputWithContext(ctx context.Context) DashboardExportToCSVOptionOutput {
	return o
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return o.ToDashboardExportToCSVOptionPtrOutputWithContext(context.Background())
}

func (o DashboardExportToCSVOptionOutput) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExportToCSVOption) *DashboardExportToCSVOption {
		return &v
	}).(DashboardExportToCSVOptionPtrOutput)
}

func (o DashboardExportToCSVOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardExportToCSVOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardExportToCSVOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardExportToCSVOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportToCSVOption)(nil)).Elem()
}

func (o DashboardExportToCSVOptionPtrOutput) ToDashboardExportToCSVOptionPtrOutput() DashboardExportToCSVOptionPtrOutput {
	return o
}

func (o DashboardExportToCSVOptionPtrOutput) ToDashboardExportToCSVOptionPtrOutputWithContext(ctx context.Context) DashboardExportToCSVOptionPtrOutput {
	return o
}

func (o DashboardExportToCSVOptionPtrOutput) Elem() DashboardExportToCSVOptionOutput {
	return o.ApplyT(func(v *DashboardExportToCSVOption) DashboardExportToCSVOption {
		if v != nil {
			return *v
		}
		var ret DashboardExportToCSVOption
		return ret
	}).(DashboardExportToCSVOptionOutput)
}

func (o DashboardExportToCSVOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardExportToCSVOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardExportWithHiddenFieldsOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardExportWithHiddenFieldsOptionInput is an input type that accepts DashboardExportWithHiddenFieldsOptionArgs and DashboardExportWithHiddenFieldsOptionOutput values.
// You can construct a concrete instance of `DashboardExportWithHiddenFieldsOptionInput` via:
//
//	DashboardExportWithHiddenFieldsOptionArgs{...}
type DashboardExportWithHiddenFieldsOptionInput interface {
	pulumi.Input

	ToDashboardExportWithHiddenFieldsOptionOutput() DashboardExportWithHiddenFieldsOptionOutput
	ToDashboardExportWithHiddenFieldsOptionOutputWithContext(context.Context) DashboardExportWithHiddenFieldsOptionOutput
}

type DashboardExportWithHiddenFieldsOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardExportWithHiddenFieldsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportWithHiddenFieldsOption)(nil)).Elem()
}

func (i DashboardExportWithHiddenFieldsOptionArgs) ToDashboardExportWithHiddenFieldsOptionOutput() DashboardExportWithHiddenFieldsOptionOutput {
	return i.ToDashboardExportWithHiddenFieldsOptionOutputWithContext(context.Background())
}

func (i DashboardExportWithHiddenFieldsOptionArgs) ToDashboardExportWithHiddenFieldsOptionOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportWithHiddenFieldsOptionOutput)
}

func (i DashboardExportWithHiddenFieldsOptionArgs) ToDashboardExportWithHiddenFieldsOptionPtrOutput() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return i.ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (i DashboardExportWithHiddenFieldsOptionArgs) ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportWithHiddenFieldsOptionOutput).ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(ctx)
}

// DashboardExportWithHiddenFieldsOptionPtrInput is an input type that accepts DashboardExportWithHiddenFieldsOptionArgs, DashboardExportWithHiddenFieldsOptionPtr and DashboardExportWithHiddenFieldsOptionPtrOutput values.
// You can construct a concrete instance of `DashboardExportWithHiddenFieldsOptionPtrInput` via:
//
//	        DashboardExportWithHiddenFieldsOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardExportWithHiddenFieldsOptionPtrInput interface {
	pulumi.Input

	ToDashboardExportWithHiddenFieldsOptionPtrOutput() DashboardExportWithHiddenFieldsOptionPtrOutput
	ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(context.Context) DashboardExportWithHiddenFieldsOptionPtrOutput
}

type dashboardExportWithHiddenFieldsOptionPtrType DashboardExportWithHiddenFieldsOptionArgs

func DashboardExportWithHiddenFieldsOptionPtr(v *DashboardExportWithHiddenFieldsOptionArgs) DashboardExportWithHiddenFieldsOptionPtrInput {
	return (*dashboardExportWithHiddenFieldsOptionPtrType)(v)
}

func (*dashboardExportWithHiddenFieldsOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportWithHiddenFieldsOption)(nil)).Elem()
}

func (i *dashboardExportWithHiddenFieldsOptionPtrType) ToDashboardExportWithHiddenFieldsOptionPtrOutput() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return i.ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardExportWithHiddenFieldsOptionPtrType) ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardExportWithHiddenFieldsOptionPtrOutput)
}

type DashboardExportWithHiddenFieldsOptionOutput struct{ *pulumi.OutputState }

func (DashboardExportWithHiddenFieldsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardExportWithHiddenFieldsOption)(nil)).Elem()
}

func (o DashboardExportWithHiddenFieldsOptionOutput) ToDashboardExportWithHiddenFieldsOptionOutput() DashboardExportWithHiddenFieldsOptionOutput {
	return o
}

func (o DashboardExportWithHiddenFieldsOptionOutput) ToDashboardExportWithHiddenFieldsOptionOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionOutput {
	return o
}

func (o DashboardExportWithHiddenFieldsOptionOutput) ToDashboardExportWithHiddenFieldsOptionPtrOutput() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o.ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(context.Background())
}

func (o DashboardExportWithHiddenFieldsOptionOutput) ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardExportWithHiddenFieldsOption) *DashboardExportWithHiddenFieldsOption {
		return &v
	}).(DashboardExportWithHiddenFieldsOptionPtrOutput)
}

func (o DashboardExportWithHiddenFieldsOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardExportWithHiddenFieldsOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardExportWithHiddenFieldsOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardExportWithHiddenFieldsOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardExportWithHiddenFieldsOption)(nil)).Elem()
}

func (o DashboardExportWithHiddenFieldsOptionPtrOutput) ToDashboardExportWithHiddenFieldsOptionPtrOutput() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o
}

func (o DashboardExportWithHiddenFieldsOptionPtrOutput) ToDashboardExportWithHiddenFieldsOptionPtrOutputWithContext(ctx context.Context) DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o
}

func (o DashboardExportWithHiddenFieldsOptionPtrOutput) Elem() DashboardExportWithHiddenFieldsOptionOutput {
	return o.ApplyT(func(v *DashboardExportWithHiddenFieldsOption) DashboardExportWithHiddenFieldsOption {
		if v != nil {
			return *v
		}
		var ret DashboardExportWithHiddenFieldsOption
		return ret
	}).(DashboardExportWithHiddenFieldsOptionOutput)
}

func (o DashboardExportWithHiddenFieldsOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardExportWithHiddenFieldsOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardFieldBasedTooltip struct {
	AggregationVisibility *DashboardVisibility       `pulumi:"aggregationVisibility"`
	TooltipFields         []DashboardTooltipItem     `pulumi:"tooltipFields"`
	TooltipTitleType      *DashboardTooltipTitleType `pulumi:"tooltipTitleType"`
}

// DashboardFieldBasedTooltipInput is an input type that accepts DashboardFieldBasedTooltipArgs and DashboardFieldBasedTooltipOutput values.
// You can construct a concrete instance of `DashboardFieldBasedTooltipInput` via:
//
//	DashboardFieldBasedTooltipArgs{...}
type DashboardFieldBasedTooltipInput interface {
	pulumi.Input

	ToDashboardFieldBasedTooltipOutput() DashboardFieldBasedTooltipOutput
	ToDashboardFieldBasedTooltipOutputWithContext(context.Context) DashboardFieldBasedTooltipOutput
}

type DashboardFieldBasedTooltipArgs struct {
	AggregationVisibility DashboardVisibilityPtrInput       `pulumi:"aggregationVisibility"`
	TooltipFields         DashboardTooltipItemArrayInput    `pulumi:"tooltipFields"`
	TooltipTitleType      DashboardTooltipTitleTypePtrInput `pulumi:"tooltipTitleType"`
}

func (DashboardFieldBasedTooltipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldBasedTooltip)(nil)).Elem()
}

func (i DashboardFieldBasedTooltipArgs) ToDashboardFieldBasedTooltipOutput() DashboardFieldBasedTooltipOutput {
	return i.ToDashboardFieldBasedTooltipOutputWithContext(context.Background())
}

func (i DashboardFieldBasedTooltipArgs) ToDashboardFieldBasedTooltipOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldBasedTooltipOutput)
}

func (i DashboardFieldBasedTooltipArgs) ToDashboardFieldBasedTooltipPtrOutput() DashboardFieldBasedTooltipPtrOutput {
	return i.ToDashboardFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i DashboardFieldBasedTooltipArgs) ToDashboardFieldBasedTooltipPtrOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldBasedTooltipOutput).ToDashboardFieldBasedTooltipPtrOutputWithContext(ctx)
}

// DashboardFieldBasedTooltipPtrInput is an input type that accepts DashboardFieldBasedTooltipArgs, DashboardFieldBasedTooltipPtr and DashboardFieldBasedTooltipPtrOutput values.
// You can construct a concrete instance of `DashboardFieldBasedTooltipPtrInput` via:
//
//	        DashboardFieldBasedTooltipArgs{...}
//
//	or:
//
//	        nil
type DashboardFieldBasedTooltipPtrInput interface {
	pulumi.Input

	ToDashboardFieldBasedTooltipPtrOutput() DashboardFieldBasedTooltipPtrOutput
	ToDashboardFieldBasedTooltipPtrOutputWithContext(context.Context) DashboardFieldBasedTooltipPtrOutput
}

type dashboardFieldBasedTooltipPtrType DashboardFieldBasedTooltipArgs

func DashboardFieldBasedTooltipPtr(v *DashboardFieldBasedTooltipArgs) DashboardFieldBasedTooltipPtrInput {
	return (*dashboardFieldBasedTooltipPtrType)(v)
}

func (*dashboardFieldBasedTooltipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldBasedTooltip)(nil)).Elem()
}

func (i *dashboardFieldBasedTooltipPtrType) ToDashboardFieldBasedTooltipPtrOutput() DashboardFieldBasedTooltipPtrOutput {
	return i.ToDashboardFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i *dashboardFieldBasedTooltipPtrType) ToDashboardFieldBasedTooltipPtrOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldBasedTooltipPtrOutput)
}

type DashboardFieldBasedTooltipOutput struct{ *pulumi.OutputState }

func (DashboardFieldBasedTooltipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldBasedTooltip)(nil)).Elem()
}

func (o DashboardFieldBasedTooltipOutput) ToDashboardFieldBasedTooltipOutput() DashboardFieldBasedTooltipOutput {
	return o
}

func (o DashboardFieldBasedTooltipOutput) ToDashboardFieldBasedTooltipOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipOutput {
	return o
}

func (o DashboardFieldBasedTooltipOutput) ToDashboardFieldBasedTooltipPtrOutput() DashboardFieldBasedTooltipPtrOutput {
	return o.ToDashboardFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (o DashboardFieldBasedTooltipOutput) ToDashboardFieldBasedTooltipPtrOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFieldBasedTooltip) *DashboardFieldBasedTooltip {
		return &v
	}).(DashboardFieldBasedTooltipPtrOutput)
}

func (o DashboardFieldBasedTooltipOutput) AggregationVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFieldBasedTooltip) *DashboardVisibility { return v.AggregationVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardFieldBasedTooltipOutput) TooltipFields() DashboardTooltipItemArrayOutput {
	return o.ApplyT(func(v DashboardFieldBasedTooltip) []DashboardTooltipItem { return v.TooltipFields }).(DashboardTooltipItemArrayOutput)
}

func (o DashboardFieldBasedTooltipOutput) TooltipTitleType() DashboardTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v DashboardFieldBasedTooltip) *DashboardTooltipTitleType { return v.TooltipTitleType }).(DashboardTooltipTitleTypePtrOutput)
}

type DashboardFieldBasedTooltipPtrOutput struct{ *pulumi.OutputState }

func (DashboardFieldBasedTooltipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldBasedTooltip)(nil)).Elem()
}

func (o DashboardFieldBasedTooltipPtrOutput) ToDashboardFieldBasedTooltipPtrOutput() DashboardFieldBasedTooltipPtrOutput {
	return o
}

func (o DashboardFieldBasedTooltipPtrOutput) ToDashboardFieldBasedTooltipPtrOutputWithContext(ctx context.Context) DashboardFieldBasedTooltipPtrOutput {
	return o
}

func (o DashboardFieldBasedTooltipPtrOutput) Elem() DashboardFieldBasedTooltipOutput {
	return o.ApplyT(func(v *DashboardFieldBasedTooltip) DashboardFieldBasedTooltip {
		if v != nil {
			return *v
		}
		var ret DashboardFieldBasedTooltip
		return ret
	}).(DashboardFieldBasedTooltipOutput)
}

func (o DashboardFieldBasedTooltipPtrOutput) AggregationVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFieldBasedTooltip) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.AggregationVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardFieldBasedTooltipPtrOutput) TooltipFields() DashboardTooltipItemArrayOutput {
	return o.ApplyT(func(v *DashboardFieldBasedTooltip) []DashboardTooltipItem {
		if v == nil {
			return nil
		}
		return v.TooltipFields
	}).(DashboardTooltipItemArrayOutput)
}

func (o DashboardFieldBasedTooltipPtrOutput) TooltipTitleType() DashboardTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v *DashboardFieldBasedTooltip) *DashboardTooltipTitleType {
		if v == nil {
			return nil
		}
		return v.TooltipTitleType
	}).(DashboardTooltipTitleTypePtrOutput)
}

type DashboardFieldLabelType struct {
	FieldId    *string              `pulumi:"fieldId"`
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardFieldLabelTypeInput is an input type that accepts DashboardFieldLabelTypeArgs and DashboardFieldLabelTypeOutput values.
// You can construct a concrete instance of `DashboardFieldLabelTypeInput` via:
//
//	DashboardFieldLabelTypeArgs{...}
type DashboardFieldLabelTypeInput interface {
	pulumi.Input

	ToDashboardFieldLabelTypeOutput() DashboardFieldLabelTypeOutput
	ToDashboardFieldLabelTypeOutputWithContext(context.Context) DashboardFieldLabelTypeOutput
}

type DashboardFieldLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput       `pulumi:"fieldId"`
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardFieldLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldLabelType)(nil)).Elem()
}

func (i DashboardFieldLabelTypeArgs) ToDashboardFieldLabelTypeOutput() DashboardFieldLabelTypeOutput {
	return i.ToDashboardFieldLabelTypeOutputWithContext(context.Background())
}

func (i DashboardFieldLabelTypeArgs) ToDashboardFieldLabelTypeOutputWithContext(ctx context.Context) DashboardFieldLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldLabelTypeOutput)
}

func (i DashboardFieldLabelTypeArgs) ToDashboardFieldLabelTypePtrOutput() DashboardFieldLabelTypePtrOutput {
	return i.ToDashboardFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i DashboardFieldLabelTypeArgs) ToDashboardFieldLabelTypePtrOutputWithContext(ctx context.Context) DashboardFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldLabelTypeOutput).ToDashboardFieldLabelTypePtrOutputWithContext(ctx)
}

// DashboardFieldLabelTypePtrInput is an input type that accepts DashboardFieldLabelTypeArgs, DashboardFieldLabelTypePtr and DashboardFieldLabelTypePtrOutput values.
// You can construct a concrete instance of `DashboardFieldLabelTypePtrInput` via:
//
//	        DashboardFieldLabelTypeArgs{...}
//
//	or:
//
//	        nil
type DashboardFieldLabelTypePtrInput interface {
	pulumi.Input

	ToDashboardFieldLabelTypePtrOutput() DashboardFieldLabelTypePtrOutput
	ToDashboardFieldLabelTypePtrOutputWithContext(context.Context) DashboardFieldLabelTypePtrOutput
}

type dashboardFieldLabelTypePtrType DashboardFieldLabelTypeArgs

func DashboardFieldLabelTypePtr(v *DashboardFieldLabelTypeArgs) DashboardFieldLabelTypePtrInput {
	return (*dashboardFieldLabelTypePtrType)(v)
}

func (*dashboardFieldLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldLabelType)(nil)).Elem()
}

func (i *dashboardFieldLabelTypePtrType) ToDashboardFieldLabelTypePtrOutput() DashboardFieldLabelTypePtrOutput {
	return i.ToDashboardFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i *dashboardFieldLabelTypePtrType) ToDashboardFieldLabelTypePtrOutputWithContext(ctx context.Context) DashboardFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldLabelTypePtrOutput)
}

type DashboardFieldLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardFieldLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldLabelType)(nil)).Elem()
}

func (o DashboardFieldLabelTypeOutput) ToDashboardFieldLabelTypeOutput() DashboardFieldLabelTypeOutput {
	return o
}

func (o DashboardFieldLabelTypeOutput) ToDashboardFieldLabelTypeOutputWithContext(ctx context.Context) DashboardFieldLabelTypeOutput {
	return o
}

func (o DashboardFieldLabelTypeOutput) ToDashboardFieldLabelTypePtrOutput() DashboardFieldLabelTypePtrOutput {
	return o.ToDashboardFieldLabelTypePtrOutputWithContext(context.Background())
}

func (o DashboardFieldLabelTypeOutput) ToDashboardFieldLabelTypePtrOutputWithContext(ctx context.Context) DashboardFieldLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFieldLabelType) *DashboardFieldLabelType {
		return &v
	}).(DashboardFieldLabelTypePtrOutput)
}

func (o DashboardFieldLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFieldLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o DashboardFieldLabelTypeOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFieldLabelType) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardFieldLabelTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardFieldLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldLabelType)(nil)).Elem()
}

func (o DashboardFieldLabelTypePtrOutput) ToDashboardFieldLabelTypePtrOutput() DashboardFieldLabelTypePtrOutput {
	return o
}

func (o DashboardFieldLabelTypePtrOutput) ToDashboardFieldLabelTypePtrOutputWithContext(ctx context.Context) DashboardFieldLabelTypePtrOutput {
	return o
}

func (o DashboardFieldLabelTypePtrOutput) Elem() DashboardFieldLabelTypeOutput {
	return o.ApplyT(func(v *DashboardFieldLabelType) DashboardFieldLabelType {
		if v != nil {
			return *v
		}
		var ret DashboardFieldLabelType
		return ret
	}).(DashboardFieldLabelTypeOutput)
}

func (o DashboardFieldLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFieldLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFieldLabelTypePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFieldLabelType) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardFieldSeriesItem struct {
	AxisBinding DashboardAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                            `pulumi:"fieldId"`
	Settings    *DashboardLineChartSeriesSettings `pulumi:"settings"`
}

// DashboardFieldSeriesItemInput is an input type that accepts DashboardFieldSeriesItemArgs and DashboardFieldSeriesItemOutput values.
// You can construct a concrete instance of `DashboardFieldSeriesItemInput` via:
//
//	DashboardFieldSeriesItemArgs{...}
type DashboardFieldSeriesItemInput interface {
	pulumi.Input

	ToDashboardFieldSeriesItemOutput() DashboardFieldSeriesItemOutput
	ToDashboardFieldSeriesItemOutputWithContext(context.Context) DashboardFieldSeriesItemOutput
}

type DashboardFieldSeriesItemArgs struct {
	AxisBinding DashboardAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                       `pulumi:"fieldId"`
	Settings    DashboardLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (DashboardFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSeriesItem)(nil)).Elem()
}

func (i DashboardFieldSeriesItemArgs) ToDashboardFieldSeriesItemOutput() DashboardFieldSeriesItemOutput {
	return i.ToDashboardFieldSeriesItemOutputWithContext(context.Background())
}

func (i DashboardFieldSeriesItemArgs) ToDashboardFieldSeriesItemOutputWithContext(ctx context.Context) DashboardFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSeriesItemOutput)
}

func (i DashboardFieldSeriesItemArgs) ToDashboardFieldSeriesItemPtrOutput() DashboardFieldSeriesItemPtrOutput {
	return i.ToDashboardFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i DashboardFieldSeriesItemArgs) ToDashboardFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSeriesItemOutput).ToDashboardFieldSeriesItemPtrOutputWithContext(ctx)
}

// DashboardFieldSeriesItemPtrInput is an input type that accepts DashboardFieldSeriesItemArgs, DashboardFieldSeriesItemPtr and DashboardFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `DashboardFieldSeriesItemPtrInput` via:
//
//	        DashboardFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type DashboardFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToDashboardFieldSeriesItemPtrOutput() DashboardFieldSeriesItemPtrOutput
	ToDashboardFieldSeriesItemPtrOutputWithContext(context.Context) DashboardFieldSeriesItemPtrOutput
}

type dashboardFieldSeriesItemPtrType DashboardFieldSeriesItemArgs

func DashboardFieldSeriesItemPtr(v *DashboardFieldSeriesItemArgs) DashboardFieldSeriesItemPtrInput {
	return (*dashboardFieldSeriesItemPtrType)(v)
}

func (*dashboardFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldSeriesItem)(nil)).Elem()
}

func (i *dashboardFieldSeriesItemPtrType) ToDashboardFieldSeriesItemPtrOutput() DashboardFieldSeriesItemPtrOutput {
	return i.ToDashboardFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *dashboardFieldSeriesItemPtrType) ToDashboardFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSeriesItemPtrOutput)
}

type DashboardFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (DashboardFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSeriesItem)(nil)).Elem()
}

func (o DashboardFieldSeriesItemOutput) ToDashboardFieldSeriesItemOutput() DashboardFieldSeriesItemOutput {
	return o
}

func (o DashboardFieldSeriesItemOutput) ToDashboardFieldSeriesItemOutputWithContext(ctx context.Context) DashboardFieldSeriesItemOutput {
	return o
}

func (o DashboardFieldSeriesItemOutput) ToDashboardFieldSeriesItemPtrOutput() DashboardFieldSeriesItemPtrOutput {
	return o.ToDashboardFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o DashboardFieldSeriesItemOutput) ToDashboardFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFieldSeriesItem) *DashboardFieldSeriesItem {
		return &v
	}).(DashboardFieldSeriesItemPtrOutput)
}

func (o DashboardFieldSeriesItemOutput) AxisBinding() DashboardAxisBindingOutput {
	return o.ApplyT(func(v DashboardFieldSeriesItem) DashboardAxisBinding { return v.AxisBinding }).(DashboardAxisBindingOutput)
}

func (o DashboardFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardFieldSeriesItemOutput) Settings() DashboardLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v DashboardFieldSeriesItem) *DashboardLineChartSeriesSettings { return v.Settings }).(DashboardLineChartSeriesSettingsPtrOutput)
}

type DashboardFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (DashboardFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldSeriesItem)(nil)).Elem()
}

func (o DashboardFieldSeriesItemPtrOutput) ToDashboardFieldSeriesItemPtrOutput() DashboardFieldSeriesItemPtrOutput {
	return o
}

func (o DashboardFieldSeriesItemPtrOutput) ToDashboardFieldSeriesItemPtrOutputWithContext(ctx context.Context) DashboardFieldSeriesItemPtrOutput {
	return o
}

func (o DashboardFieldSeriesItemPtrOutput) Elem() DashboardFieldSeriesItemOutput {
	return o.ApplyT(func(v *DashboardFieldSeriesItem) DashboardFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret DashboardFieldSeriesItem
		return ret
	}).(DashboardFieldSeriesItemOutput)
}

func (o DashboardFieldSeriesItemPtrOutput) AxisBinding() DashboardAxisBindingPtrOutput {
	return o.ApplyT(func(v *DashboardFieldSeriesItem) *DashboardAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(DashboardAxisBindingPtrOutput)
}

func (o DashboardFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFieldSeriesItemPtrOutput) Settings() DashboardLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardFieldSeriesItem) *DashboardLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(DashboardLineChartSeriesSettingsPtrOutput)
}

type DashboardFieldSort struct {
	Direction DashboardSortDirection `pulumi:"direction"`
	FieldId   string                 `pulumi:"fieldId"`
}

// DashboardFieldSortInput is an input type that accepts DashboardFieldSortArgs and DashboardFieldSortOutput values.
// You can construct a concrete instance of `DashboardFieldSortInput` via:
//
//	DashboardFieldSortArgs{...}
type DashboardFieldSortInput interface {
	pulumi.Input

	ToDashboardFieldSortOutput() DashboardFieldSortOutput
	ToDashboardFieldSortOutputWithContext(context.Context) DashboardFieldSortOutput
}

type DashboardFieldSortArgs struct {
	Direction DashboardSortDirectionInput `pulumi:"direction"`
	FieldId   pulumi.StringInput          `pulumi:"fieldId"`
}

func (DashboardFieldSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSort)(nil)).Elem()
}

func (i DashboardFieldSortArgs) ToDashboardFieldSortOutput() DashboardFieldSortOutput {
	return i.ToDashboardFieldSortOutputWithContext(context.Background())
}

func (i DashboardFieldSortArgs) ToDashboardFieldSortOutputWithContext(ctx context.Context) DashboardFieldSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSortOutput)
}

func (i DashboardFieldSortArgs) ToDashboardFieldSortPtrOutput() DashboardFieldSortPtrOutput {
	return i.ToDashboardFieldSortPtrOutputWithContext(context.Background())
}

func (i DashboardFieldSortArgs) ToDashboardFieldSortPtrOutputWithContext(ctx context.Context) DashboardFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSortOutput).ToDashboardFieldSortPtrOutputWithContext(ctx)
}

// DashboardFieldSortPtrInput is an input type that accepts DashboardFieldSortArgs, DashboardFieldSortPtr and DashboardFieldSortPtrOutput values.
// You can construct a concrete instance of `DashboardFieldSortPtrInput` via:
//
//	        DashboardFieldSortArgs{...}
//
//	or:
//
//	        nil
type DashboardFieldSortPtrInput interface {
	pulumi.Input

	ToDashboardFieldSortPtrOutput() DashboardFieldSortPtrOutput
	ToDashboardFieldSortPtrOutputWithContext(context.Context) DashboardFieldSortPtrOutput
}

type dashboardFieldSortPtrType DashboardFieldSortArgs

func DashboardFieldSortPtr(v *DashboardFieldSortArgs) DashboardFieldSortPtrInput {
	return (*dashboardFieldSortPtrType)(v)
}

func (*dashboardFieldSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldSort)(nil)).Elem()
}

func (i *dashboardFieldSortPtrType) ToDashboardFieldSortPtrOutput() DashboardFieldSortPtrOutput {
	return i.ToDashboardFieldSortPtrOutputWithContext(context.Background())
}

func (i *dashboardFieldSortPtrType) ToDashboardFieldSortPtrOutputWithContext(ctx context.Context) DashboardFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSortPtrOutput)
}

type DashboardFieldSortOutput struct{ *pulumi.OutputState }

func (DashboardFieldSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSort)(nil)).Elem()
}

func (o DashboardFieldSortOutput) ToDashboardFieldSortOutput() DashboardFieldSortOutput {
	return o
}

func (o DashboardFieldSortOutput) ToDashboardFieldSortOutputWithContext(ctx context.Context) DashboardFieldSortOutput {
	return o
}

func (o DashboardFieldSortOutput) ToDashboardFieldSortPtrOutput() DashboardFieldSortPtrOutput {
	return o.ToDashboardFieldSortPtrOutputWithContext(context.Background())
}

func (o DashboardFieldSortOutput) ToDashboardFieldSortPtrOutputWithContext(ctx context.Context) DashboardFieldSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFieldSort) *DashboardFieldSort {
		return &v
	}).(DashboardFieldSortPtrOutput)
}

func (o DashboardFieldSortOutput) Direction() DashboardSortDirectionOutput {
	return o.ApplyT(func(v DashboardFieldSort) DashboardSortDirection { return v.Direction }).(DashboardSortDirectionOutput)
}

func (o DashboardFieldSortOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFieldSort) string { return v.FieldId }).(pulumi.StringOutput)
}

type DashboardFieldSortPtrOutput struct{ *pulumi.OutputState }

func (DashboardFieldSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldSort)(nil)).Elem()
}

func (o DashboardFieldSortPtrOutput) ToDashboardFieldSortPtrOutput() DashboardFieldSortPtrOutput {
	return o
}

func (o DashboardFieldSortPtrOutput) ToDashboardFieldSortPtrOutputWithContext(ctx context.Context) DashboardFieldSortPtrOutput {
	return o
}

func (o DashboardFieldSortPtrOutput) Elem() DashboardFieldSortOutput {
	return o.ApplyT(func(v *DashboardFieldSort) DashboardFieldSort {
		if v != nil {
			return *v
		}
		var ret DashboardFieldSort
		return ret
	}).(DashboardFieldSortOutput)
}

func (o DashboardFieldSortPtrOutput) Direction() DashboardSortDirectionPtrOutput {
	return o.ApplyT(func(v *DashboardFieldSort) *DashboardSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(DashboardSortDirectionPtrOutput)
}

func (o DashboardFieldSortPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFieldSort) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type DashboardFieldSortOptions struct {
	ColumnSort *DashboardColumnSort `pulumi:"columnSort"`
	FieldSort  *DashboardFieldSort  `pulumi:"fieldSort"`
}

// DashboardFieldSortOptionsInput is an input type that accepts DashboardFieldSortOptionsArgs and DashboardFieldSortOptionsOutput values.
// You can construct a concrete instance of `DashboardFieldSortOptionsInput` via:
//
//	DashboardFieldSortOptionsArgs{...}
type DashboardFieldSortOptionsInput interface {
	pulumi.Input

	ToDashboardFieldSortOptionsOutput() DashboardFieldSortOptionsOutput
	ToDashboardFieldSortOptionsOutputWithContext(context.Context) DashboardFieldSortOptionsOutput
}

type DashboardFieldSortOptionsArgs struct {
	ColumnSort DashboardColumnSortPtrInput `pulumi:"columnSort"`
	FieldSort  DashboardFieldSortPtrInput  `pulumi:"fieldSort"`
}

func (DashboardFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSortOptions)(nil)).Elem()
}

func (i DashboardFieldSortOptionsArgs) ToDashboardFieldSortOptionsOutput() DashboardFieldSortOptionsOutput {
	return i.ToDashboardFieldSortOptionsOutputWithContext(context.Background())
}

func (i DashboardFieldSortOptionsArgs) ToDashboardFieldSortOptionsOutputWithContext(ctx context.Context) DashboardFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSortOptionsOutput)
}

// DashboardFieldSortOptionsArrayInput is an input type that accepts DashboardFieldSortOptionsArray and DashboardFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `DashboardFieldSortOptionsArrayInput` via:
//
//	DashboardFieldSortOptionsArray{ DashboardFieldSortOptionsArgs{...} }
type DashboardFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToDashboardFieldSortOptionsArrayOutput() DashboardFieldSortOptionsArrayOutput
	ToDashboardFieldSortOptionsArrayOutputWithContext(context.Context) DashboardFieldSortOptionsArrayOutput
}

type DashboardFieldSortOptionsArray []DashboardFieldSortOptionsInput

func (DashboardFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFieldSortOptions)(nil)).Elem()
}

func (i DashboardFieldSortOptionsArray) ToDashboardFieldSortOptionsArrayOutput() DashboardFieldSortOptionsArrayOutput {
	return i.ToDashboardFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i DashboardFieldSortOptionsArray) ToDashboardFieldSortOptionsArrayOutputWithContext(ctx context.Context) DashboardFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (DashboardFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldSortOptions)(nil)).Elem()
}

func (o DashboardFieldSortOptionsOutput) ToDashboardFieldSortOptionsOutput() DashboardFieldSortOptionsOutput {
	return o
}

func (o DashboardFieldSortOptionsOutput) ToDashboardFieldSortOptionsOutputWithContext(ctx context.Context) DashboardFieldSortOptionsOutput {
	return o
}

func (o DashboardFieldSortOptionsOutput) ColumnSort() DashboardColumnSortPtrOutput {
	return o.ApplyT(func(v DashboardFieldSortOptions) *DashboardColumnSort { return v.ColumnSort }).(DashboardColumnSortPtrOutput)
}

func (o DashboardFieldSortOptionsOutput) FieldSort() DashboardFieldSortPtrOutput {
	return o.ApplyT(func(v DashboardFieldSortOptions) *DashboardFieldSort { return v.FieldSort }).(DashboardFieldSortPtrOutput)
}

type DashboardFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (DashboardFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFieldSortOptions)(nil)).Elem()
}

func (o DashboardFieldSortOptionsArrayOutput) ToDashboardFieldSortOptionsArrayOutput() DashboardFieldSortOptionsArrayOutput {
	return o
}

func (o DashboardFieldSortOptionsArrayOutput) ToDashboardFieldSortOptionsArrayOutputWithContext(ctx context.Context) DashboardFieldSortOptionsArrayOutput {
	return o
}

func (o DashboardFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) DashboardFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFieldSortOptions {
		return vs[0].([]DashboardFieldSortOptions)[vs[1].(int)]
	}).(DashboardFieldSortOptionsOutput)
}

type DashboardFieldTooltipItem struct {
	FieldId    string               `pulumi:"fieldId"`
	Label      *string              `pulumi:"label"`
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardFieldTooltipItemInput is an input type that accepts DashboardFieldTooltipItemArgs and DashboardFieldTooltipItemOutput values.
// You can construct a concrete instance of `DashboardFieldTooltipItemInput` via:
//
//	DashboardFieldTooltipItemArgs{...}
type DashboardFieldTooltipItemInput interface {
	pulumi.Input

	ToDashboardFieldTooltipItemOutput() DashboardFieldTooltipItemOutput
	ToDashboardFieldTooltipItemOutputWithContext(context.Context) DashboardFieldTooltipItemOutput
}

type DashboardFieldTooltipItemArgs struct {
	FieldId    pulumi.StringInput          `pulumi:"fieldId"`
	Label      pulumi.StringPtrInput       `pulumi:"label"`
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardFieldTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldTooltipItem)(nil)).Elem()
}

func (i DashboardFieldTooltipItemArgs) ToDashboardFieldTooltipItemOutput() DashboardFieldTooltipItemOutput {
	return i.ToDashboardFieldTooltipItemOutputWithContext(context.Background())
}

func (i DashboardFieldTooltipItemArgs) ToDashboardFieldTooltipItemOutputWithContext(ctx context.Context) DashboardFieldTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldTooltipItemOutput)
}

func (i DashboardFieldTooltipItemArgs) ToDashboardFieldTooltipItemPtrOutput() DashboardFieldTooltipItemPtrOutput {
	return i.ToDashboardFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i DashboardFieldTooltipItemArgs) ToDashboardFieldTooltipItemPtrOutputWithContext(ctx context.Context) DashboardFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldTooltipItemOutput).ToDashboardFieldTooltipItemPtrOutputWithContext(ctx)
}

// DashboardFieldTooltipItemPtrInput is an input type that accepts DashboardFieldTooltipItemArgs, DashboardFieldTooltipItemPtr and DashboardFieldTooltipItemPtrOutput values.
// You can construct a concrete instance of `DashboardFieldTooltipItemPtrInput` via:
//
//	        DashboardFieldTooltipItemArgs{...}
//
//	or:
//
//	        nil
type DashboardFieldTooltipItemPtrInput interface {
	pulumi.Input

	ToDashboardFieldTooltipItemPtrOutput() DashboardFieldTooltipItemPtrOutput
	ToDashboardFieldTooltipItemPtrOutputWithContext(context.Context) DashboardFieldTooltipItemPtrOutput
}

type dashboardFieldTooltipItemPtrType DashboardFieldTooltipItemArgs

func DashboardFieldTooltipItemPtr(v *DashboardFieldTooltipItemArgs) DashboardFieldTooltipItemPtrInput {
	return (*dashboardFieldTooltipItemPtrType)(v)
}

func (*dashboardFieldTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldTooltipItem)(nil)).Elem()
}

func (i *dashboardFieldTooltipItemPtrType) ToDashboardFieldTooltipItemPtrOutput() DashboardFieldTooltipItemPtrOutput {
	return i.ToDashboardFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i *dashboardFieldTooltipItemPtrType) ToDashboardFieldTooltipItemPtrOutputWithContext(ctx context.Context) DashboardFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFieldTooltipItemPtrOutput)
}

type DashboardFieldTooltipItemOutput struct{ *pulumi.OutputState }

func (DashboardFieldTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFieldTooltipItem)(nil)).Elem()
}

func (o DashboardFieldTooltipItemOutput) ToDashboardFieldTooltipItemOutput() DashboardFieldTooltipItemOutput {
	return o
}

func (o DashboardFieldTooltipItemOutput) ToDashboardFieldTooltipItemOutputWithContext(ctx context.Context) DashboardFieldTooltipItemOutput {
	return o
}

func (o DashboardFieldTooltipItemOutput) ToDashboardFieldTooltipItemPtrOutput() DashboardFieldTooltipItemPtrOutput {
	return o.ToDashboardFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (o DashboardFieldTooltipItemOutput) ToDashboardFieldTooltipItemPtrOutputWithContext(ctx context.Context) DashboardFieldTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFieldTooltipItem) *DashboardFieldTooltipItem {
		return &v
	}).(DashboardFieldTooltipItemPtrOutput)
}

func (o DashboardFieldTooltipItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFieldTooltipItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardFieldTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFieldTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o DashboardFieldTooltipItemOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFieldTooltipItem) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardFieldTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (DashboardFieldTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFieldTooltipItem)(nil)).Elem()
}

func (o DashboardFieldTooltipItemPtrOutput) ToDashboardFieldTooltipItemPtrOutput() DashboardFieldTooltipItemPtrOutput {
	return o
}

func (o DashboardFieldTooltipItemPtrOutput) ToDashboardFieldTooltipItemPtrOutputWithContext(ctx context.Context) DashboardFieldTooltipItemPtrOutput {
	return o
}

func (o DashboardFieldTooltipItemPtrOutput) Elem() DashboardFieldTooltipItemOutput {
	return o.ApplyT(func(v *DashboardFieldTooltipItem) DashboardFieldTooltipItem {
		if v != nil {
			return *v
		}
		var ret DashboardFieldTooltipItem
		return ret
	}).(DashboardFieldTooltipItemOutput)
}

func (o DashboardFieldTooltipItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFieldTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFieldTooltipItemPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFieldTooltipItem) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardFilledMapAggregatedFieldWells struct {
	Geospatial []DashboardDimensionField `pulumi:"geospatial"`
	Values     []DashboardMeasureField   `pulumi:"values"`
}

// DashboardFilledMapAggregatedFieldWellsInput is an input type that accepts DashboardFilledMapAggregatedFieldWellsArgs and DashboardFilledMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardFilledMapAggregatedFieldWellsInput` via:
//
//	DashboardFilledMapAggregatedFieldWellsArgs{...}
type DashboardFilledMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardFilledMapAggregatedFieldWellsOutput() DashboardFilledMapAggregatedFieldWellsOutput
	ToDashboardFilledMapAggregatedFieldWellsOutputWithContext(context.Context) DashboardFilledMapAggregatedFieldWellsOutput
}

type DashboardFilledMapAggregatedFieldWellsArgs struct {
	Geospatial DashboardDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardFilledMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardFilledMapAggregatedFieldWellsArgs) ToDashboardFilledMapAggregatedFieldWellsOutput() DashboardFilledMapAggregatedFieldWellsOutput {
	return i.ToDashboardFilledMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardFilledMapAggregatedFieldWellsArgs) ToDashboardFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapAggregatedFieldWellsOutput)
}

func (i DashboardFilledMapAggregatedFieldWellsArgs) ToDashboardFilledMapAggregatedFieldWellsPtrOutput() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapAggregatedFieldWellsArgs) ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapAggregatedFieldWellsOutput).ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardFilledMapAggregatedFieldWellsPtrInput is an input type that accepts DashboardFilledMapAggregatedFieldWellsArgs, DashboardFilledMapAggregatedFieldWellsPtr and DashboardFilledMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapAggregatedFieldWellsPtrInput` via:
//
//	        DashboardFilledMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapAggregatedFieldWellsPtrOutput() DashboardFilledMapAggregatedFieldWellsPtrOutput
	ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardFilledMapAggregatedFieldWellsPtrOutput
}

type dashboardFilledMapAggregatedFieldWellsPtrType DashboardFilledMapAggregatedFieldWellsArgs

func DashboardFilledMapAggregatedFieldWellsPtr(v *DashboardFilledMapAggregatedFieldWellsArgs) DashboardFilledMapAggregatedFieldWellsPtrInput {
	return (*dashboardFilledMapAggregatedFieldWellsPtrType)(v)
}

func (*dashboardFilledMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardFilledMapAggregatedFieldWellsPtrType) ToDashboardFilledMapAggregatedFieldWellsPtrOutput() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapAggregatedFieldWellsPtrType) ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapAggregatedFieldWellsPtrOutput)
}

type DashboardFilledMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) ToDashboardFilledMapAggregatedFieldWellsOutput() DashboardFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) ToDashboardFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) ToDashboardFilledMapAggregatedFieldWellsPtrOutput() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o.ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapAggregatedFieldWells) *DashboardFilledMapAggregatedFieldWells {
		return &v
	}).(DashboardFilledMapAggregatedFieldWellsPtrOutput)
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) Geospatial() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapAggregatedFieldWells) []DashboardDimensionField { return v.Geospatial }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardFilledMapAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardFilledMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardFilledMapAggregatedFieldWellsPtrOutput) ToDashboardFilledMapAggregatedFieldWellsPtrOutput() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardFilledMapAggregatedFieldWellsPtrOutput) ToDashboardFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardFilledMapAggregatedFieldWellsPtrOutput) Elem() DashboardFilledMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardFilledMapAggregatedFieldWells) DashboardFilledMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapAggregatedFieldWells
		return ret
	}).(DashboardFilledMapAggregatedFieldWellsOutput)
}

func (o DashboardFilledMapAggregatedFieldWellsPtrOutput) Geospatial() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardFilledMapAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardFilledMapConditionalFormatting struct {
	ConditionalFormattingOptions []DashboardFilledMapConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// DashboardFilledMapConditionalFormattingInput is an input type that accepts DashboardFilledMapConditionalFormattingArgs and DashboardFilledMapConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardFilledMapConditionalFormattingInput` via:
//
//	DashboardFilledMapConditionalFormattingArgs{...}
type DashboardFilledMapConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardFilledMapConditionalFormattingOutput() DashboardFilledMapConditionalFormattingOutput
	ToDashboardFilledMapConditionalFormattingOutputWithContext(context.Context) DashboardFilledMapConditionalFormattingOutput
}

type DashboardFilledMapConditionalFormattingArgs struct {
	ConditionalFormattingOptions DashboardFilledMapConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (DashboardFilledMapConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConditionalFormatting)(nil)).Elem()
}

func (i DashboardFilledMapConditionalFormattingArgs) ToDashboardFilledMapConditionalFormattingOutput() DashboardFilledMapConditionalFormattingOutput {
	return i.ToDashboardFilledMapConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardFilledMapConditionalFormattingArgs) ToDashboardFilledMapConditionalFormattingOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConditionalFormattingOutput)
}

func (i DashboardFilledMapConditionalFormattingArgs) ToDashboardFilledMapConditionalFormattingPtrOutput() DashboardFilledMapConditionalFormattingPtrOutput {
	return i.ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapConditionalFormattingArgs) ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConditionalFormattingOutput).ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardFilledMapConditionalFormattingPtrInput is an input type that accepts DashboardFilledMapConditionalFormattingArgs, DashboardFilledMapConditionalFormattingPtr and DashboardFilledMapConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapConditionalFormattingPtrInput` via:
//
//	        DashboardFilledMapConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapConditionalFormattingPtrOutput() DashboardFilledMapConditionalFormattingPtrOutput
	ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(context.Context) DashboardFilledMapConditionalFormattingPtrOutput
}

type dashboardFilledMapConditionalFormattingPtrType DashboardFilledMapConditionalFormattingArgs

func DashboardFilledMapConditionalFormattingPtr(v *DashboardFilledMapConditionalFormattingArgs) DashboardFilledMapConditionalFormattingPtrInput {
	return (*dashboardFilledMapConditionalFormattingPtrType)(v)
}

func (*dashboardFilledMapConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapConditionalFormatting)(nil)).Elem()
}

func (i *dashboardFilledMapConditionalFormattingPtrType) ToDashboardFilledMapConditionalFormattingPtrOutput() DashboardFilledMapConditionalFormattingPtrOutput {
	return i.ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapConditionalFormattingPtrType) ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConditionalFormattingPtrOutput)
}

type DashboardFilledMapConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConditionalFormatting)(nil)).Elem()
}

func (o DashboardFilledMapConditionalFormattingOutput) ToDashboardFilledMapConditionalFormattingOutput() DashboardFilledMapConditionalFormattingOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOutput) ToDashboardFilledMapConditionalFormattingOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOutput) ToDashboardFilledMapConditionalFormattingPtrOutput() DashboardFilledMapConditionalFormattingPtrOutput {
	return o.ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapConditionalFormattingOutput) ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapConditionalFormatting) *DashboardFilledMapConditionalFormatting {
		return &v
	}).(DashboardFilledMapConditionalFormattingPtrOutput)
}

func (o DashboardFilledMapConditionalFormattingOutput) ConditionalFormattingOptions() DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapConditionalFormatting) []DashboardFilledMapConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(DashboardFilledMapConditionalFormattingOptionArrayOutput)
}

type DashboardFilledMapConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapConditionalFormatting)(nil)).Elem()
}

func (o DashboardFilledMapConditionalFormattingPtrOutput) ToDashboardFilledMapConditionalFormattingPtrOutput() DashboardFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingPtrOutput) ToDashboardFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingPtrOutput) Elem() DashboardFilledMapConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardFilledMapConditionalFormatting) DashboardFilledMapConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapConditionalFormatting
		return ret
	}).(DashboardFilledMapConditionalFormattingOutput)
}

func (o DashboardFilledMapConditionalFormattingPtrOutput) ConditionalFormattingOptions() DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapConditionalFormatting) []DashboardFilledMapConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(DashboardFilledMapConditionalFormattingOptionArrayOutput)
}

type DashboardFilledMapConditionalFormattingOption struct {
	Shape DashboardFilledMapShapeConditionalFormatting `pulumi:"shape"`
}

// DashboardFilledMapConditionalFormattingOptionInput is an input type that accepts DashboardFilledMapConditionalFormattingOptionArgs and DashboardFilledMapConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `DashboardFilledMapConditionalFormattingOptionInput` via:
//
//	DashboardFilledMapConditionalFormattingOptionArgs{...}
type DashboardFilledMapConditionalFormattingOptionInput interface {
	pulumi.Input

	ToDashboardFilledMapConditionalFormattingOptionOutput() DashboardFilledMapConditionalFormattingOptionOutput
	ToDashboardFilledMapConditionalFormattingOptionOutputWithContext(context.Context) DashboardFilledMapConditionalFormattingOptionOutput
}

type DashboardFilledMapConditionalFormattingOptionArgs struct {
	Shape DashboardFilledMapShapeConditionalFormattingInput `pulumi:"shape"`
}

func (DashboardFilledMapConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardFilledMapConditionalFormattingOptionArgs) ToDashboardFilledMapConditionalFormattingOptionOutput() DashboardFilledMapConditionalFormattingOptionOutput {
	return i.ToDashboardFilledMapConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i DashboardFilledMapConditionalFormattingOptionArgs) ToDashboardFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConditionalFormattingOptionOutput)
}

// DashboardFilledMapConditionalFormattingOptionArrayInput is an input type that accepts DashboardFilledMapConditionalFormattingOptionArray and DashboardFilledMapConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `DashboardFilledMapConditionalFormattingOptionArrayInput` via:
//
//	DashboardFilledMapConditionalFormattingOptionArray{ DashboardFilledMapConditionalFormattingOptionArgs{...} }
type DashboardFilledMapConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToDashboardFilledMapConditionalFormattingOptionArrayOutput() DashboardFilledMapConditionalFormattingOptionArrayOutput
	ToDashboardFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Context) DashboardFilledMapConditionalFormattingOptionArrayOutput
}

type DashboardFilledMapConditionalFormattingOptionArray []DashboardFilledMapConditionalFormattingOptionInput

func (DashboardFilledMapConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardFilledMapConditionalFormattingOptionArray) ToDashboardFilledMapConditionalFormattingOptionArrayOutput() DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return i.ToDashboardFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i DashboardFilledMapConditionalFormattingOptionArray) ToDashboardFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConditionalFormattingOptionArrayOutput)
}

type DashboardFilledMapConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardFilledMapConditionalFormattingOptionOutput) ToDashboardFilledMapConditionalFormattingOptionOutput() DashboardFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOptionOutput) ToDashboardFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOptionOutput) Shape() DashboardFilledMapShapeConditionalFormattingOutput {
	return o.ApplyT(func(v DashboardFilledMapConditionalFormattingOption) DashboardFilledMapShapeConditionalFormatting {
		return v.Shape
	}).(DashboardFilledMapShapeConditionalFormattingOutput)
}

type DashboardFilledMapConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardFilledMapConditionalFormattingOptionArrayOutput) ToDashboardFilledMapConditionalFormattingOptionArrayOutput() DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOptionArrayOutput) ToDashboardFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardFilledMapConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) DashboardFilledMapConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFilledMapConditionalFormattingOption {
		return vs[0].([]DashboardFilledMapConditionalFormattingOption)[vs[1].(int)]
	}).(DashboardFilledMapConditionalFormattingOptionOutput)
}

type DashboardFilledMapConfiguration struct {
	FieldWells        *DashboardFilledMapFieldWells        `pulumi:"fieldWells"`
	Legend            *DashboardLegendOptions              `pulumi:"legend"`
	MapStyleOptions   *DashboardGeospatialMapStyleOptions  `pulumi:"mapStyleOptions"`
	SortConfiguration *DashboardFilledMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *DashboardTooltipOptions             `pulumi:"tooltip"`
	WindowOptions     *DashboardGeospatialWindowOptions    `pulumi:"windowOptions"`
}

// DashboardFilledMapConfigurationInput is an input type that accepts DashboardFilledMapConfigurationArgs and DashboardFilledMapConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilledMapConfigurationInput` via:
//
//	DashboardFilledMapConfigurationArgs{...}
type DashboardFilledMapConfigurationInput interface {
	pulumi.Input

	ToDashboardFilledMapConfigurationOutput() DashboardFilledMapConfigurationOutput
	ToDashboardFilledMapConfigurationOutputWithContext(context.Context) DashboardFilledMapConfigurationOutput
}

type DashboardFilledMapConfigurationArgs struct {
	FieldWells        DashboardFilledMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend            DashboardLegendOptionsPtrInput              `pulumi:"legend"`
	MapStyleOptions   DashboardGeospatialMapStyleOptionsPtrInput  `pulumi:"mapStyleOptions"`
	SortConfiguration DashboardFilledMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           DashboardTooltipOptionsPtrInput             `pulumi:"tooltip"`
	WindowOptions     DashboardGeospatialWindowOptionsPtrInput    `pulumi:"windowOptions"`
}

func (DashboardFilledMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConfiguration)(nil)).Elem()
}

func (i DashboardFilledMapConfigurationArgs) ToDashboardFilledMapConfigurationOutput() DashboardFilledMapConfigurationOutput {
	return i.ToDashboardFilledMapConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilledMapConfigurationArgs) ToDashboardFilledMapConfigurationOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConfigurationOutput)
}

func (i DashboardFilledMapConfigurationArgs) ToDashboardFilledMapConfigurationPtrOutput() DashboardFilledMapConfigurationPtrOutput {
	return i.ToDashboardFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapConfigurationArgs) ToDashboardFilledMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConfigurationOutput).ToDashboardFilledMapConfigurationPtrOutputWithContext(ctx)
}

// DashboardFilledMapConfigurationPtrInput is an input type that accepts DashboardFilledMapConfigurationArgs, DashboardFilledMapConfigurationPtr and DashboardFilledMapConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapConfigurationPtrInput` via:
//
//	        DashboardFilledMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapConfigurationPtrOutput() DashboardFilledMapConfigurationPtrOutput
	ToDashboardFilledMapConfigurationPtrOutputWithContext(context.Context) DashboardFilledMapConfigurationPtrOutput
}

type dashboardFilledMapConfigurationPtrType DashboardFilledMapConfigurationArgs

func DashboardFilledMapConfigurationPtr(v *DashboardFilledMapConfigurationArgs) DashboardFilledMapConfigurationPtrInput {
	return (*dashboardFilledMapConfigurationPtrType)(v)
}

func (*dashboardFilledMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapConfiguration)(nil)).Elem()
}

func (i *dashboardFilledMapConfigurationPtrType) ToDashboardFilledMapConfigurationPtrOutput() DashboardFilledMapConfigurationPtrOutput {
	return i.ToDashboardFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapConfigurationPtrType) ToDashboardFilledMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapConfigurationPtrOutput)
}

type DashboardFilledMapConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapConfiguration)(nil)).Elem()
}

func (o DashboardFilledMapConfigurationOutput) ToDashboardFilledMapConfigurationOutput() DashboardFilledMapConfigurationOutput {
	return o
}

func (o DashboardFilledMapConfigurationOutput) ToDashboardFilledMapConfigurationOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationOutput {
	return o
}

func (o DashboardFilledMapConfigurationOutput) ToDashboardFilledMapConfigurationPtrOutput() DashboardFilledMapConfigurationPtrOutput {
	return o.ToDashboardFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapConfigurationOutput) ToDashboardFilledMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapConfiguration) *DashboardFilledMapConfiguration {
		return &v
	}).(DashboardFilledMapConfigurationPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) FieldWells() DashboardFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardFilledMapFieldWells { return v.FieldWells }).(DashboardFilledMapFieldWellsPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) MapStyleOptions() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardGeospatialMapStyleOptions { return v.MapStyleOptions }).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) SortConfiguration() DashboardFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardFilledMapSortConfiguration {
		return v.SortConfiguration
	}).(DashboardFilledMapSortConfigurationPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationOutput) WindowOptions() DashboardGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapConfiguration) *DashboardGeospatialWindowOptions { return v.WindowOptions }).(DashboardGeospatialWindowOptionsPtrOutput)
}

type DashboardFilledMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapConfiguration)(nil)).Elem()
}

func (o DashboardFilledMapConfigurationPtrOutput) ToDashboardFilledMapConfigurationPtrOutput() DashboardFilledMapConfigurationPtrOutput {
	return o
}

func (o DashboardFilledMapConfigurationPtrOutput) ToDashboardFilledMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapConfigurationPtrOutput {
	return o
}

func (o DashboardFilledMapConfigurationPtrOutput) Elem() DashboardFilledMapConfigurationOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) DashboardFilledMapConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapConfiguration
		return ret
	}).(DashboardFilledMapConfigurationOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) FieldWells() DashboardFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardFilledMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardFilledMapFieldWellsPtrOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) MapStyleOptions() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) SortConfiguration() DashboardFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardFilledMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardFilledMapSortConfigurationPtrOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardFilledMapConfigurationPtrOutput) WindowOptions() DashboardGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapConfiguration) *DashboardGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(DashboardGeospatialWindowOptionsPtrOutput)
}

type DashboardFilledMapFieldWells struct {
	FilledMapAggregatedFieldWells *DashboardFilledMapAggregatedFieldWells `pulumi:"filledMapAggregatedFieldWells"`
}

// DashboardFilledMapFieldWellsInput is an input type that accepts DashboardFilledMapFieldWellsArgs and DashboardFilledMapFieldWellsOutput values.
// You can construct a concrete instance of `DashboardFilledMapFieldWellsInput` via:
//
//	DashboardFilledMapFieldWellsArgs{...}
type DashboardFilledMapFieldWellsInput interface {
	pulumi.Input

	ToDashboardFilledMapFieldWellsOutput() DashboardFilledMapFieldWellsOutput
	ToDashboardFilledMapFieldWellsOutputWithContext(context.Context) DashboardFilledMapFieldWellsOutput
}

type DashboardFilledMapFieldWellsArgs struct {
	FilledMapAggregatedFieldWells DashboardFilledMapAggregatedFieldWellsPtrInput `pulumi:"filledMapAggregatedFieldWells"`
}

func (DashboardFilledMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapFieldWells)(nil)).Elem()
}

func (i DashboardFilledMapFieldWellsArgs) ToDashboardFilledMapFieldWellsOutput() DashboardFilledMapFieldWellsOutput {
	return i.ToDashboardFilledMapFieldWellsOutputWithContext(context.Background())
}

func (i DashboardFilledMapFieldWellsArgs) ToDashboardFilledMapFieldWellsOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapFieldWellsOutput)
}

func (i DashboardFilledMapFieldWellsArgs) ToDashboardFilledMapFieldWellsPtrOutput() DashboardFilledMapFieldWellsPtrOutput {
	return i.ToDashboardFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapFieldWellsArgs) ToDashboardFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapFieldWellsOutput).ToDashboardFilledMapFieldWellsPtrOutputWithContext(ctx)
}

// DashboardFilledMapFieldWellsPtrInput is an input type that accepts DashboardFilledMapFieldWellsArgs, DashboardFilledMapFieldWellsPtr and DashboardFilledMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapFieldWellsPtrInput` via:
//
//	        DashboardFilledMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapFieldWellsPtrOutput() DashboardFilledMapFieldWellsPtrOutput
	ToDashboardFilledMapFieldWellsPtrOutputWithContext(context.Context) DashboardFilledMapFieldWellsPtrOutput
}

type dashboardFilledMapFieldWellsPtrType DashboardFilledMapFieldWellsArgs

func DashboardFilledMapFieldWellsPtr(v *DashboardFilledMapFieldWellsArgs) DashboardFilledMapFieldWellsPtrInput {
	return (*dashboardFilledMapFieldWellsPtrType)(v)
}

func (*dashboardFilledMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapFieldWells)(nil)).Elem()
}

func (i *dashboardFilledMapFieldWellsPtrType) ToDashboardFilledMapFieldWellsPtrOutput() DashboardFilledMapFieldWellsPtrOutput {
	return i.ToDashboardFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapFieldWellsPtrType) ToDashboardFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapFieldWellsPtrOutput)
}

type DashboardFilledMapFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapFieldWells)(nil)).Elem()
}

func (o DashboardFilledMapFieldWellsOutput) ToDashboardFilledMapFieldWellsOutput() DashboardFilledMapFieldWellsOutput {
	return o
}

func (o DashboardFilledMapFieldWellsOutput) ToDashboardFilledMapFieldWellsOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsOutput {
	return o
}

func (o DashboardFilledMapFieldWellsOutput) ToDashboardFilledMapFieldWellsPtrOutput() DashboardFilledMapFieldWellsPtrOutput {
	return o.ToDashboardFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapFieldWellsOutput) ToDashboardFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapFieldWells) *DashboardFilledMapFieldWells {
		return &v
	}).(DashboardFilledMapFieldWellsPtrOutput)
}

func (o DashboardFilledMapFieldWellsOutput) FilledMapAggregatedFieldWells() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapFieldWells) *DashboardFilledMapAggregatedFieldWells {
		return v.FilledMapAggregatedFieldWells
	}).(DashboardFilledMapAggregatedFieldWellsPtrOutput)
}

type DashboardFilledMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapFieldWells)(nil)).Elem()
}

func (o DashboardFilledMapFieldWellsPtrOutput) ToDashboardFilledMapFieldWellsPtrOutput() DashboardFilledMapFieldWellsPtrOutput {
	return o
}

func (o DashboardFilledMapFieldWellsPtrOutput) ToDashboardFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFilledMapFieldWellsPtrOutput {
	return o
}

func (o DashboardFilledMapFieldWellsPtrOutput) Elem() DashboardFilledMapFieldWellsOutput {
	return o.ApplyT(func(v *DashboardFilledMapFieldWells) DashboardFilledMapFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapFieldWells
		return ret
	}).(DashboardFilledMapFieldWellsOutput)
}

func (o DashboardFilledMapFieldWellsPtrOutput) FilledMapAggregatedFieldWells() DashboardFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapFieldWells) *DashboardFilledMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FilledMapAggregatedFieldWells
	}).(DashboardFilledMapAggregatedFieldWellsPtrOutput)
}

type DashboardFilledMapShapeConditionalFormatting struct {
	FieldId string                           `pulumi:"fieldId"`
	Format  *DashboardShapeConditionalFormat `pulumi:"format"`
}

// DashboardFilledMapShapeConditionalFormattingInput is an input type that accepts DashboardFilledMapShapeConditionalFormattingArgs and DashboardFilledMapShapeConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardFilledMapShapeConditionalFormattingInput` via:
//
//	DashboardFilledMapShapeConditionalFormattingArgs{...}
type DashboardFilledMapShapeConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardFilledMapShapeConditionalFormattingOutput() DashboardFilledMapShapeConditionalFormattingOutput
	ToDashboardFilledMapShapeConditionalFormattingOutputWithContext(context.Context) DashboardFilledMapShapeConditionalFormattingOutput
}

type DashboardFilledMapShapeConditionalFormattingArgs struct {
	FieldId pulumi.StringInput                      `pulumi:"fieldId"`
	Format  DashboardShapeConditionalFormatPtrInput `pulumi:"format"`
}

func (DashboardFilledMapShapeConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (i DashboardFilledMapShapeConditionalFormattingArgs) ToDashboardFilledMapShapeConditionalFormattingOutput() DashboardFilledMapShapeConditionalFormattingOutput {
	return i.ToDashboardFilledMapShapeConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardFilledMapShapeConditionalFormattingArgs) ToDashboardFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) DashboardFilledMapShapeConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapShapeConditionalFormattingOutput)
}

type DashboardFilledMapShapeConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapShapeConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (o DashboardFilledMapShapeConditionalFormattingOutput) ToDashboardFilledMapShapeConditionalFormattingOutput() DashboardFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o DashboardFilledMapShapeConditionalFormattingOutput) ToDashboardFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) DashboardFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o DashboardFilledMapShapeConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilledMapShapeConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardFilledMapShapeConditionalFormattingOutput) Format() DashboardShapeConditionalFormatPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapShapeConditionalFormatting) *DashboardShapeConditionalFormat { return v.Format }).(DashboardShapeConditionalFormatPtrOutput)
}

type DashboardFilledMapSortConfiguration struct {
	CategorySort []DashboardFieldSortOptions `pulumi:"categorySort"`
}

// DashboardFilledMapSortConfigurationInput is an input type that accepts DashboardFilledMapSortConfigurationArgs and DashboardFilledMapSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilledMapSortConfigurationInput` via:
//
//	DashboardFilledMapSortConfigurationArgs{...}
type DashboardFilledMapSortConfigurationInput interface {
	pulumi.Input

	ToDashboardFilledMapSortConfigurationOutput() DashboardFilledMapSortConfigurationOutput
	ToDashboardFilledMapSortConfigurationOutputWithContext(context.Context) DashboardFilledMapSortConfigurationOutput
}

type DashboardFilledMapSortConfigurationArgs struct {
	CategorySort DashboardFieldSortOptionsArrayInput `pulumi:"categorySort"`
}

func (DashboardFilledMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapSortConfiguration)(nil)).Elem()
}

func (i DashboardFilledMapSortConfigurationArgs) ToDashboardFilledMapSortConfigurationOutput() DashboardFilledMapSortConfigurationOutput {
	return i.ToDashboardFilledMapSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilledMapSortConfigurationArgs) ToDashboardFilledMapSortConfigurationOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapSortConfigurationOutput)
}

func (i DashboardFilledMapSortConfigurationArgs) ToDashboardFilledMapSortConfigurationPtrOutput() DashboardFilledMapSortConfigurationPtrOutput {
	return i.ToDashboardFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapSortConfigurationArgs) ToDashboardFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapSortConfigurationOutput).ToDashboardFilledMapSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardFilledMapSortConfigurationPtrInput is an input type that accepts DashboardFilledMapSortConfigurationArgs, DashboardFilledMapSortConfigurationPtr and DashboardFilledMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapSortConfigurationPtrInput` via:
//
//	        DashboardFilledMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapSortConfigurationPtrOutput() DashboardFilledMapSortConfigurationPtrOutput
	ToDashboardFilledMapSortConfigurationPtrOutputWithContext(context.Context) DashboardFilledMapSortConfigurationPtrOutput
}

type dashboardFilledMapSortConfigurationPtrType DashboardFilledMapSortConfigurationArgs

func DashboardFilledMapSortConfigurationPtr(v *DashboardFilledMapSortConfigurationArgs) DashboardFilledMapSortConfigurationPtrInput {
	return (*dashboardFilledMapSortConfigurationPtrType)(v)
}

func (*dashboardFilledMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapSortConfiguration)(nil)).Elem()
}

func (i *dashboardFilledMapSortConfigurationPtrType) ToDashboardFilledMapSortConfigurationPtrOutput() DashboardFilledMapSortConfigurationPtrOutput {
	return i.ToDashboardFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapSortConfigurationPtrType) ToDashboardFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapSortConfigurationPtrOutput)
}

type DashboardFilledMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapSortConfiguration)(nil)).Elem()
}

func (o DashboardFilledMapSortConfigurationOutput) ToDashboardFilledMapSortConfigurationOutput() DashboardFilledMapSortConfigurationOutput {
	return o
}

func (o DashboardFilledMapSortConfigurationOutput) ToDashboardFilledMapSortConfigurationOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationOutput {
	return o
}

func (o DashboardFilledMapSortConfigurationOutput) ToDashboardFilledMapSortConfigurationPtrOutput() DashboardFilledMapSortConfigurationPtrOutput {
	return o.ToDashboardFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapSortConfigurationOutput) ToDashboardFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapSortConfiguration) *DashboardFilledMapSortConfiguration {
		return &v
	}).(DashboardFilledMapSortConfigurationPtrOutput)
}

func (o DashboardFilledMapSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardFilledMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapSortConfiguration)(nil)).Elem()
}

func (o DashboardFilledMapSortConfigurationPtrOutput) ToDashboardFilledMapSortConfigurationPtrOutput() DashboardFilledMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardFilledMapSortConfigurationPtrOutput) ToDashboardFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilledMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardFilledMapSortConfigurationPtrOutput) Elem() DashboardFilledMapSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardFilledMapSortConfiguration) DashboardFilledMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapSortConfiguration
		return ret
	}).(DashboardFilledMapSortConfigurationOutput)
}

func (o DashboardFilledMapSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardFilledMapVisual struct {
	Actions               []DashboardVisualCustomAction            `pulumi:"actions"`
	ChartConfiguration    *DashboardFilledMapConfiguration         `pulumi:"chartConfiguration"`
	ColumnHierarchies     []DashboardColumnHierarchy               `pulumi:"columnHierarchies"`
	ConditionalFormatting *DashboardFilledMapConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *DashboardVisualSubtitleLabelOptions     `pulumi:"subtitle"`
	Title                 *DashboardVisualTitleLabelOptions        `pulumi:"title"`
	VisualId              string                                   `pulumi:"visualId"`
}

// DashboardFilledMapVisualInput is an input type that accepts DashboardFilledMapVisualArgs and DashboardFilledMapVisualOutput values.
// You can construct a concrete instance of `DashboardFilledMapVisualInput` via:
//
//	DashboardFilledMapVisualArgs{...}
type DashboardFilledMapVisualInput interface {
	pulumi.Input

	ToDashboardFilledMapVisualOutput() DashboardFilledMapVisualOutput
	ToDashboardFilledMapVisualOutputWithContext(context.Context) DashboardFilledMapVisualOutput
}

type DashboardFilledMapVisualArgs struct {
	Actions               DashboardVisualCustomActionArrayInput           `pulumi:"actions"`
	ChartConfiguration    DashboardFilledMapConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ColumnHierarchies     DashboardColumnHierarchyArrayInput              `pulumi:"columnHierarchies"`
	ConditionalFormatting DashboardFilledMapConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              DashboardVisualSubtitleLabelOptionsPtrInput     `pulumi:"subtitle"`
	Title                 DashboardVisualTitleLabelOptionsPtrInput        `pulumi:"title"`
	VisualId              pulumi.StringInput                              `pulumi:"visualId"`
}

func (DashboardFilledMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapVisual)(nil)).Elem()
}

func (i DashboardFilledMapVisualArgs) ToDashboardFilledMapVisualOutput() DashboardFilledMapVisualOutput {
	return i.ToDashboardFilledMapVisualOutputWithContext(context.Background())
}

func (i DashboardFilledMapVisualArgs) ToDashboardFilledMapVisualOutputWithContext(ctx context.Context) DashboardFilledMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapVisualOutput)
}

func (i DashboardFilledMapVisualArgs) ToDashboardFilledMapVisualPtrOutput() DashboardFilledMapVisualPtrOutput {
	return i.ToDashboardFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i DashboardFilledMapVisualArgs) ToDashboardFilledMapVisualPtrOutputWithContext(ctx context.Context) DashboardFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapVisualOutput).ToDashboardFilledMapVisualPtrOutputWithContext(ctx)
}

// DashboardFilledMapVisualPtrInput is an input type that accepts DashboardFilledMapVisualArgs, DashboardFilledMapVisualPtr and DashboardFilledMapVisualPtrOutput values.
// You can construct a concrete instance of `DashboardFilledMapVisualPtrInput` via:
//
//	        DashboardFilledMapVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardFilledMapVisualPtrInput interface {
	pulumi.Input

	ToDashboardFilledMapVisualPtrOutput() DashboardFilledMapVisualPtrOutput
	ToDashboardFilledMapVisualPtrOutputWithContext(context.Context) DashboardFilledMapVisualPtrOutput
}

type dashboardFilledMapVisualPtrType DashboardFilledMapVisualArgs

func DashboardFilledMapVisualPtr(v *DashboardFilledMapVisualArgs) DashboardFilledMapVisualPtrInput {
	return (*dashboardFilledMapVisualPtrType)(v)
}

func (*dashboardFilledMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapVisual)(nil)).Elem()
}

func (i *dashboardFilledMapVisualPtrType) ToDashboardFilledMapVisualPtrOutput() DashboardFilledMapVisualPtrOutput {
	return i.ToDashboardFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardFilledMapVisualPtrType) ToDashboardFilledMapVisualPtrOutputWithContext(ctx context.Context) DashboardFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilledMapVisualPtrOutput)
}

type DashboardFilledMapVisualOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilledMapVisual)(nil)).Elem()
}

func (o DashboardFilledMapVisualOutput) ToDashboardFilledMapVisualOutput() DashboardFilledMapVisualOutput {
	return o
}

func (o DashboardFilledMapVisualOutput) ToDashboardFilledMapVisualOutputWithContext(ctx context.Context) DashboardFilledMapVisualOutput {
	return o
}

func (o DashboardFilledMapVisualOutput) ToDashboardFilledMapVisualPtrOutput() DashboardFilledMapVisualPtrOutput {
	return o.ToDashboardFilledMapVisualPtrOutputWithContext(context.Background())
}

func (o DashboardFilledMapVisualOutput) ToDashboardFilledMapVisualPtrOutputWithContext(ctx context.Context) DashboardFilledMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilledMapVisual) *DashboardFilledMapVisual {
		return &v
	}).(DashboardFilledMapVisualPtrOutput)
}

func (o DashboardFilledMapVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardFilledMapVisualOutput) ChartConfiguration() DashboardFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) *DashboardFilledMapConfiguration { return v.ChartConfiguration }).(DashboardFilledMapConfigurationPtrOutput)
}

func (o DashboardFilledMapVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardFilledMapVisualOutput) ConditionalFormatting() DashboardFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) *DashboardFilledMapConditionalFormatting {
		return v.ConditionalFormatting
	}).(DashboardFilledMapConditionalFormattingPtrOutput)
}

func (o DashboardFilledMapVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardFilledMapVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardFilledMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilledMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardFilledMapVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilledMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilledMapVisual)(nil)).Elem()
}

func (o DashboardFilledMapVisualPtrOutput) ToDashboardFilledMapVisualPtrOutput() DashboardFilledMapVisualPtrOutput {
	return o
}

func (o DashboardFilledMapVisualPtrOutput) ToDashboardFilledMapVisualPtrOutputWithContext(ctx context.Context) DashboardFilledMapVisualPtrOutput {
	return o
}

func (o DashboardFilledMapVisualPtrOutput) Elem() DashboardFilledMapVisualOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) DashboardFilledMapVisual {
		if v != nil {
			return *v
		}
		var ret DashboardFilledMapVisual
		return ret
	}).(DashboardFilledMapVisualOutput)
}

func (o DashboardFilledMapVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardFilledMapVisualPtrOutput) ChartConfiguration() DashboardFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) *DashboardFilledMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardFilledMapConfigurationPtrOutput)
}

func (o DashboardFilledMapVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardFilledMapVisualPtrOutput) ConditionalFormatting() DashboardFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) *DashboardFilledMapConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(DashboardFilledMapConditionalFormattingPtrOutput)
}

func (o DashboardFilledMapVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardFilledMapVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardFilledMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilledMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardFilter struct {
	CategoryFilter        *DashboardCategoryFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *DashboardNumericEqualityFilter `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    *DashboardNumericRangeFilter    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   *DashboardRelativeDatesFilter   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    *DashboardTimeEqualityFilter    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       *DashboardTimeRangeFilter       `pulumi:"timeRangeFilter"`
	TopBottomFilter       *DashboardTopBottomFilter       `pulumi:"topBottomFilter"`
}

// DashboardFilterInput is an input type that accepts DashboardFilterArgs and DashboardFilterOutput values.
// You can construct a concrete instance of `DashboardFilterInput` via:
//
//	DashboardFilterArgs{...}
type DashboardFilterInput interface {
	pulumi.Input

	ToDashboardFilterOutput() DashboardFilterOutput
	ToDashboardFilterOutputWithContext(context.Context) DashboardFilterOutput
}

type DashboardFilterArgs struct {
	CategoryFilter        DashboardCategoryFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter DashboardNumericEqualityFilterPtrInput `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    DashboardNumericRangeFilterPtrInput    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   DashboardRelativeDatesFilterPtrInput   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    DashboardTimeEqualityFilterPtrInput    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       DashboardTimeRangeFilterPtrInput       `pulumi:"timeRangeFilter"`
	TopBottomFilter       DashboardTopBottomFilterPtrInput       `pulumi:"topBottomFilter"`
}

func (DashboardFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilter)(nil)).Elem()
}

func (i DashboardFilterArgs) ToDashboardFilterOutput() DashboardFilterOutput {
	return i.ToDashboardFilterOutputWithContext(context.Background())
}

func (i DashboardFilterArgs) ToDashboardFilterOutputWithContext(ctx context.Context) DashboardFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOutput)
}

// DashboardFilterArrayInput is an input type that accepts DashboardFilterArray and DashboardFilterArrayOutput values.
// You can construct a concrete instance of `DashboardFilterArrayInput` via:
//
//	DashboardFilterArray{ DashboardFilterArgs{...} }
type DashboardFilterArrayInput interface {
	pulumi.Input

	ToDashboardFilterArrayOutput() DashboardFilterArrayOutput
	ToDashboardFilterArrayOutputWithContext(context.Context) DashboardFilterArrayOutput
}

type DashboardFilterArray []DashboardFilterInput

func (DashboardFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilter)(nil)).Elem()
}

func (i DashboardFilterArray) ToDashboardFilterArrayOutput() DashboardFilterArrayOutput {
	return i.ToDashboardFilterArrayOutputWithContext(context.Background())
}

func (i DashboardFilterArray) ToDashboardFilterArrayOutputWithContext(ctx context.Context) DashboardFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterArrayOutput)
}

type DashboardFilterOutput struct{ *pulumi.OutputState }

func (DashboardFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilter)(nil)).Elem()
}

func (o DashboardFilterOutput) ToDashboardFilterOutput() DashboardFilterOutput {
	return o
}

func (o DashboardFilterOutput) ToDashboardFilterOutputWithContext(ctx context.Context) DashboardFilterOutput {
	return o
}

func (o DashboardFilterOutput) CategoryFilter() DashboardCategoryFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardCategoryFilter { return v.CategoryFilter }).(DashboardCategoryFilterPtrOutput)
}

func (o DashboardFilterOutput) NumericEqualityFilter() DashboardNumericEqualityFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardNumericEqualityFilter { return v.NumericEqualityFilter }).(DashboardNumericEqualityFilterPtrOutput)
}

func (o DashboardFilterOutput) NumericRangeFilter() DashboardNumericRangeFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardNumericRangeFilter { return v.NumericRangeFilter }).(DashboardNumericRangeFilterPtrOutput)
}

func (o DashboardFilterOutput) RelativeDatesFilter() DashboardRelativeDatesFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardRelativeDatesFilter { return v.RelativeDatesFilter }).(DashboardRelativeDatesFilterPtrOutput)
}

func (o DashboardFilterOutput) TimeEqualityFilter() DashboardTimeEqualityFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardTimeEqualityFilter { return v.TimeEqualityFilter }).(DashboardTimeEqualityFilterPtrOutput)
}

func (o DashboardFilterOutput) TimeRangeFilter() DashboardTimeRangeFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardTimeRangeFilter { return v.TimeRangeFilter }).(DashboardTimeRangeFilterPtrOutput)
}

func (o DashboardFilterOutput) TopBottomFilter() DashboardTopBottomFilterPtrOutput {
	return o.ApplyT(func(v DashboardFilter) *DashboardTopBottomFilter { return v.TopBottomFilter }).(DashboardTopBottomFilterPtrOutput)
}

type DashboardFilterArrayOutput struct{ *pulumi.OutputState }

func (DashboardFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilter)(nil)).Elem()
}

func (o DashboardFilterArrayOutput) ToDashboardFilterArrayOutput() DashboardFilterArrayOutput {
	return o
}

func (o DashboardFilterArrayOutput) ToDashboardFilterArrayOutputWithContext(ctx context.Context) DashboardFilterArrayOutput {
	return o
}

func (o DashboardFilterArrayOutput) Index(i pulumi.IntInput) DashboardFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFilter {
		return vs[0].([]DashboardFilter)[vs[1].(int)]
	}).(DashboardFilterOutput)
}

type DashboardFilterControl struct {
	DateTimePicker   *DashboardFilterDateTimePickerControl   `pulumi:"dateTimePicker"`
	Dropdown         *DashboardFilterDropDownControl         `pulumi:"dropdown"`
	List             *DashboardFilterListControl             `pulumi:"list"`
	RelativeDateTime *DashboardFilterRelativeDateTimeControl `pulumi:"relativeDateTime"`
	Slider           *DashboardFilterSliderControl           `pulumi:"slider"`
	TextArea         *DashboardFilterTextAreaControl         `pulumi:"textArea"`
	TextField        *DashboardFilterTextFieldControl        `pulumi:"textField"`
}

// DashboardFilterControlInput is an input type that accepts DashboardFilterControlArgs and DashboardFilterControlOutput values.
// You can construct a concrete instance of `DashboardFilterControlInput` via:
//
//	DashboardFilterControlArgs{...}
type DashboardFilterControlInput interface {
	pulumi.Input

	ToDashboardFilterControlOutput() DashboardFilterControlOutput
	ToDashboardFilterControlOutputWithContext(context.Context) DashboardFilterControlOutput
}

type DashboardFilterControlArgs struct {
	DateTimePicker   DashboardFilterDateTimePickerControlPtrInput   `pulumi:"dateTimePicker"`
	Dropdown         DashboardFilterDropDownControlPtrInput         `pulumi:"dropdown"`
	List             DashboardFilterListControlPtrInput             `pulumi:"list"`
	RelativeDateTime DashboardFilterRelativeDateTimeControlPtrInput `pulumi:"relativeDateTime"`
	Slider           DashboardFilterSliderControlPtrInput           `pulumi:"slider"`
	TextArea         DashboardFilterTextAreaControlPtrInput         `pulumi:"textArea"`
	TextField        DashboardFilterTextFieldControlPtrInput        `pulumi:"textField"`
}

func (DashboardFilterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterControl)(nil)).Elem()
}

func (i DashboardFilterControlArgs) ToDashboardFilterControlOutput() DashboardFilterControlOutput {
	return i.ToDashboardFilterControlOutputWithContext(context.Background())
}

func (i DashboardFilterControlArgs) ToDashboardFilterControlOutputWithContext(ctx context.Context) DashboardFilterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterControlOutput)
}

// DashboardFilterControlArrayInput is an input type that accepts DashboardFilterControlArray and DashboardFilterControlArrayOutput values.
// You can construct a concrete instance of `DashboardFilterControlArrayInput` via:
//
//	DashboardFilterControlArray{ DashboardFilterControlArgs{...} }
type DashboardFilterControlArrayInput interface {
	pulumi.Input

	ToDashboardFilterControlArrayOutput() DashboardFilterControlArrayOutput
	ToDashboardFilterControlArrayOutputWithContext(context.Context) DashboardFilterControlArrayOutput
}

type DashboardFilterControlArray []DashboardFilterControlInput

func (DashboardFilterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilterControl)(nil)).Elem()
}

func (i DashboardFilterControlArray) ToDashboardFilterControlArrayOutput() DashboardFilterControlArrayOutput {
	return i.ToDashboardFilterControlArrayOutputWithContext(context.Background())
}

func (i DashboardFilterControlArray) ToDashboardFilterControlArrayOutputWithContext(ctx context.Context) DashboardFilterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterControlArrayOutput)
}

type DashboardFilterControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterControl)(nil)).Elem()
}

func (o DashboardFilterControlOutput) ToDashboardFilterControlOutput() DashboardFilterControlOutput {
	return o
}

func (o DashboardFilterControlOutput) ToDashboardFilterControlOutputWithContext(ctx context.Context) DashboardFilterControlOutput {
	return o
}

func (o DashboardFilterControlOutput) DateTimePicker() DashboardFilterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterDateTimePickerControl { return v.DateTimePicker }).(DashboardFilterDateTimePickerControlPtrOutput)
}

func (o DashboardFilterControlOutput) Dropdown() DashboardFilterDropDownControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterDropDownControl { return v.Dropdown }).(DashboardFilterDropDownControlPtrOutput)
}

func (o DashboardFilterControlOutput) List() DashboardFilterListControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterListControl { return v.List }).(DashboardFilterListControlPtrOutput)
}

func (o DashboardFilterControlOutput) RelativeDateTime() DashboardFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterRelativeDateTimeControl { return v.RelativeDateTime }).(DashboardFilterRelativeDateTimeControlPtrOutput)
}

func (o DashboardFilterControlOutput) Slider() DashboardFilterSliderControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterSliderControl { return v.Slider }).(DashboardFilterSliderControlPtrOutput)
}

func (o DashboardFilterControlOutput) TextArea() DashboardFilterTextAreaControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterTextAreaControl { return v.TextArea }).(DashboardFilterTextAreaControlPtrOutput)
}

func (o DashboardFilterControlOutput) TextField() DashboardFilterTextFieldControlPtrOutput {
	return o.ApplyT(func(v DashboardFilterControl) *DashboardFilterTextFieldControl { return v.TextField }).(DashboardFilterTextFieldControlPtrOutput)
}

type DashboardFilterControlArrayOutput struct{ *pulumi.OutputState }

func (DashboardFilterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilterControl)(nil)).Elem()
}

func (o DashboardFilterControlArrayOutput) ToDashboardFilterControlArrayOutput() DashboardFilterControlArrayOutput {
	return o
}

func (o DashboardFilterControlArrayOutput) ToDashboardFilterControlArrayOutputWithContext(ctx context.Context) DashboardFilterControlArrayOutput {
	return o
}

func (o DashboardFilterControlArrayOutput) Index(i pulumi.IntInput) DashboardFilterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFilterControl {
		return vs[0].([]DashboardFilterControl)[vs[1].(int)]
	}).(DashboardFilterControlOutput)
}

type DashboardFilterDateTimePickerControl struct {
	DisplayOptions  *DashboardDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                        `pulumi:"filterControlId"`
	SourceFilterId  string                                        `pulumi:"sourceFilterId"`
	Title           string                                        `pulumi:"title"`
	Type            *DashboardSheetControlDateTimePickerType      `pulumi:"type"`
}

// DashboardFilterDateTimePickerControlInput is an input type that accepts DashboardFilterDateTimePickerControlArgs and DashboardFilterDateTimePickerControlOutput values.
// You can construct a concrete instance of `DashboardFilterDateTimePickerControlInput` via:
//
//	DashboardFilterDateTimePickerControlArgs{...}
type DashboardFilterDateTimePickerControlInput interface {
	pulumi.Input

	ToDashboardFilterDateTimePickerControlOutput() DashboardFilterDateTimePickerControlOutput
	ToDashboardFilterDateTimePickerControlOutputWithContext(context.Context) DashboardFilterDateTimePickerControlOutput
}

type DashboardFilterDateTimePickerControlArgs struct {
	DisplayOptions  DashboardDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                   `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                   `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                   `pulumi:"title"`
	Type            DashboardSheetControlDateTimePickerTypePtrInput      `pulumi:"type"`
}

func (DashboardFilterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterDateTimePickerControl)(nil)).Elem()
}

func (i DashboardFilterDateTimePickerControlArgs) ToDashboardFilterDateTimePickerControlOutput() DashboardFilterDateTimePickerControlOutput {
	return i.ToDashboardFilterDateTimePickerControlOutputWithContext(context.Background())
}

func (i DashboardFilterDateTimePickerControlArgs) ToDashboardFilterDateTimePickerControlOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDateTimePickerControlOutput)
}

func (i DashboardFilterDateTimePickerControlArgs) ToDashboardFilterDateTimePickerControlPtrOutput() DashboardFilterDateTimePickerControlPtrOutput {
	return i.ToDashboardFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterDateTimePickerControlArgs) ToDashboardFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDateTimePickerControlOutput).ToDashboardFilterDateTimePickerControlPtrOutputWithContext(ctx)
}

// DashboardFilterDateTimePickerControlPtrInput is an input type that accepts DashboardFilterDateTimePickerControlArgs, DashboardFilterDateTimePickerControlPtr and DashboardFilterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterDateTimePickerControlPtrInput` via:
//
//	        DashboardFilterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterDateTimePickerControlPtrOutput() DashboardFilterDateTimePickerControlPtrOutput
	ToDashboardFilterDateTimePickerControlPtrOutputWithContext(context.Context) DashboardFilterDateTimePickerControlPtrOutput
}

type dashboardFilterDateTimePickerControlPtrType DashboardFilterDateTimePickerControlArgs

func DashboardFilterDateTimePickerControlPtr(v *DashboardFilterDateTimePickerControlArgs) DashboardFilterDateTimePickerControlPtrInput {
	return (*dashboardFilterDateTimePickerControlPtrType)(v)
}

func (*dashboardFilterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterDateTimePickerControl)(nil)).Elem()
}

func (i *dashboardFilterDateTimePickerControlPtrType) ToDashboardFilterDateTimePickerControlPtrOutput() DashboardFilterDateTimePickerControlPtrOutput {
	return i.ToDashboardFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterDateTimePickerControlPtrType) ToDashboardFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDateTimePickerControlPtrOutput)
}

type DashboardFilterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterDateTimePickerControl)(nil)).Elem()
}

func (o DashboardFilterDateTimePickerControlOutput) ToDashboardFilterDateTimePickerControlOutput() DashboardFilterDateTimePickerControlOutput {
	return o
}

func (o DashboardFilterDateTimePickerControlOutput) ToDashboardFilterDateTimePickerControlOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlOutput {
	return o
}

func (o DashboardFilterDateTimePickerControlOutput) ToDashboardFilterDateTimePickerControlPtrOutput() DashboardFilterDateTimePickerControlPtrOutput {
	return o.ToDashboardFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterDateTimePickerControlOutput) ToDashboardFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterDateTimePickerControl) *DashboardFilterDateTimePickerControl {
		return &v
	}).(DashboardFilterDateTimePickerControlPtrOutput)
}

func (o DashboardFilterDateTimePickerControlOutput) DisplayOptions() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterDateTimePickerControl) *DashboardDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterDateTimePickerControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDateTimePickerControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterDateTimePickerControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDateTimePickerControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardFilterDateTimePickerControlOutput) Type() DashboardSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v DashboardFilterDateTimePickerControl) *DashboardSheetControlDateTimePickerType { return v.Type }).(DashboardSheetControlDateTimePickerTypePtrOutput)
}

type DashboardFilterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterDateTimePickerControl)(nil)).Elem()
}

func (o DashboardFilterDateTimePickerControlPtrOutput) ToDashboardFilterDateTimePickerControlPtrOutput() DashboardFilterDateTimePickerControlPtrOutput {
	return o
}

func (o DashboardFilterDateTimePickerControlPtrOutput) ToDashboardFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardFilterDateTimePickerControlPtrOutput {
	return o
}

func (o DashboardFilterDateTimePickerControlPtrOutput) Elem() DashboardFilterDateTimePickerControlOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) DashboardFilterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterDateTimePickerControl
		return ret
	}).(DashboardFilterDateTimePickerControlOutput)
}

func (o DashboardFilterDateTimePickerControlPtrOutput) DisplayOptions() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) *DashboardDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterDateTimePickerControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDateTimePickerControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDateTimePickerControlPtrOutput) Type() DashboardSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v *DashboardFilterDateTimePickerControl) *DashboardSheetControlDateTimePickerType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlDateTimePickerTypePtrOutput)
}

type DashboardFilterDropDownControl struct {
	CascadingControlConfiguration *DashboardCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *DashboardDropDownControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId               string                                  `pulumi:"filterControlId"`
	SelectableValues              *DashboardFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                  `pulumi:"sourceFilterId"`
	Title                         string                                  `pulumi:"title"`
	Type                          *DashboardSheetControlListType          `pulumi:"type"`
}

// DashboardFilterDropDownControlInput is an input type that accepts DashboardFilterDropDownControlArgs and DashboardFilterDropDownControlOutput values.
// You can construct a concrete instance of `DashboardFilterDropDownControlInput` via:
//
//	DashboardFilterDropDownControlArgs{...}
type DashboardFilterDropDownControlInput interface {
	pulumi.Input

	ToDashboardFilterDropDownControlOutput() DashboardFilterDropDownControlOutput
	ToDashboardFilterDropDownControlOutputWithContext(context.Context) DashboardFilterDropDownControlOutput
}

type DashboardFilterDropDownControlArgs struct {
	CascadingControlConfiguration DashboardCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                DashboardDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                             `pulumi:"filterControlId"`
	SelectableValues              DashboardFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                             `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                             `pulumi:"title"`
	Type                          DashboardSheetControlListTypePtrInput          `pulumi:"type"`
}

func (DashboardFilterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterDropDownControl)(nil)).Elem()
}

func (i DashboardFilterDropDownControlArgs) ToDashboardFilterDropDownControlOutput() DashboardFilterDropDownControlOutput {
	return i.ToDashboardFilterDropDownControlOutputWithContext(context.Background())
}

func (i DashboardFilterDropDownControlArgs) ToDashboardFilterDropDownControlOutputWithContext(ctx context.Context) DashboardFilterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDropDownControlOutput)
}

func (i DashboardFilterDropDownControlArgs) ToDashboardFilterDropDownControlPtrOutput() DashboardFilterDropDownControlPtrOutput {
	return i.ToDashboardFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterDropDownControlArgs) ToDashboardFilterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDropDownControlOutput).ToDashboardFilterDropDownControlPtrOutputWithContext(ctx)
}

// DashboardFilterDropDownControlPtrInput is an input type that accepts DashboardFilterDropDownControlArgs, DashboardFilterDropDownControlPtr and DashboardFilterDropDownControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterDropDownControlPtrInput` via:
//
//	        DashboardFilterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterDropDownControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterDropDownControlPtrOutput() DashboardFilterDropDownControlPtrOutput
	ToDashboardFilterDropDownControlPtrOutputWithContext(context.Context) DashboardFilterDropDownControlPtrOutput
}

type dashboardFilterDropDownControlPtrType DashboardFilterDropDownControlArgs

func DashboardFilterDropDownControlPtr(v *DashboardFilterDropDownControlArgs) DashboardFilterDropDownControlPtrInput {
	return (*dashboardFilterDropDownControlPtrType)(v)
}

func (*dashboardFilterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterDropDownControl)(nil)).Elem()
}

func (i *dashboardFilterDropDownControlPtrType) ToDashboardFilterDropDownControlPtrOutput() DashboardFilterDropDownControlPtrOutput {
	return i.ToDashboardFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterDropDownControlPtrType) ToDashboardFilterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterDropDownControlPtrOutput)
}

type DashboardFilterDropDownControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterDropDownControl)(nil)).Elem()
}

func (o DashboardFilterDropDownControlOutput) ToDashboardFilterDropDownControlOutput() DashboardFilterDropDownControlOutput {
	return o
}

func (o DashboardFilterDropDownControlOutput) ToDashboardFilterDropDownControlOutputWithContext(ctx context.Context) DashboardFilterDropDownControlOutput {
	return o
}

func (o DashboardFilterDropDownControlOutput) ToDashboardFilterDropDownControlPtrOutput() DashboardFilterDropDownControlPtrOutput {
	return o.ToDashboardFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterDropDownControlOutput) ToDashboardFilterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardFilterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterDropDownControl) *DashboardFilterDropDownControl {
		return &v
	}).(DashboardFilterDropDownControlPtrOutput)
}

func (o DashboardFilterDropDownControlOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) *DashboardCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardFilterDropDownControlOutput) DisplayOptions() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) *DashboardDropDownControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterDropDownControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterDropDownControlOutput) SelectableValues() DashboardFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) *DashboardFilterSelectableValues { return v.SelectableValues }).(DashboardFilterSelectableValuesPtrOutput)
}

func (o DashboardFilterDropDownControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardFilterDropDownControlOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v DashboardFilterDropDownControl) *DashboardSheetControlListType { return v.Type }).(DashboardSheetControlListTypePtrOutput)
}

type DashboardFilterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterDropDownControl)(nil)).Elem()
}

func (o DashboardFilterDropDownControlPtrOutput) ToDashboardFilterDropDownControlPtrOutput() DashboardFilterDropDownControlPtrOutput {
	return o
}

func (o DashboardFilterDropDownControlPtrOutput) ToDashboardFilterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardFilterDropDownControlPtrOutput {
	return o
}

func (o DashboardFilterDropDownControlPtrOutput) Elem() DashboardFilterDropDownControlOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) DashboardFilterDropDownControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterDropDownControl
		return ret
	}).(DashboardFilterDropDownControlOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *DashboardCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) DisplayOptions() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *DashboardDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) SelectableValues() DashboardFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *DashboardFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(DashboardFilterSelectableValuesPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterDropDownControlPtrOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *DashboardFilterDropDownControl) *DashboardSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlListTypePtrOutput)
}

type DashboardFilterGroup struct {
	CrossDataset       DashboardCrossDatasetTypes        `pulumi:"crossDataset"`
	FilterGroupId      string                            `pulumi:"filterGroupId"`
	Filters            []DashboardFilter                 `pulumi:"filters"`
	ScopeConfiguration DashboardFilterScopeConfiguration `pulumi:"scopeConfiguration"`
	Status             *DashboardWidgetStatus            `pulumi:"status"`
}

// DashboardFilterGroupInput is an input type that accepts DashboardFilterGroupArgs and DashboardFilterGroupOutput values.
// You can construct a concrete instance of `DashboardFilterGroupInput` via:
//
//	DashboardFilterGroupArgs{...}
type DashboardFilterGroupInput interface {
	pulumi.Input

	ToDashboardFilterGroupOutput() DashboardFilterGroupOutput
	ToDashboardFilterGroupOutputWithContext(context.Context) DashboardFilterGroupOutput
}

type DashboardFilterGroupArgs struct {
	CrossDataset       DashboardCrossDatasetTypesInput        `pulumi:"crossDataset"`
	FilterGroupId      pulumi.StringInput                     `pulumi:"filterGroupId"`
	Filters            DashboardFilterArrayInput              `pulumi:"filters"`
	ScopeConfiguration DashboardFilterScopeConfigurationInput `pulumi:"scopeConfiguration"`
	Status             DashboardWidgetStatusPtrInput          `pulumi:"status"`
}

func (DashboardFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterGroup)(nil)).Elem()
}

func (i DashboardFilterGroupArgs) ToDashboardFilterGroupOutput() DashboardFilterGroupOutput {
	return i.ToDashboardFilterGroupOutputWithContext(context.Background())
}

func (i DashboardFilterGroupArgs) ToDashboardFilterGroupOutputWithContext(ctx context.Context) DashboardFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterGroupOutput)
}

// DashboardFilterGroupArrayInput is an input type that accepts DashboardFilterGroupArray and DashboardFilterGroupArrayOutput values.
// You can construct a concrete instance of `DashboardFilterGroupArrayInput` via:
//
//	DashboardFilterGroupArray{ DashboardFilterGroupArgs{...} }
type DashboardFilterGroupArrayInput interface {
	pulumi.Input

	ToDashboardFilterGroupArrayOutput() DashboardFilterGroupArrayOutput
	ToDashboardFilterGroupArrayOutputWithContext(context.Context) DashboardFilterGroupArrayOutput
}

type DashboardFilterGroupArray []DashboardFilterGroupInput

func (DashboardFilterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilterGroup)(nil)).Elem()
}

func (i DashboardFilterGroupArray) ToDashboardFilterGroupArrayOutput() DashboardFilterGroupArrayOutput {
	return i.ToDashboardFilterGroupArrayOutputWithContext(context.Background())
}

func (i DashboardFilterGroupArray) ToDashboardFilterGroupArrayOutputWithContext(ctx context.Context) DashboardFilterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterGroupArrayOutput)
}

type DashboardFilterGroupOutput struct{ *pulumi.OutputState }

func (DashboardFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterGroup)(nil)).Elem()
}

func (o DashboardFilterGroupOutput) ToDashboardFilterGroupOutput() DashboardFilterGroupOutput {
	return o
}

func (o DashboardFilterGroupOutput) ToDashboardFilterGroupOutputWithContext(ctx context.Context) DashboardFilterGroupOutput {
	return o
}

func (o DashboardFilterGroupOutput) CrossDataset() DashboardCrossDatasetTypesOutput {
	return o.ApplyT(func(v DashboardFilterGroup) DashboardCrossDatasetTypes { return v.CrossDataset }).(DashboardCrossDatasetTypesOutput)
}

func (o DashboardFilterGroupOutput) FilterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterGroup) string { return v.FilterGroupId }).(pulumi.StringOutput)
}

func (o DashboardFilterGroupOutput) Filters() DashboardFilterArrayOutput {
	return o.ApplyT(func(v DashboardFilterGroup) []DashboardFilter { return v.Filters }).(DashboardFilterArrayOutput)
}

func (o DashboardFilterGroupOutput) ScopeConfiguration() DashboardFilterScopeConfigurationOutput {
	return o.ApplyT(func(v DashboardFilterGroup) DashboardFilterScopeConfiguration { return v.ScopeConfiguration }).(DashboardFilterScopeConfigurationOutput)
}

func (o DashboardFilterGroupOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v DashboardFilterGroup) *DashboardWidgetStatus { return v.Status }).(DashboardWidgetStatusPtrOutput)
}

type DashboardFilterGroupArrayOutput struct{ *pulumi.OutputState }

func (DashboardFilterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFilterGroup)(nil)).Elem()
}

func (o DashboardFilterGroupArrayOutput) ToDashboardFilterGroupArrayOutput() DashboardFilterGroupArrayOutput {
	return o
}

func (o DashboardFilterGroupArrayOutput) ToDashboardFilterGroupArrayOutputWithContext(ctx context.Context) DashboardFilterGroupArrayOutput {
	return o
}

func (o DashboardFilterGroupArrayOutput) Index(i pulumi.IntInput) DashboardFilterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFilterGroup {
		return vs[0].([]DashboardFilterGroup)[vs[1].(int)]
	}).(DashboardFilterGroupOutput)
}

type DashboardFilterListConfiguration struct {
	CategoryValues   []string                                 `pulumi:"categoryValues"`
	MatchOperator    DashboardCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	SelectAllOptions *DashboardCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// DashboardFilterListConfigurationInput is an input type that accepts DashboardFilterListConfigurationArgs and DashboardFilterListConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilterListConfigurationInput` via:
//
//	DashboardFilterListConfigurationArgs{...}
type DashboardFilterListConfigurationInput interface {
	pulumi.Input

	ToDashboardFilterListConfigurationOutput() DashboardFilterListConfigurationOutput
	ToDashboardFilterListConfigurationOutputWithContext(context.Context) DashboardFilterListConfigurationOutput
}

type DashboardFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                         `pulumi:"categoryValues"`
	MatchOperator    DashboardCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	SelectAllOptions DashboardCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (DashboardFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterListConfiguration)(nil)).Elem()
}

func (i DashboardFilterListConfigurationArgs) ToDashboardFilterListConfigurationOutput() DashboardFilterListConfigurationOutput {
	return i.ToDashboardFilterListConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilterListConfigurationArgs) ToDashboardFilterListConfigurationOutputWithContext(ctx context.Context) DashboardFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListConfigurationOutput)
}

func (i DashboardFilterListConfigurationArgs) ToDashboardFilterListConfigurationPtrOutput() DashboardFilterListConfigurationPtrOutput {
	return i.ToDashboardFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFilterListConfigurationArgs) ToDashboardFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListConfigurationOutput).ToDashboardFilterListConfigurationPtrOutputWithContext(ctx)
}

// DashboardFilterListConfigurationPtrInput is an input type that accepts DashboardFilterListConfigurationArgs, DashboardFilterListConfigurationPtr and DashboardFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFilterListConfigurationPtrInput` via:
//
//	        DashboardFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFilterListConfigurationPtrOutput() DashboardFilterListConfigurationPtrOutput
	ToDashboardFilterListConfigurationPtrOutputWithContext(context.Context) DashboardFilterListConfigurationPtrOutput
}

type dashboardFilterListConfigurationPtrType DashboardFilterListConfigurationArgs

func DashboardFilterListConfigurationPtr(v *DashboardFilterListConfigurationArgs) DashboardFilterListConfigurationPtrInput {
	return (*dashboardFilterListConfigurationPtrType)(v)
}

func (*dashboardFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterListConfiguration)(nil)).Elem()
}

func (i *dashboardFilterListConfigurationPtrType) ToDashboardFilterListConfigurationPtrOutput() DashboardFilterListConfigurationPtrOutput {
	return i.ToDashboardFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterListConfigurationPtrType) ToDashboardFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListConfigurationPtrOutput)
}

type DashboardFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterListConfiguration)(nil)).Elem()
}

func (o DashboardFilterListConfigurationOutput) ToDashboardFilterListConfigurationOutput() DashboardFilterListConfigurationOutput {
	return o
}

func (o DashboardFilterListConfigurationOutput) ToDashboardFilterListConfigurationOutputWithContext(ctx context.Context) DashboardFilterListConfigurationOutput {
	return o
}

func (o DashboardFilterListConfigurationOutput) ToDashboardFilterListConfigurationPtrOutput() DashboardFilterListConfigurationPtrOutput {
	return o.ToDashboardFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFilterListConfigurationOutput) ToDashboardFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterListConfiguration) *DashboardFilterListConfiguration {
		return &v
	}).(DashboardFilterListConfigurationPtrOutput)
}

func (o DashboardFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o DashboardFilterListConfigurationOutput) MatchOperator() DashboardCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v DashboardFilterListConfiguration) DashboardCategoryFilterMatchOperator { return v.MatchOperator }).(DashboardCategoryFilterMatchOperatorOutput)
}

func (o DashboardFilterListConfigurationOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterListConfiguration) *DashboardCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterListConfiguration)(nil)).Elem()
}

func (o DashboardFilterListConfigurationPtrOutput) ToDashboardFilterListConfigurationPtrOutput() DashboardFilterListConfigurationPtrOutput {
	return o
}

func (o DashboardFilterListConfigurationPtrOutput) ToDashboardFilterListConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterListConfigurationPtrOutput {
	return o
}

func (o DashboardFilterListConfigurationPtrOutput) Elem() DashboardFilterListConfigurationOutput {
	return o.ApplyT(func(v *DashboardFilterListConfiguration) DashboardFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFilterListConfiguration
		return ret
	}).(DashboardFilterListConfigurationOutput)
}

func (o DashboardFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o DashboardFilterListConfigurationPtrOutput) MatchOperator() DashboardCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListConfiguration) *DashboardCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(DashboardCategoryFilterMatchOperatorPtrOutput)
}

func (o DashboardFilterListConfigurationPtrOutput) SelectAllOptions() DashboardCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListConfiguration) *DashboardCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardCategoryFilterSelectAllOptionsPtrOutput)
}

type DashboardFilterListControl struct {
	CascadingControlConfiguration *DashboardCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *DashboardListControlDisplayOptions     `pulumi:"displayOptions"`
	FilterControlId               string                                  `pulumi:"filterControlId"`
	SelectableValues              *DashboardFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                  `pulumi:"sourceFilterId"`
	Title                         string                                  `pulumi:"title"`
	Type                          *DashboardSheetControlListType          `pulumi:"type"`
}

// DashboardFilterListControlInput is an input type that accepts DashboardFilterListControlArgs and DashboardFilterListControlOutput values.
// You can construct a concrete instance of `DashboardFilterListControlInput` via:
//
//	DashboardFilterListControlArgs{...}
type DashboardFilterListControlInput interface {
	pulumi.Input

	ToDashboardFilterListControlOutput() DashboardFilterListControlOutput
	ToDashboardFilterListControlOutputWithContext(context.Context) DashboardFilterListControlOutput
}

type DashboardFilterListControlArgs struct {
	CascadingControlConfiguration DashboardCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                DashboardListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                             `pulumi:"filterControlId"`
	SelectableValues              DashboardFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                             `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                             `pulumi:"title"`
	Type                          DashboardSheetControlListTypePtrInput          `pulumi:"type"`
}

func (DashboardFilterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterListControl)(nil)).Elem()
}

func (i DashboardFilterListControlArgs) ToDashboardFilterListControlOutput() DashboardFilterListControlOutput {
	return i.ToDashboardFilterListControlOutputWithContext(context.Background())
}

func (i DashboardFilterListControlArgs) ToDashboardFilterListControlOutputWithContext(ctx context.Context) DashboardFilterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListControlOutput)
}

func (i DashboardFilterListControlArgs) ToDashboardFilterListControlPtrOutput() DashboardFilterListControlPtrOutput {
	return i.ToDashboardFilterListControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterListControlArgs) ToDashboardFilterListControlPtrOutputWithContext(ctx context.Context) DashboardFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListControlOutput).ToDashboardFilterListControlPtrOutputWithContext(ctx)
}

// DashboardFilterListControlPtrInput is an input type that accepts DashboardFilterListControlArgs, DashboardFilterListControlPtr and DashboardFilterListControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterListControlPtrInput` via:
//
//	        DashboardFilterListControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterListControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterListControlPtrOutput() DashboardFilterListControlPtrOutput
	ToDashboardFilterListControlPtrOutputWithContext(context.Context) DashboardFilterListControlPtrOutput
}

type dashboardFilterListControlPtrType DashboardFilterListControlArgs

func DashboardFilterListControlPtr(v *DashboardFilterListControlArgs) DashboardFilterListControlPtrInput {
	return (*dashboardFilterListControlPtrType)(v)
}

func (*dashboardFilterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterListControl)(nil)).Elem()
}

func (i *dashboardFilterListControlPtrType) ToDashboardFilterListControlPtrOutput() DashboardFilterListControlPtrOutput {
	return i.ToDashboardFilterListControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterListControlPtrType) ToDashboardFilterListControlPtrOutputWithContext(ctx context.Context) DashboardFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterListControlPtrOutput)
}

type DashboardFilterListControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterListControl)(nil)).Elem()
}

func (o DashboardFilterListControlOutput) ToDashboardFilterListControlOutput() DashboardFilterListControlOutput {
	return o
}

func (o DashboardFilterListControlOutput) ToDashboardFilterListControlOutputWithContext(ctx context.Context) DashboardFilterListControlOutput {
	return o
}

func (o DashboardFilterListControlOutput) ToDashboardFilterListControlPtrOutput() DashboardFilterListControlPtrOutput {
	return o.ToDashboardFilterListControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterListControlOutput) ToDashboardFilterListControlPtrOutputWithContext(ctx context.Context) DashboardFilterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterListControl) *DashboardFilterListControl {
		return &v
	}).(DashboardFilterListControlPtrOutput)
}

func (o DashboardFilterListControlOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilterListControl) *DashboardCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardFilterListControlOutput) DisplayOptions() DashboardListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterListControl) *DashboardListControlDisplayOptions { return v.DisplayOptions }).(DashboardListControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterListControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterListControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterListControlOutput) SelectableValues() DashboardFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v DashboardFilterListControl) *DashboardFilterSelectableValues { return v.SelectableValues }).(DashboardFilterSelectableValuesPtrOutput)
}

func (o DashboardFilterListControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterListControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardFilterListControlOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v DashboardFilterListControl) *DashboardSheetControlListType { return v.Type }).(DashboardSheetControlListTypePtrOutput)
}

type DashboardFilterListControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterListControl)(nil)).Elem()
}

func (o DashboardFilterListControlPtrOutput) ToDashboardFilterListControlPtrOutput() DashboardFilterListControlPtrOutput {
	return o
}

func (o DashboardFilterListControlPtrOutput) ToDashboardFilterListControlPtrOutputWithContext(ctx context.Context) DashboardFilterListControlPtrOutput {
	return o
}

func (o DashboardFilterListControlPtrOutput) Elem() DashboardFilterListControlOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) DashboardFilterListControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterListControl
		return ret
	}).(DashboardFilterListControlOutput)
}

func (o DashboardFilterListControlPtrOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *DashboardCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) DisplayOptions() DashboardListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *DashboardListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardListControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) SelectableValues() DashboardFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *DashboardFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(DashboardFilterSelectableValuesPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterListControlPtrOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *DashboardFilterListControl) *DashboardSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlListTypePtrOutput)
}

type DashboardFilterOperationSelectedFieldsConfiguration struct {
	SelectedFieldOptions *DashboardSelectedFieldOptions `pulumi:"selectedFieldOptions"`
	SelectedFields       []string                       `pulumi:"selectedFields"`
}

// DashboardFilterOperationSelectedFieldsConfigurationInput is an input type that accepts DashboardFilterOperationSelectedFieldsConfigurationArgs and DashboardFilterOperationSelectedFieldsConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilterOperationSelectedFieldsConfigurationInput` via:
//
//	DashboardFilterOperationSelectedFieldsConfigurationArgs{...}
type DashboardFilterOperationSelectedFieldsConfigurationInput interface {
	pulumi.Input

	ToDashboardFilterOperationSelectedFieldsConfigurationOutput() DashboardFilterOperationSelectedFieldsConfigurationOutput
	ToDashboardFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Context) DashboardFilterOperationSelectedFieldsConfigurationOutput
}

type DashboardFilterOperationSelectedFieldsConfigurationArgs struct {
	SelectedFieldOptions DashboardSelectedFieldOptionsPtrInput `pulumi:"selectedFieldOptions"`
	SelectedFields       pulumi.StringArrayInput               `pulumi:"selectedFields"`
}

func (DashboardFilterOperationSelectedFieldsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i DashboardFilterOperationSelectedFieldsConfigurationArgs) ToDashboardFilterOperationSelectedFieldsConfigurationOutput() DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return i.ToDashboardFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilterOperationSelectedFieldsConfigurationArgs) ToDashboardFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationSelectedFieldsConfigurationOutput)
}

func (i DashboardFilterOperationSelectedFieldsConfigurationArgs) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutput() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFilterOperationSelectedFieldsConfigurationArgs) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationSelectedFieldsConfigurationOutput).ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx)
}

// DashboardFilterOperationSelectedFieldsConfigurationPtrInput is an input type that accepts DashboardFilterOperationSelectedFieldsConfigurationArgs, DashboardFilterOperationSelectedFieldsConfigurationPtr and DashboardFilterOperationSelectedFieldsConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFilterOperationSelectedFieldsConfigurationPtrInput` via:
//
//	        DashboardFilterOperationSelectedFieldsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterOperationSelectedFieldsConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutput() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput
	ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Context) DashboardFilterOperationSelectedFieldsConfigurationPtrOutput
}

type dashboardFilterOperationSelectedFieldsConfigurationPtrType DashboardFilterOperationSelectedFieldsConfigurationArgs

func DashboardFilterOperationSelectedFieldsConfigurationPtr(v *DashboardFilterOperationSelectedFieldsConfigurationArgs) DashboardFilterOperationSelectedFieldsConfigurationPtrInput {
	return (*dashboardFilterOperationSelectedFieldsConfigurationPtrType)(v)
}

func (*dashboardFilterOperationSelectedFieldsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i *dashboardFilterOperationSelectedFieldsConfigurationPtrType) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutput() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterOperationSelectedFieldsConfigurationPtrType) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationSelectedFieldsConfigurationPtrOutput)
}

type DashboardFilterOperationSelectedFieldsConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilterOperationSelectedFieldsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) ToDashboardFilterOperationSelectedFieldsConfigurationOutput() DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) ToDashboardFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutput() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterOperationSelectedFieldsConfiguration) *DashboardFilterOperationSelectedFieldsConfiguration {
		return &v
	}).(DashboardFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) SelectedFieldOptions() DashboardSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterOperationSelectedFieldsConfiguration) *DashboardSelectedFieldOptions {
		return v.SelectedFieldOptions
	}).(DashboardSelectedFieldOptionsPtrOutput)
}

func (o DashboardFilterOperationSelectedFieldsConfigurationOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardFilterOperationSelectedFieldsConfiguration) []string { return v.SelectedFields }).(pulumi.StringArrayOutput)
}

type DashboardFilterOperationSelectedFieldsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutput() DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) ToDashboardFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) Elem() DashboardFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v *DashboardFilterOperationSelectedFieldsConfiguration) DashboardFilterOperationSelectedFieldsConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFilterOperationSelectedFieldsConfiguration
		return ret
	}).(DashboardFilterOperationSelectedFieldsConfigurationOutput)
}

func (o DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFieldOptions() DashboardSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterOperationSelectedFieldsConfiguration) *DashboardSelectedFieldOptions {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(DashboardSelectedFieldOptionsPtrOutput)
}

func (o DashboardFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardFilterOperationSelectedFieldsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SelectedFields
	}).(pulumi.StringArrayOutput)
}

type DashboardFilterOperationTargetVisualsConfiguration struct {
	SameSheetTargetVisualConfiguration *DashboardSameSheetTargetVisualConfiguration `pulumi:"sameSheetTargetVisualConfiguration"`
}

// DashboardFilterOperationTargetVisualsConfigurationInput is an input type that accepts DashboardFilterOperationTargetVisualsConfigurationArgs and DashboardFilterOperationTargetVisualsConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilterOperationTargetVisualsConfigurationInput` via:
//
//	DashboardFilterOperationTargetVisualsConfigurationArgs{...}
type DashboardFilterOperationTargetVisualsConfigurationInput interface {
	pulumi.Input

	ToDashboardFilterOperationTargetVisualsConfigurationOutput() DashboardFilterOperationTargetVisualsConfigurationOutput
	ToDashboardFilterOperationTargetVisualsConfigurationOutputWithContext(context.Context) DashboardFilterOperationTargetVisualsConfigurationOutput
}

type DashboardFilterOperationTargetVisualsConfigurationArgs struct {
	SameSheetTargetVisualConfiguration DashboardSameSheetTargetVisualConfigurationPtrInput `pulumi:"sameSheetTargetVisualConfiguration"`
}

func (DashboardFilterOperationTargetVisualsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i DashboardFilterOperationTargetVisualsConfigurationArgs) ToDashboardFilterOperationTargetVisualsConfigurationOutput() DashboardFilterOperationTargetVisualsConfigurationOutput {
	return i.ToDashboardFilterOperationTargetVisualsConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilterOperationTargetVisualsConfigurationArgs) ToDashboardFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationTargetVisualsConfigurationOutput)
}

func (i DashboardFilterOperationTargetVisualsConfigurationArgs) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutput() DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFilterOperationTargetVisualsConfigurationArgs) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationTargetVisualsConfigurationOutput).ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx)
}

// DashboardFilterOperationTargetVisualsConfigurationPtrInput is an input type that accepts DashboardFilterOperationTargetVisualsConfigurationArgs, DashboardFilterOperationTargetVisualsConfigurationPtr and DashboardFilterOperationTargetVisualsConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFilterOperationTargetVisualsConfigurationPtrInput` via:
//
//	        DashboardFilterOperationTargetVisualsConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterOperationTargetVisualsConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFilterOperationTargetVisualsConfigurationPtrOutput() DashboardFilterOperationTargetVisualsConfigurationPtrOutput
	ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Context) DashboardFilterOperationTargetVisualsConfigurationPtrOutput
}

type dashboardFilterOperationTargetVisualsConfigurationPtrType DashboardFilterOperationTargetVisualsConfigurationArgs

func DashboardFilterOperationTargetVisualsConfigurationPtr(v *DashboardFilterOperationTargetVisualsConfigurationArgs) DashboardFilterOperationTargetVisualsConfigurationPtrInput {
	return (*dashboardFilterOperationTargetVisualsConfigurationPtrType)(v)
}

func (*dashboardFilterOperationTargetVisualsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i *dashboardFilterOperationTargetVisualsConfigurationPtrType) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutput() DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterOperationTargetVisualsConfigurationPtrType) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterOperationTargetVisualsConfigurationPtrOutput)
}

type DashboardFilterOperationTargetVisualsConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilterOperationTargetVisualsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o DashboardFilterOperationTargetVisualsConfigurationOutput) ToDashboardFilterOperationTargetVisualsConfigurationOutput() DashboardFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o DashboardFilterOperationTargetVisualsConfigurationOutput) ToDashboardFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o DashboardFilterOperationTargetVisualsConfigurationOutput) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutput() DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFilterOperationTargetVisualsConfigurationOutput) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterOperationTargetVisualsConfiguration) *DashboardFilterOperationTargetVisualsConfiguration {
		return &v
	}).(DashboardFilterOperationTargetVisualsConfigurationPtrOutput)
}

func (o DashboardFilterOperationTargetVisualsConfigurationOutput) SameSheetTargetVisualConfiguration() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilterOperationTargetVisualsConfiguration) *DashboardSameSheetTargetVisualConfiguration {
		return v.SameSheetTargetVisualConfiguration
	}).(DashboardSameSheetTargetVisualConfigurationPtrOutput)
}

type DashboardFilterOperationTargetVisualsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterOperationTargetVisualsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o DashboardFilterOperationTargetVisualsConfigurationPtrOutput) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutput() DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o DashboardFilterOperationTargetVisualsConfigurationPtrOutput) ToDashboardFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) DashboardFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o DashboardFilterOperationTargetVisualsConfigurationPtrOutput) Elem() DashboardFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v *DashboardFilterOperationTargetVisualsConfiguration) DashboardFilterOperationTargetVisualsConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFilterOperationTargetVisualsConfiguration
		return ret
	}).(DashboardFilterOperationTargetVisualsConfigurationOutput)
}

func (o DashboardFilterOperationTargetVisualsConfigurationPtrOutput) SameSheetTargetVisualConfiguration() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFilterOperationTargetVisualsConfiguration) *DashboardSameSheetTargetVisualConfiguration {
		if v == nil {
			return nil
		}
		return v.SameSheetTargetVisualConfiguration
	}).(DashboardSameSheetTargetVisualConfigurationPtrOutput)
}

type DashboardFilterRelativeDateTimeControl struct {
	DisplayOptions  *DashboardRelativeDateTimeControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                          `pulumi:"filterControlId"`
	SourceFilterId  string                                          `pulumi:"sourceFilterId"`
	Title           string                                          `pulumi:"title"`
}

// DashboardFilterRelativeDateTimeControlInput is an input type that accepts DashboardFilterRelativeDateTimeControlArgs and DashboardFilterRelativeDateTimeControlOutput values.
// You can construct a concrete instance of `DashboardFilterRelativeDateTimeControlInput` via:
//
//	DashboardFilterRelativeDateTimeControlArgs{...}
type DashboardFilterRelativeDateTimeControlInput interface {
	pulumi.Input

	ToDashboardFilterRelativeDateTimeControlOutput() DashboardFilterRelativeDateTimeControlOutput
	ToDashboardFilterRelativeDateTimeControlOutputWithContext(context.Context) DashboardFilterRelativeDateTimeControlOutput
}

type DashboardFilterRelativeDateTimeControlArgs struct {
	DisplayOptions  DashboardRelativeDateTimeControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                     `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                     `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                     `pulumi:"title"`
}

func (DashboardFilterRelativeDateTimeControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i DashboardFilterRelativeDateTimeControlArgs) ToDashboardFilterRelativeDateTimeControlOutput() DashboardFilterRelativeDateTimeControlOutput {
	return i.ToDashboardFilterRelativeDateTimeControlOutputWithContext(context.Background())
}

func (i DashboardFilterRelativeDateTimeControlArgs) ToDashboardFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterRelativeDateTimeControlOutput)
}

func (i DashboardFilterRelativeDateTimeControlArgs) ToDashboardFilterRelativeDateTimeControlPtrOutput() DashboardFilterRelativeDateTimeControlPtrOutput {
	return i.ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterRelativeDateTimeControlArgs) ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterRelativeDateTimeControlOutput).ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(ctx)
}

// DashboardFilterRelativeDateTimeControlPtrInput is an input type that accepts DashboardFilterRelativeDateTimeControlArgs, DashboardFilterRelativeDateTimeControlPtr and DashboardFilterRelativeDateTimeControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterRelativeDateTimeControlPtrInput` via:
//
//	        DashboardFilterRelativeDateTimeControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterRelativeDateTimeControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterRelativeDateTimeControlPtrOutput() DashboardFilterRelativeDateTimeControlPtrOutput
	ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(context.Context) DashboardFilterRelativeDateTimeControlPtrOutput
}

type dashboardFilterRelativeDateTimeControlPtrType DashboardFilterRelativeDateTimeControlArgs

func DashboardFilterRelativeDateTimeControlPtr(v *DashboardFilterRelativeDateTimeControlArgs) DashboardFilterRelativeDateTimeControlPtrInput {
	return (*dashboardFilterRelativeDateTimeControlPtrType)(v)
}

func (*dashboardFilterRelativeDateTimeControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i *dashboardFilterRelativeDateTimeControlPtrType) ToDashboardFilterRelativeDateTimeControlPtrOutput() DashboardFilterRelativeDateTimeControlPtrOutput {
	return i.ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterRelativeDateTimeControlPtrType) ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterRelativeDateTimeControlPtrOutput)
}

type DashboardFilterRelativeDateTimeControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterRelativeDateTimeControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o DashboardFilterRelativeDateTimeControlOutput) ToDashboardFilterRelativeDateTimeControlOutput() DashboardFilterRelativeDateTimeControlOutput {
	return o
}

func (o DashboardFilterRelativeDateTimeControlOutput) ToDashboardFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlOutput {
	return o
}

func (o DashboardFilterRelativeDateTimeControlOutput) ToDashboardFilterRelativeDateTimeControlPtrOutput() DashboardFilterRelativeDateTimeControlPtrOutput {
	return o.ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterRelativeDateTimeControlOutput) ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterRelativeDateTimeControl) *DashboardFilterRelativeDateTimeControl {
		return &v
	}).(DashboardFilterRelativeDateTimeControlPtrOutput)
}

func (o DashboardFilterRelativeDateTimeControlOutput) DisplayOptions() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterRelativeDateTimeControl) *DashboardRelativeDateTimeControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterRelativeDateTimeControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterRelativeDateTimeControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterRelativeDateTimeControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterRelativeDateTimeControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterRelativeDateTimeControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterRelativeDateTimeControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardFilterRelativeDateTimeControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterRelativeDateTimeControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) ToDashboardFilterRelativeDateTimeControlPtrOutput() DashboardFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) ToDashboardFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) DashboardFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) Elem() DashboardFilterRelativeDateTimeControlOutput {
	return o.ApplyT(func(v *DashboardFilterRelativeDateTimeControl) DashboardFilterRelativeDateTimeControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterRelativeDateTimeControl
		return ret
	}).(DashboardFilterRelativeDateTimeControlOutput)
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) DisplayOptions() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterRelativeDateTimeControl) *DashboardRelativeDateTimeControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterRelativeDateTimeControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardFilterScopeConfiguration struct {
	SelectedSheets *DashboardSelectedSheetsFilterScopeConfiguration `pulumi:"selectedSheets"`
}

// DashboardFilterScopeConfigurationInput is an input type that accepts DashboardFilterScopeConfigurationArgs and DashboardFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `DashboardFilterScopeConfigurationInput` via:
//
//	DashboardFilterScopeConfigurationArgs{...}
type DashboardFilterScopeConfigurationInput interface {
	pulumi.Input

	ToDashboardFilterScopeConfigurationOutput() DashboardFilterScopeConfigurationOutput
	ToDashboardFilterScopeConfigurationOutputWithContext(context.Context) DashboardFilterScopeConfigurationOutput
}

type DashboardFilterScopeConfigurationArgs struct {
	SelectedSheets DashboardSelectedSheetsFilterScopeConfigurationPtrInput `pulumi:"selectedSheets"`
}

func (DashboardFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterScopeConfiguration)(nil)).Elem()
}

func (i DashboardFilterScopeConfigurationArgs) ToDashboardFilterScopeConfigurationOutput() DashboardFilterScopeConfigurationOutput {
	return i.ToDashboardFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i DashboardFilterScopeConfigurationArgs) ToDashboardFilterScopeConfigurationOutputWithContext(ctx context.Context) DashboardFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterScopeConfigurationOutput)
}

type DashboardFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterScopeConfiguration)(nil)).Elem()
}

func (o DashboardFilterScopeConfigurationOutput) ToDashboardFilterScopeConfigurationOutput() DashboardFilterScopeConfigurationOutput {
	return o
}

func (o DashboardFilterScopeConfigurationOutput) ToDashboardFilterScopeConfigurationOutputWithContext(ctx context.Context) DashboardFilterScopeConfigurationOutput {
	return o
}

func (o DashboardFilterScopeConfigurationOutput) SelectedSheets() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFilterScopeConfiguration) *DashboardSelectedSheetsFilterScopeConfiguration {
		return v.SelectedSheets
	}).(DashboardSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type DashboardFilterSelectableValues struct {
	Values []string `pulumi:"values"`
}

// DashboardFilterSelectableValuesInput is an input type that accepts DashboardFilterSelectableValuesArgs and DashboardFilterSelectableValuesOutput values.
// You can construct a concrete instance of `DashboardFilterSelectableValuesInput` via:
//
//	DashboardFilterSelectableValuesArgs{...}
type DashboardFilterSelectableValuesInput interface {
	pulumi.Input

	ToDashboardFilterSelectableValuesOutput() DashboardFilterSelectableValuesOutput
	ToDashboardFilterSelectableValuesOutputWithContext(context.Context) DashboardFilterSelectableValuesOutput
}

type DashboardFilterSelectableValuesArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardFilterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterSelectableValues)(nil)).Elem()
}

func (i DashboardFilterSelectableValuesArgs) ToDashboardFilterSelectableValuesOutput() DashboardFilterSelectableValuesOutput {
	return i.ToDashboardFilterSelectableValuesOutputWithContext(context.Background())
}

func (i DashboardFilterSelectableValuesArgs) ToDashboardFilterSelectableValuesOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSelectableValuesOutput)
}

func (i DashboardFilterSelectableValuesArgs) ToDashboardFilterSelectableValuesPtrOutput() DashboardFilterSelectableValuesPtrOutput {
	return i.ToDashboardFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i DashboardFilterSelectableValuesArgs) ToDashboardFilterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSelectableValuesOutput).ToDashboardFilterSelectableValuesPtrOutputWithContext(ctx)
}

// DashboardFilterSelectableValuesPtrInput is an input type that accepts DashboardFilterSelectableValuesArgs, DashboardFilterSelectableValuesPtr and DashboardFilterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `DashboardFilterSelectableValuesPtrInput` via:
//
//	        DashboardFilterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterSelectableValuesPtrInput interface {
	pulumi.Input

	ToDashboardFilterSelectableValuesPtrOutput() DashboardFilterSelectableValuesPtrOutput
	ToDashboardFilterSelectableValuesPtrOutputWithContext(context.Context) DashboardFilterSelectableValuesPtrOutput
}

type dashboardFilterSelectableValuesPtrType DashboardFilterSelectableValuesArgs

func DashboardFilterSelectableValuesPtr(v *DashboardFilterSelectableValuesArgs) DashboardFilterSelectableValuesPtrInput {
	return (*dashboardFilterSelectableValuesPtrType)(v)
}

func (*dashboardFilterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterSelectableValues)(nil)).Elem()
}

func (i *dashboardFilterSelectableValuesPtrType) ToDashboardFilterSelectableValuesPtrOutput() DashboardFilterSelectableValuesPtrOutput {
	return i.ToDashboardFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterSelectableValuesPtrType) ToDashboardFilterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSelectableValuesPtrOutput)
}

type DashboardFilterSelectableValuesOutput struct{ *pulumi.OutputState }

func (DashboardFilterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterSelectableValues)(nil)).Elem()
}

func (o DashboardFilterSelectableValuesOutput) ToDashboardFilterSelectableValuesOutput() DashboardFilterSelectableValuesOutput {
	return o
}

func (o DashboardFilterSelectableValuesOutput) ToDashboardFilterSelectableValuesOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesOutput {
	return o
}

func (o DashboardFilterSelectableValuesOutput) ToDashboardFilterSelectableValuesPtrOutput() DashboardFilterSelectableValuesPtrOutput {
	return o.ToDashboardFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o DashboardFilterSelectableValuesOutput) ToDashboardFilterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterSelectableValues) *DashboardFilterSelectableValues {
		return &v
	}).(DashboardFilterSelectableValuesPtrOutput)
}

func (o DashboardFilterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardFilterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardFilterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterSelectableValues)(nil)).Elem()
}

func (o DashboardFilterSelectableValuesPtrOutput) ToDashboardFilterSelectableValuesPtrOutput() DashboardFilterSelectableValuesPtrOutput {
	return o
}

func (o DashboardFilterSelectableValuesPtrOutput) ToDashboardFilterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardFilterSelectableValuesPtrOutput {
	return o
}

func (o DashboardFilterSelectableValuesPtrOutput) Elem() DashboardFilterSelectableValuesOutput {
	return o.ApplyT(func(v *DashboardFilterSelectableValues) DashboardFilterSelectableValues {
		if v != nil {
			return *v
		}
		var ret DashboardFilterSelectableValues
		return ret
	}).(DashboardFilterSelectableValuesOutput)
}

func (o DashboardFilterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardFilterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type DashboardFilterSliderControl struct {
	DisplayOptions  *DashboardSliderControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                `pulumi:"filterControlId"`
	MaximumValue    float64                               `pulumi:"maximumValue"`
	MinimumValue    float64                               `pulumi:"minimumValue"`
	SourceFilterId  string                                `pulumi:"sourceFilterId"`
	StepSize        float64                               `pulumi:"stepSize"`
	Title           string                                `pulumi:"title"`
	Type            *DashboardSheetControlSliderType      `pulumi:"type"`
}

// DashboardFilterSliderControlInput is an input type that accepts DashboardFilterSliderControlArgs and DashboardFilterSliderControlOutput values.
// You can construct a concrete instance of `DashboardFilterSliderControlInput` via:
//
//	DashboardFilterSliderControlArgs{...}
type DashboardFilterSliderControlInput interface {
	pulumi.Input

	ToDashboardFilterSliderControlOutput() DashboardFilterSliderControlOutput
	ToDashboardFilterSliderControlOutputWithContext(context.Context) DashboardFilterSliderControlOutput
}

type DashboardFilterSliderControlArgs struct {
	DisplayOptions  DashboardSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                           `pulumi:"filterControlId"`
	MaximumValue    pulumi.Float64Input                          `pulumi:"maximumValue"`
	MinimumValue    pulumi.Float64Input                          `pulumi:"minimumValue"`
	SourceFilterId  pulumi.StringInput                           `pulumi:"sourceFilterId"`
	StepSize        pulumi.Float64Input                          `pulumi:"stepSize"`
	Title           pulumi.StringInput                           `pulumi:"title"`
	Type            DashboardSheetControlSliderTypePtrInput      `pulumi:"type"`
}

func (DashboardFilterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterSliderControl)(nil)).Elem()
}

func (i DashboardFilterSliderControlArgs) ToDashboardFilterSliderControlOutput() DashboardFilterSliderControlOutput {
	return i.ToDashboardFilterSliderControlOutputWithContext(context.Background())
}

func (i DashboardFilterSliderControlArgs) ToDashboardFilterSliderControlOutputWithContext(ctx context.Context) DashboardFilterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSliderControlOutput)
}

func (i DashboardFilterSliderControlArgs) ToDashboardFilterSliderControlPtrOutput() DashboardFilterSliderControlPtrOutput {
	return i.ToDashboardFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterSliderControlArgs) ToDashboardFilterSliderControlPtrOutputWithContext(ctx context.Context) DashboardFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSliderControlOutput).ToDashboardFilterSliderControlPtrOutputWithContext(ctx)
}

// DashboardFilterSliderControlPtrInput is an input type that accepts DashboardFilterSliderControlArgs, DashboardFilterSliderControlPtr and DashboardFilterSliderControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterSliderControlPtrInput` via:
//
//	        DashboardFilterSliderControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterSliderControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterSliderControlPtrOutput() DashboardFilterSliderControlPtrOutput
	ToDashboardFilterSliderControlPtrOutputWithContext(context.Context) DashboardFilterSliderControlPtrOutput
}

type dashboardFilterSliderControlPtrType DashboardFilterSliderControlArgs

func DashboardFilterSliderControlPtr(v *DashboardFilterSliderControlArgs) DashboardFilterSliderControlPtrInput {
	return (*dashboardFilterSliderControlPtrType)(v)
}

func (*dashboardFilterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterSliderControl)(nil)).Elem()
}

func (i *dashboardFilterSliderControlPtrType) ToDashboardFilterSliderControlPtrOutput() DashboardFilterSliderControlPtrOutput {
	return i.ToDashboardFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterSliderControlPtrType) ToDashboardFilterSliderControlPtrOutputWithContext(ctx context.Context) DashboardFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterSliderControlPtrOutput)
}

type DashboardFilterSliderControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterSliderControl)(nil)).Elem()
}

func (o DashboardFilterSliderControlOutput) ToDashboardFilterSliderControlOutput() DashboardFilterSliderControlOutput {
	return o
}

func (o DashboardFilterSliderControlOutput) ToDashboardFilterSliderControlOutputWithContext(ctx context.Context) DashboardFilterSliderControlOutput {
	return o
}

func (o DashboardFilterSliderControlOutput) ToDashboardFilterSliderControlPtrOutput() DashboardFilterSliderControlPtrOutput {
	return o.ToDashboardFilterSliderControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterSliderControlOutput) ToDashboardFilterSliderControlPtrOutputWithContext(ctx context.Context) DashboardFilterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterSliderControl) *DashboardFilterSliderControl {
		return &v
	}).(DashboardFilterSliderControlPtrOutput)
}

func (o DashboardFilterSliderControlOutput) DisplayOptions() DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterSliderControl) *DashboardSliderControlDisplayOptions { return v.DisplayOptions }).(DashboardSliderControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterSliderControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterSliderControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardFilterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o DashboardFilterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardFilterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o DashboardFilterSliderControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterSliderControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardFilterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o DashboardFilterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardFilterSliderControlOutput) Type() DashboardSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v DashboardFilterSliderControl) *DashboardSheetControlSliderType { return v.Type }).(DashboardSheetControlSliderTypePtrOutput)
}

type DashboardFilterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterSliderControl)(nil)).Elem()
}

func (o DashboardFilterSliderControlPtrOutput) ToDashboardFilterSliderControlPtrOutput() DashboardFilterSliderControlPtrOutput {
	return o
}

func (o DashboardFilterSliderControlPtrOutput) ToDashboardFilterSliderControlPtrOutputWithContext(ctx context.Context) DashboardFilterSliderControlPtrOutput {
	return o
}

func (o DashboardFilterSliderControlPtrOutput) Elem() DashboardFilterSliderControlOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) DashboardFilterSliderControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterSliderControl
		return ret
	}).(DashboardFilterSliderControlOutput)
}

func (o DashboardFilterSliderControlPtrOutput) DisplayOptions() DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *DashboardSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardSliderControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterSliderControlPtrOutput) Type() DashboardSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v *DashboardFilterSliderControl) *DashboardSheetControlSliderType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlSliderTypePtrOutput)
}

type DashboardFilterTextAreaControl struct {
	Delimiter       *string                                 `pulumi:"delimiter"`
	DisplayOptions  *DashboardTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                  `pulumi:"filterControlId"`
	SourceFilterId  string                                  `pulumi:"sourceFilterId"`
	Title           string                                  `pulumi:"title"`
}

// DashboardFilterTextAreaControlInput is an input type that accepts DashboardFilterTextAreaControlArgs and DashboardFilterTextAreaControlOutput values.
// You can construct a concrete instance of `DashboardFilterTextAreaControlInput` via:
//
//	DashboardFilterTextAreaControlArgs{...}
type DashboardFilterTextAreaControlInput interface {
	pulumi.Input

	ToDashboardFilterTextAreaControlOutput() DashboardFilterTextAreaControlOutput
	ToDashboardFilterTextAreaControlOutputWithContext(context.Context) DashboardFilterTextAreaControlOutput
}

type DashboardFilterTextAreaControlArgs struct {
	Delimiter       pulumi.StringPtrInput                          `pulumi:"delimiter"`
	DisplayOptions  DashboardTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                             `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                             `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                             `pulumi:"title"`
}

func (DashboardFilterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterTextAreaControl)(nil)).Elem()
}

func (i DashboardFilterTextAreaControlArgs) ToDashboardFilterTextAreaControlOutput() DashboardFilterTextAreaControlOutput {
	return i.ToDashboardFilterTextAreaControlOutputWithContext(context.Background())
}

func (i DashboardFilterTextAreaControlArgs) ToDashboardFilterTextAreaControlOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextAreaControlOutput)
}

func (i DashboardFilterTextAreaControlArgs) ToDashboardFilterTextAreaControlPtrOutput() DashboardFilterTextAreaControlPtrOutput {
	return i.ToDashboardFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterTextAreaControlArgs) ToDashboardFilterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextAreaControlOutput).ToDashboardFilterTextAreaControlPtrOutputWithContext(ctx)
}

// DashboardFilterTextAreaControlPtrInput is an input type that accepts DashboardFilterTextAreaControlArgs, DashboardFilterTextAreaControlPtr and DashboardFilterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterTextAreaControlPtrInput` via:
//
//	        DashboardFilterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterTextAreaControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterTextAreaControlPtrOutput() DashboardFilterTextAreaControlPtrOutput
	ToDashboardFilterTextAreaControlPtrOutputWithContext(context.Context) DashboardFilterTextAreaControlPtrOutput
}

type dashboardFilterTextAreaControlPtrType DashboardFilterTextAreaControlArgs

func DashboardFilterTextAreaControlPtr(v *DashboardFilterTextAreaControlArgs) DashboardFilterTextAreaControlPtrInput {
	return (*dashboardFilterTextAreaControlPtrType)(v)
}

func (*dashboardFilterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterTextAreaControl)(nil)).Elem()
}

func (i *dashboardFilterTextAreaControlPtrType) ToDashboardFilterTextAreaControlPtrOutput() DashboardFilterTextAreaControlPtrOutput {
	return i.ToDashboardFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterTextAreaControlPtrType) ToDashboardFilterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextAreaControlPtrOutput)
}

type DashboardFilterTextAreaControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterTextAreaControl)(nil)).Elem()
}

func (o DashboardFilterTextAreaControlOutput) ToDashboardFilterTextAreaControlOutput() DashboardFilterTextAreaControlOutput {
	return o
}

func (o DashboardFilterTextAreaControlOutput) ToDashboardFilterTextAreaControlOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlOutput {
	return o
}

func (o DashboardFilterTextAreaControlOutput) ToDashboardFilterTextAreaControlPtrOutput() DashboardFilterTextAreaControlPtrOutput {
	return o.ToDashboardFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterTextAreaControlOutput) ToDashboardFilterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterTextAreaControl) *DashboardFilterTextAreaControl {
		return &v
	}).(DashboardFilterTextAreaControlPtrOutput)
}

func (o DashboardFilterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFilterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextAreaControlOutput) DisplayOptions() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterTextAreaControl) *DashboardTextAreaControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterTextAreaControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextAreaControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterTextAreaControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextAreaControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardFilterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterTextAreaControl)(nil)).Elem()
}

func (o DashboardFilterTextAreaControlPtrOutput) ToDashboardFilterTextAreaControlPtrOutput() DashboardFilterTextAreaControlPtrOutput {
	return o
}

func (o DashboardFilterTextAreaControlPtrOutput) ToDashboardFilterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextAreaControlPtrOutput {
	return o
}

func (o DashboardFilterTextAreaControlPtrOutput) Elem() DashboardFilterTextAreaControlOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) DashboardFilterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterTextAreaControl
		return ret
	}).(DashboardFilterTextAreaControlOutput)
}

func (o DashboardFilterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextAreaControlPtrOutput) DisplayOptions() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) *DashboardTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterTextAreaControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextAreaControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardFilterTextFieldControl struct {
	DisplayOptions  *DashboardTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                   `pulumi:"filterControlId"`
	SourceFilterId  string                                   `pulumi:"sourceFilterId"`
	Title           string                                   `pulumi:"title"`
}

// DashboardFilterTextFieldControlInput is an input type that accepts DashboardFilterTextFieldControlArgs and DashboardFilterTextFieldControlOutput values.
// You can construct a concrete instance of `DashboardFilterTextFieldControlInput` via:
//
//	DashboardFilterTextFieldControlArgs{...}
type DashboardFilterTextFieldControlInput interface {
	pulumi.Input

	ToDashboardFilterTextFieldControlOutput() DashboardFilterTextFieldControlOutput
	ToDashboardFilterTextFieldControlOutputWithContext(context.Context) DashboardFilterTextFieldControlOutput
}

type DashboardFilterTextFieldControlArgs struct {
	DisplayOptions  DashboardTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                              `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                              `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                              `pulumi:"title"`
}

func (DashboardFilterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterTextFieldControl)(nil)).Elem()
}

func (i DashboardFilterTextFieldControlArgs) ToDashboardFilterTextFieldControlOutput() DashboardFilterTextFieldControlOutput {
	return i.ToDashboardFilterTextFieldControlOutputWithContext(context.Background())
}

func (i DashboardFilterTextFieldControlArgs) ToDashboardFilterTextFieldControlOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextFieldControlOutput)
}

func (i DashboardFilterTextFieldControlArgs) ToDashboardFilterTextFieldControlPtrOutput() DashboardFilterTextFieldControlPtrOutput {
	return i.ToDashboardFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i DashboardFilterTextFieldControlArgs) ToDashboardFilterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextFieldControlOutput).ToDashboardFilterTextFieldControlPtrOutputWithContext(ctx)
}

// DashboardFilterTextFieldControlPtrInput is an input type that accepts DashboardFilterTextFieldControlArgs, DashboardFilterTextFieldControlPtr and DashboardFilterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `DashboardFilterTextFieldControlPtrInput` via:
//
//	        DashboardFilterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type DashboardFilterTextFieldControlPtrInput interface {
	pulumi.Input

	ToDashboardFilterTextFieldControlPtrOutput() DashboardFilterTextFieldControlPtrOutput
	ToDashboardFilterTextFieldControlPtrOutputWithContext(context.Context) DashboardFilterTextFieldControlPtrOutput
}

type dashboardFilterTextFieldControlPtrType DashboardFilterTextFieldControlArgs

func DashboardFilterTextFieldControlPtr(v *DashboardFilterTextFieldControlArgs) DashboardFilterTextFieldControlPtrInput {
	return (*dashboardFilterTextFieldControlPtrType)(v)
}

func (*dashboardFilterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterTextFieldControl)(nil)).Elem()
}

func (i *dashboardFilterTextFieldControlPtrType) ToDashboardFilterTextFieldControlPtrOutput() DashboardFilterTextFieldControlPtrOutput {
	return i.ToDashboardFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *dashboardFilterTextFieldControlPtrType) ToDashboardFilterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFilterTextFieldControlPtrOutput)
}

type DashboardFilterTextFieldControlOutput struct{ *pulumi.OutputState }

func (DashboardFilterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFilterTextFieldControl)(nil)).Elem()
}

func (o DashboardFilterTextFieldControlOutput) ToDashboardFilterTextFieldControlOutput() DashboardFilterTextFieldControlOutput {
	return o
}

func (o DashboardFilterTextFieldControlOutput) ToDashboardFilterTextFieldControlOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlOutput {
	return o
}

func (o DashboardFilterTextFieldControlOutput) ToDashboardFilterTextFieldControlPtrOutput() DashboardFilterTextFieldControlPtrOutput {
	return o.ToDashboardFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o DashboardFilterTextFieldControlOutput) ToDashboardFilterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFilterTextFieldControl) *DashboardFilterTextFieldControl {
		return &v
	}).(DashboardFilterTextFieldControlPtrOutput)
}

func (o DashboardFilterTextFieldControlOutput) DisplayOptions() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFilterTextFieldControl) *DashboardTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterTextFieldControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextFieldControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o DashboardFilterTextFieldControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextFieldControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o DashboardFilterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFilterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardFilterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardFilterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFilterTextFieldControl)(nil)).Elem()
}

func (o DashboardFilterTextFieldControlPtrOutput) ToDashboardFilterTextFieldControlPtrOutput() DashboardFilterTextFieldControlPtrOutput {
	return o
}

func (o DashboardFilterTextFieldControlPtrOutput) ToDashboardFilterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardFilterTextFieldControlPtrOutput {
	return o
}

func (o DashboardFilterTextFieldControlPtrOutput) Elem() DashboardFilterTextFieldControlOutput {
	return o.ApplyT(func(v *DashboardFilterTextFieldControl) DashboardFilterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret DashboardFilterTextFieldControl
		return ret
	}).(DashboardFilterTextFieldControlOutput)
}

func (o DashboardFilterTextFieldControlPtrOutput) DisplayOptions() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextFieldControl) *DashboardTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

func (o DashboardFilterTextFieldControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextFieldControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFilterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardFontConfiguration struct {
	FontColor      *string                  `pulumi:"fontColor"`
	FontDecoration *DashboardFontDecoration `pulumi:"fontDecoration"`
	FontSize       *DashboardFontSize       `pulumi:"fontSize"`
	FontStyle      *DashboardFontStyle      `pulumi:"fontStyle"`
	FontWeight     *DashboardFontWeight     `pulumi:"fontWeight"`
}

// DashboardFontConfigurationInput is an input type that accepts DashboardFontConfigurationArgs and DashboardFontConfigurationOutput values.
// You can construct a concrete instance of `DashboardFontConfigurationInput` via:
//
//	DashboardFontConfigurationArgs{...}
type DashboardFontConfigurationInput interface {
	pulumi.Input

	ToDashboardFontConfigurationOutput() DashboardFontConfigurationOutput
	ToDashboardFontConfigurationOutputWithContext(context.Context) DashboardFontConfigurationOutput
}

type DashboardFontConfigurationArgs struct {
	FontColor      pulumi.StringPtrInput           `pulumi:"fontColor"`
	FontDecoration DashboardFontDecorationPtrInput `pulumi:"fontDecoration"`
	FontSize       DashboardFontSizePtrInput       `pulumi:"fontSize"`
	FontStyle      DashboardFontStylePtrInput      `pulumi:"fontStyle"`
	FontWeight     DashboardFontWeightPtrInput     `pulumi:"fontWeight"`
}

func (DashboardFontConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontConfiguration)(nil)).Elem()
}

func (i DashboardFontConfigurationArgs) ToDashboardFontConfigurationOutput() DashboardFontConfigurationOutput {
	return i.ToDashboardFontConfigurationOutputWithContext(context.Background())
}

func (i DashboardFontConfigurationArgs) ToDashboardFontConfigurationOutputWithContext(ctx context.Context) DashboardFontConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontConfigurationOutput)
}

func (i DashboardFontConfigurationArgs) ToDashboardFontConfigurationPtrOutput() DashboardFontConfigurationPtrOutput {
	return i.ToDashboardFontConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFontConfigurationArgs) ToDashboardFontConfigurationPtrOutputWithContext(ctx context.Context) DashboardFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontConfigurationOutput).ToDashboardFontConfigurationPtrOutputWithContext(ctx)
}

// DashboardFontConfigurationPtrInput is an input type that accepts DashboardFontConfigurationArgs, DashboardFontConfigurationPtr and DashboardFontConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFontConfigurationPtrInput` via:
//
//	        DashboardFontConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFontConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFontConfigurationPtrOutput() DashboardFontConfigurationPtrOutput
	ToDashboardFontConfigurationPtrOutputWithContext(context.Context) DashboardFontConfigurationPtrOutput
}

type dashboardFontConfigurationPtrType DashboardFontConfigurationArgs

func DashboardFontConfigurationPtr(v *DashboardFontConfigurationArgs) DashboardFontConfigurationPtrInput {
	return (*dashboardFontConfigurationPtrType)(v)
}

func (*dashboardFontConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontConfiguration)(nil)).Elem()
}

func (i *dashboardFontConfigurationPtrType) ToDashboardFontConfigurationPtrOutput() DashboardFontConfigurationPtrOutput {
	return i.ToDashboardFontConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFontConfigurationPtrType) ToDashboardFontConfigurationPtrOutputWithContext(ctx context.Context) DashboardFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontConfigurationPtrOutput)
}

type DashboardFontConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFontConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontConfiguration)(nil)).Elem()
}

func (o DashboardFontConfigurationOutput) ToDashboardFontConfigurationOutput() DashboardFontConfigurationOutput {
	return o
}

func (o DashboardFontConfigurationOutput) ToDashboardFontConfigurationOutputWithContext(ctx context.Context) DashboardFontConfigurationOutput {
	return o
}

func (o DashboardFontConfigurationOutput) ToDashboardFontConfigurationPtrOutput() DashboardFontConfigurationPtrOutput {
	return o.ToDashboardFontConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFontConfigurationOutput) ToDashboardFontConfigurationPtrOutputWithContext(ctx context.Context) DashboardFontConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontConfiguration) *DashboardFontConfiguration {
		return &v
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardFontConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFontConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o DashboardFontConfigurationOutput) FontDecoration() DashboardFontDecorationPtrOutput {
	return o.ApplyT(func(v DashboardFontConfiguration) *DashboardFontDecoration { return v.FontDecoration }).(DashboardFontDecorationPtrOutput)
}

func (o DashboardFontConfigurationOutput) FontSize() DashboardFontSizePtrOutput {
	return o.ApplyT(func(v DashboardFontConfiguration) *DashboardFontSize { return v.FontSize }).(DashboardFontSizePtrOutput)
}

func (o DashboardFontConfigurationOutput) FontStyle() DashboardFontStylePtrOutput {
	return o.ApplyT(func(v DashboardFontConfiguration) *DashboardFontStyle { return v.FontStyle }).(DashboardFontStylePtrOutput)
}

func (o DashboardFontConfigurationOutput) FontWeight() DashboardFontWeightPtrOutput {
	return o.ApplyT(func(v DashboardFontConfiguration) *DashboardFontWeight { return v.FontWeight }).(DashboardFontWeightPtrOutput)
}

type DashboardFontConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFontConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontConfiguration)(nil)).Elem()
}

func (o DashboardFontConfigurationPtrOutput) ToDashboardFontConfigurationPtrOutput() DashboardFontConfigurationPtrOutput {
	return o
}

func (o DashboardFontConfigurationPtrOutput) ToDashboardFontConfigurationPtrOutputWithContext(ctx context.Context) DashboardFontConfigurationPtrOutput {
	return o
}

func (o DashboardFontConfigurationPtrOutput) Elem() DashboardFontConfigurationOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) DashboardFontConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFontConfiguration
		return ret
	}).(DashboardFontConfigurationOutput)
}

func (o DashboardFontConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFontConfigurationPtrOutput) FontDecoration() DashboardFontDecorationPtrOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) *DashboardFontDecoration {
		if v == nil {
			return nil
		}
		return v.FontDecoration
	}).(DashboardFontDecorationPtrOutput)
}

func (o DashboardFontConfigurationPtrOutput) FontSize() DashboardFontSizePtrOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) *DashboardFontSize {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(DashboardFontSizePtrOutput)
}

func (o DashboardFontConfigurationPtrOutput) FontStyle() DashboardFontStylePtrOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) *DashboardFontStyle {
		if v == nil {
			return nil
		}
		return v.FontStyle
	}).(DashboardFontStylePtrOutput)
}

func (o DashboardFontConfigurationPtrOutput) FontWeight() DashboardFontWeightPtrOutput {
	return o.ApplyT(func(v *DashboardFontConfiguration) *DashboardFontWeight {
		if v == nil {
			return nil
		}
		return v.FontWeight
	}).(DashboardFontWeightPtrOutput)
}

type DashboardFontSize struct {
	Relative *DashboardRelativeFontSize `pulumi:"relative"`
}

// DashboardFontSizeInput is an input type that accepts DashboardFontSizeArgs and DashboardFontSizeOutput values.
// You can construct a concrete instance of `DashboardFontSizeInput` via:
//
//	DashboardFontSizeArgs{...}
type DashboardFontSizeInput interface {
	pulumi.Input

	ToDashboardFontSizeOutput() DashboardFontSizeOutput
	ToDashboardFontSizeOutputWithContext(context.Context) DashboardFontSizeOutput
}

type DashboardFontSizeArgs struct {
	Relative DashboardRelativeFontSizePtrInput `pulumi:"relative"`
}

func (DashboardFontSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontSize)(nil)).Elem()
}

func (i DashboardFontSizeArgs) ToDashboardFontSizeOutput() DashboardFontSizeOutput {
	return i.ToDashboardFontSizeOutputWithContext(context.Background())
}

func (i DashboardFontSizeArgs) ToDashboardFontSizeOutputWithContext(ctx context.Context) DashboardFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontSizeOutput)
}

func (i DashboardFontSizeArgs) ToDashboardFontSizePtrOutput() DashboardFontSizePtrOutput {
	return i.ToDashboardFontSizePtrOutputWithContext(context.Background())
}

func (i DashboardFontSizeArgs) ToDashboardFontSizePtrOutputWithContext(ctx context.Context) DashboardFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontSizeOutput).ToDashboardFontSizePtrOutputWithContext(ctx)
}

// DashboardFontSizePtrInput is an input type that accepts DashboardFontSizeArgs, DashboardFontSizePtr and DashboardFontSizePtrOutput values.
// You can construct a concrete instance of `DashboardFontSizePtrInput` via:
//
//	        DashboardFontSizeArgs{...}
//
//	or:
//
//	        nil
type DashboardFontSizePtrInput interface {
	pulumi.Input

	ToDashboardFontSizePtrOutput() DashboardFontSizePtrOutput
	ToDashboardFontSizePtrOutputWithContext(context.Context) DashboardFontSizePtrOutput
}

type dashboardFontSizePtrType DashboardFontSizeArgs

func DashboardFontSizePtr(v *DashboardFontSizeArgs) DashboardFontSizePtrInput {
	return (*dashboardFontSizePtrType)(v)
}

func (*dashboardFontSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontSize)(nil)).Elem()
}

func (i *dashboardFontSizePtrType) ToDashboardFontSizePtrOutput() DashboardFontSizePtrOutput {
	return i.ToDashboardFontSizePtrOutputWithContext(context.Background())
}

func (i *dashboardFontSizePtrType) ToDashboardFontSizePtrOutputWithContext(ctx context.Context) DashboardFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontSizePtrOutput)
}

type DashboardFontSizeOutput struct{ *pulumi.OutputState }

func (DashboardFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontSize)(nil)).Elem()
}

func (o DashboardFontSizeOutput) ToDashboardFontSizeOutput() DashboardFontSizeOutput {
	return o
}

func (o DashboardFontSizeOutput) ToDashboardFontSizeOutputWithContext(ctx context.Context) DashboardFontSizeOutput {
	return o
}

func (o DashboardFontSizeOutput) ToDashboardFontSizePtrOutput() DashboardFontSizePtrOutput {
	return o.ToDashboardFontSizePtrOutputWithContext(context.Background())
}

func (o DashboardFontSizeOutput) ToDashboardFontSizePtrOutputWithContext(ctx context.Context) DashboardFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontSize) *DashboardFontSize {
		return &v
	}).(DashboardFontSizePtrOutput)
}

func (o DashboardFontSizeOutput) Relative() DashboardRelativeFontSizePtrOutput {
	return o.ApplyT(func(v DashboardFontSize) *DashboardRelativeFontSize { return v.Relative }).(DashboardRelativeFontSizePtrOutput)
}

type DashboardFontSizePtrOutput struct{ *pulumi.OutputState }

func (DashboardFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontSize)(nil)).Elem()
}

func (o DashboardFontSizePtrOutput) ToDashboardFontSizePtrOutput() DashboardFontSizePtrOutput {
	return o
}

func (o DashboardFontSizePtrOutput) ToDashboardFontSizePtrOutputWithContext(ctx context.Context) DashboardFontSizePtrOutput {
	return o
}

func (o DashboardFontSizePtrOutput) Elem() DashboardFontSizeOutput {
	return o.ApplyT(func(v *DashboardFontSize) DashboardFontSize {
		if v != nil {
			return *v
		}
		var ret DashboardFontSize
		return ret
	}).(DashboardFontSizeOutput)
}

func (o DashboardFontSizePtrOutput) Relative() DashboardRelativeFontSizePtrOutput {
	return o.ApplyT(func(v *DashboardFontSize) *DashboardRelativeFontSize {
		if v == nil {
			return nil
		}
		return v.Relative
	}).(DashboardRelativeFontSizePtrOutput)
}

type DashboardFontWeight struct {
	Name *DashboardFontWeightName `pulumi:"name"`
}

// DashboardFontWeightInput is an input type that accepts DashboardFontWeightArgs and DashboardFontWeightOutput values.
// You can construct a concrete instance of `DashboardFontWeightInput` via:
//
//	DashboardFontWeightArgs{...}
type DashboardFontWeightInput interface {
	pulumi.Input

	ToDashboardFontWeightOutput() DashboardFontWeightOutput
	ToDashboardFontWeightOutputWithContext(context.Context) DashboardFontWeightOutput
}

type DashboardFontWeightArgs struct {
	Name DashboardFontWeightNamePtrInput `pulumi:"name"`
}

func (DashboardFontWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontWeight)(nil)).Elem()
}

func (i DashboardFontWeightArgs) ToDashboardFontWeightOutput() DashboardFontWeightOutput {
	return i.ToDashboardFontWeightOutputWithContext(context.Background())
}

func (i DashboardFontWeightArgs) ToDashboardFontWeightOutputWithContext(ctx context.Context) DashboardFontWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontWeightOutput)
}

func (i DashboardFontWeightArgs) ToDashboardFontWeightPtrOutput() DashboardFontWeightPtrOutput {
	return i.ToDashboardFontWeightPtrOutputWithContext(context.Background())
}

func (i DashboardFontWeightArgs) ToDashboardFontWeightPtrOutputWithContext(ctx context.Context) DashboardFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontWeightOutput).ToDashboardFontWeightPtrOutputWithContext(ctx)
}

// DashboardFontWeightPtrInput is an input type that accepts DashboardFontWeightArgs, DashboardFontWeightPtr and DashboardFontWeightPtrOutput values.
// You can construct a concrete instance of `DashboardFontWeightPtrInput` via:
//
//	        DashboardFontWeightArgs{...}
//
//	or:
//
//	        nil
type DashboardFontWeightPtrInput interface {
	pulumi.Input

	ToDashboardFontWeightPtrOutput() DashboardFontWeightPtrOutput
	ToDashboardFontWeightPtrOutputWithContext(context.Context) DashboardFontWeightPtrOutput
}

type dashboardFontWeightPtrType DashboardFontWeightArgs

func DashboardFontWeightPtr(v *DashboardFontWeightArgs) DashboardFontWeightPtrInput {
	return (*dashboardFontWeightPtrType)(v)
}

func (*dashboardFontWeightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontWeight)(nil)).Elem()
}

func (i *dashboardFontWeightPtrType) ToDashboardFontWeightPtrOutput() DashboardFontWeightPtrOutput {
	return i.ToDashboardFontWeightPtrOutputWithContext(context.Background())
}

func (i *dashboardFontWeightPtrType) ToDashboardFontWeightPtrOutputWithContext(ctx context.Context) DashboardFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFontWeightPtrOutput)
}

type DashboardFontWeightOutput struct{ *pulumi.OutputState }

func (DashboardFontWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFontWeight)(nil)).Elem()
}

func (o DashboardFontWeightOutput) ToDashboardFontWeightOutput() DashboardFontWeightOutput {
	return o
}

func (o DashboardFontWeightOutput) ToDashboardFontWeightOutputWithContext(ctx context.Context) DashboardFontWeightOutput {
	return o
}

func (o DashboardFontWeightOutput) ToDashboardFontWeightPtrOutput() DashboardFontWeightPtrOutput {
	return o.ToDashboardFontWeightPtrOutputWithContext(context.Background())
}

func (o DashboardFontWeightOutput) ToDashboardFontWeightPtrOutputWithContext(ctx context.Context) DashboardFontWeightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFontWeight) *DashboardFontWeight {
		return &v
	}).(DashboardFontWeightPtrOutput)
}

func (o DashboardFontWeightOutput) Name() DashboardFontWeightNamePtrOutput {
	return o.ApplyT(func(v DashboardFontWeight) *DashboardFontWeightName { return v.Name }).(DashboardFontWeightNamePtrOutput)
}

type DashboardFontWeightPtrOutput struct{ *pulumi.OutputState }

func (DashboardFontWeightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFontWeight)(nil)).Elem()
}

func (o DashboardFontWeightPtrOutput) ToDashboardFontWeightPtrOutput() DashboardFontWeightPtrOutput {
	return o
}

func (o DashboardFontWeightPtrOutput) ToDashboardFontWeightPtrOutputWithContext(ctx context.Context) DashboardFontWeightPtrOutput {
	return o
}

func (o DashboardFontWeightPtrOutput) Elem() DashboardFontWeightOutput {
	return o.ApplyT(func(v *DashboardFontWeight) DashboardFontWeight {
		if v != nil {
			return *v
		}
		var ret DashboardFontWeight
		return ret
	}).(DashboardFontWeightOutput)
}

func (o DashboardFontWeightPtrOutput) Name() DashboardFontWeightNamePtrOutput {
	return o.ApplyT(func(v *DashboardFontWeight) *DashboardFontWeightName {
		if v == nil {
			return nil
		}
		return v.Name
	}).(DashboardFontWeightNamePtrOutput)
}

type DashboardForecastComputation struct {
	ComputationId          string                                   `pulumi:"computationId"`
	CustomSeasonalityValue *float64                                 `pulumi:"customSeasonalityValue"`
	LowerBoundary          *float64                                 `pulumi:"lowerBoundary"`
	Name                   *string                                  `pulumi:"name"`
	PeriodsBackward        *float64                                 `pulumi:"periodsBackward"`
	PeriodsForward         *float64                                 `pulumi:"periodsForward"`
	PredictionInterval     *float64                                 `pulumi:"predictionInterval"`
	Seasonality            *DashboardForecastComputationSeasonality `pulumi:"seasonality"`
	Time                   DashboardDimensionField                  `pulumi:"time"`
	UpperBoundary          *float64                                 `pulumi:"upperBoundary"`
	Value                  *DashboardMeasureField                   `pulumi:"value"`
}

// DashboardForecastComputationInput is an input type that accepts DashboardForecastComputationArgs and DashboardForecastComputationOutput values.
// You can construct a concrete instance of `DashboardForecastComputationInput` via:
//
//	DashboardForecastComputationArgs{...}
type DashboardForecastComputationInput interface {
	pulumi.Input

	ToDashboardForecastComputationOutput() DashboardForecastComputationOutput
	ToDashboardForecastComputationOutputWithContext(context.Context) DashboardForecastComputationOutput
}

type DashboardForecastComputationArgs struct {
	ComputationId          pulumi.StringInput                              `pulumi:"computationId"`
	CustomSeasonalityValue pulumi.Float64PtrInput                          `pulumi:"customSeasonalityValue"`
	LowerBoundary          pulumi.Float64PtrInput                          `pulumi:"lowerBoundary"`
	Name                   pulumi.StringPtrInput                           `pulumi:"name"`
	PeriodsBackward        pulumi.Float64PtrInput                          `pulumi:"periodsBackward"`
	PeriodsForward         pulumi.Float64PtrInput                          `pulumi:"periodsForward"`
	PredictionInterval     pulumi.Float64PtrInput                          `pulumi:"predictionInterval"`
	Seasonality            DashboardForecastComputationSeasonalityPtrInput `pulumi:"seasonality"`
	Time                   DashboardDimensionFieldInput                    `pulumi:"time"`
	UpperBoundary          pulumi.Float64PtrInput                          `pulumi:"upperBoundary"`
	Value                  DashboardMeasureFieldPtrInput                   `pulumi:"value"`
}

func (DashboardForecastComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastComputation)(nil)).Elem()
}

func (i DashboardForecastComputationArgs) ToDashboardForecastComputationOutput() DashboardForecastComputationOutput {
	return i.ToDashboardForecastComputationOutputWithContext(context.Background())
}

func (i DashboardForecastComputationArgs) ToDashboardForecastComputationOutputWithContext(ctx context.Context) DashboardForecastComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastComputationOutput)
}

func (i DashboardForecastComputationArgs) ToDashboardForecastComputationPtrOutput() DashboardForecastComputationPtrOutput {
	return i.ToDashboardForecastComputationPtrOutputWithContext(context.Background())
}

func (i DashboardForecastComputationArgs) ToDashboardForecastComputationPtrOutputWithContext(ctx context.Context) DashboardForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastComputationOutput).ToDashboardForecastComputationPtrOutputWithContext(ctx)
}

// DashboardForecastComputationPtrInput is an input type that accepts DashboardForecastComputationArgs, DashboardForecastComputationPtr and DashboardForecastComputationPtrOutput values.
// You can construct a concrete instance of `DashboardForecastComputationPtrInput` via:
//
//	        DashboardForecastComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardForecastComputationPtrInput interface {
	pulumi.Input

	ToDashboardForecastComputationPtrOutput() DashboardForecastComputationPtrOutput
	ToDashboardForecastComputationPtrOutputWithContext(context.Context) DashboardForecastComputationPtrOutput
}

type dashboardForecastComputationPtrType DashboardForecastComputationArgs

func DashboardForecastComputationPtr(v *DashboardForecastComputationArgs) DashboardForecastComputationPtrInput {
	return (*dashboardForecastComputationPtrType)(v)
}

func (*dashboardForecastComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardForecastComputation)(nil)).Elem()
}

func (i *dashboardForecastComputationPtrType) ToDashboardForecastComputationPtrOutput() DashboardForecastComputationPtrOutput {
	return i.ToDashboardForecastComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardForecastComputationPtrType) ToDashboardForecastComputationPtrOutputWithContext(ctx context.Context) DashboardForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastComputationPtrOutput)
}

type DashboardForecastComputationOutput struct{ *pulumi.OutputState }

func (DashboardForecastComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastComputation)(nil)).Elem()
}

func (o DashboardForecastComputationOutput) ToDashboardForecastComputationOutput() DashboardForecastComputationOutput {
	return o
}

func (o DashboardForecastComputationOutput) ToDashboardForecastComputationOutputWithContext(ctx context.Context) DashboardForecastComputationOutput {
	return o
}

func (o DashboardForecastComputationOutput) ToDashboardForecastComputationPtrOutput() DashboardForecastComputationPtrOutput {
	return o.ToDashboardForecastComputationPtrOutputWithContext(context.Background())
}

func (o DashboardForecastComputationOutput) ToDashboardForecastComputationPtrOutputWithContext(ctx context.Context) DashboardForecastComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardForecastComputation) *DashboardForecastComputation {
		return &v
	}).(DashboardForecastComputationPtrOutput)
}

func (o DashboardForecastComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardForecastComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardForecastComputationOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.CustomSeasonalityValue }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardForecastComputationOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) Seasonality() DashboardForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *DashboardForecastComputationSeasonality { return v.Seasonality }).(DashboardForecastComputationSeasonalityPtrOutput)
}

func (o DashboardForecastComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardForecastComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardForecastComputationOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardForecastComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardForecastComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardForecastComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardForecastComputation)(nil)).Elem()
}

func (o DashboardForecastComputationPtrOutput) ToDashboardForecastComputationPtrOutput() DashboardForecastComputationPtrOutput {
	return o
}

func (o DashboardForecastComputationPtrOutput) ToDashboardForecastComputationPtrOutputWithContext(ctx context.Context) DashboardForecastComputationPtrOutput {
	return o
}

func (o DashboardForecastComputationPtrOutput) Elem() DashboardForecastComputationOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) DashboardForecastComputation {
		if v != nil {
			return *v
		}
		var ret DashboardForecastComputation
		return ret
	}).(DashboardForecastComputationOutput)
}

func (o DashboardForecastComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardForecastComputationPtrOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomSeasonalityValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardForecastComputationPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) Seasonality() DashboardForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *DashboardForecastComputationSeasonality {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(DashboardForecastComputationSeasonalityPtrOutput)
}

func (o DashboardForecastComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardForecastComputationPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardForecastComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardForecastComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardForecastConfiguration struct {
	ForecastProperties *DashboardTimeBasedForecastProperties `pulumi:"forecastProperties"`
	Scenario           *DashboardForecastScenario            `pulumi:"scenario"`
}

// DashboardForecastConfigurationInput is an input type that accepts DashboardForecastConfigurationArgs and DashboardForecastConfigurationOutput values.
// You can construct a concrete instance of `DashboardForecastConfigurationInput` via:
//
//	DashboardForecastConfigurationArgs{...}
type DashboardForecastConfigurationInput interface {
	pulumi.Input

	ToDashboardForecastConfigurationOutput() DashboardForecastConfigurationOutput
	ToDashboardForecastConfigurationOutputWithContext(context.Context) DashboardForecastConfigurationOutput
}

type DashboardForecastConfigurationArgs struct {
	ForecastProperties DashboardTimeBasedForecastPropertiesPtrInput `pulumi:"forecastProperties"`
	Scenario           DashboardForecastScenarioPtrInput            `pulumi:"scenario"`
}

func (DashboardForecastConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastConfiguration)(nil)).Elem()
}

func (i DashboardForecastConfigurationArgs) ToDashboardForecastConfigurationOutput() DashboardForecastConfigurationOutput {
	return i.ToDashboardForecastConfigurationOutputWithContext(context.Background())
}

func (i DashboardForecastConfigurationArgs) ToDashboardForecastConfigurationOutputWithContext(ctx context.Context) DashboardForecastConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastConfigurationOutput)
}

// DashboardForecastConfigurationArrayInput is an input type that accepts DashboardForecastConfigurationArray and DashboardForecastConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardForecastConfigurationArrayInput` via:
//
//	DashboardForecastConfigurationArray{ DashboardForecastConfigurationArgs{...} }
type DashboardForecastConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardForecastConfigurationArrayOutput() DashboardForecastConfigurationArrayOutput
	ToDashboardForecastConfigurationArrayOutputWithContext(context.Context) DashboardForecastConfigurationArrayOutput
}

type DashboardForecastConfigurationArray []DashboardForecastConfigurationInput

func (DashboardForecastConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardForecastConfiguration)(nil)).Elem()
}

func (i DashboardForecastConfigurationArray) ToDashboardForecastConfigurationArrayOutput() DashboardForecastConfigurationArrayOutput {
	return i.ToDashboardForecastConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardForecastConfigurationArray) ToDashboardForecastConfigurationArrayOutputWithContext(ctx context.Context) DashboardForecastConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastConfigurationArrayOutput)
}

type DashboardForecastConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardForecastConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastConfiguration)(nil)).Elem()
}

func (o DashboardForecastConfigurationOutput) ToDashboardForecastConfigurationOutput() DashboardForecastConfigurationOutput {
	return o
}

func (o DashboardForecastConfigurationOutput) ToDashboardForecastConfigurationOutputWithContext(ctx context.Context) DashboardForecastConfigurationOutput {
	return o
}

func (o DashboardForecastConfigurationOutput) ForecastProperties() DashboardTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyT(func(v DashboardForecastConfiguration) *DashboardTimeBasedForecastProperties {
		return v.ForecastProperties
	}).(DashboardTimeBasedForecastPropertiesPtrOutput)
}

func (o DashboardForecastConfigurationOutput) Scenario() DashboardForecastScenarioPtrOutput {
	return o.ApplyT(func(v DashboardForecastConfiguration) *DashboardForecastScenario { return v.Scenario }).(DashboardForecastScenarioPtrOutput)
}

type DashboardForecastConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardForecastConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardForecastConfiguration)(nil)).Elem()
}

func (o DashboardForecastConfigurationArrayOutput) ToDashboardForecastConfigurationArrayOutput() DashboardForecastConfigurationArrayOutput {
	return o
}

func (o DashboardForecastConfigurationArrayOutput) ToDashboardForecastConfigurationArrayOutputWithContext(ctx context.Context) DashboardForecastConfigurationArrayOutput {
	return o
}

func (o DashboardForecastConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardForecastConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardForecastConfiguration {
		return vs[0].([]DashboardForecastConfiguration)[vs[1].(int)]
	}).(DashboardForecastConfigurationOutput)
}

type DashboardForecastScenario struct {
	WhatIfPointScenario *DashboardWhatIfPointScenario `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario *DashboardWhatIfRangeScenario `pulumi:"whatIfRangeScenario"`
}

// DashboardForecastScenarioInput is an input type that accepts DashboardForecastScenarioArgs and DashboardForecastScenarioOutput values.
// You can construct a concrete instance of `DashboardForecastScenarioInput` via:
//
//	DashboardForecastScenarioArgs{...}
type DashboardForecastScenarioInput interface {
	pulumi.Input

	ToDashboardForecastScenarioOutput() DashboardForecastScenarioOutput
	ToDashboardForecastScenarioOutputWithContext(context.Context) DashboardForecastScenarioOutput
}

type DashboardForecastScenarioArgs struct {
	WhatIfPointScenario DashboardWhatIfPointScenarioPtrInput `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario DashboardWhatIfRangeScenarioPtrInput `pulumi:"whatIfRangeScenario"`
}

func (DashboardForecastScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastScenario)(nil)).Elem()
}

func (i DashboardForecastScenarioArgs) ToDashboardForecastScenarioOutput() DashboardForecastScenarioOutput {
	return i.ToDashboardForecastScenarioOutputWithContext(context.Background())
}

func (i DashboardForecastScenarioArgs) ToDashboardForecastScenarioOutputWithContext(ctx context.Context) DashboardForecastScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastScenarioOutput)
}

func (i DashboardForecastScenarioArgs) ToDashboardForecastScenarioPtrOutput() DashboardForecastScenarioPtrOutput {
	return i.ToDashboardForecastScenarioPtrOutputWithContext(context.Background())
}

func (i DashboardForecastScenarioArgs) ToDashboardForecastScenarioPtrOutputWithContext(ctx context.Context) DashboardForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastScenarioOutput).ToDashboardForecastScenarioPtrOutputWithContext(ctx)
}

// DashboardForecastScenarioPtrInput is an input type that accepts DashboardForecastScenarioArgs, DashboardForecastScenarioPtr and DashboardForecastScenarioPtrOutput values.
// You can construct a concrete instance of `DashboardForecastScenarioPtrInput` via:
//
//	        DashboardForecastScenarioArgs{...}
//
//	or:
//
//	        nil
type DashboardForecastScenarioPtrInput interface {
	pulumi.Input

	ToDashboardForecastScenarioPtrOutput() DashboardForecastScenarioPtrOutput
	ToDashboardForecastScenarioPtrOutputWithContext(context.Context) DashboardForecastScenarioPtrOutput
}

type dashboardForecastScenarioPtrType DashboardForecastScenarioArgs

func DashboardForecastScenarioPtr(v *DashboardForecastScenarioArgs) DashboardForecastScenarioPtrInput {
	return (*dashboardForecastScenarioPtrType)(v)
}

func (*dashboardForecastScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardForecastScenario)(nil)).Elem()
}

func (i *dashboardForecastScenarioPtrType) ToDashboardForecastScenarioPtrOutput() DashboardForecastScenarioPtrOutput {
	return i.ToDashboardForecastScenarioPtrOutputWithContext(context.Background())
}

func (i *dashboardForecastScenarioPtrType) ToDashboardForecastScenarioPtrOutputWithContext(ctx context.Context) DashboardForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardForecastScenarioPtrOutput)
}

type DashboardForecastScenarioOutput struct{ *pulumi.OutputState }

func (DashboardForecastScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardForecastScenario)(nil)).Elem()
}

func (o DashboardForecastScenarioOutput) ToDashboardForecastScenarioOutput() DashboardForecastScenarioOutput {
	return o
}

func (o DashboardForecastScenarioOutput) ToDashboardForecastScenarioOutputWithContext(ctx context.Context) DashboardForecastScenarioOutput {
	return o
}

func (o DashboardForecastScenarioOutput) ToDashboardForecastScenarioPtrOutput() DashboardForecastScenarioPtrOutput {
	return o.ToDashboardForecastScenarioPtrOutputWithContext(context.Background())
}

func (o DashboardForecastScenarioOutput) ToDashboardForecastScenarioPtrOutputWithContext(ctx context.Context) DashboardForecastScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardForecastScenario) *DashboardForecastScenario {
		return &v
	}).(DashboardForecastScenarioPtrOutput)
}

func (o DashboardForecastScenarioOutput) WhatIfPointScenario() DashboardWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v DashboardForecastScenario) *DashboardWhatIfPointScenario { return v.WhatIfPointScenario }).(DashboardWhatIfPointScenarioPtrOutput)
}

func (o DashboardForecastScenarioOutput) WhatIfRangeScenario() DashboardWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v DashboardForecastScenario) *DashboardWhatIfRangeScenario { return v.WhatIfRangeScenario }).(DashboardWhatIfRangeScenarioPtrOutput)
}

type DashboardForecastScenarioPtrOutput struct{ *pulumi.OutputState }

func (DashboardForecastScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardForecastScenario)(nil)).Elem()
}

func (o DashboardForecastScenarioPtrOutput) ToDashboardForecastScenarioPtrOutput() DashboardForecastScenarioPtrOutput {
	return o
}

func (o DashboardForecastScenarioPtrOutput) ToDashboardForecastScenarioPtrOutputWithContext(ctx context.Context) DashboardForecastScenarioPtrOutput {
	return o
}

func (o DashboardForecastScenarioPtrOutput) Elem() DashboardForecastScenarioOutput {
	return o.ApplyT(func(v *DashboardForecastScenario) DashboardForecastScenario {
		if v != nil {
			return *v
		}
		var ret DashboardForecastScenario
		return ret
	}).(DashboardForecastScenarioOutput)
}

func (o DashboardForecastScenarioPtrOutput) WhatIfPointScenario() DashboardWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v *DashboardForecastScenario) *DashboardWhatIfPointScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfPointScenario
	}).(DashboardWhatIfPointScenarioPtrOutput)
}

func (o DashboardForecastScenarioPtrOutput) WhatIfRangeScenario() DashboardWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v *DashboardForecastScenario) *DashboardWhatIfRangeScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfRangeScenario
	}).(DashboardWhatIfRangeScenarioPtrOutput)
}

type DashboardFormatConfiguration struct {
	DateTimeFormatConfiguration *DashboardDateTimeFormatConfiguration `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   *DashboardNumberFormatConfiguration   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   *DashboardStringFormatConfiguration   `pulumi:"stringFormatConfiguration"`
}

// DashboardFormatConfigurationInput is an input type that accepts DashboardFormatConfigurationArgs and DashboardFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardFormatConfigurationInput` via:
//
//	DashboardFormatConfigurationArgs{...}
type DashboardFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardFormatConfigurationOutput() DashboardFormatConfigurationOutput
	ToDashboardFormatConfigurationOutputWithContext(context.Context) DashboardFormatConfigurationOutput
}

type DashboardFormatConfigurationArgs struct {
	DateTimeFormatConfiguration DashboardDateTimeFormatConfigurationPtrInput `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   DashboardNumberFormatConfigurationPtrInput   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   DashboardStringFormatConfigurationPtrInput   `pulumi:"stringFormatConfiguration"`
}

func (DashboardFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFormatConfiguration)(nil)).Elem()
}

func (i DashboardFormatConfigurationArgs) ToDashboardFormatConfigurationOutput() DashboardFormatConfigurationOutput {
	return i.ToDashboardFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardFormatConfigurationArgs) ToDashboardFormatConfigurationOutputWithContext(ctx context.Context) DashboardFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFormatConfigurationOutput)
}

func (i DashboardFormatConfigurationArgs) ToDashboardFormatConfigurationPtrOutput() DashboardFormatConfigurationPtrOutput {
	return i.ToDashboardFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFormatConfigurationArgs) ToDashboardFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFormatConfigurationOutput).ToDashboardFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardFormatConfigurationPtrInput is an input type that accepts DashboardFormatConfigurationArgs, DashboardFormatConfigurationPtr and DashboardFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFormatConfigurationPtrInput` via:
//
//	        DashboardFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFormatConfigurationPtrOutput() DashboardFormatConfigurationPtrOutput
	ToDashboardFormatConfigurationPtrOutputWithContext(context.Context) DashboardFormatConfigurationPtrOutput
}

type dashboardFormatConfigurationPtrType DashboardFormatConfigurationArgs

func DashboardFormatConfigurationPtr(v *DashboardFormatConfigurationArgs) DashboardFormatConfigurationPtrInput {
	return (*dashboardFormatConfigurationPtrType)(v)
}

func (*dashboardFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFormatConfiguration)(nil)).Elem()
}

func (i *dashboardFormatConfigurationPtrType) ToDashboardFormatConfigurationPtrOutput() DashboardFormatConfigurationPtrOutput {
	return i.ToDashboardFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFormatConfigurationPtrType) ToDashboardFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFormatConfigurationPtrOutput)
}

type DashboardFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFormatConfiguration)(nil)).Elem()
}

func (o DashboardFormatConfigurationOutput) ToDashboardFormatConfigurationOutput() DashboardFormatConfigurationOutput {
	return o
}

func (o DashboardFormatConfigurationOutput) ToDashboardFormatConfigurationOutputWithContext(ctx context.Context) DashboardFormatConfigurationOutput {
	return o
}

func (o DashboardFormatConfigurationOutput) ToDashboardFormatConfigurationPtrOutput() DashboardFormatConfigurationPtrOutput {
	return o.ToDashboardFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFormatConfigurationOutput) ToDashboardFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFormatConfiguration) *DashboardFormatConfiguration {
		return &v
	}).(DashboardFormatConfigurationPtrOutput)
}

func (o DashboardFormatConfigurationOutput) DateTimeFormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFormatConfiguration) *DashboardDateTimeFormatConfiguration {
		return v.DateTimeFormatConfiguration
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

func (o DashboardFormatConfigurationOutput) NumberFormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFormatConfiguration) *DashboardNumberFormatConfiguration {
		return v.NumberFormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

func (o DashboardFormatConfigurationOutput) StringFormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFormatConfiguration) *DashboardStringFormatConfiguration {
		return v.StringFormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

type DashboardFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFormatConfiguration)(nil)).Elem()
}

func (o DashboardFormatConfigurationPtrOutput) ToDashboardFormatConfigurationPtrOutput() DashboardFormatConfigurationPtrOutput {
	return o
}

func (o DashboardFormatConfigurationPtrOutput) ToDashboardFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardFormatConfigurationPtrOutput {
	return o
}

func (o DashboardFormatConfigurationPtrOutput) Elem() DashboardFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardFormatConfiguration) DashboardFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFormatConfiguration
		return ret
	}).(DashboardFormatConfigurationOutput)
}

func (o DashboardFormatConfigurationPtrOutput) DateTimeFormatConfiguration() DashboardDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFormatConfiguration) *DashboardDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.DateTimeFormatConfiguration
	}).(DashboardDateTimeFormatConfigurationPtrOutput)
}

func (o DashboardFormatConfigurationPtrOutput) NumberFormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFormatConfiguration) *DashboardNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberFormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

func (o DashboardFormatConfigurationPtrOutput) StringFormatConfiguration() DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFormatConfiguration) *DashboardStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.StringFormatConfiguration
	}).(DashboardStringFormatConfigurationPtrOutput)
}

type DashboardFreeFormLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *DashboardFreeFormLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// DashboardFreeFormLayoutCanvasSizeOptionsInput is an input type that accepts DashboardFreeFormLayoutCanvasSizeOptionsArgs and DashboardFreeFormLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutCanvasSizeOptionsInput` via:
//
//	DashboardFreeFormLayoutCanvasSizeOptionsArgs{...}
type DashboardFreeFormLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutCanvasSizeOptionsOutput() DashboardFreeFormLayoutCanvasSizeOptionsOutput
	ToDashboardFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Context) DashboardFreeFormLayoutCanvasSizeOptionsOutput
}

type DashboardFreeFormLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (DashboardFreeFormLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardFreeFormLayoutCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutCanvasSizeOptionsOutput() DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return i.ToDashboardFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutCanvasSizeOptionsOutput)
}

func (i DashboardFreeFormLayoutCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutCanvasSizeOptionsOutput).ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardFreeFormLayoutCanvasSizeOptionsPtrInput is an input type that accepts DashboardFreeFormLayoutCanvasSizeOptionsArgs, DashboardFreeFormLayoutCanvasSizeOptionsPtr and DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutCanvasSizeOptionsPtrInput` via:
//
//	        DashboardFreeFormLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput
	ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput
}

type dashboardFreeFormLayoutCanvasSizeOptionsPtrType DashboardFreeFormLayoutCanvasSizeOptionsArgs

func DashboardFreeFormLayoutCanvasSizeOptionsPtr(v *DashboardFreeFormLayoutCanvasSizeOptionsArgs) DashboardFreeFormLayoutCanvasSizeOptionsPtrInput {
	return (*dashboardFreeFormLayoutCanvasSizeOptionsPtrType)(v)
}

func (*dashboardFreeFormLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardFreeFormLayoutCanvasSizeOptionsPtrType) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormLayoutCanvasSizeOptionsPtrType) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardFreeFormLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsOutput() DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormLayoutCanvasSizeOptions) *DashboardFreeFormLayoutCanvasSizeOptions {
		return &v
	}).(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutCanvasSizeOptions) *DashboardFreeFormLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput) ToDashboardFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput) Elem() DashboardFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutCanvasSizeOptions) DashboardFreeFormLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormLayoutCanvasSizeOptions
		return ret
	}).(DashboardFreeFormLayoutCanvasSizeOptionsOutput)
}

func (o DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutCanvasSizeOptions) *DashboardFreeFormLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardFreeFormLayoutConfiguration struct {
	CanvasSizeOptions *DashboardFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []DashboardFreeFormLayoutElement          `pulumi:"elements"`
}

// DashboardFreeFormLayoutConfigurationInput is an input type that accepts DashboardFreeFormLayoutConfigurationArgs and DashboardFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutConfigurationInput` via:
//
//	DashboardFreeFormLayoutConfigurationArgs{...}
type DashboardFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutConfigurationOutput() DashboardFreeFormLayoutConfigurationOutput
	ToDashboardFreeFormLayoutConfigurationOutputWithContext(context.Context) DashboardFreeFormLayoutConfigurationOutput
}

type DashboardFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions DashboardFreeFormLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          DashboardFreeFormLayoutElementArrayInput         `pulumi:"elements"`
}

func (DashboardFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i DashboardFreeFormLayoutConfigurationArgs) ToDashboardFreeFormLayoutConfigurationOutput() DashboardFreeFormLayoutConfigurationOutput {
	return i.ToDashboardFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutConfigurationArgs) ToDashboardFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutConfigurationOutput)
}

func (i DashboardFreeFormLayoutConfigurationArgs) ToDashboardFreeFormLayoutConfigurationPtrOutput() DashboardFreeFormLayoutConfigurationPtrOutput {
	return i.ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutConfigurationArgs) ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutConfigurationOutput).ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardFreeFormLayoutConfigurationPtrInput is an input type that accepts DashboardFreeFormLayoutConfigurationArgs, DashboardFreeFormLayoutConfigurationPtr and DashboardFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutConfigurationPtrInput` via:
//
//	        DashboardFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutConfigurationPtrOutput() DashboardFreeFormLayoutConfigurationPtrOutput
	ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) DashboardFreeFormLayoutConfigurationPtrOutput
}

type dashboardFreeFormLayoutConfigurationPtrType DashboardFreeFormLayoutConfigurationArgs

func DashboardFreeFormLayoutConfigurationPtr(v *DashboardFreeFormLayoutConfigurationArgs) DashboardFreeFormLayoutConfigurationPtrInput {
	return (*dashboardFreeFormLayoutConfigurationPtrType)(v)
}

func (*dashboardFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardFreeFormLayoutConfigurationPtrType) ToDashboardFreeFormLayoutConfigurationPtrOutput() DashboardFreeFormLayoutConfigurationPtrOutput {
	return i.ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormLayoutConfigurationPtrType) ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutConfigurationPtrOutput)
}

type DashboardFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o DashboardFreeFormLayoutConfigurationOutput) ToDashboardFreeFormLayoutConfigurationOutput() DashboardFreeFormLayoutConfigurationOutput {
	return o
}

func (o DashboardFreeFormLayoutConfigurationOutput) ToDashboardFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationOutput {
	return o
}

func (o DashboardFreeFormLayoutConfigurationOutput) ToDashboardFreeFormLayoutConfigurationPtrOutput() DashboardFreeFormLayoutConfigurationPtrOutput {
	return o.ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormLayoutConfigurationOutput) ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormLayoutConfiguration) *DashboardFreeFormLayoutConfiguration {
		return &v
	}).(DashboardFreeFormLayoutConfigurationPtrOutput)
}

func (o DashboardFreeFormLayoutConfigurationOutput) CanvasSizeOptions() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutConfiguration) *DashboardFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardFreeFormLayoutConfigurationOutput) Elements() DashboardFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutConfiguration) []DashboardFreeFormLayoutElement { return v.Elements }).(DashboardFreeFormLayoutElementArrayOutput)
}

type DashboardFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o DashboardFreeFormLayoutConfigurationPtrOutput) ToDashboardFreeFormLayoutConfigurationPtrOutput() DashboardFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutConfigurationPtrOutput) ToDashboardFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutConfigurationPtrOutput) Elem() DashboardFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutConfiguration) DashboardFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormLayoutConfiguration
		return ret
	}).(DashboardFreeFormLayoutConfigurationOutput)
}

func (o DashboardFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutConfiguration) *DashboardFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardFreeFormLayoutConfigurationPtrOutput) Elements() DashboardFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutConfiguration) []DashboardFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(DashboardFreeFormLayoutElementArrayOutput)
}

type DashboardFreeFormLayoutElement struct {
	BackgroundStyle *DashboardFreeFormLayoutElementBackgroundStyle `pulumi:"backgroundStyle"`
	BorderStyle     *DashboardFreeFormLayoutElementBorderStyle     `pulumi:"borderStyle"`
	ElementId       string                                         `pulumi:"elementId"`
	ElementType_    DashboardLayoutElementType                     `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              string                                     `pulumi:"height"`
	LoadingAnimation    *DashboardLoadingAnimation                 `pulumi:"loadingAnimation"`
	RenderingRules      []DashboardSheetElementRenderingRule       `pulumi:"renderingRules"`
	SelectedBorderStyle *DashboardFreeFormLayoutElementBorderStyle `pulumi:"selectedBorderStyle"`
	Visibility          *DashboardVisibility                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width string `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation string `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation string `pulumi:"yAxisLocation"`
}

// DashboardFreeFormLayoutElementInput is an input type that accepts DashboardFreeFormLayoutElementArgs and DashboardFreeFormLayoutElementOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementInput` via:
//
//	DashboardFreeFormLayoutElementArgs{...}
type DashboardFreeFormLayoutElementInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementOutput() DashboardFreeFormLayoutElementOutput
	ToDashboardFreeFormLayoutElementOutputWithContext(context.Context) DashboardFreeFormLayoutElementOutput
}

type DashboardFreeFormLayoutElementArgs struct {
	BackgroundStyle DashboardFreeFormLayoutElementBackgroundStylePtrInput `pulumi:"backgroundStyle"`
	BorderStyle     DashboardFreeFormLayoutElementBorderStylePtrInput     `pulumi:"borderStyle"`
	ElementId       pulumi.StringInput                                    `pulumi:"elementId"`
	ElementType_    DashboardLayoutElementTypeInput                       `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              pulumi.StringInput                                `pulumi:"height"`
	LoadingAnimation    DashboardLoadingAnimationPtrInput                 `pulumi:"loadingAnimation"`
	RenderingRules      DashboardSheetElementRenderingRuleArrayInput      `pulumi:"renderingRules"`
	SelectedBorderStyle DashboardFreeFormLayoutElementBorderStylePtrInput `pulumi:"selectedBorderStyle"`
	Visibility          DashboardVisibilityPtrInput                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringInput `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation pulumi.StringInput `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation pulumi.StringInput `pulumi:"yAxisLocation"`
}

func (DashboardFreeFormLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElement)(nil)).Elem()
}

func (i DashboardFreeFormLayoutElementArgs) ToDashboardFreeFormLayoutElementOutput() DashboardFreeFormLayoutElementOutput {
	return i.ToDashboardFreeFormLayoutElementOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementArgs) ToDashboardFreeFormLayoutElementOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementOutput)
}

// DashboardFreeFormLayoutElementArrayInput is an input type that accepts DashboardFreeFormLayoutElementArray and DashboardFreeFormLayoutElementArrayOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementArrayInput` via:
//
//	DashboardFreeFormLayoutElementArray{ DashboardFreeFormLayoutElementArgs{...} }
type DashboardFreeFormLayoutElementArrayInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementArrayOutput() DashboardFreeFormLayoutElementArrayOutput
	ToDashboardFreeFormLayoutElementArrayOutputWithContext(context.Context) DashboardFreeFormLayoutElementArrayOutput
}

type DashboardFreeFormLayoutElementArray []DashboardFreeFormLayoutElementInput

func (DashboardFreeFormLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFreeFormLayoutElement)(nil)).Elem()
}

func (i DashboardFreeFormLayoutElementArray) ToDashboardFreeFormLayoutElementArrayOutput() DashboardFreeFormLayoutElementArrayOutput {
	return i.ToDashboardFreeFormLayoutElementArrayOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementArray) ToDashboardFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementArrayOutput)
}

type DashboardFreeFormLayoutElementOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElement)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementOutput) ToDashboardFreeFormLayoutElementOutput() DashboardFreeFormLayoutElementOutput {
	return o
}

func (o DashboardFreeFormLayoutElementOutput) ToDashboardFreeFormLayoutElementOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementOutput {
	return o
}

func (o DashboardFreeFormLayoutElementOutput) BackgroundStyle() DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) *DashboardFreeFormLayoutElementBackgroundStyle {
		return v.BackgroundStyle
	}).(DashboardFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o DashboardFreeFormLayoutElementOutput) BorderStyle() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) *DashboardFreeFormLayoutElementBorderStyle {
		return v.BorderStyle
	}).(DashboardFreeFormLayoutElementBorderStylePtrOutput)
}

func (o DashboardFreeFormLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o DashboardFreeFormLayoutElementOutput) GetElementType_() DashboardLayoutElementTypeOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) DashboardLayoutElementType { return v.ElementType_ }).(DashboardLayoutElementTypeOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardFreeFormLayoutElementOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) string { return v.Height }).(pulumi.StringOutput)
}

func (o DashboardFreeFormLayoutElementOutput) LoadingAnimation() DashboardLoadingAnimationPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) *DashboardLoadingAnimation { return v.LoadingAnimation }).(DashboardLoadingAnimationPtrOutput)
}

func (o DashboardFreeFormLayoutElementOutput) RenderingRules() DashboardSheetElementRenderingRuleArrayOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) []DashboardSheetElementRenderingRule { return v.RenderingRules }).(DashboardSheetElementRenderingRuleArrayOutput)
}

func (o DashboardFreeFormLayoutElementOutput) SelectedBorderStyle() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) *DashboardFreeFormLayoutElementBorderStyle {
		return v.SelectedBorderStyle
	}).(DashboardFreeFormLayoutElementBorderStylePtrOutput)
}

func (o DashboardFreeFormLayoutElementOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardFreeFormLayoutElementOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) string { return v.Width }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardFreeFormLayoutElementOutput) XAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) string { return v.XAxisLocation }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
func (o DashboardFreeFormLayoutElementOutput) YAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElement) string { return v.YAxisLocation }).(pulumi.StringOutput)
}

type DashboardFreeFormLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardFreeFormLayoutElement)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementArrayOutput) ToDashboardFreeFormLayoutElementArrayOutput() DashboardFreeFormLayoutElementArrayOutput {
	return o
}

func (o DashboardFreeFormLayoutElementArrayOutput) ToDashboardFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementArrayOutput {
	return o
}

func (o DashboardFreeFormLayoutElementArrayOutput) Index(i pulumi.IntInput) DashboardFreeFormLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardFreeFormLayoutElement {
		return vs[0].([]DashboardFreeFormLayoutElement)[vs[1].(int)]
	}).(DashboardFreeFormLayoutElementOutput)
}

type DashboardFreeFormLayoutElementBackgroundStyle struct {
	Color      *string              `pulumi:"color"`
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardFreeFormLayoutElementBackgroundStyleInput is an input type that accepts DashboardFreeFormLayoutElementBackgroundStyleArgs and DashboardFreeFormLayoutElementBackgroundStyleOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementBackgroundStyleInput` via:
//
//	DashboardFreeFormLayoutElementBackgroundStyleArgs{...}
type DashboardFreeFormLayoutElementBackgroundStyleInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementBackgroundStyleOutput() DashboardFreeFormLayoutElementBackgroundStyleOutput
	ToDashboardFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Context) DashboardFreeFormLayoutElementBackgroundStyleOutput
}

type DashboardFreeFormLayoutElementBackgroundStyleArgs struct {
	Color      pulumi.StringPtrInput       `pulumi:"color"`
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardFreeFormLayoutElementBackgroundStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i DashboardFreeFormLayoutElementBackgroundStyleArgs) ToDashboardFreeFormLayoutElementBackgroundStyleOutput() DashboardFreeFormLayoutElementBackgroundStyleOutput {
	return i.ToDashboardFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementBackgroundStyleArgs) ToDashboardFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBackgroundStyleOutput)
}

func (i DashboardFreeFormLayoutElementBackgroundStyleArgs) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutput() DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementBackgroundStyleArgs) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBackgroundStyleOutput).ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx)
}

// DashboardFreeFormLayoutElementBackgroundStylePtrInput is an input type that accepts DashboardFreeFormLayoutElementBackgroundStyleArgs, DashboardFreeFormLayoutElementBackgroundStylePtr and DashboardFreeFormLayoutElementBackgroundStylePtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementBackgroundStylePtrInput` via:
//
//	        DashboardFreeFormLayoutElementBackgroundStyleArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormLayoutElementBackgroundStylePtrInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementBackgroundStylePtrOutput() DashboardFreeFormLayoutElementBackgroundStylePtrOutput
	ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Context) DashboardFreeFormLayoutElementBackgroundStylePtrOutput
}

type dashboardFreeFormLayoutElementBackgroundStylePtrType DashboardFreeFormLayoutElementBackgroundStyleArgs

func DashboardFreeFormLayoutElementBackgroundStylePtr(v *DashboardFreeFormLayoutElementBackgroundStyleArgs) DashboardFreeFormLayoutElementBackgroundStylePtrInput {
	return (*dashboardFreeFormLayoutElementBackgroundStylePtrType)(v)
}

func (*dashboardFreeFormLayoutElementBackgroundStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i *dashboardFreeFormLayoutElementBackgroundStylePtrType) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutput() DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormLayoutElementBackgroundStylePtrType) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBackgroundStylePtrOutput)
}

type DashboardFreeFormLayoutElementBackgroundStyleOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementBackgroundStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) ToDashboardFreeFormLayoutElementBackgroundStyleOutput() DashboardFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) ToDashboardFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutput() DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormLayoutElementBackgroundStyle) *DashboardFreeFormLayoutElementBackgroundStyle {
		return &v
	}).(DashboardFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElementBackgroundStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardFreeFormLayoutElementBackgroundStyleOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElementBackgroundStyle) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardFreeFormLayoutElementBackgroundStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementBackgroundStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementBackgroundStylePtrOutput) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutput() DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBackgroundStylePtrOutput) ToDashboardFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBackgroundStylePtrOutput) Elem() DashboardFreeFormLayoutElementBackgroundStyleOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBackgroundStyle) DashboardFreeFormLayoutElementBackgroundStyle {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormLayoutElementBackgroundStyle
		return ret
	}).(DashboardFreeFormLayoutElementBackgroundStyleOutput)
}

func (o DashboardFreeFormLayoutElementBackgroundStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBackgroundStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFreeFormLayoutElementBackgroundStylePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBackgroundStyle) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardFreeFormLayoutElementBorderStyle struct {
	Color      *string              `pulumi:"color"`
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardFreeFormLayoutElementBorderStyleInput is an input type that accepts DashboardFreeFormLayoutElementBorderStyleArgs and DashboardFreeFormLayoutElementBorderStyleOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementBorderStyleInput` via:
//
//	DashboardFreeFormLayoutElementBorderStyleArgs{...}
type DashboardFreeFormLayoutElementBorderStyleInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementBorderStyleOutput() DashboardFreeFormLayoutElementBorderStyleOutput
	ToDashboardFreeFormLayoutElementBorderStyleOutputWithContext(context.Context) DashboardFreeFormLayoutElementBorderStyleOutput
}

type DashboardFreeFormLayoutElementBorderStyleArgs struct {
	Color      pulumi.StringPtrInput       `pulumi:"color"`
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardFreeFormLayoutElementBorderStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i DashboardFreeFormLayoutElementBorderStyleArgs) ToDashboardFreeFormLayoutElementBorderStyleOutput() DashboardFreeFormLayoutElementBorderStyleOutput {
	return i.ToDashboardFreeFormLayoutElementBorderStyleOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementBorderStyleArgs) ToDashboardFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBorderStyleOutput)
}

func (i DashboardFreeFormLayoutElementBorderStyleArgs) ToDashboardFreeFormLayoutElementBorderStylePtrOutput() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutElementBorderStyleArgs) ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBorderStyleOutput).ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx)
}

// DashboardFreeFormLayoutElementBorderStylePtrInput is an input type that accepts DashboardFreeFormLayoutElementBorderStyleArgs, DashboardFreeFormLayoutElementBorderStylePtr and DashboardFreeFormLayoutElementBorderStylePtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutElementBorderStylePtrInput` via:
//
//	        DashboardFreeFormLayoutElementBorderStyleArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormLayoutElementBorderStylePtrInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutElementBorderStylePtrOutput() DashboardFreeFormLayoutElementBorderStylePtrOutput
	ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Context) DashboardFreeFormLayoutElementBorderStylePtrOutput
}

type dashboardFreeFormLayoutElementBorderStylePtrType DashboardFreeFormLayoutElementBorderStyleArgs

func DashboardFreeFormLayoutElementBorderStylePtr(v *DashboardFreeFormLayoutElementBorderStyleArgs) DashboardFreeFormLayoutElementBorderStylePtrInput {
	return (*dashboardFreeFormLayoutElementBorderStylePtrType)(v)
}

func (*dashboardFreeFormLayoutElementBorderStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i *dashboardFreeFormLayoutElementBorderStylePtrType) ToDashboardFreeFormLayoutElementBorderStylePtrOutput() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormLayoutElementBorderStylePtrType) ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutElementBorderStylePtrOutput)
}

type DashboardFreeFormLayoutElementBorderStyleOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) ToDashboardFreeFormLayoutElementBorderStyleOutput() DashboardFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) ToDashboardFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) ToDashboardFreeFormLayoutElementBorderStylePtrOutput() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o.ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormLayoutElementBorderStyle) *DashboardFreeFormLayoutElementBorderStyle {
		return &v
	}).(DashboardFreeFormLayoutElementBorderStylePtrOutput)
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElementBorderStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardFreeFormLayoutElementBorderStyleOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutElementBorderStyle) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardFreeFormLayoutElementBorderStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutElementBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o DashboardFreeFormLayoutElementBorderStylePtrOutput) ToDashboardFreeFormLayoutElementBorderStylePtrOutput() DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBorderStylePtrOutput) ToDashboardFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o DashboardFreeFormLayoutElementBorderStylePtrOutput) Elem() DashboardFreeFormLayoutElementBorderStyleOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBorderStyle) DashboardFreeFormLayoutElementBorderStyle {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormLayoutElementBorderStyle
		return ret
	}).(DashboardFreeFormLayoutElementBorderStyleOutput)
}

func (o DashboardFreeFormLayoutElementBorderStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBorderStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFreeFormLayoutElementBorderStylePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutElementBorderStyle) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardFreeFormLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth string `pulumi:"optimizedViewPortWidth"`
}

// DashboardFreeFormLayoutScreenCanvasSizeOptionsInput is an input type that accepts DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs and DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutScreenCanvasSizeOptionsInput` via:
//
//	DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
type DashboardFreeFormLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput
	ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput
}

type DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringInput `pulumi:"optimizedViewPortWidth"`
}

func (DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return i.ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

func (i DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput).ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs, DashboardFreeFormLayoutScreenCanvasSizeOptionsPtr and DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
	ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
}

type dashboardFreeFormLayoutScreenCanvasSizeOptionsPtrType DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs

func DashboardFreeFormLayoutScreenCanvasSizeOptionsPtr(v *DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput {
	return (*dashboardFreeFormLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*dashboardFreeFormLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormLayoutScreenCanvasSizeOptions) *DashboardFreeFormLayoutScreenCanvasSizeOptions {
		return &v
	}).(DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFreeFormLayoutScreenCanvasSizeOptions) string { return v.OptimizedViewPortWidth }).(pulumi.StringOutput)
}

type DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToDashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) Elem() DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutScreenCanvasSizeOptions) DashboardFreeFormLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormLayoutScreenCanvasSizeOptions
		return ret
	}).(DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFreeFormLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

type DashboardFreeFormSectionLayoutConfiguration struct {
	Elements []DashboardFreeFormLayoutElement `pulumi:"elements"`
}

// DashboardFreeFormSectionLayoutConfigurationInput is an input type that accepts DashboardFreeFormSectionLayoutConfigurationArgs and DashboardFreeFormSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardFreeFormSectionLayoutConfigurationInput` via:
//
//	DashboardFreeFormSectionLayoutConfigurationArgs{...}
type DashboardFreeFormSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardFreeFormSectionLayoutConfigurationOutput() DashboardFreeFormSectionLayoutConfigurationOutput
	ToDashboardFreeFormSectionLayoutConfigurationOutputWithContext(context.Context) DashboardFreeFormSectionLayoutConfigurationOutput
}

type DashboardFreeFormSectionLayoutConfigurationArgs struct {
	Elements DashboardFreeFormLayoutElementArrayInput `pulumi:"elements"`
}

func (DashboardFreeFormSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i DashboardFreeFormSectionLayoutConfigurationArgs) ToDashboardFreeFormSectionLayoutConfigurationOutput() DashboardFreeFormSectionLayoutConfigurationOutput {
	return i.ToDashboardFreeFormSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardFreeFormSectionLayoutConfigurationArgs) ToDashboardFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormSectionLayoutConfigurationOutput)
}

func (i DashboardFreeFormSectionLayoutConfigurationArgs) ToDashboardFreeFormSectionLayoutConfigurationPtrOutput() DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFreeFormSectionLayoutConfigurationArgs) ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormSectionLayoutConfigurationOutput).ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardFreeFormSectionLayoutConfigurationPtrInput is an input type that accepts DashboardFreeFormSectionLayoutConfigurationArgs, DashboardFreeFormSectionLayoutConfigurationPtr and DashboardFreeFormSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFreeFormSectionLayoutConfigurationPtrInput` via:
//
//	        DashboardFreeFormSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFreeFormSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFreeFormSectionLayoutConfigurationPtrOutput() DashboardFreeFormSectionLayoutConfigurationPtrOutput
	ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Context) DashboardFreeFormSectionLayoutConfigurationPtrOutput
}

type dashboardFreeFormSectionLayoutConfigurationPtrType DashboardFreeFormSectionLayoutConfigurationArgs

func DashboardFreeFormSectionLayoutConfigurationPtr(v *DashboardFreeFormSectionLayoutConfigurationArgs) DashboardFreeFormSectionLayoutConfigurationPtrInput {
	return (*dashboardFreeFormSectionLayoutConfigurationPtrType)(v)
}

func (*dashboardFreeFormSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardFreeFormSectionLayoutConfigurationPtrType) ToDashboardFreeFormSectionLayoutConfigurationPtrOutput() DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFreeFormSectionLayoutConfigurationPtrType) ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFreeFormSectionLayoutConfigurationPtrOutput)
}

type DashboardFreeFormSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o DashboardFreeFormSectionLayoutConfigurationOutput) ToDashboardFreeFormSectionLayoutConfigurationOutput() DashboardFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o DashboardFreeFormSectionLayoutConfigurationOutput) ToDashboardFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o DashboardFreeFormSectionLayoutConfigurationOutput) ToDashboardFreeFormSectionLayoutConfigurationPtrOutput() DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFreeFormSectionLayoutConfigurationOutput) ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFreeFormSectionLayoutConfiguration) *DashboardFreeFormSectionLayoutConfiguration {
		return &v
	}).(DashboardFreeFormSectionLayoutConfigurationPtrOutput)
}

func (o DashboardFreeFormSectionLayoutConfigurationOutput) Elements() DashboardFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v DashboardFreeFormSectionLayoutConfiguration) []DashboardFreeFormLayoutElement {
		return v.Elements
	}).(DashboardFreeFormLayoutElementArrayOutput)
}

type DashboardFreeFormSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFreeFormSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o DashboardFreeFormSectionLayoutConfigurationPtrOutput) ToDashboardFreeFormSectionLayoutConfigurationPtrOutput() DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardFreeFormSectionLayoutConfigurationPtrOutput) ToDashboardFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardFreeFormSectionLayoutConfigurationPtrOutput) Elem() DashboardFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardFreeFormSectionLayoutConfiguration) DashboardFreeFormSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFreeFormSectionLayoutConfiguration
		return ret
	}).(DashboardFreeFormSectionLayoutConfigurationOutput)
}

func (o DashboardFreeFormSectionLayoutConfigurationPtrOutput) Elements() DashboardFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *DashboardFreeFormSectionLayoutConfiguration) []DashboardFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(DashboardFreeFormLayoutElementArrayOutput)
}

type DashboardFunnelChartAggregatedFieldWells struct {
	Category []DashboardDimensionField `pulumi:"category"`
	Values   []DashboardMeasureField   `pulumi:"values"`
}

// DashboardFunnelChartAggregatedFieldWellsInput is an input type that accepts DashboardFunnelChartAggregatedFieldWellsArgs and DashboardFunnelChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardFunnelChartAggregatedFieldWellsInput` via:
//
//	DashboardFunnelChartAggregatedFieldWellsArgs{...}
type DashboardFunnelChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardFunnelChartAggregatedFieldWellsOutput() DashboardFunnelChartAggregatedFieldWellsOutput
	ToDashboardFunnelChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardFunnelChartAggregatedFieldWellsOutput
}

type DashboardFunnelChartAggregatedFieldWellsArgs struct {
	Category DashboardDimensionFieldArrayInput `pulumi:"category"`
	Values   DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardFunnelChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardFunnelChartAggregatedFieldWellsArgs) ToDashboardFunnelChartAggregatedFieldWellsOutput() DashboardFunnelChartAggregatedFieldWellsOutput {
	return i.ToDashboardFunnelChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardFunnelChartAggregatedFieldWellsArgs) ToDashboardFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartAggregatedFieldWellsOutput)
}

func (i DashboardFunnelChartAggregatedFieldWellsArgs) ToDashboardFunnelChartAggregatedFieldWellsPtrOutput() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartAggregatedFieldWellsArgs) ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartAggregatedFieldWellsOutput).ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardFunnelChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardFunnelChartAggregatedFieldWellsArgs, DashboardFunnelChartAggregatedFieldWellsPtr and DashboardFunnelChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardFunnelChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartAggregatedFieldWellsPtrOutput() DashboardFunnelChartAggregatedFieldWellsPtrOutput
	ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardFunnelChartAggregatedFieldWellsPtrOutput
}

type dashboardFunnelChartAggregatedFieldWellsPtrType DashboardFunnelChartAggregatedFieldWellsArgs

func DashboardFunnelChartAggregatedFieldWellsPtr(v *DashboardFunnelChartAggregatedFieldWellsArgs) DashboardFunnelChartAggregatedFieldWellsPtrInput {
	return (*dashboardFunnelChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardFunnelChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardFunnelChartAggregatedFieldWellsPtrType) ToDashboardFunnelChartAggregatedFieldWellsPtrOutput() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartAggregatedFieldWellsPtrType) ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartAggregatedFieldWellsPtrOutput)
}

type DashboardFunnelChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) ToDashboardFunnelChartAggregatedFieldWellsOutput() DashboardFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) ToDashboardFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) ToDashboardFunnelChartAggregatedFieldWellsPtrOutput() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartAggregatedFieldWells) *DashboardFunnelChartAggregatedFieldWells {
		return &v
	}).(DashboardFunnelChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardFunnelChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardFunnelChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardFunnelChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardFunnelChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardFunnelChartAggregatedFieldWellsPtrOutput) ToDashboardFunnelChartAggregatedFieldWellsPtrOutput() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardFunnelChartAggregatedFieldWellsPtrOutput) ToDashboardFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardFunnelChartAggregatedFieldWellsPtrOutput) Elem() DashboardFunnelChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardFunnelChartAggregatedFieldWells) DashboardFunnelChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartAggregatedFieldWells
		return ret
	}).(DashboardFunnelChartAggregatedFieldWellsOutput)
}

func (o DashboardFunnelChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardFunnelChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardFunnelChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardFunnelChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardFunnelChartConfiguration struct {
	CategoryLabelOptions *DashboardChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     *DashboardFunnelChartDataLabelOptions  `pulumi:"dataLabelOptions"`
	FieldWells           *DashboardFunnelChartFieldWells        `pulumi:"fieldWells"`
	SortConfiguration    *DashboardFunnelChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip              *DashboardTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions    *DashboardChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette        *DashboardVisualPalette                `pulumi:"visualPalette"`
}

// DashboardFunnelChartConfigurationInput is an input type that accepts DashboardFunnelChartConfigurationArgs and DashboardFunnelChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardFunnelChartConfigurationInput` via:
//
//	DashboardFunnelChartConfigurationArgs{...}
type DashboardFunnelChartConfigurationInput interface {
	pulumi.Input

	ToDashboardFunnelChartConfigurationOutput() DashboardFunnelChartConfigurationOutput
	ToDashboardFunnelChartConfigurationOutputWithContext(context.Context) DashboardFunnelChartConfigurationOutput
}

type DashboardFunnelChartConfigurationArgs struct {
	CategoryLabelOptions DashboardChartAxisLabelOptionsPtrInput        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     DashboardFunnelChartDataLabelOptionsPtrInput  `pulumi:"dataLabelOptions"`
	FieldWells           DashboardFunnelChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration    DashboardFunnelChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip              DashboardTooltipOptionsPtrInput               `pulumi:"tooltip"`
	ValueLabelOptions    DashboardChartAxisLabelOptionsPtrInput        `pulumi:"valueLabelOptions"`
	VisualPalette        DashboardVisualPalettePtrInput                `pulumi:"visualPalette"`
}

func (DashboardFunnelChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartConfiguration)(nil)).Elem()
}

func (i DashboardFunnelChartConfigurationArgs) ToDashboardFunnelChartConfigurationOutput() DashboardFunnelChartConfigurationOutput {
	return i.ToDashboardFunnelChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardFunnelChartConfigurationArgs) ToDashboardFunnelChartConfigurationOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartConfigurationOutput)
}

func (i DashboardFunnelChartConfigurationArgs) ToDashboardFunnelChartConfigurationPtrOutput() DashboardFunnelChartConfigurationPtrOutput {
	return i.ToDashboardFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartConfigurationArgs) ToDashboardFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartConfigurationOutput).ToDashboardFunnelChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardFunnelChartConfigurationPtrInput is an input type that accepts DashboardFunnelChartConfigurationArgs, DashboardFunnelChartConfigurationPtr and DashboardFunnelChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartConfigurationPtrInput` via:
//
//	        DashboardFunnelChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartConfigurationPtrOutput() DashboardFunnelChartConfigurationPtrOutput
	ToDashboardFunnelChartConfigurationPtrOutputWithContext(context.Context) DashboardFunnelChartConfigurationPtrOutput
}

type dashboardFunnelChartConfigurationPtrType DashboardFunnelChartConfigurationArgs

func DashboardFunnelChartConfigurationPtr(v *DashboardFunnelChartConfigurationArgs) DashboardFunnelChartConfigurationPtrInput {
	return (*dashboardFunnelChartConfigurationPtrType)(v)
}

func (*dashboardFunnelChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartConfiguration)(nil)).Elem()
}

func (i *dashboardFunnelChartConfigurationPtrType) ToDashboardFunnelChartConfigurationPtrOutput() DashboardFunnelChartConfigurationPtrOutput {
	return i.ToDashboardFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartConfigurationPtrType) ToDashboardFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartConfigurationPtrOutput)
}

type DashboardFunnelChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartConfiguration)(nil)).Elem()
}

func (o DashboardFunnelChartConfigurationOutput) ToDashboardFunnelChartConfigurationOutput() DashboardFunnelChartConfigurationOutput {
	return o
}

func (o DashboardFunnelChartConfigurationOutput) ToDashboardFunnelChartConfigurationOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationOutput {
	return o
}

func (o DashboardFunnelChartConfigurationOutput) ToDashboardFunnelChartConfigurationPtrOutput() DashboardFunnelChartConfigurationPtrOutput {
	return o.ToDashboardFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartConfigurationOutput) ToDashboardFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartConfiguration) *DashboardFunnelChartConfiguration {
		return &v
	}).(DashboardFunnelChartConfigurationPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) DataLabelOptions() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardFunnelChartDataLabelOptions {
		return v.DataLabelOptions
	}).(DashboardFunnelChartDataLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) FieldWells() DashboardFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardFunnelChartFieldWells { return v.FieldWells }).(DashboardFunnelChartFieldWellsPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) SortConfiguration() DashboardFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardFunnelChartSortConfiguration {
		return v.SortConfiguration
	}).(DashboardFunnelChartSortConfigurationPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardChartAxisLabelOptions { return v.ValueLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardFunnelChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartConfiguration)(nil)).Elem()
}

func (o DashboardFunnelChartConfigurationPtrOutput) ToDashboardFunnelChartConfigurationPtrOutput() DashboardFunnelChartConfigurationPtrOutput {
	return o
}

func (o DashboardFunnelChartConfigurationPtrOutput) ToDashboardFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartConfigurationPtrOutput {
	return o
}

func (o DashboardFunnelChartConfigurationPtrOutput) Elem() DashboardFunnelChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) DashboardFunnelChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartConfiguration
		return ret
	}).(DashboardFunnelChartConfigurationOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) DataLabelOptions() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardFunnelChartDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabelOptions
	}).(DashboardFunnelChartDataLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) FieldWells() DashboardFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardFunnelChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardFunnelChartFieldWellsPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) SortConfiguration() DashboardFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardFunnelChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardFunnelChartSortConfigurationPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardFunnelChartDataLabelOptions struct {
	CategoryLabelVisibility *DashboardVisibility                       `pulumi:"categoryLabelVisibility"`
	LabelColor              *string                                    `pulumi:"labelColor"`
	LabelFontConfiguration  *DashboardFontConfiguration                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   *DashboardFunnelChartMeasureDataLabelStyle `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  *DashboardVisibility                       `pulumi:"measureLabelVisibility"`
	Position                *DashboardDataLabelPosition                `pulumi:"position"`
	Visibility              *DashboardVisibility                       `pulumi:"visibility"`
}

// DashboardFunnelChartDataLabelOptionsInput is an input type that accepts DashboardFunnelChartDataLabelOptionsArgs and DashboardFunnelChartDataLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardFunnelChartDataLabelOptionsInput` via:
//
//	DashboardFunnelChartDataLabelOptionsArgs{...}
type DashboardFunnelChartDataLabelOptionsInput interface {
	pulumi.Input

	ToDashboardFunnelChartDataLabelOptionsOutput() DashboardFunnelChartDataLabelOptionsOutput
	ToDashboardFunnelChartDataLabelOptionsOutputWithContext(context.Context) DashboardFunnelChartDataLabelOptionsOutput
}

type DashboardFunnelChartDataLabelOptionsArgs struct {
	CategoryLabelVisibility DashboardVisibilityPtrInput                       `pulumi:"categoryLabelVisibility"`
	LabelColor              pulumi.StringPtrInput                             `pulumi:"labelColor"`
	LabelFontConfiguration  DashboardFontConfigurationPtrInput                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   DashboardFunnelChartMeasureDataLabelStylePtrInput `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  DashboardVisibilityPtrInput                       `pulumi:"measureLabelVisibility"`
	Position                DashboardDataLabelPositionPtrInput                `pulumi:"position"`
	Visibility              DashboardVisibilityPtrInput                       `pulumi:"visibility"`
}

func (DashboardFunnelChartDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i DashboardFunnelChartDataLabelOptionsArgs) ToDashboardFunnelChartDataLabelOptionsOutput() DashboardFunnelChartDataLabelOptionsOutput {
	return i.ToDashboardFunnelChartDataLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardFunnelChartDataLabelOptionsArgs) ToDashboardFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartDataLabelOptionsOutput)
}

func (i DashboardFunnelChartDataLabelOptionsArgs) ToDashboardFunnelChartDataLabelOptionsPtrOutput() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return i.ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartDataLabelOptionsArgs) ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartDataLabelOptionsOutput).ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardFunnelChartDataLabelOptionsPtrInput is an input type that accepts DashboardFunnelChartDataLabelOptionsArgs, DashboardFunnelChartDataLabelOptionsPtr and DashboardFunnelChartDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartDataLabelOptionsPtrInput` via:
//
//	        DashboardFunnelChartDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartDataLabelOptionsPtrOutput() DashboardFunnelChartDataLabelOptionsPtrOutput
	ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(context.Context) DashboardFunnelChartDataLabelOptionsPtrOutput
}

type dashboardFunnelChartDataLabelOptionsPtrType DashboardFunnelChartDataLabelOptionsArgs

func DashboardFunnelChartDataLabelOptionsPtr(v *DashboardFunnelChartDataLabelOptionsArgs) DashboardFunnelChartDataLabelOptionsPtrInput {
	return (*dashboardFunnelChartDataLabelOptionsPtrType)(v)
}

func (*dashboardFunnelChartDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i *dashboardFunnelChartDataLabelOptionsPtrType) ToDashboardFunnelChartDataLabelOptionsPtrOutput() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return i.ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartDataLabelOptionsPtrType) ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartDataLabelOptionsPtrOutput)
}

type DashboardFunnelChartDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o DashboardFunnelChartDataLabelOptionsOutput) ToDashboardFunnelChartDataLabelOptionsOutput() DashboardFunnelChartDataLabelOptionsOutput {
	return o
}

func (o DashboardFunnelChartDataLabelOptionsOutput) ToDashboardFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsOutput {
	return o
}

func (o DashboardFunnelChartDataLabelOptionsOutput) ToDashboardFunnelChartDataLabelOptionsPtrOutput() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o.ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartDataLabelOptionsOutput) ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartDataLabelOptions) *DashboardFunnelChartDataLabelOptions {
		return &v
	}).(DashboardFunnelChartDataLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) CategoryLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardVisibility { return v.CategoryLabelVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) LabelFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardFontConfiguration {
		return v.LabelFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) MeasureDataLabelStyle() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardFunnelChartMeasureDataLabelStyle {
		return v.MeasureDataLabelStyle
	}).(DashboardFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) MeasureLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardVisibility { return v.MeasureLabelVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) Position() DashboardDataLabelPositionPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardDataLabelPosition { return v.Position }).(DashboardDataLabelPositionPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartDataLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardFunnelChartDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) ToDashboardFunnelChartDataLabelOptionsPtrOutput() DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) ToDashboardFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) Elem() DashboardFunnelChartDataLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) DashboardFunnelChartDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartDataLabelOptions
		return ret
	}).(DashboardFunnelChartDataLabelOptionsOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) CategoryLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) LabelFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) MeasureDataLabelStyle() DashboardFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardFunnelChartMeasureDataLabelStyle {
		if v == nil {
			return nil
		}
		return v.MeasureDataLabelStyle
	}).(DashboardFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) MeasureLabelVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) Position() DashboardDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(DashboardDataLabelPositionPtrOutput)
}

func (o DashboardFunnelChartDataLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartDataLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardFunnelChartFieldWells struct {
	FunnelChartAggregatedFieldWells *DashboardFunnelChartAggregatedFieldWells `pulumi:"funnelChartAggregatedFieldWells"`
}

// DashboardFunnelChartFieldWellsInput is an input type that accepts DashboardFunnelChartFieldWellsArgs and DashboardFunnelChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardFunnelChartFieldWellsInput` via:
//
//	DashboardFunnelChartFieldWellsArgs{...}
type DashboardFunnelChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardFunnelChartFieldWellsOutput() DashboardFunnelChartFieldWellsOutput
	ToDashboardFunnelChartFieldWellsOutputWithContext(context.Context) DashboardFunnelChartFieldWellsOutput
}

type DashboardFunnelChartFieldWellsArgs struct {
	FunnelChartAggregatedFieldWells DashboardFunnelChartAggregatedFieldWellsPtrInput `pulumi:"funnelChartAggregatedFieldWells"`
}

func (DashboardFunnelChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartFieldWells)(nil)).Elem()
}

func (i DashboardFunnelChartFieldWellsArgs) ToDashboardFunnelChartFieldWellsOutput() DashboardFunnelChartFieldWellsOutput {
	return i.ToDashboardFunnelChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardFunnelChartFieldWellsArgs) ToDashboardFunnelChartFieldWellsOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartFieldWellsOutput)
}

func (i DashboardFunnelChartFieldWellsArgs) ToDashboardFunnelChartFieldWellsPtrOutput() DashboardFunnelChartFieldWellsPtrOutput {
	return i.ToDashboardFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartFieldWellsArgs) ToDashboardFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartFieldWellsOutput).ToDashboardFunnelChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardFunnelChartFieldWellsPtrInput is an input type that accepts DashboardFunnelChartFieldWellsArgs, DashboardFunnelChartFieldWellsPtr and DashboardFunnelChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartFieldWellsPtrInput` via:
//
//	        DashboardFunnelChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartFieldWellsPtrOutput() DashboardFunnelChartFieldWellsPtrOutput
	ToDashboardFunnelChartFieldWellsPtrOutputWithContext(context.Context) DashboardFunnelChartFieldWellsPtrOutput
}

type dashboardFunnelChartFieldWellsPtrType DashboardFunnelChartFieldWellsArgs

func DashboardFunnelChartFieldWellsPtr(v *DashboardFunnelChartFieldWellsArgs) DashboardFunnelChartFieldWellsPtrInput {
	return (*dashboardFunnelChartFieldWellsPtrType)(v)
}

func (*dashboardFunnelChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartFieldWells)(nil)).Elem()
}

func (i *dashboardFunnelChartFieldWellsPtrType) ToDashboardFunnelChartFieldWellsPtrOutput() DashboardFunnelChartFieldWellsPtrOutput {
	return i.ToDashboardFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartFieldWellsPtrType) ToDashboardFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartFieldWellsPtrOutput)
}

type DashboardFunnelChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartFieldWells)(nil)).Elem()
}

func (o DashboardFunnelChartFieldWellsOutput) ToDashboardFunnelChartFieldWellsOutput() DashboardFunnelChartFieldWellsOutput {
	return o
}

func (o DashboardFunnelChartFieldWellsOutput) ToDashboardFunnelChartFieldWellsOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsOutput {
	return o
}

func (o DashboardFunnelChartFieldWellsOutput) ToDashboardFunnelChartFieldWellsPtrOutput() DashboardFunnelChartFieldWellsPtrOutput {
	return o.ToDashboardFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartFieldWellsOutput) ToDashboardFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartFieldWells) *DashboardFunnelChartFieldWells {
		return &v
	}).(DashboardFunnelChartFieldWellsPtrOutput)
}

func (o DashboardFunnelChartFieldWellsOutput) FunnelChartAggregatedFieldWells() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartFieldWells) *DashboardFunnelChartAggregatedFieldWells {
		return v.FunnelChartAggregatedFieldWells
	}).(DashboardFunnelChartAggregatedFieldWellsPtrOutput)
}

type DashboardFunnelChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartFieldWells)(nil)).Elem()
}

func (o DashboardFunnelChartFieldWellsPtrOutput) ToDashboardFunnelChartFieldWellsPtrOutput() DashboardFunnelChartFieldWellsPtrOutput {
	return o
}

func (o DashboardFunnelChartFieldWellsPtrOutput) ToDashboardFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardFunnelChartFieldWellsPtrOutput {
	return o
}

func (o DashboardFunnelChartFieldWellsPtrOutput) Elem() DashboardFunnelChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardFunnelChartFieldWells) DashboardFunnelChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartFieldWells
		return ret
	}).(DashboardFunnelChartFieldWellsOutput)
}

func (o DashboardFunnelChartFieldWellsPtrOutput) FunnelChartAggregatedFieldWells() DashboardFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartFieldWells) *DashboardFunnelChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FunnelChartAggregatedFieldWells
	}).(DashboardFunnelChartAggregatedFieldWellsPtrOutput)
}

type DashboardFunnelChartSortConfiguration struct {
	CategoryItemsLimit *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []DashboardFieldSortOptions       `pulumi:"categorySort"`
}

// DashboardFunnelChartSortConfigurationInput is an input type that accepts DashboardFunnelChartSortConfigurationArgs and DashboardFunnelChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardFunnelChartSortConfigurationInput` via:
//
//	DashboardFunnelChartSortConfigurationArgs{...}
type DashboardFunnelChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardFunnelChartSortConfigurationOutput() DashboardFunnelChartSortConfigurationOutput
	ToDashboardFunnelChartSortConfigurationOutputWithContext(context.Context) DashboardFunnelChartSortConfigurationOutput
}

type DashboardFunnelChartSortConfigurationArgs struct {
	CategoryItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (DashboardFunnelChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartSortConfiguration)(nil)).Elem()
}

func (i DashboardFunnelChartSortConfigurationArgs) ToDashboardFunnelChartSortConfigurationOutput() DashboardFunnelChartSortConfigurationOutput {
	return i.ToDashboardFunnelChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardFunnelChartSortConfigurationArgs) ToDashboardFunnelChartSortConfigurationOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartSortConfigurationOutput)
}

func (i DashboardFunnelChartSortConfigurationArgs) ToDashboardFunnelChartSortConfigurationPtrOutput() DashboardFunnelChartSortConfigurationPtrOutput {
	return i.ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartSortConfigurationArgs) ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartSortConfigurationOutput).ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardFunnelChartSortConfigurationPtrInput is an input type that accepts DashboardFunnelChartSortConfigurationArgs, DashboardFunnelChartSortConfigurationPtr and DashboardFunnelChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartSortConfigurationPtrInput` via:
//
//	        DashboardFunnelChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartSortConfigurationPtrOutput() DashboardFunnelChartSortConfigurationPtrOutput
	ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(context.Context) DashboardFunnelChartSortConfigurationPtrOutput
}

type dashboardFunnelChartSortConfigurationPtrType DashboardFunnelChartSortConfigurationArgs

func DashboardFunnelChartSortConfigurationPtr(v *DashboardFunnelChartSortConfigurationArgs) DashboardFunnelChartSortConfigurationPtrInput {
	return (*dashboardFunnelChartSortConfigurationPtrType)(v)
}

func (*dashboardFunnelChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardFunnelChartSortConfigurationPtrType) ToDashboardFunnelChartSortConfigurationPtrOutput() DashboardFunnelChartSortConfigurationPtrOutput {
	return i.ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartSortConfigurationPtrType) ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartSortConfigurationPtrOutput)
}

type DashboardFunnelChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartSortConfiguration)(nil)).Elem()
}

func (o DashboardFunnelChartSortConfigurationOutput) ToDashboardFunnelChartSortConfigurationOutput() DashboardFunnelChartSortConfigurationOutput {
	return o
}

func (o DashboardFunnelChartSortConfigurationOutput) ToDashboardFunnelChartSortConfigurationOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationOutput {
	return o
}

func (o DashboardFunnelChartSortConfigurationOutput) ToDashboardFunnelChartSortConfigurationPtrOutput() DashboardFunnelChartSortConfigurationPtrOutput {
	return o.ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartSortConfigurationOutput) ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartSortConfiguration) *DashboardFunnelChartSortConfiguration {
		return &v
	}).(DashboardFunnelChartSortConfigurationPtrOutput)
}

func (o DashboardFunnelChartSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardFunnelChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardFunnelChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardFunnelChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartSortConfiguration)(nil)).Elem()
}

func (o DashboardFunnelChartSortConfigurationPtrOutput) ToDashboardFunnelChartSortConfigurationPtrOutput() DashboardFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardFunnelChartSortConfigurationPtrOutput) ToDashboardFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardFunnelChartSortConfigurationPtrOutput) Elem() DashboardFunnelChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardFunnelChartSortConfiguration) DashboardFunnelChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartSortConfiguration
		return ret
	}).(DashboardFunnelChartSortConfigurationOutput)
}

func (o DashboardFunnelChartSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardFunnelChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardFunnelChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardFunnelChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardFunnelChartConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardFunnelChartVisualInput is an input type that accepts DashboardFunnelChartVisualArgs and DashboardFunnelChartVisualOutput values.
// You can construct a concrete instance of `DashboardFunnelChartVisualInput` via:
//
//	DashboardFunnelChartVisualArgs{...}
type DashboardFunnelChartVisualInput interface {
	pulumi.Input

	ToDashboardFunnelChartVisualOutput() DashboardFunnelChartVisualOutput
	ToDashboardFunnelChartVisualOutputWithContext(context.Context) DashboardFunnelChartVisualOutput
}

type DashboardFunnelChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardFunnelChartConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardFunnelChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartVisual)(nil)).Elem()
}

func (i DashboardFunnelChartVisualArgs) ToDashboardFunnelChartVisualOutput() DashboardFunnelChartVisualOutput {
	return i.ToDashboardFunnelChartVisualOutputWithContext(context.Background())
}

func (i DashboardFunnelChartVisualArgs) ToDashboardFunnelChartVisualOutputWithContext(ctx context.Context) DashboardFunnelChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartVisualOutput)
}

func (i DashboardFunnelChartVisualArgs) ToDashboardFunnelChartVisualPtrOutput() DashboardFunnelChartVisualPtrOutput {
	return i.ToDashboardFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardFunnelChartVisualArgs) ToDashboardFunnelChartVisualPtrOutputWithContext(ctx context.Context) DashboardFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartVisualOutput).ToDashboardFunnelChartVisualPtrOutputWithContext(ctx)
}

// DashboardFunnelChartVisualPtrInput is an input type that accepts DashboardFunnelChartVisualArgs, DashboardFunnelChartVisualPtr and DashboardFunnelChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardFunnelChartVisualPtrInput` via:
//
//	        DashboardFunnelChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardFunnelChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardFunnelChartVisualPtrOutput() DashboardFunnelChartVisualPtrOutput
	ToDashboardFunnelChartVisualPtrOutputWithContext(context.Context) DashboardFunnelChartVisualPtrOutput
}

type dashboardFunnelChartVisualPtrType DashboardFunnelChartVisualArgs

func DashboardFunnelChartVisualPtr(v *DashboardFunnelChartVisualArgs) DashboardFunnelChartVisualPtrInput {
	return (*dashboardFunnelChartVisualPtrType)(v)
}

func (*dashboardFunnelChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartVisual)(nil)).Elem()
}

func (i *dashboardFunnelChartVisualPtrType) ToDashboardFunnelChartVisualPtrOutput() DashboardFunnelChartVisualPtrOutput {
	return i.ToDashboardFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardFunnelChartVisualPtrType) ToDashboardFunnelChartVisualPtrOutputWithContext(ctx context.Context) DashboardFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardFunnelChartVisualPtrOutput)
}

type DashboardFunnelChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardFunnelChartVisual)(nil)).Elem()
}

func (o DashboardFunnelChartVisualOutput) ToDashboardFunnelChartVisualOutput() DashboardFunnelChartVisualOutput {
	return o
}

func (o DashboardFunnelChartVisualOutput) ToDashboardFunnelChartVisualOutputWithContext(ctx context.Context) DashboardFunnelChartVisualOutput {
	return o
}

func (o DashboardFunnelChartVisualOutput) ToDashboardFunnelChartVisualPtrOutput() DashboardFunnelChartVisualPtrOutput {
	return o.ToDashboardFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardFunnelChartVisualOutput) ToDashboardFunnelChartVisualPtrOutputWithContext(ctx context.Context) DashboardFunnelChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardFunnelChartVisual) *DashboardFunnelChartVisual {
		return &v
	}).(DashboardFunnelChartVisualPtrOutput)
}

func (o DashboardFunnelChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardFunnelChartVisualOutput) ChartConfiguration() DashboardFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) *DashboardFunnelChartConfiguration { return v.ChartConfiguration }).(DashboardFunnelChartConfigurationPtrOutput)
}

func (o DashboardFunnelChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardFunnelChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardFunnelChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardFunnelChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardFunnelChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardFunnelChartVisual)(nil)).Elem()
}

func (o DashboardFunnelChartVisualPtrOutput) ToDashboardFunnelChartVisualPtrOutput() DashboardFunnelChartVisualPtrOutput {
	return o
}

func (o DashboardFunnelChartVisualPtrOutput) ToDashboardFunnelChartVisualPtrOutputWithContext(ctx context.Context) DashboardFunnelChartVisualPtrOutput {
	return o
}

func (o DashboardFunnelChartVisualPtrOutput) Elem() DashboardFunnelChartVisualOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) DashboardFunnelChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardFunnelChartVisual
		return ret
	}).(DashboardFunnelChartVisualOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) ChartConfiguration() DashboardFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) *DashboardFunnelChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardFunnelChartConfigurationPtrOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardFunnelChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardFunnelChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardGaugeChartArcConditionalFormatting struct {
	ForegroundColor *DashboardConditionalFormattingColor `pulumi:"foregroundColor"`
}

// DashboardGaugeChartArcConditionalFormattingInput is an input type that accepts DashboardGaugeChartArcConditionalFormattingArgs and DashboardGaugeChartArcConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardGaugeChartArcConditionalFormattingInput` via:
//
//	DashboardGaugeChartArcConditionalFormattingArgs{...}
type DashboardGaugeChartArcConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardGaugeChartArcConditionalFormattingOutput() DashboardGaugeChartArcConditionalFormattingOutput
	ToDashboardGaugeChartArcConditionalFormattingOutputWithContext(context.Context) DashboardGaugeChartArcConditionalFormattingOutput
}

type DashboardGaugeChartArcConditionalFormattingArgs struct {
	ForegroundColor DashboardConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (DashboardGaugeChartArcConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i DashboardGaugeChartArcConditionalFormattingArgs) ToDashboardGaugeChartArcConditionalFormattingOutput() DashboardGaugeChartArcConditionalFormattingOutput {
	return i.ToDashboardGaugeChartArcConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardGaugeChartArcConditionalFormattingArgs) ToDashboardGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartArcConditionalFormattingOutput)
}

func (i DashboardGaugeChartArcConditionalFormattingArgs) ToDashboardGaugeChartArcConditionalFormattingPtrOutput() DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartArcConditionalFormattingArgs) ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartArcConditionalFormattingOutput).ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardGaugeChartArcConditionalFormattingPtrInput is an input type that accepts DashboardGaugeChartArcConditionalFormattingArgs, DashboardGaugeChartArcConditionalFormattingPtr and DashboardGaugeChartArcConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartArcConditionalFormattingPtrInput` via:
//
//	        DashboardGaugeChartArcConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartArcConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartArcConditionalFormattingPtrOutput() DashboardGaugeChartArcConditionalFormattingPtrOutput
	ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Context) DashboardGaugeChartArcConditionalFormattingPtrOutput
}

type dashboardGaugeChartArcConditionalFormattingPtrType DashboardGaugeChartArcConditionalFormattingArgs

func DashboardGaugeChartArcConditionalFormattingPtr(v *DashboardGaugeChartArcConditionalFormattingArgs) DashboardGaugeChartArcConditionalFormattingPtrInput {
	return (*dashboardGaugeChartArcConditionalFormattingPtrType)(v)
}

func (*dashboardGaugeChartArcConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i *dashboardGaugeChartArcConditionalFormattingPtrType) ToDashboardGaugeChartArcConditionalFormattingPtrOutput() DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartArcConditionalFormattingPtrType) ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartArcConditionalFormattingPtrOutput)
}

type DashboardGaugeChartArcConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartArcConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartArcConditionalFormattingOutput) ToDashboardGaugeChartArcConditionalFormattingOutput() DashboardGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartArcConditionalFormattingOutput) ToDashboardGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartArcConditionalFormattingOutput) ToDashboardGaugeChartArcConditionalFormattingPtrOutput() DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return o.ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartArcConditionalFormattingOutput) ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartArcConditionalFormatting) *DashboardGaugeChartArcConditionalFormatting {
		return &v
	}).(DashboardGaugeChartArcConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartArcConditionalFormattingOutput) ForegroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartArcConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.ForegroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardGaugeChartArcConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartArcConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartArcConditionalFormattingPtrOutput) ToDashboardGaugeChartArcConditionalFormattingPtrOutput() DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartArcConditionalFormattingPtrOutput) ToDashboardGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartArcConditionalFormattingPtrOutput) Elem() DashboardGaugeChartArcConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardGaugeChartArcConditionalFormatting) DashboardGaugeChartArcConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartArcConditionalFormatting
		return ret
	}).(DashboardGaugeChartArcConditionalFormattingOutput)
}

func (o DashboardGaugeChartArcConditionalFormattingPtrOutput) ForegroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartArcConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardGaugeChartConditionalFormatting struct {
	ConditionalFormattingOptions []DashboardGaugeChartConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// DashboardGaugeChartConditionalFormattingInput is an input type that accepts DashboardGaugeChartConditionalFormattingArgs and DashboardGaugeChartConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConditionalFormattingInput` via:
//
//	DashboardGaugeChartConditionalFormattingArgs{...}
type DashboardGaugeChartConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardGaugeChartConditionalFormattingOutput() DashboardGaugeChartConditionalFormattingOutput
	ToDashboardGaugeChartConditionalFormattingOutputWithContext(context.Context) DashboardGaugeChartConditionalFormattingOutput
}

type DashboardGaugeChartConditionalFormattingArgs struct {
	ConditionalFormattingOptions DashboardGaugeChartConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (DashboardGaugeChartConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i DashboardGaugeChartConditionalFormattingArgs) ToDashboardGaugeChartConditionalFormattingOutput() DashboardGaugeChartConditionalFormattingOutput {
	return i.ToDashboardGaugeChartConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConditionalFormattingArgs) ToDashboardGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConditionalFormattingOutput)
}

func (i DashboardGaugeChartConditionalFormattingArgs) ToDashboardGaugeChartConditionalFormattingPtrOutput() DashboardGaugeChartConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConditionalFormattingArgs) ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConditionalFormattingOutput).ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardGaugeChartConditionalFormattingPtrInput is an input type that accepts DashboardGaugeChartConditionalFormattingArgs, DashboardGaugeChartConditionalFormattingPtr and DashboardGaugeChartConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConditionalFormattingPtrInput` via:
//
//	        DashboardGaugeChartConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartConditionalFormattingPtrOutput() DashboardGaugeChartConditionalFormattingPtrOutput
	ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(context.Context) DashboardGaugeChartConditionalFormattingPtrOutput
}

type dashboardGaugeChartConditionalFormattingPtrType DashboardGaugeChartConditionalFormattingArgs

func DashboardGaugeChartConditionalFormattingPtr(v *DashboardGaugeChartConditionalFormattingArgs) DashboardGaugeChartConditionalFormattingPtrInput {
	return (*dashboardGaugeChartConditionalFormattingPtrType)(v)
}

func (*dashboardGaugeChartConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i *dashboardGaugeChartConditionalFormattingPtrType) ToDashboardGaugeChartConditionalFormattingPtrOutput() DashboardGaugeChartConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartConditionalFormattingPtrType) ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConditionalFormattingPtrOutput)
}

type DashboardGaugeChartConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartConditionalFormattingOutput) ToDashboardGaugeChartConditionalFormattingOutput() DashboardGaugeChartConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOutput) ToDashboardGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOutput) ToDashboardGaugeChartConditionalFormattingPtrOutput() DashboardGaugeChartConditionalFormattingPtrOutput {
	return o.ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartConditionalFormattingOutput) ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartConditionalFormatting) *DashboardGaugeChartConditionalFormatting {
		return &v
	}).(DashboardGaugeChartConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartConditionalFormattingOutput) ConditionalFormattingOptions() DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v DashboardGaugeChartConditionalFormatting) []DashboardGaugeChartConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(DashboardGaugeChartConditionalFormattingOptionArrayOutput)
}

type DashboardGaugeChartConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartConditionalFormattingPtrOutput) ToDashboardGaugeChartConditionalFormattingPtrOutput() DashboardGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingPtrOutput) ToDashboardGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingPtrOutput) Elem() DashboardGaugeChartConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConditionalFormatting) DashboardGaugeChartConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartConditionalFormatting
		return ret
	}).(DashboardGaugeChartConditionalFormattingOutput)
}

func (o DashboardGaugeChartConditionalFormattingPtrOutput) ConditionalFormattingOptions() DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConditionalFormatting) []DashboardGaugeChartConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(DashboardGaugeChartConditionalFormattingOptionArrayOutput)
}

type DashboardGaugeChartConditionalFormattingOption struct {
	Arc          *DashboardGaugeChartArcConditionalFormatting          `pulumi:"arc"`
	PrimaryValue *DashboardGaugeChartPrimaryValueConditionalFormatting `pulumi:"primaryValue"`
}

// DashboardGaugeChartConditionalFormattingOptionInput is an input type that accepts DashboardGaugeChartConditionalFormattingOptionArgs and DashboardGaugeChartConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConditionalFormattingOptionInput` via:
//
//	DashboardGaugeChartConditionalFormattingOptionArgs{...}
type DashboardGaugeChartConditionalFormattingOptionInput interface {
	pulumi.Input

	ToDashboardGaugeChartConditionalFormattingOptionOutput() DashboardGaugeChartConditionalFormattingOptionOutput
	ToDashboardGaugeChartConditionalFormattingOptionOutputWithContext(context.Context) DashboardGaugeChartConditionalFormattingOptionOutput
}

type DashboardGaugeChartConditionalFormattingOptionArgs struct {
	Arc          DashboardGaugeChartArcConditionalFormattingPtrInput          `pulumi:"arc"`
	PrimaryValue DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput `pulumi:"primaryValue"`
}

func (DashboardGaugeChartConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardGaugeChartConditionalFormattingOptionArgs) ToDashboardGaugeChartConditionalFormattingOptionOutput() DashboardGaugeChartConditionalFormattingOptionOutput {
	return i.ToDashboardGaugeChartConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConditionalFormattingOptionArgs) ToDashboardGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConditionalFormattingOptionOutput)
}

// DashboardGaugeChartConditionalFormattingOptionArrayInput is an input type that accepts DashboardGaugeChartConditionalFormattingOptionArray and DashboardGaugeChartConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConditionalFormattingOptionArrayInput` via:
//
//	DashboardGaugeChartConditionalFormattingOptionArray{ DashboardGaugeChartConditionalFormattingOptionArgs{...} }
type DashboardGaugeChartConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToDashboardGaugeChartConditionalFormattingOptionArrayOutput() DashboardGaugeChartConditionalFormattingOptionArrayOutput
	ToDashboardGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Context) DashboardGaugeChartConditionalFormattingOptionArrayOutput
}

type DashboardGaugeChartConditionalFormattingOptionArray []DashboardGaugeChartConditionalFormattingOptionInput

func (DashboardGaugeChartConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardGaugeChartConditionalFormattingOptionArray) ToDashboardGaugeChartConditionalFormattingOptionArrayOutput() DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return i.ToDashboardGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConditionalFormattingOptionArray) ToDashboardGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConditionalFormattingOptionArrayOutput)
}

type DashboardGaugeChartConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardGaugeChartConditionalFormattingOptionOutput) ToDashboardGaugeChartConditionalFormattingOptionOutput() DashboardGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOptionOutput) ToDashboardGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOptionOutput) Arc() DashboardGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConditionalFormattingOption) *DashboardGaugeChartArcConditionalFormatting {
		return v.Arc
	}).(DashboardGaugeChartArcConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartConditionalFormattingOptionOutput) PrimaryValue() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConditionalFormattingOption) *DashboardGaugeChartPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type DashboardGaugeChartConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardGaugeChartConditionalFormattingOptionArrayOutput) ToDashboardGaugeChartConditionalFormattingOptionArrayOutput() DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOptionArrayOutput) ToDashboardGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardGaugeChartConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) DashboardGaugeChartConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardGaugeChartConditionalFormattingOption {
		return vs[0].([]DashboardGaugeChartConditionalFormattingOption)[vs[1].(int)]
	}).(DashboardGaugeChartConditionalFormattingOptionOutput)
}

type DashboardGaugeChartConfiguration struct {
	DataLabels        *DashboardDataLabelOptions     `pulumi:"dataLabels"`
	FieldWells        *DashboardGaugeChartFieldWells `pulumi:"fieldWells"`
	GaugeChartOptions *DashboardGaugeChartOptions    `pulumi:"gaugeChartOptions"`
	TooltipOptions    *DashboardTooltipOptions       `pulumi:"tooltipOptions"`
	VisualPalette     *DashboardVisualPalette        `pulumi:"visualPalette"`
}

// DashboardGaugeChartConfigurationInput is an input type that accepts DashboardGaugeChartConfigurationArgs and DashboardGaugeChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConfigurationInput` via:
//
//	DashboardGaugeChartConfigurationArgs{...}
type DashboardGaugeChartConfigurationInput interface {
	pulumi.Input

	ToDashboardGaugeChartConfigurationOutput() DashboardGaugeChartConfigurationOutput
	ToDashboardGaugeChartConfigurationOutputWithContext(context.Context) DashboardGaugeChartConfigurationOutput
}

type DashboardGaugeChartConfigurationArgs struct {
	DataLabels        DashboardDataLabelOptionsPtrInput     `pulumi:"dataLabels"`
	FieldWells        DashboardGaugeChartFieldWellsPtrInput `pulumi:"fieldWells"`
	GaugeChartOptions DashboardGaugeChartOptionsPtrInput    `pulumi:"gaugeChartOptions"`
	TooltipOptions    DashboardTooltipOptionsPtrInput       `pulumi:"tooltipOptions"`
	VisualPalette     DashboardVisualPalettePtrInput        `pulumi:"visualPalette"`
}

func (DashboardGaugeChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConfiguration)(nil)).Elem()
}

func (i DashboardGaugeChartConfigurationArgs) ToDashboardGaugeChartConfigurationOutput() DashboardGaugeChartConfigurationOutput {
	return i.ToDashboardGaugeChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConfigurationArgs) ToDashboardGaugeChartConfigurationOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConfigurationOutput)
}

func (i DashboardGaugeChartConfigurationArgs) ToDashboardGaugeChartConfigurationPtrOutput() DashboardGaugeChartConfigurationPtrOutput {
	return i.ToDashboardGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartConfigurationArgs) ToDashboardGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConfigurationOutput).ToDashboardGaugeChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardGaugeChartConfigurationPtrInput is an input type that accepts DashboardGaugeChartConfigurationArgs, DashboardGaugeChartConfigurationPtr and DashboardGaugeChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartConfigurationPtrInput` via:
//
//	        DashboardGaugeChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartConfigurationPtrOutput() DashboardGaugeChartConfigurationPtrOutput
	ToDashboardGaugeChartConfigurationPtrOutputWithContext(context.Context) DashboardGaugeChartConfigurationPtrOutput
}

type dashboardGaugeChartConfigurationPtrType DashboardGaugeChartConfigurationArgs

func DashboardGaugeChartConfigurationPtr(v *DashboardGaugeChartConfigurationArgs) DashboardGaugeChartConfigurationPtrInput {
	return (*dashboardGaugeChartConfigurationPtrType)(v)
}

func (*dashboardGaugeChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartConfiguration)(nil)).Elem()
}

func (i *dashboardGaugeChartConfigurationPtrType) ToDashboardGaugeChartConfigurationPtrOutput() DashboardGaugeChartConfigurationPtrOutput {
	return i.ToDashboardGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartConfigurationPtrType) ToDashboardGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartConfigurationPtrOutput)
}

type DashboardGaugeChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartConfiguration)(nil)).Elem()
}

func (o DashboardGaugeChartConfigurationOutput) ToDashboardGaugeChartConfigurationOutput() DashboardGaugeChartConfigurationOutput {
	return o
}

func (o DashboardGaugeChartConfigurationOutput) ToDashboardGaugeChartConfigurationOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationOutput {
	return o
}

func (o DashboardGaugeChartConfigurationOutput) ToDashboardGaugeChartConfigurationPtrOutput() DashboardGaugeChartConfigurationPtrOutput {
	return o.ToDashboardGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartConfigurationOutput) ToDashboardGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartConfiguration) *DashboardGaugeChartConfiguration {
		return &v
	}).(DashboardGaugeChartConfigurationPtrOutput)
}

func (o DashboardGaugeChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationOutput) FieldWells() DashboardGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConfiguration) *DashboardGaugeChartFieldWells { return v.FieldWells }).(DashboardGaugeChartFieldWellsPtrOutput)
}

func (o DashboardGaugeChartConfigurationOutput) GaugeChartOptions() DashboardGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConfiguration) *DashboardGaugeChartOptions { return v.GaugeChartOptions }).(DashboardGaugeChartOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationOutput) TooltipOptions() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConfiguration) *DashboardTooltipOptions { return v.TooltipOptions }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardGaugeChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartConfiguration)(nil)).Elem()
}

func (o DashboardGaugeChartConfigurationPtrOutput) ToDashboardGaugeChartConfigurationPtrOutput() DashboardGaugeChartConfigurationPtrOutput {
	return o
}

func (o DashboardGaugeChartConfigurationPtrOutput) ToDashboardGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardGaugeChartConfigurationPtrOutput {
	return o
}

func (o DashboardGaugeChartConfigurationPtrOutput) Elem() DashboardGaugeChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) DashboardGaugeChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartConfiguration
		return ret
	}).(DashboardGaugeChartConfigurationOutput)
}

func (o DashboardGaugeChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationPtrOutput) FieldWells() DashboardGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) *DashboardGaugeChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardGaugeChartFieldWellsPtrOutput)
}

func (o DashboardGaugeChartConfigurationPtrOutput) GaugeChartOptions() DashboardGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) *DashboardGaugeChartOptions {
		if v == nil {
			return nil
		}
		return v.GaugeChartOptions
	}).(DashboardGaugeChartOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationPtrOutput) TooltipOptions() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.TooltipOptions
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardGaugeChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardGaugeChartFieldWells struct {
	TargetValues []DashboardMeasureField `pulumi:"targetValues"`
	Values       []DashboardMeasureField `pulumi:"values"`
}

// DashboardGaugeChartFieldWellsInput is an input type that accepts DashboardGaugeChartFieldWellsArgs and DashboardGaugeChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardGaugeChartFieldWellsInput` via:
//
//	DashboardGaugeChartFieldWellsArgs{...}
type DashboardGaugeChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardGaugeChartFieldWellsOutput() DashboardGaugeChartFieldWellsOutput
	ToDashboardGaugeChartFieldWellsOutputWithContext(context.Context) DashboardGaugeChartFieldWellsOutput
}

type DashboardGaugeChartFieldWellsArgs struct {
	TargetValues DashboardMeasureFieldArrayInput `pulumi:"targetValues"`
	Values       DashboardMeasureFieldArrayInput `pulumi:"values"`
}

func (DashboardGaugeChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartFieldWells)(nil)).Elem()
}

func (i DashboardGaugeChartFieldWellsArgs) ToDashboardGaugeChartFieldWellsOutput() DashboardGaugeChartFieldWellsOutput {
	return i.ToDashboardGaugeChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardGaugeChartFieldWellsArgs) ToDashboardGaugeChartFieldWellsOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartFieldWellsOutput)
}

func (i DashboardGaugeChartFieldWellsArgs) ToDashboardGaugeChartFieldWellsPtrOutput() DashboardGaugeChartFieldWellsPtrOutput {
	return i.ToDashboardGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartFieldWellsArgs) ToDashboardGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartFieldWellsOutput).ToDashboardGaugeChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardGaugeChartFieldWellsPtrInput is an input type that accepts DashboardGaugeChartFieldWellsArgs, DashboardGaugeChartFieldWellsPtr and DashboardGaugeChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartFieldWellsPtrInput` via:
//
//	        DashboardGaugeChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartFieldWellsPtrOutput() DashboardGaugeChartFieldWellsPtrOutput
	ToDashboardGaugeChartFieldWellsPtrOutputWithContext(context.Context) DashboardGaugeChartFieldWellsPtrOutput
}

type dashboardGaugeChartFieldWellsPtrType DashboardGaugeChartFieldWellsArgs

func DashboardGaugeChartFieldWellsPtr(v *DashboardGaugeChartFieldWellsArgs) DashboardGaugeChartFieldWellsPtrInput {
	return (*dashboardGaugeChartFieldWellsPtrType)(v)
}

func (*dashboardGaugeChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartFieldWells)(nil)).Elem()
}

func (i *dashboardGaugeChartFieldWellsPtrType) ToDashboardGaugeChartFieldWellsPtrOutput() DashboardGaugeChartFieldWellsPtrOutput {
	return i.ToDashboardGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartFieldWellsPtrType) ToDashboardGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartFieldWellsPtrOutput)
}

type DashboardGaugeChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartFieldWells)(nil)).Elem()
}

func (o DashboardGaugeChartFieldWellsOutput) ToDashboardGaugeChartFieldWellsOutput() DashboardGaugeChartFieldWellsOutput {
	return o
}

func (o DashboardGaugeChartFieldWellsOutput) ToDashboardGaugeChartFieldWellsOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsOutput {
	return o
}

func (o DashboardGaugeChartFieldWellsOutput) ToDashboardGaugeChartFieldWellsPtrOutput() DashboardGaugeChartFieldWellsPtrOutput {
	return o.ToDashboardGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartFieldWellsOutput) ToDashboardGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartFieldWells) *DashboardGaugeChartFieldWells {
		return &v
	}).(DashboardGaugeChartFieldWellsPtrOutput)
}

func (o DashboardGaugeChartFieldWellsOutput) TargetValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardGaugeChartFieldWells) []DashboardMeasureField { return v.TargetValues }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardGaugeChartFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardGaugeChartFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardGaugeChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartFieldWells)(nil)).Elem()
}

func (o DashboardGaugeChartFieldWellsPtrOutput) ToDashboardGaugeChartFieldWellsPtrOutput() DashboardGaugeChartFieldWellsPtrOutput {
	return o
}

func (o DashboardGaugeChartFieldWellsPtrOutput) ToDashboardGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartFieldWellsPtrOutput {
	return o
}

func (o DashboardGaugeChartFieldWellsPtrOutput) Elem() DashboardGaugeChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardGaugeChartFieldWells) DashboardGaugeChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartFieldWells
		return ret
	}).(DashboardGaugeChartFieldWellsOutput)
}

func (o DashboardGaugeChartFieldWellsPtrOutput) TargetValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardGaugeChartFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardGaugeChartFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardGaugeChartFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardGaugeChartOptions struct {
	Arc                           *DashboardArcConfiguration        `pulumi:"arc"`
	ArcAxis                       *DashboardArcAxisConfiguration    `pulumi:"arcAxis"`
	Comparison                    *DashboardComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType       *DashboardPrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration *DashboardFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
}

// DashboardGaugeChartOptionsInput is an input type that accepts DashboardGaugeChartOptionsArgs and DashboardGaugeChartOptionsOutput values.
// You can construct a concrete instance of `DashboardGaugeChartOptionsInput` via:
//
//	DashboardGaugeChartOptionsArgs{...}
type DashboardGaugeChartOptionsInput interface {
	pulumi.Input

	ToDashboardGaugeChartOptionsOutput() DashboardGaugeChartOptionsOutput
	ToDashboardGaugeChartOptionsOutputWithContext(context.Context) DashboardGaugeChartOptionsOutput
}

type DashboardGaugeChartOptionsArgs struct {
	Arc                           DashboardArcConfigurationPtrInput        `pulumi:"arc"`
	ArcAxis                       DashboardArcAxisConfigurationPtrInput    `pulumi:"arcAxis"`
	Comparison                    DashboardComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType       DashboardPrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration DashboardFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
}

func (DashboardGaugeChartOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartOptions)(nil)).Elem()
}

func (i DashboardGaugeChartOptionsArgs) ToDashboardGaugeChartOptionsOutput() DashboardGaugeChartOptionsOutput {
	return i.ToDashboardGaugeChartOptionsOutputWithContext(context.Background())
}

func (i DashboardGaugeChartOptionsArgs) ToDashboardGaugeChartOptionsOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartOptionsOutput)
}

func (i DashboardGaugeChartOptionsArgs) ToDashboardGaugeChartOptionsPtrOutput() DashboardGaugeChartOptionsPtrOutput {
	return i.ToDashboardGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartOptionsArgs) ToDashboardGaugeChartOptionsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartOptionsOutput).ToDashboardGaugeChartOptionsPtrOutputWithContext(ctx)
}

// DashboardGaugeChartOptionsPtrInput is an input type that accepts DashboardGaugeChartOptionsArgs, DashboardGaugeChartOptionsPtr and DashboardGaugeChartOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartOptionsPtrInput` via:
//
//	        DashboardGaugeChartOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartOptionsPtrOutput() DashboardGaugeChartOptionsPtrOutput
	ToDashboardGaugeChartOptionsPtrOutputWithContext(context.Context) DashboardGaugeChartOptionsPtrOutput
}

type dashboardGaugeChartOptionsPtrType DashboardGaugeChartOptionsArgs

func DashboardGaugeChartOptionsPtr(v *DashboardGaugeChartOptionsArgs) DashboardGaugeChartOptionsPtrInput {
	return (*dashboardGaugeChartOptionsPtrType)(v)
}

func (*dashboardGaugeChartOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartOptions)(nil)).Elem()
}

func (i *dashboardGaugeChartOptionsPtrType) ToDashboardGaugeChartOptionsPtrOutput() DashboardGaugeChartOptionsPtrOutput {
	return i.ToDashboardGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartOptionsPtrType) ToDashboardGaugeChartOptionsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartOptionsPtrOutput)
}

type DashboardGaugeChartOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartOptions)(nil)).Elem()
}

func (o DashboardGaugeChartOptionsOutput) ToDashboardGaugeChartOptionsOutput() DashboardGaugeChartOptionsOutput {
	return o
}

func (o DashboardGaugeChartOptionsOutput) ToDashboardGaugeChartOptionsOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsOutput {
	return o
}

func (o DashboardGaugeChartOptionsOutput) ToDashboardGaugeChartOptionsPtrOutput() DashboardGaugeChartOptionsPtrOutput {
	return o.ToDashboardGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartOptionsOutput) ToDashboardGaugeChartOptionsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartOptions) *DashboardGaugeChartOptions {
		return &v
	}).(DashboardGaugeChartOptionsPtrOutput)
}

func (o DashboardGaugeChartOptionsOutput) Arc() DashboardArcConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartOptions) *DashboardArcConfiguration { return v.Arc }).(DashboardArcConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsOutput) ArcAxis() DashboardArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartOptions) *DashboardArcAxisConfiguration { return v.ArcAxis }).(DashboardArcAxisConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsOutput) Comparison() DashboardComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartOptions) *DashboardComparisonConfiguration { return v.Comparison }).(DashboardComparisonConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsOutput) PrimaryValueDisplayType() DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartOptions) *DashboardPrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (o DashboardGaugeChartOptionsOutput) PrimaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartOptions) *DashboardFontConfiguration { return v.PrimaryValueFontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

type DashboardGaugeChartOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartOptions)(nil)).Elem()
}

func (o DashboardGaugeChartOptionsPtrOutput) ToDashboardGaugeChartOptionsPtrOutput() DashboardGaugeChartOptionsPtrOutput {
	return o
}

func (o DashboardGaugeChartOptionsPtrOutput) ToDashboardGaugeChartOptionsPtrOutputWithContext(ctx context.Context) DashboardGaugeChartOptionsPtrOutput {
	return o
}

func (o DashboardGaugeChartOptionsPtrOutput) Elem() DashboardGaugeChartOptionsOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) DashboardGaugeChartOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartOptions
		return ret
	}).(DashboardGaugeChartOptionsOutput)
}

func (o DashboardGaugeChartOptionsPtrOutput) Arc() DashboardArcConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) *DashboardArcConfiguration {
		if v == nil {
			return nil
		}
		return v.Arc
	}).(DashboardArcConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsPtrOutput) ArcAxis() DashboardArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) *DashboardArcAxisConfiguration {
		if v == nil {
			return nil
		}
		return v.ArcAxis
	}).(DashboardArcAxisConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsPtrOutput) Comparison() DashboardComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) *DashboardComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(DashboardComparisonConfigurationPtrOutput)
}

func (o DashboardGaugeChartOptionsPtrOutput) PrimaryValueDisplayType() DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) *DashboardPrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (o DashboardGaugeChartOptionsPtrOutput) PrimaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

type DashboardGaugeChartPrimaryValueConditionalFormatting struct {
	Icon      *DashboardConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *DashboardConditionalFormattingColor `pulumi:"textColor"`
}

// DashboardGaugeChartPrimaryValueConditionalFormattingInput is an input type that accepts DashboardGaugeChartPrimaryValueConditionalFormattingArgs and DashboardGaugeChartPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardGaugeChartPrimaryValueConditionalFormattingInput` via:
//
//	DashboardGaugeChartPrimaryValueConditionalFormattingArgs{...}
type DashboardGaugeChartPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardGaugeChartPrimaryValueConditionalFormattingOutput() DashboardGaugeChartPrimaryValueConditionalFormattingOutput
	ToDashboardGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingOutput
}

type DashboardGaugeChartPrimaryValueConditionalFormattingArgs struct {
	Icon      DashboardConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor DashboardConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (DashboardGaugeChartPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i DashboardGaugeChartPrimaryValueConditionalFormattingArgs) ToDashboardGaugeChartPrimaryValueConditionalFormattingOutput() DashboardGaugeChartPrimaryValueConditionalFormattingOutput {
	return i.ToDashboardGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardGaugeChartPrimaryValueConditionalFormattingArgs) ToDashboardGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (i DashboardGaugeChartPrimaryValueConditionalFormattingArgs) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartPrimaryValueConditionalFormattingArgs) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartPrimaryValueConditionalFormattingOutput).ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput is an input type that accepts DashboardGaugeChartPrimaryValueConditionalFormattingArgs, DashboardGaugeChartPrimaryValueConditionalFormattingPtr and DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput` via:
//
//	        DashboardGaugeChartPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput
	ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput
}

type dashboardGaugeChartPrimaryValueConditionalFormattingPtrType DashboardGaugeChartPrimaryValueConditionalFormattingArgs

func DashboardGaugeChartPrimaryValueConditionalFormattingPtr(v *DashboardGaugeChartPrimaryValueConditionalFormattingArgs) DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput {
	return (*dashboardGaugeChartPrimaryValueConditionalFormattingPtrType)(v)
}

func (*dashboardGaugeChartPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *dashboardGaugeChartPrimaryValueConditionalFormattingPtrType) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartPrimaryValueConditionalFormattingPtrType) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type DashboardGaugeChartPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingOutput() DashboardGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartPrimaryValueConditionalFormatting) *DashboardGaugeChartPrimaryValueConditionalFormatting {
		return &v
	}).(DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartPrimaryValueConditionalFormatting) *DashboardConditionalFormattingIcon {
		return v.Icon
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartPrimaryValueConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput() DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToDashboardGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) Elem() DashboardGaugeChartPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardGaugeChartPrimaryValueConditionalFormatting) DashboardGaugeChartPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartPrimaryValueConditionalFormatting
		return ret
	}).(DashboardGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartPrimaryValueConditionalFormatting) *DashboardConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartPrimaryValueConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardGaugeChartVisual struct {
	Actions               []DashboardVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *DashboardGaugeChartConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *DashboardGaugeChartConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *DashboardVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *DashboardVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                    `pulumi:"visualId"`
}

// DashboardGaugeChartVisualInput is an input type that accepts DashboardGaugeChartVisualArgs and DashboardGaugeChartVisualOutput values.
// You can construct a concrete instance of `DashboardGaugeChartVisualInput` via:
//
//	DashboardGaugeChartVisualArgs{...}
type DashboardGaugeChartVisualInput interface {
	pulumi.Input

	ToDashboardGaugeChartVisualOutput() DashboardGaugeChartVisualOutput
	ToDashboardGaugeChartVisualOutputWithContext(context.Context) DashboardGaugeChartVisualOutput
}

type DashboardGaugeChartVisualArgs struct {
	Actions               DashboardVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    DashboardGaugeChartConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting DashboardGaugeChartConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              DashboardVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 DashboardVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                               `pulumi:"visualId"`
}

func (DashboardGaugeChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartVisual)(nil)).Elem()
}

func (i DashboardGaugeChartVisualArgs) ToDashboardGaugeChartVisualOutput() DashboardGaugeChartVisualOutput {
	return i.ToDashboardGaugeChartVisualOutputWithContext(context.Background())
}

func (i DashboardGaugeChartVisualArgs) ToDashboardGaugeChartVisualOutputWithContext(ctx context.Context) DashboardGaugeChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartVisualOutput)
}

func (i DashboardGaugeChartVisualArgs) ToDashboardGaugeChartVisualPtrOutput() DashboardGaugeChartVisualPtrOutput {
	return i.ToDashboardGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardGaugeChartVisualArgs) ToDashboardGaugeChartVisualPtrOutputWithContext(ctx context.Context) DashboardGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartVisualOutput).ToDashboardGaugeChartVisualPtrOutputWithContext(ctx)
}

// DashboardGaugeChartVisualPtrInput is an input type that accepts DashboardGaugeChartVisualArgs, DashboardGaugeChartVisualPtr and DashboardGaugeChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardGaugeChartVisualPtrInput` via:
//
//	        DashboardGaugeChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardGaugeChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardGaugeChartVisualPtrOutput() DashboardGaugeChartVisualPtrOutput
	ToDashboardGaugeChartVisualPtrOutputWithContext(context.Context) DashboardGaugeChartVisualPtrOutput
}

type dashboardGaugeChartVisualPtrType DashboardGaugeChartVisualArgs

func DashboardGaugeChartVisualPtr(v *DashboardGaugeChartVisualArgs) DashboardGaugeChartVisualPtrInput {
	return (*dashboardGaugeChartVisualPtrType)(v)
}

func (*dashboardGaugeChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartVisual)(nil)).Elem()
}

func (i *dashboardGaugeChartVisualPtrType) ToDashboardGaugeChartVisualPtrOutput() DashboardGaugeChartVisualPtrOutput {
	return i.ToDashboardGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardGaugeChartVisualPtrType) ToDashboardGaugeChartVisualPtrOutputWithContext(ctx context.Context) DashboardGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGaugeChartVisualPtrOutput)
}

type DashboardGaugeChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGaugeChartVisual)(nil)).Elem()
}

func (o DashboardGaugeChartVisualOutput) ToDashboardGaugeChartVisualOutput() DashboardGaugeChartVisualOutput {
	return o
}

func (o DashboardGaugeChartVisualOutput) ToDashboardGaugeChartVisualOutputWithContext(ctx context.Context) DashboardGaugeChartVisualOutput {
	return o
}

func (o DashboardGaugeChartVisualOutput) ToDashboardGaugeChartVisualPtrOutput() DashboardGaugeChartVisualPtrOutput {
	return o.ToDashboardGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardGaugeChartVisualOutput) ToDashboardGaugeChartVisualPtrOutputWithContext(ctx context.Context) DashboardGaugeChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGaugeChartVisual) *DashboardGaugeChartVisual {
		return &v
	}).(DashboardGaugeChartVisualPtrOutput)
}

func (o DashboardGaugeChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardGaugeChartVisualOutput) ChartConfiguration() DashboardGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) *DashboardGaugeChartConfiguration { return v.ChartConfiguration }).(DashboardGaugeChartConfigurationPtrOutput)
}

func (o DashboardGaugeChartVisualOutput) ConditionalFormatting() DashboardGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) *DashboardGaugeChartConditionalFormatting {
		return v.ConditionalFormatting
	}).(DashboardGaugeChartConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardGaugeChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardGaugeChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardGaugeChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGaugeChartVisual)(nil)).Elem()
}

func (o DashboardGaugeChartVisualPtrOutput) ToDashboardGaugeChartVisualPtrOutput() DashboardGaugeChartVisualPtrOutput {
	return o
}

func (o DashboardGaugeChartVisualPtrOutput) ToDashboardGaugeChartVisualPtrOutputWithContext(ctx context.Context) DashboardGaugeChartVisualPtrOutput {
	return o
}

func (o DashboardGaugeChartVisualPtrOutput) Elem() DashboardGaugeChartVisualOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) DashboardGaugeChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardGaugeChartVisual
		return ret
	}).(DashboardGaugeChartVisualOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) ChartConfiguration() DashboardGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) *DashboardGaugeChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardGaugeChartConfigurationPtrOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) ConditionalFormatting() DashboardGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) *DashboardGaugeChartConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(DashboardGaugeChartConditionalFormattingPtrOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardGaugeChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardGaugeChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardGeospatialCoordinateBounds struct {
	East  float64 `pulumi:"east"`
	North float64 `pulumi:"north"`
	South float64 `pulumi:"south"`
	West  float64 `pulumi:"west"`
}

// DashboardGeospatialCoordinateBoundsInput is an input type that accepts DashboardGeospatialCoordinateBoundsArgs and DashboardGeospatialCoordinateBoundsOutput values.
// You can construct a concrete instance of `DashboardGeospatialCoordinateBoundsInput` via:
//
//	DashboardGeospatialCoordinateBoundsArgs{...}
type DashboardGeospatialCoordinateBoundsInput interface {
	pulumi.Input

	ToDashboardGeospatialCoordinateBoundsOutput() DashboardGeospatialCoordinateBoundsOutput
	ToDashboardGeospatialCoordinateBoundsOutputWithContext(context.Context) DashboardGeospatialCoordinateBoundsOutput
}

type DashboardGeospatialCoordinateBoundsArgs struct {
	East  pulumi.Float64Input `pulumi:"east"`
	North pulumi.Float64Input `pulumi:"north"`
	South pulumi.Float64Input `pulumi:"south"`
	West  pulumi.Float64Input `pulumi:"west"`
}

func (DashboardGeospatialCoordinateBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialCoordinateBounds)(nil)).Elem()
}

func (i DashboardGeospatialCoordinateBoundsArgs) ToDashboardGeospatialCoordinateBoundsOutput() DashboardGeospatialCoordinateBoundsOutput {
	return i.ToDashboardGeospatialCoordinateBoundsOutputWithContext(context.Background())
}

func (i DashboardGeospatialCoordinateBoundsArgs) ToDashboardGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialCoordinateBoundsOutput)
}

func (i DashboardGeospatialCoordinateBoundsArgs) ToDashboardGeospatialCoordinateBoundsPtrOutput() DashboardGeospatialCoordinateBoundsPtrOutput {
	return i.ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialCoordinateBoundsArgs) ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialCoordinateBoundsOutput).ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(ctx)
}

// DashboardGeospatialCoordinateBoundsPtrInput is an input type that accepts DashboardGeospatialCoordinateBoundsArgs, DashboardGeospatialCoordinateBoundsPtr and DashboardGeospatialCoordinateBoundsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialCoordinateBoundsPtrInput` via:
//
//	        DashboardGeospatialCoordinateBoundsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialCoordinateBoundsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialCoordinateBoundsPtrOutput() DashboardGeospatialCoordinateBoundsPtrOutput
	ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(context.Context) DashboardGeospatialCoordinateBoundsPtrOutput
}

type dashboardGeospatialCoordinateBoundsPtrType DashboardGeospatialCoordinateBoundsArgs

func DashboardGeospatialCoordinateBoundsPtr(v *DashboardGeospatialCoordinateBoundsArgs) DashboardGeospatialCoordinateBoundsPtrInput {
	return (*dashboardGeospatialCoordinateBoundsPtrType)(v)
}

func (*dashboardGeospatialCoordinateBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialCoordinateBounds)(nil)).Elem()
}

func (i *dashboardGeospatialCoordinateBoundsPtrType) ToDashboardGeospatialCoordinateBoundsPtrOutput() DashboardGeospatialCoordinateBoundsPtrOutput {
	return i.ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialCoordinateBoundsPtrType) ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialCoordinateBoundsPtrOutput)
}

type DashboardGeospatialCoordinateBoundsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialCoordinateBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialCoordinateBounds)(nil)).Elem()
}

func (o DashboardGeospatialCoordinateBoundsOutput) ToDashboardGeospatialCoordinateBoundsOutput() DashboardGeospatialCoordinateBoundsOutput {
	return o
}

func (o DashboardGeospatialCoordinateBoundsOutput) ToDashboardGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsOutput {
	return o
}

func (o DashboardGeospatialCoordinateBoundsOutput) ToDashboardGeospatialCoordinateBoundsPtrOutput() DashboardGeospatialCoordinateBoundsPtrOutput {
	return o.ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialCoordinateBoundsOutput) ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialCoordinateBounds) *DashboardGeospatialCoordinateBounds {
		return &v
	}).(DashboardGeospatialCoordinateBoundsPtrOutput)
}

func (o DashboardGeospatialCoordinateBoundsOutput) East() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGeospatialCoordinateBounds) float64 { return v.East }).(pulumi.Float64Output)
}

func (o DashboardGeospatialCoordinateBoundsOutput) North() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGeospatialCoordinateBounds) float64 { return v.North }).(pulumi.Float64Output)
}

func (o DashboardGeospatialCoordinateBoundsOutput) South() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGeospatialCoordinateBounds) float64 { return v.South }).(pulumi.Float64Output)
}

func (o DashboardGeospatialCoordinateBoundsOutput) West() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGeospatialCoordinateBounds) float64 { return v.West }).(pulumi.Float64Output)
}

type DashboardGeospatialCoordinateBoundsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialCoordinateBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialCoordinateBounds)(nil)).Elem()
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) ToDashboardGeospatialCoordinateBoundsPtrOutput() DashboardGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) ToDashboardGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) DashboardGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) Elem() DashboardGeospatialCoordinateBoundsOutput {
	return o.ApplyT(func(v *DashboardGeospatialCoordinateBounds) DashboardGeospatialCoordinateBounds {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialCoordinateBounds
		return ret
	}).(DashboardGeospatialCoordinateBoundsOutput)
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) East() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.East
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) North() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.North
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) South() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.South
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardGeospatialCoordinateBoundsPtrOutput) West() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.West
	}).(pulumi.Float64PtrOutput)
}

type DashboardGeospatialMapAggregatedFieldWells struct {
	Colors     []DashboardDimensionField `pulumi:"colors"`
	Geospatial []DashboardDimensionField `pulumi:"geospatial"`
	Values     []DashboardMeasureField   `pulumi:"values"`
}

// DashboardGeospatialMapAggregatedFieldWellsInput is an input type that accepts DashboardGeospatialMapAggregatedFieldWellsArgs and DashboardGeospatialMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapAggregatedFieldWellsInput` via:
//
//	DashboardGeospatialMapAggregatedFieldWellsArgs{...}
type DashboardGeospatialMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardGeospatialMapAggregatedFieldWellsOutput() DashboardGeospatialMapAggregatedFieldWellsOutput
	ToDashboardGeospatialMapAggregatedFieldWellsOutputWithContext(context.Context) DashboardGeospatialMapAggregatedFieldWellsOutput
}

type DashboardGeospatialMapAggregatedFieldWellsArgs struct {
	Colors     DashboardDimensionFieldArrayInput `pulumi:"colors"`
	Geospatial DashboardDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardGeospatialMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardGeospatialMapAggregatedFieldWellsArgs) ToDashboardGeospatialMapAggregatedFieldWellsOutput() DashboardGeospatialMapAggregatedFieldWellsOutput {
	return i.ToDashboardGeospatialMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapAggregatedFieldWellsArgs) ToDashboardGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapAggregatedFieldWellsOutput)
}

func (i DashboardGeospatialMapAggregatedFieldWellsArgs) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutput() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapAggregatedFieldWellsArgs) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapAggregatedFieldWellsOutput).ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardGeospatialMapAggregatedFieldWellsPtrInput is an input type that accepts DashboardGeospatialMapAggregatedFieldWellsArgs, DashboardGeospatialMapAggregatedFieldWellsPtr and DashboardGeospatialMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapAggregatedFieldWellsPtrInput` via:
//
//	        DashboardGeospatialMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialMapAggregatedFieldWellsPtrOutput() DashboardGeospatialMapAggregatedFieldWellsPtrOutput
	ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardGeospatialMapAggregatedFieldWellsPtrOutput
}

type dashboardGeospatialMapAggregatedFieldWellsPtrType DashboardGeospatialMapAggregatedFieldWellsArgs

func DashboardGeospatialMapAggregatedFieldWellsPtr(v *DashboardGeospatialMapAggregatedFieldWellsArgs) DashboardGeospatialMapAggregatedFieldWellsPtrInput {
	return (*dashboardGeospatialMapAggregatedFieldWellsPtrType)(v)
}

func (*dashboardGeospatialMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardGeospatialMapAggregatedFieldWellsPtrType) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutput() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialMapAggregatedFieldWellsPtrType) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapAggregatedFieldWellsPtrOutput)
}

type DashboardGeospatialMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) ToDashboardGeospatialMapAggregatedFieldWellsOutput() DashboardGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) ToDashboardGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutput() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialMapAggregatedFieldWells) *DashboardGeospatialMapAggregatedFieldWells {
		return &v
	}).(DashboardGeospatialMapAggregatedFieldWellsPtrOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardGeospatialMapAggregatedFieldWells) []DashboardDimensionField { return v.Colors }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) Geospatial() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardGeospatialMapAggregatedFieldWells) []DashboardDimensionField { return v.Geospatial }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardGeospatialMapAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardGeospatialMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutput() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) ToDashboardGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) Elem() DashboardGeospatialMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapAggregatedFieldWells) DashboardGeospatialMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialMapAggregatedFieldWells
		return ret
	}).(DashboardGeospatialMapAggregatedFieldWellsOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) Geospatial() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardGeospatialMapAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardGeospatialMapConfiguration struct {
	FieldWells        *DashboardGeospatialMapFieldWells     `pulumi:"fieldWells"`
	Legend            *DashboardLegendOptions               `pulumi:"legend"`
	MapStyleOptions   *DashboardGeospatialMapStyleOptions   `pulumi:"mapStyleOptions"`
	PointStyleOptions *DashboardGeospatialPointStyleOptions `pulumi:"pointStyleOptions"`
	Tooltip           *DashboardTooltipOptions              `pulumi:"tooltip"`
	VisualPalette     *DashboardVisualPalette               `pulumi:"visualPalette"`
	WindowOptions     *DashboardGeospatialWindowOptions     `pulumi:"windowOptions"`
}

// DashboardGeospatialMapConfigurationInput is an input type that accepts DashboardGeospatialMapConfigurationArgs and DashboardGeospatialMapConfigurationOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapConfigurationInput` via:
//
//	DashboardGeospatialMapConfigurationArgs{...}
type DashboardGeospatialMapConfigurationInput interface {
	pulumi.Input

	ToDashboardGeospatialMapConfigurationOutput() DashboardGeospatialMapConfigurationOutput
	ToDashboardGeospatialMapConfigurationOutputWithContext(context.Context) DashboardGeospatialMapConfigurationOutput
}

type DashboardGeospatialMapConfigurationArgs struct {
	FieldWells        DashboardGeospatialMapFieldWellsPtrInput     `pulumi:"fieldWells"`
	Legend            DashboardLegendOptionsPtrInput               `pulumi:"legend"`
	MapStyleOptions   DashboardGeospatialMapStyleOptionsPtrInput   `pulumi:"mapStyleOptions"`
	PointStyleOptions DashboardGeospatialPointStyleOptionsPtrInput `pulumi:"pointStyleOptions"`
	Tooltip           DashboardTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette     DashboardVisualPalettePtrInput               `pulumi:"visualPalette"`
	WindowOptions     DashboardGeospatialWindowOptionsPtrInput     `pulumi:"windowOptions"`
}

func (DashboardGeospatialMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapConfiguration)(nil)).Elem()
}

func (i DashboardGeospatialMapConfigurationArgs) ToDashboardGeospatialMapConfigurationOutput() DashboardGeospatialMapConfigurationOutput {
	return i.ToDashboardGeospatialMapConfigurationOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapConfigurationArgs) ToDashboardGeospatialMapConfigurationOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapConfigurationOutput)
}

func (i DashboardGeospatialMapConfigurationArgs) ToDashboardGeospatialMapConfigurationPtrOutput() DashboardGeospatialMapConfigurationPtrOutput {
	return i.ToDashboardGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapConfigurationArgs) ToDashboardGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapConfigurationOutput).ToDashboardGeospatialMapConfigurationPtrOutputWithContext(ctx)
}

// DashboardGeospatialMapConfigurationPtrInput is an input type that accepts DashboardGeospatialMapConfigurationArgs, DashboardGeospatialMapConfigurationPtr and DashboardGeospatialMapConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapConfigurationPtrInput` via:
//
//	        DashboardGeospatialMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialMapConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialMapConfigurationPtrOutput() DashboardGeospatialMapConfigurationPtrOutput
	ToDashboardGeospatialMapConfigurationPtrOutputWithContext(context.Context) DashboardGeospatialMapConfigurationPtrOutput
}

type dashboardGeospatialMapConfigurationPtrType DashboardGeospatialMapConfigurationArgs

func DashboardGeospatialMapConfigurationPtr(v *DashboardGeospatialMapConfigurationArgs) DashboardGeospatialMapConfigurationPtrInput {
	return (*dashboardGeospatialMapConfigurationPtrType)(v)
}

func (*dashboardGeospatialMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapConfiguration)(nil)).Elem()
}

func (i *dashboardGeospatialMapConfigurationPtrType) ToDashboardGeospatialMapConfigurationPtrOutput() DashboardGeospatialMapConfigurationPtrOutput {
	return i.ToDashboardGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialMapConfigurationPtrType) ToDashboardGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapConfigurationPtrOutput)
}

type DashboardGeospatialMapConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapConfiguration)(nil)).Elem()
}

func (o DashboardGeospatialMapConfigurationOutput) ToDashboardGeospatialMapConfigurationOutput() DashboardGeospatialMapConfigurationOutput {
	return o
}

func (o DashboardGeospatialMapConfigurationOutput) ToDashboardGeospatialMapConfigurationOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationOutput {
	return o
}

func (o DashboardGeospatialMapConfigurationOutput) ToDashboardGeospatialMapConfigurationPtrOutput() DashboardGeospatialMapConfigurationPtrOutput {
	return o.ToDashboardGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialMapConfigurationOutput) ToDashboardGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialMapConfiguration) *DashboardGeospatialMapConfiguration {
		return &v
	}).(DashboardGeospatialMapConfigurationPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) FieldWells() DashboardGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardGeospatialMapFieldWells { return v.FieldWells }).(DashboardGeospatialMapFieldWellsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) MapStyleOptions() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardGeospatialMapStyleOptions {
		return v.MapStyleOptions
	}).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) PointStyleOptions() DashboardGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardGeospatialPointStyleOptions {
		return v.PointStyleOptions
	}).(DashboardGeospatialPointStyleOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

func (o DashboardGeospatialMapConfigurationOutput) WindowOptions() DashboardGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapConfiguration) *DashboardGeospatialWindowOptions { return v.WindowOptions }).(DashboardGeospatialWindowOptionsPtrOutput)
}

type DashboardGeospatialMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapConfiguration)(nil)).Elem()
}

func (o DashboardGeospatialMapConfigurationPtrOutput) ToDashboardGeospatialMapConfigurationPtrOutput() DashboardGeospatialMapConfigurationPtrOutput {
	return o
}

func (o DashboardGeospatialMapConfigurationPtrOutput) ToDashboardGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapConfigurationPtrOutput {
	return o
}

func (o DashboardGeospatialMapConfigurationPtrOutput) Elem() DashboardGeospatialMapConfigurationOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) DashboardGeospatialMapConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialMapConfiguration
		return ret
	}).(DashboardGeospatialMapConfigurationOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) FieldWells() DashboardGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardGeospatialMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardGeospatialMapFieldWellsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) MapStyleOptions() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) PointStyleOptions() DashboardGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardGeospatialPointStyleOptions {
		if v == nil {
			return nil
		}
		return v.PointStyleOptions
	}).(DashboardGeospatialPointStyleOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardGeospatialMapConfigurationPtrOutput) WindowOptions() DashboardGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapConfiguration) *DashboardGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(DashboardGeospatialWindowOptionsPtrOutput)
}

type DashboardGeospatialMapFieldWells struct {
	GeospatialMapAggregatedFieldWells *DashboardGeospatialMapAggregatedFieldWells `pulumi:"geospatialMapAggregatedFieldWells"`
}

// DashboardGeospatialMapFieldWellsInput is an input type that accepts DashboardGeospatialMapFieldWellsArgs and DashboardGeospatialMapFieldWellsOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapFieldWellsInput` via:
//
//	DashboardGeospatialMapFieldWellsArgs{...}
type DashboardGeospatialMapFieldWellsInput interface {
	pulumi.Input

	ToDashboardGeospatialMapFieldWellsOutput() DashboardGeospatialMapFieldWellsOutput
	ToDashboardGeospatialMapFieldWellsOutputWithContext(context.Context) DashboardGeospatialMapFieldWellsOutput
}

type DashboardGeospatialMapFieldWellsArgs struct {
	GeospatialMapAggregatedFieldWells DashboardGeospatialMapAggregatedFieldWellsPtrInput `pulumi:"geospatialMapAggregatedFieldWells"`
}

func (DashboardGeospatialMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapFieldWells)(nil)).Elem()
}

func (i DashboardGeospatialMapFieldWellsArgs) ToDashboardGeospatialMapFieldWellsOutput() DashboardGeospatialMapFieldWellsOutput {
	return i.ToDashboardGeospatialMapFieldWellsOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapFieldWellsArgs) ToDashboardGeospatialMapFieldWellsOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapFieldWellsOutput)
}

func (i DashboardGeospatialMapFieldWellsArgs) ToDashboardGeospatialMapFieldWellsPtrOutput() DashboardGeospatialMapFieldWellsPtrOutput {
	return i.ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapFieldWellsArgs) ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapFieldWellsOutput).ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(ctx)
}

// DashboardGeospatialMapFieldWellsPtrInput is an input type that accepts DashboardGeospatialMapFieldWellsArgs, DashboardGeospatialMapFieldWellsPtr and DashboardGeospatialMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapFieldWellsPtrInput` via:
//
//	        DashboardGeospatialMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialMapFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialMapFieldWellsPtrOutput() DashboardGeospatialMapFieldWellsPtrOutput
	ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(context.Context) DashboardGeospatialMapFieldWellsPtrOutput
}

type dashboardGeospatialMapFieldWellsPtrType DashboardGeospatialMapFieldWellsArgs

func DashboardGeospatialMapFieldWellsPtr(v *DashboardGeospatialMapFieldWellsArgs) DashboardGeospatialMapFieldWellsPtrInput {
	return (*dashboardGeospatialMapFieldWellsPtrType)(v)
}

func (*dashboardGeospatialMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapFieldWells)(nil)).Elem()
}

func (i *dashboardGeospatialMapFieldWellsPtrType) ToDashboardGeospatialMapFieldWellsPtrOutput() DashboardGeospatialMapFieldWellsPtrOutput {
	return i.ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialMapFieldWellsPtrType) ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapFieldWellsPtrOutput)
}

type DashboardGeospatialMapFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapFieldWells)(nil)).Elem()
}

func (o DashboardGeospatialMapFieldWellsOutput) ToDashboardGeospatialMapFieldWellsOutput() DashboardGeospatialMapFieldWellsOutput {
	return o
}

func (o DashboardGeospatialMapFieldWellsOutput) ToDashboardGeospatialMapFieldWellsOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsOutput {
	return o
}

func (o DashboardGeospatialMapFieldWellsOutput) ToDashboardGeospatialMapFieldWellsPtrOutput() DashboardGeospatialMapFieldWellsPtrOutput {
	return o.ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialMapFieldWellsOutput) ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialMapFieldWells) *DashboardGeospatialMapFieldWells {
		return &v
	}).(DashboardGeospatialMapFieldWellsPtrOutput)
}

func (o DashboardGeospatialMapFieldWellsOutput) GeospatialMapAggregatedFieldWells() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapFieldWells) *DashboardGeospatialMapAggregatedFieldWells {
		return v.GeospatialMapAggregatedFieldWells
	}).(DashboardGeospatialMapAggregatedFieldWellsPtrOutput)
}

type DashboardGeospatialMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapFieldWells)(nil)).Elem()
}

func (o DashboardGeospatialMapFieldWellsPtrOutput) ToDashboardGeospatialMapFieldWellsPtrOutput() DashboardGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o DashboardGeospatialMapFieldWellsPtrOutput) ToDashboardGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o DashboardGeospatialMapFieldWellsPtrOutput) Elem() DashboardGeospatialMapFieldWellsOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapFieldWells) DashboardGeospatialMapFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialMapFieldWells
		return ret
	}).(DashboardGeospatialMapFieldWellsOutput)
}

func (o DashboardGeospatialMapFieldWellsPtrOutput) GeospatialMapAggregatedFieldWells() DashboardGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapFieldWells) *DashboardGeospatialMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.GeospatialMapAggregatedFieldWells
	}).(DashboardGeospatialMapAggregatedFieldWellsPtrOutput)
}

type DashboardGeospatialMapStyleOptions struct {
	BaseMapStyle *DashboardBaseMapStyleType `pulumi:"baseMapStyle"`
}

// DashboardGeospatialMapStyleOptionsInput is an input type that accepts DashboardGeospatialMapStyleOptionsArgs and DashboardGeospatialMapStyleOptionsOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapStyleOptionsInput` via:
//
//	DashboardGeospatialMapStyleOptionsArgs{...}
type DashboardGeospatialMapStyleOptionsInput interface {
	pulumi.Input

	ToDashboardGeospatialMapStyleOptionsOutput() DashboardGeospatialMapStyleOptionsOutput
	ToDashboardGeospatialMapStyleOptionsOutputWithContext(context.Context) DashboardGeospatialMapStyleOptionsOutput
}

type DashboardGeospatialMapStyleOptionsArgs struct {
	BaseMapStyle DashboardBaseMapStyleTypePtrInput `pulumi:"baseMapStyle"`
}

func (DashboardGeospatialMapStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapStyleOptions)(nil)).Elem()
}

func (i DashboardGeospatialMapStyleOptionsArgs) ToDashboardGeospatialMapStyleOptionsOutput() DashboardGeospatialMapStyleOptionsOutput {
	return i.ToDashboardGeospatialMapStyleOptionsOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapStyleOptionsArgs) ToDashboardGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapStyleOptionsOutput)
}

func (i DashboardGeospatialMapStyleOptionsArgs) ToDashboardGeospatialMapStyleOptionsPtrOutput() DashboardGeospatialMapStyleOptionsPtrOutput {
	return i.ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapStyleOptionsArgs) ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapStyleOptionsOutput).ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(ctx)
}

// DashboardGeospatialMapStyleOptionsPtrInput is an input type that accepts DashboardGeospatialMapStyleOptionsArgs, DashboardGeospatialMapStyleOptionsPtr and DashboardGeospatialMapStyleOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapStyleOptionsPtrInput` via:
//
//	        DashboardGeospatialMapStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialMapStyleOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialMapStyleOptionsPtrOutput() DashboardGeospatialMapStyleOptionsPtrOutput
	ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(context.Context) DashboardGeospatialMapStyleOptionsPtrOutput
}

type dashboardGeospatialMapStyleOptionsPtrType DashboardGeospatialMapStyleOptionsArgs

func DashboardGeospatialMapStyleOptionsPtr(v *DashboardGeospatialMapStyleOptionsArgs) DashboardGeospatialMapStyleOptionsPtrInput {
	return (*dashboardGeospatialMapStyleOptionsPtrType)(v)
}

func (*dashboardGeospatialMapStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapStyleOptions)(nil)).Elem()
}

func (i *dashboardGeospatialMapStyleOptionsPtrType) ToDashboardGeospatialMapStyleOptionsPtrOutput() DashboardGeospatialMapStyleOptionsPtrOutput {
	return i.ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialMapStyleOptionsPtrType) ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

type DashboardGeospatialMapStyleOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapStyleOptions)(nil)).Elem()
}

func (o DashboardGeospatialMapStyleOptionsOutput) ToDashboardGeospatialMapStyleOptionsOutput() DashboardGeospatialMapStyleOptionsOutput {
	return o
}

func (o DashboardGeospatialMapStyleOptionsOutput) ToDashboardGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsOutput {
	return o
}

func (o DashboardGeospatialMapStyleOptionsOutput) ToDashboardGeospatialMapStyleOptionsPtrOutput() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialMapStyleOptionsOutput) ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialMapStyleOptions) *DashboardGeospatialMapStyleOptions {
		return &v
	}).(DashboardGeospatialMapStyleOptionsPtrOutput)
}

func (o DashboardGeospatialMapStyleOptionsOutput) BaseMapStyle() DashboardBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapStyleOptions) *DashboardBaseMapStyleType { return v.BaseMapStyle }).(DashboardBaseMapStyleTypePtrOutput)
}

type DashboardGeospatialMapStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapStyleOptions)(nil)).Elem()
}

func (o DashboardGeospatialMapStyleOptionsPtrOutput) ToDashboardGeospatialMapStyleOptionsPtrOutput() DashboardGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialMapStyleOptionsPtrOutput) ToDashboardGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialMapStyleOptionsPtrOutput) Elem() DashboardGeospatialMapStyleOptionsOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapStyleOptions) DashboardGeospatialMapStyleOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialMapStyleOptions
		return ret
	}).(DashboardGeospatialMapStyleOptionsOutput)
}

func (o DashboardGeospatialMapStyleOptionsPtrOutput) BaseMapStyle() DashboardBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapStyleOptions) *DashboardBaseMapStyleType {
		if v == nil {
			return nil
		}
		return v.BaseMapStyle
	}).(DashboardBaseMapStyleTypePtrOutput)
}

type DashboardGeospatialMapVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardGeospatialMapConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardGeospatialMapVisualInput is an input type that accepts DashboardGeospatialMapVisualArgs and DashboardGeospatialMapVisualOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapVisualInput` via:
//
//	DashboardGeospatialMapVisualArgs{...}
type DashboardGeospatialMapVisualInput interface {
	pulumi.Input

	ToDashboardGeospatialMapVisualOutput() DashboardGeospatialMapVisualOutput
	ToDashboardGeospatialMapVisualOutputWithContext(context.Context) DashboardGeospatialMapVisualOutput
}

type DashboardGeospatialMapVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardGeospatialMapConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardGeospatialMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapVisual)(nil)).Elem()
}

func (i DashboardGeospatialMapVisualArgs) ToDashboardGeospatialMapVisualOutput() DashboardGeospatialMapVisualOutput {
	return i.ToDashboardGeospatialMapVisualOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapVisualArgs) ToDashboardGeospatialMapVisualOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapVisualOutput)
}

func (i DashboardGeospatialMapVisualArgs) ToDashboardGeospatialMapVisualPtrOutput() DashboardGeospatialMapVisualPtrOutput {
	return i.ToDashboardGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialMapVisualArgs) ToDashboardGeospatialMapVisualPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapVisualOutput).ToDashboardGeospatialMapVisualPtrOutputWithContext(ctx)
}

// DashboardGeospatialMapVisualPtrInput is an input type that accepts DashboardGeospatialMapVisualArgs, DashboardGeospatialMapVisualPtr and DashboardGeospatialMapVisualPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialMapVisualPtrInput` via:
//
//	        DashboardGeospatialMapVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialMapVisualPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialMapVisualPtrOutput() DashboardGeospatialMapVisualPtrOutput
	ToDashboardGeospatialMapVisualPtrOutputWithContext(context.Context) DashboardGeospatialMapVisualPtrOutput
}

type dashboardGeospatialMapVisualPtrType DashboardGeospatialMapVisualArgs

func DashboardGeospatialMapVisualPtr(v *DashboardGeospatialMapVisualArgs) DashboardGeospatialMapVisualPtrInput {
	return (*dashboardGeospatialMapVisualPtrType)(v)
}

func (*dashboardGeospatialMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapVisual)(nil)).Elem()
}

func (i *dashboardGeospatialMapVisualPtrType) ToDashboardGeospatialMapVisualPtrOutput() DashboardGeospatialMapVisualPtrOutput {
	return i.ToDashboardGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialMapVisualPtrType) ToDashboardGeospatialMapVisualPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialMapVisualPtrOutput)
}

type DashboardGeospatialMapVisualOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialMapVisual)(nil)).Elem()
}

func (o DashboardGeospatialMapVisualOutput) ToDashboardGeospatialMapVisualOutput() DashboardGeospatialMapVisualOutput {
	return o
}

func (o DashboardGeospatialMapVisualOutput) ToDashboardGeospatialMapVisualOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualOutput {
	return o
}

func (o DashboardGeospatialMapVisualOutput) ToDashboardGeospatialMapVisualPtrOutput() DashboardGeospatialMapVisualPtrOutput {
	return o.ToDashboardGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialMapVisualOutput) ToDashboardGeospatialMapVisualPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialMapVisual) *DashboardGeospatialMapVisual {
		return &v
	}).(DashboardGeospatialMapVisualPtrOutput)
}

func (o DashboardGeospatialMapVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardGeospatialMapVisualOutput) ChartConfiguration() DashboardGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) *DashboardGeospatialMapConfiguration { return v.ChartConfiguration }).(DashboardGeospatialMapConfigurationPtrOutput)
}

func (o DashboardGeospatialMapVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardGeospatialMapVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardGeospatialMapVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardGeospatialMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardGeospatialMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardGeospatialMapVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialMapVisual)(nil)).Elem()
}

func (o DashboardGeospatialMapVisualPtrOutput) ToDashboardGeospatialMapVisualPtrOutput() DashboardGeospatialMapVisualPtrOutput {
	return o
}

func (o DashboardGeospatialMapVisualPtrOutput) ToDashboardGeospatialMapVisualPtrOutputWithContext(ctx context.Context) DashboardGeospatialMapVisualPtrOutput {
	return o
}

func (o DashboardGeospatialMapVisualPtrOutput) Elem() DashboardGeospatialMapVisualOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) DashboardGeospatialMapVisual {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialMapVisual
		return ret
	}).(DashboardGeospatialMapVisualOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) ChartConfiguration() DashboardGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) *DashboardGeospatialMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardGeospatialMapConfigurationPtrOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardGeospatialMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardGeospatialPointStyleOptions struct {
	ClusterMarkerConfiguration *DashboardClusterMarkerConfiguration   `pulumi:"clusterMarkerConfiguration"`
	SelectedPointStyle         *DashboardGeospatialSelectedPointStyle `pulumi:"selectedPointStyle"`
}

// DashboardGeospatialPointStyleOptionsInput is an input type that accepts DashboardGeospatialPointStyleOptionsArgs and DashboardGeospatialPointStyleOptionsOutput values.
// You can construct a concrete instance of `DashboardGeospatialPointStyleOptionsInput` via:
//
//	DashboardGeospatialPointStyleOptionsArgs{...}
type DashboardGeospatialPointStyleOptionsInput interface {
	pulumi.Input

	ToDashboardGeospatialPointStyleOptionsOutput() DashboardGeospatialPointStyleOptionsOutput
	ToDashboardGeospatialPointStyleOptionsOutputWithContext(context.Context) DashboardGeospatialPointStyleOptionsOutput
}

type DashboardGeospatialPointStyleOptionsArgs struct {
	ClusterMarkerConfiguration DashboardClusterMarkerConfigurationPtrInput   `pulumi:"clusterMarkerConfiguration"`
	SelectedPointStyle         DashboardGeospatialSelectedPointStylePtrInput `pulumi:"selectedPointStyle"`
}

func (DashboardGeospatialPointStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialPointStyleOptions)(nil)).Elem()
}

func (i DashboardGeospatialPointStyleOptionsArgs) ToDashboardGeospatialPointStyleOptionsOutput() DashboardGeospatialPointStyleOptionsOutput {
	return i.ToDashboardGeospatialPointStyleOptionsOutputWithContext(context.Background())
}

func (i DashboardGeospatialPointStyleOptionsArgs) ToDashboardGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialPointStyleOptionsOutput)
}

func (i DashboardGeospatialPointStyleOptionsArgs) ToDashboardGeospatialPointStyleOptionsPtrOutput() DashboardGeospatialPointStyleOptionsPtrOutput {
	return i.ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialPointStyleOptionsArgs) ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialPointStyleOptionsOutput).ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(ctx)
}

// DashboardGeospatialPointStyleOptionsPtrInput is an input type that accepts DashboardGeospatialPointStyleOptionsArgs, DashboardGeospatialPointStyleOptionsPtr and DashboardGeospatialPointStyleOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialPointStyleOptionsPtrInput` via:
//
//	        DashboardGeospatialPointStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialPointStyleOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialPointStyleOptionsPtrOutput() DashboardGeospatialPointStyleOptionsPtrOutput
	ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(context.Context) DashboardGeospatialPointStyleOptionsPtrOutput
}

type dashboardGeospatialPointStyleOptionsPtrType DashboardGeospatialPointStyleOptionsArgs

func DashboardGeospatialPointStyleOptionsPtr(v *DashboardGeospatialPointStyleOptionsArgs) DashboardGeospatialPointStyleOptionsPtrInput {
	return (*dashboardGeospatialPointStyleOptionsPtrType)(v)
}

func (*dashboardGeospatialPointStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialPointStyleOptions)(nil)).Elem()
}

func (i *dashboardGeospatialPointStyleOptionsPtrType) ToDashboardGeospatialPointStyleOptionsPtrOutput() DashboardGeospatialPointStyleOptionsPtrOutput {
	return i.ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialPointStyleOptionsPtrType) ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialPointStyleOptionsPtrOutput)
}

type DashboardGeospatialPointStyleOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialPointStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialPointStyleOptions)(nil)).Elem()
}

func (o DashboardGeospatialPointStyleOptionsOutput) ToDashboardGeospatialPointStyleOptionsOutput() DashboardGeospatialPointStyleOptionsOutput {
	return o
}

func (o DashboardGeospatialPointStyleOptionsOutput) ToDashboardGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsOutput {
	return o
}

func (o DashboardGeospatialPointStyleOptionsOutput) ToDashboardGeospatialPointStyleOptionsPtrOutput() DashboardGeospatialPointStyleOptionsPtrOutput {
	return o.ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialPointStyleOptionsOutput) ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialPointStyleOptions) *DashboardGeospatialPointStyleOptions {
		return &v
	}).(DashboardGeospatialPointStyleOptionsPtrOutput)
}

func (o DashboardGeospatialPointStyleOptionsOutput) ClusterMarkerConfiguration() DashboardClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialPointStyleOptions) *DashboardClusterMarkerConfiguration {
		return v.ClusterMarkerConfiguration
	}).(DashboardClusterMarkerConfigurationPtrOutput)
}

func (o DashboardGeospatialPointStyleOptionsOutput) SelectedPointStyle() DashboardGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v DashboardGeospatialPointStyleOptions) *DashboardGeospatialSelectedPointStyle {
		return v.SelectedPointStyle
	}).(DashboardGeospatialSelectedPointStylePtrOutput)
}

type DashboardGeospatialPointStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialPointStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialPointStyleOptions)(nil)).Elem()
}

func (o DashboardGeospatialPointStyleOptionsPtrOutput) ToDashboardGeospatialPointStyleOptionsPtrOutput() DashboardGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialPointStyleOptionsPtrOutput) ToDashboardGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialPointStyleOptionsPtrOutput) Elem() DashboardGeospatialPointStyleOptionsOutput {
	return o.ApplyT(func(v *DashboardGeospatialPointStyleOptions) DashboardGeospatialPointStyleOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialPointStyleOptions
		return ret
	}).(DashboardGeospatialPointStyleOptionsOutput)
}

func (o DashboardGeospatialPointStyleOptionsPtrOutput) ClusterMarkerConfiguration() DashboardClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialPointStyleOptions) *DashboardClusterMarkerConfiguration {
		if v == nil {
			return nil
		}
		return v.ClusterMarkerConfiguration
	}).(DashboardClusterMarkerConfigurationPtrOutput)
}

func (o DashboardGeospatialPointStyleOptionsPtrOutput) SelectedPointStyle() DashboardGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialPointStyleOptions) *DashboardGeospatialSelectedPointStyle {
		if v == nil {
			return nil
		}
		return v.SelectedPointStyle
	}).(DashboardGeospatialSelectedPointStylePtrOutput)
}

type DashboardGeospatialWindowOptions struct {
	Bounds      *DashboardGeospatialCoordinateBounds `pulumi:"bounds"`
	MapZoomMode *DashboardMapZoomMode                `pulumi:"mapZoomMode"`
}

// DashboardGeospatialWindowOptionsInput is an input type that accepts DashboardGeospatialWindowOptionsArgs and DashboardGeospatialWindowOptionsOutput values.
// You can construct a concrete instance of `DashboardGeospatialWindowOptionsInput` via:
//
//	DashboardGeospatialWindowOptionsArgs{...}
type DashboardGeospatialWindowOptionsInput interface {
	pulumi.Input

	ToDashboardGeospatialWindowOptionsOutput() DashboardGeospatialWindowOptionsOutput
	ToDashboardGeospatialWindowOptionsOutputWithContext(context.Context) DashboardGeospatialWindowOptionsOutput
}

type DashboardGeospatialWindowOptionsArgs struct {
	Bounds      DashboardGeospatialCoordinateBoundsPtrInput `pulumi:"bounds"`
	MapZoomMode DashboardMapZoomModePtrInput                `pulumi:"mapZoomMode"`
}

func (DashboardGeospatialWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialWindowOptions)(nil)).Elem()
}

func (i DashboardGeospatialWindowOptionsArgs) ToDashboardGeospatialWindowOptionsOutput() DashboardGeospatialWindowOptionsOutput {
	return i.ToDashboardGeospatialWindowOptionsOutputWithContext(context.Background())
}

func (i DashboardGeospatialWindowOptionsArgs) ToDashboardGeospatialWindowOptionsOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialWindowOptionsOutput)
}

func (i DashboardGeospatialWindowOptionsArgs) ToDashboardGeospatialWindowOptionsPtrOutput() DashboardGeospatialWindowOptionsPtrOutput {
	return i.ToDashboardGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGeospatialWindowOptionsArgs) ToDashboardGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialWindowOptionsOutput).ToDashboardGeospatialWindowOptionsPtrOutputWithContext(ctx)
}

// DashboardGeospatialWindowOptionsPtrInput is an input type that accepts DashboardGeospatialWindowOptionsArgs, DashboardGeospatialWindowOptionsPtr and DashboardGeospatialWindowOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGeospatialWindowOptionsPtrInput` via:
//
//	        DashboardGeospatialWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGeospatialWindowOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGeospatialWindowOptionsPtrOutput() DashboardGeospatialWindowOptionsPtrOutput
	ToDashboardGeospatialWindowOptionsPtrOutputWithContext(context.Context) DashboardGeospatialWindowOptionsPtrOutput
}

type dashboardGeospatialWindowOptionsPtrType DashboardGeospatialWindowOptionsArgs

func DashboardGeospatialWindowOptionsPtr(v *DashboardGeospatialWindowOptionsArgs) DashboardGeospatialWindowOptionsPtrInput {
	return (*dashboardGeospatialWindowOptionsPtrType)(v)
}

func (*dashboardGeospatialWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialWindowOptions)(nil)).Elem()
}

func (i *dashboardGeospatialWindowOptionsPtrType) ToDashboardGeospatialWindowOptionsPtrOutput() DashboardGeospatialWindowOptionsPtrOutput {
	return i.ToDashboardGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGeospatialWindowOptionsPtrType) ToDashboardGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGeospatialWindowOptionsPtrOutput)
}

type DashboardGeospatialWindowOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGeospatialWindowOptions)(nil)).Elem()
}

func (o DashboardGeospatialWindowOptionsOutput) ToDashboardGeospatialWindowOptionsOutput() DashboardGeospatialWindowOptionsOutput {
	return o
}

func (o DashboardGeospatialWindowOptionsOutput) ToDashboardGeospatialWindowOptionsOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsOutput {
	return o
}

func (o DashboardGeospatialWindowOptionsOutput) ToDashboardGeospatialWindowOptionsPtrOutput() DashboardGeospatialWindowOptionsPtrOutput {
	return o.ToDashboardGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGeospatialWindowOptionsOutput) ToDashboardGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGeospatialWindowOptions) *DashboardGeospatialWindowOptions {
		return &v
	}).(DashboardGeospatialWindowOptionsPtrOutput)
}

func (o DashboardGeospatialWindowOptionsOutput) Bounds() DashboardGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v DashboardGeospatialWindowOptions) *DashboardGeospatialCoordinateBounds { return v.Bounds }).(DashboardGeospatialCoordinateBoundsPtrOutput)
}

func (o DashboardGeospatialWindowOptionsOutput) MapZoomMode() DashboardMapZoomModePtrOutput {
	return o.ApplyT(func(v DashboardGeospatialWindowOptions) *DashboardMapZoomMode { return v.MapZoomMode }).(DashboardMapZoomModePtrOutput)
}

type DashboardGeospatialWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGeospatialWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGeospatialWindowOptions)(nil)).Elem()
}

func (o DashboardGeospatialWindowOptionsPtrOutput) ToDashboardGeospatialWindowOptionsPtrOutput() DashboardGeospatialWindowOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialWindowOptionsPtrOutput) ToDashboardGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) DashboardGeospatialWindowOptionsPtrOutput {
	return o
}

func (o DashboardGeospatialWindowOptionsPtrOutput) Elem() DashboardGeospatialWindowOptionsOutput {
	return o.ApplyT(func(v *DashboardGeospatialWindowOptions) DashboardGeospatialWindowOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGeospatialWindowOptions
		return ret
	}).(DashboardGeospatialWindowOptionsOutput)
}

func (o DashboardGeospatialWindowOptionsPtrOutput) Bounds() DashboardGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialWindowOptions) *DashboardGeospatialCoordinateBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(DashboardGeospatialCoordinateBoundsPtrOutput)
}

func (o DashboardGeospatialWindowOptionsPtrOutput) MapZoomMode() DashboardMapZoomModePtrOutput {
	return o.ApplyT(func(v *DashboardGeospatialWindowOptions) *DashboardMapZoomMode {
		if v == nil {
			return nil
		}
		return v.MapZoomMode
	}).(DashboardMapZoomModePtrOutput)
}

type DashboardGlobalTableBorderOptions struct {
	SideSpecificBorder *DashboardTableSideBorderOptions `pulumi:"sideSpecificBorder"`
	UniformBorder      *DashboardTableBorderOptions     `pulumi:"uniformBorder"`
}

// DashboardGlobalTableBorderOptionsInput is an input type that accepts DashboardGlobalTableBorderOptionsArgs and DashboardGlobalTableBorderOptionsOutput values.
// You can construct a concrete instance of `DashboardGlobalTableBorderOptionsInput` via:
//
//	DashboardGlobalTableBorderOptionsArgs{...}
type DashboardGlobalTableBorderOptionsInput interface {
	pulumi.Input

	ToDashboardGlobalTableBorderOptionsOutput() DashboardGlobalTableBorderOptionsOutput
	ToDashboardGlobalTableBorderOptionsOutputWithContext(context.Context) DashboardGlobalTableBorderOptionsOutput
}

type DashboardGlobalTableBorderOptionsArgs struct {
	SideSpecificBorder DashboardTableSideBorderOptionsPtrInput `pulumi:"sideSpecificBorder"`
	UniformBorder      DashboardTableBorderOptionsPtrInput     `pulumi:"uniformBorder"`
}

func (DashboardGlobalTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGlobalTableBorderOptions)(nil)).Elem()
}

func (i DashboardGlobalTableBorderOptionsArgs) ToDashboardGlobalTableBorderOptionsOutput() DashboardGlobalTableBorderOptionsOutput {
	return i.ToDashboardGlobalTableBorderOptionsOutputWithContext(context.Background())
}

func (i DashboardGlobalTableBorderOptionsArgs) ToDashboardGlobalTableBorderOptionsOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGlobalTableBorderOptionsOutput)
}

func (i DashboardGlobalTableBorderOptionsArgs) ToDashboardGlobalTableBorderOptionsPtrOutput() DashboardGlobalTableBorderOptionsPtrOutput {
	return i.ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGlobalTableBorderOptionsArgs) ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGlobalTableBorderOptionsOutput).ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(ctx)
}

// DashboardGlobalTableBorderOptionsPtrInput is an input type that accepts DashboardGlobalTableBorderOptionsArgs, DashboardGlobalTableBorderOptionsPtr and DashboardGlobalTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGlobalTableBorderOptionsPtrInput` via:
//
//	        DashboardGlobalTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGlobalTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGlobalTableBorderOptionsPtrOutput() DashboardGlobalTableBorderOptionsPtrOutput
	ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(context.Context) DashboardGlobalTableBorderOptionsPtrOutput
}

type dashboardGlobalTableBorderOptionsPtrType DashboardGlobalTableBorderOptionsArgs

func DashboardGlobalTableBorderOptionsPtr(v *DashboardGlobalTableBorderOptionsArgs) DashboardGlobalTableBorderOptionsPtrInput {
	return (*dashboardGlobalTableBorderOptionsPtrType)(v)
}

func (*dashboardGlobalTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGlobalTableBorderOptions)(nil)).Elem()
}

func (i *dashboardGlobalTableBorderOptionsPtrType) ToDashboardGlobalTableBorderOptionsPtrOutput() DashboardGlobalTableBorderOptionsPtrOutput {
	return i.ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGlobalTableBorderOptionsPtrType) ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGlobalTableBorderOptionsPtrOutput)
}

type DashboardGlobalTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGlobalTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGlobalTableBorderOptions)(nil)).Elem()
}

func (o DashboardGlobalTableBorderOptionsOutput) ToDashboardGlobalTableBorderOptionsOutput() DashboardGlobalTableBorderOptionsOutput {
	return o
}

func (o DashboardGlobalTableBorderOptionsOutput) ToDashboardGlobalTableBorderOptionsOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsOutput {
	return o
}

func (o DashboardGlobalTableBorderOptionsOutput) ToDashboardGlobalTableBorderOptionsPtrOutput() DashboardGlobalTableBorderOptionsPtrOutput {
	return o.ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGlobalTableBorderOptionsOutput) ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGlobalTableBorderOptions) *DashboardGlobalTableBorderOptions {
		return &v
	}).(DashboardGlobalTableBorderOptionsPtrOutput)
}

func (o DashboardGlobalTableBorderOptionsOutput) SideSpecificBorder() DashboardTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGlobalTableBorderOptions) *DashboardTableSideBorderOptions {
		return v.SideSpecificBorder
	}).(DashboardTableSideBorderOptionsPtrOutput)
}

func (o DashboardGlobalTableBorderOptionsOutput) UniformBorder() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGlobalTableBorderOptions) *DashboardTableBorderOptions { return v.UniformBorder }).(DashboardTableBorderOptionsPtrOutput)
}

type DashboardGlobalTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGlobalTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGlobalTableBorderOptions)(nil)).Elem()
}

func (o DashboardGlobalTableBorderOptionsPtrOutput) ToDashboardGlobalTableBorderOptionsPtrOutput() DashboardGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o DashboardGlobalTableBorderOptionsPtrOutput) ToDashboardGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o DashboardGlobalTableBorderOptionsPtrOutput) Elem() DashboardGlobalTableBorderOptionsOutput {
	return o.ApplyT(func(v *DashboardGlobalTableBorderOptions) DashboardGlobalTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGlobalTableBorderOptions
		return ret
	}).(DashboardGlobalTableBorderOptionsOutput)
}

func (o DashboardGlobalTableBorderOptionsPtrOutput) SideSpecificBorder() DashboardTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGlobalTableBorderOptions) *DashboardTableSideBorderOptions {
		if v == nil {
			return nil
		}
		return v.SideSpecificBorder
	}).(DashboardTableSideBorderOptionsPtrOutput)
}

func (o DashboardGlobalTableBorderOptionsPtrOutput) UniformBorder() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGlobalTableBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.UniformBorder
	}).(DashboardTableBorderOptionsPtrOutput)
}

type DashboardGradientColor struct {
	Stops []DashboardGradientStop `pulumi:"stops"`
}

// DashboardGradientColorInput is an input type that accepts DashboardGradientColorArgs and DashboardGradientColorOutput values.
// You can construct a concrete instance of `DashboardGradientColorInput` via:
//
//	DashboardGradientColorArgs{...}
type DashboardGradientColorInput interface {
	pulumi.Input

	ToDashboardGradientColorOutput() DashboardGradientColorOutput
	ToDashboardGradientColorOutputWithContext(context.Context) DashboardGradientColorOutput
}

type DashboardGradientColorArgs struct {
	Stops DashboardGradientStopArrayInput `pulumi:"stops"`
}

func (DashboardGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGradientColor)(nil)).Elem()
}

func (i DashboardGradientColorArgs) ToDashboardGradientColorOutput() DashboardGradientColorOutput {
	return i.ToDashboardGradientColorOutputWithContext(context.Background())
}

func (i DashboardGradientColorArgs) ToDashboardGradientColorOutputWithContext(ctx context.Context) DashboardGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGradientColorOutput)
}

func (i DashboardGradientColorArgs) ToDashboardGradientColorPtrOutput() DashboardGradientColorPtrOutput {
	return i.ToDashboardGradientColorPtrOutputWithContext(context.Background())
}

func (i DashboardGradientColorArgs) ToDashboardGradientColorPtrOutputWithContext(ctx context.Context) DashboardGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGradientColorOutput).ToDashboardGradientColorPtrOutputWithContext(ctx)
}

// DashboardGradientColorPtrInput is an input type that accepts DashboardGradientColorArgs, DashboardGradientColorPtr and DashboardGradientColorPtrOutput values.
// You can construct a concrete instance of `DashboardGradientColorPtrInput` via:
//
//	        DashboardGradientColorArgs{...}
//
//	or:
//
//	        nil
type DashboardGradientColorPtrInput interface {
	pulumi.Input

	ToDashboardGradientColorPtrOutput() DashboardGradientColorPtrOutput
	ToDashboardGradientColorPtrOutputWithContext(context.Context) DashboardGradientColorPtrOutput
}

type dashboardGradientColorPtrType DashboardGradientColorArgs

func DashboardGradientColorPtr(v *DashboardGradientColorArgs) DashboardGradientColorPtrInput {
	return (*dashboardGradientColorPtrType)(v)
}

func (*dashboardGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGradientColor)(nil)).Elem()
}

func (i *dashboardGradientColorPtrType) ToDashboardGradientColorPtrOutput() DashboardGradientColorPtrOutput {
	return i.ToDashboardGradientColorPtrOutputWithContext(context.Background())
}

func (i *dashboardGradientColorPtrType) ToDashboardGradientColorPtrOutputWithContext(ctx context.Context) DashboardGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGradientColorPtrOutput)
}

type DashboardGradientColorOutput struct{ *pulumi.OutputState }

func (DashboardGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGradientColor)(nil)).Elem()
}

func (o DashboardGradientColorOutput) ToDashboardGradientColorOutput() DashboardGradientColorOutput {
	return o
}

func (o DashboardGradientColorOutput) ToDashboardGradientColorOutputWithContext(ctx context.Context) DashboardGradientColorOutput {
	return o
}

func (o DashboardGradientColorOutput) ToDashboardGradientColorPtrOutput() DashboardGradientColorPtrOutput {
	return o.ToDashboardGradientColorPtrOutputWithContext(context.Background())
}

func (o DashboardGradientColorOutput) ToDashboardGradientColorPtrOutputWithContext(ctx context.Context) DashboardGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGradientColor) *DashboardGradientColor {
		return &v
	}).(DashboardGradientColorPtrOutput)
}

func (o DashboardGradientColorOutput) Stops() DashboardGradientStopArrayOutput {
	return o.ApplyT(func(v DashboardGradientColor) []DashboardGradientStop { return v.Stops }).(DashboardGradientStopArrayOutput)
}

type DashboardGradientColorPtrOutput struct{ *pulumi.OutputState }

func (DashboardGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGradientColor)(nil)).Elem()
}

func (o DashboardGradientColorPtrOutput) ToDashboardGradientColorPtrOutput() DashboardGradientColorPtrOutput {
	return o
}

func (o DashboardGradientColorPtrOutput) ToDashboardGradientColorPtrOutputWithContext(ctx context.Context) DashboardGradientColorPtrOutput {
	return o
}

func (o DashboardGradientColorPtrOutput) Elem() DashboardGradientColorOutput {
	return o.ApplyT(func(v *DashboardGradientColor) DashboardGradientColor {
		if v != nil {
			return *v
		}
		var ret DashboardGradientColor
		return ret
	}).(DashboardGradientColorOutput)
}

func (o DashboardGradientColorPtrOutput) Stops() DashboardGradientStopArrayOutput {
	return o.ApplyT(func(v *DashboardGradientColor) []DashboardGradientStop {
		if v == nil {
			return nil
		}
		return v.Stops
	}).(DashboardGradientStopArrayOutput)
}

type DashboardGradientStop struct {
	Color          *string  `pulumi:"color"`
	DataValue      *float64 `pulumi:"dataValue"`
	GradientOffset float64  `pulumi:"gradientOffset"`
}

// DashboardGradientStopInput is an input type that accepts DashboardGradientStopArgs and DashboardGradientStopOutput values.
// You can construct a concrete instance of `DashboardGradientStopInput` via:
//
//	DashboardGradientStopArgs{...}
type DashboardGradientStopInput interface {
	pulumi.Input

	ToDashboardGradientStopOutput() DashboardGradientStopOutput
	ToDashboardGradientStopOutputWithContext(context.Context) DashboardGradientStopOutput
}

type DashboardGradientStopArgs struct {
	Color          pulumi.StringPtrInput  `pulumi:"color"`
	DataValue      pulumi.Float64PtrInput `pulumi:"dataValue"`
	GradientOffset pulumi.Float64Input    `pulumi:"gradientOffset"`
}

func (DashboardGradientStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGradientStop)(nil)).Elem()
}

func (i DashboardGradientStopArgs) ToDashboardGradientStopOutput() DashboardGradientStopOutput {
	return i.ToDashboardGradientStopOutputWithContext(context.Background())
}

func (i DashboardGradientStopArgs) ToDashboardGradientStopOutputWithContext(ctx context.Context) DashboardGradientStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGradientStopOutput)
}

// DashboardGradientStopArrayInput is an input type that accepts DashboardGradientStopArray and DashboardGradientStopArrayOutput values.
// You can construct a concrete instance of `DashboardGradientStopArrayInput` via:
//
//	DashboardGradientStopArray{ DashboardGradientStopArgs{...} }
type DashboardGradientStopArrayInput interface {
	pulumi.Input

	ToDashboardGradientStopArrayOutput() DashboardGradientStopArrayOutput
	ToDashboardGradientStopArrayOutputWithContext(context.Context) DashboardGradientStopArrayOutput
}

type DashboardGradientStopArray []DashboardGradientStopInput

func (DashboardGradientStopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGradientStop)(nil)).Elem()
}

func (i DashboardGradientStopArray) ToDashboardGradientStopArrayOutput() DashboardGradientStopArrayOutput {
	return i.ToDashboardGradientStopArrayOutputWithContext(context.Background())
}

func (i DashboardGradientStopArray) ToDashboardGradientStopArrayOutputWithContext(ctx context.Context) DashboardGradientStopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGradientStopArrayOutput)
}

type DashboardGradientStopOutput struct{ *pulumi.OutputState }

func (DashboardGradientStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGradientStop)(nil)).Elem()
}

func (o DashboardGradientStopOutput) ToDashboardGradientStopOutput() DashboardGradientStopOutput {
	return o
}

func (o DashboardGradientStopOutput) ToDashboardGradientStopOutputWithContext(ctx context.Context) DashboardGradientStopOutput {
	return o
}

func (o DashboardGradientStopOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardGradientStop) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardGradientStopOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardGradientStop) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

func (o DashboardGradientStopOutput) GradientOffset() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGradientStop) float64 { return v.GradientOffset }).(pulumi.Float64Output)
}

type DashboardGradientStopArrayOutput struct{ *pulumi.OutputState }

func (DashboardGradientStopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGradientStop)(nil)).Elem()
}

func (o DashboardGradientStopArrayOutput) ToDashboardGradientStopArrayOutput() DashboardGradientStopArrayOutput {
	return o
}

func (o DashboardGradientStopArrayOutput) ToDashboardGradientStopArrayOutputWithContext(ctx context.Context) DashboardGradientStopArrayOutput {
	return o
}

func (o DashboardGradientStopArrayOutput) Index(i pulumi.IntInput) DashboardGradientStopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardGradientStop {
		return vs[0].([]DashboardGradientStop)[vs[1].(int)]
	}).(DashboardGradientStopOutput)
}

type DashboardGridLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *DashboardGridLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// DashboardGridLayoutCanvasSizeOptionsInput is an input type that accepts DashboardGridLayoutCanvasSizeOptionsArgs and DashboardGridLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardGridLayoutCanvasSizeOptionsInput` via:
//
//	DashboardGridLayoutCanvasSizeOptionsArgs{...}
type DashboardGridLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardGridLayoutCanvasSizeOptionsOutput() DashboardGridLayoutCanvasSizeOptionsOutput
	ToDashboardGridLayoutCanvasSizeOptionsOutputWithContext(context.Context) DashboardGridLayoutCanvasSizeOptionsOutput
}

type DashboardGridLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions DashboardGridLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (DashboardGridLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardGridLayoutCanvasSizeOptionsArgs) ToDashboardGridLayoutCanvasSizeOptionsOutput() DashboardGridLayoutCanvasSizeOptionsOutput {
	return i.ToDashboardGridLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardGridLayoutCanvasSizeOptionsArgs) ToDashboardGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutCanvasSizeOptionsOutput)
}

func (i DashboardGridLayoutCanvasSizeOptionsArgs) ToDashboardGridLayoutCanvasSizeOptionsPtrOutput() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGridLayoutCanvasSizeOptionsArgs) ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutCanvasSizeOptionsOutput).ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardGridLayoutCanvasSizeOptionsPtrInput is an input type that accepts DashboardGridLayoutCanvasSizeOptionsArgs, DashboardGridLayoutCanvasSizeOptionsPtr and DashboardGridLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGridLayoutCanvasSizeOptionsPtrInput` via:
//
//	        DashboardGridLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGridLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGridLayoutCanvasSizeOptionsPtrOutput() DashboardGridLayoutCanvasSizeOptionsPtrOutput
	ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardGridLayoutCanvasSizeOptionsPtrOutput
}

type dashboardGridLayoutCanvasSizeOptionsPtrType DashboardGridLayoutCanvasSizeOptionsArgs

func DashboardGridLayoutCanvasSizeOptionsPtr(v *DashboardGridLayoutCanvasSizeOptionsArgs) DashboardGridLayoutCanvasSizeOptionsPtrInput {
	return (*dashboardGridLayoutCanvasSizeOptionsPtrType)(v)
}

func (*dashboardGridLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardGridLayoutCanvasSizeOptionsPtrType) ToDashboardGridLayoutCanvasSizeOptionsPtrOutput() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGridLayoutCanvasSizeOptionsPtrType) ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardGridLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardGridLayoutCanvasSizeOptionsOutput) ToDashboardGridLayoutCanvasSizeOptionsOutput() DashboardGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardGridLayoutCanvasSizeOptionsOutput) ToDashboardGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardGridLayoutCanvasSizeOptionsOutput) ToDashboardGridLayoutCanvasSizeOptionsPtrOutput() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGridLayoutCanvasSizeOptionsOutput) ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGridLayoutCanvasSizeOptions) *DashboardGridLayoutCanvasSizeOptions {
		return &v
	}).(DashboardGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardGridLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGridLayoutCanvasSizeOptions) *DashboardGridLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardGridLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardGridLayoutCanvasSizeOptionsPtrOutput) ToDashboardGridLayoutCanvasSizeOptionsPtrOutput() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardGridLayoutCanvasSizeOptionsPtrOutput) ToDashboardGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardGridLayoutCanvasSizeOptionsPtrOutput) Elem() DashboardGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardGridLayoutCanvasSizeOptions) DashboardGridLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGridLayoutCanvasSizeOptions
		return ret
	}).(DashboardGridLayoutCanvasSizeOptionsOutput)
}

func (o DashboardGridLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGridLayoutCanvasSizeOptions) *DashboardGridLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardGridLayoutConfiguration struct {
	CanvasSizeOptions *DashboardGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []DashboardGridLayoutElement          `pulumi:"elements"`
}

// DashboardGridLayoutConfigurationInput is an input type that accepts DashboardGridLayoutConfigurationArgs and DashboardGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardGridLayoutConfigurationInput` via:
//
//	DashboardGridLayoutConfigurationArgs{...}
type DashboardGridLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardGridLayoutConfigurationOutput() DashboardGridLayoutConfigurationOutput
	ToDashboardGridLayoutConfigurationOutputWithContext(context.Context) DashboardGridLayoutConfigurationOutput
}

type DashboardGridLayoutConfigurationArgs struct {
	CanvasSizeOptions DashboardGridLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          DashboardGridLayoutElementArrayInput         `pulumi:"elements"`
}

func (DashboardGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutConfiguration)(nil)).Elem()
}

func (i DashboardGridLayoutConfigurationArgs) ToDashboardGridLayoutConfigurationOutput() DashboardGridLayoutConfigurationOutput {
	return i.ToDashboardGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardGridLayoutConfigurationArgs) ToDashboardGridLayoutConfigurationOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutConfigurationOutput)
}

func (i DashboardGridLayoutConfigurationArgs) ToDashboardGridLayoutConfigurationPtrOutput() DashboardGridLayoutConfigurationPtrOutput {
	return i.ToDashboardGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardGridLayoutConfigurationArgs) ToDashboardGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutConfigurationOutput).ToDashboardGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardGridLayoutConfigurationPtrInput is an input type that accepts DashboardGridLayoutConfigurationArgs, DashboardGridLayoutConfigurationPtr and DashboardGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardGridLayoutConfigurationPtrInput` via:
//
//	        DashboardGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardGridLayoutConfigurationPtrOutput() DashboardGridLayoutConfigurationPtrOutput
	ToDashboardGridLayoutConfigurationPtrOutputWithContext(context.Context) DashboardGridLayoutConfigurationPtrOutput
}

type dashboardGridLayoutConfigurationPtrType DashboardGridLayoutConfigurationArgs

func DashboardGridLayoutConfigurationPtr(v *DashboardGridLayoutConfigurationArgs) DashboardGridLayoutConfigurationPtrInput {
	return (*dashboardGridLayoutConfigurationPtrType)(v)
}

func (*dashboardGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardGridLayoutConfigurationPtrType) ToDashboardGridLayoutConfigurationPtrOutput() DashboardGridLayoutConfigurationPtrOutput {
	return i.ToDashboardGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardGridLayoutConfigurationPtrType) ToDashboardGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutConfigurationPtrOutput)
}

type DashboardGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutConfiguration)(nil)).Elem()
}

func (o DashboardGridLayoutConfigurationOutput) ToDashboardGridLayoutConfigurationOutput() DashboardGridLayoutConfigurationOutput {
	return o
}

func (o DashboardGridLayoutConfigurationOutput) ToDashboardGridLayoutConfigurationOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationOutput {
	return o
}

func (o DashboardGridLayoutConfigurationOutput) ToDashboardGridLayoutConfigurationPtrOutput() DashboardGridLayoutConfigurationPtrOutput {
	return o.ToDashboardGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardGridLayoutConfigurationOutput) ToDashboardGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGridLayoutConfiguration) *DashboardGridLayoutConfiguration {
		return &v
	}).(DashboardGridLayoutConfigurationPtrOutput)
}

func (o DashboardGridLayoutConfigurationOutput) CanvasSizeOptions() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardGridLayoutConfiguration) *DashboardGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardGridLayoutConfigurationOutput) Elements() DashboardGridLayoutElementArrayOutput {
	return o.ApplyT(func(v DashboardGridLayoutConfiguration) []DashboardGridLayoutElement { return v.Elements }).(DashboardGridLayoutElementArrayOutput)
}

type DashboardGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutConfiguration)(nil)).Elem()
}

func (o DashboardGridLayoutConfigurationPtrOutput) ToDashboardGridLayoutConfigurationPtrOutput() DashboardGridLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardGridLayoutConfigurationPtrOutput) ToDashboardGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardGridLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardGridLayoutConfigurationPtrOutput) Elem() DashboardGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardGridLayoutConfiguration) DashboardGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardGridLayoutConfiguration
		return ret
	}).(DashboardGridLayoutConfigurationOutput)
}

func (o DashboardGridLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardGridLayoutConfiguration) *DashboardGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(DashboardGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardGridLayoutConfigurationPtrOutput) Elements() DashboardGridLayoutElementArrayOutput {
	return o.ApplyT(func(v *DashboardGridLayoutConfiguration) []DashboardGridLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(DashboardGridLayoutElementArrayOutput)
}

type DashboardGridLayoutElement struct {
	ColumnIndex  *float64                   `pulumi:"columnIndex"`
	ColumnSpan   float64                    `pulumi:"columnSpan"`
	ElementId    string                     `pulumi:"elementId"`
	ElementType_ DashboardLayoutElementType `pulumi:"elementType"`
	RowIndex     *float64                   `pulumi:"rowIndex"`
	RowSpan      float64                    `pulumi:"rowSpan"`
}

// DashboardGridLayoutElementInput is an input type that accepts DashboardGridLayoutElementArgs and DashboardGridLayoutElementOutput values.
// You can construct a concrete instance of `DashboardGridLayoutElementInput` via:
//
//	DashboardGridLayoutElementArgs{...}
type DashboardGridLayoutElementInput interface {
	pulumi.Input

	ToDashboardGridLayoutElementOutput() DashboardGridLayoutElementOutput
	ToDashboardGridLayoutElementOutputWithContext(context.Context) DashboardGridLayoutElementOutput
}

type DashboardGridLayoutElementArgs struct {
	ColumnIndex  pulumi.Float64PtrInput          `pulumi:"columnIndex"`
	ColumnSpan   pulumi.Float64Input             `pulumi:"columnSpan"`
	ElementId    pulumi.StringInput              `pulumi:"elementId"`
	ElementType_ DashboardLayoutElementTypeInput `pulumi:"elementType"`
	RowIndex     pulumi.Float64PtrInput          `pulumi:"rowIndex"`
	RowSpan      pulumi.Float64Input             `pulumi:"rowSpan"`
}

func (DashboardGridLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutElement)(nil)).Elem()
}

func (i DashboardGridLayoutElementArgs) ToDashboardGridLayoutElementOutput() DashboardGridLayoutElementOutput {
	return i.ToDashboardGridLayoutElementOutputWithContext(context.Background())
}

func (i DashboardGridLayoutElementArgs) ToDashboardGridLayoutElementOutputWithContext(ctx context.Context) DashboardGridLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutElementOutput)
}

// DashboardGridLayoutElementArrayInput is an input type that accepts DashboardGridLayoutElementArray and DashboardGridLayoutElementArrayOutput values.
// You can construct a concrete instance of `DashboardGridLayoutElementArrayInput` via:
//
//	DashboardGridLayoutElementArray{ DashboardGridLayoutElementArgs{...} }
type DashboardGridLayoutElementArrayInput interface {
	pulumi.Input

	ToDashboardGridLayoutElementArrayOutput() DashboardGridLayoutElementArrayOutput
	ToDashboardGridLayoutElementArrayOutputWithContext(context.Context) DashboardGridLayoutElementArrayOutput
}

type DashboardGridLayoutElementArray []DashboardGridLayoutElementInput

func (DashboardGridLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGridLayoutElement)(nil)).Elem()
}

func (i DashboardGridLayoutElementArray) ToDashboardGridLayoutElementArrayOutput() DashboardGridLayoutElementArrayOutput {
	return i.ToDashboardGridLayoutElementArrayOutputWithContext(context.Background())
}

func (i DashboardGridLayoutElementArray) ToDashboardGridLayoutElementArrayOutputWithContext(ctx context.Context) DashboardGridLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutElementArrayOutput)
}

type DashboardGridLayoutElementOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutElement)(nil)).Elem()
}

func (o DashboardGridLayoutElementOutput) ToDashboardGridLayoutElementOutput() DashboardGridLayoutElementOutput {
	return o
}

func (o DashboardGridLayoutElementOutput) ToDashboardGridLayoutElementOutputWithContext(ctx context.Context) DashboardGridLayoutElementOutput {
	return o
}

func (o DashboardGridLayoutElementOutput) ColumnIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardGridLayoutElement) *float64 { return v.ColumnIndex }).(pulumi.Float64PtrOutput)
}

func (o DashboardGridLayoutElementOutput) ColumnSpan() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGridLayoutElement) float64 { return v.ColumnSpan }).(pulumi.Float64Output)
}

func (o DashboardGridLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardGridLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o DashboardGridLayoutElementOutput) GetElementType_() DashboardLayoutElementTypeOutput {
	return o.ApplyT(func(v DashboardGridLayoutElement) DashboardLayoutElementType { return v.ElementType_ }).(DashboardLayoutElementTypeOutput)
}

func (o DashboardGridLayoutElementOutput) RowIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardGridLayoutElement) *float64 { return v.RowIndex }).(pulumi.Float64PtrOutput)
}

func (o DashboardGridLayoutElementOutput) RowSpan() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardGridLayoutElement) float64 { return v.RowSpan }).(pulumi.Float64Output)
}

type DashboardGridLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardGridLayoutElement)(nil)).Elem()
}

func (o DashboardGridLayoutElementArrayOutput) ToDashboardGridLayoutElementArrayOutput() DashboardGridLayoutElementArrayOutput {
	return o
}

func (o DashboardGridLayoutElementArrayOutput) ToDashboardGridLayoutElementArrayOutputWithContext(ctx context.Context) DashboardGridLayoutElementArrayOutput {
	return o
}

func (o DashboardGridLayoutElementArrayOutput) Index(i pulumi.IntInput) DashboardGridLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardGridLayoutElement {
		return vs[0].([]DashboardGridLayoutElement)[vs[1].(int)]
	}).(DashboardGridLayoutElementOutput)
}

type DashboardGridLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth *string               `pulumi:"optimizedViewPortWidth"`
	ResizeOption           DashboardResizeOption `pulumi:"resizeOption"`
}

// DashboardGridLayoutScreenCanvasSizeOptionsInput is an input type that accepts DashboardGridLayoutScreenCanvasSizeOptionsArgs and DashboardGridLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardGridLayoutScreenCanvasSizeOptionsInput` via:
//
//	DashboardGridLayoutScreenCanvasSizeOptionsArgs{...}
type DashboardGridLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardGridLayoutScreenCanvasSizeOptionsOutput() DashboardGridLayoutScreenCanvasSizeOptionsOutput
	ToDashboardGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) DashboardGridLayoutScreenCanvasSizeOptionsOutput
}

type DashboardGridLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringPtrInput      `pulumi:"optimizedViewPortWidth"`
	ResizeOption           DashboardResizeOptionInput `pulumi:"resizeOption"`
}

func (DashboardGridLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardGridLayoutScreenCanvasSizeOptionsArgs) ToDashboardGridLayoutScreenCanvasSizeOptionsOutput() DashboardGridLayoutScreenCanvasSizeOptionsOutput {
	return i.ToDashboardGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardGridLayoutScreenCanvasSizeOptionsArgs) ToDashboardGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutScreenCanvasSizeOptionsOutput)
}

func (i DashboardGridLayoutScreenCanvasSizeOptionsArgs) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutput() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardGridLayoutScreenCanvasSizeOptionsArgs) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutScreenCanvasSizeOptionsOutput).ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardGridLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts DashboardGridLayoutScreenCanvasSizeOptionsArgs, DashboardGridLayoutScreenCanvasSizeOptionsPtr and DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardGridLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        DashboardGridLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardGridLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutput() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput
	ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput
}

type dashboardGridLayoutScreenCanvasSizeOptionsPtrType DashboardGridLayoutScreenCanvasSizeOptionsArgs

func DashboardGridLayoutScreenCanvasSizeOptionsPtr(v *DashboardGridLayoutScreenCanvasSizeOptionsArgs) DashboardGridLayoutScreenCanvasSizeOptionsPtrInput {
	return (*dashboardGridLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*dashboardGridLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardGridLayoutScreenCanvasSizeOptionsPtrType) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutput() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardGridLayoutScreenCanvasSizeOptionsPtrType) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type DashboardGridLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsOutput() DashboardGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutput() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGridLayoutScreenCanvasSizeOptions) *DashboardGridLayoutScreenCanvasSizeOptions {
		return &v
	}).(DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardGridLayoutScreenCanvasSizeOptions) *string { return v.OptimizedViewPortWidth }).(pulumi.StringPtrOutput)
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsOutput) ResizeOption() DashboardResizeOptionOutput {
	return o.ApplyT(func(v DashboardGridLayoutScreenCanvasSizeOptions) DashboardResizeOption { return v.ResizeOption }).(DashboardResizeOptionOutput)
}

type DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutput() DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) ToDashboardGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) Elem() DashboardGridLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardGridLayoutScreenCanvasSizeOptions) DashboardGridLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardGridLayoutScreenCanvasSizeOptions
		return ret
	}).(DashboardGridLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardGridLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

func (o DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput) ResizeOption() DashboardResizeOptionPtrOutput {
	return o.ApplyT(func(v *DashboardGridLayoutScreenCanvasSizeOptions) *DashboardResizeOption {
		if v == nil {
			return nil
		}
		return &v.ResizeOption
	}).(DashboardResizeOptionPtrOutput)
}

type DashboardGrowthRateComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
	PeriodSize    *float64                `pulumi:"periodSize"`
	Time          DashboardDimensionField `pulumi:"time"`
	Value         *DashboardMeasureField  `pulumi:"value"`
}

// DashboardGrowthRateComputationInput is an input type that accepts DashboardGrowthRateComputationArgs and DashboardGrowthRateComputationOutput values.
// You can construct a concrete instance of `DashboardGrowthRateComputationInput` via:
//
//	DashboardGrowthRateComputationArgs{...}
type DashboardGrowthRateComputationInput interface {
	pulumi.Input

	ToDashboardGrowthRateComputationOutput() DashboardGrowthRateComputationOutput
	ToDashboardGrowthRateComputationOutputWithContext(context.Context) DashboardGrowthRateComputationOutput
}

type DashboardGrowthRateComputationArgs struct {
	ComputationId pulumi.StringInput            `pulumi:"computationId"`
	Name          pulumi.StringPtrInput         `pulumi:"name"`
	PeriodSize    pulumi.Float64PtrInput        `pulumi:"periodSize"`
	Time          DashboardDimensionFieldInput  `pulumi:"time"`
	Value         DashboardMeasureFieldPtrInput `pulumi:"value"`
}

func (DashboardGrowthRateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGrowthRateComputation)(nil)).Elem()
}

func (i DashboardGrowthRateComputationArgs) ToDashboardGrowthRateComputationOutput() DashboardGrowthRateComputationOutput {
	return i.ToDashboardGrowthRateComputationOutputWithContext(context.Background())
}

func (i DashboardGrowthRateComputationArgs) ToDashboardGrowthRateComputationOutputWithContext(ctx context.Context) DashboardGrowthRateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGrowthRateComputationOutput)
}

func (i DashboardGrowthRateComputationArgs) ToDashboardGrowthRateComputationPtrOutput() DashboardGrowthRateComputationPtrOutput {
	return i.ToDashboardGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i DashboardGrowthRateComputationArgs) ToDashboardGrowthRateComputationPtrOutputWithContext(ctx context.Context) DashboardGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGrowthRateComputationOutput).ToDashboardGrowthRateComputationPtrOutputWithContext(ctx)
}

// DashboardGrowthRateComputationPtrInput is an input type that accepts DashboardGrowthRateComputationArgs, DashboardGrowthRateComputationPtr and DashboardGrowthRateComputationPtrOutput values.
// You can construct a concrete instance of `DashboardGrowthRateComputationPtrInput` via:
//
//	        DashboardGrowthRateComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardGrowthRateComputationPtrInput interface {
	pulumi.Input

	ToDashboardGrowthRateComputationPtrOutput() DashboardGrowthRateComputationPtrOutput
	ToDashboardGrowthRateComputationPtrOutputWithContext(context.Context) DashboardGrowthRateComputationPtrOutput
}

type dashboardGrowthRateComputationPtrType DashboardGrowthRateComputationArgs

func DashboardGrowthRateComputationPtr(v *DashboardGrowthRateComputationArgs) DashboardGrowthRateComputationPtrInput {
	return (*dashboardGrowthRateComputationPtrType)(v)
}

func (*dashboardGrowthRateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGrowthRateComputation)(nil)).Elem()
}

func (i *dashboardGrowthRateComputationPtrType) ToDashboardGrowthRateComputationPtrOutput() DashboardGrowthRateComputationPtrOutput {
	return i.ToDashboardGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardGrowthRateComputationPtrType) ToDashboardGrowthRateComputationPtrOutputWithContext(ctx context.Context) DashboardGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardGrowthRateComputationPtrOutput)
}

type DashboardGrowthRateComputationOutput struct{ *pulumi.OutputState }

func (DashboardGrowthRateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardGrowthRateComputation)(nil)).Elem()
}

func (o DashboardGrowthRateComputationOutput) ToDashboardGrowthRateComputationOutput() DashboardGrowthRateComputationOutput {
	return o
}

func (o DashboardGrowthRateComputationOutput) ToDashboardGrowthRateComputationOutputWithContext(ctx context.Context) DashboardGrowthRateComputationOutput {
	return o
}

func (o DashboardGrowthRateComputationOutput) ToDashboardGrowthRateComputationPtrOutput() DashboardGrowthRateComputationPtrOutput {
	return o.ToDashboardGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (o DashboardGrowthRateComputationOutput) ToDashboardGrowthRateComputationPtrOutputWithContext(ctx context.Context) DashboardGrowthRateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardGrowthRateComputation) *DashboardGrowthRateComputation {
		return &v
	}).(DashboardGrowthRateComputationPtrOutput)
}

func (o DashboardGrowthRateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardGrowthRateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardGrowthRateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardGrowthRateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardGrowthRateComputationOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardGrowthRateComputation) *float64 { return v.PeriodSize }).(pulumi.Float64PtrOutput)
}

func (o DashboardGrowthRateComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardGrowthRateComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardGrowthRateComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardGrowthRateComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardGrowthRateComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardGrowthRateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardGrowthRateComputation)(nil)).Elem()
}

func (o DashboardGrowthRateComputationPtrOutput) ToDashboardGrowthRateComputationPtrOutput() DashboardGrowthRateComputationPtrOutput {
	return o
}

func (o DashboardGrowthRateComputationPtrOutput) ToDashboardGrowthRateComputationPtrOutputWithContext(ctx context.Context) DashboardGrowthRateComputationPtrOutput {
	return o
}

func (o DashboardGrowthRateComputationPtrOutput) Elem() DashboardGrowthRateComputationOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) DashboardGrowthRateComputation {
		if v != nil {
			return *v
		}
		var ret DashboardGrowthRateComputation
		return ret
	}).(DashboardGrowthRateComputationOutput)
}

func (o DashboardGrowthRateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardGrowthRateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardGrowthRateComputationPtrOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodSize
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardGrowthRateComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardGrowthRateComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardGrowthRateComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardHeaderFooterSectionConfiguration struct {
	Layout    DashboardSectionLayoutConfiguration `pulumi:"layout"`
	SectionId string                              `pulumi:"sectionId"`
	Style     *DashboardSectionStyle              `pulumi:"style"`
}

// DashboardHeaderFooterSectionConfigurationInput is an input type that accepts DashboardHeaderFooterSectionConfigurationArgs and DashboardHeaderFooterSectionConfigurationOutput values.
// You can construct a concrete instance of `DashboardHeaderFooterSectionConfigurationInput` via:
//
//	DashboardHeaderFooterSectionConfigurationArgs{...}
type DashboardHeaderFooterSectionConfigurationInput interface {
	pulumi.Input

	ToDashboardHeaderFooterSectionConfigurationOutput() DashboardHeaderFooterSectionConfigurationOutput
	ToDashboardHeaderFooterSectionConfigurationOutputWithContext(context.Context) DashboardHeaderFooterSectionConfigurationOutput
}

type DashboardHeaderFooterSectionConfigurationArgs struct {
	Layout    DashboardSectionLayoutConfigurationInput `pulumi:"layout"`
	SectionId pulumi.StringInput                       `pulumi:"sectionId"`
	Style     DashboardSectionStylePtrInput            `pulumi:"style"`
}

func (DashboardHeaderFooterSectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i DashboardHeaderFooterSectionConfigurationArgs) ToDashboardHeaderFooterSectionConfigurationOutput() DashboardHeaderFooterSectionConfigurationOutput {
	return i.ToDashboardHeaderFooterSectionConfigurationOutputWithContext(context.Background())
}

func (i DashboardHeaderFooterSectionConfigurationArgs) ToDashboardHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) DashboardHeaderFooterSectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeaderFooterSectionConfigurationOutput)
}

// DashboardHeaderFooterSectionConfigurationArrayInput is an input type that accepts DashboardHeaderFooterSectionConfigurationArray and DashboardHeaderFooterSectionConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardHeaderFooterSectionConfigurationArrayInput` via:
//
//	DashboardHeaderFooterSectionConfigurationArray{ DashboardHeaderFooterSectionConfigurationArgs{...} }
type DashboardHeaderFooterSectionConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardHeaderFooterSectionConfigurationArrayOutput() DashboardHeaderFooterSectionConfigurationArrayOutput
	ToDashboardHeaderFooterSectionConfigurationArrayOutputWithContext(context.Context) DashboardHeaderFooterSectionConfigurationArrayOutput
}

type DashboardHeaderFooterSectionConfigurationArray []DashboardHeaderFooterSectionConfigurationInput

func (DashboardHeaderFooterSectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i DashboardHeaderFooterSectionConfigurationArray) ToDashboardHeaderFooterSectionConfigurationArrayOutput() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return i.ToDashboardHeaderFooterSectionConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardHeaderFooterSectionConfigurationArray) ToDashboardHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) DashboardHeaderFooterSectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeaderFooterSectionConfigurationArrayOutput)
}

type DashboardHeaderFooterSectionConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardHeaderFooterSectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o DashboardHeaderFooterSectionConfigurationOutput) ToDashboardHeaderFooterSectionConfigurationOutput() DashboardHeaderFooterSectionConfigurationOutput {
	return o
}

func (o DashboardHeaderFooterSectionConfigurationOutput) ToDashboardHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) DashboardHeaderFooterSectionConfigurationOutput {
	return o
}

func (o DashboardHeaderFooterSectionConfigurationOutput) Layout() DashboardSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v DashboardHeaderFooterSectionConfiguration) DashboardSectionLayoutConfiguration { return v.Layout }).(DashboardSectionLayoutConfigurationOutput)
}

func (o DashboardHeaderFooterSectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardHeaderFooterSectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o DashboardHeaderFooterSectionConfigurationOutput) Style() DashboardSectionStylePtrOutput {
	return o.ApplyT(func(v DashboardHeaderFooterSectionConfiguration) *DashboardSectionStyle { return v.Style }).(DashboardSectionStylePtrOutput)
}

type DashboardHeaderFooterSectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardHeaderFooterSectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o DashboardHeaderFooterSectionConfigurationArrayOutput) ToDashboardHeaderFooterSectionConfigurationArrayOutput() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o DashboardHeaderFooterSectionConfigurationArrayOutput) ToDashboardHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o DashboardHeaderFooterSectionConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardHeaderFooterSectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardHeaderFooterSectionConfiguration {
		return vs[0].([]DashboardHeaderFooterSectionConfiguration)[vs[1].(int)]
	}).(DashboardHeaderFooterSectionConfigurationOutput)
}

type DashboardHeatMapAggregatedFieldWells struct {
	Columns []DashboardDimensionField `pulumi:"columns"`
	Rows    []DashboardDimensionField `pulumi:"rows"`
	Values  []DashboardMeasureField   `pulumi:"values"`
}

// DashboardHeatMapAggregatedFieldWellsInput is an input type that accepts DashboardHeatMapAggregatedFieldWellsArgs and DashboardHeatMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardHeatMapAggregatedFieldWellsInput` via:
//
//	DashboardHeatMapAggregatedFieldWellsArgs{...}
type DashboardHeatMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardHeatMapAggregatedFieldWellsOutput() DashboardHeatMapAggregatedFieldWellsOutput
	ToDashboardHeatMapAggregatedFieldWellsOutputWithContext(context.Context) DashboardHeatMapAggregatedFieldWellsOutput
}

type DashboardHeatMapAggregatedFieldWellsArgs struct {
	Columns DashboardDimensionFieldArrayInput `pulumi:"columns"`
	Rows    DashboardDimensionFieldArrayInput `pulumi:"rows"`
	Values  DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardHeatMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardHeatMapAggregatedFieldWellsArgs) ToDashboardHeatMapAggregatedFieldWellsOutput() DashboardHeatMapAggregatedFieldWellsOutput {
	return i.ToDashboardHeatMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardHeatMapAggregatedFieldWellsArgs) ToDashboardHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapAggregatedFieldWellsOutput)
}

func (i DashboardHeatMapAggregatedFieldWellsArgs) ToDashboardHeatMapAggregatedFieldWellsPtrOutput() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardHeatMapAggregatedFieldWellsArgs) ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapAggregatedFieldWellsOutput).ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardHeatMapAggregatedFieldWellsPtrInput is an input type that accepts DashboardHeatMapAggregatedFieldWellsArgs, DashboardHeatMapAggregatedFieldWellsPtr and DashboardHeatMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardHeatMapAggregatedFieldWellsPtrInput` via:
//
//	        DashboardHeatMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardHeatMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardHeatMapAggregatedFieldWellsPtrOutput() DashboardHeatMapAggregatedFieldWellsPtrOutput
	ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardHeatMapAggregatedFieldWellsPtrOutput
}

type dashboardHeatMapAggregatedFieldWellsPtrType DashboardHeatMapAggregatedFieldWellsArgs

func DashboardHeatMapAggregatedFieldWellsPtr(v *DashboardHeatMapAggregatedFieldWellsArgs) DashboardHeatMapAggregatedFieldWellsPtrInput {
	return (*dashboardHeatMapAggregatedFieldWellsPtrType)(v)
}

func (*dashboardHeatMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardHeatMapAggregatedFieldWellsPtrType) ToDashboardHeatMapAggregatedFieldWellsPtrOutput() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardHeatMapAggregatedFieldWellsPtrType) ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapAggregatedFieldWellsPtrOutput)
}

type DashboardHeatMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) ToDashboardHeatMapAggregatedFieldWellsOutput() DashboardHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) ToDashboardHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) ToDashboardHeatMapAggregatedFieldWellsPtrOutput() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o.ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHeatMapAggregatedFieldWells) *DashboardHeatMapAggregatedFieldWells {
		return &v
	}).(DashboardHeatMapAggregatedFieldWellsPtrOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) Columns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapAggregatedFieldWells) []DashboardDimensionField { return v.Columns }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) Rows() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapAggregatedFieldWells) []DashboardDimensionField { return v.Rows }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardHeatMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) ToDashboardHeatMapAggregatedFieldWellsPtrOutput() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) ToDashboardHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) Elem() DashboardHeatMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardHeatMapAggregatedFieldWells) DashboardHeatMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardHeatMapAggregatedFieldWells
		return ret
	}).(DashboardHeatMapAggregatedFieldWellsOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) Columns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) Rows() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardHeatMapAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardHeatMapConfiguration struct {
	ColorScale         *DashboardColorScale               `pulumi:"colorScale"`
	ColumnLabelOptions *DashboardChartAxisLabelOptions    `pulumi:"columnLabelOptions"`
	DataLabels         *DashboardDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells         *DashboardHeatMapFieldWells        `pulumi:"fieldWells"`
	Legend             *DashboardLegendOptions            `pulumi:"legend"`
	RowLabelOptions    *DashboardChartAxisLabelOptions    `pulumi:"rowLabelOptions"`
	SortConfiguration  *DashboardHeatMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip            *DashboardTooltipOptions           `pulumi:"tooltip"`
}

// DashboardHeatMapConfigurationInput is an input type that accepts DashboardHeatMapConfigurationArgs and DashboardHeatMapConfigurationOutput values.
// You can construct a concrete instance of `DashboardHeatMapConfigurationInput` via:
//
//	DashboardHeatMapConfigurationArgs{...}
type DashboardHeatMapConfigurationInput interface {
	pulumi.Input

	ToDashboardHeatMapConfigurationOutput() DashboardHeatMapConfigurationOutput
	ToDashboardHeatMapConfigurationOutputWithContext(context.Context) DashboardHeatMapConfigurationOutput
}

type DashboardHeatMapConfigurationArgs struct {
	ColorScale         DashboardColorScalePtrInput               `pulumi:"colorScale"`
	ColumnLabelOptions DashboardChartAxisLabelOptionsPtrInput    `pulumi:"columnLabelOptions"`
	DataLabels         DashboardDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells         DashboardHeatMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend             DashboardLegendOptionsPtrInput            `pulumi:"legend"`
	RowLabelOptions    DashboardChartAxisLabelOptionsPtrInput    `pulumi:"rowLabelOptions"`
	SortConfiguration  DashboardHeatMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip            DashboardTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (DashboardHeatMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapConfiguration)(nil)).Elem()
}

func (i DashboardHeatMapConfigurationArgs) ToDashboardHeatMapConfigurationOutput() DashboardHeatMapConfigurationOutput {
	return i.ToDashboardHeatMapConfigurationOutputWithContext(context.Background())
}

func (i DashboardHeatMapConfigurationArgs) ToDashboardHeatMapConfigurationOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapConfigurationOutput)
}

func (i DashboardHeatMapConfigurationArgs) ToDashboardHeatMapConfigurationPtrOutput() DashboardHeatMapConfigurationPtrOutput {
	return i.ToDashboardHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardHeatMapConfigurationArgs) ToDashboardHeatMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapConfigurationOutput).ToDashboardHeatMapConfigurationPtrOutputWithContext(ctx)
}

// DashboardHeatMapConfigurationPtrInput is an input type that accepts DashboardHeatMapConfigurationArgs, DashboardHeatMapConfigurationPtr and DashboardHeatMapConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardHeatMapConfigurationPtrInput` via:
//
//	        DashboardHeatMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardHeatMapConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardHeatMapConfigurationPtrOutput() DashboardHeatMapConfigurationPtrOutput
	ToDashboardHeatMapConfigurationPtrOutputWithContext(context.Context) DashboardHeatMapConfigurationPtrOutput
}

type dashboardHeatMapConfigurationPtrType DashboardHeatMapConfigurationArgs

func DashboardHeatMapConfigurationPtr(v *DashboardHeatMapConfigurationArgs) DashboardHeatMapConfigurationPtrInput {
	return (*dashboardHeatMapConfigurationPtrType)(v)
}

func (*dashboardHeatMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapConfiguration)(nil)).Elem()
}

func (i *dashboardHeatMapConfigurationPtrType) ToDashboardHeatMapConfigurationPtrOutput() DashboardHeatMapConfigurationPtrOutput {
	return i.ToDashboardHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardHeatMapConfigurationPtrType) ToDashboardHeatMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapConfigurationPtrOutput)
}

type DashboardHeatMapConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapConfiguration)(nil)).Elem()
}

func (o DashboardHeatMapConfigurationOutput) ToDashboardHeatMapConfigurationOutput() DashboardHeatMapConfigurationOutput {
	return o
}

func (o DashboardHeatMapConfigurationOutput) ToDashboardHeatMapConfigurationOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationOutput {
	return o
}

func (o DashboardHeatMapConfigurationOutput) ToDashboardHeatMapConfigurationPtrOutput() DashboardHeatMapConfigurationPtrOutput {
	return o.ToDashboardHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardHeatMapConfigurationOutput) ToDashboardHeatMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHeatMapConfiguration) *DashboardHeatMapConfiguration {
		return &v
	}).(DashboardHeatMapConfigurationPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) ColorScale() DashboardColorScalePtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardColorScale { return v.ColorScale }).(DashboardColorScalePtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) ColumnLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardChartAxisLabelOptions { return v.ColumnLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) FieldWells() DashboardHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardHeatMapFieldWells { return v.FieldWells }).(DashboardHeatMapFieldWellsPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) RowLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardChartAxisLabelOptions { return v.RowLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) SortConfiguration() DashboardHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardHeatMapSortConfiguration { return v.SortConfiguration }).(DashboardHeatMapSortConfigurationPtrOutput)
}

func (o DashboardHeatMapConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

type DashboardHeatMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapConfiguration)(nil)).Elem()
}

func (o DashboardHeatMapConfigurationPtrOutput) ToDashboardHeatMapConfigurationPtrOutput() DashboardHeatMapConfigurationPtrOutput {
	return o
}

func (o DashboardHeatMapConfigurationPtrOutput) ToDashboardHeatMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapConfigurationPtrOutput {
	return o
}

func (o DashboardHeatMapConfigurationPtrOutput) Elem() DashboardHeatMapConfigurationOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) DashboardHeatMapConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardHeatMapConfiguration
		return ret
	}).(DashboardHeatMapConfigurationOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) ColorScale() DashboardColorScalePtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(DashboardColorScalePtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) ColumnLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColumnLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) FieldWells() DashboardHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardHeatMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardHeatMapFieldWellsPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) RowLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.RowLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) SortConfiguration() DashboardHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardHeatMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardHeatMapSortConfigurationPtrOutput)
}

func (o DashboardHeatMapConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

type DashboardHeatMapFieldWells struct {
	HeatMapAggregatedFieldWells *DashboardHeatMapAggregatedFieldWells `pulumi:"heatMapAggregatedFieldWells"`
}

// DashboardHeatMapFieldWellsInput is an input type that accepts DashboardHeatMapFieldWellsArgs and DashboardHeatMapFieldWellsOutput values.
// You can construct a concrete instance of `DashboardHeatMapFieldWellsInput` via:
//
//	DashboardHeatMapFieldWellsArgs{...}
type DashboardHeatMapFieldWellsInput interface {
	pulumi.Input

	ToDashboardHeatMapFieldWellsOutput() DashboardHeatMapFieldWellsOutput
	ToDashboardHeatMapFieldWellsOutputWithContext(context.Context) DashboardHeatMapFieldWellsOutput
}

type DashboardHeatMapFieldWellsArgs struct {
	HeatMapAggregatedFieldWells DashboardHeatMapAggregatedFieldWellsPtrInput `pulumi:"heatMapAggregatedFieldWells"`
}

func (DashboardHeatMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapFieldWells)(nil)).Elem()
}

func (i DashboardHeatMapFieldWellsArgs) ToDashboardHeatMapFieldWellsOutput() DashboardHeatMapFieldWellsOutput {
	return i.ToDashboardHeatMapFieldWellsOutputWithContext(context.Background())
}

func (i DashboardHeatMapFieldWellsArgs) ToDashboardHeatMapFieldWellsOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapFieldWellsOutput)
}

func (i DashboardHeatMapFieldWellsArgs) ToDashboardHeatMapFieldWellsPtrOutput() DashboardHeatMapFieldWellsPtrOutput {
	return i.ToDashboardHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardHeatMapFieldWellsArgs) ToDashboardHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapFieldWellsOutput).ToDashboardHeatMapFieldWellsPtrOutputWithContext(ctx)
}

// DashboardHeatMapFieldWellsPtrInput is an input type that accepts DashboardHeatMapFieldWellsArgs, DashboardHeatMapFieldWellsPtr and DashboardHeatMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardHeatMapFieldWellsPtrInput` via:
//
//	        DashboardHeatMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardHeatMapFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardHeatMapFieldWellsPtrOutput() DashboardHeatMapFieldWellsPtrOutput
	ToDashboardHeatMapFieldWellsPtrOutputWithContext(context.Context) DashboardHeatMapFieldWellsPtrOutput
}

type dashboardHeatMapFieldWellsPtrType DashboardHeatMapFieldWellsArgs

func DashboardHeatMapFieldWellsPtr(v *DashboardHeatMapFieldWellsArgs) DashboardHeatMapFieldWellsPtrInput {
	return (*dashboardHeatMapFieldWellsPtrType)(v)
}

func (*dashboardHeatMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapFieldWells)(nil)).Elem()
}

func (i *dashboardHeatMapFieldWellsPtrType) ToDashboardHeatMapFieldWellsPtrOutput() DashboardHeatMapFieldWellsPtrOutput {
	return i.ToDashboardHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardHeatMapFieldWellsPtrType) ToDashboardHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapFieldWellsPtrOutput)
}

type DashboardHeatMapFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapFieldWells)(nil)).Elem()
}

func (o DashboardHeatMapFieldWellsOutput) ToDashboardHeatMapFieldWellsOutput() DashboardHeatMapFieldWellsOutput {
	return o
}

func (o DashboardHeatMapFieldWellsOutput) ToDashboardHeatMapFieldWellsOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsOutput {
	return o
}

func (o DashboardHeatMapFieldWellsOutput) ToDashboardHeatMapFieldWellsPtrOutput() DashboardHeatMapFieldWellsPtrOutput {
	return o.ToDashboardHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardHeatMapFieldWellsOutput) ToDashboardHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHeatMapFieldWells) *DashboardHeatMapFieldWells {
		return &v
	}).(DashboardHeatMapFieldWellsPtrOutput)
}

func (o DashboardHeatMapFieldWellsOutput) HeatMapAggregatedFieldWells() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapFieldWells) *DashboardHeatMapAggregatedFieldWells {
		return v.HeatMapAggregatedFieldWells
	}).(DashboardHeatMapAggregatedFieldWellsPtrOutput)
}

type DashboardHeatMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapFieldWells)(nil)).Elem()
}

func (o DashboardHeatMapFieldWellsPtrOutput) ToDashboardHeatMapFieldWellsPtrOutput() DashboardHeatMapFieldWellsPtrOutput {
	return o
}

func (o DashboardHeatMapFieldWellsPtrOutput) ToDashboardHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHeatMapFieldWellsPtrOutput {
	return o
}

func (o DashboardHeatMapFieldWellsPtrOutput) Elem() DashboardHeatMapFieldWellsOutput {
	return o.ApplyT(func(v *DashboardHeatMapFieldWells) DashboardHeatMapFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardHeatMapFieldWells
		return ret
	}).(DashboardHeatMapFieldWellsOutput)
}

func (o DashboardHeatMapFieldWellsPtrOutput) HeatMapAggregatedFieldWells() DashboardHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapFieldWells) *DashboardHeatMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HeatMapAggregatedFieldWells
	}).(DashboardHeatMapAggregatedFieldWellsPtrOutput)
}

type DashboardHeatMapSortConfiguration struct {
	HeatMapColumnItemsLimitConfiguration *DashboardItemsLimitConfiguration `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    []DashboardFieldSortOptions       `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    *DashboardItemsLimitConfiguration `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       []DashboardFieldSortOptions       `pulumi:"heatMapRowSort"`
}

// DashboardHeatMapSortConfigurationInput is an input type that accepts DashboardHeatMapSortConfigurationArgs and DashboardHeatMapSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardHeatMapSortConfigurationInput` via:
//
//	DashboardHeatMapSortConfigurationArgs{...}
type DashboardHeatMapSortConfigurationInput interface {
	pulumi.Input

	ToDashboardHeatMapSortConfigurationOutput() DashboardHeatMapSortConfigurationOutput
	ToDashboardHeatMapSortConfigurationOutputWithContext(context.Context) DashboardHeatMapSortConfigurationOutput
}

type DashboardHeatMapSortConfigurationArgs struct {
	HeatMapColumnItemsLimitConfiguration DashboardItemsLimitConfigurationPtrInput `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    DashboardFieldSortOptionsArrayInput      `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    DashboardItemsLimitConfigurationPtrInput `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       DashboardFieldSortOptionsArrayInput      `pulumi:"heatMapRowSort"`
}

func (DashboardHeatMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapSortConfiguration)(nil)).Elem()
}

func (i DashboardHeatMapSortConfigurationArgs) ToDashboardHeatMapSortConfigurationOutput() DashboardHeatMapSortConfigurationOutput {
	return i.ToDashboardHeatMapSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardHeatMapSortConfigurationArgs) ToDashboardHeatMapSortConfigurationOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapSortConfigurationOutput)
}

func (i DashboardHeatMapSortConfigurationArgs) ToDashboardHeatMapSortConfigurationPtrOutput() DashboardHeatMapSortConfigurationPtrOutput {
	return i.ToDashboardHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardHeatMapSortConfigurationArgs) ToDashboardHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapSortConfigurationOutput).ToDashboardHeatMapSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardHeatMapSortConfigurationPtrInput is an input type that accepts DashboardHeatMapSortConfigurationArgs, DashboardHeatMapSortConfigurationPtr and DashboardHeatMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardHeatMapSortConfigurationPtrInput` via:
//
//	        DashboardHeatMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardHeatMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardHeatMapSortConfigurationPtrOutput() DashboardHeatMapSortConfigurationPtrOutput
	ToDashboardHeatMapSortConfigurationPtrOutputWithContext(context.Context) DashboardHeatMapSortConfigurationPtrOutput
}

type dashboardHeatMapSortConfigurationPtrType DashboardHeatMapSortConfigurationArgs

func DashboardHeatMapSortConfigurationPtr(v *DashboardHeatMapSortConfigurationArgs) DashboardHeatMapSortConfigurationPtrInput {
	return (*dashboardHeatMapSortConfigurationPtrType)(v)
}

func (*dashboardHeatMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapSortConfiguration)(nil)).Elem()
}

func (i *dashboardHeatMapSortConfigurationPtrType) ToDashboardHeatMapSortConfigurationPtrOutput() DashboardHeatMapSortConfigurationPtrOutput {
	return i.ToDashboardHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardHeatMapSortConfigurationPtrType) ToDashboardHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapSortConfigurationPtrOutput)
}

type DashboardHeatMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapSortConfiguration)(nil)).Elem()
}

func (o DashboardHeatMapSortConfigurationOutput) ToDashboardHeatMapSortConfigurationOutput() DashboardHeatMapSortConfigurationOutput {
	return o
}

func (o DashboardHeatMapSortConfigurationOutput) ToDashboardHeatMapSortConfigurationOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationOutput {
	return o
}

func (o DashboardHeatMapSortConfigurationOutput) ToDashboardHeatMapSortConfigurationPtrOutput() DashboardHeatMapSortConfigurationPtrOutput {
	return o.ToDashboardHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardHeatMapSortConfigurationOutput) ToDashboardHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHeatMapSortConfiguration) *DashboardHeatMapSortConfiguration {
		return &v
	}).(DashboardHeatMapSortConfigurationPtrOutput)
}

func (o DashboardHeatMapSortConfigurationOutput) HeatMapColumnItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.HeatMapColumnItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardHeatMapSortConfigurationOutput) HeatMapColumnSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapSortConfiguration) []DashboardFieldSortOptions { return v.HeatMapColumnSort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardHeatMapSortConfigurationOutput) HeatMapRowItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.HeatMapRowItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardHeatMapSortConfigurationOutput) HeatMapRowSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapSortConfiguration) []DashboardFieldSortOptions { return v.HeatMapRowSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardHeatMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapSortConfiguration)(nil)).Elem()
}

func (o DashboardHeatMapSortConfigurationPtrOutput) ToDashboardHeatMapSortConfigurationPtrOutput() DashboardHeatMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardHeatMapSortConfigurationPtrOutput) ToDashboardHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardHeatMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardHeatMapSortConfigurationPtrOutput) Elem() DashboardHeatMapSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardHeatMapSortConfiguration) DashboardHeatMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardHeatMapSortConfiguration
		return ret
	}).(DashboardHeatMapSortConfigurationOutput)
}

func (o DashboardHeatMapSortConfigurationPtrOutput) HeatMapColumnItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardHeatMapSortConfigurationPtrOutput) HeatMapColumnSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardHeatMapSortConfigurationPtrOutput) HeatMapRowItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapRowItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardHeatMapSortConfigurationPtrOutput) HeatMapRowSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapRowSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardHeatMapVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardHeatMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardHeatMapVisualInput is an input type that accepts DashboardHeatMapVisualArgs and DashboardHeatMapVisualOutput values.
// You can construct a concrete instance of `DashboardHeatMapVisualInput` via:
//
//	DashboardHeatMapVisualArgs{...}
type DashboardHeatMapVisualInput interface {
	pulumi.Input

	ToDashboardHeatMapVisualOutput() DashboardHeatMapVisualOutput
	ToDashboardHeatMapVisualOutputWithContext(context.Context) DashboardHeatMapVisualOutput
}

type DashboardHeatMapVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardHeatMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardHeatMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapVisual)(nil)).Elem()
}

func (i DashboardHeatMapVisualArgs) ToDashboardHeatMapVisualOutput() DashboardHeatMapVisualOutput {
	return i.ToDashboardHeatMapVisualOutputWithContext(context.Background())
}

func (i DashboardHeatMapVisualArgs) ToDashboardHeatMapVisualOutputWithContext(ctx context.Context) DashboardHeatMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapVisualOutput)
}

func (i DashboardHeatMapVisualArgs) ToDashboardHeatMapVisualPtrOutput() DashboardHeatMapVisualPtrOutput {
	return i.ToDashboardHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i DashboardHeatMapVisualArgs) ToDashboardHeatMapVisualPtrOutputWithContext(ctx context.Context) DashboardHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapVisualOutput).ToDashboardHeatMapVisualPtrOutputWithContext(ctx)
}

// DashboardHeatMapVisualPtrInput is an input type that accepts DashboardHeatMapVisualArgs, DashboardHeatMapVisualPtr and DashboardHeatMapVisualPtrOutput values.
// You can construct a concrete instance of `DashboardHeatMapVisualPtrInput` via:
//
//	        DashboardHeatMapVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardHeatMapVisualPtrInput interface {
	pulumi.Input

	ToDashboardHeatMapVisualPtrOutput() DashboardHeatMapVisualPtrOutput
	ToDashboardHeatMapVisualPtrOutputWithContext(context.Context) DashboardHeatMapVisualPtrOutput
}

type dashboardHeatMapVisualPtrType DashboardHeatMapVisualArgs

func DashboardHeatMapVisualPtr(v *DashboardHeatMapVisualArgs) DashboardHeatMapVisualPtrInput {
	return (*dashboardHeatMapVisualPtrType)(v)
}

func (*dashboardHeatMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapVisual)(nil)).Elem()
}

func (i *dashboardHeatMapVisualPtrType) ToDashboardHeatMapVisualPtrOutput() DashboardHeatMapVisualPtrOutput {
	return i.ToDashboardHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardHeatMapVisualPtrType) ToDashboardHeatMapVisualPtrOutputWithContext(ctx context.Context) DashboardHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHeatMapVisualPtrOutput)
}

type DashboardHeatMapVisualOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHeatMapVisual)(nil)).Elem()
}

func (o DashboardHeatMapVisualOutput) ToDashboardHeatMapVisualOutput() DashboardHeatMapVisualOutput {
	return o
}

func (o DashboardHeatMapVisualOutput) ToDashboardHeatMapVisualOutputWithContext(ctx context.Context) DashboardHeatMapVisualOutput {
	return o
}

func (o DashboardHeatMapVisualOutput) ToDashboardHeatMapVisualPtrOutput() DashboardHeatMapVisualPtrOutput {
	return o.ToDashboardHeatMapVisualPtrOutputWithContext(context.Background())
}

func (o DashboardHeatMapVisualOutput) ToDashboardHeatMapVisualPtrOutputWithContext(ctx context.Context) DashboardHeatMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHeatMapVisual) *DashboardHeatMapVisual {
		return &v
	}).(DashboardHeatMapVisualPtrOutput)
}

func (o DashboardHeatMapVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardHeatMapVisualOutput) ChartConfiguration() DashboardHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) *DashboardHeatMapConfiguration { return v.ChartConfiguration }).(DashboardHeatMapConfigurationPtrOutput)
}

func (o DashboardHeatMapVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardHeatMapVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardHeatMapVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardHeatMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardHeatMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardHeatMapVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardHeatMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHeatMapVisual)(nil)).Elem()
}

func (o DashboardHeatMapVisualPtrOutput) ToDashboardHeatMapVisualPtrOutput() DashboardHeatMapVisualPtrOutput {
	return o
}

func (o DashboardHeatMapVisualPtrOutput) ToDashboardHeatMapVisualPtrOutputWithContext(ctx context.Context) DashboardHeatMapVisualPtrOutput {
	return o
}

func (o DashboardHeatMapVisualPtrOutput) Elem() DashboardHeatMapVisualOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) DashboardHeatMapVisual {
		if v != nil {
			return *v
		}
		var ret DashboardHeatMapVisual
		return ret
	}).(DashboardHeatMapVisualOutput)
}

func (o DashboardHeatMapVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardHeatMapVisualPtrOutput) ChartConfiguration() DashboardHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) *DashboardHeatMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardHeatMapConfigurationPtrOutput)
}

func (o DashboardHeatMapVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardHeatMapVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardHeatMapVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardHeatMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardHeatMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardHistogramAggregatedFieldWells struct {
	Values []DashboardMeasureField `pulumi:"values"`
}

// DashboardHistogramAggregatedFieldWellsInput is an input type that accepts DashboardHistogramAggregatedFieldWellsArgs and DashboardHistogramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardHistogramAggregatedFieldWellsInput` via:
//
//	DashboardHistogramAggregatedFieldWellsArgs{...}
type DashboardHistogramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardHistogramAggregatedFieldWellsOutput() DashboardHistogramAggregatedFieldWellsOutput
	ToDashboardHistogramAggregatedFieldWellsOutputWithContext(context.Context) DashboardHistogramAggregatedFieldWellsOutput
}

type DashboardHistogramAggregatedFieldWellsArgs struct {
	Values DashboardMeasureFieldArrayInput `pulumi:"values"`
}

func (DashboardHistogramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardHistogramAggregatedFieldWellsArgs) ToDashboardHistogramAggregatedFieldWellsOutput() DashboardHistogramAggregatedFieldWellsOutput {
	return i.ToDashboardHistogramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardHistogramAggregatedFieldWellsArgs) ToDashboardHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramAggregatedFieldWellsOutput)
}

func (i DashboardHistogramAggregatedFieldWellsArgs) ToDashboardHistogramAggregatedFieldWellsPtrOutput() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return i.ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardHistogramAggregatedFieldWellsArgs) ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramAggregatedFieldWellsOutput).ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardHistogramAggregatedFieldWellsPtrInput is an input type that accepts DashboardHistogramAggregatedFieldWellsArgs, DashboardHistogramAggregatedFieldWellsPtr and DashboardHistogramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardHistogramAggregatedFieldWellsPtrInput` via:
//
//	        DashboardHistogramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardHistogramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardHistogramAggregatedFieldWellsPtrOutput() DashboardHistogramAggregatedFieldWellsPtrOutput
	ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardHistogramAggregatedFieldWellsPtrOutput
}

type dashboardHistogramAggregatedFieldWellsPtrType DashboardHistogramAggregatedFieldWellsArgs

func DashboardHistogramAggregatedFieldWellsPtr(v *DashboardHistogramAggregatedFieldWellsArgs) DashboardHistogramAggregatedFieldWellsPtrInput {
	return (*dashboardHistogramAggregatedFieldWellsPtrType)(v)
}

func (*dashboardHistogramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardHistogramAggregatedFieldWellsPtrType) ToDashboardHistogramAggregatedFieldWellsPtrOutput() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return i.ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardHistogramAggregatedFieldWellsPtrType) ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramAggregatedFieldWellsPtrOutput)
}

type DashboardHistogramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardHistogramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardHistogramAggregatedFieldWellsOutput) ToDashboardHistogramAggregatedFieldWellsOutput() DashboardHistogramAggregatedFieldWellsOutput {
	return o
}

func (o DashboardHistogramAggregatedFieldWellsOutput) ToDashboardHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsOutput {
	return o
}

func (o DashboardHistogramAggregatedFieldWellsOutput) ToDashboardHistogramAggregatedFieldWellsPtrOutput() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o.ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramAggregatedFieldWellsOutput) ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramAggregatedFieldWells) *DashboardHistogramAggregatedFieldWells {
		return &v
	}).(DashboardHistogramAggregatedFieldWellsPtrOutput)
}

func (o DashboardHistogramAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardHistogramAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardHistogramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardHistogramAggregatedFieldWellsPtrOutput) ToDashboardHistogramAggregatedFieldWellsPtrOutput() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardHistogramAggregatedFieldWellsPtrOutput) ToDashboardHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardHistogramAggregatedFieldWellsPtrOutput) Elem() DashboardHistogramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardHistogramAggregatedFieldWells) DashboardHistogramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramAggregatedFieldWells
		return ret
	}).(DashboardHistogramAggregatedFieldWellsOutput)
}

func (o DashboardHistogramAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardHistogramAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardHistogramBinOptions struct {
	BinCount        *DashboardBinCountOptions  `pulumi:"binCount"`
	BinWidth        *DashboardBinWidthOptions  `pulumi:"binWidth"`
	SelectedBinType *DashboardHistogramBinType `pulumi:"selectedBinType"`
	StartValue      *float64                   `pulumi:"startValue"`
}

// DashboardHistogramBinOptionsInput is an input type that accepts DashboardHistogramBinOptionsArgs and DashboardHistogramBinOptionsOutput values.
// You can construct a concrete instance of `DashboardHistogramBinOptionsInput` via:
//
//	DashboardHistogramBinOptionsArgs{...}
type DashboardHistogramBinOptionsInput interface {
	pulumi.Input

	ToDashboardHistogramBinOptionsOutput() DashboardHistogramBinOptionsOutput
	ToDashboardHistogramBinOptionsOutputWithContext(context.Context) DashboardHistogramBinOptionsOutput
}

type DashboardHistogramBinOptionsArgs struct {
	BinCount        DashboardBinCountOptionsPtrInput  `pulumi:"binCount"`
	BinWidth        DashboardBinWidthOptionsPtrInput  `pulumi:"binWidth"`
	SelectedBinType DashboardHistogramBinTypePtrInput `pulumi:"selectedBinType"`
	StartValue      pulumi.Float64PtrInput            `pulumi:"startValue"`
}

func (DashboardHistogramBinOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramBinOptions)(nil)).Elem()
}

func (i DashboardHistogramBinOptionsArgs) ToDashboardHistogramBinOptionsOutput() DashboardHistogramBinOptionsOutput {
	return i.ToDashboardHistogramBinOptionsOutputWithContext(context.Background())
}

func (i DashboardHistogramBinOptionsArgs) ToDashboardHistogramBinOptionsOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramBinOptionsOutput)
}

func (i DashboardHistogramBinOptionsArgs) ToDashboardHistogramBinOptionsPtrOutput() DashboardHistogramBinOptionsPtrOutput {
	return i.ToDashboardHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardHistogramBinOptionsArgs) ToDashboardHistogramBinOptionsPtrOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramBinOptionsOutput).ToDashboardHistogramBinOptionsPtrOutputWithContext(ctx)
}

// DashboardHistogramBinOptionsPtrInput is an input type that accepts DashboardHistogramBinOptionsArgs, DashboardHistogramBinOptionsPtr and DashboardHistogramBinOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardHistogramBinOptionsPtrInput` via:
//
//	        DashboardHistogramBinOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardHistogramBinOptionsPtrInput interface {
	pulumi.Input

	ToDashboardHistogramBinOptionsPtrOutput() DashboardHistogramBinOptionsPtrOutput
	ToDashboardHistogramBinOptionsPtrOutputWithContext(context.Context) DashboardHistogramBinOptionsPtrOutput
}

type dashboardHistogramBinOptionsPtrType DashboardHistogramBinOptionsArgs

func DashboardHistogramBinOptionsPtr(v *DashboardHistogramBinOptionsArgs) DashboardHistogramBinOptionsPtrInput {
	return (*dashboardHistogramBinOptionsPtrType)(v)
}

func (*dashboardHistogramBinOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramBinOptions)(nil)).Elem()
}

func (i *dashboardHistogramBinOptionsPtrType) ToDashboardHistogramBinOptionsPtrOutput() DashboardHistogramBinOptionsPtrOutput {
	return i.ToDashboardHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardHistogramBinOptionsPtrType) ToDashboardHistogramBinOptionsPtrOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramBinOptionsPtrOutput)
}

type DashboardHistogramBinOptionsOutput struct{ *pulumi.OutputState }

func (DashboardHistogramBinOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramBinOptions)(nil)).Elem()
}

func (o DashboardHistogramBinOptionsOutput) ToDashboardHistogramBinOptionsOutput() DashboardHistogramBinOptionsOutput {
	return o
}

func (o DashboardHistogramBinOptionsOutput) ToDashboardHistogramBinOptionsOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsOutput {
	return o
}

func (o DashboardHistogramBinOptionsOutput) ToDashboardHistogramBinOptionsPtrOutput() DashboardHistogramBinOptionsPtrOutput {
	return o.ToDashboardHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramBinOptionsOutput) ToDashboardHistogramBinOptionsPtrOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramBinOptions) *DashboardHistogramBinOptions {
		return &v
	}).(DashboardHistogramBinOptionsPtrOutput)
}

func (o DashboardHistogramBinOptionsOutput) BinCount() DashboardBinCountOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramBinOptions) *DashboardBinCountOptions { return v.BinCount }).(DashboardBinCountOptionsPtrOutput)
}

func (o DashboardHistogramBinOptionsOutput) BinWidth() DashboardBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramBinOptions) *DashboardBinWidthOptions { return v.BinWidth }).(DashboardBinWidthOptionsPtrOutput)
}

func (o DashboardHistogramBinOptionsOutput) SelectedBinType() DashboardHistogramBinTypePtrOutput {
	return o.ApplyT(func(v DashboardHistogramBinOptions) *DashboardHistogramBinType { return v.SelectedBinType }).(DashboardHistogramBinTypePtrOutput)
}

func (o DashboardHistogramBinOptionsOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardHistogramBinOptions) *float64 { return v.StartValue }).(pulumi.Float64PtrOutput)
}

type DashboardHistogramBinOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramBinOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramBinOptions)(nil)).Elem()
}

func (o DashboardHistogramBinOptionsPtrOutput) ToDashboardHistogramBinOptionsPtrOutput() DashboardHistogramBinOptionsPtrOutput {
	return o
}

func (o DashboardHistogramBinOptionsPtrOutput) ToDashboardHistogramBinOptionsPtrOutputWithContext(ctx context.Context) DashboardHistogramBinOptionsPtrOutput {
	return o
}

func (o DashboardHistogramBinOptionsPtrOutput) Elem() DashboardHistogramBinOptionsOutput {
	return o.ApplyT(func(v *DashboardHistogramBinOptions) DashboardHistogramBinOptions {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramBinOptions
		return ret
	}).(DashboardHistogramBinOptionsOutput)
}

func (o DashboardHistogramBinOptionsPtrOutput) BinCount() DashboardBinCountOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramBinOptions) *DashboardBinCountOptions {
		if v == nil {
			return nil
		}
		return v.BinCount
	}).(DashboardBinCountOptionsPtrOutput)
}

func (o DashboardHistogramBinOptionsPtrOutput) BinWidth() DashboardBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramBinOptions) *DashboardBinWidthOptions {
		if v == nil {
			return nil
		}
		return v.BinWidth
	}).(DashboardBinWidthOptionsPtrOutput)
}

func (o DashboardHistogramBinOptionsPtrOutput) SelectedBinType() DashboardHistogramBinTypePtrOutput {
	return o.ApplyT(func(v *DashboardHistogramBinOptions) *DashboardHistogramBinType {
		if v == nil {
			return nil
		}
		return v.SelectedBinType
	}).(DashboardHistogramBinTypePtrOutput)
}

func (o DashboardHistogramBinOptionsPtrOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardHistogramBinOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.StartValue
	}).(pulumi.Float64PtrOutput)
}

type DashboardHistogramConfiguration struct {
	BinOptions          *DashboardHistogramBinOptions   `pulumi:"binOptions"`
	DataLabels          *DashboardDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *DashboardHistogramFieldWells   `pulumi:"fieldWells"`
	Tooltip             *DashboardTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *DashboardVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *DashboardAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *DashboardChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *DashboardAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
}

// DashboardHistogramConfigurationInput is an input type that accepts DashboardHistogramConfigurationArgs and DashboardHistogramConfigurationOutput values.
// You can construct a concrete instance of `DashboardHistogramConfigurationInput` via:
//
//	DashboardHistogramConfigurationArgs{...}
type DashboardHistogramConfigurationInput interface {
	pulumi.Input

	ToDashboardHistogramConfigurationOutput() DashboardHistogramConfigurationOutput
	ToDashboardHistogramConfigurationOutputWithContext(context.Context) DashboardHistogramConfigurationOutput
}

type DashboardHistogramConfigurationArgs struct {
	BinOptions          DashboardHistogramBinOptionsPtrInput   `pulumi:"binOptions"`
	DataLabels          DashboardDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          DashboardHistogramFieldWellsPtrInput   `pulumi:"fieldWells"`
	Tooltip             DashboardTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       DashboardVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
}

func (DashboardHistogramConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramConfiguration)(nil)).Elem()
}

func (i DashboardHistogramConfigurationArgs) ToDashboardHistogramConfigurationOutput() DashboardHistogramConfigurationOutput {
	return i.ToDashboardHistogramConfigurationOutputWithContext(context.Background())
}

func (i DashboardHistogramConfigurationArgs) ToDashboardHistogramConfigurationOutputWithContext(ctx context.Context) DashboardHistogramConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramConfigurationOutput)
}

func (i DashboardHistogramConfigurationArgs) ToDashboardHistogramConfigurationPtrOutput() DashboardHistogramConfigurationPtrOutput {
	return i.ToDashboardHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardHistogramConfigurationArgs) ToDashboardHistogramConfigurationPtrOutputWithContext(ctx context.Context) DashboardHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramConfigurationOutput).ToDashboardHistogramConfigurationPtrOutputWithContext(ctx)
}

// DashboardHistogramConfigurationPtrInput is an input type that accepts DashboardHistogramConfigurationArgs, DashboardHistogramConfigurationPtr and DashboardHistogramConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardHistogramConfigurationPtrInput` via:
//
//	        DashboardHistogramConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardHistogramConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardHistogramConfigurationPtrOutput() DashboardHistogramConfigurationPtrOutput
	ToDashboardHistogramConfigurationPtrOutputWithContext(context.Context) DashboardHistogramConfigurationPtrOutput
}

type dashboardHistogramConfigurationPtrType DashboardHistogramConfigurationArgs

func DashboardHistogramConfigurationPtr(v *DashboardHistogramConfigurationArgs) DashboardHistogramConfigurationPtrInput {
	return (*dashboardHistogramConfigurationPtrType)(v)
}

func (*dashboardHistogramConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramConfiguration)(nil)).Elem()
}

func (i *dashboardHistogramConfigurationPtrType) ToDashboardHistogramConfigurationPtrOutput() DashboardHistogramConfigurationPtrOutput {
	return i.ToDashboardHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardHistogramConfigurationPtrType) ToDashboardHistogramConfigurationPtrOutputWithContext(ctx context.Context) DashboardHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramConfigurationPtrOutput)
}

type DashboardHistogramConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardHistogramConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramConfiguration)(nil)).Elem()
}

func (o DashboardHistogramConfigurationOutput) ToDashboardHistogramConfigurationOutput() DashboardHistogramConfigurationOutput {
	return o
}

func (o DashboardHistogramConfigurationOutput) ToDashboardHistogramConfigurationOutputWithContext(ctx context.Context) DashboardHistogramConfigurationOutput {
	return o
}

func (o DashboardHistogramConfigurationOutput) ToDashboardHistogramConfigurationPtrOutput() DashboardHistogramConfigurationPtrOutput {
	return o.ToDashboardHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramConfigurationOutput) ToDashboardHistogramConfigurationPtrOutputWithContext(ctx context.Context) DashboardHistogramConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramConfiguration) *DashboardHistogramConfiguration {
		return &v
	}).(DashboardHistogramConfigurationPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) BinOptions() DashboardHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardHistogramBinOptions { return v.BinOptions }).(DashboardHistogramBinOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) FieldWells() DashboardHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardHistogramFieldWells { return v.FieldWells }).(DashboardHistogramFieldWellsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

func (o DashboardHistogramConfigurationOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardAxisDisplayOptions { return v.XAxisDisplayOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardChartAxisLabelOptions { return v.XAxisLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationOutput) YAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramConfiguration) *DashboardAxisDisplayOptions { return v.YAxisDisplayOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

type DashboardHistogramConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramConfiguration)(nil)).Elem()
}

func (o DashboardHistogramConfigurationPtrOutput) ToDashboardHistogramConfigurationPtrOutput() DashboardHistogramConfigurationPtrOutput {
	return o
}

func (o DashboardHistogramConfigurationPtrOutput) ToDashboardHistogramConfigurationPtrOutputWithContext(ctx context.Context) DashboardHistogramConfigurationPtrOutput {
	return o
}

func (o DashboardHistogramConfigurationPtrOutput) Elem() DashboardHistogramConfigurationOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) DashboardHistogramConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramConfiguration
		return ret
	}).(DashboardHistogramConfigurationOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) BinOptions() DashboardHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardHistogramBinOptions {
		if v == nil {
			return nil
		}
		return v.BinOptions
	}).(DashboardHistogramBinOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) FieldWells() DashboardHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardHistogramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardHistogramFieldWellsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardHistogramConfigurationPtrOutput) YAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

type DashboardHistogramFieldWells struct {
	HistogramAggregatedFieldWells *DashboardHistogramAggregatedFieldWells `pulumi:"histogramAggregatedFieldWells"`
}

// DashboardHistogramFieldWellsInput is an input type that accepts DashboardHistogramFieldWellsArgs and DashboardHistogramFieldWellsOutput values.
// You can construct a concrete instance of `DashboardHistogramFieldWellsInput` via:
//
//	DashboardHistogramFieldWellsArgs{...}
type DashboardHistogramFieldWellsInput interface {
	pulumi.Input

	ToDashboardHistogramFieldWellsOutput() DashboardHistogramFieldWellsOutput
	ToDashboardHistogramFieldWellsOutputWithContext(context.Context) DashboardHistogramFieldWellsOutput
}

type DashboardHistogramFieldWellsArgs struct {
	HistogramAggregatedFieldWells DashboardHistogramAggregatedFieldWellsPtrInput `pulumi:"histogramAggregatedFieldWells"`
}

func (DashboardHistogramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramFieldWells)(nil)).Elem()
}

func (i DashboardHistogramFieldWellsArgs) ToDashboardHistogramFieldWellsOutput() DashboardHistogramFieldWellsOutput {
	return i.ToDashboardHistogramFieldWellsOutputWithContext(context.Background())
}

func (i DashboardHistogramFieldWellsArgs) ToDashboardHistogramFieldWellsOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramFieldWellsOutput)
}

func (i DashboardHistogramFieldWellsArgs) ToDashboardHistogramFieldWellsPtrOutput() DashboardHistogramFieldWellsPtrOutput {
	return i.ToDashboardHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardHistogramFieldWellsArgs) ToDashboardHistogramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramFieldWellsOutput).ToDashboardHistogramFieldWellsPtrOutputWithContext(ctx)
}

// DashboardHistogramFieldWellsPtrInput is an input type that accepts DashboardHistogramFieldWellsArgs, DashboardHistogramFieldWellsPtr and DashboardHistogramFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardHistogramFieldWellsPtrInput` via:
//
//	        DashboardHistogramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardHistogramFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardHistogramFieldWellsPtrOutput() DashboardHistogramFieldWellsPtrOutput
	ToDashboardHistogramFieldWellsPtrOutputWithContext(context.Context) DashboardHistogramFieldWellsPtrOutput
}

type dashboardHistogramFieldWellsPtrType DashboardHistogramFieldWellsArgs

func DashboardHistogramFieldWellsPtr(v *DashboardHistogramFieldWellsArgs) DashboardHistogramFieldWellsPtrInput {
	return (*dashboardHistogramFieldWellsPtrType)(v)
}

func (*dashboardHistogramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramFieldWells)(nil)).Elem()
}

func (i *dashboardHistogramFieldWellsPtrType) ToDashboardHistogramFieldWellsPtrOutput() DashboardHistogramFieldWellsPtrOutput {
	return i.ToDashboardHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardHistogramFieldWellsPtrType) ToDashboardHistogramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramFieldWellsPtrOutput)
}

type DashboardHistogramFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardHistogramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramFieldWells)(nil)).Elem()
}

func (o DashboardHistogramFieldWellsOutput) ToDashboardHistogramFieldWellsOutput() DashboardHistogramFieldWellsOutput {
	return o
}

func (o DashboardHistogramFieldWellsOutput) ToDashboardHistogramFieldWellsOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsOutput {
	return o
}

func (o DashboardHistogramFieldWellsOutput) ToDashboardHistogramFieldWellsPtrOutput() DashboardHistogramFieldWellsPtrOutput {
	return o.ToDashboardHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramFieldWellsOutput) ToDashboardHistogramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramFieldWells) *DashboardHistogramFieldWells {
		return &v
	}).(DashboardHistogramFieldWellsPtrOutput)
}

func (o DashboardHistogramFieldWellsOutput) HistogramAggregatedFieldWells() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramFieldWells) *DashboardHistogramAggregatedFieldWells {
		return v.HistogramAggregatedFieldWells
	}).(DashboardHistogramAggregatedFieldWellsPtrOutput)
}

type DashboardHistogramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramFieldWells)(nil)).Elem()
}

func (o DashboardHistogramFieldWellsPtrOutput) ToDashboardHistogramFieldWellsPtrOutput() DashboardHistogramFieldWellsPtrOutput {
	return o
}

func (o DashboardHistogramFieldWellsPtrOutput) ToDashboardHistogramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardHistogramFieldWellsPtrOutput {
	return o
}

func (o DashboardHistogramFieldWellsPtrOutput) Elem() DashboardHistogramFieldWellsOutput {
	return o.ApplyT(func(v *DashboardHistogramFieldWells) DashboardHistogramFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramFieldWells
		return ret
	}).(DashboardHistogramFieldWellsOutput)
}

func (o DashboardHistogramFieldWellsPtrOutput) HistogramAggregatedFieldWells() DashboardHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramFieldWells) *DashboardHistogramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HistogramAggregatedFieldWells
	}).(DashboardHistogramAggregatedFieldWellsPtrOutput)
}

type DashboardHistogramVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardHistogramConfiguration     `pulumi:"chartConfiguration"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardHistogramVisualInput is an input type that accepts DashboardHistogramVisualArgs and DashboardHistogramVisualOutput values.
// You can construct a concrete instance of `DashboardHistogramVisualInput` via:
//
//	DashboardHistogramVisualArgs{...}
type DashboardHistogramVisualInput interface {
	pulumi.Input

	ToDashboardHistogramVisualOutput() DashboardHistogramVisualOutput
	ToDashboardHistogramVisualOutputWithContext(context.Context) DashboardHistogramVisualOutput
}

type DashboardHistogramVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardHistogramConfigurationPtrInput     `pulumi:"chartConfiguration"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardHistogramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramVisual)(nil)).Elem()
}

func (i DashboardHistogramVisualArgs) ToDashboardHistogramVisualOutput() DashboardHistogramVisualOutput {
	return i.ToDashboardHistogramVisualOutputWithContext(context.Background())
}

func (i DashboardHistogramVisualArgs) ToDashboardHistogramVisualOutputWithContext(ctx context.Context) DashboardHistogramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramVisualOutput)
}

func (i DashboardHistogramVisualArgs) ToDashboardHistogramVisualPtrOutput() DashboardHistogramVisualPtrOutput {
	return i.ToDashboardHistogramVisualPtrOutputWithContext(context.Background())
}

func (i DashboardHistogramVisualArgs) ToDashboardHistogramVisualPtrOutputWithContext(ctx context.Context) DashboardHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramVisualOutput).ToDashboardHistogramVisualPtrOutputWithContext(ctx)
}

// DashboardHistogramVisualPtrInput is an input type that accepts DashboardHistogramVisualArgs, DashboardHistogramVisualPtr and DashboardHistogramVisualPtrOutput values.
// You can construct a concrete instance of `DashboardHistogramVisualPtrInput` via:
//
//	        DashboardHistogramVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardHistogramVisualPtrInput interface {
	pulumi.Input

	ToDashboardHistogramVisualPtrOutput() DashboardHistogramVisualPtrOutput
	ToDashboardHistogramVisualPtrOutputWithContext(context.Context) DashboardHistogramVisualPtrOutput
}

type dashboardHistogramVisualPtrType DashboardHistogramVisualArgs

func DashboardHistogramVisualPtr(v *DashboardHistogramVisualArgs) DashboardHistogramVisualPtrInput {
	return (*dashboardHistogramVisualPtrType)(v)
}

func (*dashboardHistogramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramVisual)(nil)).Elem()
}

func (i *dashboardHistogramVisualPtrType) ToDashboardHistogramVisualPtrOutput() DashboardHistogramVisualPtrOutput {
	return i.ToDashboardHistogramVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardHistogramVisualPtrType) ToDashboardHistogramVisualPtrOutputWithContext(ctx context.Context) DashboardHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardHistogramVisualPtrOutput)
}

type DashboardHistogramVisualOutput struct{ *pulumi.OutputState }

func (DashboardHistogramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardHistogramVisual)(nil)).Elem()
}

func (o DashboardHistogramVisualOutput) ToDashboardHistogramVisualOutput() DashboardHistogramVisualOutput {
	return o
}

func (o DashboardHistogramVisualOutput) ToDashboardHistogramVisualOutputWithContext(ctx context.Context) DashboardHistogramVisualOutput {
	return o
}

func (o DashboardHistogramVisualOutput) ToDashboardHistogramVisualPtrOutput() DashboardHistogramVisualPtrOutput {
	return o.ToDashboardHistogramVisualPtrOutputWithContext(context.Background())
}

func (o DashboardHistogramVisualOutput) ToDashboardHistogramVisualPtrOutputWithContext(ctx context.Context) DashboardHistogramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardHistogramVisual) *DashboardHistogramVisual {
		return &v
	}).(DashboardHistogramVisualPtrOutput)
}

func (o DashboardHistogramVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardHistogramVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardHistogramVisualOutput) ChartConfiguration() DashboardHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardHistogramVisual) *DashboardHistogramConfiguration { return v.ChartConfiguration }).(DashboardHistogramConfigurationPtrOutput)
}

func (o DashboardHistogramVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardHistogramVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardHistogramVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardHistogramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardHistogramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardHistogramVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardHistogramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardHistogramVisual)(nil)).Elem()
}

func (o DashboardHistogramVisualPtrOutput) ToDashboardHistogramVisualPtrOutput() DashboardHistogramVisualPtrOutput {
	return o
}

func (o DashboardHistogramVisualPtrOutput) ToDashboardHistogramVisualPtrOutputWithContext(ctx context.Context) DashboardHistogramVisualPtrOutput {
	return o
}

func (o DashboardHistogramVisualPtrOutput) Elem() DashboardHistogramVisualOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) DashboardHistogramVisual {
		if v != nil {
			return *v
		}
		var ret DashboardHistogramVisual
		return ret
	}).(DashboardHistogramVisualOutput)
}

func (o DashboardHistogramVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardHistogramVisualPtrOutput) ChartConfiguration() DashboardHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) *DashboardHistogramConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardHistogramConfigurationPtrOutput)
}

func (o DashboardHistogramVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardHistogramVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardHistogramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardHistogramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardInsightConfiguration struct {
	Computations    []DashboardComputation           `pulumi:"computations"`
	CustomNarrative *DashboardCustomNarrativeOptions `pulumi:"customNarrative"`
}

// DashboardInsightConfigurationInput is an input type that accepts DashboardInsightConfigurationArgs and DashboardInsightConfigurationOutput values.
// You can construct a concrete instance of `DashboardInsightConfigurationInput` via:
//
//	DashboardInsightConfigurationArgs{...}
type DashboardInsightConfigurationInput interface {
	pulumi.Input

	ToDashboardInsightConfigurationOutput() DashboardInsightConfigurationOutput
	ToDashboardInsightConfigurationOutputWithContext(context.Context) DashboardInsightConfigurationOutput
}

type DashboardInsightConfigurationArgs struct {
	Computations    DashboardComputationArrayInput          `pulumi:"computations"`
	CustomNarrative DashboardCustomNarrativeOptionsPtrInput `pulumi:"customNarrative"`
}

func (DashboardInsightConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardInsightConfiguration)(nil)).Elem()
}

func (i DashboardInsightConfigurationArgs) ToDashboardInsightConfigurationOutput() DashboardInsightConfigurationOutput {
	return i.ToDashboardInsightConfigurationOutputWithContext(context.Background())
}

func (i DashboardInsightConfigurationArgs) ToDashboardInsightConfigurationOutputWithContext(ctx context.Context) DashboardInsightConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightConfigurationOutput)
}

func (i DashboardInsightConfigurationArgs) ToDashboardInsightConfigurationPtrOutput() DashboardInsightConfigurationPtrOutput {
	return i.ToDashboardInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardInsightConfigurationArgs) ToDashboardInsightConfigurationPtrOutputWithContext(ctx context.Context) DashboardInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightConfigurationOutput).ToDashboardInsightConfigurationPtrOutputWithContext(ctx)
}

// DashboardInsightConfigurationPtrInput is an input type that accepts DashboardInsightConfigurationArgs, DashboardInsightConfigurationPtr and DashboardInsightConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardInsightConfigurationPtrInput` via:
//
//	        DashboardInsightConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardInsightConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardInsightConfigurationPtrOutput() DashboardInsightConfigurationPtrOutput
	ToDashboardInsightConfigurationPtrOutputWithContext(context.Context) DashboardInsightConfigurationPtrOutput
}

type dashboardInsightConfigurationPtrType DashboardInsightConfigurationArgs

func DashboardInsightConfigurationPtr(v *DashboardInsightConfigurationArgs) DashboardInsightConfigurationPtrInput {
	return (*dashboardInsightConfigurationPtrType)(v)
}

func (*dashboardInsightConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardInsightConfiguration)(nil)).Elem()
}

func (i *dashboardInsightConfigurationPtrType) ToDashboardInsightConfigurationPtrOutput() DashboardInsightConfigurationPtrOutput {
	return i.ToDashboardInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardInsightConfigurationPtrType) ToDashboardInsightConfigurationPtrOutputWithContext(ctx context.Context) DashboardInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightConfigurationPtrOutput)
}

type DashboardInsightConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardInsightConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardInsightConfiguration)(nil)).Elem()
}

func (o DashboardInsightConfigurationOutput) ToDashboardInsightConfigurationOutput() DashboardInsightConfigurationOutput {
	return o
}

func (o DashboardInsightConfigurationOutput) ToDashboardInsightConfigurationOutputWithContext(ctx context.Context) DashboardInsightConfigurationOutput {
	return o
}

func (o DashboardInsightConfigurationOutput) ToDashboardInsightConfigurationPtrOutput() DashboardInsightConfigurationPtrOutput {
	return o.ToDashboardInsightConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardInsightConfigurationOutput) ToDashboardInsightConfigurationPtrOutputWithContext(ctx context.Context) DashboardInsightConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardInsightConfiguration) *DashboardInsightConfiguration {
		return &v
	}).(DashboardInsightConfigurationPtrOutput)
}

func (o DashboardInsightConfigurationOutput) Computations() DashboardComputationArrayOutput {
	return o.ApplyT(func(v DashboardInsightConfiguration) []DashboardComputation { return v.Computations }).(DashboardComputationArrayOutput)
}

func (o DashboardInsightConfigurationOutput) CustomNarrative() DashboardCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardInsightConfiguration) *DashboardCustomNarrativeOptions { return v.CustomNarrative }).(DashboardCustomNarrativeOptionsPtrOutput)
}

type DashboardInsightConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardInsightConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardInsightConfiguration)(nil)).Elem()
}

func (o DashboardInsightConfigurationPtrOutput) ToDashboardInsightConfigurationPtrOutput() DashboardInsightConfigurationPtrOutput {
	return o
}

func (o DashboardInsightConfigurationPtrOutput) ToDashboardInsightConfigurationPtrOutputWithContext(ctx context.Context) DashboardInsightConfigurationPtrOutput {
	return o
}

func (o DashboardInsightConfigurationPtrOutput) Elem() DashboardInsightConfigurationOutput {
	return o.ApplyT(func(v *DashboardInsightConfiguration) DashboardInsightConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardInsightConfiguration
		return ret
	}).(DashboardInsightConfigurationOutput)
}

func (o DashboardInsightConfigurationPtrOutput) Computations() DashboardComputationArrayOutput {
	return o.ApplyT(func(v *DashboardInsightConfiguration) []DashboardComputation {
		if v == nil {
			return nil
		}
		return v.Computations
	}).(DashboardComputationArrayOutput)
}

func (o DashboardInsightConfigurationPtrOutput) CustomNarrative() DashboardCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardInsightConfiguration) *DashboardCustomNarrativeOptions {
		if v == nil {
			return nil
		}
		return v.CustomNarrative
	}).(DashboardCustomNarrativeOptionsPtrOutput)
}

type DashboardInsightVisual struct {
	Actions              []DashboardVisualCustomAction        `pulumi:"actions"`
	DataSetIdentifier    string                               `pulumi:"dataSetIdentifier"`
	InsightConfiguration *DashboardInsightConfiguration       `pulumi:"insightConfiguration"`
	Subtitle             *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId             string                               `pulumi:"visualId"`
}

// DashboardInsightVisualInput is an input type that accepts DashboardInsightVisualArgs and DashboardInsightVisualOutput values.
// You can construct a concrete instance of `DashboardInsightVisualInput` via:
//
//	DashboardInsightVisualArgs{...}
type DashboardInsightVisualInput interface {
	pulumi.Input

	ToDashboardInsightVisualOutput() DashboardInsightVisualOutput
	ToDashboardInsightVisualOutputWithContext(context.Context) DashboardInsightVisualOutput
}

type DashboardInsightVisualArgs struct {
	Actions              DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	DataSetIdentifier    pulumi.StringInput                          `pulumi:"dataSetIdentifier"`
	InsightConfiguration DashboardInsightConfigurationPtrInput       `pulumi:"insightConfiguration"`
	Subtitle             DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId             pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardInsightVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardInsightVisual)(nil)).Elem()
}

func (i DashboardInsightVisualArgs) ToDashboardInsightVisualOutput() DashboardInsightVisualOutput {
	return i.ToDashboardInsightVisualOutputWithContext(context.Background())
}

func (i DashboardInsightVisualArgs) ToDashboardInsightVisualOutputWithContext(ctx context.Context) DashboardInsightVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightVisualOutput)
}

func (i DashboardInsightVisualArgs) ToDashboardInsightVisualPtrOutput() DashboardInsightVisualPtrOutput {
	return i.ToDashboardInsightVisualPtrOutputWithContext(context.Background())
}

func (i DashboardInsightVisualArgs) ToDashboardInsightVisualPtrOutputWithContext(ctx context.Context) DashboardInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightVisualOutput).ToDashboardInsightVisualPtrOutputWithContext(ctx)
}

// DashboardInsightVisualPtrInput is an input type that accepts DashboardInsightVisualArgs, DashboardInsightVisualPtr and DashboardInsightVisualPtrOutput values.
// You can construct a concrete instance of `DashboardInsightVisualPtrInput` via:
//
//	        DashboardInsightVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardInsightVisualPtrInput interface {
	pulumi.Input

	ToDashboardInsightVisualPtrOutput() DashboardInsightVisualPtrOutput
	ToDashboardInsightVisualPtrOutputWithContext(context.Context) DashboardInsightVisualPtrOutput
}

type dashboardInsightVisualPtrType DashboardInsightVisualArgs

func DashboardInsightVisualPtr(v *DashboardInsightVisualArgs) DashboardInsightVisualPtrInput {
	return (*dashboardInsightVisualPtrType)(v)
}

func (*dashboardInsightVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardInsightVisual)(nil)).Elem()
}

func (i *dashboardInsightVisualPtrType) ToDashboardInsightVisualPtrOutput() DashboardInsightVisualPtrOutput {
	return i.ToDashboardInsightVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardInsightVisualPtrType) ToDashboardInsightVisualPtrOutputWithContext(ctx context.Context) DashboardInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardInsightVisualPtrOutput)
}

type DashboardInsightVisualOutput struct{ *pulumi.OutputState }

func (DashboardInsightVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardInsightVisual)(nil)).Elem()
}

func (o DashboardInsightVisualOutput) ToDashboardInsightVisualOutput() DashboardInsightVisualOutput {
	return o
}

func (o DashboardInsightVisualOutput) ToDashboardInsightVisualOutputWithContext(ctx context.Context) DashboardInsightVisualOutput {
	return o
}

func (o DashboardInsightVisualOutput) ToDashboardInsightVisualPtrOutput() DashboardInsightVisualPtrOutput {
	return o.ToDashboardInsightVisualPtrOutputWithContext(context.Background())
}

func (o DashboardInsightVisualOutput) ToDashboardInsightVisualPtrOutputWithContext(ctx context.Context) DashboardInsightVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardInsightVisual) *DashboardInsightVisual {
		return &v
	}).(DashboardInsightVisualPtrOutput)
}

func (o DashboardInsightVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardInsightVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardInsightVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardInsightVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o DashboardInsightVisualOutput) InsightConfiguration() DashboardInsightConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardInsightVisual) *DashboardInsightConfiguration { return v.InsightConfiguration }).(DashboardInsightConfigurationPtrOutput)
}

func (o DashboardInsightVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardInsightVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardInsightVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardInsightVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardInsightVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardInsightVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardInsightVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardInsightVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardInsightVisual)(nil)).Elem()
}

func (o DashboardInsightVisualPtrOutput) ToDashboardInsightVisualPtrOutput() DashboardInsightVisualPtrOutput {
	return o
}

func (o DashboardInsightVisualPtrOutput) ToDashboardInsightVisualPtrOutputWithContext(ctx context.Context) DashboardInsightVisualPtrOutput {
	return o
}

func (o DashboardInsightVisualPtrOutput) Elem() DashboardInsightVisualOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) DashboardInsightVisual {
		if v != nil {
			return *v
		}
		var ret DashboardInsightVisual
		return ret
	}).(DashboardInsightVisualOutput)
}

func (o DashboardInsightVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardInsightVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o DashboardInsightVisualPtrOutput) InsightConfiguration() DashboardInsightConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) *DashboardInsightConfiguration {
		if v == nil {
			return nil
		}
		return v.InsightConfiguration
	}).(DashboardInsightConfigurationPtrOutput)
}

func (o DashboardInsightVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardInsightVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardInsightVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardIntegerDefaultValues struct {
	DynamicValue *DashboardDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                     `pulumi:"staticValues"`
}

// DashboardIntegerDefaultValuesInput is an input type that accepts DashboardIntegerDefaultValuesArgs and DashboardIntegerDefaultValuesOutput values.
// You can construct a concrete instance of `DashboardIntegerDefaultValuesInput` via:
//
//	DashboardIntegerDefaultValuesArgs{...}
type DashboardIntegerDefaultValuesInput interface {
	pulumi.Input

	ToDashboardIntegerDefaultValuesOutput() DashboardIntegerDefaultValuesOutput
	ToDashboardIntegerDefaultValuesOutputWithContext(context.Context) DashboardIntegerDefaultValuesOutput
}

type DashboardIntegerDefaultValuesArgs struct {
	DynamicValue DashboardDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput             `pulumi:"staticValues"`
}

func (DashboardIntegerDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerDefaultValues)(nil)).Elem()
}

func (i DashboardIntegerDefaultValuesArgs) ToDashboardIntegerDefaultValuesOutput() DashboardIntegerDefaultValuesOutput {
	return i.ToDashboardIntegerDefaultValuesOutputWithContext(context.Background())
}

func (i DashboardIntegerDefaultValuesArgs) ToDashboardIntegerDefaultValuesOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerDefaultValuesOutput)
}

func (i DashboardIntegerDefaultValuesArgs) ToDashboardIntegerDefaultValuesPtrOutput() DashboardIntegerDefaultValuesPtrOutput {
	return i.ToDashboardIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i DashboardIntegerDefaultValuesArgs) ToDashboardIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerDefaultValuesOutput).ToDashboardIntegerDefaultValuesPtrOutputWithContext(ctx)
}

// DashboardIntegerDefaultValuesPtrInput is an input type that accepts DashboardIntegerDefaultValuesArgs, DashboardIntegerDefaultValuesPtr and DashboardIntegerDefaultValuesPtrOutput values.
// You can construct a concrete instance of `DashboardIntegerDefaultValuesPtrInput` via:
//
//	        DashboardIntegerDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardIntegerDefaultValuesPtrInput interface {
	pulumi.Input

	ToDashboardIntegerDefaultValuesPtrOutput() DashboardIntegerDefaultValuesPtrOutput
	ToDashboardIntegerDefaultValuesPtrOutputWithContext(context.Context) DashboardIntegerDefaultValuesPtrOutput
}

type dashboardIntegerDefaultValuesPtrType DashboardIntegerDefaultValuesArgs

func DashboardIntegerDefaultValuesPtr(v *DashboardIntegerDefaultValuesArgs) DashboardIntegerDefaultValuesPtrInput {
	return (*dashboardIntegerDefaultValuesPtrType)(v)
}

func (*dashboardIntegerDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerDefaultValues)(nil)).Elem()
}

func (i *dashboardIntegerDefaultValuesPtrType) ToDashboardIntegerDefaultValuesPtrOutput() DashboardIntegerDefaultValuesPtrOutput {
	return i.ToDashboardIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardIntegerDefaultValuesPtrType) ToDashboardIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerDefaultValuesPtrOutput)
}

type DashboardIntegerDefaultValuesOutput struct{ *pulumi.OutputState }

func (DashboardIntegerDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerDefaultValues)(nil)).Elem()
}

func (o DashboardIntegerDefaultValuesOutput) ToDashboardIntegerDefaultValuesOutput() DashboardIntegerDefaultValuesOutput {
	return o
}

func (o DashboardIntegerDefaultValuesOutput) ToDashboardIntegerDefaultValuesOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesOutput {
	return o
}

func (o DashboardIntegerDefaultValuesOutput) ToDashboardIntegerDefaultValuesPtrOutput() DashboardIntegerDefaultValuesPtrOutput {
	return o.ToDashboardIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (o DashboardIntegerDefaultValuesOutput) ToDashboardIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardIntegerDefaultValues) *DashboardIntegerDefaultValues {
		return &v
	}).(DashboardIntegerDefaultValuesPtrOutput)
}

func (o DashboardIntegerDefaultValuesOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v DashboardIntegerDefaultValues) *DashboardDynamicDefaultValue { return v.DynamicValue }).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardIntegerDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardIntegerDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type DashboardIntegerDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardIntegerDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerDefaultValues)(nil)).Elem()
}

func (o DashboardIntegerDefaultValuesPtrOutput) ToDashboardIntegerDefaultValuesPtrOutput() DashboardIntegerDefaultValuesPtrOutput {
	return o
}

func (o DashboardIntegerDefaultValuesPtrOutput) ToDashboardIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardIntegerDefaultValuesPtrOutput {
	return o
}

func (o DashboardIntegerDefaultValuesPtrOutput) Elem() DashboardIntegerDefaultValuesOutput {
	return o.ApplyT(func(v *DashboardIntegerDefaultValues) DashboardIntegerDefaultValues {
		if v != nil {
			return *v
		}
		var ret DashboardIntegerDefaultValues
		return ret
	}).(DashboardIntegerDefaultValuesOutput)
}

func (o DashboardIntegerDefaultValuesPtrOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *DashboardIntegerDefaultValues) *DashboardDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardIntegerDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *DashboardIntegerDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type DashboardIntegerParameter struct {
	Name   string    `pulumi:"name"`
	Values []float64 `pulumi:"values"`
}

// DashboardIntegerParameterInput is an input type that accepts DashboardIntegerParameterArgs and DashboardIntegerParameterOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterInput` via:
//
//	DashboardIntegerParameterArgs{...}
type DashboardIntegerParameterInput interface {
	pulumi.Input

	ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput
	ToDashboardIntegerParameterOutputWithContext(context.Context) DashboardIntegerParameterOutput
}

type DashboardIntegerParameterArgs struct {
	Name   pulumi.StringInput       `pulumi:"name"`
	Values pulumi.Float64ArrayInput `pulumi:"values"`
}

func (DashboardIntegerParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameter)(nil)).Elem()
}

func (i DashboardIntegerParameterArgs) ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput {
	return i.ToDashboardIntegerParameterOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterArgs) ToDashboardIntegerParameterOutputWithContext(ctx context.Context) DashboardIntegerParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterOutput)
}

// DashboardIntegerParameterArrayInput is an input type that accepts DashboardIntegerParameterArray and DashboardIntegerParameterArrayOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterArrayInput` via:
//
//	DashboardIntegerParameterArray{ DashboardIntegerParameterArgs{...} }
type DashboardIntegerParameterArrayInput interface {
	pulumi.Input

	ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput
	ToDashboardIntegerParameterArrayOutputWithContext(context.Context) DashboardIntegerParameterArrayOutput
}

type DashboardIntegerParameterArray []DashboardIntegerParameterInput

func (DashboardIntegerParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardIntegerParameter)(nil)).Elem()
}

func (i DashboardIntegerParameterArray) ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput {
	return i.ToDashboardIntegerParameterArrayOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterArray) ToDashboardIntegerParameterArrayOutputWithContext(ctx context.Context) DashboardIntegerParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterArrayOutput)
}

type DashboardIntegerParameterOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameter)(nil)).Elem()
}

func (o DashboardIntegerParameterOutput) ToDashboardIntegerParameterOutput() DashboardIntegerParameterOutput {
	return o
}

func (o DashboardIntegerParameterOutput) ToDashboardIntegerParameterOutputWithContext(ctx context.Context) DashboardIntegerParameterOutput {
	return o
}

func (o DashboardIntegerParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardIntegerParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardIntegerParameterOutput) Values() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v DashboardIntegerParameter) []float64 { return v.Values }).(pulumi.Float64ArrayOutput)
}

type DashboardIntegerParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardIntegerParameter)(nil)).Elem()
}

func (o DashboardIntegerParameterArrayOutput) ToDashboardIntegerParameterArrayOutput() DashboardIntegerParameterArrayOutput {
	return o
}

func (o DashboardIntegerParameterArrayOutput) ToDashboardIntegerParameterArrayOutputWithContext(ctx context.Context) DashboardIntegerParameterArrayOutput {
	return o
}

func (o DashboardIntegerParameterArrayOutput) Index(i pulumi.IntInput) DashboardIntegerParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardIntegerParameter {
		return vs[0].([]DashboardIntegerParameter)[vs[1].(int)]
	}).(DashboardIntegerParameterOutput)
}

type DashboardIntegerParameterDeclaration struct {
	DefaultValues           *DashboardIntegerDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []DashboardMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                       `pulumi:"name"`
	ParameterValueType      DashboardParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *DashboardIntegerValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// DashboardIntegerParameterDeclarationInput is an input type that accepts DashboardIntegerParameterDeclarationArgs and DashboardIntegerParameterDeclarationOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterDeclarationInput` via:
//
//	DashboardIntegerParameterDeclarationArgs{...}
type DashboardIntegerParameterDeclarationInput interface {
	pulumi.Input

	ToDashboardIntegerParameterDeclarationOutput() DashboardIntegerParameterDeclarationOutput
	ToDashboardIntegerParameterDeclarationOutputWithContext(context.Context) DashboardIntegerParameterDeclarationOutput
}

type DashboardIntegerParameterDeclarationArgs struct {
	DefaultValues           DashboardIntegerDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters DashboardMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                  `pulumi:"name"`
	ParameterValueType      DashboardParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          DashboardIntegerValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (DashboardIntegerParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameterDeclaration)(nil)).Elem()
}

func (i DashboardIntegerParameterDeclarationArgs) ToDashboardIntegerParameterDeclarationOutput() DashboardIntegerParameterDeclarationOutput {
	return i.ToDashboardIntegerParameterDeclarationOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterDeclarationArgs) ToDashboardIntegerParameterDeclarationOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterDeclarationOutput)
}

func (i DashboardIntegerParameterDeclarationArgs) ToDashboardIntegerParameterDeclarationPtrOutput() DashboardIntegerParameterDeclarationPtrOutput {
	return i.ToDashboardIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i DashboardIntegerParameterDeclarationArgs) ToDashboardIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterDeclarationOutput).ToDashboardIntegerParameterDeclarationPtrOutputWithContext(ctx)
}

// DashboardIntegerParameterDeclarationPtrInput is an input type that accepts DashboardIntegerParameterDeclarationArgs, DashboardIntegerParameterDeclarationPtr and DashboardIntegerParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `DashboardIntegerParameterDeclarationPtrInput` via:
//
//	        DashboardIntegerParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type DashboardIntegerParameterDeclarationPtrInput interface {
	pulumi.Input

	ToDashboardIntegerParameterDeclarationPtrOutput() DashboardIntegerParameterDeclarationPtrOutput
	ToDashboardIntegerParameterDeclarationPtrOutputWithContext(context.Context) DashboardIntegerParameterDeclarationPtrOutput
}

type dashboardIntegerParameterDeclarationPtrType DashboardIntegerParameterDeclarationArgs

func DashboardIntegerParameterDeclarationPtr(v *DashboardIntegerParameterDeclarationArgs) DashboardIntegerParameterDeclarationPtrInput {
	return (*dashboardIntegerParameterDeclarationPtrType)(v)
}

func (*dashboardIntegerParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerParameterDeclaration)(nil)).Elem()
}

func (i *dashboardIntegerParameterDeclarationPtrType) ToDashboardIntegerParameterDeclarationPtrOutput() DashboardIntegerParameterDeclarationPtrOutput {
	return i.ToDashboardIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *dashboardIntegerParameterDeclarationPtrType) ToDashboardIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerParameterDeclarationPtrOutput)
}

type DashboardIntegerParameterDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerParameterDeclaration)(nil)).Elem()
}

func (o DashboardIntegerParameterDeclarationOutput) ToDashboardIntegerParameterDeclarationOutput() DashboardIntegerParameterDeclarationOutput {
	return o
}

func (o DashboardIntegerParameterDeclarationOutput) ToDashboardIntegerParameterDeclarationOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationOutput {
	return o
}

func (o DashboardIntegerParameterDeclarationOutput) ToDashboardIntegerParameterDeclarationPtrOutput() DashboardIntegerParameterDeclarationPtrOutput {
	return o.ToDashboardIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o DashboardIntegerParameterDeclarationOutput) ToDashboardIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardIntegerParameterDeclaration) *DashboardIntegerParameterDeclaration {
		return &v
	}).(DashboardIntegerParameterDeclarationPtrOutput)
}

func (o DashboardIntegerParameterDeclarationOutput) DefaultValues() DashboardIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v DashboardIntegerParameterDeclaration) *DashboardIntegerDefaultValues { return v.DefaultValues }).(DashboardIntegerDefaultValuesPtrOutput)
}

func (o DashboardIntegerParameterDeclarationOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v DashboardIntegerParameterDeclaration) []DashboardMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardIntegerParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardIntegerParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardIntegerParameterDeclarationOutput) ParameterValueType() DashboardParameterValueTypeOutput {
	return o.ApplyT(func(v DashboardIntegerParameterDeclaration) DashboardParameterValueType { return v.ParameterValueType }).(DashboardParameterValueTypeOutput)
}

func (o DashboardIntegerParameterDeclarationOutput) ValueWhenUnset() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardIntegerParameterDeclaration) *DashboardIntegerValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(DashboardIntegerValueWhenUnsetConfigurationPtrOutput)
}

type DashboardIntegerParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (DashboardIntegerParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerParameterDeclaration)(nil)).Elem()
}

func (o DashboardIntegerParameterDeclarationPtrOutput) ToDashboardIntegerParameterDeclarationPtrOutput() DashboardIntegerParameterDeclarationPtrOutput {
	return o
}

func (o DashboardIntegerParameterDeclarationPtrOutput) ToDashboardIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardIntegerParameterDeclarationPtrOutput {
	return o
}

func (o DashboardIntegerParameterDeclarationPtrOutput) Elem() DashboardIntegerParameterDeclarationOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) DashboardIntegerParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret DashboardIntegerParameterDeclaration
		return ret
	}).(DashboardIntegerParameterDeclarationOutput)
}

func (o DashboardIntegerParameterDeclarationPtrOutput) DefaultValues() DashboardIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) *DashboardIntegerDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(DashboardIntegerDefaultValuesPtrOutput)
}

func (o DashboardIntegerParameterDeclarationPtrOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) []DashboardMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardIntegerParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardIntegerParameterDeclarationPtrOutput) ParameterValueType() DashboardParameterValueTypePtrOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) *DashboardParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(DashboardParameterValueTypePtrOutput)
}

func (o DashboardIntegerParameterDeclarationPtrOutput) ValueWhenUnset() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardIntegerParameterDeclaration) *DashboardIntegerValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(DashboardIntegerValueWhenUnsetConfigurationPtrOutput)
}

type DashboardIntegerValueWhenUnsetConfiguration struct {
	CustomValue          *float64                       `pulumi:"customValue"`
	ValueWhenUnsetOption *DashboardValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// DashboardIntegerValueWhenUnsetConfigurationInput is an input type that accepts DashboardIntegerValueWhenUnsetConfigurationArgs and DashboardIntegerValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `DashboardIntegerValueWhenUnsetConfigurationInput` via:
//
//	DashboardIntegerValueWhenUnsetConfigurationArgs{...}
type DashboardIntegerValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToDashboardIntegerValueWhenUnsetConfigurationOutput() DashboardIntegerValueWhenUnsetConfigurationOutput
	ToDashboardIntegerValueWhenUnsetConfigurationOutputWithContext(context.Context) DashboardIntegerValueWhenUnsetConfigurationOutput
}

type DashboardIntegerValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption DashboardValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (DashboardIntegerValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i DashboardIntegerValueWhenUnsetConfigurationArgs) ToDashboardIntegerValueWhenUnsetConfigurationOutput() DashboardIntegerValueWhenUnsetConfigurationOutput {
	return i.ToDashboardIntegerValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i DashboardIntegerValueWhenUnsetConfigurationArgs) ToDashboardIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerValueWhenUnsetConfigurationOutput)
}

func (i DashboardIntegerValueWhenUnsetConfigurationArgs) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutput() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardIntegerValueWhenUnsetConfigurationArgs) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerValueWhenUnsetConfigurationOutput).ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// DashboardIntegerValueWhenUnsetConfigurationPtrInput is an input type that accepts DashboardIntegerValueWhenUnsetConfigurationArgs, DashboardIntegerValueWhenUnsetConfigurationPtr and DashboardIntegerValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardIntegerValueWhenUnsetConfigurationPtrInput` via:
//
//	        DashboardIntegerValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardIntegerValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardIntegerValueWhenUnsetConfigurationPtrOutput() DashboardIntegerValueWhenUnsetConfigurationPtrOutput
	ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) DashboardIntegerValueWhenUnsetConfigurationPtrOutput
}

type dashboardIntegerValueWhenUnsetConfigurationPtrType DashboardIntegerValueWhenUnsetConfigurationArgs

func DashboardIntegerValueWhenUnsetConfigurationPtr(v *DashboardIntegerValueWhenUnsetConfigurationArgs) DashboardIntegerValueWhenUnsetConfigurationPtrInput {
	return (*dashboardIntegerValueWhenUnsetConfigurationPtrType)(v)
}

func (*dashboardIntegerValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *dashboardIntegerValueWhenUnsetConfigurationPtrType) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutput() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardIntegerValueWhenUnsetConfigurationPtrType) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardIntegerValueWhenUnsetConfigurationPtrOutput)
}

type DashboardIntegerValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardIntegerValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) ToDashboardIntegerValueWhenUnsetConfigurationOutput() DashboardIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) ToDashboardIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutput() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardIntegerValueWhenUnsetConfiguration) *DashboardIntegerValueWhenUnsetConfiguration {
		return &v
	}).(DashboardIntegerValueWhenUnsetConfigurationPtrOutput)
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardIntegerValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o DashboardIntegerValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v DashboardIntegerValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardIntegerValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardIntegerValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardIntegerValueWhenUnsetConfigurationPtrOutput) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutput() DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardIntegerValueWhenUnsetConfigurationPtrOutput) ToDashboardIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardIntegerValueWhenUnsetConfigurationPtrOutput) Elem() DashboardIntegerValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *DashboardIntegerValueWhenUnsetConfiguration) DashboardIntegerValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardIntegerValueWhenUnsetConfiguration
		return ret
	}).(DashboardIntegerValueWhenUnsetConfigurationOutput)
}

func (o DashboardIntegerValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardIntegerValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardIntegerValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *DashboardIntegerValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardItemsLimitConfiguration struct {
	ItemsLimit      *float64                  `pulumi:"itemsLimit"`
	OtherCategories *DashboardOtherCategories `pulumi:"otherCategories"`
}

// DashboardItemsLimitConfigurationInput is an input type that accepts DashboardItemsLimitConfigurationArgs and DashboardItemsLimitConfigurationOutput values.
// You can construct a concrete instance of `DashboardItemsLimitConfigurationInput` via:
//
//	DashboardItemsLimitConfigurationArgs{...}
type DashboardItemsLimitConfigurationInput interface {
	pulumi.Input

	ToDashboardItemsLimitConfigurationOutput() DashboardItemsLimitConfigurationOutput
	ToDashboardItemsLimitConfigurationOutputWithContext(context.Context) DashboardItemsLimitConfigurationOutput
}

type DashboardItemsLimitConfigurationArgs struct {
	ItemsLimit      pulumi.Float64PtrInput           `pulumi:"itemsLimit"`
	OtherCategories DashboardOtherCategoriesPtrInput `pulumi:"otherCategories"`
}

func (DashboardItemsLimitConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardItemsLimitConfiguration)(nil)).Elem()
}

func (i DashboardItemsLimitConfigurationArgs) ToDashboardItemsLimitConfigurationOutput() DashboardItemsLimitConfigurationOutput {
	return i.ToDashboardItemsLimitConfigurationOutputWithContext(context.Background())
}

func (i DashboardItemsLimitConfigurationArgs) ToDashboardItemsLimitConfigurationOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardItemsLimitConfigurationOutput)
}

func (i DashboardItemsLimitConfigurationArgs) ToDashboardItemsLimitConfigurationPtrOutput() DashboardItemsLimitConfigurationPtrOutput {
	return i.ToDashboardItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardItemsLimitConfigurationArgs) ToDashboardItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardItemsLimitConfigurationOutput).ToDashboardItemsLimitConfigurationPtrOutputWithContext(ctx)
}

// DashboardItemsLimitConfigurationPtrInput is an input type that accepts DashboardItemsLimitConfigurationArgs, DashboardItemsLimitConfigurationPtr and DashboardItemsLimitConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardItemsLimitConfigurationPtrInput` via:
//
//	        DashboardItemsLimitConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardItemsLimitConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardItemsLimitConfigurationPtrOutput() DashboardItemsLimitConfigurationPtrOutput
	ToDashboardItemsLimitConfigurationPtrOutputWithContext(context.Context) DashboardItemsLimitConfigurationPtrOutput
}

type dashboardItemsLimitConfigurationPtrType DashboardItemsLimitConfigurationArgs

func DashboardItemsLimitConfigurationPtr(v *DashboardItemsLimitConfigurationArgs) DashboardItemsLimitConfigurationPtrInput {
	return (*dashboardItemsLimitConfigurationPtrType)(v)
}

func (*dashboardItemsLimitConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardItemsLimitConfiguration)(nil)).Elem()
}

func (i *dashboardItemsLimitConfigurationPtrType) ToDashboardItemsLimitConfigurationPtrOutput() DashboardItemsLimitConfigurationPtrOutput {
	return i.ToDashboardItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardItemsLimitConfigurationPtrType) ToDashboardItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardItemsLimitConfigurationPtrOutput)
}

type DashboardItemsLimitConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardItemsLimitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardItemsLimitConfiguration)(nil)).Elem()
}

func (o DashboardItemsLimitConfigurationOutput) ToDashboardItemsLimitConfigurationOutput() DashboardItemsLimitConfigurationOutput {
	return o
}

func (o DashboardItemsLimitConfigurationOutput) ToDashboardItemsLimitConfigurationOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationOutput {
	return o
}

func (o DashboardItemsLimitConfigurationOutput) ToDashboardItemsLimitConfigurationPtrOutput() DashboardItemsLimitConfigurationPtrOutput {
	return o.ToDashboardItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardItemsLimitConfigurationOutput) ToDashboardItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardItemsLimitConfiguration) *DashboardItemsLimitConfiguration {
		return &v
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardItemsLimitConfigurationOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardItemsLimitConfiguration) *float64 { return v.ItemsLimit }).(pulumi.Float64PtrOutput)
}

func (o DashboardItemsLimitConfigurationOutput) OtherCategories() DashboardOtherCategoriesPtrOutput {
	return o.ApplyT(func(v DashboardItemsLimitConfiguration) *DashboardOtherCategories { return v.OtherCategories }).(DashboardOtherCategoriesPtrOutput)
}

type DashboardItemsLimitConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardItemsLimitConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardItemsLimitConfiguration)(nil)).Elem()
}

func (o DashboardItemsLimitConfigurationPtrOutput) ToDashboardItemsLimitConfigurationPtrOutput() DashboardItemsLimitConfigurationPtrOutput {
	return o
}

func (o DashboardItemsLimitConfigurationPtrOutput) ToDashboardItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) DashboardItemsLimitConfigurationPtrOutput {
	return o
}

func (o DashboardItemsLimitConfigurationPtrOutput) Elem() DashboardItemsLimitConfigurationOutput {
	return o.ApplyT(func(v *DashboardItemsLimitConfiguration) DashboardItemsLimitConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardItemsLimitConfiguration
		return ret
	}).(DashboardItemsLimitConfigurationOutput)
}

func (o DashboardItemsLimitConfigurationPtrOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardItemsLimitConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ItemsLimit
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardItemsLimitConfigurationPtrOutput) OtherCategories() DashboardOtherCategoriesPtrOutput {
	return o.ApplyT(func(v *DashboardItemsLimitConfiguration) *DashboardOtherCategories {
		if v == nil {
			return nil
		}
		return v.OtherCategories
	}).(DashboardOtherCategoriesPtrOutput)
}

type DashboardKPIConditionalFormatting struct {
	ConditionalFormattingOptions []DashboardKPIConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// DashboardKPIConditionalFormattingInput is an input type that accepts DashboardKPIConditionalFormattingArgs and DashboardKPIConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardKPIConditionalFormattingInput` via:
//
//	DashboardKPIConditionalFormattingArgs{...}
type DashboardKPIConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardKPIConditionalFormattingOutput() DashboardKPIConditionalFormattingOutput
	ToDashboardKPIConditionalFormattingOutputWithContext(context.Context) DashboardKPIConditionalFormattingOutput
}

type DashboardKPIConditionalFormattingArgs struct {
	ConditionalFormattingOptions DashboardKPIConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (DashboardKPIConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConditionalFormatting)(nil)).Elem()
}

func (i DashboardKPIConditionalFormattingArgs) ToDashboardKPIConditionalFormattingOutput() DashboardKPIConditionalFormattingOutput {
	return i.ToDashboardKPIConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardKPIConditionalFormattingArgs) ToDashboardKPIConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConditionalFormattingOutput)
}

func (i DashboardKPIConditionalFormattingArgs) ToDashboardKPIConditionalFormattingPtrOutput() DashboardKPIConditionalFormattingPtrOutput {
	return i.ToDashboardKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardKPIConditionalFormattingArgs) ToDashboardKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConditionalFormattingOutput).ToDashboardKPIConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardKPIConditionalFormattingPtrInput is an input type that accepts DashboardKPIConditionalFormattingArgs, DashboardKPIConditionalFormattingPtr and DashboardKPIConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardKPIConditionalFormattingPtrInput` via:
//
//	        DashboardKPIConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardKPIConditionalFormattingPtrOutput() DashboardKPIConditionalFormattingPtrOutput
	ToDashboardKPIConditionalFormattingPtrOutputWithContext(context.Context) DashboardKPIConditionalFormattingPtrOutput
}

type dashboardKPIConditionalFormattingPtrType DashboardKPIConditionalFormattingArgs

func DashboardKPIConditionalFormattingPtr(v *DashboardKPIConditionalFormattingArgs) DashboardKPIConditionalFormattingPtrInput {
	return (*dashboardKPIConditionalFormattingPtrType)(v)
}

func (*dashboardKPIConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIConditionalFormatting)(nil)).Elem()
}

func (i *dashboardKPIConditionalFormattingPtrType) ToDashboardKPIConditionalFormattingPtrOutput() DashboardKPIConditionalFormattingPtrOutput {
	return i.ToDashboardKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIConditionalFormattingPtrType) ToDashboardKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConditionalFormattingPtrOutput)
}

type DashboardKPIConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardKPIConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIConditionalFormattingOutput) ToDashboardKPIConditionalFormattingOutput() DashboardKPIConditionalFormattingOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOutput) ToDashboardKPIConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOutput) ToDashboardKPIConditionalFormattingPtrOutput() DashboardKPIConditionalFormattingPtrOutput {
	return o.ToDashboardKPIConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardKPIConditionalFormattingOutput) ToDashboardKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIConditionalFormatting) *DashboardKPIConditionalFormatting {
		return &v
	}).(DashboardKPIConditionalFormattingPtrOutput)
}

func (o DashboardKPIConditionalFormattingOutput) ConditionalFormattingOptions() DashboardKPIConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v DashboardKPIConditionalFormatting) []DashboardKPIConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(DashboardKPIConditionalFormattingOptionArrayOutput)
}

type DashboardKPIConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIConditionalFormattingPtrOutput) ToDashboardKPIConditionalFormattingPtrOutput() DashboardKPIConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIConditionalFormattingPtrOutput) ToDashboardKPIConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIConditionalFormattingPtrOutput) Elem() DashboardKPIConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardKPIConditionalFormatting) DashboardKPIConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardKPIConditionalFormatting
		return ret
	}).(DashboardKPIConditionalFormattingOutput)
}

func (o DashboardKPIConditionalFormattingPtrOutput) ConditionalFormattingOptions() DashboardKPIConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *DashboardKPIConditionalFormatting) []DashboardKPIConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(DashboardKPIConditionalFormattingOptionArrayOutput)
}

type DashboardKPIConditionalFormattingOption struct {
	PrimaryValue *DashboardKPIPrimaryValueConditionalFormatting `pulumi:"primaryValue"`
	ProgressBar  *DashboardKPIProgressBarConditionalFormatting  `pulumi:"progressBar"`
}

// DashboardKPIConditionalFormattingOptionInput is an input type that accepts DashboardKPIConditionalFormattingOptionArgs and DashboardKPIConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `DashboardKPIConditionalFormattingOptionInput` via:
//
//	DashboardKPIConditionalFormattingOptionArgs{...}
type DashboardKPIConditionalFormattingOptionInput interface {
	pulumi.Input

	ToDashboardKPIConditionalFormattingOptionOutput() DashboardKPIConditionalFormattingOptionOutput
	ToDashboardKPIConditionalFormattingOptionOutputWithContext(context.Context) DashboardKPIConditionalFormattingOptionOutput
}

type DashboardKPIConditionalFormattingOptionArgs struct {
	PrimaryValue DashboardKPIPrimaryValueConditionalFormattingPtrInput `pulumi:"primaryValue"`
	ProgressBar  DashboardKPIProgressBarConditionalFormattingPtrInput  `pulumi:"progressBar"`
}

func (DashboardKPIConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardKPIConditionalFormattingOptionArgs) ToDashboardKPIConditionalFormattingOptionOutput() DashboardKPIConditionalFormattingOptionOutput {
	return i.ToDashboardKPIConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i DashboardKPIConditionalFormattingOptionArgs) ToDashboardKPIConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConditionalFormattingOptionOutput)
}

// DashboardKPIConditionalFormattingOptionArrayInput is an input type that accepts DashboardKPIConditionalFormattingOptionArray and DashboardKPIConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `DashboardKPIConditionalFormattingOptionArrayInput` via:
//
//	DashboardKPIConditionalFormattingOptionArray{ DashboardKPIConditionalFormattingOptionArgs{...} }
type DashboardKPIConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToDashboardKPIConditionalFormattingOptionArrayOutput() DashboardKPIConditionalFormattingOptionArrayOutput
	ToDashboardKPIConditionalFormattingOptionArrayOutputWithContext(context.Context) DashboardKPIConditionalFormattingOptionArrayOutput
}

type DashboardKPIConditionalFormattingOptionArray []DashboardKPIConditionalFormattingOptionInput

func (DashboardKPIConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardKPIConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardKPIConditionalFormattingOptionArray) ToDashboardKPIConditionalFormattingOptionArrayOutput() DashboardKPIConditionalFormattingOptionArrayOutput {
	return i.ToDashboardKPIConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i DashboardKPIConditionalFormattingOptionArray) ToDashboardKPIConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConditionalFormattingOptionArrayOutput)
}

type DashboardKPIConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (DashboardKPIConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardKPIConditionalFormattingOptionOutput) ToDashboardKPIConditionalFormattingOptionOutput() DashboardKPIConditionalFormattingOptionOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOptionOutput) ToDashboardKPIConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOptionOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOptionOutput) PrimaryValue() DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardKPIConditionalFormattingOption) *DashboardKPIPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(DashboardKPIPrimaryValueConditionalFormattingPtrOutput)
}

func (o DashboardKPIConditionalFormattingOptionOutput) ProgressBar() DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardKPIConditionalFormattingOption) *DashboardKPIProgressBarConditionalFormatting {
		return v.ProgressBar
	}).(DashboardKPIProgressBarConditionalFormattingPtrOutput)
}

type DashboardKPIConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardKPIConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardKPIConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardKPIConditionalFormattingOptionArrayOutput) ToDashboardKPIConditionalFormattingOptionArrayOutput() DashboardKPIConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOptionArrayOutput) ToDashboardKPIConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardKPIConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardKPIConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) DashboardKPIConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardKPIConditionalFormattingOption {
		return vs[0].([]DashboardKPIConditionalFormattingOption)[vs[1].(int)]
	}).(DashboardKPIConditionalFormattingOptionOutput)
}

type DashboardKPIConfiguration struct {
	FieldWells        *DashboardKPIFieldWells        `pulumi:"fieldWells"`
	KPIOptions        *DashboardKPIOptions           `pulumi:"kPIOptions"`
	SortConfiguration *DashboardKPISortConfiguration `pulumi:"sortConfiguration"`
}

// DashboardKPIConfigurationInput is an input type that accepts DashboardKPIConfigurationArgs and DashboardKPIConfigurationOutput values.
// You can construct a concrete instance of `DashboardKPIConfigurationInput` via:
//
//	DashboardKPIConfigurationArgs{...}
type DashboardKPIConfigurationInput interface {
	pulumi.Input

	ToDashboardKPIConfigurationOutput() DashboardKPIConfigurationOutput
	ToDashboardKPIConfigurationOutputWithContext(context.Context) DashboardKPIConfigurationOutput
}

type DashboardKPIConfigurationArgs struct {
	FieldWells        DashboardKPIFieldWellsPtrInput        `pulumi:"fieldWells"`
	KPIOptions        DashboardKPIOptionsPtrInput           `pulumi:"kPIOptions"`
	SortConfiguration DashboardKPISortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (DashboardKPIConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConfiguration)(nil)).Elem()
}

func (i DashboardKPIConfigurationArgs) ToDashboardKPIConfigurationOutput() DashboardKPIConfigurationOutput {
	return i.ToDashboardKPIConfigurationOutputWithContext(context.Background())
}

func (i DashboardKPIConfigurationArgs) ToDashboardKPIConfigurationOutputWithContext(ctx context.Context) DashboardKPIConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConfigurationOutput)
}

func (i DashboardKPIConfigurationArgs) ToDashboardKPIConfigurationPtrOutput() DashboardKPIConfigurationPtrOutput {
	return i.ToDashboardKPIConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardKPIConfigurationArgs) ToDashboardKPIConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPIConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConfigurationOutput).ToDashboardKPIConfigurationPtrOutputWithContext(ctx)
}

// DashboardKPIConfigurationPtrInput is an input type that accepts DashboardKPIConfigurationArgs, DashboardKPIConfigurationPtr and DashboardKPIConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardKPIConfigurationPtrInput` via:
//
//	        DashboardKPIConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardKPIConfigurationPtrOutput() DashboardKPIConfigurationPtrOutput
	ToDashboardKPIConfigurationPtrOutputWithContext(context.Context) DashboardKPIConfigurationPtrOutput
}

type dashboardKPIConfigurationPtrType DashboardKPIConfigurationArgs

func DashboardKPIConfigurationPtr(v *DashboardKPIConfigurationArgs) DashboardKPIConfigurationPtrInput {
	return (*dashboardKPIConfigurationPtrType)(v)
}

func (*dashboardKPIConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIConfiguration)(nil)).Elem()
}

func (i *dashboardKPIConfigurationPtrType) ToDashboardKPIConfigurationPtrOutput() DashboardKPIConfigurationPtrOutput {
	return i.ToDashboardKPIConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIConfigurationPtrType) ToDashboardKPIConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPIConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIConfigurationPtrOutput)
}

type DashboardKPIConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardKPIConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIConfiguration)(nil)).Elem()
}

func (o DashboardKPIConfigurationOutput) ToDashboardKPIConfigurationOutput() DashboardKPIConfigurationOutput {
	return o
}

func (o DashboardKPIConfigurationOutput) ToDashboardKPIConfigurationOutputWithContext(ctx context.Context) DashboardKPIConfigurationOutput {
	return o
}

func (o DashboardKPIConfigurationOutput) ToDashboardKPIConfigurationPtrOutput() DashboardKPIConfigurationPtrOutput {
	return o.ToDashboardKPIConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardKPIConfigurationOutput) ToDashboardKPIConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPIConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIConfiguration) *DashboardKPIConfiguration {
		return &v
	}).(DashboardKPIConfigurationPtrOutput)
}

func (o DashboardKPIConfigurationOutput) FieldWells() DashboardKPIFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardKPIConfiguration) *DashboardKPIFieldWells { return v.FieldWells }).(DashboardKPIFieldWellsPtrOutput)
}

func (o DashboardKPIConfigurationOutput) KPIOptions() DashboardKPIOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIConfiguration) *DashboardKPIOptions { return v.KPIOptions }).(DashboardKPIOptionsPtrOutput)
}

func (o DashboardKPIConfigurationOutput) SortConfiguration() DashboardKPISortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardKPIConfiguration) *DashboardKPISortConfiguration { return v.SortConfiguration }).(DashboardKPISortConfigurationPtrOutput)
}

type DashboardKPIConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIConfiguration)(nil)).Elem()
}

func (o DashboardKPIConfigurationPtrOutput) ToDashboardKPIConfigurationPtrOutput() DashboardKPIConfigurationPtrOutput {
	return o
}

func (o DashboardKPIConfigurationPtrOutput) ToDashboardKPIConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPIConfigurationPtrOutput {
	return o
}

func (o DashboardKPIConfigurationPtrOutput) Elem() DashboardKPIConfigurationOutput {
	return o.ApplyT(func(v *DashboardKPIConfiguration) DashboardKPIConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardKPIConfiguration
		return ret
	}).(DashboardKPIConfigurationOutput)
}

func (o DashboardKPIConfigurationPtrOutput) FieldWells() DashboardKPIFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIConfiguration) *DashboardKPIFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardKPIFieldWellsPtrOutput)
}

func (o DashboardKPIConfigurationPtrOutput) KPIOptions() DashboardKPIOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIConfiguration) *DashboardKPIOptions {
		if v == nil {
			return nil
		}
		return v.KPIOptions
	}).(DashboardKPIOptionsPtrOutput)
}

func (o DashboardKPIConfigurationPtrOutput) SortConfiguration() DashboardKPISortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardKPIConfiguration) *DashboardKPISortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardKPISortConfigurationPtrOutput)
}

type DashboardKPIFieldWells struct {
	TargetValues []DashboardMeasureField   `pulumi:"targetValues"`
	TrendGroups  []DashboardDimensionField `pulumi:"trendGroups"`
	Values       []DashboardMeasureField   `pulumi:"values"`
}

// DashboardKPIFieldWellsInput is an input type that accepts DashboardKPIFieldWellsArgs and DashboardKPIFieldWellsOutput values.
// You can construct a concrete instance of `DashboardKPIFieldWellsInput` via:
//
//	DashboardKPIFieldWellsArgs{...}
type DashboardKPIFieldWellsInput interface {
	pulumi.Input

	ToDashboardKPIFieldWellsOutput() DashboardKPIFieldWellsOutput
	ToDashboardKPIFieldWellsOutputWithContext(context.Context) DashboardKPIFieldWellsOutput
}

type DashboardKPIFieldWellsArgs struct {
	TargetValues DashboardMeasureFieldArrayInput   `pulumi:"targetValues"`
	TrendGroups  DashboardDimensionFieldArrayInput `pulumi:"trendGroups"`
	Values       DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardKPIFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIFieldWells)(nil)).Elem()
}

func (i DashboardKPIFieldWellsArgs) ToDashboardKPIFieldWellsOutput() DashboardKPIFieldWellsOutput {
	return i.ToDashboardKPIFieldWellsOutputWithContext(context.Background())
}

func (i DashboardKPIFieldWellsArgs) ToDashboardKPIFieldWellsOutputWithContext(ctx context.Context) DashboardKPIFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIFieldWellsOutput)
}

func (i DashboardKPIFieldWellsArgs) ToDashboardKPIFieldWellsPtrOutput() DashboardKPIFieldWellsPtrOutput {
	return i.ToDashboardKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardKPIFieldWellsArgs) ToDashboardKPIFieldWellsPtrOutputWithContext(ctx context.Context) DashboardKPIFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIFieldWellsOutput).ToDashboardKPIFieldWellsPtrOutputWithContext(ctx)
}

// DashboardKPIFieldWellsPtrInput is an input type that accepts DashboardKPIFieldWellsArgs, DashboardKPIFieldWellsPtr and DashboardKPIFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardKPIFieldWellsPtrInput` via:
//
//	        DashboardKPIFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardKPIFieldWellsPtrOutput() DashboardKPIFieldWellsPtrOutput
	ToDashboardKPIFieldWellsPtrOutputWithContext(context.Context) DashboardKPIFieldWellsPtrOutput
}

type dashboardKPIFieldWellsPtrType DashboardKPIFieldWellsArgs

func DashboardKPIFieldWellsPtr(v *DashboardKPIFieldWellsArgs) DashboardKPIFieldWellsPtrInput {
	return (*dashboardKPIFieldWellsPtrType)(v)
}

func (*dashboardKPIFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIFieldWells)(nil)).Elem()
}

func (i *dashboardKPIFieldWellsPtrType) ToDashboardKPIFieldWellsPtrOutput() DashboardKPIFieldWellsPtrOutput {
	return i.ToDashboardKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIFieldWellsPtrType) ToDashboardKPIFieldWellsPtrOutputWithContext(ctx context.Context) DashboardKPIFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIFieldWellsPtrOutput)
}

type DashboardKPIFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardKPIFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIFieldWells)(nil)).Elem()
}

func (o DashboardKPIFieldWellsOutput) ToDashboardKPIFieldWellsOutput() DashboardKPIFieldWellsOutput {
	return o
}

func (o DashboardKPIFieldWellsOutput) ToDashboardKPIFieldWellsOutputWithContext(ctx context.Context) DashboardKPIFieldWellsOutput {
	return o
}

func (o DashboardKPIFieldWellsOutput) ToDashboardKPIFieldWellsPtrOutput() DashboardKPIFieldWellsPtrOutput {
	return o.ToDashboardKPIFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardKPIFieldWellsOutput) ToDashboardKPIFieldWellsPtrOutputWithContext(ctx context.Context) DashboardKPIFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIFieldWells) *DashboardKPIFieldWells {
		return &v
	}).(DashboardKPIFieldWellsPtrOutput)
}

func (o DashboardKPIFieldWellsOutput) TargetValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardKPIFieldWells) []DashboardMeasureField { return v.TargetValues }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardKPIFieldWellsOutput) TrendGroups() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardKPIFieldWells) []DashboardDimensionField { return v.TrendGroups }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardKPIFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardKPIFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardKPIFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIFieldWells)(nil)).Elem()
}

func (o DashboardKPIFieldWellsPtrOutput) ToDashboardKPIFieldWellsPtrOutput() DashboardKPIFieldWellsPtrOutput {
	return o
}

func (o DashboardKPIFieldWellsPtrOutput) ToDashboardKPIFieldWellsPtrOutputWithContext(ctx context.Context) DashboardKPIFieldWellsPtrOutput {
	return o
}

func (o DashboardKPIFieldWellsPtrOutput) Elem() DashboardKPIFieldWellsOutput {
	return o.ApplyT(func(v *DashboardKPIFieldWells) DashboardKPIFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardKPIFieldWells
		return ret
	}).(DashboardKPIFieldWellsOutput)
}

func (o DashboardKPIFieldWellsPtrOutput) TargetValues() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardKPIFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardKPIFieldWellsPtrOutput) TrendGroups() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardKPIFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.TrendGroups
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardKPIFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardKPIFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardKPIOptions struct {
	Comparison                      *DashboardComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType         *DashboardPrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   *DashboardFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     *DashboardProgressBarOptions      `pulumi:"progressBar"`
	SecondaryValue                  *DashboardSecondaryValueOptions   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration *DashboardFontConfiguration       `pulumi:"secondaryValueFontConfiguration"`
	TrendArrows                     *DashboardTrendArrowOptions       `pulumi:"trendArrows"`
}

// DashboardKPIOptionsInput is an input type that accepts DashboardKPIOptionsArgs and DashboardKPIOptionsOutput values.
// You can construct a concrete instance of `DashboardKPIOptionsInput` via:
//
//	DashboardKPIOptionsArgs{...}
type DashboardKPIOptionsInput interface {
	pulumi.Input

	ToDashboardKPIOptionsOutput() DashboardKPIOptionsOutput
	ToDashboardKPIOptionsOutputWithContext(context.Context) DashboardKPIOptionsOutput
}

type DashboardKPIOptionsArgs struct {
	Comparison                      DashboardComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType         DashboardPrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   DashboardFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     DashboardProgressBarOptionsPtrInput      `pulumi:"progressBar"`
	SecondaryValue                  DashboardSecondaryValueOptionsPtrInput   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration DashboardFontConfigurationPtrInput       `pulumi:"secondaryValueFontConfiguration"`
	TrendArrows                     DashboardTrendArrowOptionsPtrInput       `pulumi:"trendArrows"`
}

func (DashboardKPIOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIOptions)(nil)).Elem()
}

func (i DashboardKPIOptionsArgs) ToDashboardKPIOptionsOutput() DashboardKPIOptionsOutput {
	return i.ToDashboardKPIOptionsOutputWithContext(context.Background())
}

func (i DashboardKPIOptionsArgs) ToDashboardKPIOptionsOutputWithContext(ctx context.Context) DashboardKPIOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIOptionsOutput)
}

func (i DashboardKPIOptionsArgs) ToDashboardKPIOptionsPtrOutput() DashboardKPIOptionsPtrOutput {
	return i.ToDashboardKPIOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardKPIOptionsArgs) ToDashboardKPIOptionsPtrOutputWithContext(ctx context.Context) DashboardKPIOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIOptionsOutput).ToDashboardKPIOptionsPtrOutputWithContext(ctx)
}

// DashboardKPIOptionsPtrInput is an input type that accepts DashboardKPIOptionsArgs, DashboardKPIOptionsPtr and DashboardKPIOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardKPIOptionsPtrInput` via:
//
//	        DashboardKPIOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIOptionsPtrInput interface {
	pulumi.Input

	ToDashboardKPIOptionsPtrOutput() DashboardKPIOptionsPtrOutput
	ToDashboardKPIOptionsPtrOutputWithContext(context.Context) DashboardKPIOptionsPtrOutput
}

type dashboardKPIOptionsPtrType DashboardKPIOptionsArgs

func DashboardKPIOptionsPtr(v *DashboardKPIOptionsArgs) DashboardKPIOptionsPtrInput {
	return (*dashboardKPIOptionsPtrType)(v)
}

func (*dashboardKPIOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIOptions)(nil)).Elem()
}

func (i *dashboardKPIOptionsPtrType) ToDashboardKPIOptionsPtrOutput() DashboardKPIOptionsPtrOutput {
	return i.ToDashboardKPIOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIOptionsPtrType) ToDashboardKPIOptionsPtrOutputWithContext(ctx context.Context) DashboardKPIOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIOptionsPtrOutput)
}

type DashboardKPIOptionsOutput struct{ *pulumi.OutputState }

func (DashboardKPIOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIOptions)(nil)).Elem()
}

func (o DashboardKPIOptionsOutput) ToDashboardKPIOptionsOutput() DashboardKPIOptionsOutput {
	return o
}

func (o DashboardKPIOptionsOutput) ToDashboardKPIOptionsOutputWithContext(ctx context.Context) DashboardKPIOptionsOutput {
	return o
}

func (o DashboardKPIOptionsOutput) ToDashboardKPIOptionsPtrOutput() DashboardKPIOptionsPtrOutput {
	return o.ToDashboardKPIOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardKPIOptionsOutput) ToDashboardKPIOptionsPtrOutputWithContext(ctx context.Context) DashboardKPIOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIOptions) *DashboardKPIOptions {
		return &v
	}).(DashboardKPIOptionsPtrOutput)
}

func (o DashboardKPIOptionsOutput) Comparison() DashboardComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardComparisonConfiguration { return v.Comparison }).(DashboardComparisonConfigurationPtrOutput)
}

func (o DashboardKPIOptionsOutput) PrimaryValueDisplayType() DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardPrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (o DashboardKPIOptionsOutput) PrimaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardFontConfiguration { return v.PrimaryValueFontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardKPIOptionsOutput) ProgressBar() DashboardProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardProgressBarOptions { return v.ProgressBar }).(DashboardProgressBarOptionsPtrOutput)
}

func (o DashboardKPIOptionsOutput) SecondaryValue() DashboardSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardSecondaryValueOptions { return v.SecondaryValue }).(DashboardSecondaryValueOptionsPtrOutput)
}

func (o DashboardKPIOptionsOutput) SecondaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardFontConfiguration { return v.SecondaryValueFontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardKPIOptionsOutput) TrendArrows() DashboardTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIOptions) *DashboardTrendArrowOptions { return v.TrendArrows }).(DashboardTrendArrowOptionsPtrOutput)
}

type DashboardKPIOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIOptions)(nil)).Elem()
}

func (o DashboardKPIOptionsPtrOutput) ToDashboardKPIOptionsPtrOutput() DashboardKPIOptionsPtrOutput {
	return o
}

func (o DashboardKPIOptionsPtrOutput) ToDashboardKPIOptionsPtrOutputWithContext(ctx context.Context) DashboardKPIOptionsPtrOutput {
	return o
}

func (o DashboardKPIOptionsPtrOutput) Elem() DashboardKPIOptionsOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) DashboardKPIOptions {
		if v != nil {
			return *v
		}
		var ret DashboardKPIOptions
		return ret
	}).(DashboardKPIOptionsOutput)
}

func (o DashboardKPIOptionsPtrOutput) Comparison() DashboardComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(DashboardComparisonConfigurationPtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) PrimaryValueDisplayType() DashboardPrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardPrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(DashboardPrimaryValueDisplayTypePtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) PrimaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) ProgressBar() DashboardProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardProgressBarOptions {
		if v == nil {
			return nil
		}
		return v.ProgressBar
	}).(DashboardProgressBarOptionsPtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) SecondaryValue() DashboardSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardSecondaryValueOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryValue
	}).(DashboardSecondaryValueOptionsPtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) SecondaryValueFontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.SecondaryValueFontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardKPIOptionsPtrOutput) TrendArrows() DashboardTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIOptions) *DashboardTrendArrowOptions {
		if v == nil {
			return nil
		}
		return v.TrendArrows
	}).(DashboardTrendArrowOptionsPtrOutput)
}

type DashboardKPIPrimaryValueConditionalFormatting struct {
	Icon      *DashboardConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *DashboardConditionalFormattingColor `pulumi:"textColor"`
}

// DashboardKPIPrimaryValueConditionalFormattingInput is an input type that accepts DashboardKPIPrimaryValueConditionalFormattingArgs and DashboardKPIPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardKPIPrimaryValueConditionalFormattingInput` via:
//
//	DashboardKPIPrimaryValueConditionalFormattingArgs{...}
type DashboardKPIPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardKPIPrimaryValueConditionalFormattingOutput() DashboardKPIPrimaryValueConditionalFormattingOutput
	ToDashboardKPIPrimaryValueConditionalFormattingOutputWithContext(context.Context) DashboardKPIPrimaryValueConditionalFormattingOutput
}

type DashboardKPIPrimaryValueConditionalFormattingArgs struct {
	Icon      DashboardConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor DashboardConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (DashboardKPIPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i DashboardKPIPrimaryValueConditionalFormattingArgs) ToDashboardKPIPrimaryValueConditionalFormattingOutput() DashboardKPIPrimaryValueConditionalFormattingOutput {
	return i.ToDashboardKPIPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardKPIPrimaryValueConditionalFormattingArgs) ToDashboardKPIPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIPrimaryValueConditionalFormattingOutput)
}

func (i DashboardKPIPrimaryValueConditionalFormattingArgs) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutput() DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return i.ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardKPIPrimaryValueConditionalFormattingArgs) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIPrimaryValueConditionalFormattingOutput).ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardKPIPrimaryValueConditionalFormattingPtrInput is an input type that accepts DashboardKPIPrimaryValueConditionalFormattingArgs, DashboardKPIPrimaryValueConditionalFormattingPtr and DashboardKPIPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardKPIPrimaryValueConditionalFormattingPtrInput` via:
//
//	        DashboardKPIPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardKPIPrimaryValueConditionalFormattingPtrOutput() DashboardKPIPrimaryValueConditionalFormattingPtrOutput
	ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) DashboardKPIPrimaryValueConditionalFormattingPtrOutput
}

type dashboardKPIPrimaryValueConditionalFormattingPtrType DashboardKPIPrimaryValueConditionalFormattingArgs

func DashboardKPIPrimaryValueConditionalFormattingPtr(v *DashboardKPIPrimaryValueConditionalFormattingArgs) DashboardKPIPrimaryValueConditionalFormattingPtrInput {
	return (*dashboardKPIPrimaryValueConditionalFormattingPtrType)(v)
}

func (*dashboardKPIPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *dashboardKPIPrimaryValueConditionalFormattingPtrType) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutput() DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return i.ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIPrimaryValueConditionalFormattingPtrType) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIPrimaryValueConditionalFormattingPtrOutput)
}

type DashboardKPIPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardKPIPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) ToDashboardKPIPrimaryValueConditionalFormattingOutput() DashboardKPIPrimaryValueConditionalFormattingOutput {
	return o
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) ToDashboardKPIPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingOutput {
	return o
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutput() DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIPrimaryValueConditionalFormatting) *DashboardKPIPrimaryValueConditionalFormatting {
		return &v
	}).(DashboardKPIPrimaryValueConditionalFormattingPtrOutput)
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v DashboardKPIPrimaryValueConditionalFormatting) *DashboardConditionalFormattingIcon {
		return v.Icon
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardKPIPrimaryValueConditionalFormattingOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardKPIPrimaryValueConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardKPIPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIPrimaryValueConditionalFormattingPtrOutput) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutput() DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIPrimaryValueConditionalFormattingPtrOutput) ToDashboardKPIPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIPrimaryValueConditionalFormattingPtrOutput) Elem() DashboardKPIPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardKPIPrimaryValueConditionalFormatting) DashboardKPIPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardKPIPrimaryValueConditionalFormatting
		return ret
	}).(DashboardKPIPrimaryValueConditionalFormattingOutput)
}

func (o DashboardKPIPrimaryValueConditionalFormattingPtrOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *DashboardKPIPrimaryValueConditionalFormatting) *DashboardConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardKPIPrimaryValueConditionalFormattingPtrOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardKPIPrimaryValueConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardKPIProgressBarConditionalFormatting struct {
	ForegroundColor *DashboardConditionalFormattingColor `pulumi:"foregroundColor"`
}

// DashboardKPIProgressBarConditionalFormattingInput is an input type that accepts DashboardKPIProgressBarConditionalFormattingArgs and DashboardKPIProgressBarConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardKPIProgressBarConditionalFormattingInput` via:
//
//	DashboardKPIProgressBarConditionalFormattingArgs{...}
type DashboardKPIProgressBarConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardKPIProgressBarConditionalFormattingOutput() DashboardKPIProgressBarConditionalFormattingOutput
	ToDashboardKPIProgressBarConditionalFormattingOutputWithContext(context.Context) DashboardKPIProgressBarConditionalFormattingOutput
}

type DashboardKPIProgressBarConditionalFormattingArgs struct {
	ForegroundColor DashboardConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (DashboardKPIProgressBarConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (i DashboardKPIProgressBarConditionalFormattingArgs) ToDashboardKPIProgressBarConditionalFormattingOutput() DashboardKPIProgressBarConditionalFormattingOutput {
	return i.ToDashboardKPIProgressBarConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardKPIProgressBarConditionalFormattingArgs) ToDashboardKPIProgressBarConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIProgressBarConditionalFormattingOutput)
}

func (i DashboardKPIProgressBarConditionalFormattingArgs) ToDashboardKPIProgressBarConditionalFormattingPtrOutput() DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return i.ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardKPIProgressBarConditionalFormattingArgs) ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIProgressBarConditionalFormattingOutput).ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardKPIProgressBarConditionalFormattingPtrInput is an input type that accepts DashboardKPIProgressBarConditionalFormattingArgs, DashboardKPIProgressBarConditionalFormattingPtr and DashboardKPIProgressBarConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardKPIProgressBarConditionalFormattingPtrInput` via:
//
//	        DashboardKPIProgressBarConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIProgressBarConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardKPIProgressBarConditionalFormattingPtrOutput() DashboardKPIProgressBarConditionalFormattingPtrOutput
	ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Context) DashboardKPIProgressBarConditionalFormattingPtrOutput
}

type dashboardKPIProgressBarConditionalFormattingPtrType DashboardKPIProgressBarConditionalFormattingArgs

func DashboardKPIProgressBarConditionalFormattingPtr(v *DashboardKPIProgressBarConditionalFormattingArgs) DashboardKPIProgressBarConditionalFormattingPtrInput {
	return (*dashboardKPIProgressBarConditionalFormattingPtrType)(v)
}

func (*dashboardKPIProgressBarConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (i *dashboardKPIProgressBarConditionalFormattingPtrType) ToDashboardKPIProgressBarConditionalFormattingPtrOutput() DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return i.ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIProgressBarConditionalFormattingPtrType) ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIProgressBarConditionalFormattingPtrOutput)
}

type DashboardKPIProgressBarConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardKPIProgressBarConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIProgressBarConditionalFormattingOutput) ToDashboardKPIProgressBarConditionalFormattingOutput() DashboardKPIProgressBarConditionalFormattingOutput {
	return o
}

func (o DashboardKPIProgressBarConditionalFormattingOutput) ToDashboardKPIProgressBarConditionalFormattingOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingOutput {
	return o
}

func (o DashboardKPIProgressBarConditionalFormattingOutput) ToDashboardKPIProgressBarConditionalFormattingPtrOutput() DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return o.ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardKPIProgressBarConditionalFormattingOutput) ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIProgressBarConditionalFormatting) *DashboardKPIProgressBarConditionalFormatting {
		return &v
	}).(DashboardKPIProgressBarConditionalFormattingPtrOutput)
}

func (o DashboardKPIProgressBarConditionalFormattingOutput) ForegroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardKPIProgressBarConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.ForegroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardKPIProgressBarConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIProgressBarConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIProgressBarConditionalFormatting)(nil)).Elem()
}

func (o DashboardKPIProgressBarConditionalFormattingPtrOutput) ToDashboardKPIProgressBarConditionalFormattingPtrOutput() DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIProgressBarConditionalFormattingPtrOutput) ToDashboardKPIProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardKPIProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o DashboardKPIProgressBarConditionalFormattingPtrOutput) Elem() DashboardKPIProgressBarConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardKPIProgressBarConditionalFormatting) DashboardKPIProgressBarConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardKPIProgressBarConditionalFormatting
		return ret
	}).(DashboardKPIProgressBarConditionalFormattingOutput)
}

func (o DashboardKPIProgressBarConditionalFormattingPtrOutput) ForegroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardKPIProgressBarConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardKPISortConfiguration struct {
	TrendGroupSort []DashboardFieldSortOptions `pulumi:"trendGroupSort"`
}

// DashboardKPISortConfigurationInput is an input type that accepts DashboardKPISortConfigurationArgs and DashboardKPISortConfigurationOutput values.
// You can construct a concrete instance of `DashboardKPISortConfigurationInput` via:
//
//	DashboardKPISortConfigurationArgs{...}
type DashboardKPISortConfigurationInput interface {
	pulumi.Input

	ToDashboardKPISortConfigurationOutput() DashboardKPISortConfigurationOutput
	ToDashboardKPISortConfigurationOutputWithContext(context.Context) DashboardKPISortConfigurationOutput
}

type DashboardKPISortConfigurationArgs struct {
	TrendGroupSort DashboardFieldSortOptionsArrayInput `pulumi:"trendGroupSort"`
}

func (DashboardKPISortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPISortConfiguration)(nil)).Elem()
}

func (i DashboardKPISortConfigurationArgs) ToDashboardKPISortConfigurationOutput() DashboardKPISortConfigurationOutput {
	return i.ToDashboardKPISortConfigurationOutputWithContext(context.Background())
}

func (i DashboardKPISortConfigurationArgs) ToDashboardKPISortConfigurationOutputWithContext(ctx context.Context) DashboardKPISortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPISortConfigurationOutput)
}

func (i DashboardKPISortConfigurationArgs) ToDashboardKPISortConfigurationPtrOutput() DashboardKPISortConfigurationPtrOutput {
	return i.ToDashboardKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardKPISortConfigurationArgs) ToDashboardKPISortConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPISortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPISortConfigurationOutput).ToDashboardKPISortConfigurationPtrOutputWithContext(ctx)
}

// DashboardKPISortConfigurationPtrInput is an input type that accepts DashboardKPISortConfigurationArgs, DashboardKPISortConfigurationPtr and DashboardKPISortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardKPISortConfigurationPtrInput` via:
//
//	        DashboardKPISortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardKPISortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardKPISortConfigurationPtrOutput() DashboardKPISortConfigurationPtrOutput
	ToDashboardKPISortConfigurationPtrOutputWithContext(context.Context) DashboardKPISortConfigurationPtrOutput
}

type dashboardKPISortConfigurationPtrType DashboardKPISortConfigurationArgs

func DashboardKPISortConfigurationPtr(v *DashboardKPISortConfigurationArgs) DashboardKPISortConfigurationPtrInput {
	return (*dashboardKPISortConfigurationPtrType)(v)
}

func (*dashboardKPISortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPISortConfiguration)(nil)).Elem()
}

func (i *dashboardKPISortConfigurationPtrType) ToDashboardKPISortConfigurationPtrOutput() DashboardKPISortConfigurationPtrOutput {
	return i.ToDashboardKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardKPISortConfigurationPtrType) ToDashboardKPISortConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPISortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPISortConfigurationPtrOutput)
}

type DashboardKPISortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardKPISortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPISortConfiguration)(nil)).Elem()
}

func (o DashboardKPISortConfigurationOutput) ToDashboardKPISortConfigurationOutput() DashboardKPISortConfigurationOutput {
	return o
}

func (o DashboardKPISortConfigurationOutput) ToDashboardKPISortConfigurationOutputWithContext(ctx context.Context) DashboardKPISortConfigurationOutput {
	return o
}

func (o DashboardKPISortConfigurationOutput) ToDashboardKPISortConfigurationPtrOutput() DashboardKPISortConfigurationPtrOutput {
	return o.ToDashboardKPISortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardKPISortConfigurationOutput) ToDashboardKPISortConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPISortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPISortConfiguration) *DashboardKPISortConfiguration {
		return &v
	}).(DashboardKPISortConfigurationPtrOutput)
}

func (o DashboardKPISortConfigurationOutput) TrendGroupSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardKPISortConfiguration) []DashboardFieldSortOptions { return v.TrendGroupSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardKPISortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPISortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPISortConfiguration)(nil)).Elem()
}

func (o DashboardKPISortConfigurationPtrOutput) ToDashboardKPISortConfigurationPtrOutput() DashboardKPISortConfigurationPtrOutput {
	return o
}

func (o DashboardKPISortConfigurationPtrOutput) ToDashboardKPISortConfigurationPtrOutputWithContext(ctx context.Context) DashboardKPISortConfigurationPtrOutput {
	return o
}

func (o DashboardKPISortConfigurationPtrOutput) Elem() DashboardKPISortConfigurationOutput {
	return o.ApplyT(func(v *DashboardKPISortConfiguration) DashboardKPISortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardKPISortConfiguration
		return ret
	}).(DashboardKPISortConfigurationOutput)
}

func (o DashboardKPISortConfigurationPtrOutput) TrendGroupSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardKPISortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TrendGroupSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardKPIVisual struct {
	Actions               []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *DashboardKPIConfiguration           `pulumi:"chartConfiguration"`
	ColumnHierarchies     []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	ConditionalFormatting *DashboardKPIConditionalFormatting   `pulumi:"conditionalFormatting"`
	Subtitle              *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                               `pulumi:"visualId"`
}

// DashboardKPIVisualInput is an input type that accepts DashboardKPIVisualArgs and DashboardKPIVisualOutput values.
// You can construct a concrete instance of `DashboardKPIVisualInput` via:
//
//	DashboardKPIVisualArgs{...}
type DashboardKPIVisualInput interface {
	pulumi.Input

	ToDashboardKPIVisualOutput() DashboardKPIVisualOutput
	ToDashboardKPIVisualOutputWithContext(context.Context) DashboardKPIVisualOutput
}

type DashboardKPIVisualArgs struct {
	Actions               DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    DashboardKPIConfigurationPtrInput           `pulumi:"chartConfiguration"`
	ColumnHierarchies     DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	ConditionalFormatting DashboardKPIConditionalFormattingPtrInput   `pulumi:"conditionalFormatting"`
	Subtitle              DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardKPIVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIVisual)(nil)).Elem()
}

func (i DashboardKPIVisualArgs) ToDashboardKPIVisualOutput() DashboardKPIVisualOutput {
	return i.ToDashboardKPIVisualOutputWithContext(context.Background())
}

func (i DashboardKPIVisualArgs) ToDashboardKPIVisualOutputWithContext(ctx context.Context) DashboardKPIVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIVisualOutput)
}

func (i DashboardKPIVisualArgs) ToDashboardKPIVisualPtrOutput() DashboardKPIVisualPtrOutput {
	return i.ToDashboardKPIVisualPtrOutputWithContext(context.Background())
}

func (i DashboardKPIVisualArgs) ToDashboardKPIVisualPtrOutputWithContext(ctx context.Context) DashboardKPIVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIVisualOutput).ToDashboardKPIVisualPtrOutputWithContext(ctx)
}

// DashboardKPIVisualPtrInput is an input type that accepts DashboardKPIVisualArgs, DashboardKPIVisualPtr and DashboardKPIVisualPtrOutput values.
// You can construct a concrete instance of `DashboardKPIVisualPtrInput` via:
//
//	        DashboardKPIVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardKPIVisualPtrInput interface {
	pulumi.Input

	ToDashboardKPIVisualPtrOutput() DashboardKPIVisualPtrOutput
	ToDashboardKPIVisualPtrOutputWithContext(context.Context) DashboardKPIVisualPtrOutput
}

type dashboardKPIVisualPtrType DashboardKPIVisualArgs

func DashboardKPIVisualPtr(v *DashboardKPIVisualArgs) DashboardKPIVisualPtrInput {
	return (*dashboardKPIVisualPtrType)(v)
}

func (*dashboardKPIVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIVisual)(nil)).Elem()
}

func (i *dashboardKPIVisualPtrType) ToDashboardKPIVisualPtrOutput() DashboardKPIVisualPtrOutput {
	return i.ToDashboardKPIVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardKPIVisualPtrType) ToDashboardKPIVisualPtrOutputWithContext(ctx context.Context) DashboardKPIVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardKPIVisualPtrOutput)
}

type DashboardKPIVisualOutput struct{ *pulumi.OutputState }

func (DashboardKPIVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardKPIVisual)(nil)).Elem()
}

func (o DashboardKPIVisualOutput) ToDashboardKPIVisualOutput() DashboardKPIVisualOutput {
	return o
}

func (o DashboardKPIVisualOutput) ToDashboardKPIVisualOutputWithContext(ctx context.Context) DashboardKPIVisualOutput {
	return o
}

func (o DashboardKPIVisualOutput) ToDashboardKPIVisualPtrOutput() DashboardKPIVisualPtrOutput {
	return o.ToDashboardKPIVisualPtrOutputWithContext(context.Background())
}

func (o DashboardKPIVisualOutput) ToDashboardKPIVisualPtrOutputWithContext(ctx context.Context) DashboardKPIVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardKPIVisual) *DashboardKPIVisual {
		return &v
	}).(DashboardKPIVisualPtrOutput)
}

func (o DashboardKPIVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardKPIVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardKPIVisualOutput) ChartConfiguration() DashboardKPIConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardKPIVisual) *DashboardKPIConfiguration { return v.ChartConfiguration }).(DashboardKPIConfigurationPtrOutput)
}

func (o DashboardKPIVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardKPIVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardKPIVisualOutput) ConditionalFormatting() DashboardKPIConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardKPIVisual) *DashboardKPIConditionalFormatting { return v.ConditionalFormatting }).(DashboardKPIConditionalFormattingPtrOutput)
}

func (o DashboardKPIVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardKPIVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardKPIVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardKPIVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardKPIVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardKPIVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardKPIVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardKPIVisual)(nil)).Elem()
}

func (o DashboardKPIVisualPtrOutput) ToDashboardKPIVisualPtrOutput() DashboardKPIVisualPtrOutput {
	return o
}

func (o DashboardKPIVisualPtrOutput) ToDashboardKPIVisualPtrOutputWithContext(ctx context.Context) DashboardKPIVisualPtrOutput {
	return o
}

func (o DashboardKPIVisualPtrOutput) Elem() DashboardKPIVisualOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) DashboardKPIVisual {
		if v != nil {
			return *v
		}
		var ret DashboardKPIVisual
		return ret
	}).(DashboardKPIVisualOutput)
}

func (o DashboardKPIVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardKPIVisualPtrOutput) ChartConfiguration() DashboardKPIConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) *DashboardKPIConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardKPIConfigurationPtrOutput)
}

func (o DashboardKPIVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardKPIVisualPtrOutput) ConditionalFormatting() DashboardKPIConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) *DashboardKPIConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(DashboardKPIConditionalFormattingPtrOutput)
}

func (o DashboardKPIVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardKPIVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardKPIVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardKPIVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardLabelOptions struct {
	CustomLabel       *string                     `pulumi:"customLabel"`
	FontConfiguration *DashboardFontConfiguration `pulumi:"fontConfiguration"`
	Visibility        *DashboardVisibility        `pulumi:"visibility"`
}

// DashboardLabelOptionsInput is an input type that accepts DashboardLabelOptionsArgs and DashboardLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardLabelOptionsInput` via:
//
//	DashboardLabelOptionsArgs{...}
type DashboardLabelOptionsInput interface {
	pulumi.Input

	ToDashboardLabelOptionsOutput() DashboardLabelOptionsOutput
	ToDashboardLabelOptionsOutputWithContext(context.Context) DashboardLabelOptionsOutput
}

type DashboardLabelOptionsArgs struct {
	CustomLabel       pulumi.StringPtrInput              `pulumi:"customLabel"`
	FontConfiguration DashboardFontConfigurationPtrInput `pulumi:"fontConfiguration"`
	Visibility        DashboardVisibilityPtrInput        `pulumi:"visibility"`
}

func (DashboardLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLabelOptions)(nil)).Elem()
}

func (i DashboardLabelOptionsArgs) ToDashboardLabelOptionsOutput() DashboardLabelOptionsOutput {
	return i.ToDashboardLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardLabelOptionsArgs) ToDashboardLabelOptionsOutputWithContext(ctx context.Context) DashboardLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLabelOptionsOutput)
}

func (i DashboardLabelOptionsArgs) ToDashboardLabelOptionsPtrOutput() DashboardLabelOptionsPtrOutput {
	return i.ToDashboardLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardLabelOptionsArgs) ToDashboardLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLabelOptionsOutput).ToDashboardLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardLabelOptionsPtrInput is an input type that accepts DashboardLabelOptionsArgs, DashboardLabelOptionsPtr and DashboardLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardLabelOptionsPtrInput` via:
//
//	        DashboardLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardLabelOptionsPtrOutput() DashboardLabelOptionsPtrOutput
	ToDashboardLabelOptionsPtrOutputWithContext(context.Context) DashboardLabelOptionsPtrOutput
}

type dashboardLabelOptionsPtrType DashboardLabelOptionsArgs

func DashboardLabelOptionsPtr(v *DashboardLabelOptionsArgs) DashboardLabelOptionsPtrInput {
	return (*dashboardLabelOptionsPtrType)(v)
}

func (*dashboardLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLabelOptions)(nil)).Elem()
}

func (i *dashboardLabelOptionsPtrType) ToDashboardLabelOptionsPtrOutput() DashboardLabelOptionsPtrOutput {
	return i.ToDashboardLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardLabelOptionsPtrType) ToDashboardLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLabelOptionsPtrOutput)
}

type DashboardLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLabelOptions)(nil)).Elem()
}

func (o DashboardLabelOptionsOutput) ToDashboardLabelOptionsOutput() DashboardLabelOptionsOutput {
	return o
}

func (o DashboardLabelOptionsOutput) ToDashboardLabelOptionsOutputWithContext(ctx context.Context) DashboardLabelOptionsOutput {
	return o
}

func (o DashboardLabelOptionsOutput) ToDashboardLabelOptionsPtrOutput() DashboardLabelOptionsPtrOutput {
	return o.ToDashboardLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardLabelOptionsOutput) ToDashboardLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLabelOptions) *DashboardLabelOptions {
		return &v
	}).(DashboardLabelOptionsPtrOutput)
}

func (o DashboardLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardLabelOptionsOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLabelOptions) *DashboardFontConfiguration { return v.FontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLabelOptions)(nil)).Elem()
}

func (o DashboardLabelOptionsPtrOutput) ToDashboardLabelOptionsPtrOutput() DashboardLabelOptionsPtrOutput {
	return o
}

func (o DashboardLabelOptionsPtrOutput) ToDashboardLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardLabelOptionsPtrOutput {
	return o
}

func (o DashboardLabelOptionsPtrOutput) Elem() DashboardLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardLabelOptions) DashboardLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardLabelOptions
		return ret
	}).(DashboardLabelOptionsOutput)
}

func (o DashboardLabelOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o DashboardLabelOptionsPtrOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLabelOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardLayout struct {
	Configuration DashboardLayoutConfiguration `pulumi:"configuration"`
}

// DashboardLayoutInput is an input type that accepts DashboardLayoutArgs and DashboardLayoutOutput values.
// You can construct a concrete instance of `DashboardLayoutInput` via:
//
//	DashboardLayoutArgs{...}
type DashboardLayoutInput interface {
	pulumi.Input

	ToDashboardLayoutOutput() DashboardLayoutOutput
	ToDashboardLayoutOutputWithContext(context.Context) DashboardLayoutOutput
}

type DashboardLayoutArgs struct {
	Configuration DashboardLayoutConfigurationInput `pulumi:"configuration"`
}

func (DashboardLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return i.ToDashboardLayoutOutputWithContext(context.Background())
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutOutput)
}

// DashboardLayoutArrayInput is an input type that accepts DashboardLayoutArray and DashboardLayoutArrayOutput values.
// You can construct a concrete instance of `DashboardLayoutArrayInput` via:
//
//	DashboardLayoutArray{ DashboardLayoutArgs{...} }
type DashboardLayoutArrayInput interface {
	pulumi.Input

	ToDashboardLayoutArrayOutput() DashboardLayoutArrayOutput
	ToDashboardLayoutArrayOutputWithContext(context.Context) DashboardLayoutArrayOutput
}

type DashboardLayoutArray []DashboardLayoutInput

func (DashboardLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayout)(nil)).Elem()
}

func (i DashboardLayoutArray) ToDashboardLayoutArrayOutput() DashboardLayoutArrayOutput {
	return i.ToDashboardLayoutArrayOutputWithContext(context.Background())
}

func (i DashboardLayoutArray) ToDashboardLayoutArrayOutputWithContext(ctx context.Context) DashboardLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutArrayOutput)
}

type DashboardLayoutOutput struct{ *pulumi.OutputState }

func (DashboardLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) Configuration() DashboardLayoutConfigurationOutput {
	return o.ApplyT(func(v DashboardLayout) DashboardLayoutConfiguration { return v.Configuration }).(DashboardLayoutConfigurationOutput)
}

type DashboardLayoutArrayOutput struct{ *pulumi.OutputState }

func (DashboardLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutArrayOutput) ToDashboardLayoutArrayOutput() DashboardLayoutArrayOutput {
	return o
}

func (o DashboardLayoutArrayOutput) ToDashboardLayoutArrayOutputWithContext(ctx context.Context) DashboardLayoutArrayOutput {
	return o
}

func (o DashboardLayoutArrayOutput) Index(i pulumi.IntInput) DashboardLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardLayout {
		return vs[0].([]DashboardLayout)[vs[1].(int)]
	}).(DashboardLayoutOutput)
}

type DashboardLayoutConfiguration struct {
	FreeFormLayout     *DashboardFreeFormLayoutConfiguration     `pulumi:"freeFormLayout"`
	GridLayout         *DashboardGridLayoutConfiguration         `pulumi:"gridLayout"`
	SectionBasedLayout *DashboardSectionBasedLayoutConfiguration `pulumi:"sectionBasedLayout"`
}

// DashboardLayoutConfigurationInput is an input type that accepts DashboardLayoutConfigurationArgs and DashboardLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardLayoutConfigurationInput` via:
//
//	DashboardLayoutConfigurationArgs{...}
type DashboardLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardLayoutConfigurationOutput() DashboardLayoutConfigurationOutput
	ToDashboardLayoutConfigurationOutputWithContext(context.Context) DashboardLayoutConfigurationOutput
}

type DashboardLayoutConfigurationArgs struct {
	FreeFormLayout     DashboardFreeFormLayoutConfigurationPtrInput     `pulumi:"freeFormLayout"`
	GridLayout         DashboardGridLayoutConfigurationPtrInput         `pulumi:"gridLayout"`
	SectionBasedLayout DashboardSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBasedLayout"`
}

func (DashboardLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutConfiguration)(nil)).Elem()
}

func (i DashboardLayoutConfigurationArgs) ToDashboardLayoutConfigurationOutput() DashboardLayoutConfigurationOutput {
	return i.ToDashboardLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardLayoutConfigurationArgs) ToDashboardLayoutConfigurationOutputWithContext(ctx context.Context) DashboardLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutConfigurationOutput)
}

type DashboardLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutConfiguration)(nil)).Elem()
}

func (o DashboardLayoutConfigurationOutput) ToDashboardLayoutConfigurationOutput() DashboardLayoutConfigurationOutput {
	return o
}

func (o DashboardLayoutConfigurationOutput) ToDashboardLayoutConfigurationOutputWithContext(ctx context.Context) DashboardLayoutConfigurationOutput {
	return o
}

func (o DashboardLayoutConfigurationOutput) FreeFormLayout() DashboardFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLayoutConfiguration) *DashboardFreeFormLayoutConfiguration { return v.FreeFormLayout }).(DashboardFreeFormLayoutConfigurationPtrOutput)
}

func (o DashboardLayoutConfigurationOutput) GridLayout() DashboardGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLayoutConfiguration) *DashboardGridLayoutConfiguration { return v.GridLayout }).(DashboardGridLayoutConfigurationPtrOutput)
}

func (o DashboardLayoutConfigurationOutput) SectionBasedLayout() DashboardSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLayoutConfiguration) *DashboardSectionBasedLayoutConfiguration {
		return v.SectionBasedLayout
	}).(DashboardSectionBasedLayoutConfigurationPtrOutput)
}

type DashboardLegendOptions struct {
	// String based length that is composed of value and unit in px
	Height     *string                  `pulumi:"height"`
	Position   *DashboardLegendPosition `pulumi:"position"`
	Title      *DashboardLabelOptions   `pulumi:"title"`
	Visibility *DashboardVisibility     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// DashboardLegendOptionsInput is an input type that accepts DashboardLegendOptionsArgs and DashboardLegendOptionsOutput values.
// You can construct a concrete instance of `DashboardLegendOptionsInput` via:
//
//	DashboardLegendOptionsArgs{...}
type DashboardLegendOptionsInput interface {
	pulumi.Input

	ToDashboardLegendOptionsOutput() DashboardLegendOptionsOutput
	ToDashboardLegendOptionsOutputWithContext(context.Context) DashboardLegendOptionsOutput
}

type DashboardLegendOptionsArgs struct {
	// String based length that is composed of value and unit in px
	Height     pulumi.StringPtrInput           `pulumi:"height"`
	Position   DashboardLegendPositionPtrInput `pulumi:"position"`
	Title      DashboardLabelOptionsPtrInput   `pulumi:"title"`
	Visibility DashboardVisibilityPtrInput     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (DashboardLegendOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLegendOptions)(nil)).Elem()
}

func (i DashboardLegendOptionsArgs) ToDashboardLegendOptionsOutput() DashboardLegendOptionsOutput {
	return i.ToDashboardLegendOptionsOutputWithContext(context.Background())
}

func (i DashboardLegendOptionsArgs) ToDashboardLegendOptionsOutputWithContext(ctx context.Context) DashboardLegendOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLegendOptionsOutput)
}

func (i DashboardLegendOptionsArgs) ToDashboardLegendOptionsPtrOutput() DashboardLegendOptionsPtrOutput {
	return i.ToDashboardLegendOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardLegendOptionsArgs) ToDashboardLegendOptionsPtrOutputWithContext(ctx context.Context) DashboardLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLegendOptionsOutput).ToDashboardLegendOptionsPtrOutputWithContext(ctx)
}

// DashboardLegendOptionsPtrInput is an input type that accepts DashboardLegendOptionsArgs, DashboardLegendOptionsPtr and DashboardLegendOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardLegendOptionsPtrInput` via:
//
//	        DashboardLegendOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardLegendOptionsPtrInput interface {
	pulumi.Input

	ToDashboardLegendOptionsPtrOutput() DashboardLegendOptionsPtrOutput
	ToDashboardLegendOptionsPtrOutputWithContext(context.Context) DashboardLegendOptionsPtrOutput
}

type dashboardLegendOptionsPtrType DashboardLegendOptionsArgs

func DashboardLegendOptionsPtr(v *DashboardLegendOptionsArgs) DashboardLegendOptionsPtrInput {
	return (*dashboardLegendOptionsPtrType)(v)
}

func (*dashboardLegendOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLegendOptions)(nil)).Elem()
}

func (i *dashboardLegendOptionsPtrType) ToDashboardLegendOptionsPtrOutput() DashboardLegendOptionsPtrOutput {
	return i.ToDashboardLegendOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardLegendOptionsPtrType) ToDashboardLegendOptionsPtrOutputWithContext(ctx context.Context) DashboardLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLegendOptionsPtrOutput)
}

type DashboardLegendOptionsOutput struct{ *pulumi.OutputState }

func (DashboardLegendOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLegendOptions)(nil)).Elem()
}

func (o DashboardLegendOptionsOutput) ToDashboardLegendOptionsOutput() DashboardLegendOptionsOutput {
	return o
}

func (o DashboardLegendOptionsOutput) ToDashboardLegendOptionsOutputWithContext(ctx context.Context) DashboardLegendOptionsOutput {
	return o
}

func (o DashboardLegendOptionsOutput) ToDashboardLegendOptionsPtrOutput() DashboardLegendOptionsPtrOutput {
	return o.ToDashboardLegendOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardLegendOptionsOutput) ToDashboardLegendOptionsPtrOutputWithContext(ctx context.Context) DashboardLegendOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLegendOptions) *DashboardLegendOptions {
		return &v
	}).(DashboardLegendOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLegendOptionsOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLegendOptions) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o DashboardLegendOptionsOutput) Position() DashboardLegendPositionPtrOutput {
	return o.ApplyT(func(v DashboardLegendOptions) *DashboardLegendPosition { return v.Position }).(DashboardLegendPositionPtrOutput)
}

func (o DashboardLegendOptionsOutput) Title() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLegendOptions) *DashboardLabelOptions { return v.Title }).(DashboardLabelOptionsPtrOutput)
}

func (o DashboardLegendOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardLegendOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLegendOptionsOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLegendOptions) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type DashboardLegendOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLegendOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLegendOptions)(nil)).Elem()
}

func (o DashboardLegendOptionsPtrOutput) ToDashboardLegendOptionsPtrOutput() DashboardLegendOptionsPtrOutput {
	return o
}

func (o DashboardLegendOptionsPtrOutput) ToDashboardLegendOptionsPtrOutputWithContext(ctx context.Context) DashboardLegendOptionsPtrOutput {
	return o
}

func (o DashboardLegendOptionsPtrOutput) Elem() DashboardLegendOptionsOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) DashboardLegendOptions {
		if v != nil {
			return *v
		}
		var ret DashboardLegendOptions
		return ret
	}).(DashboardLegendOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLegendOptionsPtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o DashboardLegendOptionsPtrOutput) Position() DashboardLegendPositionPtrOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) *DashboardLegendPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(DashboardLegendPositionPtrOutput)
}

func (o DashboardLegendOptionsPtrOutput) Title() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardLabelOptionsPtrOutput)
}

func (o DashboardLegendOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLegendOptionsPtrOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.StringPtrOutput)
}

type DashboardLineChartAggregatedFieldWells struct {
	Category       []DashboardDimensionField `pulumi:"category"`
	Colors         []DashboardDimensionField `pulumi:"colors"`
	SmallMultiples []DashboardDimensionField `pulumi:"smallMultiples"`
	Values         []DashboardMeasureField   `pulumi:"values"`
}

// DashboardLineChartAggregatedFieldWellsInput is an input type that accepts DashboardLineChartAggregatedFieldWellsArgs and DashboardLineChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardLineChartAggregatedFieldWellsInput` via:
//
//	DashboardLineChartAggregatedFieldWellsArgs{...}
type DashboardLineChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardLineChartAggregatedFieldWellsOutput() DashboardLineChartAggregatedFieldWellsOutput
	ToDashboardLineChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardLineChartAggregatedFieldWellsOutput
}

type DashboardLineChartAggregatedFieldWellsArgs struct {
	Category       DashboardDimensionFieldArrayInput `pulumi:"category"`
	Colors         DashboardDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples DashboardDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardLineChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardLineChartAggregatedFieldWellsArgs) ToDashboardLineChartAggregatedFieldWellsOutput() DashboardLineChartAggregatedFieldWellsOutput {
	return i.ToDashboardLineChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardLineChartAggregatedFieldWellsArgs) ToDashboardLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartAggregatedFieldWellsOutput)
}

func (i DashboardLineChartAggregatedFieldWellsArgs) ToDashboardLineChartAggregatedFieldWellsPtrOutput() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartAggregatedFieldWellsArgs) ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartAggregatedFieldWellsOutput).ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardLineChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardLineChartAggregatedFieldWellsArgs, DashboardLineChartAggregatedFieldWellsPtr and DashboardLineChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardLineChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartAggregatedFieldWellsPtrOutput() DashboardLineChartAggregatedFieldWellsPtrOutput
	ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardLineChartAggregatedFieldWellsPtrOutput
}

type dashboardLineChartAggregatedFieldWellsPtrType DashboardLineChartAggregatedFieldWellsArgs

func DashboardLineChartAggregatedFieldWellsPtr(v *DashboardLineChartAggregatedFieldWellsArgs) DashboardLineChartAggregatedFieldWellsPtrInput {
	return (*dashboardLineChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardLineChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardLineChartAggregatedFieldWellsPtrType) ToDashboardLineChartAggregatedFieldWellsPtrOutput() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartAggregatedFieldWellsPtrType) ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartAggregatedFieldWellsPtrOutput)
}

type DashboardLineChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardLineChartAggregatedFieldWellsOutput) ToDashboardLineChartAggregatedFieldWellsOutput() DashboardLineChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardLineChartAggregatedFieldWellsOutput) ToDashboardLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardLineChartAggregatedFieldWellsOutput) ToDashboardLineChartAggregatedFieldWellsPtrOutput() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartAggregatedFieldWellsOutput) ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartAggregatedFieldWells) *DashboardLineChartAggregatedFieldWells {
		return &v
	}).(DashboardLineChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardLineChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardLineChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardLineChartAggregatedFieldWells) []DashboardDimensionField { return v.Colors }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardLineChartAggregatedFieldWells) []DashboardDimensionField { return v.SmallMultiples }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardLineChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardLineChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) ToDashboardLineChartAggregatedFieldWellsPtrOutput() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) ToDashboardLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) Elem() DashboardLineChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardLineChartAggregatedFieldWells) DashboardLineChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartAggregatedFieldWells
		return ret
	}).(DashboardLineChartAggregatedFieldWellsOutput)
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) Colors() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardLineChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardLineChartConfiguration struct {
	ContributionAnalysisDefaults []DashboardContributionAnalysisDefault   `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *DashboardDataLabelOptions               `pulumi:"dataLabels"`
	DefaultSeriesSettings        *DashboardLineChartDefaultSeriesSettings `pulumi:"defaultSeriesSettings"`
	FieldWells                   *DashboardLineChartFieldWells            `pulumi:"fieldWells"`
	ForecastConfigurations       []DashboardForecastConfiguration         `pulumi:"forecastConfigurations"`
	Legend                       *DashboardLegendOptions                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   *DashboardLineSeriesAxisDisplayOptions   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *DashboardChartAxisLabelOptions          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []DashboardReferenceLine                 `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *DashboardLineSeriesAxisDisplayOptions   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *DashboardChartAxisLabelOptions          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       []DashboardSeriesItem                    `pulumi:"series"`
	SmallMultiplesOptions        *DashboardSmallMultiplesOptions          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *DashboardLineChartSortConfiguration     `pulumi:"sortConfiguration"`
	Tooltip                      *DashboardTooltipOptions                 `pulumi:"tooltip"`
	Type                         *DashboardLineChartType                  `pulumi:"type"`
	VisualPalette                *DashboardVisualPalette                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          *DashboardAxisDisplayOptions             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            *DashboardChartAxisLabelOptions          `pulumi:"xAxisLabelOptions"`
}

// DashboardLineChartConfigurationInput is an input type that accepts DashboardLineChartConfigurationArgs and DashboardLineChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardLineChartConfigurationInput` via:
//
//	DashboardLineChartConfigurationArgs{...}
type DashboardLineChartConfigurationInput interface {
	pulumi.Input

	ToDashboardLineChartConfigurationOutput() DashboardLineChartConfigurationOutput
	ToDashboardLineChartConfigurationOutputWithContext(context.Context) DashboardLineChartConfigurationOutput
}

type DashboardLineChartConfigurationArgs struct {
	ContributionAnalysisDefaults DashboardContributionAnalysisDefaultArrayInput  `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   DashboardDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	DefaultSeriesSettings        DashboardLineChartDefaultSeriesSettingsPtrInput `pulumi:"defaultSeriesSettings"`
	FieldWells                   DashboardLineChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	ForecastConfigurations       DashboardForecastConfigurationArrayInput        `pulumi:"forecastConfigurations"`
	Legend                       DashboardLegendOptionsPtrInput                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   DashboardLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     DashboardChartAxisLabelOptionsPtrInput          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               DashboardReferenceLineArrayInput                `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions DashboardLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       DashboardSeriesItemArrayInput                   `pulumi:"series"`
	SmallMultiplesOptions        DashboardSmallMultiplesOptionsPtrInput          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            DashboardLineChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      DashboardTooltipOptionsPtrInput                 `pulumi:"tooltip"`
	Type                         DashboardLineChartTypePtrInput                  `pulumi:"type"`
	VisualPalette                DashboardVisualPalettePtrInput                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          DashboardAxisDisplayOptionsPtrInput             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            DashboardChartAxisLabelOptionsPtrInput          `pulumi:"xAxisLabelOptions"`
}

func (DashboardLineChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartConfiguration)(nil)).Elem()
}

func (i DashboardLineChartConfigurationArgs) ToDashboardLineChartConfigurationOutput() DashboardLineChartConfigurationOutput {
	return i.ToDashboardLineChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardLineChartConfigurationArgs) ToDashboardLineChartConfigurationOutputWithContext(ctx context.Context) DashboardLineChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartConfigurationOutput)
}

func (i DashboardLineChartConfigurationArgs) ToDashboardLineChartConfigurationPtrOutput() DashboardLineChartConfigurationPtrOutput {
	return i.ToDashboardLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartConfigurationArgs) ToDashboardLineChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartConfigurationOutput).ToDashboardLineChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardLineChartConfigurationPtrInput is an input type that accepts DashboardLineChartConfigurationArgs, DashboardLineChartConfigurationPtr and DashboardLineChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartConfigurationPtrInput` via:
//
//	        DashboardLineChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardLineChartConfigurationPtrOutput() DashboardLineChartConfigurationPtrOutput
	ToDashboardLineChartConfigurationPtrOutputWithContext(context.Context) DashboardLineChartConfigurationPtrOutput
}

type dashboardLineChartConfigurationPtrType DashboardLineChartConfigurationArgs

func DashboardLineChartConfigurationPtr(v *DashboardLineChartConfigurationArgs) DashboardLineChartConfigurationPtrInput {
	return (*dashboardLineChartConfigurationPtrType)(v)
}

func (*dashboardLineChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartConfiguration)(nil)).Elem()
}

func (i *dashboardLineChartConfigurationPtrType) ToDashboardLineChartConfigurationPtrOutput() DashboardLineChartConfigurationPtrOutput {
	return i.ToDashboardLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartConfigurationPtrType) ToDashboardLineChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartConfigurationPtrOutput)
}

type DashboardLineChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardLineChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartConfiguration)(nil)).Elem()
}

func (o DashboardLineChartConfigurationOutput) ToDashboardLineChartConfigurationOutput() DashboardLineChartConfigurationOutput {
	return o
}

func (o DashboardLineChartConfigurationOutput) ToDashboardLineChartConfigurationOutputWithContext(ctx context.Context) DashboardLineChartConfigurationOutput {
	return o
}

func (o DashboardLineChartConfigurationOutput) ToDashboardLineChartConfigurationPtrOutput() DashboardLineChartConfigurationPtrOutput {
	return o.ToDashboardLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartConfigurationOutput) ToDashboardLineChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartConfiguration) *DashboardLineChartConfiguration {
		return &v
	}).(DashboardLineChartConfigurationPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) []DashboardContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardLineChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) DefaultSeriesSettings() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineChartDefaultSeriesSettings {
		return v.DefaultSeriesSettings
	}).(DashboardLineChartDefaultSeriesSettingsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) FieldWells() DashboardLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineChartFieldWells { return v.FieldWells }).(DashboardLineChartFieldWellsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) ForecastConfigurations() DashboardForecastConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) []DashboardForecastConfiguration {
		return v.ForecastConfigurations
	}).(DashboardForecastConfigurationArrayOutput)
}

func (o DashboardLineChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) PrimaryYAxisDisplayOptions() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineSeriesAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) []DashboardReferenceLine { return v.ReferenceLines }).(DashboardReferenceLineArrayOutput)
}

func (o DashboardLineChartConfigurationOutput) SecondaryYAxisDisplayOptions() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineSeriesAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) SecondaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) Series() DashboardSeriesItemArrayOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) []DashboardSeriesItem { return v.Series }).(DashboardSeriesItemArrayOutput)
}

func (o DashboardLineChartConfigurationOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardSmallMultiplesOptions {
		return v.SmallMultiplesOptions
	}).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) SortConfiguration() DashboardLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineChartSortConfiguration {
		return v.SortConfiguration
	}).(DashboardLineChartSortConfigurationPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) Type() DashboardLineChartTypePtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardLineChartType { return v.Type }).(DashboardLineChartTypePtrOutput)
}

func (o DashboardLineChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

func (o DashboardLineChartConfigurationOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardAxisDisplayOptions { return v.XAxisDisplayOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions { return v.XAxisLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

type DashboardLineChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartConfiguration)(nil)).Elem()
}

func (o DashboardLineChartConfigurationPtrOutput) ToDashboardLineChartConfigurationPtrOutput() DashboardLineChartConfigurationPtrOutput {
	return o
}

func (o DashboardLineChartConfigurationPtrOutput) ToDashboardLineChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartConfigurationPtrOutput {
	return o
}

func (o DashboardLineChartConfigurationPtrOutput) Elem() DashboardLineChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) DashboardLineChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartConfiguration
		return ret
	}).(DashboardLineChartConfigurationOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) []DashboardContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) DefaultSeriesSettings() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineChartDefaultSeriesSettings {
		if v == nil {
			return nil
		}
		return v.DefaultSeriesSettings
	}).(DashboardLineChartDefaultSeriesSettingsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) FieldWells() DashboardLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardLineChartFieldWellsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) ForecastConfigurations() DashboardForecastConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) []DashboardForecastConfiguration {
		if v == nil {
			return nil
		}
		return v.ForecastConfigurations
	}).(DashboardForecastConfigurationArrayOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) ReferenceLines() DashboardReferenceLineArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) []DashboardReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(DashboardReferenceLineArrayOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) Series() DashboardSeriesItemArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) []DashboardSeriesItem {
		if v == nil {
			return nil
		}
		return v.Series
	}).(DashboardSeriesItemArrayOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) SortConfiguration() DashboardLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardLineChartSortConfigurationPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) Type() DashboardLineChartTypePtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardLineChartType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardLineChartTypePtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineChartConfigurationPtrOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

type DashboardLineChartDefaultSeriesSettings struct {
	AxisBinding         *DashboardAxisBinding                  `pulumi:"axisBinding"`
	LineStyleSettings   *DashboardLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *DashboardLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// DashboardLineChartDefaultSeriesSettingsInput is an input type that accepts DashboardLineChartDefaultSeriesSettingsArgs and DashboardLineChartDefaultSeriesSettingsOutput values.
// You can construct a concrete instance of `DashboardLineChartDefaultSeriesSettingsInput` via:
//
//	DashboardLineChartDefaultSeriesSettingsArgs{...}
type DashboardLineChartDefaultSeriesSettingsInput interface {
	pulumi.Input

	ToDashboardLineChartDefaultSeriesSettingsOutput() DashboardLineChartDefaultSeriesSettingsOutput
	ToDashboardLineChartDefaultSeriesSettingsOutputWithContext(context.Context) DashboardLineChartDefaultSeriesSettingsOutput
}

type DashboardLineChartDefaultSeriesSettingsArgs struct {
	AxisBinding         DashboardAxisBindingPtrInput                  `pulumi:"axisBinding"`
	LineStyleSettings   DashboardLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings DashboardLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (DashboardLineChartDefaultSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i DashboardLineChartDefaultSeriesSettingsArgs) ToDashboardLineChartDefaultSeriesSettingsOutput() DashboardLineChartDefaultSeriesSettingsOutput {
	return i.ToDashboardLineChartDefaultSeriesSettingsOutputWithContext(context.Background())
}

func (i DashboardLineChartDefaultSeriesSettingsArgs) ToDashboardLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartDefaultSeriesSettingsOutput)
}

func (i DashboardLineChartDefaultSeriesSettingsArgs) ToDashboardLineChartDefaultSeriesSettingsPtrOutput() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartDefaultSeriesSettingsArgs) ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartDefaultSeriesSettingsOutput).ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx)
}

// DashboardLineChartDefaultSeriesSettingsPtrInput is an input type that accepts DashboardLineChartDefaultSeriesSettingsArgs, DashboardLineChartDefaultSeriesSettingsPtr and DashboardLineChartDefaultSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartDefaultSeriesSettingsPtrInput` via:
//
//	        DashboardLineChartDefaultSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartDefaultSeriesSettingsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartDefaultSeriesSettingsPtrOutput() DashboardLineChartDefaultSeriesSettingsPtrOutput
	ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Context) DashboardLineChartDefaultSeriesSettingsPtrOutput
}

type dashboardLineChartDefaultSeriesSettingsPtrType DashboardLineChartDefaultSeriesSettingsArgs

func DashboardLineChartDefaultSeriesSettingsPtr(v *DashboardLineChartDefaultSeriesSettingsArgs) DashboardLineChartDefaultSeriesSettingsPtrInput {
	return (*dashboardLineChartDefaultSeriesSettingsPtrType)(v)
}

func (*dashboardLineChartDefaultSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i *dashboardLineChartDefaultSeriesSettingsPtrType) ToDashboardLineChartDefaultSeriesSettingsPtrOutput() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartDefaultSeriesSettingsPtrType) ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartDefaultSeriesSettingsPtrOutput)
}

type DashboardLineChartDefaultSeriesSettingsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartDefaultSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) ToDashboardLineChartDefaultSeriesSettingsOutput() DashboardLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) ToDashboardLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) ToDashboardLineChartDefaultSeriesSettingsPtrOutput() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o.ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartDefaultSeriesSettings) *DashboardLineChartDefaultSeriesSettings {
		return &v
	}).(DashboardLineChartDefaultSeriesSettingsPtrOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) AxisBinding() DashboardAxisBindingPtrOutput {
	return o.ApplyT(func(v DashboardLineChartDefaultSeriesSettings) *DashboardAxisBinding { return v.AxisBinding }).(DashboardAxisBindingPtrOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) LineStyleSettings() DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartDefaultSeriesSettings) *DashboardLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(DashboardLineChartLineStyleSettingsPtrOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsOutput) MarkerStyleSettings() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartDefaultSeriesSettings) *DashboardLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

type DashboardLineChartDefaultSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartDefaultSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) ToDashboardLineChartDefaultSeriesSettingsPtrOutput() DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) ToDashboardLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) Elem() DashboardLineChartDefaultSeriesSettingsOutput {
	return o.ApplyT(func(v *DashboardLineChartDefaultSeriesSettings) DashboardLineChartDefaultSeriesSettings {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartDefaultSeriesSettings
		return ret
	}).(DashboardLineChartDefaultSeriesSettingsOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) AxisBinding() DashboardAxisBindingPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartDefaultSeriesSettings) *DashboardAxisBinding {
		if v == nil {
			return nil
		}
		return v.AxisBinding
	}).(DashboardAxisBindingPtrOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) LineStyleSettings() DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartDefaultSeriesSettings) *DashboardLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(DashboardLineChartLineStyleSettingsPtrOutput)
}

func (o DashboardLineChartDefaultSeriesSettingsPtrOutput) MarkerStyleSettings() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartDefaultSeriesSettings) *DashboardLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

type DashboardLineChartFieldWells struct {
	LineChartAggregatedFieldWells *DashboardLineChartAggregatedFieldWells `pulumi:"lineChartAggregatedFieldWells"`
}

// DashboardLineChartFieldWellsInput is an input type that accepts DashboardLineChartFieldWellsArgs and DashboardLineChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardLineChartFieldWellsInput` via:
//
//	DashboardLineChartFieldWellsArgs{...}
type DashboardLineChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardLineChartFieldWellsOutput() DashboardLineChartFieldWellsOutput
	ToDashboardLineChartFieldWellsOutputWithContext(context.Context) DashboardLineChartFieldWellsOutput
}

type DashboardLineChartFieldWellsArgs struct {
	LineChartAggregatedFieldWells DashboardLineChartAggregatedFieldWellsPtrInput `pulumi:"lineChartAggregatedFieldWells"`
}

func (DashboardLineChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartFieldWells)(nil)).Elem()
}

func (i DashboardLineChartFieldWellsArgs) ToDashboardLineChartFieldWellsOutput() DashboardLineChartFieldWellsOutput {
	return i.ToDashboardLineChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardLineChartFieldWellsArgs) ToDashboardLineChartFieldWellsOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartFieldWellsOutput)
}

func (i DashboardLineChartFieldWellsArgs) ToDashboardLineChartFieldWellsPtrOutput() DashboardLineChartFieldWellsPtrOutput {
	return i.ToDashboardLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartFieldWellsArgs) ToDashboardLineChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartFieldWellsOutput).ToDashboardLineChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardLineChartFieldWellsPtrInput is an input type that accepts DashboardLineChartFieldWellsArgs, DashboardLineChartFieldWellsPtr and DashboardLineChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartFieldWellsPtrInput` via:
//
//	        DashboardLineChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartFieldWellsPtrOutput() DashboardLineChartFieldWellsPtrOutput
	ToDashboardLineChartFieldWellsPtrOutputWithContext(context.Context) DashboardLineChartFieldWellsPtrOutput
}

type dashboardLineChartFieldWellsPtrType DashboardLineChartFieldWellsArgs

func DashboardLineChartFieldWellsPtr(v *DashboardLineChartFieldWellsArgs) DashboardLineChartFieldWellsPtrInput {
	return (*dashboardLineChartFieldWellsPtrType)(v)
}

func (*dashboardLineChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartFieldWells)(nil)).Elem()
}

func (i *dashboardLineChartFieldWellsPtrType) ToDashboardLineChartFieldWellsPtrOutput() DashboardLineChartFieldWellsPtrOutput {
	return i.ToDashboardLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartFieldWellsPtrType) ToDashboardLineChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartFieldWellsPtrOutput)
}

type DashboardLineChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartFieldWells)(nil)).Elem()
}

func (o DashboardLineChartFieldWellsOutput) ToDashboardLineChartFieldWellsOutput() DashboardLineChartFieldWellsOutput {
	return o
}

func (o DashboardLineChartFieldWellsOutput) ToDashboardLineChartFieldWellsOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsOutput {
	return o
}

func (o DashboardLineChartFieldWellsOutput) ToDashboardLineChartFieldWellsPtrOutput() DashboardLineChartFieldWellsPtrOutput {
	return o.ToDashboardLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartFieldWellsOutput) ToDashboardLineChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartFieldWells) *DashboardLineChartFieldWells {
		return &v
	}).(DashboardLineChartFieldWellsPtrOutput)
}

func (o DashboardLineChartFieldWellsOutput) LineChartAggregatedFieldWells() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartFieldWells) *DashboardLineChartAggregatedFieldWells {
		return v.LineChartAggregatedFieldWells
	}).(DashboardLineChartAggregatedFieldWellsPtrOutput)
}

type DashboardLineChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartFieldWells)(nil)).Elem()
}

func (o DashboardLineChartFieldWellsPtrOutput) ToDashboardLineChartFieldWellsPtrOutput() DashboardLineChartFieldWellsPtrOutput {
	return o
}

func (o DashboardLineChartFieldWellsPtrOutput) ToDashboardLineChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardLineChartFieldWellsPtrOutput {
	return o
}

func (o DashboardLineChartFieldWellsPtrOutput) Elem() DashboardLineChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardLineChartFieldWells) DashboardLineChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartFieldWells
		return ret
	}).(DashboardLineChartFieldWellsOutput)
}

func (o DashboardLineChartFieldWellsPtrOutput) LineChartAggregatedFieldWells() DashboardLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartFieldWells) *DashboardLineChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.LineChartAggregatedFieldWells
	}).(DashboardLineChartAggregatedFieldWellsPtrOutput)
}

type DashboardLineChartLineStyleSettings struct {
	LineInterpolation *DashboardLineInterpolation  `pulumi:"lineInterpolation"`
	LineStyle         *DashboardLineChartLineStyle `pulumi:"lineStyle"`
	LineVisibility    *DashboardVisibility         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth *string `pulumi:"lineWidth"`
}

// DashboardLineChartLineStyleSettingsInput is an input type that accepts DashboardLineChartLineStyleSettingsArgs and DashboardLineChartLineStyleSettingsOutput values.
// You can construct a concrete instance of `DashboardLineChartLineStyleSettingsInput` via:
//
//	DashboardLineChartLineStyleSettingsArgs{...}
type DashboardLineChartLineStyleSettingsInput interface {
	pulumi.Input

	ToDashboardLineChartLineStyleSettingsOutput() DashboardLineChartLineStyleSettingsOutput
	ToDashboardLineChartLineStyleSettingsOutputWithContext(context.Context) DashboardLineChartLineStyleSettingsOutput
}

type DashboardLineChartLineStyleSettingsArgs struct {
	LineInterpolation DashboardLineInterpolationPtrInput  `pulumi:"lineInterpolation"`
	LineStyle         DashboardLineChartLineStylePtrInput `pulumi:"lineStyle"`
	LineVisibility    DashboardVisibilityPtrInput         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth pulumi.StringPtrInput `pulumi:"lineWidth"`
}

func (DashboardLineChartLineStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartLineStyleSettings)(nil)).Elem()
}

func (i DashboardLineChartLineStyleSettingsArgs) ToDashboardLineChartLineStyleSettingsOutput() DashboardLineChartLineStyleSettingsOutput {
	return i.ToDashboardLineChartLineStyleSettingsOutputWithContext(context.Background())
}

func (i DashboardLineChartLineStyleSettingsArgs) ToDashboardLineChartLineStyleSettingsOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartLineStyleSettingsOutput)
}

func (i DashboardLineChartLineStyleSettingsArgs) ToDashboardLineChartLineStyleSettingsPtrOutput() DashboardLineChartLineStyleSettingsPtrOutput {
	return i.ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartLineStyleSettingsArgs) ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartLineStyleSettingsOutput).ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(ctx)
}

// DashboardLineChartLineStyleSettingsPtrInput is an input type that accepts DashboardLineChartLineStyleSettingsArgs, DashboardLineChartLineStyleSettingsPtr and DashboardLineChartLineStyleSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartLineStyleSettingsPtrInput` via:
//
//	        DashboardLineChartLineStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartLineStyleSettingsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartLineStyleSettingsPtrOutput() DashboardLineChartLineStyleSettingsPtrOutput
	ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(context.Context) DashboardLineChartLineStyleSettingsPtrOutput
}

type dashboardLineChartLineStyleSettingsPtrType DashboardLineChartLineStyleSettingsArgs

func DashboardLineChartLineStyleSettingsPtr(v *DashboardLineChartLineStyleSettingsArgs) DashboardLineChartLineStyleSettingsPtrInput {
	return (*dashboardLineChartLineStyleSettingsPtrType)(v)
}

func (*dashboardLineChartLineStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartLineStyleSettings)(nil)).Elem()
}

func (i *dashboardLineChartLineStyleSettingsPtrType) ToDashboardLineChartLineStyleSettingsPtrOutput() DashboardLineChartLineStyleSettingsPtrOutput {
	return i.ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartLineStyleSettingsPtrType) ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartLineStyleSettingsPtrOutput)
}

type DashboardLineChartLineStyleSettingsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartLineStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartLineStyleSettings)(nil)).Elem()
}

func (o DashboardLineChartLineStyleSettingsOutput) ToDashboardLineChartLineStyleSettingsOutput() DashboardLineChartLineStyleSettingsOutput {
	return o
}

func (o DashboardLineChartLineStyleSettingsOutput) ToDashboardLineChartLineStyleSettingsOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsOutput {
	return o
}

func (o DashboardLineChartLineStyleSettingsOutput) ToDashboardLineChartLineStyleSettingsPtrOutput() DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartLineStyleSettingsOutput) ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartLineStyleSettings) *DashboardLineChartLineStyleSettings {
		return &v
	}).(DashboardLineChartLineStyleSettingsPtrOutput)
}

func (o DashboardLineChartLineStyleSettingsOutput) LineInterpolation() DashboardLineInterpolationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartLineStyleSettings) *DashboardLineInterpolation { return v.LineInterpolation }).(DashboardLineInterpolationPtrOutput)
}

func (o DashboardLineChartLineStyleSettingsOutput) LineStyle() DashboardLineChartLineStylePtrOutput {
	return o.ApplyT(func(v DashboardLineChartLineStyleSettings) *DashboardLineChartLineStyle { return v.LineStyle }).(DashboardLineChartLineStylePtrOutput)
}

func (o DashboardLineChartLineStyleSettingsOutput) LineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardLineChartLineStyleSettings) *DashboardVisibility { return v.LineVisibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLineChartLineStyleSettingsOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLineChartLineStyleSettings) *string { return v.LineWidth }).(pulumi.StringPtrOutput)
}

type DashboardLineChartLineStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartLineStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartLineStyleSettings)(nil)).Elem()
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) ToDashboardLineChartLineStyleSettingsPtrOutput() DashboardLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) ToDashboardLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) Elem() DashboardLineChartLineStyleSettingsOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyleSettings) DashboardLineChartLineStyleSettings {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartLineStyleSettings
		return ret
	}).(DashboardLineChartLineStyleSettingsOutput)
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) LineInterpolation() DashboardLineInterpolationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyleSettings) *DashboardLineInterpolation {
		if v == nil {
			return nil
		}
		return v.LineInterpolation
	}).(DashboardLineInterpolationPtrOutput)
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) LineStyle() DashboardLineChartLineStylePtrOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyleSettings) *DashboardLineChartLineStyle {
		if v == nil {
			return nil
		}
		return v.LineStyle
	}).(DashboardLineChartLineStylePtrOutput)
}

func (o DashboardLineChartLineStyleSettingsPtrOutput) LineVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyleSettings) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.LineVisibility
	}).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLineChartLineStyleSettingsPtrOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartLineStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.LineWidth
	}).(pulumi.StringPtrOutput)
}

type DashboardLineChartMarkerStyleSettings struct {
	MarkerColor *string                        `pulumi:"markerColor"`
	MarkerShape *DashboardLineChartMarkerShape `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       *string              `pulumi:"markerSize"`
	MarkerVisibility *DashboardVisibility `pulumi:"markerVisibility"`
}

// DashboardLineChartMarkerStyleSettingsInput is an input type that accepts DashboardLineChartMarkerStyleSettingsArgs and DashboardLineChartMarkerStyleSettingsOutput values.
// You can construct a concrete instance of `DashboardLineChartMarkerStyleSettingsInput` via:
//
//	DashboardLineChartMarkerStyleSettingsArgs{...}
type DashboardLineChartMarkerStyleSettingsInput interface {
	pulumi.Input

	ToDashboardLineChartMarkerStyleSettingsOutput() DashboardLineChartMarkerStyleSettingsOutput
	ToDashboardLineChartMarkerStyleSettingsOutputWithContext(context.Context) DashboardLineChartMarkerStyleSettingsOutput
}

type DashboardLineChartMarkerStyleSettingsArgs struct {
	MarkerColor pulumi.StringPtrInput                 `pulumi:"markerColor"`
	MarkerShape DashboardLineChartMarkerShapePtrInput `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       pulumi.StringPtrInput       `pulumi:"markerSize"`
	MarkerVisibility DashboardVisibilityPtrInput `pulumi:"markerVisibility"`
}

func (DashboardLineChartMarkerStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i DashboardLineChartMarkerStyleSettingsArgs) ToDashboardLineChartMarkerStyleSettingsOutput() DashboardLineChartMarkerStyleSettingsOutput {
	return i.ToDashboardLineChartMarkerStyleSettingsOutputWithContext(context.Background())
}

func (i DashboardLineChartMarkerStyleSettingsArgs) ToDashboardLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartMarkerStyleSettingsOutput)
}

func (i DashboardLineChartMarkerStyleSettingsArgs) ToDashboardLineChartMarkerStyleSettingsPtrOutput() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return i.ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartMarkerStyleSettingsArgs) ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartMarkerStyleSettingsOutput).ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(ctx)
}

// DashboardLineChartMarkerStyleSettingsPtrInput is an input type that accepts DashboardLineChartMarkerStyleSettingsArgs, DashboardLineChartMarkerStyleSettingsPtr and DashboardLineChartMarkerStyleSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartMarkerStyleSettingsPtrInput` via:
//
//	        DashboardLineChartMarkerStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartMarkerStyleSettingsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartMarkerStyleSettingsPtrOutput() DashboardLineChartMarkerStyleSettingsPtrOutput
	ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(context.Context) DashboardLineChartMarkerStyleSettingsPtrOutput
}

type dashboardLineChartMarkerStyleSettingsPtrType DashboardLineChartMarkerStyleSettingsArgs

func DashboardLineChartMarkerStyleSettingsPtr(v *DashboardLineChartMarkerStyleSettingsArgs) DashboardLineChartMarkerStyleSettingsPtrInput {
	return (*dashboardLineChartMarkerStyleSettingsPtrType)(v)
}

func (*dashboardLineChartMarkerStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i *dashboardLineChartMarkerStyleSettingsPtrType) ToDashboardLineChartMarkerStyleSettingsPtrOutput() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return i.ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartMarkerStyleSettingsPtrType) ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

type DashboardLineChartMarkerStyleSettingsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartMarkerStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o DashboardLineChartMarkerStyleSettingsOutput) ToDashboardLineChartMarkerStyleSettingsOutput() DashboardLineChartMarkerStyleSettingsOutput {
	return o
}

func (o DashboardLineChartMarkerStyleSettingsOutput) ToDashboardLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsOutput {
	return o
}

func (o DashboardLineChartMarkerStyleSettingsOutput) ToDashboardLineChartMarkerStyleSettingsPtrOutput() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartMarkerStyleSettingsOutput) ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartMarkerStyleSettings) *DashboardLineChartMarkerStyleSettings {
		return &v
	}).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

func (o DashboardLineChartMarkerStyleSettingsOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLineChartMarkerStyleSettings) *string { return v.MarkerColor }).(pulumi.StringPtrOutput)
}

func (o DashboardLineChartMarkerStyleSettingsOutput) MarkerShape() DashboardLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v DashboardLineChartMarkerStyleSettings) *DashboardLineChartMarkerShape { return v.MarkerShape }).(DashboardLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLineChartMarkerStyleSettingsOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLineChartMarkerStyleSettings) *string { return v.MarkerSize }).(pulumi.StringPtrOutput)
}

func (o DashboardLineChartMarkerStyleSettingsOutput) MarkerVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardLineChartMarkerStyleSettings) *DashboardVisibility { return v.MarkerVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardLineChartMarkerStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartMarkerStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) ToDashboardLineChartMarkerStyleSettingsPtrOutput() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) ToDashboardLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) Elem() DashboardLineChartMarkerStyleSettingsOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerStyleSettings) DashboardLineChartMarkerStyleSettings {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartMarkerStyleSettings
		return ret
	}).(DashboardLineChartMarkerStyleSettingsOutput)
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) MarkerShape() DashboardLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerStyleSettings) *DashboardLineChartMarkerShape {
		if v == nil {
			return nil
		}
		return v.MarkerShape
	}).(DashboardLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardLineChartMarkerStyleSettingsPtrOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerSize
	}).(pulumi.StringPtrOutput)
}

func (o DashboardLineChartMarkerStyleSettingsPtrOutput) MarkerVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartMarkerStyleSettings) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.MarkerVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardLineChartSeriesSettings struct {
	LineStyleSettings   *DashboardLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *DashboardLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// DashboardLineChartSeriesSettingsInput is an input type that accepts DashboardLineChartSeriesSettingsArgs and DashboardLineChartSeriesSettingsOutput values.
// You can construct a concrete instance of `DashboardLineChartSeriesSettingsInput` via:
//
//	DashboardLineChartSeriesSettingsArgs{...}
type DashboardLineChartSeriesSettingsInput interface {
	pulumi.Input

	ToDashboardLineChartSeriesSettingsOutput() DashboardLineChartSeriesSettingsOutput
	ToDashboardLineChartSeriesSettingsOutputWithContext(context.Context) DashboardLineChartSeriesSettingsOutput
}

type DashboardLineChartSeriesSettingsArgs struct {
	LineStyleSettings   DashboardLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings DashboardLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (DashboardLineChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartSeriesSettings)(nil)).Elem()
}

func (i DashboardLineChartSeriesSettingsArgs) ToDashboardLineChartSeriesSettingsOutput() DashboardLineChartSeriesSettingsOutput {
	return i.ToDashboardLineChartSeriesSettingsOutputWithContext(context.Background())
}

func (i DashboardLineChartSeriesSettingsArgs) ToDashboardLineChartSeriesSettingsOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSeriesSettingsOutput)
}

func (i DashboardLineChartSeriesSettingsArgs) ToDashboardLineChartSeriesSettingsPtrOutput() DashboardLineChartSeriesSettingsPtrOutput {
	return i.ToDashboardLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartSeriesSettingsArgs) ToDashboardLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSeriesSettingsOutput).ToDashboardLineChartSeriesSettingsPtrOutputWithContext(ctx)
}

// DashboardLineChartSeriesSettingsPtrInput is an input type that accepts DashboardLineChartSeriesSettingsArgs, DashboardLineChartSeriesSettingsPtr and DashboardLineChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartSeriesSettingsPtrInput` via:
//
//	        DashboardLineChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToDashboardLineChartSeriesSettingsPtrOutput() DashboardLineChartSeriesSettingsPtrOutput
	ToDashboardLineChartSeriesSettingsPtrOutputWithContext(context.Context) DashboardLineChartSeriesSettingsPtrOutput
}

type dashboardLineChartSeriesSettingsPtrType DashboardLineChartSeriesSettingsArgs

func DashboardLineChartSeriesSettingsPtr(v *DashboardLineChartSeriesSettingsArgs) DashboardLineChartSeriesSettingsPtrInput {
	return (*dashboardLineChartSeriesSettingsPtrType)(v)
}

func (*dashboardLineChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartSeriesSettings)(nil)).Elem()
}

func (i *dashboardLineChartSeriesSettingsPtrType) ToDashboardLineChartSeriesSettingsPtrOutput() DashboardLineChartSeriesSettingsPtrOutput {
	return i.ToDashboardLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartSeriesSettingsPtrType) ToDashboardLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSeriesSettingsPtrOutput)
}

type DashboardLineChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (DashboardLineChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartSeriesSettings)(nil)).Elem()
}

func (o DashboardLineChartSeriesSettingsOutput) ToDashboardLineChartSeriesSettingsOutput() DashboardLineChartSeriesSettingsOutput {
	return o
}

func (o DashboardLineChartSeriesSettingsOutput) ToDashboardLineChartSeriesSettingsOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsOutput {
	return o
}

func (o DashboardLineChartSeriesSettingsOutput) ToDashboardLineChartSeriesSettingsPtrOutput() DashboardLineChartSeriesSettingsPtrOutput {
	return o.ToDashboardLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartSeriesSettingsOutput) ToDashboardLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartSeriesSettings) *DashboardLineChartSeriesSettings {
		return &v
	}).(DashboardLineChartSeriesSettingsPtrOutput)
}

func (o DashboardLineChartSeriesSettingsOutput) LineStyleSettings() DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartSeriesSettings) *DashboardLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(DashboardLineChartLineStyleSettingsPtrOutput)
}

func (o DashboardLineChartSeriesSettingsOutput) MarkerStyleSettings() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartSeriesSettings) *DashboardLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

type DashboardLineChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartSeriesSettings)(nil)).Elem()
}

func (o DashboardLineChartSeriesSettingsPtrOutput) ToDashboardLineChartSeriesSettingsPtrOutput() DashboardLineChartSeriesSettingsPtrOutput {
	return o
}

func (o DashboardLineChartSeriesSettingsPtrOutput) ToDashboardLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardLineChartSeriesSettingsPtrOutput {
	return o
}

func (o DashboardLineChartSeriesSettingsPtrOutput) Elem() DashboardLineChartSeriesSettingsOutput {
	return o.ApplyT(func(v *DashboardLineChartSeriesSettings) DashboardLineChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartSeriesSettings
		return ret
	}).(DashboardLineChartSeriesSettingsOutput)
}

func (o DashboardLineChartSeriesSettingsPtrOutput) LineStyleSettings() DashboardLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartSeriesSettings) *DashboardLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(DashboardLineChartLineStyleSettingsPtrOutput)
}

func (o DashboardLineChartSeriesSettingsPtrOutput) MarkerStyleSettings() DashboardLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartSeriesSettings) *DashboardLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(DashboardLineChartMarkerStyleSettingsPtrOutput)
}

type DashboardLineChartSortConfiguration struct {
	CategoryItemsLimitConfiguration  *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     []DashboardFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     *DashboardItemsLimitConfiguration `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration *DashboardItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []DashboardFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// DashboardLineChartSortConfigurationInput is an input type that accepts DashboardLineChartSortConfigurationArgs and DashboardLineChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardLineChartSortConfigurationInput` via:
//
//	DashboardLineChartSortConfigurationArgs{...}
type DashboardLineChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardLineChartSortConfigurationOutput() DashboardLineChartSortConfigurationOutput
	ToDashboardLineChartSortConfigurationOutputWithContext(context.Context) DashboardLineChartSortConfigurationOutput
}

type DashboardLineChartSortConfigurationArgs struct {
	CategoryItemsLimitConfiguration  DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     DashboardItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration DashboardItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               DashboardFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (DashboardLineChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartSortConfiguration)(nil)).Elem()
}

func (i DashboardLineChartSortConfigurationArgs) ToDashboardLineChartSortConfigurationOutput() DashboardLineChartSortConfigurationOutput {
	return i.ToDashboardLineChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardLineChartSortConfigurationArgs) ToDashboardLineChartSortConfigurationOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSortConfigurationOutput)
}

func (i DashboardLineChartSortConfigurationArgs) ToDashboardLineChartSortConfigurationPtrOutput() DashboardLineChartSortConfigurationPtrOutput {
	return i.ToDashboardLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartSortConfigurationArgs) ToDashboardLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSortConfigurationOutput).ToDashboardLineChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardLineChartSortConfigurationPtrInput is an input type that accepts DashboardLineChartSortConfigurationArgs, DashboardLineChartSortConfigurationPtr and DashboardLineChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartSortConfigurationPtrInput` via:
//
//	        DashboardLineChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardLineChartSortConfigurationPtrOutput() DashboardLineChartSortConfigurationPtrOutput
	ToDashboardLineChartSortConfigurationPtrOutputWithContext(context.Context) DashboardLineChartSortConfigurationPtrOutput
}

type dashboardLineChartSortConfigurationPtrType DashboardLineChartSortConfigurationArgs

func DashboardLineChartSortConfigurationPtr(v *DashboardLineChartSortConfigurationArgs) DashboardLineChartSortConfigurationPtrInput {
	return (*dashboardLineChartSortConfigurationPtrType)(v)
}

func (*dashboardLineChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardLineChartSortConfigurationPtrType) ToDashboardLineChartSortConfigurationPtrOutput() DashboardLineChartSortConfigurationPtrOutput {
	return i.ToDashboardLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartSortConfigurationPtrType) ToDashboardLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartSortConfigurationPtrOutput)
}

type DashboardLineChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardLineChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartSortConfiguration)(nil)).Elem()
}

func (o DashboardLineChartSortConfigurationOutput) ToDashboardLineChartSortConfigurationOutput() DashboardLineChartSortConfigurationOutput {
	return o
}

func (o DashboardLineChartSortConfigurationOutput) ToDashboardLineChartSortConfigurationOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationOutput {
	return o
}

func (o DashboardLineChartSortConfigurationOutput) ToDashboardLineChartSortConfigurationPtrOutput() DashboardLineChartSortConfigurationPtrOutput {
	return o.ToDashboardLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartSortConfigurationOutput) ToDashboardLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartSortConfiguration) *DashboardLineChartSortConfiguration {
		return &v
	}).(DashboardLineChartSortConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationOutput) CategoryItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardLineChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardLineChartSortConfigurationOutput) ColorItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.ColorItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardLineChartSortConfiguration) []DashboardFieldSortOptions { return v.SmallMultiplesSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardLineChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartSortConfiguration)(nil)).Elem()
}

func (o DashboardLineChartSortConfigurationPtrOutput) ToDashboardLineChartSortConfigurationPtrOutput() DashboardLineChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardLineChartSortConfigurationPtrOutput) ToDashboardLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardLineChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardLineChartSortConfigurationPtrOutput) Elem() DashboardLineChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) DashboardLineChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartSortConfiguration
		return ret
	}).(DashboardLineChartSortConfigurationOutput)
}

func (o DashboardLineChartSortConfigurationPtrOutput) CategoryItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardLineChartSortConfigurationPtrOutput) ColorItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardLineChartSortConfigurationPtrOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardLineChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardLineChartConfiguration     `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardLineChartVisualInput is an input type that accepts DashboardLineChartVisualArgs and DashboardLineChartVisualOutput values.
// You can construct a concrete instance of `DashboardLineChartVisualInput` via:
//
//	DashboardLineChartVisualArgs{...}
type DashboardLineChartVisualInput interface {
	pulumi.Input

	ToDashboardLineChartVisualOutput() DashboardLineChartVisualOutput
	ToDashboardLineChartVisualOutputWithContext(context.Context) DashboardLineChartVisualOutput
}

type DashboardLineChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardLineChartConfigurationPtrInput     `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardLineChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartVisual)(nil)).Elem()
}

func (i DashboardLineChartVisualArgs) ToDashboardLineChartVisualOutput() DashboardLineChartVisualOutput {
	return i.ToDashboardLineChartVisualOutputWithContext(context.Background())
}

func (i DashboardLineChartVisualArgs) ToDashboardLineChartVisualOutputWithContext(ctx context.Context) DashboardLineChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartVisualOutput)
}

func (i DashboardLineChartVisualArgs) ToDashboardLineChartVisualPtrOutput() DashboardLineChartVisualPtrOutput {
	return i.ToDashboardLineChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardLineChartVisualArgs) ToDashboardLineChartVisualPtrOutputWithContext(ctx context.Context) DashboardLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartVisualOutput).ToDashboardLineChartVisualPtrOutputWithContext(ctx)
}

// DashboardLineChartVisualPtrInput is an input type that accepts DashboardLineChartVisualArgs, DashboardLineChartVisualPtr and DashboardLineChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardLineChartVisualPtrInput` via:
//
//	        DashboardLineChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardLineChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardLineChartVisualPtrOutput() DashboardLineChartVisualPtrOutput
	ToDashboardLineChartVisualPtrOutputWithContext(context.Context) DashboardLineChartVisualPtrOutput
}

type dashboardLineChartVisualPtrType DashboardLineChartVisualArgs

func DashboardLineChartVisualPtr(v *DashboardLineChartVisualArgs) DashboardLineChartVisualPtrInput {
	return (*dashboardLineChartVisualPtrType)(v)
}

func (*dashboardLineChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartVisual)(nil)).Elem()
}

func (i *dashboardLineChartVisualPtrType) ToDashboardLineChartVisualPtrOutput() DashboardLineChartVisualPtrOutput {
	return i.ToDashboardLineChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardLineChartVisualPtrType) ToDashboardLineChartVisualPtrOutputWithContext(ctx context.Context) DashboardLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineChartVisualPtrOutput)
}

type DashboardLineChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardLineChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineChartVisual)(nil)).Elem()
}

func (o DashboardLineChartVisualOutput) ToDashboardLineChartVisualOutput() DashboardLineChartVisualOutput {
	return o
}

func (o DashboardLineChartVisualOutput) ToDashboardLineChartVisualOutputWithContext(ctx context.Context) DashboardLineChartVisualOutput {
	return o
}

func (o DashboardLineChartVisualOutput) ToDashboardLineChartVisualPtrOutput() DashboardLineChartVisualPtrOutput {
	return o.ToDashboardLineChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardLineChartVisualOutput) ToDashboardLineChartVisualPtrOutputWithContext(ctx context.Context) DashboardLineChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineChartVisual) *DashboardLineChartVisual {
		return &v
	}).(DashboardLineChartVisualPtrOutput)
}

func (o DashboardLineChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardLineChartVisualOutput) ChartConfiguration() DashboardLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) *DashboardLineChartConfiguration { return v.ChartConfiguration }).(DashboardLineChartConfigurationPtrOutput)
}

func (o DashboardLineChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardLineChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardLineChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardLineChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLineChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardLineChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineChartVisual)(nil)).Elem()
}

func (o DashboardLineChartVisualPtrOutput) ToDashboardLineChartVisualPtrOutput() DashboardLineChartVisualPtrOutput {
	return o
}

func (o DashboardLineChartVisualPtrOutput) ToDashboardLineChartVisualPtrOutputWithContext(ctx context.Context) DashboardLineChartVisualPtrOutput {
	return o
}

func (o DashboardLineChartVisualPtrOutput) Elem() DashboardLineChartVisualOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) DashboardLineChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardLineChartVisual
		return ret
	}).(DashboardLineChartVisualOutput)
}

func (o DashboardLineChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardLineChartVisualPtrOutput) ChartConfiguration() DashboardLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) *DashboardLineChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardLineChartConfigurationPtrOutput)
}

func (o DashboardLineChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardLineChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardLineChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardLineChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLineChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardLineSeriesAxisDisplayOptions struct {
	AxisOptions               *DashboardAxisDisplayOptions        `pulumi:"axisOptions"`
	MissingDataConfigurations []DashboardMissingDataConfiguration `pulumi:"missingDataConfigurations"`
}

// DashboardLineSeriesAxisDisplayOptionsInput is an input type that accepts DashboardLineSeriesAxisDisplayOptionsArgs and DashboardLineSeriesAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardLineSeriesAxisDisplayOptionsInput` via:
//
//	DashboardLineSeriesAxisDisplayOptionsArgs{...}
type DashboardLineSeriesAxisDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardLineSeriesAxisDisplayOptionsOutput() DashboardLineSeriesAxisDisplayOptionsOutput
	ToDashboardLineSeriesAxisDisplayOptionsOutputWithContext(context.Context) DashboardLineSeriesAxisDisplayOptionsOutput
}

type DashboardLineSeriesAxisDisplayOptionsArgs struct {
	AxisOptions               DashboardAxisDisplayOptionsPtrInput         `pulumi:"axisOptions"`
	MissingDataConfigurations DashboardMissingDataConfigurationArrayInput `pulumi:"missingDataConfigurations"`
}

func (DashboardLineSeriesAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i DashboardLineSeriesAxisDisplayOptionsArgs) ToDashboardLineSeriesAxisDisplayOptionsOutput() DashboardLineSeriesAxisDisplayOptionsOutput {
	return i.ToDashboardLineSeriesAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardLineSeriesAxisDisplayOptionsArgs) ToDashboardLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineSeriesAxisDisplayOptionsOutput)
}

func (i DashboardLineSeriesAxisDisplayOptionsArgs) ToDashboardLineSeriesAxisDisplayOptionsPtrOutput() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardLineSeriesAxisDisplayOptionsArgs) ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineSeriesAxisDisplayOptionsOutput).ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardLineSeriesAxisDisplayOptionsPtrInput is an input type that accepts DashboardLineSeriesAxisDisplayOptionsArgs, DashboardLineSeriesAxisDisplayOptionsPtr and DashboardLineSeriesAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardLineSeriesAxisDisplayOptionsPtrInput` via:
//
//	        DashboardLineSeriesAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardLineSeriesAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardLineSeriesAxisDisplayOptionsPtrOutput() DashboardLineSeriesAxisDisplayOptionsPtrOutput
	ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Context) DashboardLineSeriesAxisDisplayOptionsPtrOutput
}

type dashboardLineSeriesAxisDisplayOptionsPtrType DashboardLineSeriesAxisDisplayOptionsArgs

func DashboardLineSeriesAxisDisplayOptionsPtr(v *DashboardLineSeriesAxisDisplayOptionsArgs) DashboardLineSeriesAxisDisplayOptionsPtrInput {
	return (*dashboardLineSeriesAxisDisplayOptionsPtrType)(v)
}

func (*dashboardLineSeriesAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i *dashboardLineSeriesAxisDisplayOptionsPtrType) ToDashboardLineSeriesAxisDisplayOptionsPtrOutput() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardLineSeriesAxisDisplayOptionsPtrType) ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

type DashboardLineSeriesAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardLineSeriesAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) ToDashboardLineSeriesAxisDisplayOptionsOutput() DashboardLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) ToDashboardLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) ToDashboardLineSeriesAxisDisplayOptionsPtrOutput() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLineSeriesAxisDisplayOptions) *DashboardLineSeriesAxisDisplayOptions {
		return &v
	}).(DashboardLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) AxisOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardLineSeriesAxisDisplayOptions) *DashboardAxisDisplayOptions { return v.AxisOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineSeriesAxisDisplayOptionsOutput) MissingDataConfigurations() DashboardMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardLineSeriesAxisDisplayOptions) []DashboardMissingDataConfiguration {
		return v.MissingDataConfigurations
	}).(DashboardMissingDataConfigurationArrayOutput)
}

type DashboardLineSeriesAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardLineSeriesAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o DashboardLineSeriesAxisDisplayOptionsPtrOutput) ToDashboardLineSeriesAxisDisplayOptionsPtrOutput() DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o DashboardLineSeriesAxisDisplayOptionsPtrOutput) ToDashboardLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o DashboardLineSeriesAxisDisplayOptionsPtrOutput) Elem() DashboardLineSeriesAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardLineSeriesAxisDisplayOptions) DashboardLineSeriesAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardLineSeriesAxisDisplayOptions
		return ret
	}).(DashboardLineSeriesAxisDisplayOptionsOutput)
}

func (o DashboardLineSeriesAxisDisplayOptionsPtrOutput) AxisOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardLineSeriesAxisDisplayOptions) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.AxisOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardLineSeriesAxisDisplayOptionsPtrOutput) MissingDataConfigurations() DashboardMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardLineSeriesAxisDisplayOptions) []DashboardMissingDataConfiguration {
		if v == nil {
			return nil
		}
		return v.MissingDataConfigurations
	}).(DashboardMissingDataConfigurationArrayOutput)
}

type DashboardListControlDisplayOptions struct {
	SearchOptions    *DashboardListControlSearchOptions    `pulumi:"searchOptions"`
	SelectAllOptions *DashboardListControlSelectAllOptions `pulumi:"selectAllOptions"`
	TitleOptions     *DashboardLabelOptions                `pulumi:"titleOptions"`
}

// DashboardListControlDisplayOptionsInput is an input type that accepts DashboardListControlDisplayOptionsArgs and DashboardListControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardListControlDisplayOptionsInput` via:
//
//	DashboardListControlDisplayOptionsArgs{...}
type DashboardListControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardListControlDisplayOptionsOutput() DashboardListControlDisplayOptionsOutput
	ToDashboardListControlDisplayOptionsOutputWithContext(context.Context) DashboardListControlDisplayOptionsOutput
}

type DashboardListControlDisplayOptionsArgs struct {
	SearchOptions    DashboardListControlSearchOptionsPtrInput    `pulumi:"searchOptions"`
	SelectAllOptions DashboardListControlSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	TitleOptions     DashboardLabelOptionsPtrInput                `pulumi:"titleOptions"`
}

func (DashboardListControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlDisplayOptions)(nil)).Elem()
}

func (i DashboardListControlDisplayOptionsArgs) ToDashboardListControlDisplayOptionsOutput() DashboardListControlDisplayOptionsOutput {
	return i.ToDashboardListControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardListControlDisplayOptionsArgs) ToDashboardListControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlDisplayOptionsOutput)
}

func (i DashboardListControlDisplayOptionsArgs) ToDashboardListControlDisplayOptionsPtrOutput() DashboardListControlDisplayOptionsPtrOutput {
	return i.ToDashboardListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardListControlDisplayOptionsArgs) ToDashboardListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlDisplayOptionsOutput).ToDashboardListControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardListControlDisplayOptionsPtrInput is an input type that accepts DashboardListControlDisplayOptionsArgs, DashboardListControlDisplayOptionsPtr and DashboardListControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardListControlDisplayOptionsPtrInput` via:
//
//	        DashboardListControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardListControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardListControlDisplayOptionsPtrOutput() DashboardListControlDisplayOptionsPtrOutput
	ToDashboardListControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardListControlDisplayOptionsPtrOutput
}

type dashboardListControlDisplayOptionsPtrType DashboardListControlDisplayOptionsArgs

func DashboardListControlDisplayOptionsPtr(v *DashboardListControlDisplayOptionsArgs) DashboardListControlDisplayOptionsPtrInput {
	return (*dashboardListControlDisplayOptionsPtrType)(v)
}

func (*dashboardListControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardListControlDisplayOptionsPtrType) ToDashboardListControlDisplayOptionsPtrOutput() DashboardListControlDisplayOptionsPtrOutput {
	return i.ToDashboardListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardListControlDisplayOptionsPtrType) ToDashboardListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlDisplayOptionsPtrOutput)
}

type DashboardListControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardListControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlDisplayOptions)(nil)).Elem()
}

func (o DashboardListControlDisplayOptionsOutput) ToDashboardListControlDisplayOptionsOutput() DashboardListControlDisplayOptionsOutput {
	return o
}

func (o DashboardListControlDisplayOptionsOutput) ToDashboardListControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsOutput {
	return o
}

func (o DashboardListControlDisplayOptionsOutput) ToDashboardListControlDisplayOptionsPtrOutput() DashboardListControlDisplayOptionsPtrOutput {
	return o.ToDashboardListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardListControlDisplayOptionsOutput) ToDashboardListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardListControlDisplayOptions) *DashboardListControlDisplayOptions {
		return &v
	}).(DashboardListControlDisplayOptionsPtrOutput)
}

func (o DashboardListControlDisplayOptionsOutput) SearchOptions() DashboardListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v DashboardListControlDisplayOptions) *DashboardListControlSearchOptions { return v.SearchOptions }).(DashboardListControlSearchOptionsPtrOutput)
}

func (o DashboardListControlDisplayOptionsOutput) SelectAllOptions() DashboardListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardListControlDisplayOptions) *DashboardListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardListControlSelectAllOptionsPtrOutput)
}

func (o DashboardListControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardListControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardListControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardListControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlDisplayOptions)(nil)).Elem()
}

func (o DashboardListControlDisplayOptionsPtrOutput) ToDashboardListControlDisplayOptionsPtrOutput() DashboardListControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardListControlDisplayOptionsPtrOutput) ToDashboardListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardListControlDisplayOptionsPtrOutput) Elem() DashboardListControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardListControlDisplayOptions) DashboardListControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardListControlDisplayOptions
		return ret
	}).(DashboardListControlDisplayOptionsOutput)
}

func (o DashboardListControlDisplayOptionsPtrOutput) SearchOptions() DashboardListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardListControlDisplayOptions) *DashboardListControlSearchOptions {
		if v == nil {
			return nil
		}
		return v.SearchOptions
	}).(DashboardListControlSearchOptionsPtrOutput)
}

func (o DashboardListControlDisplayOptionsPtrOutput) SelectAllOptions() DashboardListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardListControlDisplayOptions) *DashboardListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardListControlSelectAllOptionsPtrOutput)
}

func (o DashboardListControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardListControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardListControlSearchOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardListControlSearchOptionsInput is an input type that accepts DashboardListControlSearchOptionsArgs and DashboardListControlSearchOptionsOutput values.
// You can construct a concrete instance of `DashboardListControlSearchOptionsInput` via:
//
//	DashboardListControlSearchOptionsArgs{...}
type DashboardListControlSearchOptionsInput interface {
	pulumi.Input

	ToDashboardListControlSearchOptionsOutput() DashboardListControlSearchOptionsOutput
	ToDashboardListControlSearchOptionsOutputWithContext(context.Context) DashboardListControlSearchOptionsOutput
}

type DashboardListControlSearchOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardListControlSearchOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlSearchOptions)(nil)).Elem()
}

func (i DashboardListControlSearchOptionsArgs) ToDashboardListControlSearchOptionsOutput() DashboardListControlSearchOptionsOutput {
	return i.ToDashboardListControlSearchOptionsOutputWithContext(context.Background())
}

func (i DashboardListControlSearchOptionsArgs) ToDashboardListControlSearchOptionsOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSearchOptionsOutput)
}

func (i DashboardListControlSearchOptionsArgs) ToDashboardListControlSearchOptionsPtrOutput() DashboardListControlSearchOptionsPtrOutput {
	return i.ToDashboardListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardListControlSearchOptionsArgs) ToDashboardListControlSearchOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSearchOptionsOutput).ToDashboardListControlSearchOptionsPtrOutputWithContext(ctx)
}

// DashboardListControlSearchOptionsPtrInput is an input type that accepts DashboardListControlSearchOptionsArgs, DashboardListControlSearchOptionsPtr and DashboardListControlSearchOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardListControlSearchOptionsPtrInput` via:
//
//	        DashboardListControlSearchOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardListControlSearchOptionsPtrInput interface {
	pulumi.Input

	ToDashboardListControlSearchOptionsPtrOutput() DashboardListControlSearchOptionsPtrOutput
	ToDashboardListControlSearchOptionsPtrOutputWithContext(context.Context) DashboardListControlSearchOptionsPtrOutput
}

type dashboardListControlSearchOptionsPtrType DashboardListControlSearchOptionsArgs

func DashboardListControlSearchOptionsPtr(v *DashboardListControlSearchOptionsArgs) DashboardListControlSearchOptionsPtrInput {
	return (*dashboardListControlSearchOptionsPtrType)(v)
}

func (*dashboardListControlSearchOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlSearchOptions)(nil)).Elem()
}

func (i *dashboardListControlSearchOptionsPtrType) ToDashboardListControlSearchOptionsPtrOutput() DashboardListControlSearchOptionsPtrOutput {
	return i.ToDashboardListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardListControlSearchOptionsPtrType) ToDashboardListControlSearchOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSearchOptionsPtrOutput)
}

type DashboardListControlSearchOptionsOutput struct{ *pulumi.OutputState }

func (DashboardListControlSearchOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlSearchOptions)(nil)).Elem()
}

func (o DashboardListControlSearchOptionsOutput) ToDashboardListControlSearchOptionsOutput() DashboardListControlSearchOptionsOutput {
	return o
}

func (o DashboardListControlSearchOptionsOutput) ToDashboardListControlSearchOptionsOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsOutput {
	return o
}

func (o DashboardListControlSearchOptionsOutput) ToDashboardListControlSearchOptionsPtrOutput() DashboardListControlSearchOptionsPtrOutput {
	return o.ToDashboardListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardListControlSearchOptionsOutput) ToDashboardListControlSearchOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardListControlSearchOptions) *DashboardListControlSearchOptions {
		return &v
	}).(DashboardListControlSearchOptionsPtrOutput)
}

func (o DashboardListControlSearchOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardListControlSearchOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardListControlSearchOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardListControlSearchOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlSearchOptions)(nil)).Elem()
}

func (o DashboardListControlSearchOptionsPtrOutput) ToDashboardListControlSearchOptionsPtrOutput() DashboardListControlSearchOptionsPtrOutput {
	return o
}

func (o DashboardListControlSearchOptionsPtrOutput) ToDashboardListControlSearchOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSearchOptionsPtrOutput {
	return o
}

func (o DashboardListControlSearchOptionsPtrOutput) Elem() DashboardListControlSearchOptionsOutput {
	return o.ApplyT(func(v *DashboardListControlSearchOptions) DashboardListControlSearchOptions {
		if v != nil {
			return *v
		}
		var ret DashboardListControlSearchOptions
		return ret
	}).(DashboardListControlSearchOptionsOutput)
}

func (o DashboardListControlSearchOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardListControlSearchOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardListControlSelectAllOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardListControlSelectAllOptionsInput is an input type that accepts DashboardListControlSelectAllOptionsArgs and DashboardListControlSelectAllOptionsOutput values.
// You can construct a concrete instance of `DashboardListControlSelectAllOptionsInput` via:
//
//	DashboardListControlSelectAllOptionsArgs{...}
type DashboardListControlSelectAllOptionsInput interface {
	pulumi.Input

	ToDashboardListControlSelectAllOptionsOutput() DashboardListControlSelectAllOptionsOutput
	ToDashboardListControlSelectAllOptionsOutputWithContext(context.Context) DashboardListControlSelectAllOptionsOutput
}

type DashboardListControlSelectAllOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardListControlSelectAllOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlSelectAllOptions)(nil)).Elem()
}

func (i DashboardListControlSelectAllOptionsArgs) ToDashboardListControlSelectAllOptionsOutput() DashboardListControlSelectAllOptionsOutput {
	return i.ToDashboardListControlSelectAllOptionsOutputWithContext(context.Background())
}

func (i DashboardListControlSelectAllOptionsArgs) ToDashboardListControlSelectAllOptionsOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSelectAllOptionsOutput)
}

func (i DashboardListControlSelectAllOptionsArgs) ToDashboardListControlSelectAllOptionsPtrOutput() DashboardListControlSelectAllOptionsPtrOutput {
	return i.ToDashboardListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardListControlSelectAllOptionsArgs) ToDashboardListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSelectAllOptionsOutput).ToDashboardListControlSelectAllOptionsPtrOutputWithContext(ctx)
}

// DashboardListControlSelectAllOptionsPtrInput is an input type that accepts DashboardListControlSelectAllOptionsArgs, DashboardListControlSelectAllOptionsPtr and DashboardListControlSelectAllOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardListControlSelectAllOptionsPtrInput` via:
//
//	        DashboardListControlSelectAllOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardListControlSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToDashboardListControlSelectAllOptionsPtrOutput() DashboardListControlSelectAllOptionsPtrOutput
	ToDashboardListControlSelectAllOptionsPtrOutputWithContext(context.Context) DashboardListControlSelectAllOptionsPtrOutput
}

type dashboardListControlSelectAllOptionsPtrType DashboardListControlSelectAllOptionsArgs

func DashboardListControlSelectAllOptionsPtr(v *DashboardListControlSelectAllOptionsArgs) DashboardListControlSelectAllOptionsPtrInput {
	return (*dashboardListControlSelectAllOptionsPtrType)(v)
}

func (*dashboardListControlSelectAllOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlSelectAllOptions)(nil)).Elem()
}

func (i *dashboardListControlSelectAllOptionsPtrType) ToDashboardListControlSelectAllOptionsPtrOutput() DashboardListControlSelectAllOptionsPtrOutput {
	return i.ToDashboardListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardListControlSelectAllOptionsPtrType) ToDashboardListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardListControlSelectAllOptionsPtrOutput)
}

type DashboardListControlSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (DashboardListControlSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardListControlSelectAllOptions)(nil)).Elem()
}

func (o DashboardListControlSelectAllOptionsOutput) ToDashboardListControlSelectAllOptionsOutput() DashboardListControlSelectAllOptionsOutput {
	return o
}

func (o DashboardListControlSelectAllOptionsOutput) ToDashboardListControlSelectAllOptionsOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsOutput {
	return o
}

func (o DashboardListControlSelectAllOptionsOutput) ToDashboardListControlSelectAllOptionsPtrOutput() DashboardListControlSelectAllOptionsPtrOutput {
	return o.ToDashboardListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardListControlSelectAllOptionsOutput) ToDashboardListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardListControlSelectAllOptions) *DashboardListControlSelectAllOptions {
		return &v
	}).(DashboardListControlSelectAllOptionsPtrOutput)
}

func (o DashboardListControlSelectAllOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardListControlSelectAllOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardListControlSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardListControlSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardListControlSelectAllOptions)(nil)).Elem()
}

func (o DashboardListControlSelectAllOptionsPtrOutput) ToDashboardListControlSelectAllOptionsPtrOutput() DashboardListControlSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardListControlSelectAllOptionsPtrOutput) ToDashboardListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) DashboardListControlSelectAllOptionsPtrOutput {
	return o
}

func (o DashboardListControlSelectAllOptionsPtrOutput) Elem() DashboardListControlSelectAllOptionsOutput {
	return o.ApplyT(func(v *DashboardListControlSelectAllOptions) DashboardListControlSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret DashboardListControlSelectAllOptions
		return ret
	}).(DashboardListControlSelectAllOptionsOutput)
}

func (o DashboardListControlSelectAllOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardListControlSelectAllOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardLoadingAnimation struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardLoadingAnimationInput is an input type that accepts DashboardLoadingAnimationArgs and DashboardLoadingAnimationOutput values.
// You can construct a concrete instance of `DashboardLoadingAnimationInput` via:
//
//	DashboardLoadingAnimationArgs{...}
type DashboardLoadingAnimationInput interface {
	pulumi.Input

	ToDashboardLoadingAnimationOutput() DashboardLoadingAnimationOutput
	ToDashboardLoadingAnimationOutputWithContext(context.Context) DashboardLoadingAnimationOutput
}

type DashboardLoadingAnimationArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardLoadingAnimationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLoadingAnimation)(nil)).Elem()
}

func (i DashboardLoadingAnimationArgs) ToDashboardLoadingAnimationOutput() DashboardLoadingAnimationOutput {
	return i.ToDashboardLoadingAnimationOutputWithContext(context.Background())
}

func (i DashboardLoadingAnimationArgs) ToDashboardLoadingAnimationOutputWithContext(ctx context.Context) DashboardLoadingAnimationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLoadingAnimationOutput)
}

func (i DashboardLoadingAnimationArgs) ToDashboardLoadingAnimationPtrOutput() DashboardLoadingAnimationPtrOutput {
	return i.ToDashboardLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i DashboardLoadingAnimationArgs) ToDashboardLoadingAnimationPtrOutputWithContext(ctx context.Context) DashboardLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLoadingAnimationOutput).ToDashboardLoadingAnimationPtrOutputWithContext(ctx)
}

// DashboardLoadingAnimationPtrInput is an input type that accepts DashboardLoadingAnimationArgs, DashboardLoadingAnimationPtr and DashboardLoadingAnimationPtrOutput values.
// You can construct a concrete instance of `DashboardLoadingAnimationPtrInput` via:
//
//	        DashboardLoadingAnimationArgs{...}
//
//	or:
//
//	        nil
type DashboardLoadingAnimationPtrInput interface {
	pulumi.Input

	ToDashboardLoadingAnimationPtrOutput() DashboardLoadingAnimationPtrOutput
	ToDashboardLoadingAnimationPtrOutputWithContext(context.Context) DashboardLoadingAnimationPtrOutput
}

type dashboardLoadingAnimationPtrType DashboardLoadingAnimationArgs

func DashboardLoadingAnimationPtr(v *DashboardLoadingAnimationArgs) DashboardLoadingAnimationPtrInput {
	return (*dashboardLoadingAnimationPtrType)(v)
}

func (*dashboardLoadingAnimationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLoadingAnimation)(nil)).Elem()
}

func (i *dashboardLoadingAnimationPtrType) ToDashboardLoadingAnimationPtrOutput() DashboardLoadingAnimationPtrOutput {
	return i.ToDashboardLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i *dashboardLoadingAnimationPtrType) ToDashboardLoadingAnimationPtrOutputWithContext(ctx context.Context) DashboardLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLoadingAnimationPtrOutput)
}

type DashboardLoadingAnimationOutput struct{ *pulumi.OutputState }

func (DashboardLoadingAnimationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLoadingAnimation)(nil)).Elem()
}

func (o DashboardLoadingAnimationOutput) ToDashboardLoadingAnimationOutput() DashboardLoadingAnimationOutput {
	return o
}

func (o DashboardLoadingAnimationOutput) ToDashboardLoadingAnimationOutputWithContext(ctx context.Context) DashboardLoadingAnimationOutput {
	return o
}

func (o DashboardLoadingAnimationOutput) ToDashboardLoadingAnimationPtrOutput() DashboardLoadingAnimationPtrOutput {
	return o.ToDashboardLoadingAnimationPtrOutputWithContext(context.Background())
}

func (o DashboardLoadingAnimationOutput) ToDashboardLoadingAnimationPtrOutputWithContext(ctx context.Context) DashboardLoadingAnimationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLoadingAnimation) *DashboardLoadingAnimation {
		return &v
	}).(DashboardLoadingAnimationPtrOutput)
}

func (o DashboardLoadingAnimationOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardLoadingAnimation) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardLoadingAnimationPtrOutput struct{ *pulumi.OutputState }

func (DashboardLoadingAnimationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLoadingAnimation)(nil)).Elem()
}

func (o DashboardLoadingAnimationPtrOutput) ToDashboardLoadingAnimationPtrOutput() DashboardLoadingAnimationPtrOutput {
	return o
}

func (o DashboardLoadingAnimationPtrOutput) ToDashboardLoadingAnimationPtrOutputWithContext(ctx context.Context) DashboardLoadingAnimationPtrOutput {
	return o
}

func (o DashboardLoadingAnimationPtrOutput) Elem() DashboardLoadingAnimationOutput {
	return o.ApplyT(func(v *DashboardLoadingAnimation) DashboardLoadingAnimation {
		if v != nil {
			return *v
		}
		var ret DashboardLoadingAnimation
		return ret
	}).(DashboardLoadingAnimationOutput)
}

func (o DashboardLoadingAnimationPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardLoadingAnimation) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardLocalNavigationConfiguration struct {
	TargetSheetId string `pulumi:"targetSheetId"`
}

// DashboardLocalNavigationConfigurationInput is an input type that accepts DashboardLocalNavigationConfigurationArgs and DashboardLocalNavigationConfigurationOutput values.
// You can construct a concrete instance of `DashboardLocalNavigationConfigurationInput` via:
//
//	DashboardLocalNavigationConfigurationArgs{...}
type DashboardLocalNavigationConfigurationInput interface {
	pulumi.Input

	ToDashboardLocalNavigationConfigurationOutput() DashboardLocalNavigationConfigurationOutput
	ToDashboardLocalNavigationConfigurationOutputWithContext(context.Context) DashboardLocalNavigationConfigurationOutput
}

type DashboardLocalNavigationConfigurationArgs struct {
	TargetSheetId pulumi.StringInput `pulumi:"targetSheetId"`
}

func (DashboardLocalNavigationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLocalNavigationConfiguration)(nil)).Elem()
}

func (i DashboardLocalNavigationConfigurationArgs) ToDashboardLocalNavigationConfigurationOutput() DashboardLocalNavigationConfigurationOutput {
	return i.ToDashboardLocalNavigationConfigurationOutputWithContext(context.Background())
}

func (i DashboardLocalNavigationConfigurationArgs) ToDashboardLocalNavigationConfigurationOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLocalNavigationConfigurationOutput)
}

func (i DashboardLocalNavigationConfigurationArgs) ToDashboardLocalNavigationConfigurationPtrOutput() DashboardLocalNavigationConfigurationPtrOutput {
	return i.ToDashboardLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardLocalNavigationConfigurationArgs) ToDashboardLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLocalNavigationConfigurationOutput).ToDashboardLocalNavigationConfigurationPtrOutputWithContext(ctx)
}

// DashboardLocalNavigationConfigurationPtrInput is an input type that accepts DashboardLocalNavigationConfigurationArgs, DashboardLocalNavigationConfigurationPtr and DashboardLocalNavigationConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardLocalNavigationConfigurationPtrInput` via:
//
//	        DashboardLocalNavigationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardLocalNavigationConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardLocalNavigationConfigurationPtrOutput() DashboardLocalNavigationConfigurationPtrOutput
	ToDashboardLocalNavigationConfigurationPtrOutputWithContext(context.Context) DashboardLocalNavigationConfigurationPtrOutput
}

type dashboardLocalNavigationConfigurationPtrType DashboardLocalNavigationConfigurationArgs

func DashboardLocalNavigationConfigurationPtr(v *DashboardLocalNavigationConfigurationArgs) DashboardLocalNavigationConfigurationPtrInput {
	return (*dashboardLocalNavigationConfigurationPtrType)(v)
}

func (*dashboardLocalNavigationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLocalNavigationConfiguration)(nil)).Elem()
}

func (i *dashboardLocalNavigationConfigurationPtrType) ToDashboardLocalNavigationConfigurationPtrOutput() DashboardLocalNavigationConfigurationPtrOutput {
	return i.ToDashboardLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardLocalNavigationConfigurationPtrType) ToDashboardLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLocalNavigationConfigurationPtrOutput)
}

type DashboardLocalNavigationConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardLocalNavigationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLocalNavigationConfiguration)(nil)).Elem()
}

func (o DashboardLocalNavigationConfigurationOutput) ToDashboardLocalNavigationConfigurationOutput() DashboardLocalNavigationConfigurationOutput {
	return o
}

func (o DashboardLocalNavigationConfigurationOutput) ToDashboardLocalNavigationConfigurationOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationOutput {
	return o
}

func (o DashboardLocalNavigationConfigurationOutput) ToDashboardLocalNavigationConfigurationPtrOutput() DashboardLocalNavigationConfigurationPtrOutput {
	return o.ToDashboardLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardLocalNavigationConfigurationOutput) ToDashboardLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLocalNavigationConfiguration) *DashboardLocalNavigationConfiguration {
		return &v
	}).(DashboardLocalNavigationConfigurationPtrOutput)
}

func (o DashboardLocalNavigationConfigurationOutput) TargetSheetId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLocalNavigationConfiguration) string { return v.TargetSheetId }).(pulumi.StringOutput)
}

type DashboardLocalNavigationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardLocalNavigationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLocalNavigationConfiguration)(nil)).Elem()
}

func (o DashboardLocalNavigationConfigurationPtrOutput) ToDashboardLocalNavigationConfigurationPtrOutput() DashboardLocalNavigationConfigurationPtrOutput {
	return o
}

func (o DashboardLocalNavigationConfigurationPtrOutput) ToDashboardLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) DashboardLocalNavigationConfigurationPtrOutput {
	return o
}

func (o DashboardLocalNavigationConfigurationPtrOutput) Elem() DashboardLocalNavigationConfigurationOutput {
	return o.ApplyT(func(v *DashboardLocalNavigationConfiguration) DashboardLocalNavigationConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardLocalNavigationConfiguration
		return ret
	}).(DashboardLocalNavigationConfigurationOutput)
}

func (o DashboardLocalNavigationConfigurationPtrOutput) TargetSheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLocalNavigationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSheetId
	}).(pulumi.StringPtrOutput)
}

type DashboardLongFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// DashboardLongFormatTextInput is an input type that accepts DashboardLongFormatTextArgs and DashboardLongFormatTextOutput values.
// You can construct a concrete instance of `DashboardLongFormatTextInput` via:
//
//	DashboardLongFormatTextArgs{...}
type DashboardLongFormatTextInput interface {
	pulumi.Input

	ToDashboardLongFormatTextOutput() DashboardLongFormatTextOutput
	ToDashboardLongFormatTextOutputWithContext(context.Context) DashboardLongFormatTextOutput
}

type DashboardLongFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (DashboardLongFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLongFormatText)(nil)).Elem()
}

func (i DashboardLongFormatTextArgs) ToDashboardLongFormatTextOutput() DashboardLongFormatTextOutput {
	return i.ToDashboardLongFormatTextOutputWithContext(context.Background())
}

func (i DashboardLongFormatTextArgs) ToDashboardLongFormatTextOutputWithContext(ctx context.Context) DashboardLongFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLongFormatTextOutput)
}

func (i DashboardLongFormatTextArgs) ToDashboardLongFormatTextPtrOutput() DashboardLongFormatTextPtrOutput {
	return i.ToDashboardLongFormatTextPtrOutputWithContext(context.Background())
}

func (i DashboardLongFormatTextArgs) ToDashboardLongFormatTextPtrOutputWithContext(ctx context.Context) DashboardLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLongFormatTextOutput).ToDashboardLongFormatTextPtrOutputWithContext(ctx)
}

// DashboardLongFormatTextPtrInput is an input type that accepts DashboardLongFormatTextArgs, DashboardLongFormatTextPtr and DashboardLongFormatTextPtrOutput values.
// You can construct a concrete instance of `DashboardLongFormatTextPtrInput` via:
//
//	        DashboardLongFormatTextArgs{...}
//
//	or:
//
//	        nil
type DashboardLongFormatTextPtrInput interface {
	pulumi.Input

	ToDashboardLongFormatTextPtrOutput() DashboardLongFormatTextPtrOutput
	ToDashboardLongFormatTextPtrOutputWithContext(context.Context) DashboardLongFormatTextPtrOutput
}

type dashboardLongFormatTextPtrType DashboardLongFormatTextArgs

func DashboardLongFormatTextPtr(v *DashboardLongFormatTextArgs) DashboardLongFormatTextPtrInput {
	return (*dashboardLongFormatTextPtrType)(v)
}

func (*dashboardLongFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLongFormatText)(nil)).Elem()
}

func (i *dashboardLongFormatTextPtrType) ToDashboardLongFormatTextPtrOutput() DashboardLongFormatTextPtrOutput {
	return i.ToDashboardLongFormatTextPtrOutputWithContext(context.Background())
}

func (i *dashboardLongFormatTextPtrType) ToDashboardLongFormatTextPtrOutputWithContext(ctx context.Context) DashboardLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLongFormatTextPtrOutput)
}

type DashboardLongFormatTextOutput struct{ *pulumi.OutputState }

func (DashboardLongFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLongFormatText)(nil)).Elem()
}

func (o DashboardLongFormatTextOutput) ToDashboardLongFormatTextOutput() DashboardLongFormatTextOutput {
	return o
}

func (o DashboardLongFormatTextOutput) ToDashboardLongFormatTextOutputWithContext(ctx context.Context) DashboardLongFormatTextOutput {
	return o
}

func (o DashboardLongFormatTextOutput) ToDashboardLongFormatTextPtrOutput() DashboardLongFormatTextPtrOutput {
	return o.ToDashboardLongFormatTextPtrOutputWithContext(context.Background())
}

func (o DashboardLongFormatTextOutput) ToDashboardLongFormatTextPtrOutputWithContext(ctx context.Context) DashboardLongFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLongFormatText) *DashboardLongFormatText {
		return &v
	}).(DashboardLongFormatTextPtrOutput)
}

func (o DashboardLongFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLongFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o DashboardLongFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardLongFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type DashboardLongFormatTextPtrOutput struct{ *pulumi.OutputState }

func (DashboardLongFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLongFormatText)(nil)).Elem()
}

func (o DashboardLongFormatTextPtrOutput) ToDashboardLongFormatTextPtrOutput() DashboardLongFormatTextPtrOutput {
	return o
}

func (o DashboardLongFormatTextPtrOutput) ToDashboardLongFormatTextPtrOutputWithContext(ctx context.Context) DashboardLongFormatTextPtrOutput {
	return o
}

func (o DashboardLongFormatTextPtrOutput) Elem() DashboardLongFormatTextOutput {
	return o.ApplyT(func(v *DashboardLongFormatText) DashboardLongFormatText {
		if v != nil {
			return *v
		}
		var ret DashboardLongFormatText
		return ret
	}).(DashboardLongFormatTextOutput)
}

func (o DashboardLongFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o DashboardLongFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type DashboardMappedDataSetParameter struct {
	DataSetIdentifier    string `pulumi:"dataSetIdentifier"`
	DataSetParameterName string `pulumi:"dataSetParameterName"`
}

// DashboardMappedDataSetParameterInput is an input type that accepts DashboardMappedDataSetParameterArgs and DashboardMappedDataSetParameterOutput values.
// You can construct a concrete instance of `DashboardMappedDataSetParameterInput` via:
//
//	DashboardMappedDataSetParameterArgs{...}
type DashboardMappedDataSetParameterInput interface {
	pulumi.Input

	ToDashboardMappedDataSetParameterOutput() DashboardMappedDataSetParameterOutput
	ToDashboardMappedDataSetParameterOutputWithContext(context.Context) DashboardMappedDataSetParameterOutput
}

type DashboardMappedDataSetParameterArgs struct {
	DataSetIdentifier    pulumi.StringInput `pulumi:"dataSetIdentifier"`
	DataSetParameterName pulumi.StringInput `pulumi:"dataSetParameterName"`
}

func (DashboardMappedDataSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMappedDataSetParameter)(nil)).Elem()
}

func (i DashboardMappedDataSetParameterArgs) ToDashboardMappedDataSetParameterOutput() DashboardMappedDataSetParameterOutput {
	return i.ToDashboardMappedDataSetParameterOutputWithContext(context.Background())
}

func (i DashboardMappedDataSetParameterArgs) ToDashboardMappedDataSetParameterOutputWithContext(ctx context.Context) DashboardMappedDataSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMappedDataSetParameterOutput)
}

// DashboardMappedDataSetParameterArrayInput is an input type that accepts DashboardMappedDataSetParameterArray and DashboardMappedDataSetParameterArrayOutput values.
// You can construct a concrete instance of `DashboardMappedDataSetParameterArrayInput` via:
//
//	DashboardMappedDataSetParameterArray{ DashboardMappedDataSetParameterArgs{...} }
type DashboardMappedDataSetParameterArrayInput interface {
	pulumi.Input

	ToDashboardMappedDataSetParameterArrayOutput() DashboardMappedDataSetParameterArrayOutput
	ToDashboardMappedDataSetParameterArrayOutputWithContext(context.Context) DashboardMappedDataSetParameterArrayOutput
}

type DashboardMappedDataSetParameterArray []DashboardMappedDataSetParameterInput

func (DashboardMappedDataSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMappedDataSetParameter)(nil)).Elem()
}

func (i DashboardMappedDataSetParameterArray) ToDashboardMappedDataSetParameterArrayOutput() DashboardMappedDataSetParameterArrayOutput {
	return i.ToDashboardMappedDataSetParameterArrayOutputWithContext(context.Background())
}

func (i DashboardMappedDataSetParameterArray) ToDashboardMappedDataSetParameterArrayOutputWithContext(ctx context.Context) DashboardMappedDataSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMappedDataSetParameterArrayOutput)
}

type DashboardMappedDataSetParameterOutput struct{ *pulumi.OutputState }

func (DashboardMappedDataSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMappedDataSetParameter)(nil)).Elem()
}

func (o DashboardMappedDataSetParameterOutput) ToDashboardMappedDataSetParameterOutput() DashboardMappedDataSetParameterOutput {
	return o
}

func (o DashboardMappedDataSetParameterOutput) ToDashboardMappedDataSetParameterOutputWithContext(ctx context.Context) DashboardMappedDataSetParameterOutput {
	return o
}

func (o DashboardMappedDataSetParameterOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardMappedDataSetParameter) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o DashboardMappedDataSetParameterOutput) DataSetParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardMappedDataSetParameter) string { return v.DataSetParameterName }).(pulumi.StringOutput)
}

type DashboardMappedDataSetParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardMappedDataSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMappedDataSetParameter)(nil)).Elem()
}

func (o DashboardMappedDataSetParameterArrayOutput) ToDashboardMappedDataSetParameterArrayOutput() DashboardMappedDataSetParameterArrayOutput {
	return o
}

func (o DashboardMappedDataSetParameterArrayOutput) ToDashboardMappedDataSetParameterArrayOutputWithContext(ctx context.Context) DashboardMappedDataSetParameterArrayOutput {
	return o
}

func (o DashboardMappedDataSetParameterArrayOutput) Index(i pulumi.IntInput) DashboardMappedDataSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardMappedDataSetParameter {
		return vs[0].([]DashboardMappedDataSetParameter)[vs[1].(int)]
	}).(DashboardMappedDataSetParameterOutput)
}

type DashboardMaximumLabelType struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardMaximumLabelTypeInput is an input type that accepts DashboardMaximumLabelTypeArgs and DashboardMaximumLabelTypeOutput values.
// You can construct a concrete instance of `DashboardMaximumLabelTypeInput` via:
//
//	DashboardMaximumLabelTypeArgs{...}
type DashboardMaximumLabelTypeInput interface {
	pulumi.Input

	ToDashboardMaximumLabelTypeOutput() DashboardMaximumLabelTypeOutput
	ToDashboardMaximumLabelTypeOutputWithContext(context.Context) DashboardMaximumLabelTypeOutput
}

type DashboardMaximumLabelTypeArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardMaximumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumLabelType)(nil)).Elem()
}

func (i DashboardMaximumLabelTypeArgs) ToDashboardMaximumLabelTypeOutput() DashboardMaximumLabelTypeOutput {
	return i.ToDashboardMaximumLabelTypeOutputWithContext(context.Background())
}

func (i DashboardMaximumLabelTypeArgs) ToDashboardMaximumLabelTypeOutputWithContext(ctx context.Context) DashboardMaximumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumLabelTypeOutput)
}

func (i DashboardMaximumLabelTypeArgs) ToDashboardMaximumLabelTypePtrOutput() DashboardMaximumLabelTypePtrOutput {
	return i.ToDashboardMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i DashboardMaximumLabelTypeArgs) ToDashboardMaximumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumLabelTypeOutput).ToDashboardMaximumLabelTypePtrOutputWithContext(ctx)
}

// DashboardMaximumLabelTypePtrInput is an input type that accepts DashboardMaximumLabelTypeArgs, DashboardMaximumLabelTypePtr and DashboardMaximumLabelTypePtrOutput values.
// You can construct a concrete instance of `DashboardMaximumLabelTypePtrInput` via:
//
//	        DashboardMaximumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type DashboardMaximumLabelTypePtrInput interface {
	pulumi.Input

	ToDashboardMaximumLabelTypePtrOutput() DashboardMaximumLabelTypePtrOutput
	ToDashboardMaximumLabelTypePtrOutputWithContext(context.Context) DashboardMaximumLabelTypePtrOutput
}

type dashboardMaximumLabelTypePtrType DashboardMaximumLabelTypeArgs

func DashboardMaximumLabelTypePtr(v *DashboardMaximumLabelTypeArgs) DashboardMaximumLabelTypePtrInput {
	return (*dashboardMaximumLabelTypePtrType)(v)
}

func (*dashboardMaximumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMaximumLabelType)(nil)).Elem()
}

func (i *dashboardMaximumLabelTypePtrType) ToDashboardMaximumLabelTypePtrOutput() DashboardMaximumLabelTypePtrOutput {
	return i.ToDashboardMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i *dashboardMaximumLabelTypePtrType) ToDashboardMaximumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumLabelTypePtrOutput)
}

type DashboardMaximumLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardMaximumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumLabelType)(nil)).Elem()
}

func (o DashboardMaximumLabelTypeOutput) ToDashboardMaximumLabelTypeOutput() DashboardMaximumLabelTypeOutput {
	return o
}

func (o DashboardMaximumLabelTypeOutput) ToDashboardMaximumLabelTypeOutputWithContext(ctx context.Context) DashboardMaximumLabelTypeOutput {
	return o
}

func (o DashboardMaximumLabelTypeOutput) ToDashboardMaximumLabelTypePtrOutput() DashboardMaximumLabelTypePtrOutput {
	return o.ToDashboardMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (o DashboardMaximumLabelTypeOutput) ToDashboardMaximumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMaximumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMaximumLabelType) *DashboardMaximumLabelType {
		return &v
	}).(DashboardMaximumLabelTypePtrOutput)
}

func (o DashboardMaximumLabelTypeOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardMaximumLabelType) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardMaximumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardMaximumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMaximumLabelType)(nil)).Elem()
}

func (o DashboardMaximumLabelTypePtrOutput) ToDashboardMaximumLabelTypePtrOutput() DashboardMaximumLabelTypePtrOutput {
	return o
}

func (o DashboardMaximumLabelTypePtrOutput) ToDashboardMaximumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMaximumLabelTypePtrOutput {
	return o
}

func (o DashboardMaximumLabelTypePtrOutput) Elem() DashboardMaximumLabelTypeOutput {
	return o.ApplyT(func(v *DashboardMaximumLabelType) DashboardMaximumLabelType {
		if v != nil {
			return *v
		}
		var ret DashboardMaximumLabelType
		return ret
	}).(DashboardMaximumLabelTypeOutput)
}

func (o DashboardMaximumLabelTypePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardMaximumLabelType) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardMaximumMinimumComputation struct {
	ComputationId string                                 `pulumi:"computationId"`
	Name          *string                                `pulumi:"name"`
	Time          DashboardDimensionField                `pulumi:"time"`
	Type          DashboardMaximumMinimumComputationType `pulumi:"type"`
	Value         *DashboardMeasureField                 `pulumi:"value"`
}

// DashboardMaximumMinimumComputationInput is an input type that accepts DashboardMaximumMinimumComputationArgs and DashboardMaximumMinimumComputationOutput values.
// You can construct a concrete instance of `DashboardMaximumMinimumComputationInput` via:
//
//	DashboardMaximumMinimumComputationArgs{...}
type DashboardMaximumMinimumComputationInput interface {
	pulumi.Input

	ToDashboardMaximumMinimumComputationOutput() DashboardMaximumMinimumComputationOutput
	ToDashboardMaximumMinimumComputationOutputWithContext(context.Context) DashboardMaximumMinimumComputationOutput
}

type DashboardMaximumMinimumComputationArgs struct {
	ComputationId pulumi.StringInput                          `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                       `pulumi:"name"`
	Time          DashboardDimensionFieldInput                `pulumi:"time"`
	Type          DashboardMaximumMinimumComputationTypeInput `pulumi:"type"`
	Value         DashboardMeasureFieldPtrInput               `pulumi:"value"`
}

func (DashboardMaximumMinimumComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumMinimumComputation)(nil)).Elem()
}

func (i DashboardMaximumMinimumComputationArgs) ToDashboardMaximumMinimumComputationOutput() DashboardMaximumMinimumComputationOutput {
	return i.ToDashboardMaximumMinimumComputationOutputWithContext(context.Background())
}

func (i DashboardMaximumMinimumComputationArgs) ToDashboardMaximumMinimumComputationOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumMinimumComputationOutput)
}

func (i DashboardMaximumMinimumComputationArgs) ToDashboardMaximumMinimumComputationPtrOutput() DashboardMaximumMinimumComputationPtrOutput {
	return i.ToDashboardMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i DashboardMaximumMinimumComputationArgs) ToDashboardMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumMinimumComputationOutput).ToDashboardMaximumMinimumComputationPtrOutputWithContext(ctx)
}

// DashboardMaximumMinimumComputationPtrInput is an input type that accepts DashboardMaximumMinimumComputationArgs, DashboardMaximumMinimumComputationPtr and DashboardMaximumMinimumComputationPtrOutput values.
// You can construct a concrete instance of `DashboardMaximumMinimumComputationPtrInput` via:
//
//	        DashboardMaximumMinimumComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardMaximumMinimumComputationPtrInput interface {
	pulumi.Input

	ToDashboardMaximumMinimumComputationPtrOutput() DashboardMaximumMinimumComputationPtrOutput
	ToDashboardMaximumMinimumComputationPtrOutputWithContext(context.Context) DashboardMaximumMinimumComputationPtrOutput
}

type dashboardMaximumMinimumComputationPtrType DashboardMaximumMinimumComputationArgs

func DashboardMaximumMinimumComputationPtr(v *DashboardMaximumMinimumComputationArgs) DashboardMaximumMinimumComputationPtrInput {
	return (*dashboardMaximumMinimumComputationPtrType)(v)
}

func (*dashboardMaximumMinimumComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMaximumMinimumComputation)(nil)).Elem()
}

func (i *dashboardMaximumMinimumComputationPtrType) ToDashboardMaximumMinimumComputationPtrOutput() DashboardMaximumMinimumComputationPtrOutput {
	return i.ToDashboardMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardMaximumMinimumComputationPtrType) ToDashboardMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMaximumMinimumComputationPtrOutput)
}

type DashboardMaximumMinimumComputationOutput struct{ *pulumi.OutputState }

func (DashboardMaximumMinimumComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMaximumMinimumComputation)(nil)).Elem()
}

func (o DashboardMaximumMinimumComputationOutput) ToDashboardMaximumMinimumComputationOutput() DashboardMaximumMinimumComputationOutput {
	return o
}

func (o DashboardMaximumMinimumComputationOutput) ToDashboardMaximumMinimumComputationOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationOutput {
	return o
}

func (o DashboardMaximumMinimumComputationOutput) ToDashboardMaximumMinimumComputationPtrOutput() DashboardMaximumMinimumComputationPtrOutput {
	return o.ToDashboardMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (o DashboardMaximumMinimumComputationOutput) ToDashboardMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMaximumMinimumComputation) *DashboardMaximumMinimumComputation {
		return &v
	}).(DashboardMaximumMinimumComputationPtrOutput)
}

func (o DashboardMaximumMinimumComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardMaximumMinimumComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardMaximumMinimumComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardMaximumMinimumComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardMaximumMinimumComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardMaximumMinimumComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardMaximumMinimumComputationOutput) Type() DashboardMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v DashboardMaximumMinimumComputation) DashboardMaximumMinimumComputationType { return v.Type }).(DashboardMaximumMinimumComputationTypeOutput)
}

func (o DashboardMaximumMinimumComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardMaximumMinimumComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardMaximumMinimumComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardMaximumMinimumComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMaximumMinimumComputation)(nil)).Elem()
}

func (o DashboardMaximumMinimumComputationPtrOutput) ToDashboardMaximumMinimumComputationPtrOutput() DashboardMaximumMinimumComputationPtrOutput {
	return o
}

func (o DashboardMaximumMinimumComputationPtrOutput) ToDashboardMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) DashboardMaximumMinimumComputationPtrOutput {
	return o
}

func (o DashboardMaximumMinimumComputationPtrOutput) Elem() DashboardMaximumMinimumComputationOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) DashboardMaximumMinimumComputation {
		if v != nil {
			return *v
		}
		var ret DashboardMaximumMinimumComputation
		return ret
	}).(DashboardMaximumMinimumComputationOutput)
}

func (o DashboardMaximumMinimumComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardMaximumMinimumComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardMaximumMinimumComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardMaximumMinimumComputationPtrOutput) Type() DashboardMaximumMinimumComputationTypePtrOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) *DashboardMaximumMinimumComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DashboardMaximumMinimumComputationTypePtrOutput)
}

func (o DashboardMaximumMinimumComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMaximumMinimumComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardMeasureField struct {
	CalculatedMeasureField  *DashboardCalculatedMeasureField  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField *DashboardCategoricalMeasureField `pulumi:"categoricalMeasureField"`
	DateMeasureField        *DashboardDateMeasureField        `pulumi:"dateMeasureField"`
	NumericalMeasureField   *DashboardNumericalMeasureField   `pulumi:"numericalMeasureField"`
}

// DashboardMeasureFieldInput is an input type that accepts DashboardMeasureFieldArgs and DashboardMeasureFieldOutput values.
// You can construct a concrete instance of `DashboardMeasureFieldInput` via:
//
//	DashboardMeasureFieldArgs{...}
type DashboardMeasureFieldInput interface {
	pulumi.Input

	ToDashboardMeasureFieldOutput() DashboardMeasureFieldOutput
	ToDashboardMeasureFieldOutputWithContext(context.Context) DashboardMeasureFieldOutput
}

type DashboardMeasureFieldArgs struct {
	CalculatedMeasureField  DashboardCalculatedMeasureFieldPtrInput  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField DashboardCategoricalMeasureFieldPtrInput `pulumi:"categoricalMeasureField"`
	DateMeasureField        DashboardDateMeasureFieldPtrInput        `pulumi:"dateMeasureField"`
	NumericalMeasureField   DashboardNumericalMeasureFieldPtrInput   `pulumi:"numericalMeasureField"`
}

func (DashboardMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMeasureField)(nil)).Elem()
}

func (i DashboardMeasureFieldArgs) ToDashboardMeasureFieldOutput() DashboardMeasureFieldOutput {
	return i.ToDashboardMeasureFieldOutputWithContext(context.Background())
}

func (i DashboardMeasureFieldArgs) ToDashboardMeasureFieldOutputWithContext(ctx context.Context) DashboardMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMeasureFieldOutput)
}

func (i DashboardMeasureFieldArgs) ToDashboardMeasureFieldPtrOutput() DashboardMeasureFieldPtrOutput {
	return i.ToDashboardMeasureFieldPtrOutputWithContext(context.Background())
}

func (i DashboardMeasureFieldArgs) ToDashboardMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMeasureFieldOutput).ToDashboardMeasureFieldPtrOutputWithContext(ctx)
}

// DashboardMeasureFieldPtrInput is an input type that accepts DashboardMeasureFieldArgs, DashboardMeasureFieldPtr and DashboardMeasureFieldPtrOutput values.
// You can construct a concrete instance of `DashboardMeasureFieldPtrInput` via:
//
//	        DashboardMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardMeasureFieldPtrInput interface {
	pulumi.Input

	ToDashboardMeasureFieldPtrOutput() DashboardMeasureFieldPtrOutput
	ToDashboardMeasureFieldPtrOutputWithContext(context.Context) DashboardMeasureFieldPtrOutput
}

type dashboardMeasureFieldPtrType DashboardMeasureFieldArgs

func DashboardMeasureFieldPtr(v *DashboardMeasureFieldArgs) DashboardMeasureFieldPtrInput {
	return (*dashboardMeasureFieldPtrType)(v)
}

func (*dashboardMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMeasureField)(nil)).Elem()
}

func (i *dashboardMeasureFieldPtrType) ToDashboardMeasureFieldPtrOutput() DashboardMeasureFieldPtrOutput {
	return i.ToDashboardMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardMeasureFieldPtrType) ToDashboardMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMeasureFieldPtrOutput)
}

// DashboardMeasureFieldArrayInput is an input type that accepts DashboardMeasureFieldArray and DashboardMeasureFieldArrayOutput values.
// You can construct a concrete instance of `DashboardMeasureFieldArrayInput` via:
//
//	DashboardMeasureFieldArray{ DashboardMeasureFieldArgs{...} }
type DashboardMeasureFieldArrayInput interface {
	pulumi.Input

	ToDashboardMeasureFieldArrayOutput() DashboardMeasureFieldArrayOutput
	ToDashboardMeasureFieldArrayOutputWithContext(context.Context) DashboardMeasureFieldArrayOutput
}

type DashboardMeasureFieldArray []DashboardMeasureFieldInput

func (DashboardMeasureFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMeasureField)(nil)).Elem()
}

func (i DashboardMeasureFieldArray) ToDashboardMeasureFieldArrayOutput() DashboardMeasureFieldArrayOutput {
	return i.ToDashboardMeasureFieldArrayOutputWithContext(context.Background())
}

func (i DashboardMeasureFieldArray) ToDashboardMeasureFieldArrayOutputWithContext(ctx context.Context) DashboardMeasureFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMeasureFieldArrayOutput)
}

type DashboardMeasureFieldOutput struct{ *pulumi.OutputState }

func (DashboardMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMeasureField)(nil)).Elem()
}

func (o DashboardMeasureFieldOutput) ToDashboardMeasureFieldOutput() DashboardMeasureFieldOutput {
	return o
}

func (o DashboardMeasureFieldOutput) ToDashboardMeasureFieldOutputWithContext(ctx context.Context) DashboardMeasureFieldOutput {
	return o
}

func (o DashboardMeasureFieldOutput) ToDashboardMeasureFieldPtrOutput() DashboardMeasureFieldPtrOutput {
	return o.ToDashboardMeasureFieldPtrOutputWithContext(context.Background())
}

func (o DashboardMeasureFieldOutput) ToDashboardMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMeasureField) *DashboardMeasureField {
		return &v
	}).(DashboardMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldOutput) CalculatedMeasureField() DashboardCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardMeasureField) *DashboardCalculatedMeasureField { return v.CalculatedMeasureField }).(DashboardCalculatedMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldOutput) CategoricalMeasureField() DashboardCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardMeasureField) *DashboardCategoricalMeasureField { return v.CategoricalMeasureField }).(DashboardCategoricalMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldOutput) DateMeasureField() DashboardDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardMeasureField) *DashboardDateMeasureField { return v.DateMeasureField }).(DashboardDateMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldOutput) NumericalMeasureField() DashboardNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardMeasureField) *DashboardNumericalMeasureField { return v.NumericalMeasureField }).(DashboardNumericalMeasureFieldPtrOutput)
}

type DashboardMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMeasureField)(nil)).Elem()
}

func (o DashboardMeasureFieldPtrOutput) ToDashboardMeasureFieldPtrOutput() DashboardMeasureFieldPtrOutput {
	return o
}

func (o DashboardMeasureFieldPtrOutput) ToDashboardMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardMeasureFieldPtrOutput {
	return o
}

func (o DashboardMeasureFieldPtrOutput) Elem() DashboardMeasureFieldOutput {
	return o.ApplyT(func(v *DashboardMeasureField) DashboardMeasureField {
		if v != nil {
			return *v
		}
		var ret DashboardMeasureField
		return ret
	}).(DashboardMeasureFieldOutput)
}

func (o DashboardMeasureFieldPtrOutput) CalculatedMeasureField() DashboardCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMeasureField) *DashboardCalculatedMeasureField {
		if v == nil {
			return nil
		}
		return v.CalculatedMeasureField
	}).(DashboardCalculatedMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldPtrOutput) CategoricalMeasureField() DashboardCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMeasureField) *DashboardCategoricalMeasureField {
		if v == nil {
			return nil
		}
		return v.CategoricalMeasureField
	}).(DashboardCategoricalMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldPtrOutput) DateMeasureField() DashboardDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMeasureField) *DashboardDateMeasureField {
		if v == nil {
			return nil
		}
		return v.DateMeasureField
	}).(DashboardDateMeasureFieldPtrOutput)
}

func (o DashboardMeasureFieldPtrOutput) NumericalMeasureField() DashboardNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMeasureField) *DashboardNumericalMeasureField {
		if v == nil {
			return nil
		}
		return v.NumericalMeasureField
	}).(DashboardNumericalMeasureFieldPtrOutput)
}

type DashboardMeasureFieldArrayOutput struct{ *pulumi.OutputState }

func (DashboardMeasureFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMeasureField)(nil)).Elem()
}

func (o DashboardMeasureFieldArrayOutput) ToDashboardMeasureFieldArrayOutput() DashboardMeasureFieldArrayOutput {
	return o
}

func (o DashboardMeasureFieldArrayOutput) ToDashboardMeasureFieldArrayOutputWithContext(ctx context.Context) DashboardMeasureFieldArrayOutput {
	return o
}

func (o DashboardMeasureFieldArrayOutput) Index(i pulumi.IntInput) DashboardMeasureFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardMeasureField {
		return vs[0].([]DashboardMeasureField)[vs[1].(int)]
	}).(DashboardMeasureFieldOutput)
}

type DashboardMetricComparisonComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	FromValue     DashboardMeasureField   `pulumi:"fromValue"`
	Name          *string                 `pulumi:"name"`
	TargetValue   DashboardMeasureField   `pulumi:"targetValue"`
	Time          DashboardDimensionField `pulumi:"time"`
}

// DashboardMetricComparisonComputationInput is an input type that accepts DashboardMetricComparisonComputationArgs and DashboardMetricComparisonComputationOutput values.
// You can construct a concrete instance of `DashboardMetricComparisonComputationInput` via:
//
//	DashboardMetricComparisonComputationArgs{...}
type DashboardMetricComparisonComputationInput interface {
	pulumi.Input

	ToDashboardMetricComparisonComputationOutput() DashboardMetricComparisonComputationOutput
	ToDashboardMetricComparisonComputationOutputWithContext(context.Context) DashboardMetricComparisonComputationOutput
}

type DashboardMetricComparisonComputationArgs struct {
	ComputationId pulumi.StringInput           `pulumi:"computationId"`
	FromValue     DashboardMeasureFieldInput   `pulumi:"fromValue"`
	Name          pulumi.StringPtrInput        `pulumi:"name"`
	TargetValue   DashboardMeasureFieldInput   `pulumi:"targetValue"`
	Time          DashboardDimensionFieldInput `pulumi:"time"`
}

func (DashboardMetricComparisonComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMetricComparisonComputation)(nil)).Elem()
}

func (i DashboardMetricComparisonComputationArgs) ToDashboardMetricComparisonComputationOutput() DashboardMetricComparisonComputationOutput {
	return i.ToDashboardMetricComparisonComputationOutputWithContext(context.Background())
}

func (i DashboardMetricComparisonComputationArgs) ToDashboardMetricComparisonComputationOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMetricComparisonComputationOutput)
}

func (i DashboardMetricComparisonComputationArgs) ToDashboardMetricComparisonComputationPtrOutput() DashboardMetricComparisonComputationPtrOutput {
	return i.ToDashboardMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i DashboardMetricComparisonComputationArgs) ToDashboardMetricComparisonComputationPtrOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMetricComparisonComputationOutput).ToDashboardMetricComparisonComputationPtrOutputWithContext(ctx)
}

// DashboardMetricComparisonComputationPtrInput is an input type that accepts DashboardMetricComparisonComputationArgs, DashboardMetricComparisonComputationPtr and DashboardMetricComparisonComputationPtrOutput values.
// You can construct a concrete instance of `DashboardMetricComparisonComputationPtrInput` via:
//
//	        DashboardMetricComparisonComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardMetricComparisonComputationPtrInput interface {
	pulumi.Input

	ToDashboardMetricComparisonComputationPtrOutput() DashboardMetricComparisonComputationPtrOutput
	ToDashboardMetricComparisonComputationPtrOutputWithContext(context.Context) DashboardMetricComparisonComputationPtrOutput
}

type dashboardMetricComparisonComputationPtrType DashboardMetricComparisonComputationArgs

func DashboardMetricComparisonComputationPtr(v *DashboardMetricComparisonComputationArgs) DashboardMetricComparisonComputationPtrInput {
	return (*dashboardMetricComparisonComputationPtrType)(v)
}

func (*dashboardMetricComparisonComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMetricComparisonComputation)(nil)).Elem()
}

func (i *dashboardMetricComparisonComputationPtrType) ToDashboardMetricComparisonComputationPtrOutput() DashboardMetricComparisonComputationPtrOutput {
	return i.ToDashboardMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardMetricComparisonComputationPtrType) ToDashboardMetricComparisonComputationPtrOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMetricComparisonComputationPtrOutput)
}

type DashboardMetricComparisonComputationOutput struct{ *pulumi.OutputState }

func (DashboardMetricComparisonComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMetricComparisonComputation)(nil)).Elem()
}

func (o DashboardMetricComparisonComputationOutput) ToDashboardMetricComparisonComputationOutput() DashboardMetricComparisonComputationOutput {
	return o
}

func (o DashboardMetricComparisonComputationOutput) ToDashboardMetricComparisonComputationOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationOutput {
	return o
}

func (o DashboardMetricComparisonComputationOutput) ToDashboardMetricComparisonComputationPtrOutput() DashboardMetricComparisonComputationPtrOutput {
	return o.ToDashboardMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (o DashboardMetricComparisonComputationOutput) ToDashboardMetricComparisonComputationPtrOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMetricComparisonComputation) *DashboardMetricComparisonComputation {
		return &v
	}).(DashboardMetricComparisonComputationPtrOutput)
}

func (o DashboardMetricComparisonComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardMetricComparisonComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardMetricComparisonComputationOutput) FromValue() DashboardMeasureFieldOutput {
	return o.ApplyT(func(v DashboardMetricComparisonComputation) DashboardMeasureField { return v.FromValue }).(DashboardMeasureFieldOutput)
}

func (o DashboardMetricComparisonComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardMetricComparisonComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardMetricComparisonComputationOutput) TargetValue() DashboardMeasureFieldOutput {
	return o.ApplyT(func(v DashboardMetricComparisonComputation) DashboardMeasureField { return v.TargetValue }).(DashboardMeasureFieldOutput)
}

func (o DashboardMetricComparisonComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardMetricComparisonComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

type DashboardMetricComparisonComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardMetricComparisonComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMetricComparisonComputation)(nil)).Elem()
}

func (o DashboardMetricComparisonComputationPtrOutput) ToDashboardMetricComparisonComputationPtrOutput() DashboardMetricComparisonComputationPtrOutput {
	return o
}

func (o DashboardMetricComparisonComputationPtrOutput) ToDashboardMetricComparisonComputationPtrOutputWithContext(ctx context.Context) DashboardMetricComparisonComputationPtrOutput {
	return o
}

func (o DashboardMetricComparisonComputationPtrOutput) Elem() DashboardMetricComparisonComputationOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) DashboardMetricComparisonComputation {
		if v != nil {
			return *v
		}
		var ret DashboardMetricComparisonComputation
		return ret
	}).(DashboardMetricComparisonComputationOutput)
}

func (o DashboardMetricComparisonComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardMetricComparisonComputationPtrOutput) FromValue() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return &v.FromValue
	}).(DashboardMeasureFieldPtrOutput)
}

func (o DashboardMetricComparisonComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardMetricComparisonComputationPtrOutput) TargetValue() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return &v.TargetValue
	}).(DashboardMeasureFieldPtrOutput)
}

func (o DashboardMetricComparisonComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardMetricComparisonComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

type DashboardMinimumLabelType struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardMinimumLabelTypeInput is an input type that accepts DashboardMinimumLabelTypeArgs and DashboardMinimumLabelTypeOutput values.
// You can construct a concrete instance of `DashboardMinimumLabelTypeInput` via:
//
//	DashboardMinimumLabelTypeArgs{...}
type DashboardMinimumLabelTypeInput interface {
	pulumi.Input

	ToDashboardMinimumLabelTypeOutput() DashboardMinimumLabelTypeOutput
	ToDashboardMinimumLabelTypeOutputWithContext(context.Context) DashboardMinimumLabelTypeOutput
}

type DashboardMinimumLabelTypeArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardMinimumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMinimumLabelType)(nil)).Elem()
}

func (i DashboardMinimumLabelTypeArgs) ToDashboardMinimumLabelTypeOutput() DashboardMinimumLabelTypeOutput {
	return i.ToDashboardMinimumLabelTypeOutputWithContext(context.Background())
}

func (i DashboardMinimumLabelTypeArgs) ToDashboardMinimumLabelTypeOutputWithContext(ctx context.Context) DashboardMinimumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMinimumLabelTypeOutput)
}

func (i DashboardMinimumLabelTypeArgs) ToDashboardMinimumLabelTypePtrOutput() DashboardMinimumLabelTypePtrOutput {
	return i.ToDashboardMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i DashboardMinimumLabelTypeArgs) ToDashboardMinimumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMinimumLabelTypeOutput).ToDashboardMinimumLabelTypePtrOutputWithContext(ctx)
}

// DashboardMinimumLabelTypePtrInput is an input type that accepts DashboardMinimumLabelTypeArgs, DashboardMinimumLabelTypePtr and DashboardMinimumLabelTypePtrOutput values.
// You can construct a concrete instance of `DashboardMinimumLabelTypePtrInput` via:
//
//	        DashboardMinimumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type DashboardMinimumLabelTypePtrInput interface {
	pulumi.Input

	ToDashboardMinimumLabelTypePtrOutput() DashboardMinimumLabelTypePtrOutput
	ToDashboardMinimumLabelTypePtrOutputWithContext(context.Context) DashboardMinimumLabelTypePtrOutput
}

type dashboardMinimumLabelTypePtrType DashboardMinimumLabelTypeArgs

func DashboardMinimumLabelTypePtr(v *DashboardMinimumLabelTypeArgs) DashboardMinimumLabelTypePtrInput {
	return (*dashboardMinimumLabelTypePtrType)(v)
}

func (*dashboardMinimumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMinimumLabelType)(nil)).Elem()
}

func (i *dashboardMinimumLabelTypePtrType) ToDashboardMinimumLabelTypePtrOutput() DashboardMinimumLabelTypePtrOutput {
	return i.ToDashboardMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i *dashboardMinimumLabelTypePtrType) ToDashboardMinimumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMinimumLabelTypePtrOutput)
}

type DashboardMinimumLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardMinimumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMinimumLabelType)(nil)).Elem()
}

func (o DashboardMinimumLabelTypeOutput) ToDashboardMinimumLabelTypeOutput() DashboardMinimumLabelTypeOutput {
	return o
}

func (o DashboardMinimumLabelTypeOutput) ToDashboardMinimumLabelTypeOutputWithContext(ctx context.Context) DashboardMinimumLabelTypeOutput {
	return o
}

func (o DashboardMinimumLabelTypeOutput) ToDashboardMinimumLabelTypePtrOutput() DashboardMinimumLabelTypePtrOutput {
	return o.ToDashboardMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (o DashboardMinimumLabelTypeOutput) ToDashboardMinimumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMinimumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardMinimumLabelType) *DashboardMinimumLabelType {
		return &v
	}).(DashboardMinimumLabelTypePtrOutput)
}

func (o DashboardMinimumLabelTypeOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardMinimumLabelType) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardMinimumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardMinimumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardMinimumLabelType)(nil)).Elem()
}

func (o DashboardMinimumLabelTypePtrOutput) ToDashboardMinimumLabelTypePtrOutput() DashboardMinimumLabelTypePtrOutput {
	return o
}

func (o DashboardMinimumLabelTypePtrOutput) ToDashboardMinimumLabelTypePtrOutputWithContext(ctx context.Context) DashboardMinimumLabelTypePtrOutput {
	return o
}

func (o DashboardMinimumLabelTypePtrOutput) Elem() DashboardMinimumLabelTypeOutput {
	return o.ApplyT(func(v *DashboardMinimumLabelType) DashboardMinimumLabelType {
		if v != nil {
			return *v
		}
		var ret DashboardMinimumLabelType
		return ret
	}).(DashboardMinimumLabelTypeOutput)
}

func (o DashboardMinimumLabelTypePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardMinimumLabelType) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardMissingDataConfiguration struct {
	TreatmentOption *DashboardMissingDataTreatmentOption `pulumi:"treatmentOption"`
}

// DashboardMissingDataConfigurationInput is an input type that accepts DashboardMissingDataConfigurationArgs and DashboardMissingDataConfigurationOutput values.
// You can construct a concrete instance of `DashboardMissingDataConfigurationInput` via:
//
//	DashboardMissingDataConfigurationArgs{...}
type DashboardMissingDataConfigurationInput interface {
	pulumi.Input

	ToDashboardMissingDataConfigurationOutput() DashboardMissingDataConfigurationOutput
	ToDashboardMissingDataConfigurationOutputWithContext(context.Context) DashboardMissingDataConfigurationOutput
}

type DashboardMissingDataConfigurationArgs struct {
	TreatmentOption DashboardMissingDataTreatmentOptionPtrInput `pulumi:"treatmentOption"`
}

func (DashboardMissingDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMissingDataConfiguration)(nil)).Elem()
}

func (i DashboardMissingDataConfigurationArgs) ToDashboardMissingDataConfigurationOutput() DashboardMissingDataConfigurationOutput {
	return i.ToDashboardMissingDataConfigurationOutputWithContext(context.Background())
}

func (i DashboardMissingDataConfigurationArgs) ToDashboardMissingDataConfigurationOutputWithContext(ctx context.Context) DashboardMissingDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMissingDataConfigurationOutput)
}

// DashboardMissingDataConfigurationArrayInput is an input type that accepts DashboardMissingDataConfigurationArray and DashboardMissingDataConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardMissingDataConfigurationArrayInput` via:
//
//	DashboardMissingDataConfigurationArray{ DashboardMissingDataConfigurationArgs{...} }
type DashboardMissingDataConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardMissingDataConfigurationArrayOutput() DashboardMissingDataConfigurationArrayOutput
	ToDashboardMissingDataConfigurationArrayOutputWithContext(context.Context) DashboardMissingDataConfigurationArrayOutput
}

type DashboardMissingDataConfigurationArray []DashboardMissingDataConfigurationInput

func (DashboardMissingDataConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMissingDataConfiguration)(nil)).Elem()
}

func (i DashboardMissingDataConfigurationArray) ToDashboardMissingDataConfigurationArrayOutput() DashboardMissingDataConfigurationArrayOutput {
	return i.ToDashboardMissingDataConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardMissingDataConfigurationArray) ToDashboardMissingDataConfigurationArrayOutputWithContext(ctx context.Context) DashboardMissingDataConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMissingDataConfigurationArrayOutput)
}

type DashboardMissingDataConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardMissingDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardMissingDataConfiguration)(nil)).Elem()
}

func (o DashboardMissingDataConfigurationOutput) ToDashboardMissingDataConfigurationOutput() DashboardMissingDataConfigurationOutput {
	return o
}

func (o DashboardMissingDataConfigurationOutput) ToDashboardMissingDataConfigurationOutputWithContext(ctx context.Context) DashboardMissingDataConfigurationOutput {
	return o
}

func (o DashboardMissingDataConfigurationOutput) TreatmentOption() DashboardMissingDataTreatmentOptionPtrOutput {
	return o.ApplyT(func(v DashboardMissingDataConfiguration) *DashboardMissingDataTreatmentOption {
		return v.TreatmentOption
	}).(DashboardMissingDataTreatmentOptionPtrOutput)
}

type DashboardMissingDataConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardMissingDataConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardMissingDataConfiguration)(nil)).Elem()
}

func (o DashboardMissingDataConfigurationArrayOutput) ToDashboardMissingDataConfigurationArrayOutput() DashboardMissingDataConfigurationArrayOutput {
	return o
}

func (o DashboardMissingDataConfigurationArrayOutput) ToDashboardMissingDataConfigurationArrayOutputWithContext(ctx context.Context) DashboardMissingDataConfigurationArrayOutput {
	return o
}

func (o DashboardMissingDataConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardMissingDataConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardMissingDataConfiguration {
		return vs[0].([]DashboardMissingDataConfiguration)[vs[1].(int)]
	}).(DashboardMissingDataConfigurationOutput)
}

type DashboardNegativeValueConfiguration struct {
	DisplayMode DashboardNegativeValueDisplayMode `pulumi:"displayMode"`
}

// DashboardNegativeValueConfigurationInput is an input type that accepts DashboardNegativeValueConfigurationArgs and DashboardNegativeValueConfigurationOutput values.
// You can construct a concrete instance of `DashboardNegativeValueConfigurationInput` via:
//
//	DashboardNegativeValueConfigurationArgs{...}
type DashboardNegativeValueConfigurationInput interface {
	pulumi.Input

	ToDashboardNegativeValueConfigurationOutput() DashboardNegativeValueConfigurationOutput
	ToDashboardNegativeValueConfigurationOutputWithContext(context.Context) DashboardNegativeValueConfigurationOutput
}

type DashboardNegativeValueConfigurationArgs struct {
	DisplayMode DashboardNegativeValueDisplayModeInput `pulumi:"displayMode"`
}

func (DashboardNegativeValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNegativeValueConfiguration)(nil)).Elem()
}

func (i DashboardNegativeValueConfigurationArgs) ToDashboardNegativeValueConfigurationOutput() DashboardNegativeValueConfigurationOutput {
	return i.ToDashboardNegativeValueConfigurationOutputWithContext(context.Background())
}

func (i DashboardNegativeValueConfigurationArgs) ToDashboardNegativeValueConfigurationOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNegativeValueConfigurationOutput)
}

func (i DashboardNegativeValueConfigurationArgs) ToDashboardNegativeValueConfigurationPtrOutput() DashboardNegativeValueConfigurationPtrOutput {
	return i.ToDashboardNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNegativeValueConfigurationArgs) ToDashboardNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNegativeValueConfigurationOutput).ToDashboardNegativeValueConfigurationPtrOutputWithContext(ctx)
}

// DashboardNegativeValueConfigurationPtrInput is an input type that accepts DashboardNegativeValueConfigurationArgs, DashboardNegativeValueConfigurationPtr and DashboardNegativeValueConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNegativeValueConfigurationPtrInput` via:
//
//	        DashboardNegativeValueConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNegativeValueConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNegativeValueConfigurationPtrOutput() DashboardNegativeValueConfigurationPtrOutput
	ToDashboardNegativeValueConfigurationPtrOutputWithContext(context.Context) DashboardNegativeValueConfigurationPtrOutput
}

type dashboardNegativeValueConfigurationPtrType DashboardNegativeValueConfigurationArgs

func DashboardNegativeValueConfigurationPtr(v *DashboardNegativeValueConfigurationArgs) DashboardNegativeValueConfigurationPtrInput {
	return (*dashboardNegativeValueConfigurationPtrType)(v)
}

func (*dashboardNegativeValueConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNegativeValueConfiguration)(nil)).Elem()
}

func (i *dashboardNegativeValueConfigurationPtrType) ToDashboardNegativeValueConfigurationPtrOutput() DashboardNegativeValueConfigurationPtrOutput {
	return i.ToDashboardNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNegativeValueConfigurationPtrType) ToDashboardNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNegativeValueConfigurationPtrOutput)
}

type DashboardNegativeValueConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNegativeValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNegativeValueConfiguration)(nil)).Elem()
}

func (o DashboardNegativeValueConfigurationOutput) ToDashboardNegativeValueConfigurationOutput() DashboardNegativeValueConfigurationOutput {
	return o
}

func (o DashboardNegativeValueConfigurationOutput) ToDashboardNegativeValueConfigurationOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationOutput {
	return o
}

func (o DashboardNegativeValueConfigurationOutput) ToDashboardNegativeValueConfigurationPtrOutput() DashboardNegativeValueConfigurationPtrOutput {
	return o.ToDashboardNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNegativeValueConfigurationOutput) ToDashboardNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNegativeValueConfiguration) *DashboardNegativeValueConfiguration {
		return &v
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardNegativeValueConfigurationOutput) DisplayMode() DashboardNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v DashboardNegativeValueConfiguration) DashboardNegativeValueDisplayMode { return v.DisplayMode }).(DashboardNegativeValueDisplayModeOutput)
}

type DashboardNegativeValueConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNegativeValueConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNegativeValueConfiguration)(nil)).Elem()
}

func (o DashboardNegativeValueConfigurationPtrOutput) ToDashboardNegativeValueConfigurationPtrOutput() DashboardNegativeValueConfigurationPtrOutput {
	return o
}

func (o DashboardNegativeValueConfigurationPtrOutput) ToDashboardNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) DashboardNegativeValueConfigurationPtrOutput {
	return o
}

func (o DashboardNegativeValueConfigurationPtrOutput) Elem() DashboardNegativeValueConfigurationOutput {
	return o.ApplyT(func(v *DashboardNegativeValueConfiguration) DashboardNegativeValueConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNegativeValueConfiguration
		return ret
	}).(DashboardNegativeValueConfigurationOutput)
}

func (o DashboardNegativeValueConfigurationPtrOutput) DisplayMode() DashboardNegativeValueDisplayModePtrOutput {
	return o.ApplyT(func(v *DashboardNegativeValueConfiguration) *DashboardNegativeValueDisplayMode {
		if v == nil {
			return nil
		}
		return &v.DisplayMode
	}).(DashboardNegativeValueDisplayModePtrOutput)
}

type DashboardNullValueFormatConfiguration struct {
	NullString string `pulumi:"nullString"`
}

// DashboardNullValueFormatConfigurationInput is an input type that accepts DashboardNullValueFormatConfigurationArgs and DashboardNullValueFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardNullValueFormatConfigurationInput` via:
//
//	DashboardNullValueFormatConfigurationArgs{...}
type DashboardNullValueFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardNullValueFormatConfigurationOutput() DashboardNullValueFormatConfigurationOutput
	ToDashboardNullValueFormatConfigurationOutputWithContext(context.Context) DashboardNullValueFormatConfigurationOutput
}

type DashboardNullValueFormatConfigurationArgs struct {
	NullString pulumi.StringInput `pulumi:"nullString"`
}

func (DashboardNullValueFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNullValueFormatConfiguration)(nil)).Elem()
}

func (i DashboardNullValueFormatConfigurationArgs) ToDashboardNullValueFormatConfigurationOutput() DashboardNullValueFormatConfigurationOutput {
	return i.ToDashboardNullValueFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardNullValueFormatConfigurationArgs) ToDashboardNullValueFormatConfigurationOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNullValueFormatConfigurationOutput)
}

func (i DashboardNullValueFormatConfigurationArgs) ToDashboardNullValueFormatConfigurationPtrOutput() DashboardNullValueFormatConfigurationPtrOutput {
	return i.ToDashboardNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNullValueFormatConfigurationArgs) ToDashboardNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNullValueFormatConfigurationOutput).ToDashboardNullValueFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardNullValueFormatConfigurationPtrInput is an input type that accepts DashboardNullValueFormatConfigurationArgs, DashboardNullValueFormatConfigurationPtr and DashboardNullValueFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNullValueFormatConfigurationPtrInput` via:
//
//	        DashboardNullValueFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNullValueFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNullValueFormatConfigurationPtrOutput() DashboardNullValueFormatConfigurationPtrOutput
	ToDashboardNullValueFormatConfigurationPtrOutputWithContext(context.Context) DashboardNullValueFormatConfigurationPtrOutput
}

type dashboardNullValueFormatConfigurationPtrType DashboardNullValueFormatConfigurationArgs

func DashboardNullValueFormatConfigurationPtr(v *DashboardNullValueFormatConfigurationArgs) DashboardNullValueFormatConfigurationPtrInput {
	return (*dashboardNullValueFormatConfigurationPtrType)(v)
}

func (*dashboardNullValueFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNullValueFormatConfiguration)(nil)).Elem()
}

func (i *dashboardNullValueFormatConfigurationPtrType) ToDashboardNullValueFormatConfigurationPtrOutput() DashboardNullValueFormatConfigurationPtrOutput {
	return i.ToDashboardNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNullValueFormatConfigurationPtrType) ToDashboardNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNullValueFormatConfigurationPtrOutput)
}

type DashboardNullValueFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNullValueFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNullValueFormatConfiguration)(nil)).Elem()
}

func (o DashboardNullValueFormatConfigurationOutput) ToDashboardNullValueFormatConfigurationOutput() DashboardNullValueFormatConfigurationOutput {
	return o
}

func (o DashboardNullValueFormatConfigurationOutput) ToDashboardNullValueFormatConfigurationOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationOutput {
	return o
}

func (o DashboardNullValueFormatConfigurationOutput) ToDashboardNullValueFormatConfigurationPtrOutput() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ToDashboardNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNullValueFormatConfigurationOutput) ToDashboardNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNullValueFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return &v
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardNullValueFormatConfigurationOutput) NullString() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardNullValueFormatConfiguration) string { return v.NullString }).(pulumi.StringOutput)
}

type DashboardNullValueFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNullValueFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNullValueFormatConfiguration)(nil)).Elem()
}

func (o DashboardNullValueFormatConfigurationPtrOutput) ToDashboardNullValueFormatConfigurationPtrOutput() DashboardNullValueFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNullValueFormatConfigurationPtrOutput) ToDashboardNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNullValueFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNullValueFormatConfigurationPtrOutput) Elem() DashboardNullValueFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardNullValueFormatConfiguration) DashboardNullValueFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNullValueFormatConfiguration
		return ret
	}).(DashboardNullValueFormatConfigurationOutput)
}

func (o DashboardNullValueFormatConfigurationPtrOutput) NullString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNullValueFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.NullString
	}).(pulumi.StringPtrOutput)
}

type DashboardNumberDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *DashboardDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *DashboardNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *DashboardNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *DashboardNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                 `pulumi:"prefix"`
	SeparatorConfiguration       *DashboardNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                 `pulumi:"suffix"`
}

// DashboardNumberDisplayFormatConfigurationInput is an input type that accepts DashboardNumberDisplayFormatConfigurationArgs and DashboardNumberDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardNumberDisplayFormatConfigurationInput` via:
//
//	DashboardNumberDisplayFormatConfigurationArgs{...}
type DashboardNumberDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardNumberDisplayFormatConfigurationOutput() DashboardNumberDisplayFormatConfigurationOutput
	ToDashboardNumberDisplayFormatConfigurationOutputWithContext(context.Context) DashboardNumberDisplayFormatConfigurationOutput
}

type DashboardNumberDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   DashboardDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   DashboardNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration DashboardNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  DashboardNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                          `pulumi:"prefix"`
	SeparatorConfiguration       DashboardNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                          `pulumi:"suffix"`
}

func (DashboardNumberDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i DashboardNumberDisplayFormatConfigurationArgs) ToDashboardNumberDisplayFormatConfigurationOutput() DashboardNumberDisplayFormatConfigurationOutput {
	return i.ToDashboardNumberDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardNumberDisplayFormatConfigurationArgs) ToDashboardNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberDisplayFormatConfigurationOutput)
}

func (i DashboardNumberDisplayFormatConfigurationArgs) ToDashboardNumberDisplayFormatConfigurationPtrOutput() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNumberDisplayFormatConfigurationArgs) ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberDisplayFormatConfigurationOutput).ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardNumberDisplayFormatConfigurationPtrInput is an input type that accepts DashboardNumberDisplayFormatConfigurationArgs, DashboardNumberDisplayFormatConfigurationPtr and DashboardNumberDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNumberDisplayFormatConfigurationPtrInput` via:
//
//	        DashboardNumberDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNumberDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNumberDisplayFormatConfigurationPtrOutput() DashboardNumberDisplayFormatConfigurationPtrOutput
	ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(context.Context) DashboardNumberDisplayFormatConfigurationPtrOutput
}

type dashboardNumberDisplayFormatConfigurationPtrType DashboardNumberDisplayFormatConfigurationArgs

func DashboardNumberDisplayFormatConfigurationPtr(v *DashboardNumberDisplayFormatConfigurationArgs) DashboardNumberDisplayFormatConfigurationPtrInput {
	return (*dashboardNumberDisplayFormatConfigurationPtrType)(v)
}

func (*dashboardNumberDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i *dashboardNumberDisplayFormatConfigurationPtrType) ToDashboardNumberDisplayFormatConfigurationPtrOutput() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNumberDisplayFormatConfigurationPtrType) ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

type DashboardNumberDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNumberDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumberDisplayFormatConfigurationOutput) ToDashboardNumberDisplayFormatConfigurationOutput() DashboardNumberDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardNumberDisplayFormatConfigurationOutput) ToDashboardNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardNumberDisplayFormatConfigurationOutput) ToDashboardNumberDisplayFormatConfigurationPtrOutput() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNumberDisplayFormatConfigurationOutput) ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumberDisplayFormatConfiguration) *DashboardNumberDisplayFormatConfiguration {
		return &v
	}).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) NumberScale() DashboardNumberScalePtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *DashboardNumberScale { return v.NumberScale }).(DashboardNumberScalePtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardNumberDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type DashboardNumberDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumberDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) ToDashboardNumberDisplayFormatConfigurationPtrOutput() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) ToDashboardNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) Elem() DashboardNumberDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) DashboardNumberDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNumberDisplayFormatConfiguration
		return ret
	}).(DashboardNumberDisplayFormatConfigurationOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) NumberScale() DashboardNumberScalePtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *DashboardNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(DashboardNumberScalePtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardNumberDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type DashboardNumberFormatConfiguration struct {
	FormatConfiguration *DashboardNumericFormatConfiguration `pulumi:"formatConfiguration"`
}

// DashboardNumberFormatConfigurationInput is an input type that accepts DashboardNumberFormatConfigurationArgs and DashboardNumberFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardNumberFormatConfigurationInput` via:
//
//	DashboardNumberFormatConfigurationArgs{...}
type DashboardNumberFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardNumberFormatConfigurationOutput() DashboardNumberFormatConfigurationOutput
	ToDashboardNumberFormatConfigurationOutputWithContext(context.Context) DashboardNumberFormatConfigurationOutput
}

type DashboardNumberFormatConfigurationArgs struct {
	FormatConfiguration DashboardNumericFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (DashboardNumberFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberFormatConfiguration)(nil)).Elem()
}

func (i DashboardNumberFormatConfigurationArgs) ToDashboardNumberFormatConfigurationOutput() DashboardNumberFormatConfigurationOutput {
	return i.ToDashboardNumberFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardNumberFormatConfigurationArgs) ToDashboardNumberFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberFormatConfigurationOutput)
}

func (i DashboardNumberFormatConfigurationArgs) ToDashboardNumberFormatConfigurationPtrOutput() DashboardNumberFormatConfigurationPtrOutput {
	return i.ToDashboardNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNumberFormatConfigurationArgs) ToDashboardNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberFormatConfigurationOutput).ToDashboardNumberFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardNumberFormatConfigurationPtrInput is an input type that accepts DashboardNumberFormatConfigurationArgs, DashboardNumberFormatConfigurationPtr and DashboardNumberFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNumberFormatConfigurationPtrInput` via:
//
//	        DashboardNumberFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNumberFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNumberFormatConfigurationPtrOutput() DashboardNumberFormatConfigurationPtrOutput
	ToDashboardNumberFormatConfigurationPtrOutputWithContext(context.Context) DashboardNumberFormatConfigurationPtrOutput
}

type dashboardNumberFormatConfigurationPtrType DashboardNumberFormatConfigurationArgs

func DashboardNumberFormatConfigurationPtr(v *DashboardNumberFormatConfigurationArgs) DashboardNumberFormatConfigurationPtrInput {
	return (*dashboardNumberFormatConfigurationPtrType)(v)
}

func (*dashboardNumberFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumberFormatConfiguration)(nil)).Elem()
}

func (i *dashboardNumberFormatConfigurationPtrType) ToDashboardNumberFormatConfigurationPtrOutput() DashboardNumberFormatConfigurationPtrOutput {
	return i.ToDashboardNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNumberFormatConfigurationPtrType) ToDashboardNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumberFormatConfigurationPtrOutput)
}

type DashboardNumberFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNumberFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumberFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumberFormatConfigurationOutput) ToDashboardNumberFormatConfigurationOutput() DashboardNumberFormatConfigurationOutput {
	return o
}

func (o DashboardNumberFormatConfigurationOutput) ToDashboardNumberFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationOutput {
	return o
}

func (o DashboardNumberFormatConfigurationOutput) ToDashboardNumberFormatConfigurationPtrOutput() DashboardNumberFormatConfigurationPtrOutput {
	return o.ToDashboardNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNumberFormatConfigurationOutput) ToDashboardNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumberFormatConfiguration) *DashboardNumberFormatConfiguration {
		return &v
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

func (o DashboardNumberFormatConfigurationOutput) FormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumberFormatConfiguration) *DashboardNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardNumberFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumberFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumberFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumberFormatConfigurationPtrOutput) ToDashboardNumberFormatConfigurationPtrOutput() DashboardNumberFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumberFormatConfigurationPtrOutput) ToDashboardNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumberFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumberFormatConfigurationPtrOutput) Elem() DashboardNumberFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardNumberFormatConfiguration) DashboardNumberFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNumberFormatConfiguration
		return ret
	}).(DashboardNumberFormatConfigurationOutput)
}

func (o DashboardNumberFormatConfigurationPtrOutput) FormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumberFormatConfiguration) *DashboardNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardNumericAxisOptions struct {
	Range *DashboardAxisDisplayRange `pulumi:"range"`
	Scale *DashboardAxisScale        `pulumi:"scale"`
}

// DashboardNumericAxisOptionsInput is an input type that accepts DashboardNumericAxisOptionsArgs and DashboardNumericAxisOptionsOutput values.
// You can construct a concrete instance of `DashboardNumericAxisOptionsInput` via:
//
//	DashboardNumericAxisOptionsArgs{...}
type DashboardNumericAxisOptionsInput interface {
	pulumi.Input

	ToDashboardNumericAxisOptionsOutput() DashboardNumericAxisOptionsOutput
	ToDashboardNumericAxisOptionsOutputWithContext(context.Context) DashboardNumericAxisOptionsOutput
}

type DashboardNumericAxisOptionsArgs struct {
	Range DashboardAxisDisplayRangePtrInput `pulumi:"range"`
	Scale DashboardAxisScalePtrInput        `pulumi:"scale"`
}

func (DashboardNumericAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericAxisOptions)(nil)).Elem()
}

func (i DashboardNumericAxisOptionsArgs) ToDashboardNumericAxisOptionsOutput() DashboardNumericAxisOptionsOutput {
	return i.ToDashboardNumericAxisOptionsOutputWithContext(context.Background())
}

func (i DashboardNumericAxisOptionsArgs) ToDashboardNumericAxisOptionsOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericAxisOptionsOutput)
}

func (i DashboardNumericAxisOptionsArgs) ToDashboardNumericAxisOptionsPtrOutput() DashboardNumericAxisOptionsPtrOutput {
	return i.ToDashboardNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardNumericAxisOptionsArgs) ToDashboardNumericAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericAxisOptionsOutput).ToDashboardNumericAxisOptionsPtrOutputWithContext(ctx)
}

// DashboardNumericAxisOptionsPtrInput is an input type that accepts DashboardNumericAxisOptionsArgs, DashboardNumericAxisOptionsPtr and DashboardNumericAxisOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardNumericAxisOptionsPtrInput` via:
//
//	        DashboardNumericAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericAxisOptionsPtrInput interface {
	pulumi.Input

	ToDashboardNumericAxisOptionsPtrOutput() DashboardNumericAxisOptionsPtrOutput
	ToDashboardNumericAxisOptionsPtrOutputWithContext(context.Context) DashboardNumericAxisOptionsPtrOutput
}

type dashboardNumericAxisOptionsPtrType DashboardNumericAxisOptionsArgs

func DashboardNumericAxisOptionsPtr(v *DashboardNumericAxisOptionsArgs) DashboardNumericAxisOptionsPtrInput {
	return (*dashboardNumericAxisOptionsPtrType)(v)
}

func (*dashboardNumericAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericAxisOptions)(nil)).Elem()
}

func (i *dashboardNumericAxisOptionsPtrType) ToDashboardNumericAxisOptionsPtrOutput() DashboardNumericAxisOptionsPtrOutput {
	return i.ToDashboardNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericAxisOptionsPtrType) ToDashboardNumericAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericAxisOptionsPtrOutput)
}

type DashboardNumericAxisOptionsOutput struct{ *pulumi.OutputState }

func (DashboardNumericAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericAxisOptions)(nil)).Elem()
}

func (o DashboardNumericAxisOptionsOutput) ToDashboardNumericAxisOptionsOutput() DashboardNumericAxisOptionsOutput {
	return o
}

func (o DashboardNumericAxisOptionsOutput) ToDashboardNumericAxisOptionsOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsOutput {
	return o
}

func (o DashboardNumericAxisOptionsOutput) ToDashboardNumericAxisOptionsPtrOutput() DashboardNumericAxisOptionsPtrOutput {
	return o.ToDashboardNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardNumericAxisOptionsOutput) ToDashboardNumericAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericAxisOptions) *DashboardNumericAxisOptions {
		return &v
	}).(DashboardNumericAxisOptionsPtrOutput)
}

func (o DashboardNumericAxisOptionsOutput) Range() DashboardAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v DashboardNumericAxisOptions) *DashboardAxisDisplayRange { return v.Range }).(DashboardAxisDisplayRangePtrOutput)
}

func (o DashboardNumericAxisOptionsOutput) Scale() DashboardAxisScalePtrOutput {
	return o.ApplyT(func(v DashboardNumericAxisOptions) *DashboardAxisScale { return v.Scale }).(DashboardAxisScalePtrOutput)
}

type DashboardNumericAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericAxisOptions)(nil)).Elem()
}

func (o DashboardNumericAxisOptionsPtrOutput) ToDashboardNumericAxisOptionsPtrOutput() DashboardNumericAxisOptionsPtrOutput {
	return o
}

func (o DashboardNumericAxisOptionsPtrOutput) ToDashboardNumericAxisOptionsPtrOutputWithContext(ctx context.Context) DashboardNumericAxisOptionsPtrOutput {
	return o
}

func (o DashboardNumericAxisOptionsPtrOutput) Elem() DashboardNumericAxisOptionsOutput {
	return o.ApplyT(func(v *DashboardNumericAxisOptions) DashboardNumericAxisOptions {
		if v != nil {
			return *v
		}
		var ret DashboardNumericAxisOptions
		return ret
	}).(DashboardNumericAxisOptionsOutput)
}

func (o DashboardNumericAxisOptionsPtrOutput) Range() DashboardAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *DashboardNumericAxisOptions) *DashboardAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(DashboardAxisDisplayRangePtrOutput)
}

func (o DashboardNumericAxisOptionsPtrOutput) Scale() DashboardAxisScalePtrOutput {
	return o.ApplyT(func(v *DashboardNumericAxisOptions) *DashboardAxisScale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(DashboardAxisScalePtrOutput)
}

type DashboardNumericEqualityDrillDownFilter struct {
	Column DashboardColumnIdentifier `pulumi:"column"`
	Value  float64                   `pulumi:"value"`
}

// DashboardNumericEqualityDrillDownFilterInput is an input type that accepts DashboardNumericEqualityDrillDownFilterArgs and DashboardNumericEqualityDrillDownFilterOutput values.
// You can construct a concrete instance of `DashboardNumericEqualityDrillDownFilterInput` via:
//
//	DashboardNumericEqualityDrillDownFilterArgs{...}
type DashboardNumericEqualityDrillDownFilterInput interface {
	pulumi.Input

	ToDashboardNumericEqualityDrillDownFilterOutput() DashboardNumericEqualityDrillDownFilterOutput
	ToDashboardNumericEqualityDrillDownFilterOutputWithContext(context.Context) DashboardNumericEqualityDrillDownFilterOutput
}

type DashboardNumericEqualityDrillDownFilterArgs struct {
	Column DashboardColumnIdentifierInput `pulumi:"column"`
	Value  pulumi.Float64Input            `pulumi:"value"`
}

func (DashboardNumericEqualityDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i DashboardNumericEqualityDrillDownFilterArgs) ToDashboardNumericEqualityDrillDownFilterOutput() DashboardNumericEqualityDrillDownFilterOutput {
	return i.ToDashboardNumericEqualityDrillDownFilterOutputWithContext(context.Background())
}

func (i DashboardNumericEqualityDrillDownFilterArgs) ToDashboardNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityDrillDownFilterOutput)
}

func (i DashboardNumericEqualityDrillDownFilterArgs) ToDashboardNumericEqualityDrillDownFilterPtrOutput() DashboardNumericEqualityDrillDownFilterPtrOutput {
	return i.ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i DashboardNumericEqualityDrillDownFilterArgs) ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityDrillDownFilterOutput).ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(ctx)
}

// DashboardNumericEqualityDrillDownFilterPtrInput is an input type that accepts DashboardNumericEqualityDrillDownFilterArgs, DashboardNumericEqualityDrillDownFilterPtr and DashboardNumericEqualityDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `DashboardNumericEqualityDrillDownFilterPtrInput` via:
//
//	        DashboardNumericEqualityDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericEqualityDrillDownFilterPtrInput interface {
	pulumi.Input

	ToDashboardNumericEqualityDrillDownFilterPtrOutput() DashboardNumericEqualityDrillDownFilterPtrOutput
	ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(context.Context) DashboardNumericEqualityDrillDownFilterPtrOutput
}

type dashboardNumericEqualityDrillDownFilterPtrType DashboardNumericEqualityDrillDownFilterArgs

func DashboardNumericEqualityDrillDownFilterPtr(v *DashboardNumericEqualityDrillDownFilterArgs) DashboardNumericEqualityDrillDownFilterPtrInput {
	return (*dashboardNumericEqualityDrillDownFilterPtrType)(v)
}

func (*dashboardNumericEqualityDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i *dashboardNumericEqualityDrillDownFilterPtrType) ToDashboardNumericEqualityDrillDownFilterPtrOutput() DashboardNumericEqualityDrillDownFilterPtrOutput {
	return i.ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericEqualityDrillDownFilterPtrType) ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityDrillDownFilterPtrOutput)
}

type DashboardNumericEqualityDrillDownFilterOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o DashboardNumericEqualityDrillDownFilterOutput) ToDashboardNumericEqualityDrillDownFilterOutput() DashboardNumericEqualityDrillDownFilterOutput {
	return o
}

func (o DashboardNumericEqualityDrillDownFilterOutput) ToDashboardNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterOutput {
	return o
}

func (o DashboardNumericEqualityDrillDownFilterOutput) ToDashboardNumericEqualityDrillDownFilterPtrOutput() DashboardNumericEqualityDrillDownFilterPtrOutput {
	return o.ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityDrillDownFilterOutput) ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericEqualityDrillDownFilter) *DashboardNumericEqualityDrillDownFilter {
		return &v
	}).(DashboardNumericEqualityDrillDownFilterPtrOutput)
}

func (o DashboardNumericEqualityDrillDownFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardNumericEqualityDrillDownFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardNumericEqualityDrillDownFilterOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardNumericEqualityDrillDownFilter) float64 { return v.Value }).(pulumi.Float64Output)
}

type DashboardNumericEqualityDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o DashboardNumericEqualityDrillDownFilterPtrOutput) ToDashboardNumericEqualityDrillDownFilterPtrOutput() DashboardNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o DashboardNumericEqualityDrillDownFilterPtrOutput) ToDashboardNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o DashboardNumericEqualityDrillDownFilterPtrOutput) Elem() DashboardNumericEqualityDrillDownFilterOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityDrillDownFilter) DashboardNumericEqualityDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret DashboardNumericEqualityDrillDownFilter
		return ret
	}).(DashboardNumericEqualityDrillDownFilterOutput)
}

func (o DashboardNumericEqualityDrillDownFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityDrillDownFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardNumericEqualityDrillDownFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityDrillDownFilter) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardNumericEqualityFilter struct {
	AggregationFunction *DashboardAggregationFunction           `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier               `pulumi:"column"`
	FilterId            string                                  `pulumi:"filterId"`
	MatchOperator       DashboardNumericEqualityMatchOperator   `pulumi:"matchOperator"`
	NullOption          DashboardFilterNullOption               `pulumi:"nullOption"`
	ParameterName       *string                                 `pulumi:"parameterName"`
	SelectAllOptions    *DashboardNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
	Value               *float64                                `pulumi:"value"`
}

// DashboardNumericEqualityFilterInput is an input type that accepts DashboardNumericEqualityFilterArgs and DashboardNumericEqualityFilterOutput values.
// You can construct a concrete instance of `DashboardNumericEqualityFilterInput` via:
//
//	DashboardNumericEqualityFilterArgs{...}
type DashboardNumericEqualityFilterInput interface {
	pulumi.Input

	ToDashboardNumericEqualityFilterOutput() DashboardNumericEqualityFilterOutput
	ToDashboardNumericEqualityFilterOutputWithContext(context.Context) DashboardNumericEqualityFilterOutput
}

type DashboardNumericEqualityFilterArgs struct {
	AggregationFunction DashboardAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                             `pulumi:"filterId"`
	MatchOperator       DashboardNumericEqualityMatchOperatorInput     `pulumi:"matchOperator"`
	NullOption          DashboardFilterNullOptionInput                 `pulumi:"nullOption"`
	ParameterName       pulumi.StringPtrInput                          `pulumi:"parameterName"`
	SelectAllOptions    DashboardNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	Value               pulumi.Float64PtrInput                         `pulumi:"value"`
}

func (DashboardNumericEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityFilter)(nil)).Elem()
}

func (i DashboardNumericEqualityFilterArgs) ToDashboardNumericEqualityFilterOutput() DashboardNumericEqualityFilterOutput {
	return i.ToDashboardNumericEqualityFilterOutputWithContext(context.Background())
}

func (i DashboardNumericEqualityFilterArgs) ToDashboardNumericEqualityFilterOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityFilterOutput)
}

func (i DashboardNumericEqualityFilterArgs) ToDashboardNumericEqualityFilterPtrOutput() DashboardNumericEqualityFilterPtrOutput {
	return i.ToDashboardNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i DashboardNumericEqualityFilterArgs) ToDashboardNumericEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityFilterOutput).ToDashboardNumericEqualityFilterPtrOutputWithContext(ctx)
}

// DashboardNumericEqualityFilterPtrInput is an input type that accepts DashboardNumericEqualityFilterArgs, DashboardNumericEqualityFilterPtr and DashboardNumericEqualityFilterPtrOutput values.
// You can construct a concrete instance of `DashboardNumericEqualityFilterPtrInput` via:
//
//	        DashboardNumericEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericEqualityFilterPtrInput interface {
	pulumi.Input

	ToDashboardNumericEqualityFilterPtrOutput() DashboardNumericEqualityFilterPtrOutput
	ToDashboardNumericEqualityFilterPtrOutputWithContext(context.Context) DashboardNumericEqualityFilterPtrOutput
}

type dashboardNumericEqualityFilterPtrType DashboardNumericEqualityFilterArgs

func DashboardNumericEqualityFilterPtr(v *DashboardNumericEqualityFilterArgs) DashboardNumericEqualityFilterPtrInput {
	return (*dashboardNumericEqualityFilterPtrType)(v)
}

func (*dashboardNumericEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericEqualityFilter)(nil)).Elem()
}

func (i *dashboardNumericEqualityFilterPtrType) ToDashboardNumericEqualityFilterPtrOutput() DashboardNumericEqualityFilterPtrOutput {
	return i.ToDashboardNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericEqualityFilterPtrType) ToDashboardNumericEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericEqualityFilterPtrOutput)
}

type DashboardNumericEqualityFilterOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericEqualityFilter)(nil)).Elem()
}

func (o DashboardNumericEqualityFilterOutput) ToDashboardNumericEqualityFilterOutput() DashboardNumericEqualityFilterOutput {
	return o
}

func (o DashboardNumericEqualityFilterOutput) ToDashboardNumericEqualityFilterOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterOutput {
	return o
}

func (o DashboardNumericEqualityFilterOutput) ToDashboardNumericEqualityFilterPtrOutput() DashboardNumericEqualityFilterPtrOutput {
	return o.ToDashboardNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (o DashboardNumericEqualityFilterOutput) ToDashboardNumericEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericEqualityFilter) *DashboardNumericEqualityFilter {
		return &v
	}).(DashboardNumericEqualityFilterPtrOutput)
}

func (o DashboardNumericEqualityFilterOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) *DashboardAggregationFunction { return v.AggregationFunction }).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardNumericEqualityFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardNumericEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardNumericEqualityFilterOutput) MatchOperator() DashboardNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) DashboardNumericEqualityMatchOperator { return v.MatchOperator }).(DashboardNumericEqualityMatchOperatorOutput)
}

func (o DashboardNumericEqualityFilterOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardNumericEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o DashboardNumericEqualityFilterOutput) SelectAllOptions() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) *DashboardNumericFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

func (o DashboardNumericEqualityFilterOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardNumericEqualityFilter) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type DashboardNumericEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericEqualityFilter)(nil)).Elem()
}

func (o DashboardNumericEqualityFilterPtrOutput) ToDashboardNumericEqualityFilterPtrOutput() DashboardNumericEqualityFilterPtrOutput {
	return o
}

func (o DashboardNumericEqualityFilterPtrOutput) ToDashboardNumericEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardNumericEqualityFilterPtrOutput {
	return o
}

func (o DashboardNumericEqualityFilterPtrOutput) Elem() DashboardNumericEqualityFilterOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) DashboardNumericEqualityFilter {
		if v != nil {
			return *v
		}
		var ret DashboardNumericEqualityFilter
		return ret
	}).(DashboardNumericEqualityFilterOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *DashboardAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) MatchOperator() DashboardNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *DashboardNumericEqualityMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(DashboardNumericEqualityMatchOperatorPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) SelectAllOptions() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *DashboardNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

func (o DashboardNumericEqualityFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardNumericEqualityFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardNumericFormatConfiguration struct {
	CurrencyDisplayFormatConfiguration   *DashboardCurrencyDisplayFormatConfiguration   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     *DashboardNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *DashboardPercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// DashboardNumericFormatConfigurationInput is an input type that accepts DashboardNumericFormatConfigurationArgs and DashboardNumericFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardNumericFormatConfigurationInput` via:
//
//	DashboardNumericFormatConfigurationArgs{...}
type DashboardNumericFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardNumericFormatConfigurationOutput() DashboardNumericFormatConfigurationOutput
	ToDashboardNumericFormatConfigurationOutputWithContext(context.Context) DashboardNumericFormatConfigurationOutput
}

type DashboardNumericFormatConfigurationArgs struct {
	CurrencyDisplayFormatConfiguration   DashboardCurrencyDisplayFormatConfigurationPtrInput   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     DashboardNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration DashboardPercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (DashboardNumericFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericFormatConfiguration)(nil)).Elem()
}

func (i DashboardNumericFormatConfigurationArgs) ToDashboardNumericFormatConfigurationOutput() DashboardNumericFormatConfigurationOutput {
	return i.ToDashboardNumericFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardNumericFormatConfigurationArgs) ToDashboardNumericFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericFormatConfigurationOutput)
}

func (i DashboardNumericFormatConfigurationArgs) ToDashboardNumericFormatConfigurationPtrOutput() DashboardNumericFormatConfigurationPtrOutput {
	return i.ToDashboardNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNumericFormatConfigurationArgs) ToDashboardNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericFormatConfigurationOutput).ToDashboardNumericFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardNumericFormatConfigurationPtrInput is an input type that accepts DashboardNumericFormatConfigurationArgs, DashboardNumericFormatConfigurationPtr and DashboardNumericFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNumericFormatConfigurationPtrInput` via:
//
//	        DashboardNumericFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNumericFormatConfigurationPtrOutput() DashboardNumericFormatConfigurationPtrOutput
	ToDashboardNumericFormatConfigurationPtrOutputWithContext(context.Context) DashboardNumericFormatConfigurationPtrOutput
}

type dashboardNumericFormatConfigurationPtrType DashboardNumericFormatConfigurationArgs

func DashboardNumericFormatConfigurationPtr(v *DashboardNumericFormatConfigurationArgs) DashboardNumericFormatConfigurationPtrInput {
	return (*dashboardNumericFormatConfigurationPtrType)(v)
}

func (*dashboardNumericFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericFormatConfiguration)(nil)).Elem()
}

func (i *dashboardNumericFormatConfigurationPtrType) ToDashboardNumericFormatConfigurationPtrOutput() DashboardNumericFormatConfigurationPtrOutput {
	return i.ToDashboardNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericFormatConfigurationPtrType) ToDashboardNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardNumericFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNumericFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumericFormatConfigurationOutput) ToDashboardNumericFormatConfigurationOutput() DashboardNumericFormatConfigurationOutput {
	return o
}

func (o DashboardNumericFormatConfigurationOutput) ToDashboardNumericFormatConfigurationOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationOutput {
	return o
}

func (o DashboardNumericFormatConfigurationOutput) ToDashboardNumericFormatConfigurationPtrOutput() DashboardNumericFormatConfigurationPtrOutput {
	return o.ToDashboardNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNumericFormatConfigurationOutput) ToDashboardNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericFormatConfiguration) *DashboardNumericFormatConfiguration {
		return &v
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

func (o DashboardNumericFormatConfigurationOutput) CurrencyDisplayFormatConfiguration() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumericFormatConfiguration) *DashboardCurrencyDisplayFormatConfiguration {
		return v.CurrencyDisplayFormatConfiguration
	}).(DashboardCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o DashboardNumericFormatConfigurationOutput) NumberDisplayFormatConfiguration() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumericFormatConfiguration) *DashboardNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

func (o DashboardNumericFormatConfigurationOutput) PercentageDisplayFormatConfiguration() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumericFormatConfiguration) *DashboardPercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

type DashboardNumericFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericFormatConfiguration)(nil)).Elem()
}

func (o DashboardNumericFormatConfigurationPtrOutput) ToDashboardNumericFormatConfigurationPtrOutput() DashboardNumericFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumericFormatConfigurationPtrOutput) ToDashboardNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericFormatConfigurationPtrOutput {
	return o
}

func (o DashboardNumericFormatConfigurationPtrOutput) Elem() DashboardNumericFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardNumericFormatConfiguration) DashboardNumericFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNumericFormatConfiguration
		return ret
	}).(DashboardNumericFormatConfigurationOutput)
}

func (o DashboardNumericFormatConfigurationPtrOutput) CurrencyDisplayFormatConfiguration() DashboardCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericFormatConfiguration) *DashboardCurrencyDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.CurrencyDisplayFormatConfiguration
	}).(DashboardCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o DashboardNumericFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() DashboardNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericFormatConfiguration) *DashboardNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(DashboardNumberDisplayFormatConfigurationPtrOutput)
}

func (o DashboardNumericFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericFormatConfiguration) *DashboardPercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

type DashboardNumericRangeFilter struct {
	AggregationFunction *DashboardAggregationFunction           `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier               `pulumi:"column"`
	FilterId            string                                  `pulumi:"filterId"`
	IncludeMaximum      *bool                                   `pulumi:"includeMaximum"`
	IncludeMinimum      *bool                                   `pulumi:"includeMinimum"`
	NullOption          DashboardFilterNullOption               `pulumi:"nullOption"`
	RangeMaximum        *DashboardNumericRangeFilterValue       `pulumi:"rangeMaximum"`
	RangeMinimum        *DashboardNumericRangeFilterValue       `pulumi:"rangeMinimum"`
	SelectAllOptions    *DashboardNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// DashboardNumericRangeFilterInput is an input type that accepts DashboardNumericRangeFilterArgs and DashboardNumericRangeFilterOutput values.
// You can construct a concrete instance of `DashboardNumericRangeFilterInput` via:
//
//	DashboardNumericRangeFilterArgs{...}
type DashboardNumericRangeFilterInput interface {
	pulumi.Input

	ToDashboardNumericRangeFilterOutput() DashboardNumericRangeFilterOutput
	ToDashboardNumericRangeFilterOutputWithContext(context.Context) DashboardNumericRangeFilterOutput
}

type DashboardNumericRangeFilterArgs struct {
	AggregationFunction DashboardAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                             `pulumi:"filterId"`
	IncludeMaximum      pulumi.BoolPtrInput                            `pulumi:"includeMaximum"`
	IncludeMinimum      pulumi.BoolPtrInput                            `pulumi:"includeMinimum"`
	NullOption          DashboardFilterNullOptionInput                 `pulumi:"nullOption"`
	RangeMaximum        DashboardNumericRangeFilterValuePtrInput       `pulumi:"rangeMaximum"`
	RangeMinimum        DashboardNumericRangeFilterValuePtrInput       `pulumi:"rangeMinimum"`
	SelectAllOptions    DashboardNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (DashboardNumericRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericRangeFilter)(nil)).Elem()
}

func (i DashboardNumericRangeFilterArgs) ToDashboardNumericRangeFilterOutput() DashboardNumericRangeFilterOutput {
	return i.ToDashboardNumericRangeFilterOutputWithContext(context.Background())
}

func (i DashboardNumericRangeFilterArgs) ToDashboardNumericRangeFilterOutputWithContext(ctx context.Context) DashboardNumericRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterOutput)
}

func (i DashboardNumericRangeFilterArgs) ToDashboardNumericRangeFilterPtrOutput() DashboardNumericRangeFilterPtrOutput {
	return i.ToDashboardNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i DashboardNumericRangeFilterArgs) ToDashboardNumericRangeFilterPtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterOutput).ToDashboardNumericRangeFilterPtrOutputWithContext(ctx)
}

// DashboardNumericRangeFilterPtrInput is an input type that accepts DashboardNumericRangeFilterArgs, DashboardNumericRangeFilterPtr and DashboardNumericRangeFilterPtrOutput values.
// You can construct a concrete instance of `DashboardNumericRangeFilterPtrInput` via:
//
//	        DashboardNumericRangeFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericRangeFilterPtrInput interface {
	pulumi.Input

	ToDashboardNumericRangeFilterPtrOutput() DashboardNumericRangeFilterPtrOutput
	ToDashboardNumericRangeFilterPtrOutputWithContext(context.Context) DashboardNumericRangeFilterPtrOutput
}

type dashboardNumericRangeFilterPtrType DashboardNumericRangeFilterArgs

func DashboardNumericRangeFilterPtr(v *DashboardNumericRangeFilterArgs) DashboardNumericRangeFilterPtrInput {
	return (*dashboardNumericRangeFilterPtrType)(v)
}

func (*dashboardNumericRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericRangeFilter)(nil)).Elem()
}

func (i *dashboardNumericRangeFilterPtrType) ToDashboardNumericRangeFilterPtrOutput() DashboardNumericRangeFilterPtrOutput {
	return i.ToDashboardNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericRangeFilterPtrType) ToDashboardNumericRangeFilterPtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterPtrOutput)
}

type DashboardNumericRangeFilterOutput struct{ *pulumi.OutputState }

func (DashboardNumericRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericRangeFilter)(nil)).Elem()
}

func (o DashboardNumericRangeFilterOutput) ToDashboardNumericRangeFilterOutput() DashboardNumericRangeFilterOutput {
	return o
}

func (o DashboardNumericRangeFilterOutput) ToDashboardNumericRangeFilterOutputWithContext(ctx context.Context) DashboardNumericRangeFilterOutput {
	return o
}

func (o DashboardNumericRangeFilterOutput) ToDashboardNumericRangeFilterPtrOutput() DashboardNumericRangeFilterPtrOutput {
	return o.ToDashboardNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (o DashboardNumericRangeFilterOutput) ToDashboardNumericRangeFilterPtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericRangeFilter) *DashboardNumericRangeFilter {
		return &v
	}).(DashboardNumericRangeFilterPtrOutput)
}

func (o DashboardNumericRangeFilterOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *DashboardAggregationFunction { return v.AggregationFunction }).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardNumericRangeFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardNumericRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardNumericRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o DashboardNumericRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o DashboardNumericRangeFilterOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardNumericRangeFilterOutput) RangeMaximum() DashboardNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *DashboardNumericRangeFilterValue { return v.RangeMaximum }).(DashboardNumericRangeFilterValuePtrOutput)
}

func (o DashboardNumericRangeFilterOutput) RangeMinimum() DashboardNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *DashboardNumericRangeFilterValue { return v.RangeMinimum }).(DashboardNumericRangeFilterValuePtrOutput)
}

func (o DashboardNumericRangeFilterOutput) SelectAllOptions() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilter) *DashboardNumericFilterSelectAllOptions { return v.SelectAllOptions }).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

type DashboardNumericRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericRangeFilter)(nil)).Elem()
}

func (o DashboardNumericRangeFilterPtrOutput) ToDashboardNumericRangeFilterPtrOutput() DashboardNumericRangeFilterPtrOutput {
	return o
}

func (o DashboardNumericRangeFilterPtrOutput) ToDashboardNumericRangeFilterPtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterPtrOutput {
	return o
}

func (o DashboardNumericRangeFilterPtrOutput) Elem() DashboardNumericRangeFilterOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) DashboardNumericRangeFilter {
		if v != nil {
			return *v
		}
		var ret DashboardNumericRangeFilter
		return ret
	}).(DashboardNumericRangeFilterOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) AggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardAggregationFunctionPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) RangeMaximum() DashboardNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximum
	}).(DashboardNumericRangeFilterValuePtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) RangeMinimum() DashboardNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimum
	}).(DashboardNumericRangeFilterValuePtrOutput)
}

func (o DashboardNumericRangeFilterPtrOutput) SelectAllOptions() DashboardNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilter) *DashboardNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(DashboardNumericFilterSelectAllOptionsPtrOutput)
}

type DashboardNumericRangeFilterValue struct {
	Parameter   *string  `pulumi:"parameter"`
	StaticValue *float64 `pulumi:"staticValue"`
}

// DashboardNumericRangeFilterValueInput is an input type that accepts DashboardNumericRangeFilterValueArgs and DashboardNumericRangeFilterValueOutput values.
// You can construct a concrete instance of `DashboardNumericRangeFilterValueInput` via:
//
//	DashboardNumericRangeFilterValueArgs{...}
type DashboardNumericRangeFilterValueInput interface {
	pulumi.Input

	ToDashboardNumericRangeFilterValueOutput() DashboardNumericRangeFilterValueOutput
	ToDashboardNumericRangeFilterValueOutputWithContext(context.Context) DashboardNumericRangeFilterValueOutput
}

type DashboardNumericRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput  `pulumi:"parameter"`
	StaticValue pulumi.Float64PtrInput `pulumi:"staticValue"`
}

func (DashboardNumericRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericRangeFilterValue)(nil)).Elem()
}

func (i DashboardNumericRangeFilterValueArgs) ToDashboardNumericRangeFilterValueOutput() DashboardNumericRangeFilterValueOutput {
	return i.ToDashboardNumericRangeFilterValueOutputWithContext(context.Background())
}

func (i DashboardNumericRangeFilterValueArgs) ToDashboardNumericRangeFilterValueOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterValueOutput)
}

func (i DashboardNumericRangeFilterValueArgs) ToDashboardNumericRangeFilterValuePtrOutput() DashboardNumericRangeFilterValuePtrOutput {
	return i.ToDashboardNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i DashboardNumericRangeFilterValueArgs) ToDashboardNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterValueOutput).ToDashboardNumericRangeFilterValuePtrOutputWithContext(ctx)
}

// DashboardNumericRangeFilterValuePtrInput is an input type that accepts DashboardNumericRangeFilterValueArgs, DashboardNumericRangeFilterValuePtr and DashboardNumericRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `DashboardNumericRangeFilterValuePtrInput` via:
//
//	        DashboardNumericRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericRangeFilterValuePtrInput interface {
	pulumi.Input

	ToDashboardNumericRangeFilterValuePtrOutput() DashboardNumericRangeFilterValuePtrOutput
	ToDashboardNumericRangeFilterValuePtrOutputWithContext(context.Context) DashboardNumericRangeFilterValuePtrOutput
}

type dashboardNumericRangeFilterValuePtrType DashboardNumericRangeFilterValueArgs

func DashboardNumericRangeFilterValuePtr(v *DashboardNumericRangeFilterValueArgs) DashboardNumericRangeFilterValuePtrInput {
	return (*dashboardNumericRangeFilterValuePtrType)(v)
}

func (*dashboardNumericRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericRangeFilterValue)(nil)).Elem()
}

func (i *dashboardNumericRangeFilterValuePtrType) ToDashboardNumericRangeFilterValuePtrOutput() DashboardNumericRangeFilterValuePtrOutput {
	return i.ToDashboardNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *dashboardNumericRangeFilterValuePtrType) ToDashboardNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericRangeFilterValuePtrOutput)
}

type DashboardNumericRangeFilterValueOutput struct{ *pulumi.OutputState }

func (DashboardNumericRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericRangeFilterValue)(nil)).Elem()
}

func (o DashboardNumericRangeFilterValueOutput) ToDashboardNumericRangeFilterValueOutput() DashboardNumericRangeFilterValueOutput {
	return o
}

func (o DashboardNumericRangeFilterValueOutput) ToDashboardNumericRangeFilterValueOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValueOutput {
	return o
}

func (o DashboardNumericRangeFilterValueOutput) ToDashboardNumericRangeFilterValuePtrOutput() DashboardNumericRangeFilterValuePtrOutput {
	return o.ToDashboardNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o DashboardNumericRangeFilterValueOutput) ToDashboardNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericRangeFilterValue) *DashboardNumericRangeFilterValue {
		return &v
	}).(DashboardNumericRangeFilterValuePtrOutput)
}

func (o DashboardNumericRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o DashboardNumericRangeFilterValueOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardNumericRangeFilterValue) *float64 { return v.StaticValue }).(pulumi.Float64PtrOutput)
}

type DashboardNumericRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericRangeFilterValue)(nil)).Elem()
}

func (o DashboardNumericRangeFilterValuePtrOutput) ToDashboardNumericRangeFilterValuePtrOutput() DashboardNumericRangeFilterValuePtrOutput {
	return o
}

func (o DashboardNumericRangeFilterValuePtrOutput) ToDashboardNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardNumericRangeFilterValuePtrOutput {
	return o
}

func (o DashboardNumericRangeFilterValuePtrOutput) Elem() DashboardNumericRangeFilterValueOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilterValue) DashboardNumericRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret DashboardNumericRangeFilterValue
		return ret
	}).(DashboardNumericRangeFilterValueOutput)
}

func (o DashboardNumericRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericRangeFilterValuePtrOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardNumericRangeFilterValue) *float64 {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.Float64PtrOutput)
}

type DashboardNumericSeparatorConfiguration struct {
	DecimalSeparator   *DashboardNumericSeparatorSymbol   `pulumi:"decimalSeparator"`
	ThousandsSeparator *DashboardThousandSeparatorOptions `pulumi:"thousandsSeparator"`
}

// DashboardNumericSeparatorConfigurationInput is an input type that accepts DashboardNumericSeparatorConfigurationArgs and DashboardNumericSeparatorConfigurationOutput values.
// You can construct a concrete instance of `DashboardNumericSeparatorConfigurationInput` via:
//
//	DashboardNumericSeparatorConfigurationArgs{...}
type DashboardNumericSeparatorConfigurationInput interface {
	pulumi.Input

	ToDashboardNumericSeparatorConfigurationOutput() DashboardNumericSeparatorConfigurationOutput
	ToDashboardNumericSeparatorConfigurationOutputWithContext(context.Context) DashboardNumericSeparatorConfigurationOutput
}

type DashboardNumericSeparatorConfigurationArgs struct {
	DecimalSeparator   DashboardNumericSeparatorSymbolPtrInput   `pulumi:"decimalSeparator"`
	ThousandsSeparator DashboardThousandSeparatorOptionsPtrInput `pulumi:"thousandsSeparator"`
}

func (DashboardNumericSeparatorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericSeparatorConfiguration)(nil)).Elem()
}

func (i DashboardNumericSeparatorConfigurationArgs) ToDashboardNumericSeparatorConfigurationOutput() DashboardNumericSeparatorConfigurationOutput {
	return i.ToDashboardNumericSeparatorConfigurationOutputWithContext(context.Background())
}

func (i DashboardNumericSeparatorConfigurationArgs) ToDashboardNumericSeparatorConfigurationOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericSeparatorConfigurationOutput)
}

func (i DashboardNumericSeparatorConfigurationArgs) ToDashboardNumericSeparatorConfigurationPtrOutput() DashboardNumericSeparatorConfigurationPtrOutput {
	return i.ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardNumericSeparatorConfigurationArgs) ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericSeparatorConfigurationOutput).ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(ctx)
}

// DashboardNumericSeparatorConfigurationPtrInput is an input type that accepts DashboardNumericSeparatorConfigurationArgs, DashboardNumericSeparatorConfigurationPtr and DashboardNumericSeparatorConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardNumericSeparatorConfigurationPtrInput` via:
//
//	        DashboardNumericSeparatorConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericSeparatorConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardNumericSeparatorConfigurationPtrOutput() DashboardNumericSeparatorConfigurationPtrOutput
	ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(context.Context) DashboardNumericSeparatorConfigurationPtrOutput
}

type dashboardNumericSeparatorConfigurationPtrType DashboardNumericSeparatorConfigurationArgs

func DashboardNumericSeparatorConfigurationPtr(v *DashboardNumericSeparatorConfigurationArgs) DashboardNumericSeparatorConfigurationPtrInput {
	return (*dashboardNumericSeparatorConfigurationPtrType)(v)
}

func (*dashboardNumericSeparatorConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericSeparatorConfiguration)(nil)).Elem()
}

func (i *dashboardNumericSeparatorConfigurationPtrType) ToDashboardNumericSeparatorConfigurationPtrOutput() DashboardNumericSeparatorConfigurationPtrOutput {
	return i.ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericSeparatorConfigurationPtrType) ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericSeparatorConfigurationPtrOutput)
}

type DashboardNumericSeparatorConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardNumericSeparatorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericSeparatorConfiguration)(nil)).Elem()
}

func (o DashboardNumericSeparatorConfigurationOutput) ToDashboardNumericSeparatorConfigurationOutput() DashboardNumericSeparatorConfigurationOutput {
	return o
}

func (o DashboardNumericSeparatorConfigurationOutput) ToDashboardNumericSeparatorConfigurationOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationOutput {
	return o
}

func (o DashboardNumericSeparatorConfigurationOutput) ToDashboardNumericSeparatorConfigurationPtrOutput() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardNumericSeparatorConfigurationOutput) ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericSeparatorConfiguration) *DashboardNumericSeparatorConfiguration {
		return &v
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardNumericSeparatorConfigurationOutput) DecimalSeparator() DashboardNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v DashboardNumericSeparatorConfiguration) *DashboardNumericSeparatorSymbol {
		return v.DecimalSeparator
	}).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (o DashboardNumericSeparatorConfigurationOutput) ThousandsSeparator() DashboardThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v DashboardNumericSeparatorConfiguration) *DashboardThousandSeparatorOptions {
		return v.ThousandsSeparator
	}).(DashboardThousandSeparatorOptionsPtrOutput)
}

type DashboardNumericSeparatorConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericSeparatorConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericSeparatorConfiguration)(nil)).Elem()
}

func (o DashboardNumericSeparatorConfigurationPtrOutput) ToDashboardNumericSeparatorConfigurationPtrOutput() DashboardNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o DashboardNumericSeparatorConfigurationPtrOutput) ToDashboardNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) DashboardNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o DashboardNumericSeparatorConfigurationPtrOutput) Elem() DashboardNumericSeparatorConfigurationOutput {
	return o.ApplyT(func(v *DashboardNumericSeparatorConfiguration) DashboardNumericSeparatorConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardNumericSeparatorConfiguration
		return ret
	}).(DashboardNumericSeparatorConfigurationOutput)
}

func (o DashboardNumericSeparatorConfigurationPtrOutput) DecimalSeparator() DashboardNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *DashboardNumericSeparatorConfiguration) *DashboardNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.DecimalSeparator
	}).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (o DashboardNumericSeparatorConfigurationPtrOutput) ThousandsSeparator() DashboardThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardNumericSeparatorConfiguration) *DashboardThousandSeparatorOptions {
		if v == nil {
			return nil
		}
		return v.ThousandsSeparator
	}).(DashboardThousandSeparatorOptionsPtrOutput)
}

type DashboardNumericalAggregationFunction struct {
	PercentileAggregation      *DashboardPercentileAggregation              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation *DashboardSimpleNumericalAggregationFunction `pulumi:"simpleNumericalAggregation"`
}

// DashboardNumericalAggregationFunctionInput is an input type that accepts DashboardNumericalAggregationFunctionArgs and DashboardNumericalAggregationFunctionOutput values.
// You can construct a concrete instance of `DashboardNumericalAggregationFunctionInput` via:
//
//	DashboardNumericalAggregationFunctionArgs{...}
type DashboardNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToDashboardNumericalAggregationFunctionOutput() DashboardNumericalAggregationFunctionOutput
	ToDashboardNumericalAggregationFunctionOutputWithContext(context.Context) DashboardNumericalAggregationFunctionOutput
}

type DashboardNumericalAggregationFunctionArgs struct {
	PercentileAggregation      DashboardPercentileAggregationPtrInput              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation DashboardSimpleNumericalAggregationFunctionPtrInput `pulumi:"simpleNumericalAggregation"`
}

func (DashboardNumericalAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalAggregationFunction)(nil)).Elem()
}

func (i DashboardNumericalAggregationFunctionArgs) ToDashboardNumericalAggregationFunctionOutput() DashboardNumericalAggregationFunctionOutput {
	return i.ToDashboardNumericalAggregationFunctionOutputWithContext(context.Background())
}

func (i DashboardNumericalAggregationFunctionArgs) ToDashboardNumericalAggregationFunctionOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalAggregationFunctionOutput)
}

func (i DashboardNumericalAggregationFunctionArgs) ToDashboardNumericalAggregationFunctionPtrOutput() DashboardNumericalAggregationFunctionPtrOutput {
	return i.ToDashboardNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i DashboardNumericalAggregationFunctionArgs) ToDashboardNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalAggregationFunctionOutput).ToDashboardNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

// DashboardNumericalAggregationFunctionPtrInput is an input type that accepts DashboardNumericalAggregationFunctionArgs, DashboardNumericalAggregationFunctionPtr and DashboardNumericalAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `DashboardNumericalAggregationFunctionPtrInput` via:
//
//	        DashboardNumericalAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToDashboardNumericalAggregationFunctionPtrOutput() DashboardNumericalAggregationFunctionPtrOutput
	ToDashboardNumericalAggregationFunctionPtrOutputWithContext(context.Context) DashboardNumericalAggregationFunctionPtrOutput
}

type dashboardNumericalAggregationFunctionPtrType DashboardNumericalAggregationFunctionArgs

func DashboardNumericalAggregationFunctionPtr(v *DashboardNumericalAggregationFunctionArgs) DashboardNumericalAggregationFunctionPtrInput {
	return (*dashboardNumericalAggregationFunctionPtrType)(v)
}

func (*dashboardNumericalAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalAggregationFunction)(nil)).Elem()
}

func (i *dashboardNumericalAggregationFunctionPtrType) ToDashboardNumericalAggregationFunctionPtrOutput() DashboardNumericalAggregationFunctionPtrOutput {
	return i.ToDashboardNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericalAggregationFunctionPtrType) ToDashboardNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalAggregationFunctionPtrOutput)
}

type DashboardNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (DashboardNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalAggregationFunction)(nil)).Elem()
}

func (o DashboardNumericalAggregationFunctionOutput) ToDashboardNumericalAggregationFunctionOutput() DashboardNumericalAggregationFunctionOutput {
	return o
}

func (o DashboardNumericalAggregationFunctionOutput) ToDashboardNumericalAggregationFunctionOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionOutput {
	return o
}

func (o DashboardNumericalAggregationFunctionOutput) ToDashboardNumericalAggregationFunctionPtrOutput() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ToDashboardNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o DashboardNumericalAggregationFunctionOutput) ToDashboardNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericalAggregationFunction) *DashboardNumericalAggregationFunction {
		return &v
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

func (o DashboardNumericalAggregationFunctionOutput) PercentileAggregation() DashboardPercentileAggregationPtrOutput {
	return o.ApplyT(func(v DashboardNumericalAggregationFunction) *DashboardPercentileAggregation {
		return v.PercentileAggregation
	}).(DashboardPercentileAggregationPtrOutput)
}

func (o DashboardNumericalAggregationFunctionOutput) SimpleNumericalAggregation() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardNumericalAggregationFunction) *DashboardSimpleNumericalAggregationFunction {
		return v.SimpleNumericalAggregation
	}).(DashboardSimpleNumericalAggregationFunctionPtrOutput)
}

type DashboardNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalAggregationFunction)(nil)).Elem()
}

func (o DashboardNumericalAggregationFunctionPtrOutput) ToDashboardNumericalAggregationFunctionPtrOutput() DashboardNumericalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardNumericalAggregationFunctionPtrOutput) ToDashboardNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) DashboardNumericalAggregationFunctionPtrOutput {
	return o
}

func (o DashboardNumericalAggregationFunctionPtrOutput) Elem() DashboardNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *DashboardNumericalAggregationFunction) DashboardNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret DashboardNumericalAggregationFunction
		return ret
	}).(DashboardNumericalAggregationFunctionOutput)
}

func (o DashboardNumericalAggregationFunctionPtrOutput) PercentileAggregation() DashboardPercentileAggregationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalAggregationFunction) *DashboardPercentileAggregation {
		if v == nil {
			return nil
		}
		return v.PercentileAggregation
	}).(DashboardPercentileAggregationPtrOutput)
}

func (o DashboardNumericalAggregationFunctionPtrOutput) SimpleNumericalAggregation() DashboardSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalAggregationFunction) *DashboardSimpleNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.SimpleNumericalAggregation
	}).(DashboardSimpleNumericalAggregationFunctionPtrOutput)
}

type DashboardNumericalDimensionField struct {
	Column              DashboardColumnIdentifier           `pulumi:"column"`
	FieldId             string                              `pulumi:"fieldId"`
	FormatConfiguration *DashboardNumberFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                             `pulumi:"hierarchyId"`
}

// DashboardNumericalDimensionFieldInput is an input type that accepts DashboardNumericalDimensionFieldArgs and DashboardNumericalDimensionFieldOutput values.
// You can construct a concrete instance of `DashboardNumericalDimensionFieldInput` via:
//
//	DashboardNumericalDimensionFieldArgs{...}
type DashboardNumericalDimensionFieldInput interface {
	pulumi.Input

	ToDashboardNumericalDimensionFieldOutput() DashboardNumericalDimensionFieldOutput
	ToDashboardNumericalDimensionFieldOutputWithContext(context.Context) DashboardNumericalDimensionFieldOutput
}

type DashboardNumericalDimensionFieldArgs struct {
	Column              DashboardColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                         `pulumi:"fieldId"`
	FormatConfiguration DashboardNumberFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                      `pulumi:"hierarchyId"`
}

func (DashboardNumericalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalDimensionField)(nil)).Elem()
}

func (i DashboardNumericalDimensionFieldArgs) ToDashboardNumericalDimensionFieldOutput() DashboardNumericalDimensionFieldOutput {
	return i.ToDashboardNumericalDimensionFieldOutputWithContext(context.Background())
}

func (i DashboardNumericalDimensionFieldArgs) ToDashboardNumericalDimensionFieldOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalDimensionFieldOutput)
}

func (i DashboardNumericalDimensionFieldArgs) ToDashboardNumericalDimensionFieldPtrOutput() DashboardNumericalDimensionFieldPtrOutput {
	return i.ToDashboardNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i DashboardNumericalDimensionFieldArgs) ToDashboardNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalDimensionFieldOutput).ToDashboardNumericalDimensionFieldPtrOutputWithContext(ctx)
}

// DashboardNumericalDimensionFieldPtrInput is an input type that accepts DashboardNumericalDimensionFieldArgs, DashboardNumericalDimensionFieldPtr and DashboardNumericalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `DashboardNumericalDimensionFieldPtrInput` via:
//
//	        DashboardNumericalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericalDimensionFieldPtrInput interface {
	pulumi.Input

	ToDashboardNumericalDimensionFieldPtrOutput() DashboardNumericalDimensionFieldPtrOutput
	ToDashboardNumericalDimensionFieldPtrOutputWithContext(context.Context) DashboardNumericalDimensionFieldPtrOutput
}

type dashboardNumericalDimensionFieldPtrType DashboardNumericalDimensionFieldArgs

func DashboardNumericalDimensionFieldPtr(v *DashboardNumericalDimensionFieldArgs) DashboardNumericalDimensionFieldPtrInput {
	return (*dashboardNumericalDimensionFieldPtrType)(v)
}

func (*dashboardNumericalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalDimensionField)(nil)).Elem()
}

func (i *dashboardNumericalDimensionFieldPtrType) ToDashboardNumericalDimensionFieldPtrOutput() DashboardNumericalDimensionFieldPtrOutput {
	return i.ToDashboardNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericalDimensionFieldPtrType) ToDashboardNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalDimensionFieldPtrOutput)
}

type DashboardNumericalDimensionFieldOutput struct{ *pulumi.OutputState }

func (DashboardNumericalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalDimensionField)(nil)).Elem()
}

func (o DashboardNumericalDimensionFieldOutput) ToDashboardNumericalDimensionFieldOutput() DashboardNumericalDimensionFieldOutput {
	return o
}

func (o DashboardNumericalDimensionFieldOutput) ToDashboardNumericalDimensionFieldOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldOutput {
	return o
}

func (o DashboardNumericalDimensionFieldOutput) ToDashboardNumericalDimensionFieldPtrOutput() DashboardNumericalDimensionFieldPtrOutput {
	return o.ToDashboardNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o DashboardNumericalDimensionFieldOutput) ToDashboardNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericalDimensionField) *DashboardNumericalDimensionField {
		return &v
	}).(DashboardNumericalDimensionFieldPtrOutput)
}

func (o DashboardNumericalDimensionFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardNumericalDimensionField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardNumericalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardNumericalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardNumericalDimensionFieldOutput) FormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumericalDimensionField) *DashboardNumberFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

func (o DashboardNumericalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardNumericalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type DashboardNumericalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalDimensionField)(nil)).Elem()
}

func (o DashboardNumericalDimensionFieldPtrOutput) ToDashboardNumericalDimensionFieldPtrOutput() DashboardNumericalDimensionFieldPtrOutput {
	return o
}

func (o DashboardNumericalDimensionFieldPtrOutput) ToDashboardNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalDimensionFieldPtrOutput {
	return o
}

func (o DashboardNumericalDimensionFieldPtrOutput) Elem() DashboardNumericalDimensionFieldOutput {
	return o.ApplyT(func(v *DashboardNumericalDimensionField) DashboardNumericalDimensionField {
		if v != nil {
			return *v
		}
		var ret DashboardNumericalDimensionField
		return ret
	}).(DashboardNumericalDimensionFieldOutput)
}

func (o DashboardNumericalDimensionFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalDimensionField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardNumericalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericalDimensionFieldPtrOutput) FormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalDimensionField) *DashboardNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

func (o DashboardNumericalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardNumericalMeasureField struct {
	AggregationFunction *DashboardNumericalAggregationFunction `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifier              `pulumi:"column"`
	FieldId             string                                 `pulumi:"fieldId"`
	FormatConfiguration *DashboardNumberFormatConfiguration    `pulumi:"formatConfiguration"`
}

// DashboardNumericalMeasureFieldInput is an input type that accepts DashboardNumericalMeasureFieldArgs and DashboardNumericalMeasureFieldOutput values.
// You can construct a concrete instance of `DashboardNumericalMeasureFieldInput` via:
//
//	DashboardNumericalMeasureFieldArgs{...}
type DashboardNumericalMeasureFieldInput interface {
	pulumi.Input

	ToDashboardNumericalMeasureFieldOutput() DashboardNumericalMeasureFieldOutput
	ToDashboardNumericalMeasureFieldOutputWithContext(context.Context) DashboardNumericalMeasureFieldOutput
}

type DashboardNumericalMeasureFieldArgs struct {
	AggregationFunction DashboardNumericalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              DashboardColumnIdentifierInput                `pulumi:"column"`
	FieldId             pulumi.StringInput                            `pulumi:"fieldId"`
	FormatConfiguration DashboardNumberFormatConfigurationPtrInput    `pulumi:"formatConfiguration"`
}

func (DashboardNumericalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalMeasureField)(nil)).Elem()
}

func (i DashboardNumericalMeasureFieldArgs) ToDashboardNumericalMeasureFieldOutput() DashboardNumericalMeasureFieldOutput {
	return i.ToDashboardNumericalMeasureFieldOutputWithContext(context.Background())
}

func (i DashboardNumericalMeasureFieldArgs) ToDashboardNumericalMeasureFieldOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalMeasureFieldOutput)
}

func (i DashboardNumericalMeasureFieldArgs) ToDashboardNumericalMeasureFieldPtrOutput() DashboardNumericalMeasureFieldPtrOutput {
	return i.ToDashboardNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i DashboardNumericalMeasureFieldArgs) ToDashboardNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalMeasureFieldOutput).ToDashboardNumericalMeasureFieldPtrOutputWithContext(ctx)
}

// DashboardNumericalMeasureFieldPtrInput is an input type that accepts DashboardNumericalMeasureFieldArgs, DashboardNumericalMeasureFieldPtr and DashboardNumericalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `DashboardNumericalMeasureFieldPtrInput` via:
//
//	        DashboardNumericalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type DashboardNumericalMeasureFieldPtrInput interface {
	pulumi.Input

	ToDashboardNumericalMeasureFieldPtrOutput() DashboardNumericalMeasureFieldPtrOutput
	ToDashboardNumericalMeasureFieldPtrOutputWithContext(context.Context) DashboardNumericalMeasureFieldPtrOutput
}

type dashboardNumericalMeasureFieldPtrType DashboardNumericalMeasureFieldArgs

func DashboardNumericalMeasureFieldPtr(v *DashboardNumericalMeasureFieldArgs) DashboardNumericalMeasureFieldPtrInput {
	return (*dashboardNumericalMeasureFieldPtrType)(v)
}

func (*dashboardNumericalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalMeasureField)(nil)).Elem()
}

func (i *dashboardNumericalMeasureFieldPtrType) ToDashboardNumericalMeasureFieldPtrOutput() DashboardNumericalMeasureFieldPtrOutput {
	return i.ToDashboardNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *dashboardNumericalMeasureFieldPtrType) ToDashboardNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardNumericalMeasureFieldPtrOutput)
}

type DashboardNumericalMeasureFieldOutput struct{ *pulumi.OutputState }

func (DashboardNumericalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardNumericalMeasureField)(nil)).Elem()
}

func (o DashboardNumericalMeasureFieldOutput) ToDashboardNumericalMeasureFieldOutput() DashboardNumericalMeasureFieldOutput {
	return o
}

func (o DashboardNumericalMeasureFieldOutput) ToDashboardNumericalMeasureFieldOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldOutput {
	return o
}

func (o DashboardNumericalMeasureFieldOutput) ToDashboardNumericalMeasureFieldPtrOutput() DashboardNumericalMeasureFieldPtrOutput {
	return o.ToDashboardNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o DashboardNumericalMeasureFieldOutput) ToDashboardNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardNumericalMeasureField) *DashboardNumericalMeasureField {
		return &v
	}).(DashboardNumericalMeasureFieldPtrOutput)
}

func (o DashboardNumericalMeasureFieldOutput) AggregationFunction() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v DashboardNumericalMeasureField) *DashboardNumericalAggregationFunction {
		return v.AggregationFunction
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

func (o DashboardNumericalMeasureFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardNumericalMeasureField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardNumericalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardNumericalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardNumericalMeasureFieldOutput) FormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardNumericalMeasureField) *DashboardNumberFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

type DashboardNumericalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (DashboardNumericalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardNumericalMeasureField)(nil)).Elem()
}

func (o DashboardNumericalMeasureFieldPtrOutput) ToDashboardNumericalMeasureFieldPtrOutput() DashboardNumericalMeasureFieldPtrOutput {
	return o
}

func (o DashboardNumericalMeasureFieldPtrOutput) ToDashboardNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) DashboardNumericalMeasureFieldPtrOutput {
	return o
}

func (o DashboardNumericalMeasureFieldPtrOutput) Elem() DashboardNumericalMeasureFieldOutput {
	return o.ApplyT(func(v *DashboardNumericalMeasureField) DashboardNumericalMeasureField {
		if v != nil {
			return *v
		}
		var ret DashboardNumericalMeasureField
		return ret
	}).(DashboardNumericalMeasureFieldOutput)
}

func (o DashboardNumericalMeasureFieldPtrOutput) AggregationFunction() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalMeasureField) *DashboardNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

func (o DashboardNumericalMeasureFieldPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalMeasureField) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardNumericalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardNumericalMeasureFieldPtrOutput) FormatConfiguration() DashboardNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardNumericalMeasureField) *DashboardNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardNumberFormatConfigurationPtrOutput)
}

type DashboardPaginationConfiguration struct {
	PageNumber float64 `pulumi:"pageNumber"`
	PageSize   float64 `pulumi:"pageSize"`
}

// DashboardPaginationConfigurationInput is an input type that accepts DashboardPaginationConfigurationArgs and DashboardPaginationConfigurationOutput values.
// You can construct a concrete instance of `DashboardPaginationConfigurationInput` via:
//
//	DashboardPaginationConfigurationArgs{...}
type DashboardPaginationConfigurationInput interface {
	pulumi.Input

	ToDashboardPaginationConfigurationOutput() DashboardPaginationConfigurationOutput
	ToDashboardPaginationConfigurationOutputWithContext(context.Context) DashboardPaginationConfigurationOutput
}

type DashboardPaginationConfigurationArgs struct {
	PageNumber pulumi.Float64Input `pulumi:"pageNumber"`
	PageSize   pulumi.Float64Input `pulumi:"pageSize"`
}

func (DashboardPaginationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaginationConfiguration)(nil)).Elem()
}

func (i DashboardPaginationConfigurationArgs) ToDashboardPaginationConfigurationOutput() DashboardPaginationConfigurationOutput {
	return i.ToDashboardPaginationConfigurationOutputWithContext(context.Background())
}

func (i DashboardPaginationConfigurationArgs) ToDashboardPaginationConfigurationOutputWithContext(ctx context.Context) DashboardPaginationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPaginationConfigurationOutput)
}

func (i DashboardPaginationConfigurationArgs) ToDashboardPaginationConfigurationPtrOutput() DashboardPaginationConfigurationPtrOutput {
	return i.ToDashboardPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPaginationConfigurationArgs) ToDashboardPaginationConfigurationPtrOutputWithContext(ctx context.Context) DashboardPaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPaginationConfigurationOutput).ToDashboardPaginationConfigurationPtrOutputWithContext(ctx)
}

// DashboardPaginationConfigurationPtrInput is an input type that accepts DashboardPaginationConfigurationArgs, DashboardPaginationConfigurationPtr and DashboardPaginationConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPaginationConfigurationPtrInput` via:
//
//	        DashboardPaginationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPaginationConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPaginationConfigurationPtrOutput() DashboardPaginationConfigurationPtrOutput
	ToDashboardPaginationConfigurationPtrOutputWithContext(context.Context) DashboardPaginationConfigurationPtrOutput
}

type dashboardPaginationConfigurationPtrType DashboardPaginationConfigurationArgs

func DashboardPaginationConfigurationPtr(v *DashboardPaginationConfigurationArgs) DashboardPaginationConfigurationPtrInput {
	return (*dashboardPaginationConfigurationPtrType)(v)
}

func (*dashboardPaginationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPaginationConfiguration)(nil)).Elem()
}

func (i *dashboardPaginationConfigurationPtrType) ToDashboardPaginationConfigurationPtrOutput() DashboardPaginationConfigurationPtrOutput {
	return i.ToDashboardPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPaginationConfigurationPtrType) ToDashboardPaginationConfigurationPtrOutputWithContext(ctx context.Context) DashboardPaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPaginationConfigurationPtrOutput)
}

type DashboardPaginationConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPaginationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPaginationConfiguration)(nil)).Elem()
}

func (o DashboardPaginationConfigurationOutput) ToDashboardPaginationConfigurationOutput() DashboardPaginationConfigurationOutput {
	return o
}

func (o DashboardPaginationConfigurationOutput) ToDashboardPaginationConfigurationOutputWithContext(ctx context.Context) DashboardPaginationConfigurationOutput {
	return o
}

func (o DashboardPaginationConfigurationOutput) ToDashboardPaginationConfigurationPtrOutput() DashboardPaginationConfigurationPtrOutput {
	return o.ToDashboardPaginationConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPaginationConfigurationOutput) ToDashboardPaginationConfigurationPtrOutputWithContext(ctx context.Context) DashboardPaginationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPaginationConfiguration) *DashboardPaginationConfiguration {
		return &v
	}).(DashboardPaginationConfigurationPtrOutput)
}

func (o DashboardPaginationConfigurationOutput) PageNumber() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardPaginationConfiguration) float64 { return v.PageNumber }).(pulumi.Float64Output)
}

func (o DashboardPaginationConfigurationOutput) PageSize() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardPaginationConfiguration) float64 { return v.PageSize }).(pulumi.Float64Output)
}

type DashboardPaginationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPaginationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPaginationConfiguration)(nil)).Elem()
}

func (o DashboardPaginationConfigurationPtrOutput) ToDashboardPaginationConfigurationPtrOutput() DashboardPaginationConfigurationPtrOutput {
	return o
}

func (o DashboardPaginationConfigurationPtrOutput) ToDashboardPaginationConfigurationPtrOutputWithContext(ctx context.Context) DashboardPaginationConfigurationPtrOutput {
	return o
}

func (o DashboardPaginationConfigurationPtrOutput) Elem() DashboardPaginationConfigurationOutput {
	return o.ApplyT(func(v *DashboardPaginationConfiguration) DashboardPaginationConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPaginationConfiguration
		return ret
	}).(DashboardPaginationConfigurationOutput)
}

func (o DashboardPaginationConfigurationPtrOutput) PageNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardPaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageNumber
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardPaginationConfigurationPtrOutput) PageSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardPaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageSize
	}).(pulumi.Float64PtrOutput)
}

type DashboardPanelConfiguration struct {
	BackgroundColor      *string                    `pulumi:"backgroundColor"`
	BackgroundVisibility *DashboardVisibility       `pulumi:"backgroundVisibility"`
	BorderColor          *string                    `pulumi:"borderColor"`
	BorderStyle          *DashboardPanelBorderStyle `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  *string              `pulumi:"borderThickness"`
	BorderVisibility *DashboardVisibility `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    *string                     `pulumi:"gutterSpacing"`
	GutterVisibility *DashboardVisibility        `pulumi:"gutterVisibility"`
	Title            *DashboardPanelTitleOptions `pulumi:"title"`
}

// DashboardPanelConfigurationInput is an input type that accepts DashboardPanelConfigurationArgs and DashboardPanelConfigurationOutput values.
// You can construct a concrete instance of `DashboardPanelConfigurationInput` via:
//
//	DashboardPanelConfigurationArgs{...}
type DashboardPanelConfigurationInput interface {
	pulumi.Input

	ToDashboardPanelConfigurationOutput() DashboardPanelConfigurationOutput
	ToDashboardPanelConfigurationOutputWithContext(context.Context) DashboardPanelConfigurationOutput
}

type DashboardPanelConfigurationArgs struct {
	BackgroundColor      pulumi.StringPtrInput             `pulumi:"backgroundColor"`
	BackgroundVisibility DashboardVisibilityPtrInput       `pulumi:"backgroundVisibility"`
	BorderColor          pulumi.StringPtrInput             `pulumi:"borderColor"`
	BorderStyle          DashboardPanelBorderStylePtrInput `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  pulumi.StringPtrInput       `pulumi:"borderThickness"`
	BorderVisibility DashboardVisibilityPtrInput `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    pulumi.StringPtrInput              `pulumi:"gutterSpacing"`
	GutterVisibility DashboardVisibilityPtrInput        `pulumi:"gutterVisibility"`
	Title            DashboardPanelTitleOptionsPtrInput `pulumi:"title"`
}

func (DashboardPanelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelConfiguration)(nil)).Elem()
}

func (i DashboardPanelConfigurationArgs) ToDashboardPanelConfigurationOutput() DashboardPanelConfigurationOutput {
	return i.ToDashboardPanelConfigurationOutputWithContext(context.Background())
}

func (i DashboardPanelConfigurationArgs) ToDashboardPanelConfigurationOutputWithContext(ctx context.Context) DashboardPanelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelConfigurationOutput)
}

func (i DashboardPanelConfigurationArgs) ToDashboardPanelConfigurationPtrOutput() DashboardPanelConfigurationPtrOutput {
	return i.ToDashboardPanelConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPanelConfigurationArgs) ToDashboardPanelConfigurationPtrOutputWithContext(ctx context.Context) DashboardPanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelConfigurationOutput).ToDashboardPanelConfigurationPtrOutputWithContext(ctx)
}

// DashboardPanelConfigurationPtrInput is an input type that accepts DashboardPanelConfigurationArgs, DashboardPanelConfigurationPtr and DashboardPanelConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPanelConfigurationPtrInput` via:
//
//	        DashboardPanelConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPanelConfigurationPtrOutput() DashboardPanelConfigurationPtrOutput
	ToDashboardPanelConfigurationPtrOutputWithContext(context.Context) DashboardPanelConfigurationPtrOutput
}

type dashboardPanelConfigurationPtrType DashboardPanelConfigurationArgs

func DashboardPanelConfigurationPtr(v *DashboardPanelConfigurationArgs) DashboardPanelConfigurationPtrInput {
	return (*dashboardPanelConfigurationPtrType)(v)
}

func (*dashboardPanelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelConfiguration)(nil)).Elem()
}

func (i *dashboardPanelConfigurationPtrType) ToDashboardPanelConfigurationPtrOutput() DashboardPanelConfigurationPtrOutput {
	return i.ToDashboardPanelConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelConfigurationPtrType) ToDashboardPanelConfigurationPtrOutputWithContext(ctx context.Context) DashboardPanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelConfigurationPtrOutput)
}

type DashboardPanelConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPanelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelConfiguration)(nil)).Elem()
}

func (o DashboardPanelConfigurationOutput) ToDashboardPanelConfigurationOutput() DashboardPanelConfigurationOutput {
	return o
}

func (o DashboardPanelConfigurationOutput) ToDashboardPanelConfigurationOutputWithContext(ctx context.Context) DashboardPanelConfigurationOutput {
	return o
}

func (o DashboardPanelConfigurationOutput) ToDashboardPanelConfigurationPtrOutput() DashboardPanelConfigurationPtrOutput {
	return o.ToDashboardPanelConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPanelConfigurationOutput) ToDashboardPanelConfigurationPtrOutputWithContext(ctx context.Context) DashboardPanelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelConfiguration) *DashboardPanelConfiguration {
		return &v
	}).(DashboardPanelConfigurationPtrOutput)
}

func (o DashboardPanelConfigurationOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationOutput) BackgroundVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *DashboardVisibility { return v.BackgroundVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardPanelConfigurationOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *string { return v.BorderColor }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationOutput) BorderStyle() DashboardPanelBorderStylePtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *DashboardPanelBorderStyle { return v.BorderStyle }).(DashboardPanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardPanelConfigurationOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *string { return v.BorderThickness }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationOutput) BorderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *DashboardVisibility { return v.BorderVisibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardPanelConfigurationOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *string { return v.GutterSpacing }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationOutput) GutterVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *DashboardVisibility { return v.GutterVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardPanelConfigurationOutput) Title() DashboardPanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPanelConfiguration) *DashboardPanelTitleOptions { return v.Title }).(DashboardPanelTitleOptionsPtrOutput)
}

type DashboardPanelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelConfiguration)(nil)).Elem()
}

func (o DashboardPanelConfigurationPtrOutput) ToDashboardPanelConfigurationPtrOutput() DashboardPanelConfigurationPtrOutput {
	return o
}

func (o DashboardPanelConfigurationPtrOutput) ToDashboardPanelConfigurationPtrOutputWithContext(ctx context.Context) DashboardPanelConfigurationPtrOutput {
	return o
}

func (o DashboardPanelConfigurationPtrOutput) Elem() DashboardPanelConfigurationOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) DashboardPanelConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPanelConfiguration
		return ret
	}).(DashboardPanelConfigurationOutput)
}

func (o DashboardPanelConfigurationPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) BackgroundVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.BackgroundVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) BorderStyle() DashboardPanelBorderStylePtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *DashboardPanelBorderStyle {
		if v == nil {
			return nil
		}
		return v.BorderStyle
	}).(DashboardPanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardPanelConfigurationPtrOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderThickness
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) BorderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.BorderVisibility
	}).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardPanelConfigurationPtrOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GutterSpacing
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) GutterVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.GutterVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPanelConfigurationPtrOutput) Title() DashboardPanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPanelConfiguration) *DashboardPanelTitleOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardPanelTitleOptionsPtrOutput)
}

type DashboardPanelTitleOptions struct {
	FontConfiguration       *DashboardFontConfiguration       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment *DashboardHorizontalTextAlignment `pulumi:"horizontalTextAlignment"`
	Visibility              *DashboardVisibility              `pulumi:"visibility"`
}

// DashboardPanelTitleOptionsInput is an input type that accepts DashboardPanelTitleOptionsArgs and DashboardPanelTitleOptionsOutput values.
// You can construct a concrete instance of `DashboardPanelTitleOptionsInput` via:
//
//	DashboardPanelTitleOptionsArgs{...}
type DashboardPanelTitleOptionsInput interface {
	pulumi.Input

	ToDashboardPanelTitleOptionsOutput() DashboardPanelTitleOptionsOutput
	ToDashboardPanelTitleOptionsOutputWithContext(context.Context) DashboardPanelTitleOptionsOutput
}

type DashboardPanelTitleOptionsArgs struct {
	FontConfiguration       DashboardFontConfigurationPtrInput       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment DashboardHorizontalTextAlignmentPtrInput `pulumi:"horizontalTextAlignment"`
	Visibility              DashboardVisibilityPtrInput              `pulumi:"visibility"`
}

func (DashboardPanelTitleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTitleOptions)(nil)).Elem()
}

func (i DashboardPanelTitleOptionsArgs) ToDashboardPanelTitleOptionsOutput() DashboardPanelTitleOptionsOutput {
	return i.ToDashboardPanelTitleOptionsOutputWithContext(context.Background())
}

func (i DashboardPanelTitleOptionsArgs) ToDashboardPanelTitleOptionsOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTitleOptionsOutput)
}

func (i DashboardPanelTitleOptionsArgs) ToDashboardPanelTitleOptionsPtrOutput() DashboardPanelTitleOptionsPtrOutput {
	return i.ToDashboardPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPanelTitleOptionsArgs) ToDashboardPanelTitleOptionsPtrOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTitleOptionsOutput).ToDashboardPanelTitleOptionsPtrOutputWithContext(ctx)
}

// DashboardPanelTitleOptionsPtrInput is an input type that accepts DashboardPanelTitleOptionsArgs, DashboardPanelTitleOptionsPtr and DashboardPanelTitleOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPanelTitleOptionsPtrInput` via:
//
//	        DashboardPanelTitleOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPanelTitleOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPanelTitleOptionsPtrOutput() DashboardPanelTitleOptionsPtrOutput
	ToDashboardPanelTitleOptionsPtrOutputWithContext(context.Context) DashboardPanelTitleOptionsPtrOutput
}

type dashboardPanelTitleOptionsPtrType DashboardPanelTitleOptionsArgs

func DashboardPanelTitleOptionsPtr(v *DashboardPanelTitleOptionsArgs) DashboardPanelTitleOptionsPtrInput {
	return (*dashboardPanelTitleOptionsPtrType)(v)
}

func (*dashboardPanelTitleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTitleOptions)(nil)).Elem()
}

func (i *dashboardPanelTitleOptionsPtrType) ToDashboardPanelTitleOptionsPtrOutput() DashboardPanelTitleOptionsPtrOutput {
	return i.ToDashboardPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelTitleOptionsPtrType) ToDashboardPanelTitleOptionsPtrOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTitleOptionsPtrOutput)
}

type DashboardPanelTitleOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPanelTitleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTitleOptions)(nil)).Elem()
}

func (o DashboardPanelTitleOptionsOutput) ToDashboardPanelTitleOptionsOutput() DashboardPanelTitleOptionsOutput {
	return o
}

func (o DashboardPanelTitleOptionsOutput) ToDashboardPanelTitleOptionsOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsOutput {
	return o
}

func (o DashboardPanelTitleOptionsOutput) ToDashboardPanelTitleOptionsPtrOutput() DashboardPanelTitleOptionsPtrOutput {
	return o.ToDashboardPanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPanelTitleOptionsOutput) ToDashboardPanelTitleOptionsPtrOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelTitleOptions) *DashboardPanelTitleOptions {
		return &v
	}).(DashboardPanelTitleOptionsPtrOutput)
}

func (o DashboardPanelTitleOptionsOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPanelTitleOptions) *DashboardFontConfiguration { return v.FontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardPanelTitleOptionsOutput) HorizontalTextAlignment() DashboardHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v DashboardPanelTitleOptions) *DashboardHorizontalTextAlignment { return v.HorizontalTextAlignment }).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (o DashboardPanelTitleOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPanelTitleOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardPanelTitleOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelTitleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTitleOptions)(nil)).Elem()
}

func (o DashboardPanelTitleOptionsPtrOutput) ToDashboardPanelTitleOptionsPtrOutput() DashboardPanelTitleOptionsPtrOutput {
	return o
}

func (o DashboardPanelTitleOptionsPtrOutput) ToDashboardPanelTitleOptionsPtrOutputWithContext(ctx context.Context) DashboardPanelTitleOptionsPtrOutput {
	return o
}

func (o DashboardPanelTitleOptionsPtrOutput) Elem() DashboardPanelTitleOptionsOutput {
	return o.ApplyT(func(v *DashboardPanelTitleOptions) DashboardPanelTitleOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPanelTitleOptions
		return ret
	}).(DashboardPanelTitleOptionsOutput)
}

func (o DashboardPanelTitleOptionsPtrOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTitleOptions) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardPanelTitleOptionsPtrOutput) HorizontalTextAlignment() DashboardHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTitleOptions) *DashboardHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (o DashboardPanelTitleOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTitleOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardParameterControl struct {
	DateTimePicker *DashboardParameterDateTimePickerControl `pulumi:"dateTimePicker"`
	Dropdown       *DashboardParameterDropDownControl       `pulumi:"dropdown"`
	List           *DashboardParameterListControl           `pulumi:"list"`
	Slider         *DashboardParameterSliderControl         `pulumi:"slider"`
	TextArea       *DashboardParameterTextAreaControl       `pulumi:"textArea"`
	TextField      *DashboardParameterTextFieldControl      `pulumi:"textField"`
}

// DashboardParameterControlInput is an input type that accepts DashboardParameterControlArgs and DashboardParameterControlOutput values.
// You can construct a concrete instance of `DashboardParameterControlInput` via:
//
//	DashboardParameterControlArgs{...}
type DashboardParameterControlInput interface {
	pulumi.Input

	ToDashboardParameterControlOutput() DashboardParameterControlOutput
	ToDashboardParameterControlOutputWithContext(context.Context) DashboardParameterControlOutput
}

type DashboardParameterControlArgs struct {
	DateTimePicker DashboardParameterDateTimePickerControlPtrInput `pulumi:"dateTimePicker"`
	Dropdown       DashboardParameterDropDownControlPtrInput       `pulumi:"dropdown"`
	List           DashboardParameterListControlPtrInput           `pulumi:"list"`
	Slider         DashboardParameterSliderControlPtrInput         `pulumi:"slider"`
	TextArea       DashboardParameterTextAreaControlPtrInput       `pulumi:"textArea"`
	TextField      DashboardParameterTextFieldControlPtrInput      `pulumi:"textField"`
}

func (DashboardParameterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterControl)(nil)).Elem()
}

func (i DashboardParameterControlArgs) ToDashboardParameterControlOutput() DashboardParameterControlOutput {
	return i.ToDashboardParameterControlOutputWithContext(context.Background())
}

func (i DashboardParameterControlArgs) ToDashboardParameterControlOutputWithContext(ctx context.Context) DashboardParameterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterControlOutput)
}

// DashboardParameterControlArrayInput is an input type that accepts DashboardParameterControlArray and DashboardParameterControlArrayOutput values.
// You can construct a concrete instance of `DashboardParameterControlArrayInput` via:
//
//	DashboardParameterControlArray{ DashboardParameterControlArgs{...} }
type DashboardParameterControlArrayInput interface {
	pulumi.Input

	ToDashboardParameterControlArrayOutput() DashboardParameterControlArrayOutput
	ToDashboardParameterControlArrayOutputWithContext(context.Context) DashboardParameterControlArrayOutput
}

type DashboardParameterControlArray []DashboardParameterControlInput

func (DashboardParameterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterControl)(nil)).Elem()
}

func (i DashboardParameterControlArray) ToDashboardParameterControlArrayOutput() DashboardParameterControlArrayOutput {
	return i.ToDashboardParameterControlArrayOutputWithContext(context.Background())
}

func (i DashboardParameterControlArray) ToDashboardParameterControlArrayOutputWithContext(ctx context.Context) DashboardParameterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterControlArrayOutput)
}

type DashboardParameterControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterControl)(nil)).Elem()
}

func (o DashboardParameterControlOutput) ToDashboardParameterControlOutput() DashboardParameterControlOutput {
	return o
}

func (o DashboardParameterControlOutput) ToDashboardParameterControlOutputWithContext(ctx context.Context) DashboardParameterControlOutput {
	return o
}

func (o DashboardParameterControlOutput) DateTimePicker() DashboardParameterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterDateTimePickerControl { return v.DateTimePicker }).(DashboardParameterDateTimePickerControlPtrOutput)
}

func (o DashboardParameterControlOutput) Dropdown() DashboardParameterDropDownControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterDropDownControl { return v.Dropdown }).(DashboardParameterDropDownControlPtrOutput)
}

func (o DashboardParameterControlOutput) List() DashboardParameterListControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterListControl { return v.List }).(DashboardParameterListControlPtrOutput)
}

func (o DashboardParameterControlOutput) Slider() DashboardParameterSliderControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterSliderControl { return v.Slider }).(DashboardParameterSliderControlPtrOutput)
}

func (o DashboardParameterControlOutput) TextArea() DashboardParameterTextAreaControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterTextAreaControl { return v.TextArea }).(DashboardParameterTextAreaControlPtrOutput)
}

func (o DashboardParameterControlOutput) TextField() DashboardParameterTextFieldControlPtrOutput {
	return o.ApplyT(func(v DashboardParameterControl) *DashboardParameterTextFieldControl { return v.TextField }).(DashboardParameterTextFieldControlPtrOutput)
}

type DashboardParameterControlArrayOutput struct{ *pulumi.OutputState }

func (DashboardParameterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterControl)(nil)).Elem()
}

func (o DashboardParameterControlArrayOutput) ToDashboardParameterControlArrayOutput() DashboardParameterControlArrayOutput {
	return o
}

func (o DashboardParameterControlArrayOutput) ToDashboardParameterControlArrayOutputWithContext(ctx context.Context) DashboardParameterControlArrayOutput {
	return o
}

func (o DashboardParameterControlArrayOutput) Index(i pulumi.IntInput) DashboardParameterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardParameterControl {
		return vs[0].([]DashboardParameterControl)[vs[1].(int)]
	}).(DashboardParameterControlOutput)
}

type DashboardParameterDateTimePickerControl struct {
	DisplayOptions      *DashboardDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                        `pulumi:"parameterControlId"`
	SourceParameterName string                                        `pulumi:"sourceParameterName"`
	Title               string                                        `pulumi:"title"`
}

// DashboardParameterDateTimePickerControlInput is an input type that accepts DashboardParameterDateTimePickerControlArgs and DashboardParameterDateTimePickerControlOutput values.
// You can construct a concrete instance of `DashboardParameterDateTimePickerControlInput` via:
//
//	DashboardParameterDateTimePickerControlArgs{...}
type DashboardParameterDateTimePickerControlInput interface {
	pulumi.Input

	ToDashboardParameterDateTimePickerControlOutput() DashboardParameterDateTimePickerControlOutput
	ToDashboardParameterDateTimePickerControlOutputWithContext(context.Context) DashboardParameterDateTimePickerControlOutput
}

type DashboardParameterDateTimePickerControlArgs struct {
	DisplayOptions      DashboardDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                                   `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                                   `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                                   `pulumi:"title"`
}

func (DashboardParameterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDateTimePickerControl)(nil)).Elem()
}

func (i DashboardParameterDateTimePickerControlArgs) ToDashboardParameterDateTimePickerControlOutput() DashboardParameterDateTimePickerControlOutput {
	return i.ToDashboardParameterDateTimePickerControlOutputWithContext(context.Background())
}

func (i DashboardParameterDateTimePickerControlArgs) ToDashboardParameterDateTimePickerControlOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDateTimePickerControlOutput)
}

func (i DashboardParameterDateTimePickerControlArgs) ToDashboardParameterDateTimePickerControlPtrOutput() DashboardParameterDateTimePickerControlPtrOutput {
	return i.ToDashboardParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterDateTimePickerControlArgs) ToDashboardParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDateTimePickerControlOutput).ToDashboardParameterDateTimePickerControlPtrOutputWithContext(ctx)
}

// DashboardParameterDateTimePickerControlPtrInput is an input type that accepts DashboardParameterDateTimePickerControlArgs, DashboardParameterDateTimePickerControlPtr and DashboardParameterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterDateTimePickerControlPtrInput` via:
//
//	        DashboardParameterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterDateTimePickerControlPtrOutput() DashboardParameterDateTimePickerControlPtrOutput
	ToDashboardParameterDateTimePickerControlPtrOutputWithContext(context.Context) DashboardParameterDateTimePickerControlPtrOutput
}

type dashboardParameterDateTimePickerControlPtrType DashboardParameterDateTimePickerControlArgs

func DashboardParameterDateTimePickerControlPtr(v *DashboardParameterDateTimePickerControlArgs) DashboardParameterDateTimePickerControlPtrInput {
	return (*dashboardParameterDateTimePickerControlPtrType)(v)
}

func (*dashboardParameterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterDateTimePickerControl)(nil)).Elem()
}

func (i *dashboardParameterDateTimePickerControlPtrType) ToDashboardParameterDateTimePickerControlPtrOutput() DashboardParameterDateTimePickerControlPtrOutput {
	return i.ToDashboardParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterDateTimePickerControlPtrType) ToDashboardParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDateTimePickerControlPtrOutput)
}

type DashboardParameterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDateTimePickerControl)(nil)).Elem()
}

func (o DashboardParameterDateTimePickerControlOutput) ToDashboardParameterDateTimePickerControlOutput() DashboardParameterDateTimePickerControlOutput {
	return o
}

func (o DashboardParameterDateTimePickerControlOutput) ToDashboardParameterDateTimePickerControlOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlOutput {
	return o
}

func (o DashboardParameterDateTimePickerControlOutput) ToDashboardParameterDateTimePickerControlPtrOutput() DashboardParameterDateTimePickerControlPtrOutput {
	return o.ToDashboardParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterDateTimePickerControlOutput) ToDashboardParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterDateTimePickerControl) *DashboardParameterDateTimePickerControl {
		return &v
	}).(DashboardParameterDateTimePickerControlPtrOutput)
}

func (o DashboardParameterDateTimePickerControlOutput) DisplayOptions() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterDateTimePickerControl) *DashboardDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterDateTimePickerControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDateTimePickerControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterDateTimePickerControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDateTimePickerControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardParameterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterDateTimePickerControl)(nil)).Elem()
}

func (o DashboardParameterDateTimePickerControlPtrOutput) ToDashboardParameterDateTimePickerControlPtrOutput() DashboardParameterDateTimePickerControlPtrOutput {
	return o
}

func (o DashboardParameterDateTimePickerControlPtrOutput) ToDashboardParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) DashboardParameterDateTimePickerControlPtrOutput {
	return o
}

func (o DashboardParameterDateTimePickerControlPtrOutput) Elem() DashboardParameterDateTimePickerControlOutput {
	return o.ApplyT(func(v *DashboardParameterDateTimePickerControl) DashboardParameterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterDateTimePickerControl
		return ret
	}).(DashboardParameterDateTimePickerControlOutput)
}

func (o DashboardParameterDateTimePickerControlPtrOutput) DisplayOptions() DashboardDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDateTimePickerControl) *DashboardDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterDateTimePickerControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDateTimePickerControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardParameterDeclaration struct {
	DateTimeParameterDeclaration *DashboardDateTimeParameterDeclaration `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  *DashboardDecimalParameterDeclaration  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  *DashboardIntegerParameterDeclaration  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   *DashboardStringParameterDeclaration   `pulumi:"stringParameterDeclaration"`
}

// DashboardParameterDeclarationInput is an input type that accepts DashboardParameterDeclarationArgs and DashboardParameterDeclarationOutput values.
// You can construct a concrete instance of `DashboardParameterDeclarationInput` via:
//
//	DashboardParameterDeclarationArgs{...}
type DashboardParameterDeclarationInput interface {
	pulumi.Input

	ToDashboardParameterDeclarationOutput() DashboardParameterDeclarationOutput
	ToDashboardParameterDeclarationOutputWithContext(context.Context) DashboardParameterDeclarationOutput
}

type DashboardParameterDeclarationArgs struct {
	DateTimeParameterDeclaration DashboardDateTimeParameterDeclarationPtrInput `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  DashboardDecimalParameterDeclarationPtrInput  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  DashboardIntegerParameterDeclarationPtrInput  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   DashboardStringParameterDeclarationPtrInput   `pulumi:"stringParameterDeclaration"`
}

func (DashboardParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDeclaration)(nil)).Elem()
}

func (i DashboardParameterDeclarationArgs) ToDashboardParameterDeclarationOutput() DashboardParameterDeclarationOutput {
	return i.ToDashboardParameterDeclarationOutputWithContext(context.Background())
}

func (i DashboardParameterDeclarationArgs) ToDashboardParameterDeclarationOutputWithContext(ctx context.Context) DashboardParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDeclarationOutput)
}

// DashboardParameterDeclarationArrayInput is an input type that accepts DashboardParameterDeclarationArray and DashboardParameterDeclarationArrayOutput values.
// You can construct a concrete instance of `DashboardParameterDeclarationArrayInput` via:
//
//	DashboardParameterDeclarationArray{ DashboardParameterDeclarationArgs{...} }
type DashboardParameterDeclarationArrayInput interface {
	pulumi.Input

	ToDashboardParameterDeclarationArrayOutput() DashboardParameterDeclarationArrayOutput
	ToDashboardParameterDeclarationArrayOutputWithContext(context.Context) DashboardParameterDeclarationArrayOutput
}

type DashboardParameterDeclarationArray []DashboardParameterDeclarationInput

func (DashboardParameterDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterDeclaration)(nil)).Elem()
}

func (i DashboardParameterDeclarationArray) ToDashboardParameterDeclarationArrayOutput() DashboardParameterDeclarationArrayOutput {
	return i.ToDashboardParameterDeclarationArrayOutputWithContext(context.Background())
}

func (i DashboardParameterDeclarationArray) ToDashboardParameterDeclarationArrayOutputWithContext(ctx context.Context) DashboardParameterDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDeclarationArrayOutput)
}

type DashboardParameterDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDeclaration)(nil)).Elem()
}

func (o DashboardParameterDeclarationOutput) ToDashboardParameterDeclarationOutput() DashboardParameterDeclarationOutput {
	return o
}

func (o DashboardParameterDeclarationOutput) ToDashboardParameterDeclarationOutputWithContext(ctx context.Context) DashboardParameterDeclarationOutput {
	return o
}

func (o DashboardParameterDeclarationOutput) DateTimeParameterDeclaration() DashboardDateTimeParameterDeclarationPtrOutput {
	return o.ApplyT(func(v DashboardParameterDeclaration) *DashboardDateTimeParameterDeclaration {
		return v.DateTimeParameterDeclaration
	}).(DashboardDateTimeParameterDeclarationPtrOutput)
}

func (o DashboardParameterDeclarationOutput) DecimalParameterDeclaration() DashboardDecimalParameterDeclarationPtrOutput {
	return o.ApplyT(func(v DashboardParameterDeclaration) *DashboardDecimalParameterDeclaration {
		return v.DecimalParameterDeclaration
	}).(DashboardDecimalParameterDeclarationPtrOutput)
}

func (o DashboardParameterDeclarationOutput) IntegerParameterDeclaration() DashboardIntegerParameterDeclarationPtrOutput {
	return o.ApplyT(func(v DashboardParameterDeclaration) *DashboardIntegerParameterDeclaration {
		return v.IntegerParameterDeclaration
	}).(DashboardIntegerParameterDeclarationPtrOutput)
}

func (o DashboardParameterDeclarationOutput) StringParameterDeclaration() DashboardStringParameterDeclarationPtrOutput {
	return o.ApplyT(func(v DashboardParameterDeclaration) *DashboardStringParameterDeclaration {
		return v.StringParameterDeclaration
	}).(DashboardStringParameterDeclarationPtrOutput)
}

type DashboardParameterDeclarationArrayOutput struct{ *pulumi.OutputState }

func (DashboardParameterDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardParameterDeclaration)(nil)).Elem()
}

func (o DashboardParameterDeclarationArrayOutput) ToDashboardParameterDeclarationArrayOutput() DashboardParameterDeclarationArrayOutput {
	return o
}

func (o DashboardParameterDeclarationArrayOutput) ToDashboardParameterDeclarationArrayOutputWithContext(ctx context.Context) DashboardParameterDeclarationArrayOutput {
	return o
}

func (o DashboardParameterDeclarationArrayOutput) Index(i pulumi.IntInput) DashboardParameterDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardParameterDeclaration {
		return vs[0].([]DashboardParameterDeclaration)[vs[1].(int)]
	}).(DashboardParameterDeclarationOutput)
}

type DashboardParameterDropDownControl struct {
	CascadingControlConfiguration *DashboardCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *DashboardDropDownControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId            string                                  `pulumi:"parameterControlId"`
	SelectableValues              *DashboardParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                  `pulumi:"sourceParameterName"`
	Title                         string                                  `pulumi:"title"`
	Type                          *DashboardSheetControlListType          `pulumi:"type"`
}

// DashboardParameterDropDownControlInput is an input type that accepts DashboardParameterDropDownControlArgs and DashboardParameterDropDownControlOutput values.
// You can construct a concrete instance of `DashboardParameterDropDownControlInput` via:
//
//	DashboardParameterDropDownControlArgs{...}
type DashboardParameterDropDownControlInput interface {
	pulumi.Input

	ToDashboardParameterDropDownControlOutput() DashboardParameterDropDownControlOutput
	ToDashboardParameterDropDownControlOutputWithContext(context.Context) DashboardParameterDropDownControlOutput
}

type DashboardParameterDropDownControlArgs struct {
	CascadingControlConfiguration DashboardCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                DashboardDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                             `pulumi:"parameterControlId"`
	SelectableValues              DashboardParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                             `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                             `pulumi:"title"`
	Type                          DashboardSheetControlListTypePtrInput          `pulumi:"type"`
}

func (DashboardParameterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDropDownControl)(nil)).Elem()
}

func (i DashboardParameterDropDownControlArgs) ToDashboardParameterDropDownControlOutput() DashboardParameterDropDownControlOutput {
	return i.ToDashboardParameterDropDownControlOutputWithContext(context.Background())
}

func (i DashboardParameterDropDownControlArgs) ToDashboardParameterDropDownControlOutputWithContext(ctx context.Context) DashboardParameterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDropDownControlOutput)
}

func (i DashboardParameterDropDownControlArgs) ToDashboardParameterDropDownControlPtrOutput() DashboardParameterDropDownControlPtrOutput {
	return i.ToDashboardParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterDropDownControlArgs) ToDashboardParameterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDropDownControlOutput).ToDashboardParameterDropDownControlPtrOutputWithContext(ctx)
}

// DashboardParameterDropDownControlPtrInput is an input type that accepts DashboardParameterDropDownControlArgs, DashboardParameterDropDownControlPtr and DashboardParameterDropDownControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterDropDownControlPtrInput` via:
//
//	        DashboardParameterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterDropDownControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterDropDownControlPtrOutput() DashboardParameterDropDownControlPtrOutput
	ToDashboardParameterDropDownControlPtrOutputWithContext(context.Context) DashboardParameterDropDownControlPtrOutput
}

type dashboardParameterDropDownControlPtrType DashboardParameterDropDownControlArgs

func DashboardParameterDropDownControlPtr(v *DashboardParameterDropDownControlArgs) DashboardParameterDropDownControlPtrInput {
	return (*dashboardParameterDropDownControlPtrType)(v)
}

func (*dashboardParameterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterDropDownControl)(nil)).Elem()
}

func (i *dashboardParameterDropDownControlPtrType) ToDashboardParameterDropDownControlPtrOutput() DashboardParameterDropDownControlPtrOutput {
	return i.ToDashboardParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterDropDownControlPtrType) ToDashboardParameterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterDropDownControlPtrOutput)
}

type DashboardParameterDropDownControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterDropDownControl)(nil)).Elem()
}

func (o DashboardParameterDropDownControlOutput) ToDashboardParameterDropDownControlOutput() DashboardParameterDropDownControlOutput {
	return o
}

func (o DashboardParameterDropDownControlOutput) ToDashboardParameterDropDownControlOutputWithContext(ctx context.Context) DashboardParameterDropDownControlOutput {
	return o
}

func (o DashboardParameterDropDownControlOutput) ToDashboardParameterDropDownControlPtrOutput() DashboardParameterDropDownControlPtrOutput {
	return o.ToDashboardParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterDropDownControlOutput) ToDashboardParameterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardParameterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterDropDownControl) *DashboardParameterDropDownControl {
		return &v
	}).(DashboardParameterDropDownControlPtrOutput)
}

func (o DashboardParameterDropDownControlOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) *DashboardCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardParameterDropDownControlOutput) DisplayOptions() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) *DashboardDropDownControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterDropDownControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterDropDownControlOutput) SelectableValues() DashboardParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) *DashboardParameterSelectableValues {
		return v.SelectableValues
	}).(DashboardParameterSelectableValuesPtrOutput)
}

func (o DashboardParameterDropDownControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardParameterDropDownControlOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v DashboardParameterDropDownControl) *DashboardSheetControlListType { return v.Type }).(DashboardSheetControlListTypePtrOutput)
}

type DashboardParameterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterDropDownControl)(nil)).Elem()
}

func (o DashboardParameterDropDownControlPtrOutput) ToDashboardParameterDropDownControlPtrOutput() DashboardParameterDropDownControlPtrOutput {
	return o
}

func (o DashboardParameterDropDownControlPtrOutput) ToDashboardParameterDropDownControlPtrOutputWithContext(ctx context.Context) DashboardParameterDropDownControlPtrOutput {
	return o
}

func (o DashboardParameterDropDownControlPtrOutput) Elem() DashboardParameterDropDownControlOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) DashboardParameterDropDownControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterDropDownControl
		return ret
	}).(DashboardParameterDropDownControlOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *DashboardCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) DisplayOptions() DashboardDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *DashboardDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardDropDownControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) SelectableValues() DashboardParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *DashboardParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(DashboardParameterSelectableValuesPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterDropDownControlPtrOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *DashboardParameterDropDownControl) *DashboardSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlListTypePtrOutput)
}

type DashboardParameterListControl struct {
	CascadingControlConfiguration *DashboardCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *DashboardListControlDisplayOptions     `pulumi:"displayOptions"`
	ParameterControlId            string                                  `pulumi:"parameterControlId"`
	SelectableValues              *DashboardParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                  `pulumi:"sourceParameterName"`
	Title                         string                                  `pulumi:"title"`
	Type                          *DashboardSheetControlListType          `pulumi:"type"`
}

// DashboardParameterListControlInput is an input type that accepts DashboardParameterListControlArgs and DashboardParameterListControlOutput values.
// You can construct a concrete instance of `DashboardParameterListControlInput` via:
//
//	DashboardParameterListControlArgs{...}
type DashboardParameterListControlInput interface {
	pulumi.Input

	ToDashboardParameterListControlOutput() DashboardParameterListControlOutput
	ToDashboardParameterListControlOutputWithContext(context.Context) DashboardParameterListControlOutput
}

type DashboardParameterListControlArgs struct {
	CascadingControlConfiguration DashboardCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                DashboardListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                             `pulumi:"parameterControlId"`
	SelectableValues              DashboardParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                             `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                             `pulumi:"title"`
	Type                          DashboardSheetControlListTypePtrInput          `pulumi:"type"`
}

func (DashboardParameterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterListControl)(nil)).Elem()
}

func (i DashboardParameterListControlArgs) ToDashboardParameterListControlOutput() DashboardParameterListControlOutput {
	return i.ToDashboardParameterListControlOutputWithContext(context.Background())
}

func (i DashboardParameterListControlArgs) ToDashboardParameterListControlOutputWithContext(ctx context.Context) DashboardParameterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterListControlOutput)
}

func (i DashboardParameterListControlArgs) ToDashboardParameterListControlPtrOutput() DashboardParameterListControlPtrOutput {
	return i.ToDashboardParameterListControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterListControlArgs) ToDashboardParameterListControlPtrOutputWithContext(ctx context.Context) DashboardParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterListControlOutput).ToDashboardParameterListControlPtrOutputWithContext(ctx)
}

// DashboardParameterListControlPtrInput is an input type that accepts DashboardParameterListControlArgs, DashboardParameterListControlPtr and DashboardParameterListControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterListControlPtrInput` via:
//
//	        DashboardParameterListControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterListControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterListControlPtrOutput() DashboardParameterListControlPtrOutput
	ToDashboardParameterListControlPtrOutputWithContext(context.Context) DashboardParameterListControlPtrOutput
}

type dashboardParameterListControlPtrType DashboardParameterListControlArgs

func DashboardParameterListControlPtr(v *DashboardParameterListControlArgs) DashboardParameterListControlPtrInput {
	return (*dashboardParameterListControlPtrType)(v)
}

func (*dashboardParameterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterListControl)(nil)).Elem()
}

func (i *dashboardParameterListControlPtrType) ToDashboardParameterListControlPtrOutput() DashboardParameterListControlPtrOutput {
	return i.ToDashboardParameterListControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterListControlPtrType) ToDashboardParameterListControlPtrOutputWithContext(ctx context.Context) DashboardParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterListControlPtrOutput)
}

type DashboardParameterListControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterListControl)(nil)).Elem()
}

func (o DashboardParameterListControlOutput) ToDashboardParameterListControlOutput() DashboardParameterListControlOutput {
	return o
}

func (o DashboardParameterListControlOutput) ToDashboardParameterListControlOutputWithContext(ctx context.Context) DashboardParameterListControlOutput {
	return o
}

func (o DashboardParameterListControlOutput) ToDashboardParameterListControlPtrOutput() DashboardParameterListControlPtrOutput {
	return o.ToDashboardParameterListControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterListControlOutput) ToDashboardParameterListControlPtrOutputWithContext(ctx context.Context) DashboardParameterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterListControl) *DashboardParameterListControl {
		return &v
	}).(DashboardParameterListControlPtrOutput)
}

func (o DashboardParameterListControlOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardParameterListControl) *DashboardCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardParameterListControlOutput) DisplayOptions() DashboardListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterListControl) *DashboardListControlDisplayOptions { return v.DisplayOptions }).(DashboardListControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterListControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterListControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterListControlOutput) SelectableValues() DashboardParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v DashboardParameterListControl) *DashboardParameterSelectableValues { return v.SelectableValues }).(DashboardParameterSelectableValuesPtrOutput)
}

func (o DashboardParameterListControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterListControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o DashboardParameterListControlOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v DashboardParameterListControl) *DashboardSheetControlListType { return v.Type }).(DashboardSheetControlListTypePtrOutput)
}

type DashboardParameterListControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterListControl)(nil)).Elem()
}

func (o DashboardParameterListControlPtrOutput) ToDashboardParameterListControlPtrOutput() DashboardParameterListControlPtrOutput {
	return o
}

func (o DashboardParameterListControlPtrOutput) ToDashboardParameterListControlPtrOutputWithContext(ctx context.Context) DashboardParameterListControlPtrOutput {
	return o
}

func (o DashboardParameterListControlPtrOutput) Elem() DashboardParameterListControlOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) DashboardParameterListControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterListControl
		return ret
	}).(DashboardParameterListControlOutput)
}

func (o DashboardParameterListControlPtrOutput) CascadingControlConfiguration() DashboardCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *DashboardCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(DashboardCascadingControlConfigurationPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) DisplayOptions() DashboardListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *DashboardListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardListControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) SelectableValues() DashboardParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *DashboardParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(DashboardParameterSelectableValuesPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterListControlPtrOutput) Type() DashboardSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *DashboardParameterListControl) *DashboardSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DashboardSheetControlListTypePtrOutput)
}

type DashboardParameterSelectableValues struct {
	LinkToDataSetColumn *DashboardColumnIdentifier `pulumi:"linkToDataSetColumn"`
	Values              []string                   `pulumi:"values"`
}

// DashboardParameterSelectableValuesInput is an input type that accepts DashboardParameterSelectableValuesArgs and DashboardParameterSelectableValuesOutput values.
// You can construct a concrete instance of `DashboardParameterSelectableValuesInput` via:
//
//	DashboardParameterSelectableValuesArgs{...}
type DashboardParameterSelectableValuesInput interface {
	pulumi.Input

	ToDashboardParameterSelectableValuesOutput() DashboardParameterSelectableValuesOutput
	ToDashboardParameterSelectableValuesOutputWithContext(context.Context) DashboardParameterSelectableValuesOutput
}

type DashboardParameterSelectableValuesArgs struct {
	LinkToDataSetColumn DashboardColumnIdentifierPtrInput `pulumi:"linkToDataSetColumn"`
	Values              pulumi.StringArrayInput           `pulumi:"values"`
}

func (DashboardParameterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterSelectableValues)(nil)).Elem()
}

func (i DashboardParameterSelectableValuesArgs) ToDashboardParameterSelectableValuesOutput() DashboardParameterSelectableValuesOutput {
	return i.ToDashboardParameterSelectableValuesOutputWithContext(context.Background())
}

func (i DashboardParameterSelectableValuesArgs) ToDashboardParameterSelectableValuesOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSelectableValuesOutput)
}

func (i DashboardParameterSelectableValuesArgs) ToDashboardParameterSelectableValuesPtrOutput() DashboardParameterSelectableValuesPtrOutput {
	return i.ToDashboardParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i DashboardParameterSelectableValuesArgs) ToDashboardParameterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSelectableValuesOutput).ToDashboardParameterSelectableValuesPtrOutputWithContext(ctx)
}

// DashboardParameterSelectableValuesPtrInput is an input type that accepts DashboardParameterSelectableValuesArgs, DashboardParameterSelectableValuesPtr and DashboardParameterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `DashboardParameterSelectableValuesPtrInput` via:
//
//	        DashboardParameterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterSelectableValuesPtrInput interface {
	pulumi.Input

	ToDashboardParameterSelectableValuesPtrOutput() DashboardParameterSelectableValuesPtrOutput
	ToDashboardParameterSelectableValuesPtrOutputWithContext(context.Context) DashboardParameterSelectableValuesPtrOutput
}

type dashboardParameterSelectableValuesPtrType DashboardParameterSelectableValuesArgs

func DashboardParameterSelectableValuesPtr(v *DashboardParameterSelectableValuesArgs) DashboardParameterSelectableValuesPtrInput {
	return (*dashboardParameterSelectableValuesPtrType)(v)
}

func (*dashboardParameterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterSelectableValues)(nil)).Elem()
}

func (i *dashboardParameterSelectableValuesPtrType) ToDashboardParameterSelectableValuesPtrOutput() DashboardParameterSelectableValuesPtrOutput {
	return i.ToDashboardParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterSelectableValuesPtrType) ToDashboardParameterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSelectableValuesPtrOutput)
}

type DashboardParameterSelectableValuesOutput struct{ *pulumi.OutputState }

func (DashboardParameterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterSelectableValues)(nil)).Elem()
}

func (o DashboardParameterSelectableValuesOutput) ToDashboardParameterSelectableValuesOutput() DashboardParameterSelectableValuesOutput {
	return o
}

func (o DashboardParameterSelectableValuesOutput) ToDashboardParameterSelectableValuesOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesOutput {
	return o
}

func (o DashboardParameterSelectableValuesOutput) ToDashboardParameterSelectableValuesPtrOutput() DashboardParameterSelectableValuesPtrOutput {
	return o.ToDashboardParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o DashboardParameterSelectableValuesOutput) ToDashboardParameterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterSelectableValues) *DashboardParameterSelectableValues {
		return &v
	}).(DashboardParameterSelectableValuesPtrOutput)
}

func (o DashboardParameterSelectableValuesOutput) LinkToDataSetColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v DashboardParameterSelectableValues) *DashboardColumnIdentifier { return v.LinkToDataSetColumn }).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardParameterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardParameterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardParameterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterSelectableValues)(nil)).Elem()
}

func (o DashboardParameterSelectableValuesPtrOutput) ToDashboardParameterSelectableValuesPtrOutput() DashboardParameterSelectableValuesPtrOutput {
	return o
}

func (o DashboardParameterSelectableValuesPtrOutput) ToDashboardParameterSelectableValuesPtrOutputWithContext(ctx context.Context) DashboardParameterSelectableValuesPtrOutput {
	return o
}

func (o DashboardParameterSelectableValuesPtrOutput) Elem() DashboardParameterSelectableValuesOutput {
	return o.ApplyT(func(v *DashboardParameterSelectableValues) DashboardParameterSelectableValues {
		if v != nil {
			return *v
		}
		var ret DashboardParameterSelectableValues
		return ret
	}).(DashboardParameterSelectableValuesOutput)
}

func (o DashboardParameterSelectableValuesPtrOutput) LinkToDataSetColumn() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardParameterSelectableValues) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.LinkToDataSetColumn
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardParameterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardParameterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type DashboardParameterSliderControl struct {
	DisplayOptions      *DashboardSliderControlDisplayOptions `pulumi:"displayOptions"`
	MaximumValue        float64                               `pulumi:"maximumValue"`
	MinimumValue        float64                               `pulumi:"minimumValue"`
	ParameterControlId  string                                `pulumi:"parameterControlId"`
	SourceParameterName string                                `pulumi:"sourceParameterName"`
	StepSize            float64                               `pulumi:"stepSize"`
	Title               string                                `pulumi:"title"`
}

// DashboardParameterSliderControlInput is an input type that accepts DashboardParameterSliderControlArgs and DashboardParameterSliderControlOutput values.
// You can construct a concrete instance of `DashboardParameterSliderControlInput` via:
//
//	DashboardParameterSliderControlArgs{...}
type DashboardParameterSliderControlInput interface {
	pulumi.Input

	ToDashboardParameterSliderControlOutput() DashboardParameterSliderControlOutput
	ToDashboardParameterSliderControlOutputWithContext(context.Context) DashboardParameterSliderControlOutput
}

type DashboardParameterSliderControlArgs struct {
	DisplayOptions      DashboardSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	MaximumValue        pulumi.Float64Input                          `pulumi:"maximumValue"`
	MinimumValue        pulumi.Float64Input                          `pulumi:"minimumValue"`
	ParameterControlId  pulumi.StringInput                           `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                           `pulumi:"sourceParameterName"`
	StepSize            pulumi.Float64Input                          `pulumi:"stepSize"`
	Title               pulumi.StringInput                           `pulumi:"title"`
}

func (DashboardParameterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterSliderControl)(nil)).Elem()
}

func (i DashboardParameterSliderControlArgs) ToDashboardParameterSliderControlOutput() DashboardParameterSliderControlOutput {
	return i.ToDashboardParameterSliderControlOutputWithContext(context.Background())
}

func (i DashboardParameterSliderControlArgs) ToDashboardParameterSliderControlOutputWithContext(ctx context.Context) DashboardParameterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSliderControlOutput)
}

func (i DashboardParameterSliderControlArgs) ToDashboardParameterSliderControlPtrOutput() DashboardParameterSliderControlPtrOutput {
	return i.ToDashboardParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterSliderControlArgs) ToDashboardParameterSliderControlPtrOutputWithContext(ctx context.Context) DashboardParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSliderControlOutput).ToDashboardParameterSliderControlPtrOutputWithContext(ctx)
}

// DashboardParameterSliderControlPtrInput is an input type that accepts DashboardParameterSliderControlArgs, DashboardParameterSliderControlPtr and DashboardParameterSliderControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterSliderControlPtrInput` via:
//
//	        DashboardParameterSliderControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterSliderControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterSliderControlPtrOutput() DashboardParameterSliderControlPtrOutput
	ToDashboardParameterSliderControlPtrOutputWithContext(context.Context) DashboardParameterSliderControlPtrOutput
}

type dashboardParameterSliderControlPtrType DashboardParameterSliderControlArgs

func DashboardParameterSliderControlPtr(v *DashboardParameterSliderControlArgs) DashboardParameterSliderControlPtrInput {
	return (*dashboardParameterSliderControlPtrType)(v)
}

func (*dashboardParameterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterSliderControl)(nil)).Elem()
}

func (i *dashboardParameterSliderControlPtrType) ToDashboardParameterSliderControlPtrOutput() DashboardParameterSliderControlPtrOutput {
	return i.ToDashboardParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterSliderControlPtrType) ToDashboardParameterSliderControlPtrOutputWithContext(ctx context.Context) DashboardParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterSliderControlPtrOutput)
}

type DashboardParameterSliderControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterSliderControl)(nil)).Elem()
}

func (o DashboardParameterSliderControlOutput) ToDashboardParameterSliderControlOutput() DashboardParameterSliderControlOutput {
	return o
}

func (o DashboardParameterSliderControlOutput) ToDashboardParameterSliderControlOutputWithContext(ctx context.Context) DashboardParameterSliderControlOutput {
	return o
}

func (o DashboardParameterSliderControlOutput) ToDashboardParameterSliderControlPtrOutput() DashboardParameterSliderControlPtrOutput {
	return o.ToDashboardParameterSliderControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterSliderControlOutput) ToDashboardParameterSliderControlPtrOutputWithContext(ctx context.Context) DashboardParameterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterSliderControl) *DashboardParameterSliderControl {
		return &v
	}).(DashboardParameterSliderControlPtrOutput)
}

func (o DashboardParameterSliderControlOutput) DisplayOptions() DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterSliderControl) *DashboardSliderControlDisplayOptions { return v.DisplayOptions }).(DashboardSliderControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardParameterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o DashboardParameterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardParameterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o DashboardParameterSliderControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterSliderControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterSliderControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterSliderControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardParameterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o DashboardParameterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardParameterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterSliderControl)(nil)).Elem()
}

func (o DashboardParameterSliderControlPtrOutput) ToDashboardParameterSliderControlPtrOutput() DashboardParameterSliderControlPtrOutput {
	return o
}

func (o DashboardParameterSliderControlPtrOutput) ToDashboardParameterSliderControlPtrOutputWithContext(ctx context.Context) DashboardParameterSliderControlPtrOutput {
	return o
}

func (o DashboardParameterSliderControlPtrOutput) Elem() DashboardParameterSliderControlOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) DashboardParameterSliderControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterSliderControl
		return ret
	}).(DashboardParameterSliderControlOutput)
}

func (o DashboardParameterSliderControlPtrOutput) DisplayOptions() DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *DashboardSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardSliderControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardParameterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardParameterTextAreaControl struct {
	Delimiter           *string                                 `pulumi:"delimiter"`
	DisplayOptions      *DashboardTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                  `pulumi:"parameterControlId"`
	SourceParameterName string                                  `pulumi:"sourceParameterName"`
	Title               string                                  `pulumi:"title"`
}

// DashboardParameterTextAreaControlInput is an input type that accepts DashboardParameterTextAreaControlArgs and DashboardParameterTextAreaControlOutput values.
// You can construct a concrete instance of `DashboardParameterTextAreaControlInput` via:
//
//	DashboardParameterTextAreaControlArgs{...}
type DashboardParameterTextAreaControlInput interface {
	pulumi.Input

	ToDashboardParameterTextAreaControlOutput() DashboardParameterTextAreaControlOutput
	ToDashboardParameterTextAreaControlOutputWithContext(context.Context) DashboardParameterTextAreaControlOutput
}

type DashboardParameterTextAreaControlArgs struct {
	Delimiter           pulumi.StringPtrInput                          `pulumi:"delimiter"`
	DisplayOptions      DashboardTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                             `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                             `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                             `pulumi:"title"`
}

func (DashboardParameterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterTextAreaControl)(nil)).Elem()
}

func (i DashboardParameterTextAreaControlArgs) ToDashboardParameterTextAreaControlOutput() DashboardParameterTextAreaControlOutput {
	return i.ToDashboardParameterTextAreaControlOutputWithContext(context.Background())
}

func (i DashboardParameterTextAreaControlArgs) ToDashboardParameterTextAreaControlOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextAreaControlOutput)
}

func (i DashboardParameterTextAreaControlArgs) ToDashboardParameterTextAreaControlPtrOutput() DashboardParameterTextAreaControlPtrOutput {
	return i.ToDashboardParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterTextAreaControlArgs) ToDashboardParameterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextAreaControlOutput).ToDashboardParameterTextAreaControlPtrOutputWithContext(ctx)
}

// DashboardParameterTextAreaControlPtrInput is an input type that accepts DashboardParameterTextAreaControlArgs, DashboardParameterTextAreaControlPtr and DashboardParameterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterTextAreaControlPtrInput` via:
//
//	        DashboardParameterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterTextAreaControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterTextAreaControlPtrOutput() DashboardParameterTextAreaControlPtrOutput
	ToDashboardParameterTextAreaControlPtrOutputWithContext(context.Context) DashboardParameterTextAreaControlPtrOutput
}

type dashboardParameterTextAreaControlPtrType DashboardParameterTextAreaControlArgs

func DashboardParameterTextAreaControlPtr(v *DashboardParameterTextAreaControlArgs) DashboardParameterTextAreaControlPtrInput {
	return (*dashboardParameterTextAreaControlPtrType)(v)
}

func (*dashboardParameterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterTextAreaControl)(nil)).Elem()
}

func (i *dashboardParameterTextAreaControlPtrType) ToDashboardParameterTextAreaControlPtrOutput() DashboardParameterTextAreaControlPtrOutput {
	return i.ToDashboardParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterTextAreaControlPtrType) ToDashboardParameterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextAreaControlPtrOutput)
}

type DashboardParameterTextAreaControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterTextAreaControl)(nil)).Elem()
}

func (o DashboardParameterTextAreaControlOutput) ToDashboardParameterTextAreaControlOutput() DashboardParameterTextAreaControlOutput {
	return o
}

func (o DashboardParameterTextAreaControlOutput) ToDashboardParameterTextAreaControlOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlOutput {
	return o
}

func (o DashboardParameterTextAreaControlOutput) ToDashboardParameterTextAreaControlPtrOutput() DashboardParameterTextAreaControlPtrOutput {
	return o.ToDashboardParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterTextAreaControlOutput) ToDashboardParameterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterTextAreaControl) *DashboardParameterTextAreaControl {
		return &v
	}).(DashboardParameterTextAreaControlPtrOutput)
}

func (o DashboardParameterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardParameterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextAreaControlOutput) DisplayOptions() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterTextAreaControl) *DashboardTextAreaControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterTextAreaControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextAreaControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterTextAreaControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextAreaControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardParameterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterTextAreaControl)(nil)).Elem()
}

func (o DashboardParameterTextAreaControlPtrOutput) ToDashboardParameterTextAreaControlPtrOutput() DashboardParameterTextAreaControlPtrOutput {
	return o
}

func (o DashboardParameterTextAreaControlPtrOutput) ToDashboardParameterTextAreaControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextAreaControlPtrOutput {
	return o
}

func (o DashboardParameterTextAreaControlPtrOutput) Elem() DashboardParameterTextAreaControlOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) DashboardParameterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterTextAreaControl
		return ret
	}).(DashboardParameterTextAreaControlOutput)
}

func (o DashboardParameterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextAreaControlPtrOutput) DisplayOptions() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) *DashboardTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterTextAreaControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextAreaControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardParameterTextFieldControl struct {
	DisplayOptions      *DashboardTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                   `pulumi:"parameterControlId"`
	SourceParameterName string                                   `pulumi:"sourceParameterName"`
	Title               string                                   `pulumi:"title"`
}

// DashboardParameterTextFieldControlInput is an input type that accepts DashboardParameterTextFieldControlArgs and DashboardParameterTextFieldControlOutput values.
// You can construct a concrete instance of `DashboardParameterTextFieldControlInput` via:
//
//	DashboardParameterTextFieldControlArgs{...}
type DashboardParameterTextFieldControlInput interface {
	pulumi.Input

	ToDashboardParameterTextFieldControlOutput() DashboardParameterTextFieldControlOutput
	ToDashboardParameterTextFieldControlOutputWithContext(context.Context) DashboardParameterTextFieldControlOutput
}

type DashboardParameterTextFieldControlArgs struct {
	DisplayOptions      DashboardTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                              `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                              `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                              `pulumi:"title"`
}

func (DashboardParameterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterTextFieldControl)(nil)).Elem()
}

func (i DashboardParameterTextFieldControlArgs) ToDashboardParameterTextFieldControlOutput() DashboardParameterTextFieldControlOutput {
	return i.ToDashboardParameterTextFieldControlOutputWithContext(context.Background())
}

func (i DashboardParameterTextFieldControlArgs) ToDashboardParameterTextFieldControlOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextFieldControlOutput)
}

func (i DashboardParameterTextFieldControlArgs) ToDashboardParameterTextFieldControlPtrOutput() DashboardParameterTextFieldControlPtrOutput {
	return i.ToDashboardParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i DashboardParameterTextFieldControlArgs) ToDashboardParameterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextFieldControlOutput).ToDashboardParameterTextFieldControlPtrOutputWithContext(ctx)
}

// DashboardParameterTextFieldControlPtrInput is an input type that accepts DashboardParameterTextFieldControlArgs, DashboardParameterTextFieldControlPtr and DashboardParameterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `DashboardParameterTextFieldControlPtrInput` via:
//
//	        DashboardParameterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type DashboardParameterTextFieldControlPtrInput interface {
	pulumi.Input

	ToDashboardParameterTextFieldControlPtrOutput() DashboardParameterTextFieldControlPtrOutput
	ToDashboardParameterTextFieldControlPtrOutputWithContext(context.Context) DashboardParameterTextFieldControlPtrOutput
}

type dashboardParameterTextFieldControlPtrType DashboardParameterTextFieldControlArgs

func DashboardParameterTextFieldControlPtr(v *DashboardParameterTextFieldControlArgs) DashboardParameterTextFieldControlPtrInput {
	return (*dashboardParameterTextFieldControlPtrType)(v)
}

func (*dashboardParameterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterTextFieldControl)(nil)).Elem()
}

func (i *dashboardParameterTextFieldControlPtrType) ToDashboardParameterTextFieldControlPtrOutput() DashboardParameterTextFieldControlPtrOutput {
	return i.ToDashboardParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *dashboardParameterTextFieldControlPtrType) ToDashboardParameterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParameterTextFieldControlPtrOutput)
}

type DashboardParameterTextFieldControlOutput struct{ *pulumi.OutputState }

func (DashboardParameterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameterTextFieldControl)(nil)).Elem()
}

func (o DashboardParameterTextFieldControlOutput) ToDashboardParameterTextFieldControlOutput() DashboardParameterTextFieldControlOutput {
	return o
}

func (o DashboardParameterTextFieldControlOutput) ToDashboardParameterTextFieldControlOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlOutput {
	return o
}

func (o DashboardParameterTextFieldControlOutput) ToDashboardParameterTextFieldControlPtrOutput() DashboardParameterTextFieldControlPtrOutput {
	return o.ToDashboardParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o DashboardParameterTextFieldControlOutput) ToDashboardParameterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameterTextFieldControl) *DashboardParameterTextFieldControl {
		return &v
	}).(DashboardParameterTextFieldControlPtrOutput)
}

func (o DashboardParameterTextFieldControlOutput) DisplayOptions() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardParameterTextFieldControl) *DashboardTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterTextFieldControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextFieldControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o DashboardParameterTextFieldControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextFieldControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o DashboardParameterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardParameterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type DashboardParameterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (DashboardParameterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameterTextFieldControl)(nil)).Elem()
}

func (o DashboardParameterTextFieldControlPtrOutput) ToDashboardParameterTextFieldControlPtrOutput() DashboardParameterTextFieldControlPtrOutput {
	return o
}

func (o DashboardParameterTextFieldControlPtrOutput) ToDashboardParameterTextFieldControlPtrOutputWithContext(ctx context.Context) DashboardParameterTextFieldControlPtrOutput {
	return o
}

func (o DashboardParameterTextFieldControlPtrOutput) Elem() DashboardParameterTextFieldControlOutput {
	return o.ApplyT(func(v *DashboardParameterTextFieldControl) DashboardParameterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret DashboardParameterTextFieldControl
		return ret
	}).(DashboardParameterTextFieldControlOutput)
}

func (o DashboardParameterTextFieldControlPtrOutput) DisplayOptions() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextFieldControl) *DashboardTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

func (o DashboardParameterTextFieldControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextFieldControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardParameterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DashboardParameters struct {
	DateTimeParameters []DashboardDateTimeParameter `pulumi:"dateTimeParameters"`
	DecimalParameters  []DashboardDecimalParameter  `pulumi:"decimalParameters"`
	IntegerParameters  []DashboardIntegerParameter  `pulumi:"integerParameters"`
	StringParameters   []DashboardStringParameter   `pulumi:"stringParameters"`
}

// DashboardParametersInput is an input type that accepts DashboardParametersArgs and DashboardParametersOutput values.
// You can construct a concrete instance of `DashboardParametersInput` via:
//
//	DashboardParametersArgs{...}
type DashboardParametersInput interface {
	pulumi.Input

	ToDashboardParametersOutput() DashboardParametersOutput
	ToDashboardParametersOutputWithContext(context.Context) DashboardParametersOutput
}

type DashboardParametersArgs struct {
	DateTimeParameters DashboardDateTimeParameterArrayInput `pulumi:"dateTimeParameters"`
	DecimalParameters  DashboardDecimalParameterArrayInput  `pulumi:"decimalParameters"`
	IntegerParameters  DashboardIntegerParameterArrayInput  `pulumi:"integerParameters"`
	StringParameters   DashboardStringParameterArrayInput   `pulumi:"stringParameters"`
}

func (DashboardParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameters)(nil)).Elem()
}

func (i DashboardParametersArgs) ToDashboardParametersOutput() DashboardParametersOutput {
	return i.ToDashboardParametersOutputWithContext(context.Background())
}

func (i DashboardParametersArgs) ToDashboardParametersOutputWithContext(ctx context.Context) DashboardParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersOutput)
}

func (i DashboardParametersArgs) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return i.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (i DashboardParametersArgs) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersOutput).ToDashboardParametersPtrOutputWithContext(ctx)
}

// DashboardParametersPtrInput is an input type that accepts DashboardParametersArgs, DashboardParametersPtr and DashboardParametersPtrOutput values.
// You can construct a concrete instance of `DashboardParametersPtrInput` via:
//
//	        DashboardParametersArgs{...}
//
//	or:
//
//	        nil
type DashboardParametersPtrInput interface {
	pulumi.Input

	ToDashboardParametersPtrOutput() DashboardParametersPtrOutput
	ToDashboardParametersPtrOutputWithContext(context.Context) DashboardParametersPtrOutput
}

type dashboardParametersPtrType DashboardParametersArgs

func DashboardParametersPtr(v *DashboardParametersArgs) DashboardParametersPtrInput {
	return (*dashboardParametersPtrType)(v)
}

func (*dashboardParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameters)(nil)).Elem()
}

func (i *dashboardParametersPtrType) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return i.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (i *dashboardParametersPtrType) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardParametersPtrOutput)
}

type DashboardParametersOutput struct{ *pulumi.OutputState }

func (DashboardParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardParameters)(nil)).Elem()
}

func (o DashboardParametersOutput) ToDashboardParametersOutput() DashboardParametersOutput {
	return o
}

func (o DashboardParametersOutput) ToDashboardParametersOutputWithContext(ctx context.Context) DashboardParametersOutput {
	return o
}

func (o DashboardParametersOutput) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return o.ToDashboardParametersPtrOutputWithContext(context.Background())
}

func (o DashboardParametersOutput) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardParameters) *DashboardParameters {
		return &v
	}).(DashboardParametersPtrOutput)
}

func (o DashboardParametersOutput) DateTimeParameters() DashboardDateTimeParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardDateTimeParameter { return v.DateTimeParameters }).(DashboardDateTimeParameterArrayOutput)
}

func (o DashboardParametersOutput) DecimalParameters() DashboardDecimalParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardDecimalParameter { return v.DecimalParameters }).(DashboardDecimalParameterArrayOutput)
}

func (o DashboardParametersOutput) IntegerParameters() DashboardIntegerParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardIntegerParameter { return v.IntegerParameters }).(DashboardIntegerParameterArrayOutput)
}

func (o DashboardParametersOutput) StringParameters() DashboardStringParameterArrayOutput {
	return o.ApplyT(func(v DashboardParameters) []DashboardStringParameter { return v.StringParameters }).(DashboardStringParameterArrayOutput)
}

type DashboardParametersPtrOutput struct{ *pulumi.OutputState }

func (DashboardParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardParameters)(nil)).Elem()
}

func (o DashboardParametersPtrOutput) ToDashboardParametersPtrOutput() DashboardParametersPtrOutput {
	return o
}

func (o DashboardParametersPtrOutput) ToDashboardParametersPtrOutputWithContext(ctx context.Context) DashboardParametersPtrOutput {
	return o
}

func (o DashboardParametersPtrOutput) Elem() DashboardParametersOutput {
	return o.ApplyT(func(v *DashboardParameters) DashboardParameters {
		if v != nil {
			return *v
		}
		var ret DashboardParameters
		return ret
	}).(DashboardParametersOutput)
}

func (o DashboardParametersPtrOutput) DateTimeParameters() DashboardDateTimeParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardDateTimeParameter {
		if v == nil {
			return nil
		}
		return v.DateTimeParameters
	}).(DashboardDateTimeParameterArrayOutput)
}

func (o DashboardParametersPtrOutput) DecimalParameters() DashboardDecimalParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardDecimalParameter {
		if v == nil {
			return nil
		}
		return v.DecimalParameters
	}).(DashboardDecimalParameterArrayOutput)
}

func (o DashboardParametersPtrOutput) IntegerParameters() DashboardIntegerParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardIntegerParameter {
		if v == nil {
			return nil
		}
		return v.IntegerParameters
	}).(DashboardIntegerParameterArrayOutput)
}

func (o DashboardParametersPtrOutput) StringParameters() DashboardStringParameterArrayOutput {
	return o.ApplyT(func(v *DashboardParameters) []DashboardStringParameter {
		if v == nil {
			return nil
		}
		return v.StringParameters
	}).(DashboardStringParameterArrayOutput)
}

type DashboardPercentVisibleRange struct {
	From *float64 `pulumi:"from"`
	To   *float64 `pulumi:"to"`
}

// DashboardPercentVisibleRangeInput is an input type that accepts DashboardPercentVisibleRangeArgs and DashboardPercentVisibleRangeOutput values.
// You can construct a concrete instance of `DashboardPercentVisibleRangeInput` via:
//
//	DashboardPercentVisibleRangeArgs{...}
type DashboardPercentVisibleRangeInput interface {
	pulumi.Input

	ToDashboardPercentVisibleRangeOutput() DashboardPercentVisibleRangeOutput
	ToDashboardPercentVisibleRangeOutputWithContext(context.Context) DashboardPercentVisibleRangeOutput
}

type DashboardPercentVisibleRangeArgs struct {
	From pulumi.Float64PtrInput `pulumi:"from"`
	To   pulumi.Float64PtrInput `pulumi:"to"`
}

func (DashboardPercentVisibleRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentVisibleRange)(nil)).Elem()
}

func (i DashboardPercentVisibleRangeArgs) ToDashboardPercentVisibleRangeOutput() DashboardPercentVisibleRangeOutput {
	return i.ToDashboardPercentVisibleRangeOutputWithContext(context.Background())
}

func (i DashboardPercentVisibleRangeArgs) ToDashboardPercentVisibleRangeOutputWithContext(ctx context.Context) DashboardPercentVisibleRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentVisibleRangeOutput)
}

func (i DashboardPercentVisibleRangeArgs) ToDashboardPercentVisibleRangePtrOutput() DashboardPercentVisibleRangePtrOutput {
	return i.ToDashboardPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i DashboardPercentVisibleRangeArgs) ToDashboardPercentVisibleRangePtrOutputWithContext(ctx context.Context) DashboardPercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentVisibleRangeOutput).ToDashboardPercentVisibleRangePtrOutputWithContext(ctx)
}

// DashboardPercentVisibleRangePtrInput is an input type that accepts DashboardPercentVisibleRangeArgs, DashboardPercentVisibleRangePtr and DashboardPercentVisibleRangePtrOutput values.
// You can construct a concrete instance of `DashboardPercentVisibleRangePtrInput` via:
//
//	        DashboardPercentVisibleRangeArgs{...}
//
//	or:
//
//	        nil
type DashboardPercentVisibleRangePtrInput interface {
	pulumi.Input

	ToDashboardPercentVisibleRangePtrOutput() DashboardPercentVisibleRangePtrOutput
	ToDashboardPercentVisibleRangePtrOutputWithContext(context.Context) DashboardPercentVisibleRangePtrOutput
}

type dashboardPercentVisibleRangePtrType DashboardPercentVisibleRangeArgs

func DashboardPercentVisibleRangePtr(v *DashboardPercentVisibleRangeArgs) DashboardPercentVisibleRangePtrInput {
	return (*dashboardPercentVisibleRangePtrType)(v)
}

func (*dashboardPercentVisibleRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentVisibleRange)(nil)).Elem()
}

func (i *dashboardPercentVisibleRangePtrType) ToDashboardPercentVisibleRangePtrOutput() DashboardPercentVisibleRangePtrOutput {
	return i.ToDashboardPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPercentVisibleRangePtrType) ToDashboardPercentVisibleRangePtrOutputWithContext(ctx context.Context) DashboardPercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentVisibleRangePtrOutput)
}

type DashboardPercentVisibleRangeOutput struct{ *pulumi.OutputState }

func (DashboardPercentVisibleRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentVisibleRange)(nil)).Elem()
}

func (o DashboardPercentVisibleRangeOutput) ToDashboardPercentVisibleRangeOutput() DashboardPercentVisibleRangeOutput {
	return o
}

func (o DashboardPercentVisibleRangeOutput) ToDashboardPercentVisibleRangeOutputWithContext(ctx context.Context) DashboardPercentVisibleRangeOutput {
	return o
}

func (o DashboardPercentVisibleRangeOutput) ToDashboardPercentVisibleRangePtrOutput() DashboardPercentVisibleRangePtrOutput {
	return o.ToDashboardPercentVisibleRangePtrOutputWithContext(context.Background())
}

func (o DashboardPercentVisibleRangeOutput) ToDashboardPercentVisibleRangePtrOutputWithContext(ctx context.Context) DashboardPercentVisibleRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPercentVisibleRange) *DashboardPercentVisibleRange {
		return &v
	}).(DashboardPercentVisibleRangePtrOutput)
}

func (o DashboardPercentVisibleRangeOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPercentVisibleRange) *float64 { return v.From }).(pulumi.Float64PtrOutput)
}

func (o DashboardPercentVisibleRangeOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPercentVisibleRange) *float64 { return v.To }).(pulumi.Float64PtrOutput)
}

type DashboardPercentVisibleRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPercentVisibleRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentVisibleRange)(nil)).Elem()
}

func (o DashboardPercentVisibleRangePtrOutput) ToDashboardPercentVisibleRangePtrOutput() DashboardPercentVisibleRangePtrOutput {
	return o
}

func (o DashboardPercentVisibleRangePtrOutput) ToDashboardPercentVisibleRangePtrOutputWithContext(ctx context.Context) DashboardPercentVisibleRangePtrOutput {
	return o
}

func (o DashboardPercentVisibleRangePtrOutput) Elem() DashboardPercentVisibleRangeOutput {
	return o.ApplyT(func(v *DashboardPercentVisibleRange) DashboardPercentVisibleRange {
		if v != nil {
			return *v
		}
		var ret DashboardPercentVisibleRange
		return ret
	}).(DashboardPercentVisibleRangeOutput)
}

func (o DashboardPercentVisibleRangePtrOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardPercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardPercentVisibleRangePtrOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardPercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.To
	}).(pulumi.Float64PtrOutput)
}

type DashboardPercentageDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *DashboardDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *DashboardNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *DashboardNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       *string                                 `pulumi:"prefix"`
	SeparatorConfiguration       *DashboardNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                 `pulumi:"suffix"`
}

// DashboardPercentageDisplayFormatConfigurationInput is an input type that accepts DashboardPercentageDisplayFormatConfigurationArgs and DashboardPercentageDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardPercentageDisplayFormatConfigurationInput` via:
//
//	DashboardPercentageDisplayFormatConfigurationArgs{...}
type DashboardPercentageDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardPercentageDisplayFormatConfigurationOutput() DashboardPercentageDisplayFormatConfigurationOutput
	ToDashboardPercentageDisplayFormatConfigurationOutputWithContext(context.Context) DashboardPercentageDisplayFormatConfigurationOutput
}

type DashboardPercentageDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   DashboardDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   DashboardNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration DashboardNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       pulumi.StringPtrInput                          `pulumi:"prefix"`
	SeparatorConfiguration       DashboardNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                          `pulumi:"suffix"`
}

func (DashboardPercentageDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i DashboardPercentageDisplayFormatConfigurationArgs) ToDashboardPercentageDisplayFormatConfigurationOutput() DashboardPercentageDisplayFormatConfigurationOutput {
	return i.ToDashboardPercentageDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardPercentageDisplayFormatConfigurationArgs) ToDashboardPercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentageDisplayFormatConfigurationOutput)
}

func (i DashboardPercentageDisplayFormatConfigurationArgs) ToDashboardPercentageDisplayFormatConfigurationPtrOutput() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPercentageDisplayFormatConfigurationArgs) ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentageDisplayFormatConfigurationOutput).ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardPercentageDisplayFormatConfigurationPtrInput is an input type that accepts DashboardPercentageDisplayFormatConfigurationArgs, DashboardPercentageDisplayFormatConfigurationPtr and DashboardPercentageDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPercentageDisplayFormatConfigurationPtrInput` via:
//
//	        DashboardPercentageDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPercentageDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPercentageDisplayFormatConfigurationPtrOutput() DashboardPercentageDisplayFormatConfigurationPtrOutput
	ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Context) DashboardPercentageDisplayFormatConfigurationPtrOutput
}

type dashboardPercentageDisplayFormatConfigurationPtrType DashboardPercentageDisplayFormatConfigurationArgs

func DashboardPercentageDisplayFormatConfigurationPtr(v *DashboardPercentageDisplayFormatConfigurationArgs) DashboardPercentageDisplayFormatConfigurationPtrInput {
	return (*dashboardPercentageDisplayFormatConfigurationPtrType)(v)
}

func (*dashboardPercentageDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i *dashboardPercentageDisplayFormatConfigurationPtrType) ToDashboardPercentageDisplayFormatConfigurationPtrOutput() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return i.ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPercentageDisplayFormatConfigurationPtrType) ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

type DashboardPercentageDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPercentageDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) ToDashboardPercentageDisplayFormatConfigurationOutput() DashboardPercentageDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) ToDashboardPercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationOutput {
	return o
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) ToDashboardPercentageDisplayFormatConfigurationPtrOutput() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPercentageDisplayFormatConfiguration) *DashboardPercentageDisplayFormatConfiguration {
		return &v
	}).(DashboardPercentageDisplayFormatConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPercentageDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type DashboardPercentageDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPercentageDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) ToDashboardPercentageDisplayFormatConfigurationPtrOutput() DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) ToDashboardPercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardPercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) Elem() DashboardPercentageDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) DashboardPercentageDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPercentageDisplayFormatConfiguration
		return ret
	}).(DashboardPercentageDisplayFormatConfigurationOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() DashboardDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *DashboardDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(DashboardDecimalPlacesConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() DashboardNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *DashboardNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(DashboardNegativeValueConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *DashboardNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() DashboardNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *DashboardNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(DashboardNumericSeparatorConfigurationPtrOutput)
}

func (o DashboardPercentageDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type DashboardPercentileAggregation struct {
	PercentileValue *float64 `pulumi:"percentileValue"`
}

// DashboardPercentileAggregationInput is an input type that accepts DashboardPercentileAggregationArgs and DashboardPercentileAggregationOutput values.
// You can construct a concrete instance of `DashboardPercentileAggregationInput` via:
//
//	DashboardPercentileAggregationArgs{...}
type DashboardPercentileAggregationInput interface {
	pulumi.Input

	ToDashboardPercentileAggregationOutput() DashboardPercentileAggregationOutput
	ToDashboardPercentileAggregationOutputWithContext(context.Context) DashboardPercentileAggregationOutput
}

type DashboardPercentileAggregationArgs struct {
	PercentileValue pulumi.Float64PtrInput `pulumi:"percentileValue"`
}

func (DashboardPercentileAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentileAggregation)(nil)).Elem()
}

func (i DashboardPercentileAggregationArgs) ToDashboardPercentileAggregationOutput() DashboardPercentileAggregationOutput {
	return i.ToDashboardPercentileAggregationOutputWithContext(context.Background())
}

func (i DashboardPercentileAggregationArgs) ToDashboardPercentileAggregationOutputWithContext(ctx context.Context) DashboardPercentileAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentileAggregationOutput)
}

func (i DashboardPercentileAggregationArgs) ToDashboardPercentileAggregationPtrOutput() DashboardPercentileAggregationPtrOutput {
	return i.ToDashboardPercentileAggregationPtrOutputWithContext(context.Background())
}

func (i DashboardPercentileAggregationArgs) ToDashboardPercentileAggregationPtrOutputWithContext(ctx context.Context) DashboardPercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentileAggregationOutput).ToDashboardPercentileAggregationPtrOutputWithContext(ctx)
}

// DashboardPercentileAggregationPtrInput is an input type that accepts DashboardPercentileAggregationArgs, DashboardPercentileAggregationPtr and DashboardPercentileAggregationPtrOutput values.
// You can construct a concrete instance of `DashboardPercentileAggregationPtrInput` via:
//
//	        DashboardPercentileAggregationArgs{...}
//
//	or:
//
//	        nil
type DashboardPercentileAggregationPtrInput interface {
	pulumi.Input

	ToDashboardPercentileAggregationPtrOutput() DashboardPercentileAggregationPtrOutput
	ToDashboardPercentileAggregationPtrOutputWithContext(context.Context) DashboardPercentileAggregationPtrOutput
}

type dashboardPercentileAggregationPtrType DashboardPercentileAggregationArgs

func DashboardPercentileAggregationPtr(v *DashboardPercentileAggregationArgs) DashboardPercentileAggregationPtrInput {
	return (*dashboardPercentileAggregationPtrType)(v)
}

func (*dashboardPercentileAggregationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentileAggregation)(nil)).Elem()
}

func (i *dashboardPercentileAggregationPtrType) ToDashboardPercentileAggregationPtrOutput() DashboardPercentileAggregationPtrOutput {
	return i.ToDashboardPercentileAggregationPtrOutputWithContext(context.Background())
}

func (i *dashboardPercentileAggregationPtrType) ToDashboardPercentileAggregationPtrOutputWithContext(ctx context.Context) DashboardPercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPercentileAggregationPtrOutput)
}

type DashboardPercentileAggregationOutput struct{ *pulumi.OutputState }

func (DashboardPercentileAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPercentileAggregation)(nil)).Elem()
}

func (o DashboardPercentileAggregationOutput) ToDashboardPercentileAggregationOutput() DashboardPercentileAggregationOutput {
	return o
}

func (o DashboardPercentileAggregationOutput) ToDashboardPercentileAggregationOutputWithContext(ctx context.Context) DashboardPercentileAggregationOutput {
	return o
}

func (o DashboardPercentileAggregationOutput) ToDashboardPercentileAggregationPtrOutput() DashboardPercentileAggregationPtrOutput {
	return o.ToDashboardPercentileAggregationPtrOutputWithContext(context.Background())
}

func (o DashboardPercentileAggregationOutput) ToDashboardPercentileAggregationPtrOutputWithContext(ctx context.Context) DashboardPercentileAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPercentileAggregation) *DashboardPercentileAggregation {
		return &v
	}).(DashboardPercentileAggregationPtrOutput)
}

func (o DashboardPercentileAggregationOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPercentileAggregation) *float64 { return v.PercentileValue }).(pulumi.Float64PtrOutput)
}

type DashboardPercentileAggregationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPercentileAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPercentileAggregation)(nil)).Elem()
}

func (o DashboardPercentileAggregationPtrOutput) ToDashboardPercentileAggregationPtrOutput() DashboardPercentileAggregationPtrOutput {
	return o
}

func (o DashboardPercentileAggregationPtrOutput) ToDashboardPercentileAggregationPtrOutputWithContext(ctx context.Context) DashboardPercentileAggregationPtrOutput {
	return o
}

func (o DashboardPercentileAggregationPtrOutput) Elem() DashboardPercentileAggregationOutput {
	return o.ApplyT(func(v *DashboardPercentileAggregation) DashboardPercentileAggregation {
		if v != nil {
			return *v
		}
		var ret DashboardPercentileAggregation
		return ret
	}).(DashboardPercentileAggregationOutput)
}

func (o DashboardPercentileAggregationPtrOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardPercentileAggregation) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentileValue
	}).(pulumi.Float64PtrOutput)
}

type DashboardPeriodOverPeriodComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
	Time          DashboardDimensionField `pulumi:"time"`
	Value         *DashboardMeasureField  `pulumi:"value"`
}

// DashboardPeriodOverPeriodComputationInput is an input type that accepts DashboardPeriodOverPeriodComputationArgs and DashboardPeriodOverPeriodComputationOutput values.
// You can construct a concrete instance of `DashboardPeriodOverPeriodComputationInput` via:
//
//	DashboardPeriodOverPeriodComputationArgs{...}
type DashboardPeriodOverPeriodComputationInput interface {
	pulumi.Input

	ToDashboardPeriodOverPeriodComputationOutput() DashboardPeriodOverPeriodComputationOutput
	ToDashboardPeriodOverPeriodComputationOutputWithContext(context.Context) DashboardPeriodOverPeriodComputationOutput
}

type DashboardPeriodOverPeriodComputationArgs struct {
	ComputationId pulumi.StringInput            `pulumi:"computationId"`
	Name          pulumi.StringPtrInput         `pulumi:"name"`
	Time          DashboardDimensionFieldInput  `pulumi:"time"`
	Value         DashboardMeasureFieldPtrInput `pulumi:"value"`
}

func (DashboardPeriodOverPeriodComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPeriodOverPeriodComputation)(nil)).Elem()
}

func (i DashboardPeriodOverPeriodComputationArgs) ToDashboardPeriodOverPeriodComputationOutput() DashboardPeriodOverPeriodComputationOutput {
	return i.ToDashboardPeriodOverPeriodComputationOutputWithContext(context.Background())
}

func (i DashboardPeriodOverPeriodComputationArgs) ToDashboardPeriodOverPeriodComputationOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodOverPeriodComputationOutput)
}

func (i DashboardPeriodOverPeriodComputationArgs) ToDashboardPeriodOverPeriodComputationPtrOutput() DashboardPeriodOverPeriodComputationPtrOutput {
	return i.ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i DashboardPeriodOverPeriodComputationArgs) ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodOverPeriodComputationOutput).ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(ctx)
}

// DashboardPeriodOverPeriodComputationPtrInput is an input type that accepts DashboardPeriodOverPeriodComputationArgs, DashboardPeriodOverPeriodComputationPtr and DashboardPeriodOverPeriodComputationPtrOutput values.
// You can construct a concrete instance of `DashboardPeriodOverPeriodComputationPtrInput` via:
//
//	        DashboardPeriodOverPeriodComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardPeriodOverPeriodComputationPtrInput interface {
	pulumi.Input

	ToDashboardPeriodOverPeriodComputationPtrOutput() DashboardPeriodOverPeriodComputationPtrOutput
	ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(context.Context) DashboardPeriodOverPeriodComputationPtrOutput
}

type dashboardPeriodOverPeriodComputationPtrType DashboardPeriodOverPeriodComputationArgs

func DashboardPeriodOverPeriodComputationPtr(v *DashboardPeriodOverPeriodComputationArgs) DashboardPeriodOverPeriodComputationPtrInput {
	return (*dashboardPeriodOverPeriodComputationPtrType)(v)
}

func (*dashboardPeriodOverPeriodComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPeriodOverPeriodComputation)(nil)).Elem()
}

func (i *dashboardPeriodOverPeriodComputationPtrType) ToDashboardPeriodOverPeriodComputationPtrOutput() DashboardPeriodOverPeriodComputationPtrOutput {
	return i.ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardPeriodOverPeriodComputationPtrType) ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodOverPeriodComputationPtrOutput)
}

type DashboardPeriodOverPeriodComputationOutput struct{ *pulumi.OutputState }

func (DashboardPeriodOverPeriodComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPeriodOverPeriodComputation)(nil)).Elem()
}

func (o DashboardPeriodOverPeriodComputationOutput) ToDashboardPeriodOverPeriodComputationOutput() DashboardPeriodOverPeriodComputationOutput {
	return o
}

func (o DashboardPeriodOverPeriodComputationOutput) ToDashboardPeriodOverPeriodComputationOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationOutput {
	return o
}

func (o DashboardPeriodOverPeriodComputationOutput) ToDashboardPeriodOverPeriodComputationPtrOutput() DashboardPeriodOverPeriodComputationPtrOutput {
	return o.ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (o DashboardPeriodOverPeriodComputationOutput) ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPeriodOverPeriodComputation) *DashboardPeriodOverPeriodComputation {
		return &v
	}).(DashboardPeriodOverPeriodComputationPtrOutput)
}

func (o DashboardPeriodOverPeriodComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPeriodOverPeriodComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardPeriodOverPeriodComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPeriodOverPeriodComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodOverPeriodComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardPeriodOverPeriodComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardPeriodOverPeriodComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardPeriodOverPeriodComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardPeriodOverPeriodComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPeriodOverPeriodComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPeriodOverPeriodComputation)(nil)).Elem()
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) ToDashboardPeriodOverPeriodComputationPtrOutput() DashboardPeriodOverPeriodComputationPtrOutput {
	return o
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) ToDashboardPeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodOverPeriodComputationPtrOutput {
	return o
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) Elem() DashboardPeriodOverPeriodComputationOutput {
	return o.ApplyT(func(v *DashboardPeriodOverPeriodComputation) DashboardPeriodOverPeriodComputation {
		if v != nil {
			return *v
		}
		var ret DashboardPeriodOverPeriodComputation
		return ret
	}).(DashboardPeriodOverPeriodComputationOutput)
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodOverPeriodComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardPeriodOverPeriodComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodOverPeriodComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardPeriodToDateComputation struct {
	ComputationId         string                    `pulumi:"computationId"`
	Name                  *string                   `pulumi:"name"`
	PeriodTimeGranularity *DashboardTimeGranularity `pulumi:"periodTimeGranularity"`
	Time                  DashboardDimensionField   `pulumi:"time"`
	Value                 *DashboardMeasureField    `pulumi:"value"`
}

// DashboardPeriodToDateComputationInput is an input type that accepts DashboardPeriodToDateComputationArgs and DashboardPeriodToDateComputationOutput values.
// You can construct a concrete instance of `DashboardPeriodToDateComputationInput` via:
//
//	DashboardPeriodToDateComputationArgs{...}
type DashboardPeriodToDateComputationInput interface {
	pulumi.Input

	ToDashboardPeriodToDateComputationOutput() DashboardPeriodToDateComputationOutput
	ToDashboardPeriodToDateComputationOutputWithContext(context.Context) DashboardPeriodToDateComputationOutput
}

type DashboardPeriodToDateComputationArgs struct {
	ComputationId         pulumi.StringInput               `pulumi:"computationId"`
	Name                  pulumi.StringPtrInput            `pulumi:"name"`
	PeriodTimeGranularity DashboardTimeGranularityPtrInput `pulumi:"periodTimeGranularity"`
	Time                  DashboardDimensionFieldInput     `pulumi:"time"`
	Value                 DashboardMeasureFieldPtrInput    `pulumi:"value"`
}

func (DashboardPeriodToDateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPeriodToDateComputation)(nil)).Elem()
}

func (i DashboardPeriodToDateComputationArgs) ToDashboardPeriodToDateComputationOutput() DashboardPeriodToDateComputationOutput {
	return i.ToDashboardPeriodToDateComputationOutputWithContext(context.Background())
}

func (i DashboardPeriodToDateComputationArgs) ToDashboardPeriodToDateComputationOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodToDateComputationOutput)
}

func (i DashboardPeriodToDateComputationArgs) ToDashboardPeriodToDateComputationPtrOutput() DashboardPeriodToDateComputationPtrOutput {
	return i.ToDashboardPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i DashboardPeriodToDateComputationArgs) ToDashboardPeriodToDateComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodToDateComputationOutput).ToDashboardPeriodToDateComputationPtrOutputWithContext(ctx)
}

// DashboardPeriodToDateComputationPtrInput is an input type that accepts DashboardPeriodToDateComputationArgs, DashboardPeriodToDateComputationPtr and DashboardPeriodToDateComputationPtrOutput values.
// You can construct a concrete instance of `DashboardPeriodToDateComputationPtrInput` via:
//
//	        DashboardPeriodToDateComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardPeriodToDateComputationPtrInput interface {
	pulumi.Input

	ToDashboardPeriodToDateComputationPtrOutput() DashboardPeriodToDateComputationPtrOutput
	ToDashboardPeriodToDateComputationPtrOutputWithContext(context.Context) DashboardPeriodToDateComputationPtrOutput
}

type dashboardPeriodToDateComputationPtrType DashboardPeriodToDateComputationArgs

func DashboardPeriodToDateComputationPtr(v *DashboardPeriodToDateComputationArgs) DashboardPeriodToDateComputationPtrInput {
	return (*dashboardPeriodToDateComputationPtrType)(v)
}

func (*dashboardPeriodToDateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPeriodToDateComputation)(nil)).Elem()
}

func (i *dashboardPeriodToDateComputationPtrType) ToDashboardPeriodToDateComputationPtrOutput() DashboardPeriodToDateComputationPtrOutput {
	return i.ToDashboardPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardPeriodToDateComputationPtrType) ToDashboardPeriodToDateComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPeriodToDateComputationPtrOutput)
}

type DashboardPeriodToDateComputationOutput struct{ *pulumi.OutputState }

func (DashboardPeriodToDateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPeriodToDateComputation)(nil)).Elem()
}

func (o DashboardPeriodToDateComputationOutput) ToDashboardPeriodToDateComputationOutput() DashboardPeriodToDateComputationOutput {
	return o
}

func (o DashboardPeriodToDateComputationOutput) ToDashboardPeriodToDateComputationOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationOutput {
	return o
}

func (o DashboardPeriodToDateComputationOutput) ToDashboardPeriodToDateComputationPtrOutput() DashboardPeriodToDateComputationPtrOutput {
	return o.ToDashboardPeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (o DashboardPeriodToDateComputationOutput) ToDashboardPeriodToDateComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPeriodToDateComputation) *DashboardPeriodToDateComputation {
		return &v
	}).(DashboardPeriodToDateComputationPtrOutput)
}

func (o DashboardPeriodToDateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPeriodToDateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardPeriodToDateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPeriodToDateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodToDateComputationOutput) PeriodTimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardPeriodToDateComputation) *DashboardTimeGranularity { return v.PeriodTimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardPeriodToDateComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardPeriodToDateComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardPeriodToDateComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardPeriodToDateComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardPeriodToDateComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPeriodToDateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPeriodToDateComputation)(nil)).Elem()
}

func (o DashboardPeriodToDateComputationPtrOutput) ToDashboardPeriodToDateComputationPtrOutput() DashboardPeriodToDateComputationPtrOutput {
	return o
}

func (o DashboardPeriodToDateComputationPtrOutput) ToDashboardPeriodToDateComputationPtrOutputWithContext(ctx context.Context) DashboardPeriodToDateComputationPtrOutput {
	return o
}

func (o DashboardPeriodToDateComputationPtrOutput) Elem() DashboardPeriodToDateComputationOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) DashboardPeriodToDateComputation {
		if v != nil {
			return *v
		}
		var ret DashboardPeriodToDateComputation
		return ret
	}).(DashboardPeriodToDateComputationOutput)
}

func (o DashboardPeriodToDateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodToDateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPeriodToDateComputationPtrOutput) PeriodTimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.PeriodTimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardPeriodToDateComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardPeriodToDateComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardPeriodToDateComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardPieChartAggregatedFieldWells struct {
	Category       []DashboardDimensionField `pulumi:"category"`
	SmallMultiples []DashboardDimensionField `pulumi:"smallMultiples"`
	Values         []DashboardMeasureField   `pulumi:"values"`
}

// DashboardPieChartAggregatedFieldWellsInput is an input type that accepts DashboardPieChartAggregatedFieldWellsArgs and DashboardPieChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardPieChartAggregatedFieldWellsInput` via:
//
//	DashboardPieChartAggregatedFieldWellsArgs{...}
type DashboardPieChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardPieChartAggregatedFieldWellsOutput() DashboardPieChartAggregatedFieldWellsOutput
	ToDashboardPieChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardPieChartAggregatedFieldWellsOutput
}

type DashboardPieChartAggregatedFieldWellsArgs struct {
	Category       DashboardDimensionFieldArrayInput `pulumi:"category"`
	SmallMultiples DashboardDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardPieChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardPieChartAggregatedFieldWellsArgs) ToDashboardPieChartAggregatedFieldWellsOutput() DashboardPieChartAggregatedFieldWellsOutput {
	return i.ToDashboardPieChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardPieChartAggregatedFieldWellsArgs) ToDashboardPieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartAggregatedFieldWellsOutput)
}

func (i DashboardPieChartAggregatedFieldWellsArgs) ToDashboardPieChartAggregatedFieldWellsPtrOutput() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardPieChartAggregatedFieldWellsArgs) ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartAggregatedFieldWellsOutput).ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardPieChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardPieChartAggregatedFieldWellsArgs, DashboardPieChartAggregatedFieldWellsPtr and DashboardPieChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardPieChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardPieChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardPieChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardPieChartAggregatedFieldWellsPtrOutput() DashboardPieChartAggregatedFieldWellsPtrOutput
	ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardPieChartAggregatedFieldWellsPtrOutput
}

type dashboardPieChartAggregatedFieldWellsPtrType DashboardPieChartAggregatedFieldWellsArgs

func DashboardPieChartAggregatedFieldWellsPtr(v *DashboardPieChartAggregatedFieldWellsArgs) DashboardPieChartAggregatedFieldWellsPtrInput {
	return (*dashboardPieChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardPieChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardPieChartAggregatedFieldWellsPtrType) ToDashboardPieChartAggregatedFieldWellsPtrOutput() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardPieChartAggregatedFieldWellsPtrType) ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartAggregatedFieldWellsPtrOutput)
}

type DashboardPieChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardPieChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardPieChartAggregatedFieldWellsOutput) ToDashboardPieChartAggregatedFieldWellsOutput() DashboardPieChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardPieChartAggregatedFieldWellsOutput) ToDashboardPieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardPieChartAggregatedFieldWellsOutput) ToDashboardPieChartAggregatedFieldWellsPtrOutput() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardPieChartAggregatedFieldWellsOutput) ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPieChartAggregatedFieldWells) *DashboardPieChartAggregatedFieldWells {
		return &v
	}).(DashboardPieChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardPieChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardPieChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPieChartAggregatedFieldWellsOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardPieChartAggregatedFieldWells) []DashboardDimensionField { return v.SmallMultiples }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPieChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardPieChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardPieChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPieChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) ToDashboardPieChartAggregatedFieldWellsPtrOutput() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) ToDashboardPieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) Elem() DashboardPieChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardPieChartAggregatedFieldWells) DashboardPieChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardPieChartAggregatedFieldWells
		return ret
	}).(DashboardPieChartAggregatedFieldWellsOutput)
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) SmallMultiples() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPieChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardPieChartConfiguration struct {
	CategoryLabelOptions         *DashboardChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults []DashboardContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *DashboardDataLabelOptions             `pulumi:"dataLabels"`
	DonutOptions                 *DashboardDonutOptions                 `pulumi:"donutOptions"`
	FieldWells                   *DashboardPieChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *DashboardLegendOptions                `pulumi:"legend"`
	SmallMultiplesOptions        *DashboardSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *DashboardPieChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *DashboardTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions            *DashboardChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *DashboardVisualPalette                `pulumi:"visualPalette"`
}

// DashboardPieChartConfigurationInput is an input type that accepts DashboardPieChartConfigurationArgs and DashboardPieChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardPieChartConfigurationInput` via:
//
//	DashboardPieChartConfigurationArgs{...}
type DashboardPieChartConfigurationInput interface {
	pulumi.Input

	ToDashboardPieChartConfigurationOutput() DashboardPieChartConfigurationOutput
	ToDashboardPieChartConfigurationOutputWithContext(context.Context) DashboardPieChartConfigurationOutput
}

type DashboardPieChartConfigurationArgs struct {
	CategoryLabelOptions         DashboardChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults DashboardContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   DashboardDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	DonutOptions                 DashboardDonutOptionsPtrInput                  `pulumi:"donutOptions"`
	FieldWells                   DashboardPieChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       DashboardLegendOptionsPtrInput                 `pulumi:"legend"`
	SmallMultiplesOptions        DashboardSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            DashboardPieChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      DashboardTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueLabelOptions            DashboardChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                DashboardVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (DashboardPieChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartConfiguration)(nil)).Elem()
}

func (i DashboardPieChartConfigurationArgs) ToDashboardPieChartConfigurationOutput() DashboardPieChartConfigurationOutput {
	return i.ToDashboardPieChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardPieChartConfigurationArgs) ToDashboardPieChartConfigurationOutputWithContext(ctx context.Context) DashboardPieChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartConfigurationOutput)
}

func (i DashboardPieChartConfigurationArgs) ToDashboardPieChartConfigurationPtrOutput() DashboardPieChartConfigurationPtrOutput {
	return i.ToDashboardPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPieChartConfigurationArgs) ToDashboardPieChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartConfigurationOutput).ToDashboardPieChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardPieChartConfigurationPtrInput is an input type that accepts DashboardPieChartConfigurationArgs, DashboardPieChartConfigurationPtr and DashboardPieChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPieChartConfigurationPtrInput` via:
//
//	        DashboardPieChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPieChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPieChartConfigurationPtrOutput() DashboardPieChartConfigurationPtrOutput
	ToDashboardPieChartConfigurationPtrOutputWithContext(context.Context) DashboardPieChartConfigurationPtrOutput
}

type dashboardPieChartConfigurationPtrType DashboardPieChartConfigurationArgs

func DashboardPieChartConfigurationPtr(v *DashboardPieChartConfigurationArgs) DashboardPieChartConfigurationPtrInput {
	return (*dashboardPieChartConfigurationPtrType)(v)
}

func (*dashboardPieChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartConfiguration)(nil)).Elem()
}

func (i *dashboardPieChartConfigurationPtrType) ToDashboardPieChartConfigurationPtrOutput() DashboardPieChartConfigurationPtrOutput {
	return i.ToDashboardPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPieChartConfigurationPtrType) ToDashboardPieChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartConfigurationPtrOutput)
}

type DashboardPieChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPieChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartConfiguration)(nil)).Elem()
}

func (o DashboardPieChartConfigurationOutput) ToDashboardPieChartConfigurationOutput() DashboardPieChartConfigurationOutput {
	return o
}

func (o DashboardPieChartConfigurationOutput) ToDashboardPieChartConfigurationOutputWithContext(ctx context.Context) DashboardPieChartConfigurationOutput {
	return o
}

func (o DashboardPieChartConfigurationOutput) ToDashboardPieChartConfigurationPtrOutput() DashboardPieChartConfigurationPtrOutput {
	return o.ToDashboardPieChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPieChartConfigurationOutput) ToDashboardPieChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPieChartConfiguration) *DashboardPieChartConfiguration {
		return &v
	}).(DashboardPieChartConfigurationPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardChartAxisLabelOptions { return v.CategoryLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) []DashboardContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardPieChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) DonutOptions() DashboardDonutOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardDonutOptions { return v.DonutOptions }).(DashboardDonutOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) FieldWells() DashboardPieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardPieChartFieldWells { return v.FieldWells }).(DashboardPieChartFieldWellsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardSmallMultiplesOptions { return v.SmallMultiplesOptions }).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) SortConfiguration() DashboardPieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardPieChartSortConfiguration { return v.SortConfiguration }).(DashboardPieChartSortConfigurationPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardChartAxisLabelOptions { return v.ValueLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardPieChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardPieChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPieChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartConfiguration)(nil)).Elem()
}

func (o DashboardPieChartConfigurationPtrOutput) ToDashboardPieChartConfigurationPtrOutput() DashboardPieChartConfigurationPtrOutput {
	return o
}

func (o DashboardPieChartConfigurationPtrOutput) ToDashboardPieChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartConfigurationPtrOutput {
	return o
}

func (o DashboardPieChartConfigurationPtrOutput) Elem() DashboardPieChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) DashboardPieChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPieChartConfiguration
		return ret
	}).(DashboardPieChartConfigurationOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) ContributionAnalysisDefaults() DashboardContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) []DashboardContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(DashboardContributionAnalysisDefaultArrayOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) DonutOptions() DashboardDonutOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardDonutOptions {
		if v == nil {
			return nil
		}
		return v.DonutOptions
	}).(DashboardDonutOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) FieldWells() DashboardPieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardPieChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardPieChartFieldWellsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) SmallMultiplesOptions() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) SortConfiguration() DashboardPieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardPieChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardPieChartSortConfigurationPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) ValueLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardPieChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardPieChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardPieChartFieldWells struct {
	PieChartAggregatedFieldWells *DashboardPieChartAggregatedFieldWells `pulumi:"pieChartAggregatedFieldWells"`
}

// DashboardPieChartFieldWellsInput is an input type that accepts DashboardPieChartFieldWellsArgs and DashboardPieChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardPieChartFieldWellsInput` via:
//
//	DashboardPieChartFieldWellsArgs{...}
type DashboardPieChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardPieChartFieldWellsOutput() DashboardPieChartFieldWellsOutput
	ToDashboardPieChartFieldWellsOutputWithContext(context.Context) DashboardPieChartFieldWellsOutput
}

type DashboardPieChartFieldWellsArgs struct {
	PieChartAggregatedFieldWells DashboardPieChartAggregatedFieldWellsPtrInput `pulumi:"pieChartAggregatedFieldWells"`
}

func (DashboardPieChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartFieldWells)(nil)).Elem()
}

func (i DashboardPieChartFieldWellsArgs) ToDashboardPieChartFieldWellsOutput() DashboardPieChartFieldWellsOutput {
	return i.ToDashboardPieChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardPieChartFieldWellsArgs) ToDashboardPieChartFieldWellsOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartFieldWellsOutput)
}

func (i DashboardPieChartFieldWellsArgs) ToDashboardPieChartFieldWellsPtrOutput() DashboardPieChartFieldWellsPtrOutput {
	return i.ToDashboardPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardPieChartFieldWellsArgs) ToDashboardPieChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartFieldWellsOutput).ToDashboardPieChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardPieChartFieldWellsPtrInput is an input type that accepts DashboardPieChartFieldWellsArgs, DashboardPieChartFieldWellsPtr and DashboardPieChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardPieChartFieldWellsPtrInput` via:
//
//	        DashboardPieChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardPieChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardPieChartFieldWellsPtrOutput() DashboardPieChartFieldWellsPtrOutput
	ToDashboardPieChartFieldWellsPtrOutputWithContext(context.Context) DashboardPieChartFieldWellsPtrOutput
}

type dashboardPieChartFieldWellsPtrType DashboardPieChartFieldWellsArgs

func DashboardPieChartFieldWellsPtr(v *DashboardPieChartFieldWellsArgs) DashboardPieChartFieldWellsPtrInput {
	return (*dashboardPieChartFieldWellsPtrType)(v)
}

func (*dashboardPieChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartFieldWells)(nil)).Elem()
}

func (i *dashboardPieChartFieldWellsPtrType) ToDashboardPieChartFieldWellsPtrOutput() DashboardPieChartFieldWellsPtrOutput {
	return i.ToDashboardPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardPieChartFieldWellsPtrType) ToDashboardPieChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartFieldWellsPtrOutput)
}

type DashboardPieChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardPieChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartFieldWells)(nil)).Elem()
}

func (o DashboardPieChartFieldWellsOutput) ToDashboardPieChartFieldWellsOutput() DashboardPieChartFieldWellsOutput {
	return o
}

func (o DashboardPieChartFieldWellsOutput) ToDashboardPieChartFieldWellsOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsOutput {
	return o
}

func (o DashboardPieChartFieldWellsOutput) ToDashboardPieChartFieldWellsPtrOutput() DashboardPieChartFieldWellsPtrOutput {
	return o.ToDashboardPieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardPieChartFieldWellsOutput) ToDashboardPieChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPieChartFieldWells) *DashboardPieChartFieldWells {
		return &v
	}).(DashboardPieChartFieldWellsPtrOutput)
}

func (o DashboardPieChartFieldWellsOutput) PieChartAggregatedFieldWells() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartFieldWells) *DashboardPieChartAggregatedFieldWells {
		return v.PieChartAggregatedFieldWells
	}).(DashboardPieChartAggregatedFieldWellsPtrOutput)
}

type DashboardPieChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPieChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartFieldWells)(nil)).Elem()
}

func (o DashboardPieChartFieldWellsPtrOutput) ToDashboardPieChartFieldWellsPtrOutput() DashboardPieChartFieldWellsPtrOutput {
	return o
}

func (o DashboardPieChartFieldWellsPtrOutput) ToDashboardPieChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPieChartFieldWellsPtrOutput {
	return o
}

func (o DashboardPieChartFieldWellsPtrOutput) Elem() DashboardPieChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardPieChartFieldWells) DashboardPieChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardPieChartFieldWells
		return ret
	}).(DashboardPieChartFieldWellsOutput)
}

func (o DashboardPieChartFieldWellsPtrOutput) PieChartAggregatedFieldWells() DashboardPieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartFieldWells) *DashboardPieChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PieChartAggregatedFieldWells
	}).(DashboardPieChartAggregatedFieldWellsPtrOutput)
}

type DashboardPieChartSortConfiguration struct {
	CategoryItemsLimit               *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []DashboardFieldSortOptions       `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration *DashboardItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []DashboardFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// DashboardPieChartSortConfigurationInput is an input type that accepts DashboardPieChartSortConfigurationArgs and DashboardPieChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardPieChartSortConfigurationInput` via:
//
//	DashboardPieChartSortConfigurationArgs{...}
type DashboardPieChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardPieChartSortConfigurationOutput() DashboardPieChartSortConfigurationOutput
	ToDashboardPieChartSortConfigurationOutputWithContext(context.Context) DashboardPieChartSortConfigurationOutput
}

type DashboardPieChartSortConfigurationArgs struct {
	CategoryItemsLimit               DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration DashboardItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               DashboardFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (DashboardPieChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartSortConfiguration)(nil)).Elem()
}

func (i DashboardPieChartSortConfigurationArgs) ToDashboardPieChartSortConfigurationOutput() DashboardPieChartSortConfigurationOutput {
	return i.ToDashboardPieChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardPieChartSortConfigurationArgs) ToDashboardPieChartSortConfigurationOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartSortConfigurationOutput)
}

func (i DashboardPieChartSortConfigurationArgs) ToDashboardPieChartSortConfigurationPtrOutput() DashboardPieChartSortConfigurationPtrOutput {
	return i.ToDashboardPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPieChartSortConfigurationArgs) ToDashboardPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartSortConfigurationOutput).ToDashboardPieChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardPieChartSortConfigurationPtrInput is an input type that accepts DashboardPieChartSortConfigurationArgs, DashboardPieChartSortConfigurationPtr and DashboardPieChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPieChartSortConfigurationPtrInput` via:
//
//	        DashboardPieChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPieChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPieChartSortConfigurationPtrOutput() DashboardPieChartSortConfigurationPtrOutput
	ToDashboardPieChartSortConfigurationPtrOutputWithContext(context.Context) DashboardPieChartSortConfigurationPtrOutput
}

type dashboardPieChartSortConfigurationPtrType DashboardPieChartSortConfigurationArgs

func DashboardPieChartSortConfigurationPtr(v *DashboardPieChartSortConfigurationArgs) DashboardPieChartSortConfigurationPtrInput {
	return (*dashboardPieChartSortConfigurationPtrType)(v)
}

func (*dashboardPieChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardPieChartSortConfigurationPtrType) ToDashboardPieChartSortConfigurationPtrOutput() DashboardPieChartSortConfigurationPtrOutput {
	return i.ToDashboardPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPieChartSortConfigurationPtrType) ToDashboardPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartSortConfigurationPtrOutput)
}

type DashboardPieChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPieChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartSortConfiguration)(nil)).Elem()
}

func (o DashboardPieChartSortConfigurationOutput) ToDashboardPieChartSortConfigurationOutput() DashboardPieChartSortConfigurationOutput {
	return o
}

func (o DashboardPieChartSortConfigurationOutput) ToDashboardPieChartSortConfigurationOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationOutput {
	return o
}

func (o DashboardPieChartSortConfigurationOutput) ToDashboardPieChartSortConfigurationPtrOutput() DashboardPieChartSortConfigurationPtrOutput {
	return o.ToDashboardPieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPieChartSortConfigurationOutput) ToDashboardPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPieChartSortConfiguration) *DashboardPieChartSortConfiguration {
		return &v
	}).(DashboardPieChartSortConfigurationPtrOutput)
}

func (o DashboardPieChartSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPieChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardPieChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardPieChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardPieChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPieChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardPieChartSortConfigurationOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardPieChartSortConfiguration) []DashboardFieldSortOptions { return v.SmallMultiplesSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardPieChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPieChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartSortConfiguration)(nil)).Elem()
}

func (o DashboardPieChartSortConfigurationPtrOutput) ToDashboardPieChartSortConfigurationPtrOutput() DashboardPieChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardPieChartSortConfigurationPtrOutput) ToDashboardPieChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPieChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardPieChartSortConfigurationPtrOutput) Elem() DashboardPieChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardPieChartSortConfiguration) DashboardPieChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPieChartSortConfiguration
		return ret
	}).(DashboardPieChartSortConfigurationOutput)
}

func (o DashboardPieChartSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardPieChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardPieChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardPieChartSortConfigurationPtrOutput) SmallMultiplesSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardPieChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardPieChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardPieChartVisualInput is an input type that accepts DashboardPieChartVisualArgs and DashboardPieChartVisualOutput values.
// You can construct a concrete instance of `DashboardPieChartVisualInput` via:
//
//	DashboardPieChartVisualArgs{...}
type DashboardPieChartVisualInput interface {
	pulumi.Input

	ToDashboardPieChartVisualOutput() DashboardPieChartVisualOutput
	ToDashboardPieChartVisualOutputWithContext(context.Context) DashboardPieChartVisualOutput
}

type DashboardPieChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardPieChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardPieChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartVisual)(nil)).Elem()
}

func (i DashboardPieChartVisualArgs) ToDashboardPieChartVisualOutput() DashboardPieChartVisualOutput {
	return i.ToDashboardPieChartVisualOutputWithContext(context.Background())
}

func (i DashboardPieChartVisualArgs) ToDashboardPieChartVisualOutputWithContext(ctx context.Context) DashboardPieChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartVisualOutput)
}

func (i DashboardPieChartVisualArgs) ToDashboardPieChartVisualPtrOutput() DashboardPieChartVisualPtrOutput {
	return i.ToDashboardPieChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardPieChartVisualArgs) ToDashboardPieChartVisualPtrOutputWithContext(ctx context.Context) DashboardPieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartVisualOutput).ToDashboardPieChartVisualPtrOutputWithContext(ctx)
}

// DashboardPieChartVisualPtrInput is an input type that accepts DashboardPieChartVisualArgs, DashboardPieChartVisualPtr and DashboardPieChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardPieChartVisualPtrInput` via:
//
//	        DashboardPieChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardPieChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardPieChartVisualPtrOutput() DashboardPieChartVisualPtrOutput
	ToDashboardPieChartVisualPtrOutputWithContext(context.Context) DashboardPieChartVisualPtrOutput
}

type dashboardPieChartVisualPtrType DashboardPieChartVisualArgs

func DashboardPieChartVisualPtr(v *DashboardPieChartVisualArgs) DashboardPieChartVisualPtrInput {
	return (*dashboardPieChartVisualPtrType)(v)
}

func (*dashboardPieChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartVisual)(nil)).Elem()
}

func (i *dashboardPieChartVisualPtrType) ToDashboardPieChartVisualPtrOutput() DashboardPieChartVisualPtrOutput {
	return i.ToDashboardPieChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardPieChartVisualPtrType) ToDashboardPieChartVisualPtrOutputWithContext(ctx context.Context) DashboardPieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPieChartVisualPtrOutput)
}

type DashboardPieChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardPieChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPieChartVisual)(nil)).Elem()
}

func (o DashboardPieChartVisualOutput) ToDashboardPieChartVisualOutput() DashboardPieChartVisualOutput {
	return o
}

func (o DashboardPieChartVisualOutput) ToDashboardPieChartVisualOutputWithContext(ctx context.Context) DashboardPieChartVisualOutput {
	return o
}

func (o DashboardPieChartVisualOutput) ToDashboardPieChartVisualPtrOutput() DashboardPieChartVisualPtrOutput {
	return o.ToDashboardPieChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardPieChartVisualOutput) ToDashboardPieChartVisualPtrOutputWithContext(ctx context.Context) DashboardPieChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPieChartVisual) *DashboardPieChartVisual {
		return &v
	}).(DashboardPieChartVisualPtrOutput)
}

func (o DashboardPieChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardPieChartVisualOutput) ChartConfiguration() DashboardPieChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) *DashboardPieChartConfiguration { return v.ChartConfiguration }).(DashboardPieChartConfigurationPtrOutput)
}

func (o DashboardPieChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardPieChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardPieChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardPieChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPieChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardPieChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardPieChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPieChartVisual)(nil)).Elem()
}

func (o DashboardPieChartVisualPtrOutput) ToDashboardPieChartVisualPtrOutput() DashboardPieChartVisualPtrOutput {
	return o
}

func (o DashboardPieChartVisualPtrOutput) ToDashboardPieChartVisualPtrOutputWithContext(ctx context.Context) DashboardPieChartVisualPtrOutput {
	return o
}

func (o DashboardPieChartVisualPtrOutput) Elem() DashboardPieChartVisualOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) DashboardPieChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardPieChartVisual
		return ret
	}).(DashboardPieChartVisualOutput)
}

func (o DashboardPieChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardPieChartVisualPtrOutput) ChartConfiguration() DashboardPieChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) *DashboardPieChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardPieChartConfigurationPtrOutput)
}

func (o DashboardPieChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardPieChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardPieChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardPieChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPieChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotFieldSortOptions struct {
	FieldId string                    `pulumi:"fieldId"`
	SortBy  DashboardPivotTableSortBy `pulumi:"sortBy"`
}

// DashboardPivotFieldSortOptionsInput is an input type that accepts DashboardPivotFieldSortOptionsArgs and DashboardPivotFieldSortOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotFieldSortOptionsInput` via:
//
//	DashboardPivotFieldSortOptionsArgs{...}
type DashboardPivotFieldSortOptionsInput interface {
	pulumi.Input

	ToDashboardPivotFieldSortOptionsOutput() DashboardPivotFieldSortOptionsOutput
	ToDashboardPivotFieldSortOptionsOutputWithContext(context.Context) DashboardPivotFieldSortOptionsOutput
}

type DashboardPivotFieldSortOptionsArgs struct {
	FieldId pulumi.StringInput             `pulumi:"fieldId"`
	SortBy  DashboardPivotTableSortByInput `pulumi:"sortBy"`
}

func (DashboardPivotFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotFieldSortOptions)(nil)).Elem()
}

func (i DashboardPivotFieldSortOptionsArgs) ToDashboardPivotFieldSortOptionsOutput() DashboardPivotFieldSortOptionsOutput {
	return i.ToDashboardPivotFieldSortOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotFieldSortOptionsArgs) ToDashboardPivotFieldSortOptionsOutputWithContext(ctx context.Context) DashboardPivotFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotFieldSortOptionsOutput)
}

// DashboardPivotFieldSortOptionsArrayInput is an input type that accepts DashboardPivotFieldSortOptionsArray and DashboardPivotFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `DashboardPivotFieldSortOptionsArrayInput` via:
//
//	DashboardPivotFieldSortOptionsArray{ DashboardPivotFieldSortOptionsArgs{...} }
type DashboardPivotFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToDashboardPivotFieldSortOptionsArrayOutput() DashboardPivotFieldSortOptionsArrayOutput
	ToDashboardPivotFieldSortOptionsArrayOutputWithContext(context.Context) DashboardPivotFieldSortOptionsArrayOutput
}

type DashboardPivotFieldSortOptionsArray []DashboardPivotFieldSortOptionsInput

func (DashboardPivotFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotFieldSortOptions)(nil)).Elem()
}

func (i DashboardPivotFieldSortOptionsArray) ToDashboardPivotFieldSortOptionsArrayOutput() DashboardPivotFieldSortOptionsArrayOutput {
	return i.ToDashboardPivotFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i DashboardPivotFieldSortOptionsArray) ToDashboardPivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) DashboardPivotFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotFieldSortOptionsArrayOutput)
}

type DashboardPivotFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotFieldSortOptions)(nil)).Elem()
}

func (o DashboardPivotFieldSortOptionsOutput) ToDashboardPivotFieldSortOptionsOutput() DashboardPivotFieldSortOptionsOutput {
	return o
}

func (o DashboardPivotFieldSortOptionsOutput) ToDashboardPivotFieldSortOptionsOutputWithContext(ctx context.Context) DashboardPivotFieldSortOptionsOutput {
	return o
}

func (o DashboardPivotFieldSortOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPivotFieldSortOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardPivotFieldSortOptionsOutput) SortBy() DashboardPivotTableSortByOutput {
	return o.ApplyT(func(v DashboardPivotFieldSortOptions) DashboardPivotTableSortBy { return v.SortBy }).(DashboardPivotTableSortByOutput)
}

type DashboardPivotFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (DashboardPivotFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotFieldSortOptions)(nil)).Elem()
}

func (o DashboardPivotFieldSortOptionsArrayOutput) ToDashboardPivotFieldSortOptionsArrayOutput() DashboardPivotFieldSortOptionsArrayOutput {
	return o
}

func (o DashboardPivotFieldSortOptionsArrayOutput) ToDashboardPivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) DashboardPivotFieldSortOptionsArrayOutput {
	return o
}

func (o DashboardPivotFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) DashboardPivotFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPivotFieldSortOptions {
		return vs[0].([]DashboardPivotFieldSortOptions)[vs[1].(int)]
	}).(DashboardPivotFieldSortOptionsOutput)
}

type DashboardPivotTableAggregatedFieldWells struct {
	Columns []DashboardDimensionField `pulumi:"columns"`
	Rows    []DashboardDimensionField `pulumi:"rows"`
	Values  []DashboardMeasureField   `pulumi:"values"`
}

// DashboardPivotTableAggregatedFieldWellsInput is an input type that accepts DashboardPivotTableAggregatedFieldWellsArgs and DashboardPivotTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardPivotTableAggregatedFieldWellsInput` via:
//
//	DashboardPivotTableAggregatedFieldWellsArgs{...}
type DashboardPivotTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardPivotTableAggregatedFieldWellsOutput() DashboardPivotTableAggregatedFieldWellsOutput
	ToDashboardPivotTableAggregatedFieldWellsOutputWithContext(context.Context) DashboardPivotTableAggregatedFieldWellsOutput
}

type DashboardPivotTableAggregatedFieldWellsArgs struct {
	Columns DashboardDimensionFieldArrayInput `pulumi:"columns"`
	Rows    DashboardDimensionFieldArrayInput `pulumi:"rows"`
	Values  DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardPivotTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardPivotTableAggregatedFieldWellsArgs) ToDashboardPivotTableAggregatedFieldWellsOutput() DashboardPivotTableAggregatedFieldWellsOutput {
	return i.ToDashboardPivotTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardPivotTableAggregatedFieldWellsArgs) ToDashboardPivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableAggregatedFieldWellsOutput)
}

func (i DashboardPivotTableAggregatedFieldWellsArgs) ToDashboardPivotTableAggregatedFieldWellsPtrOutput() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return i.ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableAggregatedFieldWellsArgs) ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableAggregatedFieldWellsOutput).ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardPivotTableAggregatedFieldWellsPtrInput is an input type that accepts DashboardPivotTableAggregatedFieldWellsArgs, DashboardPivotTableAggregatedFieldWellsPtr and DashboardPivotTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableAggregatedFieldWellsPtrInput` via:
//
//	        DashboardPivotTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableAggregatedFieldWellsPtrOutput() DashboardPivotTableAggregatedFieldWellsPtrOutput
	ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardPivotTableAggregatedFieldWellsPtrOutput
}

type dashboardPivotTableAggregatedFieldWellsPtrType DashboardPivotTableAggregatedFieldWellsArgs

func DashboardPivotTableAggregatedFieldWellsPtr(v *DashboardPivotTableAggregatedFieldWellsArgs) DashboardPivotTableAggregatedFieldWellsPtrInput {
	return (*dashboardPivotTableAggregatedFieldWellsPtrType)(v)
}

func (*dashboardPivotTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardPivotTableAggregatedFieldWellsPtrType) ToDashboardPivotTableAggregatedFieldWellsPtrOutput() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return i.ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableAggregatedFieldWellsPtrType) ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableAggregatedFieldWellsPtrOutput)
}

type DashboardPivotTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) ToDashboardPivotTableAggregatedFieldWellsOutput() DashboardPivotTableAggregatedFieldWellsOutput {
	return o
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) ToDashboardPivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsOutput {
	return o
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) ToDashboardPivotTableAggregatedFieldWellsPtrOutput() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o.ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableAggregatedFieldWells) *DashboardPivotTableAggregatedFieldWells {
		return &v
	}).(DashboardPivotTableAggregatedFieldWellsPtrOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) Columns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableAggregatedFieldWells) []DashboardDimensionField { return v.Columns }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) Rows() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableAggregatedFieldWells) []DashboardDimensionField { return v.Rows }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardPivotTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) ToDashboardPivotTableAggregatedFieldWellsPtrOutput() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) ToDashboardPivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) Elem() DashboardPivotTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardPivotTableAggregatedFieldWells) DashboardPivotTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableAggregatedFieldWells
		return ret
	}).(DashboardPivotTableAggregatedFieldWellsOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) Columns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) Rows() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardPivotTableAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardPivotTableCellConditionalFormatting struct {
	FieldId    string                                         `pulumi:"fieldId"`
	Scope      *DashboardPivotTableConditionalFormattingScope `pulumi:"scope"`
	TextFormat *DashboardTextConditionalFormat                `pulumi:"textFormat"`
}

// DashboardPivotTableCellConditionalFormattingInput is an input type that accepts DashboardPivotTableCellConditionalFormattingArgs and DashboardPivotTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardPivotTableCellConditionalFormattingInput` via:
//
//	DashboardPivotTableCellConditionalFormattingArgs{...}
type DashboardPivotTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardPivotTableCellConditionalFormattingOutput() DashboardPivotTableCellConditionalFormattingOutput
	ToDashboardPivotTableCellConditionalFormattingOutputWithContext(context.Context) DashboardPivotTableCellConditionalFormattingOutput
}

type DashboardPivotTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                                    `pulumi:"fieldId"`
	Scope      DashboardPivotTableConditionalFormattingScopePtrInput `pulumi:"scope"`
	TextFormat DashboardTextConditionalFormatPtrInput                `pulumi:"textFormat"`
}

func (DashboardPivotTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i DashboardPivotTableCellConditionalFormattingArgs) ToDashboardPivotTableCellConditionalFormattingOutput() DashboardPivotTableCellConditionalFormattingOutput {
	return i.ToDashboardPivotTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardPivotTableCellConditionalFormattingArgs) ToDashboardPivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableCellConditionalFormattingOutput)
}

func (i DashboardPivotTableCellConditionalFormattingArgs) ToDashboardPivotTableCellConditionalFormattingPtrOutput() DashboardPivotTableCellConditionalFormattingPtrOutput {
	return i.ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableCellConditionalFormattingArgs) ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableCellConditionalFormattingOutput).ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardPivotTableCellConditionalFormattingPtrInput is an input type that accepts DashboardPivotTableCellConditionalFormattingArgs, DashboardPivotTableCellConditionalFormattingPtr and DashboardPivotTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableCellConditionalFormattingPtrInput` via:
//
//	        DashboardPivotTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableCellConditionalFormattingPtrOutput() DashboardPivotTableCellConditionalFormattingPtrOutput
	ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(context.Context) DashboardPivotTableCellConditionalFormattingPtrOutput
}

type dashboardPivotTableCellConditionalFormattingPtrType DashboardPivotTableCellConditionalFormattingArgs

func DashboardPivotTableCellConditionalFormattingPtr(v *DashboardPivotTableCellConditionalFormattingArgs) DashboardPivotTableCellConditionalFormattingPtrInput {
	return (*dashboardPivotTableCellConditionalFormattingPtrType)(v)
}

func (*dashboardPivotTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i *dashboardPivotTableCellConditionalFormattingPtrType) ToDashboardPivotTableCellConditionalFormattingPtrOutput() DashboardPivotTableCellConditionalFormattingPtrOutput {
	return i.ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableCellConditionalFormattingPtrType) ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableCellConditionalFormattingPtrOutput)
}

type DashboardPivotTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o DashboardPivotTableCellConditionalFormattingOutput) ToDashboardPivotTableCellConditionalFormattingOutput() DashboardPivotTableCellConditionalFormattingOutput {
	return o
}

func (o DashboardPivotTableCellConditionalFormattingOutput) ToDashboardPivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingOutput {
	return o
}

func (o DashboardPivotTableCellConditionalFormattingOutput) ToDashboardPivotTableCellConditionalFormattingPtrOutput() DashboardPivotTableCellConditionalFormattingPtrOutput {
	return o.ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableCellConditionalFormattingOutput) ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableCellConditionalFormatting) *DashboardPivotTableCellConditionalFormatting {
		return &v
	}).(DashboardPivotTableCellConditionalFormattingPtrOutput)
}

func (o DashboardPivotTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPivotTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardPivotTableCellConditionalFormattingOutput) Scope() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableCellConditionalFormatting) *DashboardPivotTableConditionalFormattingScope {
		return v.Scope
	}).(DashboardPivotTableConditionalFormattingScopePtrOutput)
}

func (o DashboardPivotTableCellConditionalFormattingOutput) TextFormat() DashboardTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableCellConditionalFormatting) *DashboardTextConditionalFormat {
		return v.TextFormat
	}).(DashboardTextConditionalFormatPtrOutput)
}

type DashboardPivotTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) ToDashboardPivotTableCellConditionalFormattingPtrOutput() DashboardPivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) ToDashboardPivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) Elem() DashboardPivotTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardPivotTableCellConditionalFormatting) DashboardPivotTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableCellConditionalFormatting
		return ret
	}).(DashboardPivotTableCellConditionalFormattingOutput)
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) Scope() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableCellConditionalFormatting) *DashboardPivotTableConditionalFormattingScope {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(DashboardPivotTableConditionalFormattingScopePtrOutput)
}

func (o DashboardPivotTableCellConditionalFormattingPtrOutput) TextFormat() DashboardTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableCellConditionalFormatting) *DashboardTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(DashboardTextConditionalFormatPtrOutput)
}

type DashboardPivotTableConditionalFormatting struct {
	ConditionalFormattingOptions []DashboardPivotTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// DashboardPivotTableConditionalFormattingInput is an input type that accepts DashboardPivotTableConditionalFormattingArgs and DashboardPivotTableConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingInput` via:
//
//	DashboardPivotTableConditionalFormattingArgs{...}
type DashboardPivotTableConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingOutput() DashboardPivotTableConditionalFormattingOutput
	ToDashboardPivotTableConditionalFormattingOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingOutput
}

type DashboardPivotTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions DashboardPivotTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (DashboardPivotTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormatting)(nil)).Elem()
}

func (i DashboardPivotTableConditionalFormattingArgs) ToDashboardPivotTableConditionalFormattingOutput() DashboardPivotTableConditionalFormattingOutput {
	return i.ToDashboardPivotTableConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingArgs) ToDashboardPivotTableConditionalFormattingOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingOutput)
}

func (i DashboardPivotTableConditionalFormattingArgs) ToDashboardPivotTableConditionalFormattingPtrOutput() DashboardPivotTableConditionalFormattingPtrOutput {
	return i.ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingArgs) ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingOutput).ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardPivotTableConditionalFormattingPtrInput is an input type that accepts DashboardPivotTableConditionalFormattingArgs, DashboardPivotTableConditionalFormattingPtr and DashboardPivotTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingPtrInput` via:
//
//	        DashboardPivotTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingPtrOutput() DashboardPivotTableConditionalFormattingPtrOutput
	ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingPtrOutput
}

type dashboardPivotTableConditionalFormattingPtrType DashboardPivotTableConditionalFormattingArgs

func DashboardPivotTableConditionalFormattingPtr(v *DashboardPivotTableConditionalFormattingArgs) DashboardPivotTableConditionalFormattingPtrInput {
	return (*dashboardPivotTableConditionalFormattingPtrType)(v)
}

func (*dashboardPivotTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConditionalFormatting)(nil)).Elem()
}

func (i *dashboardPivotTableConditionalFormattingPtrType) ToDashboardPivotTableConditionalFormattingPtrOutput() DashboardPivotTableConditionalFormattingPtrOutput {
	return i.ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableConditionalFormattingPtrType) ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingPtrOutput)
}

type DashboardPivotTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormatting)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingOutput) ToDashboardPivotTableConditionalFormattingOutput() DashboardPivotTableConditionalFormattingOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOutput) ToDashboardPivotTableConditionalFormattingOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOutput) ToDashboardPivotTableConditionalFormattingPtrOutput() DashboardPivotTableConditionalFormattingPtrOutput {
	return o.ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingOutput) ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableConditionalFormatting) *DashboardPivotTableConditionalFormatting {
		return &v
	}).(DashboardPivotTableConditionalFormattingPtrOutput)
}

func (o DashboardPivotTableConditionalFormattingOutput) ConditionalFormattingOptions() DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableConditionalFormatting) []DashboardPivotTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(DashboardPivotTableConditionalFormattingOptionArrayOutput)
}

type DashboardPivotTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConditionalFormatting)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingPtrOutput) ToDashboardPivotTableConditionalFormattingPtrOutput() DashboardPivotTableConditionalFormattingPtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingPtrOutput) ToDashboardPivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingPtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingPtrOutput) Elem() DashboardPivotTableConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardPivotTableConditionalFormatting) DashboardPivotTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableConditionalFormatting
		return ret
	}).(DashboardPivotTableConditionalFormattingOutput)
}

func (o DashboardPivotTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableConditionalFormatting) []DashboardPivotTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(DashboardPivotTableConditionalFormattingOptionArrayOutput)
}

type DashboardPivotTableConditionalFormattingOption struct {
	Cell *DashboardPivotTableCellConditionalFormatting `pulumi:"cell"`
}

// DashboardPivotTableConditionalFormattingOptionInput is an input type that accepts DashboardPivotTableConditionalFormattingOptionArgs and DashboardPivotTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingOptionInput` via:
//
//	DashboardPivotTableConditionalFormattingOptionArgs{...}
type DashboardPivotTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingOptionOutput() DashboardPivotTableConditionalFormattingOptionOutput
	ToDashboardPivotTableConditionalFormattingOptionOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingOptionOutput
}

type DashboardPivotTableConditionalFormattingOptionArgs struct {
	Cell DashboardPivotTableCellConditionalFormattingPtrInput `pulumi:"cell"`
}

func (DashboardPivotTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardPivotTableConditionalFormattingOptionArgs) ToDashboardPivotTableConditionalFormattingOptionOutput() DashboardPivotTableConditionalFormattingOptionOutput {
	return i.ToDashboardPivotTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingOptionArgs) ToDashboardPivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingOptionOutput)
}

// DashboardPivotTableConditionalFormattingOptionArrayInput is an input type that accepts DashboardPivotTableConditionalFormattingOptionArray and DashboardPivotTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingOptionArrayInput` via:
//
//	DashboardPivotTableConditionalFormattingOptionArray{ DashboardPivotTableConditionalFormattingOptionArgs{...} }
type DashboardPivotTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingOptionArrayOutput() DashboardPivotTableConditionalFormattingOptionArrayOutput
	ToDashboardPivotTableConditionalFormattingOptionArrayOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingOptionArrayOutput
}

type DashboardPivotTableConditionalFormattingOptionArray []DashboardPivotTableConditionalFormattingOptionInput

func (DashboardPivotTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardPivotTableConditionalFormattingOptionArray) ToDashboardPivotTableConditionalFormattingOptionArrayOutput() DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return i.ToDashboardPivotTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingOptionArray) ToDashboardPivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingOptionArrayOutput)
}

type DashboardPivotTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingOptionOutput) ToDashboardPivotTableConditionalFormattingOptionOutput() DashboardPivotTableConditionalFormattingOptionOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOptionOutput) ToDashboardPivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOptionOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOptionOutput) Cell() DashboardPivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConditionalFormattingOption) *DashboardPivotTableCellConditionalFormatting {
		return v.Cell
	}).(DashboardPivotTableCellConditionalFormattingPtrOutput)
}

type DashboardPivotTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingOptionArrayOutput) ToDashboardPivotTableConditionalFormattingOptionArrayOutput() DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOptionArrayOutput) ToDashboardPivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) DashboardPivotTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPivotTableConditionalFormattingOption {
		return vs[0].([]DashboardPivotTableConditionalFormattingOption)[vs[1].(int)]
	}).(DashboardPivotTableConditionalFormattingOptionOutput)
}

type DashboardPivotTableConditionalFormattingScope struct {
	Role *DashboardPivotTableConditionalFormattingScopeRole `pulumi:"role"`
}

// DashboardPivotTableConditionalFormattingScopeInput is an input type that accepts DashboardPivotTableConditionalFormattingScopeArgs and DashboardPivotTableConditionalFormattingScopeOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingScopeInput` via:
//
//	DashboardPivotTableConditionalFormattingScopeArgs{...}
type DashboardPivotTableConditionalFormattingScopeInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingScopeOutput() DashboardPivotTableConditionalFormattingScopeOutput
	ToDashboardPivotTableConditionalFormattingScopeOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingScopeOutput
}

type DashboardPivotTableConditionalFormattingScopeArgs struct {
	Role DashboardPivotTableConditionalFormattingScopeRolePtrInput `pulumi:"role"`
}

func (DashboardPivotTableConditionalFormattingScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i DashboardPivotTableConditionalFormattingScopeArgs) ToDashboardPivotTableConditionalFormattingScopeOutput() DashboardPivotTableConditionalFormattingScopeOutput {
	return i.ToDashboardPivotTableConditionalFormattingScopeOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingScopeArgs) ToDashboardPivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingScopeOutput)
}

func (i DashboardPivotTableConditionalFormattingScopeArgs) ToDashboardPivotTableConditionalFormattingScopePtrOutput() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return i.ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableConditionalFormattingScopeArgs) ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingScopeOutput).ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(ctx)
}

// DashboardPivotTableConditionalFormattingScopePtrInput is an input type that accepts DashboardPivotTableConditionalFormattingScopeArgs, DashboardPivotTableConditionalFormattingScopePtr and DashboardPivotTableConditionalFormattingScopePtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableConditionalFormattingScopePtrInput` via:
//
//	        DashboardPivotTableConditionalFormattingScopeArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableConditionalFormattingScopePtrInput interface {
	pulumi.Input

	ToDashboardPivotTableConditionalFormattingScopePtrOutput() DashboardPivotTableConditionalFormattingScopePtrOutput
	ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(context.Context) DashboardPivotTableConditionalFormattingScopePtrOutput
}

type dashboardPivotTableConditionalFormattingScopePtrType DashboardPivotTableConditionalFormattingScopeArgs

func DashboardPivotTableConditionalFormattingScopePtr(v *DashboardPivotTableConditionalFormattingScopeArgs) DashboardPivotTableConditionalFormattingScopePtrInput {
	return (*dashboardPivotTableConditionalFormattingScopePtrType)(v)
}

func (*dashboardPivotTableConditionalFormattingScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i *dashboardPivotTableConditionalFormattingScopePtrType) ToDashboardPivotTableConditionalFormattingScopePtrOutput() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return i.ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableConditionalFormattingScopePtrType) ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConditionalFormattingScopePtrOutput)
}

type DashboardPivotTableConditionalFormattingScopeOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingScopeOutput) ToDashboardPivotTableConditionalFormattingScopeOutput() DashboardPivotTableConditionalFormattingScopeOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeOutput) ToDashboardPivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopeOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopeOutput) ToDashboardPivotTableConditionalFormattingScopePtrOutput() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o.ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConditionalFormattingScopeOutput) ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableConditionalFormattingScope) *DashboardPivotTableConditionalFormattingScope {
		return &v
	}).(DashboardPivotTableConditionalFormattingScopePtrOutput)
}

func (o DashboardPivotTableConditionalFormattingScopeOutput) Role() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConditionalFormattingScope) *DashboardPivotTableConditionalFormattingScopeRole {
		return v.Role
	}).(DashboardPivotTableConditionalFormattingScopeRolePtrOutput)
}

type DashboardPivotTableConditionalFormattingScopePtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConditionalFormattingScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o DashboardPivotTableConditionalFormattingScopePtrOutput) ToDashboardPivotTableConditionalFormattingScopePtrOutput() DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopePtrOutput) ToDashboardPivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) DashboardPivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o DashboardPivotTableConditionalFormattingScopePtrOutput) Elem() DashboardPivotTableConditionalFormattingScopeOutput {
	return o.ApplyT(func(v *DashboardPivotTableConditionalFormattingScope) DashboardPivotTableConditionalFormattingScope {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableConditionalFormattingScope
		return ret
	}).(DashboardPivotTableConditionalFormattingScopeOutput)
}

func (o DashboardPivotTableConditionalFormattingScopePtrOutput) Role() DashboardPivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConditionalFormattingScope) *DashboardPivotTableConditionalFormattingScopeRole {
		if v == nil {
			return nil
		}
		return v.Role
	}).(DashboardPivotTableConditionalFormattingScopeRolePtrOutput)
}

type DashboardPivotTableConfiguration struct {
	FieldOptions           *DashboardPivotTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells             *DashboardPivotTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions *DashboardPivotTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration      *DashboardPivotTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableOptions           *DashboardPivotTableOptions                `pulumi:"tableOptions"`
	TotalOptions           *DashboardPivotTableTotalOptions           `pulumi:"totalOptions"`
}

// DashboardPivotTableConfigurationInput is an input type that accepts DashboardPivotTableConfigurationArgs and DashboardPivotTableConfigurationOutput values.
// You can construct a concrete instance of `DashboardPivotTableConfigurationInput` via:
//
//	DashboardPivotTableConfigurationArgs{...}
type DashboardPivotTableConfigurationInput interface {
	pulumi.Input

	ToDashboardPivotTableConfigurationOutput() DashboardPivotTableConfigurationOutput
	ToDashboardPivotTableConfigurationOutputWithContext(context.Context) DashboardPivotTableConfigurationOutput
}

type DashboardPivotTableConfigurationArgs struct {
	FieldOptions           DashboardPivotTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells             DashboardPivotTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions DashboardPivotTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration      DashboardPivotTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableOptions           DashboardPivotTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions           DashboardPivotTableTotalOptionsPtrInput           `pulumi:"totalOptions"`
}

func (DashboardPivotTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConfiguration)(nil)).Elem()
}

func (i DashboardPivotTableConfigurationArgs) ToDashboardPivotTableConfigurationOutput() DashboardPivotTableConfigurationOutput {
	return i.ToDashboardPivotTableConfigurationOutputWithContext(context.Background())
}

func (i DashboardPivotTableConfigurationArgs) ToDashboardPivotTableConfigurationOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConfigurationOutput)
}

func (i DashboardPivotTableConfigurationArgs) ToDashboardPivotTableConfigurationPtrOutput() DashboardPivotTableConfigurationPtrOutput {
	return i.ToDashboardPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableConfigurationArgs) ToDashboardPivotTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConfigurationOutput).ToDashboardPivotTableConfigurationPtrOutputWithContext(ctx)
}

// DashboardPivotTableConfigurationPtrInput is an input type that accepts DashboardPivotTableConfigurationArgs, DashboardPivotTableConfigurationPtr and DashboardPivotTableConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableConfigurationPtrInput` via:
//
//	        DashboardPivotTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableConfigurationPtrOutput() DashboardPivotTableConfigurationPtrOutput
	ToDashboardPivotTableConfigurationPtrOutputWithContext(context.Context) DashboardPivotTableConfigurationPtrOutput
}

type dashboardPivotTableConfigurationPtrType DashboardPivotTableConfigurationArgs

func DashboardPivotTableConfigurationPtr(v *DashboardPivotTableConfigurationArgs) DashboardPivotTableConfigurationPtrInput {
	return (*dashboardPivotTableConfigurationPtrType)(v)
}

func (*dashboardPivotTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConfiguration)(nil)).Elem()
}

func (i *dashboardPivotTableConfigurationPtrType) ToDashboardPivotTableConfigurationPtrOutput() DashboardPivotTableConfigurationPtrOutput {
	return i.ToDashboardPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableConfigurationPtrType) ToDashboardPivotTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableConfigurationPtrOutput)
}

type DashboardPivotTableConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableConfiguration)(nil)).Elem()
}

func (o DashboardPivotTableConfigurationOutput) ToDashboardPivotTableConfigurationOutput() DashboardPivotTableConfigurationOutput {
	return o
}

func (o DashboardPivotTableConfigurationOutput) ToDashboardPivotTableConfigurationOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationOutput {
	return o
}

func (o DashboardPivotTableConfigurationOutput) ToDashboardPivotTableConfigurationPtrOutput() DashboardPivotTableConfigurationPtrOutput {
	return o.ToDashboardPivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableConfigurationOutput) ToDashboardPivotTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableConfiguration) *DashboardPivotTableConfiguration {
		return &v
	}).(DashboardPivotTableConfigurationPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) FieldOptions() DashboardPivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTableFieldOptions { return v.FieldOptions }).(DashboardPivotTableFieldOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) FieldWells() DashboardPivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTableFieldWells { return v.FieldWells }).(DashboardPivotTableFieldWellsPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) PaginatedReportOptions() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(DashboardPivotTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) SortConfiguration() DashboardPivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTableSortConfiguration {
		return v.SortConfiguration
	}).(DashboardPivotTableSortConfigurationPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) TableOptions() DashboardPivotTableOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTableOptions { return v.TableOptions }).(DashboardPivotTableOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationOutput) TotalOptions() DashboardPivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableConfiguration) *DashboardPivotTableTotalOptions { return v.TotalOptions }).(DashboardPivotTableTotalOptionsPtrOutput)
}

type DashboardPivotTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableConfiguration)(nil)).Elem()
}

func (o DashboardPivotTableConfigurationPtrOutput) ToDashboardPivotTableConfigurationPtrOutput() DashboardPivotTableConfigurationPtrOutput {
	return o
}

func (o DashboardPivotTableConfigurationPtrOutput) ToDashboardPivotTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableConfigurationPtrOutput {
	return o
}

func (o DashboardPivotTableConfigurationPtrOutput) Elem() DashboardPivotTableConfigurationOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) DashboardPivotTableConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableConfiguration
		return ret
	}).(DashboardPivotTableConfigurationOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) FieldOptions() DashboardPivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(DashboardPivotTableFieldOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) FieldWells() DashboardPivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardPivotTableFieldWellsPtrOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) PaginatedReportOptions() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(DashboardPivotTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) SortConfiguration() DashboardPivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardPivotTableSortConfigurationPtrOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) TableOptions() DashboardPivotTableOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(DashboardPivotTableOptionsPtrOutput)
}

func (o DashboardPivotTableConfigurationPtrOutput) TotalOptions() DashboardPivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableConfiguration) *DashboardPivotTableTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(DashboardPivotTableTotalOptionsPtrOutput)
}

type DashboardPivotTableDataPathOption struct {
	DataPathList []DashboardDataPathValue `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// DashboardPivotTableDataPathOptionInput is an input type that accepts DashboardPivotTableDataPathOptionArgs and DashboardPivotTableDataPathOptionOutput values.
// You can construct a concrete instance of `DashboardPivotTableDataPathOptionInput` via:
//
//	DashboardPivotTableDataPathOptionArgs{...}
type DashboardPivotTableDataPathOptionInput interface {
	pulumi.Input

	ToDashboardPivotTableDataPathOptionOutput() DashboardPivotTableDataPathOptionOutput
	ToDashboardPivotTableDataPathOptionOutputWithContext(context.Context) DashboardPivotTableDataPathOptionOutput
}

type DashboardPivotTableDataPathOptionArgs struct {
	DataPathList DashboardDataPathValueArrayInput `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (DashboardPivotTableDataPathOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableDataPathOption)(nil)).Elem()
}

func (i DashboardPivotTableDataPathOptionArgs) ToDashboardPivotTableDataPathOptionOutput() DashboardPivotTableDataPathOptionOutput {
	return i.ToDashboardPivotTableDataPathOptionOutputWithContext(context.Background())
}

func (i DashboardPivotTableDataPathOptionArgs) ToDashboardPivotTableDataPathOptionOutputWithContext(ctx context.Context) DashboardPivotTableDataPathOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableDataPathOptionOutput)
}

// DashboardPivotTableDataPathOptionArrayInput is an input type that accepts DashboardPivotTableDataPathOptionArray and DashboardPivotTableDataPathOptionArrayOutput values.
// You can construct a concrete instance of `DashboardPivotTableDataPathOptionArrayInput` via:
//
//	DashboardPivotTableDataPathOptionArray{ DashboardPivotTableDataPathOptionArgs{...} }
type DashboardPivotTableDataPathOptionArrayInput interface {
	pulumi.Input

	ToDashboardPivotTableDataPathOptionArrayOutput() DashboardPivotTableDataPathOptionArrayOutput
	ToDashboardPivotTableDataPathOptionArrayOutputWithContext(context.Context) DashboardPivotTableDataPathOptionArrayOutput
}

type DashboardPivotTableDataPathOptionArray []DashboardPivotTableDataPathOptionInput

func (DashboardPivotTableDataPathOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableDataPathOption)(nil)).Elem()
}

func (i DashboardPivotTableDataPathOptionArray) ToDashboardPivotTableDataPathOptionArrayOutput() DashboardPivotTableDataPathOptionArrayOutput {
	return i.ToDashboardPivotTableDataPathOptionArrayOutputWithContext(context.Background())
}

func (i DashboardPivotTableDataPathOptionArray) ToDashboardPivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableDataPathOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableDataPathOptionArrayOutput)
}

type DashboardPivotTableDataPathOptionOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableDataPathOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableDataPathOption)(nil)).Elem()
}

func (o DashboardPivotTableDataPathOptionOutput) ToDashboardPivotTableDataPathOptionOutput() DashboardPivotTableDataPathOptionOutput {
	return o
}

func (o DashboardPivotTableDataPathOptionOutput) ToDashboardPivotTableDataPathOptionOutputWithContext(ctx context.Context) DashboardPivotTableDataPathOptionOutput {
	return o
}

func (o DashboardPivotTableDataPathOptionOutput) DataPathList() DashboardDataPathValueArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableDataPathOption) []DashboardDataPathValue { return v.DataPathList }).(DashboardDataPathValueArrayOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardPivotTableDataPathOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableDataPathOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type DashboardPivotTableDataPathOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableDataPathOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableDataPathOption)(nil)).Elem()
}

func (o DashboardPivotTableDataPathOptionArrayOutput) ToDashboardPivotTableDataPathOptionArrayOutput() DashboardPivotTableDataPathOptionArrayOutput {
	return o
}

func (o DashboardPivotTableDataPathOptionArrayOutput) ToDashboardPivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableDataPathOptionArrayOutput {
	return o
}

func (o DashboardPivotTableDataPathOptionArrayOutput) Index(i pulumi.IntInput) DashboardPivotTableDataPathOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPivotTableDataPathOption {
		return vs[0].([]DashboardPivotTableDataPathOption)[vs[1].(int)]
	}).(DashboardPivotTableDataPathOptionOutput)
}

type DashboardPivotTableFieldOption struct {
	CustomLabel *string              `pulumi:"customLabel"`
	FieldId     string               `pulumi:"fieldId"`
	Visibility  *DashboardVisibility `pulumi:"visibility"`
}

// DashboardPivotTableFieldOptionInput is an input type that accepts DashboardPivotTableFieldOptionArgs and DashboardPivotTableFieldOptionOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldOptionInput` via:
//
//	DashboardPivotTableFieldOptionArgs{...}
type DashboardPivotTableFieldOptionInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldOptionOutput() DashboardPivotTableFieldOptionOutput
	ToDashboardPivotTableFieldOptionOutputWithContext(context.Context) DashboardPivotTableFieldOptionOutput
}

type DashboardPivotTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput       `pulumi:"customLabel"`
	FieldId     pulumi.StringInput          `pulumi:"fieldId"`
	Visibility  DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardPivotTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldOption)(nil)).Elem()
}

func (i DashboardPivotTableFieldOptionArgs) ToDashboardPivotTableFieldOptionOutput() DashboardPivotTableFieldOptionOutput {
	return i.ToDashboardPivotTableFieldOptionOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldOptionArgs) ToDashboardPivotTableFieldOptionOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldOptionOutput)
}

// DashboardPivotTableFieldOptionArrayInput is an input type that accepts DashboardPivotTableFieldOptionArray and DashboardPivotTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldOptionArrayInput` via:
//
//	DashboardPivotTableFieldOptionArray{ DashboardPivotTableFieldOptionArgs{...} }
type DashboardPivotTableFieldOptionArrayInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldOptionArrayOutput() DashboardPivotTableFieldOptionArrayOutput
	ToDashboardPivotTableFieldOptionArrayOutputWithContext(context.Context) DashboardPivotTableFieldOptionArrayOutput
}

type DashboardPivotTableFieldOptionArray []DashboardPivotTableFieldOptionInput

func (DashboardPivotTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableFieldOption)(nil)).Elem()
}

func (i DashboardPivotTableFieldOptionArray) ToDashboardPivotTableFieldOptionArrayOutput() DashboardPivotTableFieldOptionArrayOutput {
	return i.ToDashboardPivotTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldOptionArray) ToDashboardPivotTableFieldOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldOptionArrayOutput)
}

type DashboardPivotTableFieldOptionOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldOption)(nil)).Elem()
}

func (o DashboardPivotTableFieldOptionOutput) ToDashboardPivotTableFieldOptionOutput() DashboardPivotTableFieldOptionOutput {
	return o
}

func (o DashboardPivotTableFieldOptionOutput) ToDashboardPivotTableFieldOptionOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionOutput {
	return o
}

func (o DashboardPivotTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardPivotTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardPivotTableFieldOptionOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldOption) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardPivotTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableFieldOption)(nil)).Elem()
}

func (o DashboardPivotTableFieldOptionArrayOutput) ToDashboardPivotTableFieldOptionArrayOutput() DashboardPivotTableFieldOptionArrayOutput {
	return o
}

func (o DashboardPivotTableFieldOptionArrayOutput) ToDashboardPivotTableFieldOptionArrayOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionArrayOutput {
	return o
}

func (o DashboardPivotTableFieldOptionArrayOutput) Index(i pulumi.IntInput) DashboardPivotTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPivotTableFieldOption {
		return vs[0].([]DashboardPivotTableFieldOption)[vs[1].(int)]
	}).(DashboardPivotTableFieldOptionOutput)
}

type DashboardPivotTableFieldOptions struct {
	DataPathOptions      []DashboardPivotTableDataPathOption `pulumi:"dataPathOptions"`
	SelectedFieldOptions []DashboardPivotTableFieldOption    `pulumi:"selectedFieldOptions"`
}

// DashboardPivotTableFieldOptionsInput is an input type that accepts DashboardPivotTableFieldOptionsArgs and DashboardPivotTableFieldOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldOptionsInput` via:
//
//	DashboardPivotTableFieldOptionsArgs{...}
type DashboardPivotTableFieldOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldOptionsOutput() DashboardPivotTableFieldOptionsOutput
	ToDashboardPivotTableFieldOptionsOutputWithContext(context.Context) DashboardPivotTableFieldOptionsOutput
}

type DashboardPivotTableFieldOptionsArgs struct {
	DataPathOptions      DashboardPivotTableDataPathOptionArrayInput `pulumi:"dataPathOptions"`
	SelectedFieldOptions DashboardPivotTableFieldOptionArrayInput    `pulumi:"selectedFieldOptions"`
}

func (DashboardPivotTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldOptions)(nil)).Elem()
}

func (i DashboardPivotTableFieldOptionsArgs) ToDashboardPivotTableFieldOptionsOutput() DashboardPivotTableFieldOptionsOutput {
	return i.ToDashboardPivotTableFieldOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldOptionsArgs) ToDashboardPivotTableFieldOptionsOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldOptionsOutput)
}

func (i DashboardPivotTableFieldOptionsArgs) ToDashboardPivotTableFieldOptionsPtrOutput() DashboardPivotTableFieldOptionsPtrOutput {
	return i.ToDashboardPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldOptionsArgs) ToDashboardPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldOptionsOutput).ToDashboardPivotTableFieldOptionsPtrOutputWithContext(ctx)
}

// DashboardPivotTableFieldOptionsPtrInput is an input type that accepts DashboardPivotTableFieldOptionsArgs, DashboardPivotTableFieldOptionsPtr and DashboardPivotTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldOptionsPtrInput` via:
//
//	        DashboardPivotTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldOptionsPtrOutput() DashboardPivotTableFieldOptionsPtrOutput
	ToDashboardPivotTableFieldOptionsPtrOutputWithContext(context.Context) DashboardPivotTableFieldOptionsPtrOutput
}

type dashboardPivotTableFieldOptionsPtrType DashboardPivotTableFieldOptionsArgs

func DashboardPivotTableFieldOptionsPtr(v *DashboardPivotTableFieldOptionsArgs) DashboardPivotTableFieldOptionsPtrInput {
	return (*dashboardPivotTableFieldOptionsPtrType)(v)
}

func (*dashboardPivotTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableFieldOptions)(nil)).Elem()
}

func (i *dashboardPivotTableFieldOptionsPtrType) ToDashboardPivotTableFieldOptionsPtrOutput() DashboardPivotTableFieldOptionsPtrOutput {
	return i.ToDashboardPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableFieldOptionsPtrType) ToDashboardPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldOptionsPtrOutput)
}

type DashboardPivotTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldOptions)(nil)).Elem()
}

func (o DashboardPivotTableFieldOptionsOutput) ToDashboardPivotTableFieldOptionsOutput() DashboardPivotTableFieldOptionsOutput {
	return o
}

func (o DashboardPivotTableFieldOptionsOutput) ToDashboardPivotTableFieldOptionsOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsOutput {
	return o
}

func (o DashboardPivotTableFieldOptionsOutput) ToDashboardPivotTableFieldOptionsPtrOutput() DashboardPivotTableFieldOptionsPtrOutput {
	return o.ToDashboardPivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldOptionsOutput) ToDashboardPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableFieldOptions) *DashboardPivotTableFieldOptions {
		return &v
	}).(DashboardPivotTableFieldOptionsPtrOutput)
}

func (o DashboardPivotTableFieldOptionsOutput) DataPathOptions() DashboardPivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldOptions) []DashboardPivotTableDataPathOption { return v.DataPathOptions }).(DashboardPivotTableDataPathOptionArrayOutput)
}

func (o DashboardPivotTableFieldOptionsOutput) SelectedFieldOptions() DashboardPivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldOptions) []DashboardPivotTableFieldOption {
		return v.SelectedFieldOptions
	}).(DashboardPivotTableFieldOptionArrayOutput)
}

type DashboardPivotTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableFieldOptions)(nil)).Elem()
}

func (o DashboardPivotTableFieldOptionsPtrOutput) ToDashboardPivotTableFieldOptionsPtrOutput() DashboardPivotTableFieldOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableFieldOptionsPtrOutput) ToDashboardPivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableFieldOptionsPtrOutput) Elem() DashboardPivotTableFieldOptionsOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldOptions) DashboardPivotTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableFieldOptions
		return ret
	}).(DashboardPivotTableFieldOptionsOutput)
}

func (o DashboardPivotTableFieldOptionsPtrOutput) DataPathOptions() DashboardPivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldOptions) []DashboardPivotTableDataPathOption {
		if v == nil {
			return nil
		}
		return v.DataPathOptions
	}).(DashboardPivotTableDataPathOptionArrayOutput)
}

func (o DashboardPivotTableFieldOptionsPtrOutput) SelectedFieldOptions() DashboardPivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldOptions) []DashboardPivotTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(DashboardPivotTableFieldOptionArrayOutput)
}

type DashboardPivotTableFieldSubtotalOptions struct {
	FieldId *string `pulumi:"fieldId"`
}

// DashboardPivotTableFieldSubtotalOptionsInput is an input type that accepts DashboardPivotTableFieldSubtotalOptionsArgs and DashboardPivotTableFieldSubtotalOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldSubtotalOptionsInput` via:
//
//	DashboardPivotTableFieldSubtotalOptionsArgs{...}
type DashboardPivotTableFieldSubtotalOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldSubtotalOptionsOutput() DashboardPivotTableFieldSubtotalOptionsOutput
	ToDashboardPivotTableFieldSubtotalOptionsOutputWithContext(context.Context) DashboardPivotTableFieldSubtotalOptionsOutput
}

type DashboardPivotTableFieldSubtotalOptionsArgs struct {
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (DashboardPivotTableFieldSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i DashboardPivotTableFieldSubtotalOptionsArgs) ToDashboardPivotTableFieldSubtotalOptionsOutput() DashboardPivotTableFieldSubtotalOptionsOutput {
	return i.ToDashboardPivotTableFieldSubtotalOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldSubtotalOptionsArgs) ToDashboardPivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTableFieldSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldSubtotalOptionsOutput)
}

// DashboardPivotTableFieldSubtotalOptionsArrayInput is an input type that accepts DashboardPivotTableFieldSubtotalOptionsArray and DashboardPivotTableFieldSubtotalOptionsArrayOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldSubtotalOptionsArrayInput` via:
//
//	DashboardPivotTableFieldSubtotalOptionsArray{ DashboardPivotTableFieldSubtotalOptionsArgs{...} }
type DashboardPivotTableFieldSubtotalOptionsArrayInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldSubtotalOptionsArrayOutput() DashboardPivotTableFieldSubtotalOptionsArrayOutput
	ToDashboardPivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Context) DashboardPivotTableFieldSubtotalOptionsArrayOutput
}

type DashboardPivotTableFieldSubtotalOptionsArray []DashboardPivotTableFieldSubtotalOptionsInput

func (DashboardPivotTableFieldSubtotalOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i DashboardPivotTableFieldSubtotalOptionsArray) ToDashboardPivotTableFieldSubtotalOptionsArrayOutput() DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return i.ToDashboardPivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldSubtotalOptionsArray) ToDashboardPivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldSubtotalOptionsArrayOutput)
}

type DashboardPivotTableFieldSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o DashboardPivotTableFieldSubtotalOptionsOutput) ToDashboardPivotTableFieldSubtotalOptionsOutput() DashboardPivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o DashboardPivotTableFieldSubtotalOptionsOutput) ToDashboardPivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o DashboardPivotTableFieldSubtotalOptionsOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldSubtotalOptions) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type DashboardPivotTableFieldSubtotalOptionsArrayOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldSubtotalOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o DashboardPivotTableFieldSubtotalOptionsArrayOutput) ToDashboardPivotTableFieldSubtotalOptionsArrayOutput() DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o DashboardPivotTableFieldSubtotalOptionsArrayOutput) ToDashboardPivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o DashboardPivotTableFieldSubtotalOptionsArrayOutput) Index(i pulumi.IntInput) DashboardPivotTableFieldSubtotalOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPivotTableFieldSubtotalOptions {
		return vs[0].([]DashboardPivotTableFieldSubtotalOptions)[vs[1].(int)]
	}).(DashboardPivotTableFieldSubtotalOptionsOutput)
}

type DashboardPivotTableFieldWells struct {
	PivotTableAggregatedFieldWells *DashboardPivotTableAggregatedFieldWells `pulumi:"pivotTableAggregatedFieldWells"`
}

// DashboardPivotTableFieldWellsInput is an input type that accepts DashboardPivotTableFieldWellsArgs and DashboardPivotTableFieldWellsOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldWellsInput` via:
//
//	DashboardPivotTableFieldWellsArgs{...}
type DashboardPivotTableFieldWellsInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldWellsOutput() DashboardPivotTableFieldWellsOutput
	ToDashboardPivotTableFieldWellsOutputWithContext(context.Context) DashboardPivotTableFieldWellsOutput
}

type DashboardPivotTableFieldWellsArgs struct {
	PivotTableAggregatedFieldWells DashboardPivotTableAggregatedFieldWellsPtrInput `pulumi:"pivotTableAggregatedFieldWells"`
}

func (DashboardPivotTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldWells)(nil)).Elem()
}

func (i DashboardPivotTableFieldWellsArgs) ToDashboardPivotTableFieldWellsOutput() DashboardPivotTableFieldWellsOutput {
	return i.ToDashboardPivotTableFieldWellsOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldWellsArgs) ToDashboardPivotTableFieldWellsOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldWellsOutput)
}

func (i DashboardPivotTableFieldWellsArgs) ToDashboardPivotTableFieldWellsPtrOutput() DashboardPivotTableFieldWellsPtrOutput {
	return i.ToDashboardPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableFieldWellsArgs) ToDashboardPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldWellsOutput).ToDashboardPivotTableFieldWellsPtrOutputWithContext(ctx)
}

// DashboardPivotTableFieldWellsPtrInput is an input type that accepts DashboardPivotTableFieldWellsArgs, DashboardPivotTableFieldWellsPtr and DashboardPivotTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableFieldWellsPtrInput` via:
//
//	        DashboardPivotTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableFieldWellsPtrOutput() DashboardPivotTableFieldWellsPtrOutput
	ToDashboardPivotTableFieldWellsPtrOutputWithContext(context.Context) DashboardPivotTableFieldWellsPtrOutput
}

type dashboardPivotTableFieldWellsPtrType DashboardPivotTableFieldWellsArgs

func DashboardPivotTableFieldWellsPtr(v *DashboardPivotTableFieldWellsArgs) DashboardPivotTableFieldWellsPtrInput {
	return (*dashboardPivotTableFieldWellsPtrType)(v)
}

func (*dashboardPivotTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableFieldWells)(nil)).Elem()
}

func (i *dashboardPivotTableFieldWellsPtrType) ToDashboardPivotTableFieldWellsPtrOutput() DashboardPivotTableFieldWellsPtrOutput {
	return i.ToDashboardPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableFieldWellsPtrType) ToDashboardPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableFieldWellsPtrOutput)
}

type DashboardPivotTableFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableFieldWells)(nil)).Elem()
}

func (o DashboardPivotTableFieldWellsOutput) ToDashboardPivotTableFieldWellsOutput() DashboardPivotTableFieldWellsOutput {
	return o
}

func (o DashboardPivotTableFieldWellsOutput) ToDashboardPivotTableFieldWellsOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsOutput {
	return o
}

func (o DashboardPivotTableFieldWellsOutput) ToDashboardPivotTableFieldWellsPtrOutput() DashboardPivotTableFieldWellsPtrOutput {
	return o.ToDashboardPivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableFieldWellsOutput) ToDashboardPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableFieldWells) *DashboardPivotTableFieldWells {
		return &v
	}).(DashboardPivotTableFieldWellsPtrOutput)
}

func (o DashboardPivotTableFieldWellsOutput) PivotTableAggregatedFieldWells() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableFieldWells) *DashboardPivotTableAggregatedFieldWells {
		return v.PivotTableAggregatedFieldWells
	}).(DashboardPivotTableAggregatedFieldWellsPtrOutput)
}

type DashboardPivotTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableFieldWells)(nil)).Elem()
}

func (o DashboardPivotTableFieldWellsPtrOutput) ToDashboardPivotTableFieldWellsPtrOutput() DashboardPivotTableFieldWellsPtrOutput {
	return o
}

func (o DashboardPivotTableFieldWellsPtrOutput) ToDashboardPivotTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardPivotTableFieldWellsPtrOutput {
	return o
}

func (o DashboardPivotTableFieldWellsPtrOutput) Elem() DashboardPivotTableFieldWellsOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldWells) DashboardPivotTableFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableFieldWells
		return ret
	}).(DashboardPivotTableFieldWellsOutput)
}

func (o DashboardPivotTableFieldWellsPtrOutput) PivotTableAggregatedFieldWells() DashboardPivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableFieldWells) *DashboardPivotTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PivotTableAggregatedFieldWells
	}).(DashboardPivotTableAggregatedFieldWellsPtrOutput)
}

type DashboardPivotTableOptions struct {
	CellStyle                *DashboardTableCellStyle            `pulumi:"cellStyle"`
	ColumnHeaderStyle        *DashboardTableCellStyle            `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility    *DashboardVisibility                `pulumi:"columnNamesVisibility"`
	MetricPlacement          *DashboardPivotTableMetricPlacement `pulumi:"metricPlacement"`
	RowAlternateColorOptions *DashboardRowAlternateColorOptions  `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       *DashboardTableCellStyle            `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           *DashboardTableCellStyle            `pulumi:"rowHeaderStyle"`
	SingleMetricVisibility   *DashboardVisibility                `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  *DashboardVisibility                `pulumi:"toggleButtonsVisibility"`
}

// DashboardPivotTableOptionsInput is an input type that accepts DashboardPivotTableOptionsArgs and DashboardPivotTableOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTableOptionsInput` via:
//
//	DashboardPivotTableOptionsArgs{...}
type DashboardPivotTableOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTableOptionsOutput() DashboardPivotTableOptionsOutput
	ToDashboardPivotTableOptionsOutputWithContext(context.Context) DashboardPivotTableOptionsOutput
}

type DashboardPivotTableOptionsArgs struct {
	CellStyle                DashboardTableCellStylePtrInput            `pulumi:"cellStyle"`
	ColumnHeaderStyle        DashboardTableCellStylePtrInput            `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility    DashboardVisibilityPtrInput                `pulumi:"columnNamesVisibility"`
	MetricPlacement          DashboardPivotTableMetricPlacementPtrInput `pulumi:"metricPlacement"`
	RowAlternateColorOptions DashboardRowAlternateColorOptionsPtrInput  `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       DashboardTableCellStylePtrInput            `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           DashboardTableCellStylePtrInput            `pulumi:"rowHeaderStyle"`
	SingleMetricVisibility   DashboardVisibilityPtrInput                `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  DashboardVisibilityPtrInput                `pulumi:"toggleButtonsVisibility"`
}

func (DashboardPivotTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableOptions)(nil)).Elem()
}

func (i DashboardPivotTableOptionsArgs) ToDashboardPivotTableOptionsOutput() DashboardPivotTableOptionsOutput {
	return i.ToDashboardPivotTableOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTableOptionsArgs) ToDashboardPivotTableOptionsOutputWithContext(ctx context.Context) DashboardPivotTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableOptionsOutput)
}

func (i DashboardPivotTableOptionsArgs) ToDashboardPivotTableOptionsPtrOutput() DashboardPivotTableOptionsPtrOutput {
	return i.ToDashboardPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableOptionsArgs) ToDashboardPivotTableOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableOptionsOutput).ToDashboardPivotTableOptionsPtrOutputWithContext(ctx)
}

// DashboardPivotTableOptionsPtrInput is an input type that accepts DashboardPivotTableOptionsArgs, DashboardPivotTableOptionsPtr and DashboardPivotTableOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableOptionsPtrInput` via:
//
//	        DashboardPivotTableOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableOptionsPtrOutput() DashboardPivotTableOptionsPtrOutput
	ToDashboardPivotTableOptionsPtrOutputWithContext(context.Context) DashboardPivotTableOptionsPtrOutput
}

type dashboardPivotTableOptionsPtrType DashboardPivotTableOptionsArgs

func DashboardPivotTableOptionsPtr(v *DashboardPivotTableOptionsArgs) DashboardPivotTableOptionsPtrInput {
	return (*dashboardPivotTableOptionsPtrType)(v)
}

func (*dashboardPivotTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableOptions)(nil)).Elem()
}

func (i *dashboardPivotTableOptionsPtrType) ToDashboardPivotTableOptionsPtrOutput() DashboardPivotTableOptionsPtrOutput {
	return i.ToDashboardPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableOptionsPtrType) ToDashboardPivotTableOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableOptionsPtrOutput)
}

type DashboardPivotTableOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableOptions)(nil)).Elem()
}

func (o DashboardPivotTableOptionsOutput) ToDashboardPivotTableOptionsOutput() DashboardPivotTableOptionsOutput {
	return o
}

func (o DashboardPivotTableOptionsOutput) ToDashboardPivotTableOptionsOutputWithContext(ctx context.Context) DashboardPivotTableOptionsOutput {
	return o
}

func (o DashboardPivotTableOptionsOutput) ToDashboardPivotTableOptionsPtrOutput() DashboardPivotTableOptionsPtrOutput {
	return o.ToDashboardPivotTableOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableOptionsOutput) ToDashboardPivotTableOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableOptions) *DashboardPivotTableOptions {
		return &v
	}).(DashboardPivotTableOptionsPtrOutput)
}

func (o DashboardPivotTableOptionsOutput) CellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardTableCellStyle { return v.CellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsOutput) ColumnHeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardTableCellStyle { return v.ColumnHeaderStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsOutput) ColumnNamesVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardVisibility { return v.ColumnNamesVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTableOptionsOutput) MetricPlacement() DashboardPivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardPivotTableMetricPlacement { return v.MetricPlacement }).(DashboardPivotTableMetricPlacementPtrOutput)
}

func (o DashboardPivotTableOptionsOutput) RowAlternateColorOptions() DashboardRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardRowAlternateColorOptions {
		return v.RowAlternateColorOptions
	}).(DashboardRowAlternateColorOptionsPtrOutput)
}

func (o DashboardPivotTableOptionsOutput) RowFieldNamesStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardTableCellStyle { return v.RowFieldNamesStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsOutput) RowHeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardTableCellStyle { return v.RowHeaderStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsOutput) SingleMetricVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardVisibility { return v.SingleMetricVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTableOptionsOutput) ToggleButtonsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableOptions) *DashboardVisibility { return v.ToggleButtonsVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardPivotTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableOptions)(nil)).Elem()
}

func (o DashboardPivotTableOptionsPtrOutput) ToDashboardPivotTableOptionsPtrOutput() DashboardPivotTableOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableOptionsPtrOutput) ToDashboardPivotTableOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableOptionsPtrOutput) Elem() DashboardPivotTableOptionsOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) DashboardPivotTableOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableOptions
		return ret
	}).(DashboardPivotTableOptionsOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) CellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) ColumnHeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ColumnHeaderStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) ColumnNamesVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.ColumnNamesVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) MetricPlacement() DashboardPivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardPivotTableMetricPlacement {
		if v == nil {
			return nil
		}
		return v.MetricPlacement
	}).(DashboardPivotTableMetricPlacementPtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) RowAlternateColorOptions() DashboardRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(DashboardRowAlternateColorOptionsPtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) RowFieldNamesStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowFieldNamesStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) RowHeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowHeaderStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) SingleMetricVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.SingleMetricVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTableOptionsPtrOutput) ToggleButtonsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.ToggleButtonsVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardPivotTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *DashboardVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *DashboardVisibility `pulumi:"verticalOverflowVisibility"`
}

// DashboardPivotTablePaginatedReportOptionsInput is an input type that accepts DashboardPivotTablePaginatedReportOptionsArgs and DashboardPivotTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTablePaginatedReportOptionsInput` via:
//
//	DashboardPivotTablePaginatedReportOptionsArgs{...}
type DashboardPivotTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTablePaginatedReportOptionsOutput() DashboardPivotTablePaginatedReportOptionsOutput
	ToDashboardPivotTablePaginatedReportOptionsOutputWithContext(context.Context) DashboardPivotTablePaginatedReportOptionsOutput
}

type DashboardPivotTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility DashboardVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     DashboardVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (DashboardPivotTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i DashboardPivotTablePaginatedReportOptionsArgs) ToDashboardPivotTablePaginatedReportOptionsOutput() DashboardPivotTablePaginatedReportOptionsOutput {
	return i.ToDashboardPivotTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTablePaginatedReportOptionsArgs) ToDashboardPivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTablePaginatedReportOptionsOutput)
}

func (i DashboardPivotTablePaginatedReportOptionsArgs) ToDashboardPivotTablePaginatedReportOptionsPtrOutput() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return i.ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTablePaginatedReportOptionsArgs) ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTablePaginatedReportOptionsOutput).ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// DashboardPivotTablePaginatedReportOptionsPtrInput is an input type that accepts DashboardPivotTablePaginatedReportOptionsArgs, DashboardPivotTablePaginatedReportOptionsPtr and DashboardPivotTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTablePaginatedReportOptionsPtrInput` via:
//
//	        DashboardPivotTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTablePaginatedReportOptionsPtrOutput() DashboardPivotTablePaginatedReportOptionsPtrOutput
	ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Context) DashboardPivotTablePaginatedReportOptionsPtrOutput
}

type dashboardPivotTablePaginatedReportOptionsPtrType DashboardPivotTablePaginatedReportOptionsArgs

func DashboardPivotTablePaginatedReportOptionsPtr(v *DashboardPivotTablePaginatedReportOptionsArgs) DashboardPivotTablePaginatedReportOptionsPtrInput {
	return (*dashboardPivotTablePaginatedReportOptionsPtrType)(v)
}

func (*dashboardPivotTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i *dashboardPivotTablePaginatedReportOptionsPtrType) ToDashboardPivotTablePaginatedReportOptionsPtrOutput() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return i.ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTablePaginatedReportOptionsPtrType) ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTablePaginatedReportOptionsPtrOutput)
}

type DashboardPivotTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) ToDashboardPivotTablePaginatedReportOptionsOutput() DashboardPivotTablePaginatedReportOptionsOutput {
	return o
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) ToDashboardPivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsOutput {
	return o
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) ToDashboardPivotTablePaginatedReportOptionsPtrOutput() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o.ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTablePaginatedReportOptions) *DashboardPivotTablePaginatedReportOptions {
		return &v
	}).(DashboardPivotTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTablePaginatedReportOptions) *DashboardVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTablePaginatedReportOptions) *DashboardVisibility {
		return v.VerticalOverflowVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardPivotTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o DashboardPivotTablePaginatedReportOptionsPtrOutput) ToDashboardPivotTablePaginatedReportOptionsPtrOutput() DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o DashboardPivotTablePaginatedReportOptionsPtrOutput) ToDashboardPivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o DashboardPivotTablePaginatedReportOptionsPtrOutput) Elem() DashboardPivotTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *DashboardPivotTablePaginatedReportOptions) DashboardPivotTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTablePaginatedReportOptions
		return ret
	}).(DashboardPivotTablePaginatedReportOptionsOutput)
}

func (o DashboardPivotTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTablePaginatedReportOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTablePaginatedReportOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardPivotTableSortBy struct {
	Column   *DashboardColumnSort   `pulumi:"column"`
	DataPath *DashboardDataPathSort `pulumi:"dataPath"`
	Field    *DashboardFieldSort    `pulumi:"field"`
}

// DashboardPivotTableSortByInput is an input type that accepts DashboardPivotTableSortByArgs and DashboardPivotTableSortByOutput values.
// You can construct a concrete instance of `DashboardPivotTableSortByInput` via:
//
//	DashboardPivotTableSortByArgs{...}
type DashboardPivotTableSortByInput interface {
	pulumi.Input

	ToDashboardPivotTableSortByOutput() DashboardPivotTableSortByOutput
	ToDashboardPivotTableSortByOutputWithContext(context.Context) DashboardPivotTableSortByOutput
}

type DashboardPivotTableSortByArgs struct {
	Column   DashboardColumnSortPtrInput   `pulumi:"column"`
	DataPath DashboardDataPathSortPtrInput `pulumi:"dataPath"`
	Field    DashboardFieldSortPtrInput    `pulumi:"field"`
}

func (DashboardPivotTableSortByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSortBy)(nil)).Elem()
}

func (i DashboardPivotTableSortByArgs) ToDashboardPivotTableSortByOutput() DashboardPivotTableSortByOutput {
	return i.ToDashboardPivotTableSortByOutputWithContext(context.Background())
}

func (i DashboardPivotTableSortByArgs) ToDashboardPivotTableSortByOutputWithContext(ctx context.Context) DashboardPivotTableSortByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableSortByOutput)
}

type DashboardPivotTableSortByOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableSortByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSortBy)(nil)).Elem()
}

func (o DashboardPivotTableSortByOutput) ToDashboardPivotTableSortByOutput() DashboardPivotTableSortByOutput {
	return o
}

func (o DashboardPivotTableSortByOutput) ToDashboardPivotTableSortByOutputWithContext(ctx context.Context) DashboardPivotTableSortByOutput {
	return o
}

func (o DashboardPivotTableSortByOutput) Column() DashboardColumnSortPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableSortBy) *DashboardColumnSort { return v.Column }).(DashboardColumnSortPtrOutput)
}

func (o DashboardPivotTableSortByOutput) DataPath() DashboardDataPathSortPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableSortBy) *DashboardDataPathSort { return v.DataPath }).(DashboardDataPathSortPtrOutput)
}

func (o DashboardPivotTableSortByOutput) Field() DashboardFieldSortPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableSortBy) *DashboardFieldSort { return v.Field }).(DashboardFieldSortPtrOutput)
}

type DashboardPivotTableSortConfiguration struct {
	FieldSortOptions []DashboardPivotFieldSortOptions `pulumi:"fieldSortOptions"`
}

// DashboardPivotTableSortConfigurationInput is an input type that accepts DashboardPivotTableSortConfigurationArgs and DashboardPivotTableSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardPivotTableSortConfigurationInput` via:
//
//	DashboardPivotTableSortConfigurationArgs{...}
type DashboardPivotTableSortConfigurationInput interface {
	pulumi.Input

	ToDashboardPivotTableSortConfigurationOutput() DashboardPivotTableSortConfigurationOutput
	ToDashboardPivotTableSortConfigurationOutputWithContext(context.Context) DashboardPivotTableSortConfigurationOutput
}

type DashboardPivotTableSortConfigurationArgs struct {
	FieldSortOptions DashboardPivotFieldSortOptionsArrayInput `pulumi:"fieldSortOptions"`
}

func (DashboardPivotTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSortConfiguration)(nil)).Elem()
}

func (i DashboardPivotTableSortConfigurationArgs) ToDashboardPivotTableSortConfigurationOutput() DashboardPivotTableSortConfigurationOutput {
	return i.ToDashboardPivotTableSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardPivotTableSortConfigurationArgs) ToDashboardPivotTableSortConfigurationOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableSortConfigurationOutput)
}

func (i DashboardPivotTableSortConfigurationArgs) ToDashboardPivotTableSortConfigurationPtrOutput() DashboardPivotTableSortConfigurationPtrOutput {
	return i.ToDashboardPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableSortConfigurationArgs) ToDashboardPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableSortConfigurationOutput).ToDashboardPivotTableSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardPivotTableSortConfigurationPtrInput is an input type that accepts DashboardPivotTableSortConfigurationArgs, DashboardPivotTableSortConfigurationPtr and DashboardPivotTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableSortConfigurationPtrInput` via:
//
//	        DashboardPivotTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableSortConfigurationPtrOutput() DashboardPivotTableSortConfigurationPtrOutput
	ToDashboardPivotTableSortConfigurationPtrOutputWithContext(context.Context) DashboardPivotTableSortConfigurationPtrOutput
}

type dashboardPivotTableSortConfigurationPtrType DashboardPivotTableSortConfigurationArgs

func DashboardPivotTableSortConfigurationPtr(v *DashboardPivotTableSortConfigurationArgs) DashboardPivotTableSortConfigurationPtrInput {
	return (*dashboardPivotTableSortConfigurationPtrType)(v)
}

func (*dashboardPivotTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableSortConfiguration)(nil)).Elem()
}

func (i *dashboardPivotTableSortConfigurationPtrType) ToDashboardPivotTableSortConfigurationPtrOutput() DashboardPivotTableSortConfigurationPtrOutput {
	return i.ToDashboardPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableSortConfigurationPtrType) ToDashboardPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableSortConfigurationPtrOutput)
}

type DashboardPivotTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableSortConfiguration)(nil)).Elem()
}

func (o DashboardPivotTableSortConfigurationOutput) ToDashboardPivotTableSortConfigurationOutput() DashboardPivotTableSortConfigurationOutput {
	return o
}

func (o DashboardPivotTableSortConfigurationOutput) ToDashboardPivotTableSortConfigurationOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationOutput {
	return o
}

func (o DashboardPivotTableSortConfigurationOutput) ToDashboardPivotTableSortConfigurationPtrOutput() DashboardPivotTableSortConfigurationPtrOutput {
	return o.ToDashboardPivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableSortConfigurationOutput) ToDashboardPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableSortConfiguration) *DashboardPivotTableSortConfiguration {
		return &v
	}).(DashboardPivotTableSortConfigurationPtrOutput)
}

func (o DashboardPivotTableSortConfigurationOutput) FieldSortOptions() DashboardPivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableSortConfiguration) []DashboardPivotFieldSortOptions {
		return v.FieldSortOptions
	}).(DashboardPivotFieldSortOptionsArrayOutput)
}

type DashboardPivotTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableSortConfiguration)(nil)).Elem()
}

func (o DashboardPivotTableSortConfigurationPtrOutput) ToDashboardPivotTableSortConfigurationPtrOutput() DashboardPivotTableSortConfigurationPtrOutput {
	return o
}

func (o DashboardPivotTableSortConfigurationPtrOutput) ToDashboardPivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardPivotTableSortConfigurationPtrOutput {
	return o
}

func (o DashboardPivotTableSortConfigurationPtrOutput) Elem() DashboardPivotTableSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardPivotTableSortConfiguration) DashboardPivotTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableSortConfiguration
		return ret
	}).(DashboardPivotTableSortConfigurationOutput)
}

func (o DashboardPivotTableSortConfigurationPtrOutput) FieldSortOptions() DashboardPivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableSortConfiguration) []DashboardPivotFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.FieldSortOptions
	}).(DashboardPivotFieldSortOptionsArrayOutput)
}

type DashboardPivotTableTotalOptions struct {
	ColumnSubtotalOptions *DashboardSubtotalOptions   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    *DashboardPivotTotalOptions `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    *DashboardSubtotalOptions   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       *DashboardPivotTotalOptions `pulumi:"rowTotalOptions"`
}

// DashboardPivotTableTotalOptionsInput is an input type that accepts DashboardPivotTableTotalOptionsArgs and DashboardPivotTableTotalOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTableTotalOptionsInput` via:
//
//	DashboardPivotTableTotalOptionsArgs{...}
type DashboardPivotTableTotalOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTableTotalOptionsOutput() DashboardPivotTableTotalOptionsOutput
	ToDashboardPivotTableTotalOptionsOutputWithContext(context.Context) DashboardPivotTableTotalOptionsOutput
}

type DashboardPivotTableTotalOptionsArgs struct {
	ColumnSubtotalOptions DashboardSubtotalOptionsPtrInput   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    DashboardPivotTotalOptionsPtrInput `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    DashboardSubtotalOptionsPtrInput   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       DashboardPivotTotalOptionsPtrInput `pulumi:"rowTotalOptions"`
}

func (DashboardPivotTableTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableTotalOptions)(nil)).Elem()
}

func (i DashboardPivotTableTotalOptionsArgs) ToDashboardPivotTableTotalOptionsOutput() DashboardPivotTableTotalOptionsOutput {
	return i.ToDashboardPivotTableTotalOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTableTotalOptionsArgs) ToDashboardPivotTableTotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableTotalOptionsOutput)
}

func (i DashboardPivotTableTotalOptionsArgs) ToDashboardPivotTableTotalOptionsPtrOutput() DashboardPivotTableTotalOptionsPtrOutput {
	return i.ToDashboardPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableTotalOptionsArgs) ToDashboardPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableTotalOptionsOutput).ToDashboardPivotTableTotalOptionsPtrOutputWithContext(ctx)
}

// DashboardPivotTableTotalOptionsPtrInput is an input type that accepts DashboardPivotTableTotalOptionsArgs, DashboardPivotTableTotalOptionsPtr and DashboardPivotTableTotalOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableTotalOptionsPtrInput` via:
//
//	        DashboardPivotTableTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableTotalOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableTotalOptionsPtrOutput() DashboardPivotTableTotalOptionsPtrOutput
	ToDashboardPivotTableTotalOptionsPtrOutputWithContext(context.Context) DashboardPivotTableTotalOptionsPtrOutput
}

type dashboardPivotTableTotalOptionsPtrType DashboardPivotTableTotalOptionsArgs

func DashboardPivotTableTotalOptionsPtr(v *DashboardPivotTableTotalOptionsArgs) DashboardPivotTableTotalOptionsPtrInput {
	return (*dashboardPivotTableTotalOptionsPtrType)(v)
}

func (*dashboardPivotTableTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableTotalOptions)(nil)).Elem()
}

func (i *dashboardPivotTableTotalOptionsPtrType) ToDashboardPivotTableTotalOptionsPtrOutput() DashboardPivotTableTotalOptionsPtrOutput {
	return i.ToDashboardPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableTotalOptionsPtrType) ToDashboardPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableTotalOptionsPtrOutput)
}

type DashboardPivotTableTotalOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableTotalOptions)(nil)).Elem()
}

func (o DashboardPivotTableTotalOptionsOutput) ToDashboardPivotTableTotalOptionsOutput() DashboardPivotTableTotalOptionsOutput {
	return o
}

func (o DashboardPivotTableTotalOptionsOutput) ToDashboardPivotTableTotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsOutput {
	return o
}

func (o DashboardPivotTableTotalOptionsOutput) ToDashboardPivotTableTotalOptionsPtrOutput() DashboardPivotTableTotalOptionsPtrOutput {
	return o.ToDashboardPivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableTotalOptionsOutput) ToDashboardPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableTotalOptions) *DashboardPivotTableTotalOptions {
		return &v
	}).(DashboardPivotTableTotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsOutput) ColumnSubtotalOptions() DashboardSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableTotalOptions) *DashboardSubtotalOptions { return v.ColumnSubtotalOptions }).(DashboardSubtotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsOutput) ColumnTotalOptions() DashboardPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableTotalOptions) *DashboardPivotTotalOptions { return v.ColumnTotalOptions }).(DashboardPivotTotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsOutput) RowSubtotalOptions() DashboardSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableTotalOptions) *DashboardSubtotalOptions { return v.RowSubtotalOptions }).(DashboardSubtotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsOutput) RowTotalOptions() DashboardPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableTotalOptions) *DashboardPivotTotalOptions { return v.RowTotalOptions }).(DashboardPivotTotalOptionsPtrOutput)
}

type DashboardPivotTableTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableTotalOptions)(nil)).Elem()
}

func (o DashboardPivotTableTotalOptionsPtrOutput) ToDashboardPivotTableTotalOptionsPtrOutput() DashboardPivotTableTotalOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableTotalOptionsPtrOutput) ToDashboardPivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTableTotalOptionsPtrOutput {
	return o
}

func (o DashboardPivotTableTotalOptionsPtrOutput) Elem() DashboardPivotTableTotalOptionsOutput {
	return o.ApplyT(func(v *DashboardPivotTableTotalOptions) DashboardPivotTableTotalOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableTotalOptions
		return ret
	}).(DashboardPivotTableTotalOptionsOutput)
}

func (o DashboardPivotTableTotalOptionsPtrOutput) ColumnSubtotalOptions() DashboardSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableTotalOptions) *DashboardSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnSubtotalOptions
	}).(DashboardSubtotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsPtrOutput) ColumnTotalOptions() DashboardPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableTotalOptions) *DashboardPivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnTotalOptions
	}).(DashboardPivotTotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsPtrOutput) RowSubtotalOptions() DashboardSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableTotalOptions) *DashboardSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.RowSubtotalOptions
	}).(DashboardSubtotalOptionsPtrOutput)
}

func (o DashboardPivotTableTotalOptionsPtrOutput) RowTotalOptions() DashboardPivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableTotalOptions) *DashboardPivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.RowTotalOptions
	}).(DashboardPivotTotalOptionsPtrOutput)
}

type DashboardPivotTableVisual struct {
	Actions               []DashboardVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *DashboardPivotTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *DashboardPivotTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *DashboardVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *DashboardVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                    `pulumi:"visualId"`
}

// DashboardPivotTableVisualInput is an input type that accepts DashboardPivotTableVisualArgs and DashboardPivotTableVisualOutput values.
// You can construct a concrete instance of `DashboardPivotTableVisualInput` via:
//
//	DashboardPivotTableVisualArgs{...}
type DashboardPivotTableVisualInput interface {
	pulumi.Input

	ToDashboardPivotTableVisualOutput() DashboardPivotTableVisualOutput
	ToDashboardPivotTableVisualOutputWithContext(context.Context) DashboardPivotTableVisualOutput
}

type DashboardPivotTableVisualArgs struct {
	Actions               DashboardVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    DashboardPivotTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting DashboardPivotTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              DashboardVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 DashboardVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                               `pulumi:"visualId"`
}

func (DashboardPivotTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableVisual)(nil)).Elem()
}

func (i DashboardPivotTableVisualArgs) ToDashboardPivotTableVisualOutput() DashboardPivotTableVisualOutput {
	return i.ToDashboardPivotTableVisualOutputWithContext(context.Background())
}

func (i DashboardPivotTableVisualArgs) ToDashboardPivotTableVisualOutputWithContext(ctx context.Context) DashboardPivotTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableVisualOutput)
}

func (i DashboardPivotTableVisualArgs) ToDashboardPivotTableVisualPtrOutput() DashboardPivotTableVisualPtrOutput {
	return i.ToDashboardPivotTableVisualPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTableVisualArgs) ToDashboardPivotTableVisualPtrOutputWithContext(ctx context.Context) DashboardPivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableVisualOutput).ToDashboardPivotTableVisualPtrOutputWithContext(ctx)
}

// DashboardPivotTableVisualPtrInput is an input type that accepts DashboardPivotTableVisualArgs, DashboardPivotTableVisualPtr and DashboardPivotTableVisualPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTableVisualPtrInput` via:
//
//	        DashboardPivotTableVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTableVisualPtrInput interface {
	pulumi.Input

	ToDashboardPivotTableVisualPtrOutput() DashboardPivotTableVisualPtrOutput
	ToDashboardPivotTableVisualPtrOutputWithContext(context.Context) DashboardPivotTableVisualPtrOutput
}

type dashboardPivotTableVisualPtrType DashboardPivotTableVisualArgs

func DashboardPivotTableVisualPtr(v *DashboardPivotTableVisualArgs) DashboardPivotTableVisualPtrInput {
	return (*dashboardPivotTableVisualPtrType)(v)
}

func (*dashboardPivotTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableVisual)(nil)).Elem()
}

func (i *dashboardPivotTableVisualPtrType) ToDashboardPivotTableVisualPtrOutput() DashboardPivotTableVisualPtrOutput {
	return i.ToDashboardPivotTableVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTableVisualPtrType) ToDashboardPivotTableVisualPtrOutputWithContext(ctx context.Context) DashboardPivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTableVisualPtrOutput)
}

type DashboardPivotTableVisualOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTableVisual)(nil)).Elem()
}

func (o DashboardPivotTableVisualOutput) ToDashboardPivotTableVisualOutput() DashboardPivotTableVisualOutput {
	return o
}

func (o DashboardPivotTableVisualOutput) ToDashboardPivotTableVisualOutputWithContext(ctx context.Context) DashboardPivotTableVisualOutput {
	return o
}

func (o DashboardPivotTableVisualOutput) ToDashboardPivotTableVisualPtrOutput() DashboardPivotTableVisualPtrOutput {
	return o.ToDashboardPivotTableVisualPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTableVisualOutput) ToDashboardPivotTableVisualPtrOutputWithContext(ctx context.Context) DashboardPivotTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTableVisual) *DashboardPivotTableVisual {
		return &v
	}).(DashboardPivotTableVisualPtrOutput)
}

func (o DashboardPivotTableVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardPivotTableVisualOutput) ChartConfiguration() DashboardPivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) *DashboardPivotTableConfiguration { return v.ChartConfiguration }).(DashboardPivotTableConfigurationPtrOutput)
}

func (o DashboardPivotTableVisualOutput) ConditionalFormatting() DashboardPivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) *DashboardPivotTableConditionalFormatting {
		return v.ConditionalFormatting
	}).(DashboardPivotTableConditionalFormattingPtrOutput)
}

func (o DashboardPivotTableVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardPivotTableVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardPivotTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPivotTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardPivotTableVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTableVisual)(nil)).Elem()
}

func (o DashboardPivotTableVisualPtrOutput) ToDashboardPivotTableVisualPtrOutput() DashboardPivotTableVisualPtrOutput {
	return o
}

func (o DashboardPivotTableVisualPtrOutput) ToDashboardPivotTableVisualPtrOutputWithContext(ctx context.Context) DashboardPivotTableVisualPtrOutput {
	return o
}

func (o DashboardPivotTableVisualPtrOutput) Elem() DashboardPivotTableVisualOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) DashboardPivotTableVisual {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTableVisual
		return ret
	}).(DashboardPivotTableVisualOutput)
}

func (o DashboardPivotTableVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardPivotTableVisualPtrOutput) ChartConfiguration() DashboardPivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) *DashboardPivotTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardPivotTableConfigurationPtrOutput)
}

func (o DashboardPivotTableVisualPtrOutput) ConditionalFormatting() DashboardPivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) *DashboardPivotTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(DashboardPivotTableConditionalFormattingPtrOutput)
}

func (o DashboardPivotTableVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardPivotTableVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardPivotTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardPivotTotalOptions struct {
	CustomLabel           *string                           `pulumi:"customLabel"`
	MetricHeaderCellStyle *DashboardTableCellStyle          `pulumi:"metricHeaderCellStyle"`
	Placement             *DashboardTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus          *DashboardTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalCellStyle        *DashboardTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility      *DashboardVisibility              `pulumi:"totalsVisibility"`
	ValueCellStyle        *DashboardTableCellStyle          `pulumi:"valueCellStyle"`
}

// DashboardPivotTotalOptionsInput is an input type that accepts DashboardPivotTotalOptionsArgs and DashboardPivotTotalOptionsOutput values.
// You can construct a concrete instance of `DashboardPivotTotalOptionsInput` via:
//
//	DashboardPivotTotalOptionsArgs{...}
type DashboardPivotTotalOptionsInput interface {
	pulumi.Input

	ToDashboardPivotTotalOptionsOutput() DashboardPivotTotalOptionsOutput
	ToDashboardPivotTotalOptionsOutputWithContext(context.Context) DashboardPivotTotalOptionsOutput
}

type DashboardPivotTotalOptionsArgs struct {
	CustomLabel           pulumi.StringPtrInput                    `pulumi:"customLabel"`
	MetricHeaderCellStyle DashboardTableCellStylePtrInput          `pulumi:"metricHeaderCellStyle"`
	Placement             DashboardTableTotalsPlacementPtrInput    `pulumi:"placement"`
	ScrollStatus          DashboardTableTotalsScrollStatusPtrInput `pulumi:"scrollStatus"`
	TotalCellStyle        DashboardTableCellStylePtrInput          `pulumi:"totalCellStyle"`
	TotalsVisibility      DashboardVisibilityPtrInput              `pulumi:"totalsVisibility"`
	ValueCellStyle        DashboardTableCellStylePtrInput          `pulumi:"valueCellStyle"`
}

func (DashboardPivotTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTotalOptions)(nil)).Elem()
}

func (i DashboardPivotTotalOptionsArgs) ToDashboardPivotTotalOptionsOutput() DashboardPivotTotalOptionsOutput {
	return i.ToDashboardPivotTotalOptionsOutputWithContext(context.Background())
}

func (i DashboardPivotTotalOptionsArgs) ToDashboardPivotTotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTotalOptionsOutput)
}

func (i DashboardPivotTotalOptionsArgs) ToDashboardPivotTotalOptionsPtrOutput() DashboardPivotTotalOptionsPtrOutput {
	return i.ToDashboardPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPivotTotalOptionsArgs) ToDashboardPivotTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTotalOptionsOutput).ToDashboardPivotTotalOptionsPtrOutputWithContext(ctx)
}

// DashboardPivotTotalOptionsPtrInput is an input type that accepts DashboardPivotTotalOptionsArgs, DashboardPivotTotalOptionsPtr and DashboardPivotTotalOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPivotTotalOptionsPtrInput` via:
//
//	        DashboardPivotTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPivotTotalOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPivotTotalOptionsPtrOutput() DashboardPivotTotalOptionsPtrOutput
	ToDashboardPivotTotalOptionsPtrOutputWithContext(context.Context) DashboardPivotTotalOptionsPtrOutput
}

type dashboardPivotTotalOptionsPtrType DashboardPivotTotalOptionsArgs

func DashboardPivotTotalOptionsPtr(v *DashboardPivotTotalOptionsArgs) DashboardPivotTotalOptionsPtrInput {
	return (*dashboardPivotTotalOptionsPtrType)(v)
}

func (*dashboardPivotTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTotalOptions)(nil)).Elem()
}

func (i *dashboardPivotTotalOptionsPtrType) ToDashboardPivotTotalOptionsPtrOutput() DashboardPivotTotalOptionsPtrOutput {
	return i.ToDashboardPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPivotTotalOptionsPtrType) ToDashboardPivotTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPivotTotalOptionsPtrOutput)
}

type DashboardPivotTotalOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPivotTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPivotTotalOptions)(nil)).Elem()
}

func (o DashboardPivotTotalOptionsOutput) ToDashboardPivotTotalOptionsOutput() DashboardPivotTotalOptionsOutput {
	return o
}

func (o DashboardPivotTotalOptionsOutput) ToDashboardPivotTotalOptionsOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsOutput {
	return o
}

func (o DashboardPivotTotalOptionsOutput) ToDashboardPivotTotalOptionsPtrOutput() DashboardPivotTotalOptionsPtrOutput {
	return o.ToDashboardPivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPivotTotalOptionsOutput) ToDashboardPivotTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPivotTotalOptions) *DashboardPivotTotalOptions {
		return &v
	}).(DashboardPivotTotalOptionsPtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) MetricHeaderCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardTableCellStyle { return v.MetricHeaderCellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) Placement() DashboardTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardTableTotalsPlacement { return v.Placement }).(DashboardTableTotalsPlacementPtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) ScrollStatus() DashboardTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardTableTotalsScrollStatus { return v.ScrollStatus }).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardTableCellStyle { return v.TotalCellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardVisibility { return v.TotalsVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTotalOptionsOutput) ValueCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardPivotTotalOptions) *DashboardTableCellStyle { return v.ValueCellStyle }).(DashboardTableCellStylePtrOutput)
}

type DashboardPivotTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPivotTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPivotTotalOptions)(nil)).Elem()
}

func (o DashboardPivotTotalOptionsPtrOutput) ToDashboardPivotTotalOptionsPtrOutput() DashboardPivotTotalOptionsPtrOutput {
	return o
}

func (o DashboardPivotTotalOptionsPtrOutput) ToDashboardPivotTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardPivotTotalOptionsPtrOutput {
	return o
}

func (o DashboardPivotTotalOptionsPtrOutput) Elem() DashboardPivotTotalOptionsOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) DashboardPivotTotalOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPivotTotalOptions
		return ret
	}).(DashboardPivotTotalOptionsOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) MetricHeaderCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) Placement() DashboardTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(DashboardTableTotalsPlacementPtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) ScrollStatus() DashboardTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardPivotTotalOptionsPtrOutput) ValueCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardPivotTotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

type DashboardPredefinedHierarchy struct {
	Columns          []DashboardColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []DashboardDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                      `pulumi:"hierarchyId"`
}

// DashboardPredefinedHierarchyInput is an input type that accepts DashboardPredefinedHierarchyArgs and DashboardPredefinedHierarchyOutput values.
// You can construct a concrete instance of `DashboardPredefinedHierarchyInput` via:
//
//	DashboardPredefinedHierarchyArgs{...}
type DashboardPredefinedHierarchyInput interface {
	pulumi.Input

	ToDashboardPredefinedHierarchyOutput() DashboardPredefinedHierarchyOutput
	ToDashboardPredefinedHierarchyOutputWithContext(context.Context) DashboardPredefinedHierarchyOutput
}

type DashboardPredefinedHierarchyArgs struct {
	Columns          DashboardColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters DashboardDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                  `pulumi:"hierarchyId"`
}

func (DashboardPredefinedHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPredefinedHierarchy)(nil)).Elem()
}

func (i DashboardPredefinedHierarchyArgs) ToDashboardPredefinedHierarchyOutput() DashboardPredefinedHierarchyOutput {
	return i.ToDashboardPredefinedHierarchyOutputWithContext(context.Background())
}

func (i DashboardPredefinedHierarchyArgs) ToDashboardPredefinedHierarchyOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPredefinedHierarchyOutput)
}

func (i DashboardPredefinedHierarchyArgs) ToDashboardPredefinedHierarchyPtrOutput() DashboardPredefinedHierarchyPtrOutput {
	return i.ToDashboardPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i DashboardPredefinedHierarchyArgs) ToDashboardPredefinedHierarchyPtrOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPredefinedHierarchyOutput).ToDashboardPredefinedHierarchyPtrOutputWithContext(ctx)
}

// DashboardPredefinedHierarchyPtrInput is an input type that accepts DashboardPredefinedHierarchyArgs, DashboardPredefinedHierarchyPtr and DashboardPredefinedHierarchyPtrOutput values.
// You can construct a concrete instance of `DashboardPredefinedHierarchyPtrInput` via:
//
//	        DashboardPredefinedHierarchyArgs{...}
//
//	or:
//
//	        nil
type DashboardPredefinedHierarchyPtrInput interface {
	pulumi.Input

	ToDashboardPredefinedHierarchyPtrOutput() DashboardPredefinedHierarchyPtrOutput
	ToDashboardPredefinedHierarchyPtrOutputWithContext(context.Context) DashboardPredefinedHierarchyPtrOutput
}

type dashboardPredefinedHierarchyPtrType DashboardPredefinedHierarchyArgs

func DashboardPredefinedHierarchyPtr(v *DashboardPredefinedHierarchyArgs) DashboardPredefinedHierarchyPtrInput {
	return (*dashboardPredefinedHierarchyPtrType)(v)
}

func (*dashboardPredefinedHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPredefinedHierarchy)(nil)).Elem()
}

func (i *dashboardPredefinedHierarchyPtrType) ToDashboardPredefinedHierarchyPtrOutput() DashboardPredefinedHierarchyPtrOutput {
	return i.ToDashboardPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i *dashboardPredefinedHierarchyPtrType) ToDashboardPredefinedHierarchyPtrOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPredefinedHierarchyPtrOutput)
}

type DashboardPredefinedHierarchyOutput struct{ *pulumi.OutputState }

func (DashboardPredefinedHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPredefinedHierarchy)(nil)).Elem()
}

func (o DashboardPredefinedHierarchyOutput) ToDashboardPredefinedHierarchyOutput() DashboardPredefinedHierarchyOutput {
	return o
}

func (o DashboardPredefinedHierarchyOutput) ToDashboardPredefinedHierarchyOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyOutput {
	return o
}

func (o DashboardPredefinedHierarchyOutput) ToDashboardPredefinedHierarchyPtrOutput() DashboardPredefinedHierarchyPtrOutput {
	return o.ToDashboardPredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (o DashboardPredefinedHierarchyOutput) ToDashboardPredefinedHierarchyPtrOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPredefinedHierarchy) *DashboardPredefinedHierarchy {
		return &v
	}).(DashboardPredefinedHierarchyPtrOutput)
}

func (o DashboardPredefinedHierarchyOutput) Columns() DashboardColumnIdentifierArrayOutput {
	return o.ApplyT(func(v DashboardPredefinedHierarchy) []DashboardColumnIdentifier { return v.Columns }).(DashboardColumnIdentifierArrayOutput)
}

func (o DashboardPredefinedHierarchyOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v DashboardPredefinedHierarchy) []DashboardDrillDownFilter { return v.DrillDownFilters }).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardPredefinedHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPredefinedHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type DashboardPredefinedHierarchyPtrOutput struct{ *pulumi.OutputState }

func (DashboardPredefinedHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPredefinedHierarchy)(nil)).Elem()
}

func (o DashboardPredefinedHierarchyPtrOutput) ToDashboardPredefinedHierarchyPtrOutput() DashboardPredefinedHierarchyPtrOutput {
	return o
}

func (o DashboardPredefinedHierarchyPtrOutput) ToDashboardPredefinedHierarchyPtrOutputWithContext(ctx context.Context) DashboardPredefinedHierarchyPtrOutput {
	return o
}

func (o DashboardPredefinedHierarchyPtrOutput) Elem() DashboardPredefinedHierarchyOutput {
	return o.ApplyT(func(v *DashboardPredefinedHierarchy) DashboardPredefinedHierarchy {
		if v != nil {
			return *v
		}
		var ret DashboardPredefinedHierarchy
		return ret
	}).(DashboardPredefinedHierarchyOutput)
}

func (o DashboardPredefinedHierarchyPtrOutput) Columns() DashboardColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *DashboardPredefinedHierarchy) []DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DashboardColumnIdentifierArrayOutput)
}

func (o DashboardPredefinedHierarchyPtrOutput) DrillDownFilters() DashboardDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *DashboardPredefinedHierarchy) []DashboardDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(DashboardDrillDownFilterArrayOutput)
}

func (o DashboardPredefinedHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPredefinedHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type DashboardProgressBarOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardProgressBarOptionsInput is an input type that accepts DashboardProgressBarOptionsArgs and DashboardProgressBarOptionsOutput values.
// You can construct a concrete instance of `DashboardProgressBarOptionsInput` via:
//
//	DashboardProgressBarOptionsArgs{...}
type DashboardProgressBarOptionsInput interface {
	pulumi.Input

	ToDashboardProgressBarOptionsOutput() DashboardProgressBarOptionsOutput
	ToDashboardProgressBarOptionsOutputWithContext(context.Context) DashboardProgressBarOptionsOutput
}

type DashboardProgressBarOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardProgressBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardProgressBarOptions)(nil)).Elem()
}

func (i DashboardProgressBarOptionsArgs) ToDashboardProgressBarOptionsOutput() DashboardProgressBarOptionsOutput {
	return i.ToDashboardProgressBarOptionsOutputWithContext(context.Background())
}

func (i DashboardProgressBarOptionsArgs) ToDashboardProgressBarOptionsOutputWithContext(ctx context.Context) DashboardProgressBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardProgressBarOptionsOutput)
}

func (i DashboardProgressBarOptionsArgs) ToDashboardProgressBarOptionsPtrOutput() DashboardProgressBarOptionsPtrOutput {
	return i.ToDashboardProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardProgressBarOptionsArgs) ToDashboardProgressBarOptionsPtrOutputWithContext(ctx context.Context) DashboardProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardProgressBarOptionsOutput).ToDashboardProgressBarOptionsPtrOutputWithContext(ctx)
}

// DashboardProgressBarOptionsPtrInput is an input type that accepts DashboardProgressBarOptionsArgs, DashboardProgressBarOptionsPtr and DashboardProgressBarOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardProgressBarOptionsPtrInput` via:
//
//	        DashboardProgressBarOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardProgressBarOptionsPtrInput interface {
	pulumi.Input

	ToDashboardProgressBarOptionsPtrOutput() DashboardProgressBarOptionsPtrOutput
	ToDashboardProgressBarOptionsPtrOutputWithContext(context.Context) DashboardProgressBarOptionsPtrOutput
}

type dashboardProgressBarOptionsPtrType DashboardProgressBarOptionsArgs

func DashboardProgressBarOptionsPtr(v *DashboardProgressBarOptionsArgs) DashboardProgressBarOptionsPtrInput {
	return (*dashboardProgressBarOptionsPtrType)(v)
}

func (*dashboardProgressBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardProgressBarOptions)(nil)).Elem()
}

func (i *dashboardProgressBarOptionsPtrType) ToDashboardProgressBarOptionsPtrOutput() DashboardProgressBarOptionsPtrOutput {
	return i.ToDashboardProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardProgressBarOptionsPtrType) ToDashboardProgressBarOptionsPtrOutputWithContext(ctx context.Context) DashboardProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardProgressBarOptionsPtrOutput)
}

type DashboardProgressBarOptionsOutput struct{ *pulumi.OutputState }

func (DashboardProgressBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardProgressBarOptions)(nil)).Elem()
}

func (o DashboardProgressBarOptionsOutput) ToDashboardProgressBarOptionsOutput() DashboardProgressBarOptionsOutput {
	return o
}

func (o DashboardProgressBarOptionsOutput) ToDashboardProgressBarOptionsOutputWithContext(ctx context.Context) DashboardProgressBarOptionsOutput {
	return o
}

func (o DashboardProgressBarOptionsOutput) ToDashboardProgressBarOptionsPtrOutput() DashboardProgressBarOptionsPtrOutput {
	return o.ToDashboardProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardProgressBarOptionsOutput) ToDashboardProgressBarOptionsPtrOutputWithContext(ctx context.Context) DashboardProgressBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardProgressBarOptions) *DashboardProgressBarOptions {
		return &v
	}).(DashboardProgressBarOptionsPtrOutput)
}

func (o DashboardProgressBarOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardProgressBarOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardProgressBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardProgressBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardProgressBarOptions)(nil)).Elem()
}

func (o DashboardProgressBarOptionsPtrOutput) ToDashboardProgressBarOptionsPtrOutput() DashboardProgressBarOptionsPtrOutput {
	return o
}

func (o DashboardProgressBarOptionsPtrOutput) ToDashboardProgressBarOptionsPtrOutputWithContext(ctx context.Context) DashboardProgressBarOptionsPtrOutput {
	return o
}

func (o DashboardProgressBarOptionsPtrOutput) Elem() DashboardProgressBarOptionsOutput {
	return o.ApplyT(func(v *DashboardProgressBarOptions) DashboardProgressBarOptions {
		if v != nil {
			return *v
		}
		var ret DashboardProgressBarOptions
		return ret
	}).(DashboardProgressBarOptionsOutput)
}

func (o DashboardProgressBarOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardProgressBarOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardPublishOptions struct {
	AdHocFilteringOption                 *DashboardAdHocFilteringOption                 `pulumi:"adHocFilteringOption"`
	DataPointDrillUpDownOption           *DashboardDataPointDrillUpDownOption           `pulumi:"dataPointDrillUpDownOption"`
	DataPointMenuLabelOption             *DashboardDataPointMenuLabelOption             `pulumi:"dataPointMenuLabelOption"`
	DataPointTooltipOption               *DashboardDataPointTooltipOption               `pulumi:"dataPointTooltipOption"`
	ExportToCSVOption                    *DashboardExportToCSVOption                    `pulumi:"exportToCSVOption"`
	ExportWithHiddenFieldsOption         *DashboardExportWithHiddenFieldsOption         `pulumi:"exportWithHiddenFieldsOption"`
	SheetControlsOption                  *DashboardSheetControlsOption                  `pulumi:"sheetControlsOption"`
	SheetLayoutElementMaximizationOption *DashboardSheetLayoutElementMaximizationOption `pulumi:"sheetLayoutElementMaximizationOption"`
	VisualAxisSortOption                 *DashboardVisualAxisSortOption                 `pulumi:"visualAxisSortOption"`
	VisualMenuOption                     *DashboardVisualMenuOption                     `pulumi:"visualMenuOption"`
	VisualPublishOptions                 *DashboardVisualPublishOptions                 `pulumi:"visualPublishOptions"`
}

// DashboardPublishOptionsInput is an input type that accepts DashboardPublishOptionsArgs and DashboardPublishOptionsOutput values.
// You can construct a concrete instance of `DashboardPublishOptionsInput` via:
//
//	DashboardPublishOptionsArgs{...}
type DashboardPublishOptionsInput interface {
	pulumi.Input

	ToDashboardPublishOptionsOutput() DashboardPublishOptionsOutput
	ToDashboardPublishOptionsOutputWithContext(context.Context) DashboardPublishOptionsOutput
}

type DashboardPublishOptionsArgs struct {
	AdHocFilteringOption                 DashboardAdHocFilteringOptionPtrInput                 `pulumi:"adHocFilteringOption"`
	DataPointDrillUpDownOption           DashboardDataPointDrillUpDownOptionPtrInput           `pulumi:"dataPointDrillUpDownOption"`
	DataPointMenuLabelOption             DashboardDataPointMenuLabelOptionPtrInput             `pulumi:"dataPointMenuLabelOption"`
	DataPointTooltipOption               DashboardDataPointTooltipOptionPtrInput               `pulumi:"dataPointTooltipOption"`
	ExportToCSVOption                    DashboardExportToCSVOptionPtrInput                    `pulumi:"exportToCSVOption"`
	ExportWithHiddenFieldsOption         DashboardExportWithHiddenFieldsOptionPtrInput         `pulumi:"exportWithHiddenFieldsOption"`
	SheetControlsOption                  DashboardSheetControlsOptionPtrInput                  `pulumi:"sheetControlsOption"`
	SheetLayoutElementMaximizationOption DashboardSheetLayoutElementMaximizationOptionPtrInput `pulumi:"sheetLayoutElementMaximizationOption"`
	VisualAxisSortOption                 DashboardVisualAxisSortOptionPtrInput                 `pulumi:"visualAxisSortOption"`
	VisualMenuOption                     DashboardVisualMenuOptionPtrInput                     `pulumi:"visualMenuOption"`
	VisualPublishOptions                 DashboardVisualPublishOptionsPtrInput                 `pulumi:"visualPublishOptions"`
}

func (DashboardPublishOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPublishOptions)(nil)).Elem()
}

func (i DashboardPublishOptionsArgs) ToDashboardPublishOptionsOutput() DashboardPublishOptionsOutput {
	return i.ToDashboardPublishOptionsOutputWithContext(context.Background())
}

func (i DashboardPublishOptionsArgs) ToDashboardPublishOptionsOutputWithContext(ctx context.Context) DashboardPublishOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPublishOptionsOutput)
}

func (i DashboardPublishOptionsArgs) ToDashboardPublishOptionsPtrOutput() DashboardPublishOptionsPtrOutput {
	return i.ToDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardPublishOptionsArgs) ToDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPublishOptionsOutput).ToDashboardPublishOptionsPtrOutputWithContext(ctx)
}

// DashboardPublishOptionsPtrInput is an input type that accepts DashboardPublishOptionsArgs, DashboardPublishOptionsPtr and DashboardPublishOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardPublishOptionsPtrInput` via:
//
//	        DashboardPublishOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardPublishOptionsPtrInput interface {
	pulumi.Input

	ToDashboardPublishOptionsPtrOutput() DashboardPublishOptionsPtrOutput
	ToDashboardPublishOptionsPtrOutputWithContext(context.Context) DashboardPublishOptionsPtrOutput
}

type dashboardPublishOptionsPtrType DashboardPublishOptionsArgs

func DashboardPublishOptionsPtr(v *DashboardPublishOptionsArgs) DashboardPublishOptionsPtrInput {
	return (*dashboardPublishOptionsPtrType)(v)
}

func (*dashboardPublishOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPublishOptions)(nil)).Elem()
}

func (i *dashboardPublishOptionsPtrType) ToDashboardPublishOptionsPtrOutput() DashboardPublishOptionsPtrOutput {
	return i.ToDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardPublishOptionsPtrType) ToDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPublishOptionsPtrOutput)
}

type DashboardPublishOptionsOutput struct{ *pulumi.OutputState }

func (DashboardPublishOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPublishOptions)(nil)).Elem()
}

func (o DashboardPublishOptionsOutput) ToDashboardPublishOptionsOutput() DashboardPublishOptionsOutput {
	return o
}

func (o DashboardPublishOptionsOutput) ToDashboardPublishOptionsOutputWithContext(ctx context.Context) DashboardPublishOptionsOutput {
	return o
}

func (o DashboardPublishOptionsOutput) ToDashboardPublishOptionsPtrOutput() DashboardPublishOptionsPtrOutput {
	return o.ToDashboardPublishOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardPublishOptionsOutput) ToDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardPublishOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPublishOptions) *DashboardPublishOptions {
		return &v
	}).(DashboardPublishOptionsPtrOutput)
}

func (o DashboardPublishOptionsOutput) AdHocFilteringOption() DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardAdHocFilteringOption { return v.AdHocFilteringOption }).(DashboardAdHocFilteringOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) DataPointDrillUpDownOption() DashboardDataPointDrillUpDownOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardDataPointDrillUpDownOption {
		return v.DataPointDrillUpDownOption
	}).(DashboardDataPointDrillUpDownOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) DataPointMenuLabelOption() DashboardDataPointMenuLabelOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardDataPointMenuLabelOption { return v.DataPointMenuLabelOption }).(DashboardDataPointMenuLabelOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) DataPointTooltipOption() DashboardDataPointTooltipOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardDataPointTooltipOption { return v.DataPointTooltipOption }).(DashboardDataPointTooltipOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) ExportToCSVOption() DashboardExportToCSVOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardExportToCSVOption { return v.ExportToCSVOption }).(DashboardExportToCSVOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) ExportWithHiddenFieldsOption() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardExportWithHiddenFieldsOption {
		return v.ExportWithHiddenFieldsOption
	}).(DashboardExportWithHiddenFieldsOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) SheetControlsOption() DashboardSheetControlsOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardSheetControlsOption { return v.SheetControlsOption }).(DashboardSheetControlsOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) SheetLayoutElementMaximizationOption() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardSheetLayoutElementMaximizationOption {
		return v.SheetLayoutElementMaximizationOption
	}).(DashboardSheetLayoutElementMaximizationOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) VisualAxisSortOption() DashboardVisualAxisSortOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardVisualAxisSortOption { return v.VisualAxisSortOption }).(DashboardVisualAxisSortOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) VisualMenuOption() DashboardVisualMenuOptionPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardVisualMenuOption { return v.VisualMenuOption }).(DashboardVisualMenuOptionPtrOutput)
}

func (o DashboardPublishOptionsOutput) VisualPublishOptions() DashboardVisualPublishOptionsPtrOutput {
	return o.ApplyT(func(v DashboardPublishOptions) *DashboardVisualPublishOptions { return v.VisualPublishOptions }).(DashboardVisualPublishOptionsPtrOutput)
}

type DashboardPublishOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardPublishOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPublishOptions)(nil)).Elem()
}

func (o DashboardPublishOptionsPtrOutput) ToDashboardPublishOptionsPtrOutput() DashboardPublishOptionsPtrOutput {
	return o
}

func (o DashboardPublishOptionsPtrOutput) ToDashboardPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardPublishOptionsPtrOutput {
	return o
}

func (o DashboardPublishOptionsPtrOutput) Elem() DashboardPublishOptionsOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) DashboardPublishOptions {
		if v != nil {
			return *v
		}
		var ret DashboardPublishOptions
		return ret
	}).(DashboardPublishOptionsOutput)
}

func (o DashboardPublishOptionsPtrOutput) AdHocFilteringOption() DashboardAdHocFilteringOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardAdHocFilteringOption {
		if v == nil {
			return nil
		}
		return v.AdHocFilteringOption
	}).(DashboardAdHocFilteringOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) DataPointDrillUpDownOption() DashboardDataPointDrillUpDownOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardDataPointDrillUpDownOption {
		if v == nil {
			return nil
		}
		return v.DataPointDrillUpDownOption
	}).(DashboardDataPointDrillUpDownOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) DataPointMenuLabelOption() DashboardDataPointMenuLabelOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardDataPointMenuLabelOption {
		if v == nil {
			return nil
		}
		return v.DataPointMenuLabelOption
	}).(DashboardDataPointMenuLabelOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) DataPointTooltipOption() DashboardDataPointTooltipOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardDataPointTooltipOption {
		if v == nil {
			return nil
		}
		return v.DataPointTooltipOption
	}).(DashboardDataPointTooltipOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) ExportToCSVOption() DashboardExportToCSVOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardExportToCSVOption {
		if v == nil {
			return nil
		}
		return v.ExportToCSVOption
	}).(DashboardExportToCSVOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) ExportWithHiddenFieldsOption() DashboardExportWithHiddenFieldsOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardExportWithHiddenFieldsOption {
		if v == nil {
			return nil
		}
		return v.ExportWithHiddenFieldsOption
	}).(DashboardExportWithHiddenFieldsOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) SheetControlsOption() DashboardSheetControlsOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardSheetControlsOption {
		if v == nil {
			return nil
		}
		return v.SheetControlsOption
	}).(DashboardSheetControlsOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) SheetLayoutElementMaximizationOption() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardSheetLayoutElementMaximizationOption {
		if v == nil {
			return nil
		}
		return v.SheetLayoutElementMaximizationOption
	}).(DashboardSheetLayoutElementMaximizationOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) VisualAxisSortOption() DashboardVisualAxisSortOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardVisualAxisSortOption {
		if v == nil {
			return nil
		}
		return v.VisualAxisSortOption
	}).(DashboardVisualAxisSortOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) VisualMenuOption() DashboardVisualMenuOptionPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardVisualMenuOption {
		if v == nil {
			return nil
		}
		return v.VisualMenuOption
	}).(DashboardVisualMenuOptionPtrOutput)
}

func (o DashboardPublishOptionsPtrOutput) VisualPublishOptions() DashboardVisualPublishOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardPublishOptions) *DashboardVisualPublishOptions {
		if v == nil {
			return nil
		}
		return v.VisualPublishOptions
	}).(DashboardVisualPublishOptionsPtrOutput)
}

type DashboardRadarChartAggregatedFieldWells struct {
	Category []DashboardDimensionField `pulumi:"category"`
	Color    []DashboardDimensionField `pulumi:"color"`
	Values   []DashboardMeasureField   `pulumi:"values"`
}

// DashboardRadarChartAggregatedFieldWellsInput is an input type that accepts DashboardRadarChartAggregatedFieldWellsArgs and DashboardRadarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardRadarChartAggregatedFieldWellsInput` via:
//
//	DashboardRadarChartAggregatedFieldWellsArgs{...}
type DashboardRadarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardRadarChartAggregatedFieldWellsOutput() DashboardRadarChartAggregatedFieldWellsOutput
	ToDashboardRadarChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardRadarChartAggregatedFieldWellsOutput
}

type DashboardRadarChartAggregatedFieldWellsArgs struct {
	Category DashboardDimensionFieldArrayInput `pulumi:"category"`
	Color    DashboardDimensionFieldArrayInput `pulumi:"color"`
	Values   DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardRadarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardRadarChartAggregatedFieldWellsArgs) ToDashboardRadarChartAggregatedFieldWellsOutput() DashboardRadarChartAggregatedFieldWellsOutput {
	return i.ToDashboardRadarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardRadarChartAggregatedFieldWellsArgs) ToDashboardRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAggregatedFieldWellsOutput)
}

func (i DashboardRadarChartAggregatedFieldWellsArgs) ToDashboardRadarChartAggregatedFieldWellsPtrOutput() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartAggregatedFieldWellsArgs) ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAggregatedFieldWellsOutput).ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardRadarChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardRadarChartAggregatedFieldWellsArgs, DashboardRadarChartAggregatedFieldWellsPtr and DashboardRadarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardRadarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartAggregatedFieldWellsPtrOutput() DashboardRadarChartAggregatedFieldWellsPtrOutput
	ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardRadarChartAggregatedFieldWellsPtrOutput
}

type dashboardRadarChartAggregatedFieldWellsPtrType DashboardRadarChartAggregatedFieldWellsArgs

func DashboardRadarChartAggregatedFieldWellsPtr(v *DashboardRadarChartAggregatedFieldWellsArgs) DashboardRadarChartAggregatedFieldWellsPtrInput {
	return (*dashboardRadarChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardRadarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardRadarChartAggregatedFieldWellsPtrType) ToDashboardRadarChartAggregatedFieldWellsPtrOutput() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartAggregatedFieldWellsPtrType) ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAggregatedFieldWellsPtrOutput)
}

type DashboardRadarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) ToDashboardRadarChartAggregatedFieldWellsOutput() DashboardRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) ToDashboardRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) ToDashboardRadarChartAggregatedFieldWellsPtrOutput() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartAggregatedFieldWells) *DashboardRadarChartAggregatedFieldWells {
		return &v
	}).(DashboardRadarChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartAggregatedFieldWells) []DashboardDimensionField { return v.Category }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) Color() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartAggregatedFieldWells) []DashboardDimensionField { return v.Color }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardRadarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) ToDashboardRadarChartAggregatedFieldWellsPtrOutput() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) ToDashboardRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) Elem() DashboardRadarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardRadarChartAggregatedFieldWells) DashboardRadarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartAggregatedFieldWells
		return ret
	}).(DashboardRadarChartAggregatedFieldWellsOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) Color() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Color
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardRadarChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardRadarChartAreaStyleSettings struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardRadarChartAreaStyleSettingsInput is an input type that accepts DashboardRadarChartAreaStyleSettingsArgs and DashboardRadarChartAreaStyleSettingsOutput values.
// You can construct a concrete instance of `DashboardRadarChartAreaStyleSettingsInput` via:
//
//	DashboardRadarChartAreaStyleSettingsArgs{...}
type DashboardRadarChartAreaStyleSettingsInput interface {
	pulumi.Input

	ToDashboardRadarChartAreaStyleSettingsOutput() DashboardRadarChartAreaStyleSettingsOutput
	ToDashboardRadarChartAreaStyleSettingsOutputWithContext(context.Context) DashboardRadarChartAreaStyleSettingsOutput
}

type DashboardRadarChartAreaStyleSettingsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardRadarChartAreaStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i DashboardRadarChartAreaStyleSettingsArgs) ToDashboardRadarChartAreaStyleSettingsOutput() DashboardRadarChartAreaStyleSettingsOutput {
	return i.ToDashboardRadarChartAreaStyleSettingsOutputWithContext(context.Background())
}

func (i DashboardRadarChartAreaStyleSettingsArgs) ToDashboardRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAreaStyleSettingsOutput)
}

func (i DashboardRadarChartAreaStyleSettingsArgs) ToDashboardRadarChartAreaStyleSettingsPtrOutput() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return i.ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartAreaStyleSettingsArgs) ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAreaStyleSettingsOutput).ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(ctx)
}

// DashboardRadarChartAreaStyleSettingsPtrInput is an input type that accepts DashboardRadarChartAreaStyleSettingsArgs, DashboardRadarChartAreaStyleSettingsPtr and DashboardRadarChartAreaStyleSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartAreaStyleSettingsPtrInput` via:
//
//	        DashboardRadarChartAreaStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartAreaStyleSettingsPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartAreaStyleSettingsPtrOutput() DashboardRadarChartAreaStyleSettingsPtrOutput
	ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(context.Context) DashboardRadarChartAreaStyleSettingsPtrOutput
}

type dashboardRadarChartAreaStyleSettingsPtrType DashboardRadarChartAreaStyleSettingsArgs

func DashboardRadarChartAreaStyleSettingsPtr(v *DashboardRadarChartAreaStyleSettingsArgs) DashboardRadarChartAreaStyleSettingsPtrInput {
	return (*dashboardRadarChartAreaStyleSettingsPtrType)(v)
}

func (*dashboardRadarChartAreaStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i *dashboardRadarChartAreaStyleSettingsPtrType) ToDashboardRadarChartAreaStyleSettingsPtrOutput() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return i.ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartAreaStyleSettingsPtrType) ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartAreaStyleSettingsPtrOutput)
}

type DashboardRadarChartAreaStyleSettingsOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAreaStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o DashboardRadarChartAreaStyleSettingsOutput) ToDashboardRadarChartAreaStyleSettingsOutput() DashboardRadarChartAreaStyleSettingsOutput {
	return o
}

func (o DashboardRadarChartAreaStyleSettingsOutput) ToDashboardRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsOutput {
	return o
}

func (o DashboardRadarChartAreaStyleSettingsOutput) ToDashboardRadarChartAreaStyleSettingsPtrOutput() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o.ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartAreaStyleSettingsOutput) ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartAreaStyleSettings) *DashboardRadarChartAreaStyleSettings {
		return &v
	}).(DashboardRadarChartAreaStyleSettingsPtrOutput)
}

func (o DashboardRadarChartAreaStyleSettingsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartAreaStyleSettings) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardRadarChartAreaStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartAreaStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o DashboardRadarChartAreaStyleSettingsPtrOutput) ToDashboardRadarChartAreaStyleSettingsPtrOutput() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o DashboardRadarChartAreaStyleSettingsPtrOutput) ToDashboardRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o DashboardRadarChartAreaStyleSettingsPtrOutput) Elem() DashboardRadarChartAreaStyleSettingsOutput {
	return o.ApplyT(func(v *DashboardRadarChartAreaStyleSettings) DashboardRadarChartAreaStyleSettings {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartAreaStyleSettings
		return ret
	}).(DashboardRadarChartAreaStyleSettingsOutput)
}

func (o DashboardRadarChartAreaStyleSettingsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartAreaStyleSettings) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardRadarChartConfiguration struct {
	AlternateBandColorsVisibility *DashboardVisibility                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        *string                               `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         *string                               `pulumi:"alternateBandOddColor"`
	BaseSeriesSettings            *DashboardRadarChartSeriesSettings    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  *DashboardAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions          *DashboardChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorAxis                     *DashboardAxisDisplayOptions          `pulumi:"colorAxis"`
	ColorLabelOptions             *DashboardChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                    *DashboardRadarChartFieldWells        `pulumi:"fieldWells"`
	Legend                        *DashboardLegendOptions               `pulumi:"legend"`
	Shape                         *DashboardRadarChartShape             `pulumi:"shape"`
	SortConfiguration             *DashboardRadarChartSortConfiguration `pulumi:"sortConfiguration"`
	StartAngle                    *float64                              `pulumi:"startAngle"`
	VisualPalette                 *DashboardVisualPalette               `pulumi:"visualPalette"`
}

// DashboardRadarChartConfigurationInput is an input type that accepts DashboardRadarChartConfigurationArgs and DashboardRadarChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardRadarChartConfigurationInput` via:
//
//	DashboardRadarChartConfigurationArgs{...}
type DashboardRadarChartConfigurationInput interface {
	pulumi.Input

	ToDashboardRadarChartConfigurationOutput() DashboardRadarChartConfigurationOutput
	ToDashboardRadarChartConfigurationOutputWithContext(context.Context) DashboardRadarChartConfigurationOutput
}

type DashboardRadarChartConfigurationArgs struct {
	AlternateBandColorsVisibility DashboardVisibilityPtrInput                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        pulumi.StringPtrInput                        `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         pulumi.StringPtrInput                        `pulumi:"alternateBandOddColor"`
	BaseSeriesSettings            DashboardRadarChartSeriesSettingsPtrInput    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  DashboardAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions          DashboardChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorAxis                     DashboardAxisDisplayOptionsPtrInput          `pulumi:"colorAxis"`
	ColorLabelOptions             DashboardChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                    DashboardRadarChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                        DashboardLegendOptionsPtrInput               `pulumi:"legend"`
	Shape                         DashboardRadarChartShapePtrInput             `pulumi:"shape"`
	SortConfiguration             DashboardRadarChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	StartAngle                    pulumi.Float64PtrInput                       `pulumi:"startAngle"`
	VisualPalette                 DashboardVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (DashboardRadarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartConfiguration)(nil)).Elem()
}

func (i DashboardRadarChartConfigurationArgs) ToDashboardRadarChartConfigurationOutput() DashboardRadarChartConfigurationOutput {
	return i.ToDashboardRadarChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardRadarChartConfigurationArgs) ToDashboardRadarChartConfigurationOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartConfigurationOutput)
}

func (i DashboardRadarChartConfigurationArgs) ToDashboardRadarChartConfigurationPtrOutput() DashboardRadarChartConfigurationPtrOutput {
	return i.ToDashboardRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartConfigurationArgs) ToDashboardRadarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartConfigurationOutput).ToDashboardRadarChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardRadarChartConfigurationPtrInput is an input type that accepts DashboardRadarChartConfigurationArgs, DashboardRadarChartConfigurationPtr and DashboardRadarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartConfigurationPtrInput` via:
//
//	        DashboardRadarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartConfigurationPtrOutput() DashboardRadarChartConfigurationPtrOutput
	ToDashboardRadarChartConfigurationPtrOutputWithContext(context.Context) DashboardRadarChartConfigurationPtrOutput
}

type dashboardRadarChartConfigurationPtrType DashboardRadarChartConfigurationArgs

func DashboardRadarChartConfigurationPtr(v *DashboardRadarChartConfigurationArgs) DashboardRadarChartConfigurationPtrInput {
	return (*dashboardRadarChartConfigurationPtrType)(v)
}

func (*dashboardRadarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartConfiguration)(nil)).Elem()
}

func (i *dashboardRadarChartConfigurationPtrType) ToDashboardRadarChartConfigurationPtrOutput() DashboardRadarChartConfigurationPtrOutput {
	return i.ToDashboardRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartConfigurationPtrType) ToDashboardRadarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartConfigurationPtrOutput)
}

type DashboardRadarChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartConfiguration)(nil)).Elem()
}

func (o DashboardRadarChartConfigurationOutput) ToDashboardRadarChartConfigurationOutput() DashboardRadarChartConfigurationOutput {
	return o
}

func (o DashboardRadarChartConfigurationOutput) ToDashboardRadarChartConfigurationOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationOutput {
	return o
}

func (o DashboardRadarChartConfigurationOutput) ToDashboardRadarChartConfigurationPtrOutput() DashboardRadarChartConfigurationPtrOutput {
	return o.ToDashboardRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartConfigurationOutput) ToDashboardRadarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartConfiguration) *DashboardRadarChartConfiguration {
		return &v
	}).(DashboardRadarChartConfigurationPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) AlternateBandColorsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardVisibility { return v.AlternateBandColorsVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *string { return v.AlternateBandEvenColor }).(pulumi.StringPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *string { return v.AlternateBandOddColor }).(pulumi.StringPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) BaseSeriesSettings() DashboardRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardRadarChartSeriesSettings {
		return v.BaseSeriesSettings
	}).(DashboardRadarChartSeriesSettingsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardAxisDisplayOptions { return v.CategoryAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) ColorAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardAxisDisplayOptions { return v.ColorAxis }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardChartAxisLabelOptions { return v.ColorLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) FieldWells() DashboardRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardRadarChartFieldWells { return v.FieldWells }).(DashboardRadarChartFieldWellsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) Shape() DashboardRadarChartShapePtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardRadarChartShape { return v.Shape }).(DashboardRadarChartShapePtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) SortConfiguration() DashboardRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardRadarChartSortConfiguration {
		return v.SortConfiguration
	}).(DashboardRadarChartSortConfigurationPtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *float64 { return v.StartAngle }).(pulumi.Float64PtrOutput)
}

func (o DashboardRadarChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardRadarChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

type DashboardRadarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartConfiguration)(nil)).Elem()
}

func (o DashboardRadarChartConfigurationPtrOutput) ToDashboardRadarChartConfigurationPtrOutput() DashboardRadarChartConfigurationPtrOutput {
	return o
}

func (o DashboardRadarChartConfigurationPtrOutput) ToDashboardRadarChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartConfigurationPtrOutput {
	return o
}

func (o DashboardRadarChartConfigurationPtrOutput) Elem() DashboardRadarChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) DashboardRadarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartConfiguration
		return ret
	}).(DashboardRadarChartConfigurationOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) AlternateBandColorsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.AlternateBandColorsVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandEvenColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandOddColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) BaseSeriesSettings() DashboardRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardRadarChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.BaseSeriesSettings
	}).(DashboardRadarChartSeriesSettingsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) CategoryAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) ColorAxis() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ColorAxis
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) FieldWells() DashboardRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardRadarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardRadarChartFieldWellsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) Shape() DashboardRadarChartShapePtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardRadarChartShape {
		if v == nil {
			return nil
		}
		return v.Shape
	}).(DashboardRadarChartShapePtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) SortConfiguration() DashboardRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardRadarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardRadarChartSortConfigurationPtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.StartAngle
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardRadarChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

type DashboardRadarChartFieldWells struct {
	RadarChartAggregatedFieldWells *DashboardRadarChartAggregatedFieldWells `pulumi:"radarChartAggregatedFieldWells"`
}

// DashboardRadarChartFieldWellsInput is an input type that accepts DashboardRadarChartFieldWellsArgs and DashboardRadarChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardRadarChartFieldWellsInput` via:
//
//	DashboardRadarChartFieldWellsArgs{...}
type DashboardRadarChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardRadarChartFieldWellsOutput() DashboardRadarChartFieldWellsOutput
	ToDashboardRadarChartFieldWellsOutputWithContext(context.Context) DashboardRadarChartFieldWellsOutput
}

type DashboardRadarChartFieldWellsArgs struct {
	RadarChartAggregatedFieldWells DashboardRadarChartAggregatedFieldWellsPtrInput `pulumi:"radarChartAggregatedFieldWells"`
}

func (DashboardRadarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartFieldWells)(nil)).Elem()
}

func (i DashboardRadarChartFieldWellsArgs) ToDashboardRadarChartFieldWellsOutput() DashboardRadarChartFieldWellsOutput {
	return i.ToDashboardRadarChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardRadarChartFieldWellsArgs) ToDashboardRadarChartFieldWellsOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartFieldWellsOutput)
}

func (i DashboardRadarChartFieldWellsArgs) ToDashboardRadarChartFieldWellsPtrOutput() DashboardRadarChartFieldWellsPtrOutput {
	return i.ToDashboardRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartFieldWellsArgs) ToDashboardRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartFieldWellsOutput).ToDashboardRadarChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardRadarChartFieldWellsPtrInput is an input type that accepts DashboardRadarChartFieldWellsArgs, DashboardRadarChartFieldWellsPtr and DashboardRadarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartFieldWellsPtrInput` via:
//
//	        DashboardRadarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartFieldWellsPtrOutput() DashboardRadarChartFieldWellsPtrOutput
	ToDashboardRadarChartFieldWellsPtrOutputWithContext(context.Context) DashboardRadarChartFieldWellsPtrOutput
}

type dashboardRadarChartFieldWellsPtrType DashboardRadarChartFieldWellsArgs

func DashboardRadarChartFieldWellsPtr(v *DashboardRadarChartFieldWellsArgs) DashboardRadarChartFieldWellsPtrInput {
	return (*dashboardRadarChartFieldWellsPtrType)(v)
}

func (*dashboardRadarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartFieldWells)(nil)).Elem()
}

func (i *dashboardRadarChartFieldWellsPtrType) ToDashboardRadarChartFieldWellsPtrOutput() DashboardRadarChartFieldWellsPtrOutput {
	return i.ToDashboardRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartFieldWellsPtrType) ToDashboardRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartFieldWellsPtrOutput)
}

type DashboardRadarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartFieldWells)(nil)).Elem()
}

func (o DashboardRadarChartFieldWellsOutput) ToDashboardRadarChartFieldWellsOutput() DashboardRadarChartFieldWellsOutput {
	return o
}

func (o DashboardRadarChartFieldWellsOutput) ToDashboardRadarChartFieldWellsOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsOutput {
	return o
}

func (o DashboardRadarChartFieldWellsOutput) ToDashboardRadarChartFieldWellsPtrOutput() DashboardRadarChartFieldWellsPtrOutput {
	return o.ToDashboardRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartFieldWellsOutput) ToDashboardRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartFieldWells) *DashboardRadarChartFieldWells {
		return &v
	}).(DashboardRadarChartFieldWellsPtrOutput)
}

func (o DashboardRadarChartFieldWellsOutput) RadarChartAggregatedFieldWells() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartFieldWells) *DashboardRadarChartAggregatedFieldWells {
		return v.RadarChartAggregatedFieldWells
	}).(DashboardRadarChartAggregatedFieldWellsPtrOutput)
}

type DashboardRadarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartFieldWells)(nil)).Elem()
}

func (o DashboardRadarChartFieldWellsPtrOutput) ToDashboardRadarChartFieldWellsPtrOutput() DashboardRadarChartFieldWellsPtrOutput {
	return o
}

func (o DashboardRadarChartFieldWellsPtrOutput) ToDashboardRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardRadarChartFieldWellsPtrOutput {
	return o
}

func (o DashboardRadarChartFieldWellsPtrOutput) Elem() DashboardRadarChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardRadarChartFieldWells) DashboardRadarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartFieldWells
		return ret
	}).(DashboardRadarChartFieldWellsOutput)
}

func (o DashboardRadarChartFieldWellsPtrOutput) RadarChartAggregatedFieldWells() DashboardRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartFieldWells) *DashboardRadarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.RadarChartAggregatedFieldWells
	}).(DashboardRadarChartAggregatedFieldWellsPtrOutput)
}

type DashboardRadarChartSeriesSettings struct {
	AreaStyleSettings *DashboardRadarChartAreaStyleSettings `pulumi:"areaStyleSettings"`
}

// DashboardRadarChartSeriesSettingsInput is an input type that accepts DashboardRadarChartSeriesSettingsArgs and DashboardRadarChartSeriesSettingsOutput values.
// You can construct a concrete instance of `DashboardRadarChartSeriesSettingsInput` via:
//
//	DashboardRadarChartSeriesSettingsArgs{...}
type DashboardRadarChartSeriesSettingsInput interface {
	pulumi.Input

	ToDashboardRadarChartSeriesSettingsOutput() DashboardRadarChartSeriesSettingsOutput
	ToDashboardRadarChartSeriesSettingsOutputWithContext(context.Context) DashboardRadarChartSeriesSettingsOutput
}

type DashboardRadarChartSeriesSettingsArgs struct {
	AreaStyleSettings DashboardRadarChartAreaStyleSettingsPtrInput `pulumi:"areaStyleSettings"`
}

func (DashboardRadarChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartSeriesSettings)(nil)).Elem()
}

func (i DashboardRadarChartSeriesSettingsArgs) ToDashboardRadarChartSeriesSettingsOutput() DashboardRadarChartSeriesSettingsOutput {
	return i.ToDashboardRadarChartSeriesSettingsOutputWithContext(context.Background())
}

func (i DashboardRadarChartSeriesSettingsArgs) ToDashboardRadarChartSeriesSettingsOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSeriesSettingsOutput)
}

func (i DashboardRadarChartSeriesSettingsArgs) ToDashboardRadarChartSeriesSettingsPtrOutput() DashboardRadarChartSeriesSettingsPtrOutput {
	return i.ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartSeriesSettingsArgs) ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSeriesSettingsOutput).ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(ctx)
}

// DashboardRadarChartSeriesSettingsPtrInput is an input type that accepts DashboardRadarChartSeriesSettingsArgs, DashboardRadarChartSeriesSettingsPtr and DashboardRadarChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartSeriesSettingsPtrInput` via:
//
//	        DashboardRadarChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartSeriesSettingsPtrOutput() DashboardRadarChartSeriesSettingsPtrOutput
	ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(context.Context) DashboardRadarChartSeriesSettingsPtrOutput
}

type dashboardRadarChartSeriesSettingsPtrType DashboardRadarChartSeriesSettingsArgs

func DashboardRadarChartSeriesSettingsPtr(v *DashboardRadarChartSeriesSettingsArgs) DashboardRadarChartSeriesSettingsPtrInput {
	return (*dashboardRadarChartSeriesSettingsPtrType)(v)
}

func (*dashboardRadarChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartSeriesSettings)(nil)).Elem()
}

func (i *dashboardRadarChartSeriesSettingsPtrType) ToDashboardRadarChartSeriesSettingsPtrOutput() DashboardRadarChartSeriesSettingsPtrOutput {
	return i.ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartSeriesSettingsPtrType) ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSeriesSettingsPtrOutput)
}

type DashboardRadarChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartSeriesSettings)(nil)).Elem()
}

func (o DashboardRadarChartSeriesSettingsOutput) ToDashboardRadarChartSeriesSettingsOutput() DashboardRadarChartSeriesSettingsOutput {
	return o
}

func (o DashboardRadarChartSeriesSettingsOutput) ToDashboardRadarChartSeriesSettingsOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsOutput {
	return o
}

func (o DashboardRadarChartSeriesSettingsOutput) ToDashboardRadarChartSeriesSettingsPtrOutput() DashboardRadarChartSeriesSettingsPtrOutput {
	return o.ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartSeriesSettingsOutput) ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartSeriesSettings) *DashboardRadarChartSeriesSettings {
		return &v
	}).(DashboardRadarChartSeriesSettingsPtrOutput)
}

func (o DashboardRadarChartSeriesSettingsOutput) AreaStyleSettings() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartSeriesSettings) *DashboardRadarChartAreaStyleSettings {
		return v.AreaStyleSettings
	}).(DashboardRadarChartAreaStyleSettingsPtrOutput)
}

type DashboardRadarChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartSeriesSettings)(nil)).Elem()
}

func (o DashboardRadarChartSeriesSettingsPtrOutput) ToDashboardRadarChartSeriesSettingsPtrOutput() DashboardRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o DashboardRadarChartSeriesSettingsPtrOutput) ToDashboardRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) DashboardRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o DashboardRadarChartSeriesSettingsPtrOutput) Elem() DashboardRadarChartSeriesSettingsOutput {
	return o.ApplyT(func(v *DashboardRadarChartSeriesSettings) DashboardRadarChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartSeriesSettings
		return ret
	}).(DashboardRadarChartSeriesSettingsOutput)
}

func (o DashboardRadarChartSeriesSettingsPtrOutput) AreaStyleSettings() DashboardRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartSeriesSettings) *DashboardRadarChartAreaStyleSettings {
		if v == nil {
			return nil
		}
		return v.AreaStyleSettings
	}).(DashboardRadarChartAreaStyleSettingsPtrOutput)
}

type DashboardRadarChartSortConfiguration struct {
	CategoryItemsLimit *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []DashboardFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *DashboardItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []DashboardFieldSortOptions       `pulumi:"colorSort"`
}

// DashboardRadarChartSortConfigurationInput is an input type that accepts DashboardRadarChartSortConfigurationArgs and DashboardRadarChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardRadarChartSortConfigurationInput` via:
//
//	DashboardRadarChartSortConfigurationArgs{...}
type DashboardRadarChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardRadarChartSortConfigurationOutput() DashboardRadarChartSortConfigurationOutput
	ToDashboardRadarChartSortConfigurationOutputWithContext(context.Context) DashboardRadarChartSortConfigurationOutput
}

type DashboardRadarChartSortConfigurationArgs struct {
	CategoryItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    DashboardItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          DashboardFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (DashboardRadarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartSortConfiguration)(nil)).Elem()
}

func (i DashboardRadarChartSortConfigurationArgs) ToDashboardRadarChartSortConfigurationOutput() DashboardRadarChartSortConfigurationOutput {
	return i.ToDashboardRadarChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardRadarChartSortConfigurationArgs) ToDashboardRadarChartSortConfigurationOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSortConfigurationOutput)
}

func (i DashboardRadarChartSortConfigurationArgs) ToDashboardRadarChartSortConfigurationPtrOutput() DashboardRadarChartSortConfigurationPtrOutput {
	return i.ToDashboardRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartSortConfigurationArgs) ToDashboardRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSortConfigurationOutput).ToDashboardRadarChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardRadarChartSortConfigurationPtrInput is an input type that accepts DashboardRadarChartSortConfigurationArgs, DashboardRadarChartSortConfigurationPtr and DashboardRadarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartSortConfigurationPtrInput` via:
//
//	        DashboardRadarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartSortConfigurationPtrOutput() DashboardRadarChartSortConfigurationPtrOutput
	ToDashboardRadarChartSortConfigurationPtrOutputWithContext(context.Context) DashboardRadarChartSortConfigurationPtrOutput
}

type dashboardRadarChartSortConfigurationPtrType DashboardRadarChartSortConfigurationArgs

func DashboardRadarChartSortConfigurationPtr(v *DashboardRadarChartSortConfigurationArgs) DashboardRadarChartSortConfigurationPtrInput {
	return (*dashboardRadarChartSortConfigurationPtrType)(v)
}

func (*dashboardRadarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardRadarChartSortConfigurationPtrType) ToDashboardRadarChartSortConfigurationPtrOutput() DashboardRadarChartSortConfigurationPtrOutput {
	return i.ToDashboardRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartSortConfigurationPtrType) ToDashboardRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartSortConfigurationPtrOutput)
}

type DashboardRadarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartSortConfiguration)(nil)).Elem()
}

func (o DashboardRadarChartSortConfigurationOutput) ToDashboardRadarChartSortConfigurationOutput() DashboardRadarChartSortConfigurationOutput {
	return o
}

func (o DashboardRadarChartSortConfigurationOutput) ToDashboardRadarChartSortConfigurationOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationOutput {
	return o
}

func (o DashboardRadarChartSortConfigurationOutput) ToDashboardRadarChartSortConfigurationPtrOutput() DashboardRadarChartSortConfigurationPtrOutput {
	return o.ToDashboardRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartSortConfigurationOutput) ToDashboardRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartSortConfiguration) *DashboardRadarChartSortConfiguration {
		return &v
	}).(DashboardRadarChartSortConfigurationPtrOutput)
}

func (o DashboardRadarChartSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardRadarChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardRadarChartSortConfigurationOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.ColorItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardRadarChartSortConfigurationOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartSortConfiguration) []DashboardFieldSortOptions { return v.ColorSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardRadarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartSortConfiguration)(nil)).Elem()
}

func (o DashboardRadarChartSortConfigurationPtrOutput) ToDashboardRadarChartSortConfigurationPtrOutput() DashboardRadarChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardRadarChartSortConfigurationPtrOutput) ToDashboardRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardRadarChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardRadarChartSortConfigurationPtrOutput) Elem() DashboardRadarChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardRadarChartSortConfiguration) DashboardRadarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartSortConfiguration
		return ret
	}).(DashboardRadarChartSortConfigurationOutput)
}

func (o DashboardRadarChartSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardRadarChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

func (o DashboardRadarChartSortConfigurationPtrOutput) ColorItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardRadarChartSortConfigurationPtrOutput) ColorSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardRadarChartVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardRadarChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardRadarChartVisualInput is an input type that accepts DashboardRadarChartVisualArgs and DashboardRadarChartVisualOutput values.
// You can construct a concrete instance of `DashboardRadarChartVisualInput` via:
//
//	DashboardRadarChartVisualArgs{...}
type DashboardRadarChartVisualInput interface {
	pulumi.Input

	ToDashboardRadarChartVisualOutput() DashboardRadarChartVisualOutput
	ToDashboardRadarChartVisualOutputWithContext(context.Context) DashboardRadarChartVisualOutput
}

type DashboardRadarChartVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardRadarChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardRadarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartVisual)(nil)).Elem()
}

func (i DashboardRadarChartVisualArgs) ToDashboardRadarChartVisualOutput() DashboardRadarChartVisualOutput {
	return i.ToDashboardRadarChartVisualOutputWithContext(context.Background())
}

func (i DashboardRadarChartVisualArgs) ToDashboardRadarChartVisualOutputWithContext(ctx context.Context) DashboardRadarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartVisualOutput)
}

func (i DashboardRadarChartVisualArgs) ToDashboardRadarChartVisualPtrOutput() DashboardRadarChartVisualPtrOutput {
	return i.ToDashboardRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i DashboardRadarChartVisualArgs) ToDashboardRadarChartVisualPtrOutputWithContext(ctx context.Context) DashboardRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartVisualOutput).ToDashboardRadarChartVisualPtrOutputWithContext(ctx)
}

// DashboardRadarChartVisualPtrInput is an input type that accepts DashboardRadarChartVisualArgs, DashboardRadarChartVisualPtr and DashboardRadarChartVisualPtrOutput values.
// You can construct a concrete instance of `DashboardRadarChartVisualPtrInput` via:
//
//	        DashboardRadarChartVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardRadarChartVisualPtrInput interface {
	pulumi.Input

	ToDashboardRadarChartVisualPtrOutput() DashboardRadarChartVisualPtrOutput
	ToDashboardRadarChartVisualPtrOutputWithContext(context.Context) DashboardRadarChartVisualPtrOutput
}

type dashboardRadarChartVisualPtrType DashboardRadarChartVisualArgs

func DashboardRadarChartVisualPtr(v *DashboardRadarChartVisualArgs) DashboardRadarChartVisualPtrInput {
	return (*dashboardRadarChartVisualPtrType)(v)
}

func (*dashboardRadarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartVisual)(nil)).Elem()
}

func (i *dashboardRadarChartVisualPtrType) ToDashboardRadarChartVisualPtrOutput() DashboardRadarChartVisualPtrOutput {
	return i.ToDashboardRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardRadarChartVisualPtrType) ToDashboardRadarChartVisualPtrOutputWithContext(ctx context.Context) DashboardRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRadarChartVisualPtrOutput)
}

type DashboardRadarChartVisualOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRadarChartVisual)(nil)).Elem()
}

func (o DashboardRadarChartVisualOutput) ToDashboardRadarChartVisualOutput() DashboardRadarChartVisualOutput {
	return o
}

func (o DashboardRadarChartVisualOutput) ToDashboardRadarChartVisualOutputWithContext(ctx context.Context) DashboardRadarChartVisualOutput {
	return o
}

func (o DashboardRadarChartVisualOutput) ToDashboardRadarChartVisualPtrOutput() DashboardRadarChartVisualPtrOutput {
	return o.ToDashboardRadarChartVisualPtrOutputWithContext(context.Background())
}

func (o DashboardRadarChartVisualOutput) ToDashboardRadarChartVisualPtrOutputWithContext(ctx context.Context) DashboardRadarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRadarChartVisual) *DashboardRadarChartVisual {
		return &v
	}).(DashboardRadarChartVisualPtrOutput)
}

func (o DashboardRadarChartVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardRadarChartVisualOutput) ChartConfiguration() DashboardRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) *DashboardRadarChartConfiguration { return v.ChartConfiguration }).(DashboardRadarChartConfigurationPtrOutput)
}

func (o DashboardRadarChartVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardRadarChartVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardRadarChartVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardRadarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardRadarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardRadarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardRadarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRadarChartVisual)(nil)).Elem()
}

func (o DashboardRadarChartVisualPtrOutput) ToDashboardRadarChartVisualPtrOutput() DashboardRadarChartVisualPtrOutput {
	return o
}

func (o DashboardRadarChartVisualPtrOutput) ToDashboardRadarChartVisualPtrOutputWithContext(ctx context.Context) DashboardRadarChartVisualPtrOutput {
	return o
}

func (o DashboardRadarChartVisualPtrOutput) Elem() DashboardRadarChartVisualOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) DashboardRadarChartVisual {
		if v != nil {
			return *v
		}
		var ret DashboardRadarChartVisual
		return ret
	}).(DashboardRadarChartVisualOutput)
}

func (o DashboardRadarChartVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardRadarChartVisualPtrOutput) ChartConfiguration() DashboardRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) *DashboardRadarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardRadarChartConfigurationPtrOutput)
}

func (o DashboardRadarChartVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardRadarChartVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardRadarChartVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardRadarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRadarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardRangeEndsLabelType struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardRangeEndsLabelTypeInput is an input type that accepts DashboardRangeEndsLabelTypeArgs and DashboardRangeEndsLabelTypeOutput values.
// You can construct a concrete instance of `DashboardRangeEndsLabelTypeInput` via:
//
//	DashboardRangeEndsLabelTypeArgs{...}
type DashboardRangeEndsLabelTypeInput interface {
	pulumi.Input

	ToDashboardRangeEndsLabelTypeOutput() DashboardRangeEndsLabelTypeOutput
	ToDashboardRangeEndsLabelTypeOutputWithContext(context.Context) DashboardRangeEndsLabelTypeOutput
}

type DashboardRangeEndsLabelTypeArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardRangeEndsLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRangeEndsLabelType)(nil)).Elem()
}

func (i DashboardRangeEndsLabelTypeArgs) ToDashboardRangeEndsLabelTypeOutput() DashboardRangeEndsLabelTypeOutput {
	return i.ToDashboardRangeEndsLabelTypeOutputWithContext(context.Background())
}

func (i DashboardRangeEndsLabelTypeArgs) ToDashboardRangeEndsLabelTypeOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRangeEndsLabelTypeOutput)
}

func (i DashboardRangeEndsLabelTypeArgs) ToDashboardRangeEndsLabelTypePtrOutput() DashboardRangeEndsLabelTypePtrOutput {
	return i.ToDashboardRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i DashboardRangeEndsLabelTypeArgs) ToDashboardRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRangeEndsLabelTypeOutput).ToDashboardRangeEndsLabelTypePtrOutputWithContext(ctx)
}

// DashboardRangeEndsLabelTypePtrInput is an input type that accepts DashboardRangeEndsLabelTypeArgs, DashboardRangeEndsLabelTypePtr and DashboardRangeEndsLabelTypePtrOutput values.
// You can construct a concrete instance of `DashboardRangeEndsLabelTypePtrInput` via:
//
//	        DashboardRangeEndsLabelTypeArgs{...}
//
//	or:
//
//	        nil
type DashboardRangeEndsLabelTypePtrInput interface {
	pulumi.Input

	ToDashboardRangeEndsLabelTypePtrOutput() DashboardRangeEndsLabelTypePtrOutput
	ToDashboardRangeEndsLabelTypePtrOutputWithContext(context.Context) DashboardRangeEndsLabelTypePtrOutput
}

type dashboardRangeEndsLabelTypePtrType DashboardRangeEndsLabelTypeArgs

func DashboardRangeEndsLabelTypePtr(v *DashboardRangeEndsLabelTypeArgs) DashboardRangeEndsLabelTypePtrInput {
	return (*dashboardRangeEndsLabelTypePtrType)(v)
}

func (*dashboardRangeEndsLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRangeEndsLabelType)(nil)).Elem()
}

func (i *dashboardRangeEndsLabelTypePtrType) ToDashboardRangeEndsLabelTypePtrOutput() DashboardRangeEndsLabelTypePtrOutput {
	return i.ToDashboardRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i *dashboardRangeEndsLabelTypePtrType) ToDashboardRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRangeEndsLabelTypePtrOutput)
}

type DashboardRangeEndsLabelTypeOutput struct{ *pulumi.OutputState }

func (DashboardRangeEndsLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRangeEndsLabelType)(nil)).Elem()
}

func (o DashboardRangeEndsLabelTypeOutput) ToDashboardRangeEndsLabelTypeOutput() DashboardRangeEndsLabelTypeOutput {
	return o
}

func (o DashboardRangeEndsLabelTypeOutput) ToDashboardRangeEndsLabelTypeOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypeOutput {
	return o
}

func (o DashboardRangeEndsLabelTypeOutput) ToDashboardRangeEndsLabelTypePtrOutput() DashboardRangeEndsLabelTypePtrOutput {
	return o.ToDashboardRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (o DashboardRangeEndsLabelTypeOutput) ToDashboardRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRangeEndsLabelType) *DashboardRangeEndsLabelType {
		return &v
	}).(DashboardRangeEndsLabelTypePtrOutput)
}

func (o DashboardRangeEndsLabelTypeOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardRangeEndsLabelType) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardRangeEndsLabelTypePtrOutput struct{ *pulumi.OutputState }

func (DashboardRangeEndsLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRangeEndsLabelType)(nil)).Elem()
}

func (o DashboardRangeEndsLabelTypePtrOutput) ToDashboardRangeEndsLabelTypePtrOutput() DashboardRangeEndsLabelTypePtrOutput {
	return o
}

func (o DashboardRangeEndsLabelTypePtrOutput) ToDashboardRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) DashboardRangeEndsLabelTypePtrOutput {
	return o
}

func (o DashboardRangeEndsLabelTypePtrOutput) Elem() DashboardRangeEndsLabelTypeOutput {
	return o.ApplyT(func(v *DashboardRangeEndsLabelType) DashboardRangeEndsLabelType {
		if v != nil {
			return *v
		}
		var ret DashboardRangeEndsLabelType
		return ret
	}).(DashboardRangeEndsLabelTypeOutput)
}

func (o DashboardRangeEndsLabelTypePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardRangeEndsLabelType) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardReferenceLine struct {
	DataConfiguration  DashboardReferenceLineDataConfiguration   `pulumi:"dataConfiguration"`
	LabelConfiguration *DashboardReferenceLineLabelConfiguration `pulumi:"labelConfiguration"`
	Status             *DashboardWidgetStatus                    `pulumi:"status"`
	StyleConfiguration *DashboardReferenceLineStyleConfiguration `pulumi:"styleConfiguration"`
}

// DashboardReferenceLineInput is an input type that accepts DashboardReferenceLineArgs and DashboardReferenceLineOutput values.
// You can construct a concrete instance of `DashboardReferenceLineInput` via:
//
//	DashboardReferenceLineArgs{...}
type DashboardReferenceLineInput interface {
	pulumi.Input

	ToDashboardReferenceLineOutput() DashboardReferenceLineOutput
	ToDashboardReferenceLineOutputWithContext(context.Context) DashboardReferenceLineOutput
}

type DashboardReferenceLineArgs struct {
	DataConfiguration  DashboardReferenceLineDataConfigurationInput     `pulumi:"dataConfiguration"`
	LabelConfiguration DashboardReferenceLineLabelConfigurationPtrInput `pulumi:"labelConfiguration"`
	Status             DashboardWidgetStatusPtrInput                    `pulumi:"status"`
	StyleConfiguration DashboardReferenceLineStyleConfigurationPtrInput `pulumi:"styleConfiguration"`
}

func (DashboardReferenceLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLine)(nil)).Elem()
}

func (i DashboardReferenceLineArgs) ToDashboardReferenceLineOutput() DashboardReferenceLineOutput {
	return i.ToDashboardReferenceLineOutputWithContext(context.Background())
}

func (i DashboardReferenceLineArgs) ToDashboardReferenceLineOutputWithContext(ctx context.Context) DashboardReferenceLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineOutput)
}

// DashboardReferenceLineArrayInput is an input type that accepts DashboardReferenceLineArray and DashboardReferenceLineArrayOutput values.
// You can construct a concrete instance of `DashboardReferenceLineArrayInput` via:
//
//	DashboardReferenceLineArray{ DashboardReferenceLineArgs{...} }
type DashboardReferenceLineArrayInput interface {
	pulumi.Input

	ToDashboardReferenceLineArrayOutput() DashboardReferenceLineArrayOutput
	ToDashboardReferenceLineArrayOutputWithContext(context.Context) DashboardReferenceLineArrayOutput
}

type DashboardReferenceLineArray []DashboardReferenceLineInput

func (DashboardReferenceLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardReferenceLine)(nil)).Elem()
}

func (i DashboardReferenceLineArray) ToDashboardReferenceLineArrayOutput() DashboardReferenceLineArrayOutput {
	return i.ToDashboardReferenceLineArrayOutputWithContext(context.Background())
}

func (i DashboardReferenceLineArray) ToDashboardReferenceLineArrayOutputWithContext(ctx context.Context) DashboardReferenceLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineArrayOutput)
}

type DashboardReferenceLineOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLine)(nil)).Elem()
}

func (o DashboardReferenceLineOutput) ToDashboardReferenceLineOutput() DashboardReferenceLineOutput {
	return o
}

func (o DashboardReferenceLineOutput) ToDashboardReferenceLineOutputWithContext(ctx context.Context) DashboardReferenceLineOutput {
	return o
}

func (o DashboardReferenceLineOutput) DataConfiguration() DashboardReferenceLineDataConfigurationOutput {
	return o.ApplyT(func(v DashboardReferenceLine) DashboardReferenceLineDataConfiguration { return v.DataConfiguration }).(DashboardReferenceLineDataConfigurationOutput)
}

func (o DashboardReferenceLineOutput) LabelConfiguration() DashboardReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLine) *DashboardReferenceLineLabelConfiguration { return v.LabelConfiguration }).(DashboardReferenceLineLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLine) *DashboardWidgetStatus { return v.Status }).(DashboardWidgetStatusPtrOutput)
}

func (o DashboardReferenceLineOutput) StyleConfiguration() DashboardReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLine) *DashboardReferenceLineStyleConfiguration { return v.StyleConfiguration }).(DashboardReferenceLineStyleConfigurationPtrOutput)
}

type DashboardReferenceLineArrayOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardReferenceLine)(nil)).Elem()
}

func (o DashboardReferenceLineArrayOutput) ToDashboardReferenceLineArrayOutput() DashboardReferenceLineArrayOutput {
	return o
}

func (o DashboardReferenceLineArrayOutput) ToDashboardReferenceLineArrayOutputWithContext(ctx context.Context) DashboardReferenceLineArrayOutput {
	return o
}

func (o DashboardReferenceLineArrayOutput) Index(i pulumi.IntInput) DashboardReferenceLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardReferenceLine {
		return vs[0].([]DashboardReferenceLine)[vs[1].(int)]
	}).(DashboardReferenceLineOutput)
}

type DashboardReferenceLineCustomLabelConfiguration struct {
	CustomLabel string `pulumi:"customLabel"`
}

// DashboardReferenceLineCustomLabelConfigurationInput is an input type that accepts DashboardReferenceLineCustomLabelConfigurationArgs and DashboardReferenceLineCustomLabelConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineCustomLabelConfigurationInput` via:
//
//	DashboardReferenceLineCustomLabelConfigurationArgs{...}
type DashboardReferenceLineCustomLabelConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineCustomLabelConfigurationOutput() DashboardReferenceLineCustomLabelConfigurationOutput
	ToDashboardReferenceLineCustomLabelConfigurationOutputWithContext(context.Context) DashboardReferenceLineCustomLabelConfigurationOutput
}

type DashboardReferenceLineCustomLabelConfigurationArgs struct {
	CustomLabel pulumi.StringInput `pulumi:"customLabel"`
}

func (DashboardReferenceLineCustomLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineCustomLabelConfigurationArgs) ToDashboardReferenceLineCustomLabelConfigurationOutput() DashboardReferenceLineCustomLabelConfigurationOutput {
	return i.ToDashboardReferenceLineCustomLabelConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineCustomLabelConfigurationArgs) ToDashboardReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineCustomLabelConfigurationOutput)
}

func (i DashboardReferenceLineCustomLabelConfigurationArgs) ToDashboardReferenceLineCustomLabelConfigurationPtrOutput() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineCustomLabelConfigurationArgs) ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineCustomLabelConfigurationOutput).ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineCustomLabelConfigurationPtrInput is an input type that accepts DashboardReferenceLineCustomLabelConfigurationArgs, DashboardReferenceLineCustomLabelConfigurationPtr and DashboardReferenceLineCustomLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineCustomLabelConfigurationPtrInput` via:
//
//	        DashboardReferenceLineCustomLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineCustomLabelConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineCustomLabelConfigurationPtrOutput() DashboardReferenceLineCustomLabelConfigurationPtrOutput
	ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineCustomLabelConfigurationPtrOutput
}

type dashboardReferenceLineCustomLabelConfigurationPtrType DashboardReferenceLineCustomLabelConfigurationArgs

func DashboardReferenceLineCustomLabelConfigurationPtr(v *DashboardReferenceLineCustomLabelConfigurationArgs) DashboardReferenceLineCustomLabelConfigurationPtrInput {
	return (*dashboardReferenceLineCustomLabelConfigurationPtrType)(v)
}

func (*dashboardReferenceLineCustomLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineCustomLabelConfigurationPtrType) ToDashboardReferenceLineCustomLabelConfigurationPtrOutput() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineCustomLabelConfigurationPtrType) ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineCustomLabelConfigurationPtrOutput)
}

type DashboardReferenceLineCustomLabelConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineCustomLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineCustomLabelConfigurationOutput) ToDashboardReferenceLineCustomLabelConfigurationOutput() DashboardReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineCustomLabelConfigurationOutput) ToDashboardReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineCustomLabelConfigurationOutput) ToDashboardReferenceLineCustomLabelConfigurationPtrOutput() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineCustomLabelConfigurationOutput) ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineCustomLabelConfiguration) *DashboardReferenceLineCustomLabelConfiguration {
		return &v
	}).(DashboardReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineCustomLabelConfigurationOutput) CustomLabel() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardReferenceLineCustomLabelConfiguration) string { return v.CustomLabel }).(pulumi.StringOutput)
}

type DashboardReferenceLineCustomLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineCustomLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineCustomLabelConfigurationPtrOutput) ToDashboardReferenceLineCustomLabelConfigurationPtrOutput() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineCustomLabelConfigurationPtrOutput) ToDashboardReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineCustomLabelConfigurationPtrOutput) Elem() DashboardReferenceLineCustomLabelConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineCustomLabelConfiguration) DashboardReferenceLineCustomLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineCustomLabelConfiguration
		return ret
	}).(DashboardReferenceLineCustomLabelConfigurationOutput)
}

func (o DashboardReferenceLineCustomLabelConfigurationPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineCustomLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

type DashboardReferenceLineDataConfiguration struct {
	AxisBinding          *DashboardAxisBinding                           `pulumi:"axisBinding"`
	DynamicConfiguration *DashboardReferenceLineDynamicDataConfiguration `pulumi:"dynamicConfiguration"`
	StaticConfiguration  *DashboardReferenceLineStaticDataConfiguration  `pulumi:"staticConfiguration"`
}

// DashboardReferenceLineDataConfigurationInput is an input type that accepts DashboardReferenceLineDataConfigurationArgs and DashboardReferenceLineDataConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineDataConfigurationInput` via:
//
//	DashboardReferenceLineDataConfigurationArgs{...}
type DashboardReferenceLineDataConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineDataConfigurationOutput() DashboardReferenceLineDataConfigurationOutput
	ToDashboardReferenceLineDataConfigurationOutputWithContext(context.Context) DashboardReferenceLineDataConfigurationOutput
}

type DashboardReferenceLineDataConfigurationArgs struct {
	AxisBinding          DashboardAxisBindingPtrInput                           `pulumi:"axisBinding"`
	DynamicConfiguration DashboardReferenceLineDynamicDataConfigurationPtrInput `pulumi:"dynamicConfiguration"`
	StaticConfiguration  DashboardReferenceLineStaticDataConfigurationPtrInput  `pulumi:"staticConfiguration"`
}

func (DashboardReferenceLineDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineDataConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineDataConfigurationArgs) ToDashboardReferenceLineDataConfigurationOutput() DashboardReferenceLineDataConfigurationOutput {
	return i.ToDashboardReferenceLineDataConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineDataConfigurationArgs) ToDashboardReferenceLineDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineDataConfigurationOutput)
}

type DashboardReferenceLineDataConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineDataConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineDataConfigurationOutput) ToDashboardReferenceLineDataConfigurationOutput() DashboardReferenceLineDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineDataConfigurationOutput) ToDashboardReferenceLineDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineDataConfigurationOutput) AxisBinding() DashboardAxisBindingPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineDataConfiguration) *DashboardAxisBinding { return v.AxisBinding }).(DashboardAxisBindingPtrOutput)
}

func (o DashboardReferenceLineDataConfigurationOutput) DynamicConfiguration() DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineDataConfiguration) *DashboardReferenceLineDynamicDataConfiguration {
		return v.DynamicConfiguration
	}).(DashboardReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o DashboardReferenceLineDataConfigurationOutput) StaticConfiguration() DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineDataConfiguration) *DashboardReferenceLineStaticDataConfiguration {
		return v.StaticConfiguration
	}).(DashboardReferenceLineStaticDataConfigurationPtrOutput)
}

type DashboardReferenceLineDynamicDataConfiguration struct {
	Calculation                DashboardNumericalAggregationFunction `pulumi:"calculation"`
	Column                     DashboardColumnIdentifier             `pulumi:"column"`
	MeasureAggregationFunction DashboardAggregationFunction          `pulumi:"measureAggregationFunction"`
}

// DashboardReferenceLineDynamicDataConfigurationInput is an input type that accepts DashboardReferenceLineDynamicDataConfigurationArgs and DashboardReferenceLineDynamicDataConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineDynamicDataConfigurationInput` via:
//
//	DashboardReferenceLineDynamicDataConfigurationArgs{...}
type DashboardReferenceLineDynamicDataConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineDynamicDataConfigurationOutput() DashboardReferenceLineDynamicDataConfigurationOutput
	ToDashboardReferenceLineDynamicDataConfigurationOutputWithContext(context.Context) DashboardReferenceLineDynamicDataConfigurationOutput
}

type DashboardReferenceLineDynamicDataConfigurationArgs struct {
	Calculation                DashboardNumericalAggregationFunctionInput `pulumi:"calculation"`
	Column                     DashboardColumnIdentifierInput             `pulumi:"column"`
	MeasureAggregationFunction DashboardAggregationFunctionInput          `pulumi:"measureAggregationFunction"`
}

func (DashboardReferenceLineDynamicDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineDynamicDataConfigurationArgs) ToDashboardReferenceLineDynamicDataConfigurationOutput() DashboardReferenceLineDynamicDataConfigurationOutput {
	return i.ToDashboardReferenceLineDynamicDataConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineDynamicDataConfigurationArgs) ToDashboardReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineDynamicDataConfigurationOutput)
}

func (i DashboardReferenceLineDynamicDataConfigurationArgs) ToDashboardReferenceLineDynamicDataConfigurationPtrOutput() DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineDynamicDataConfigurationArgs) ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineDynamicDataConfigurationOutput).ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineDynamicDataConfigurationPtrInput is an input type that accepts DashboardReferenceLineDynamicDataConfigurationArgs, DashboardReferenceLineDynamicDataConfigurationPtr and DashboardReferenceLineDynamicDataConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineDynamicDataConfigurationPtrInput` via:
//
//	        DashboardReferenceLineDynamicDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineDynamicDataConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineDynamicDataConfigurationPtrOutput() DashboardReferenceLineDynamicDataConfigurationPtrOutput
	ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineDynamicDataConfigurationPtrOutput
}

type dashboardReferenceLineDynamicDataConfigurationPtrType DashboardReferenceLineDynamicDataConfigurationArgs

func DashboardReferenceLineDynamicDataConfigurationPtr(v *DashboardReferenceLineDynamicDataConfigurationArgs) DashboardReferenceLineDynamicDataConfigurationPtrInput {
	return (*dashboardReferenceLineDynamicDataConfigurationPtrType)(v)
}

func (*dashboardReferenceLineDynamicDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineDynamicDataConfigurationPtrType) ToDashboardReferenceLineDynamicDataConfigurationPtrOutput() DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineDynamicDataConfigurationPtrType) ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineDynamicDataConfigurationPtrOutput)
}

type DashboardReferenceLineDynamicDataConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineDynamicDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) ToDashboardReferenceLineDynamicDataConfigurationOutput() DashboardReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) ToDashboardReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) ToDashboardReferenceLineDynamicDataConfigurationPtrOutput() DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineDynamicDataConfiguration) *DashboardReferenceLineDynamicDataConfiguration {
		return &v
	}).(DashboardReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) Calculation() DashboardNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v DashboardReferenceLineDynamicDataConfiguration) DashboardNumericalAggregationFunction {
		return v.Calculation
	}).(DashboardNumericalAggregationFunctionOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardReferenceLineDynamicDataConfiguration) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationOutput) MeasureAggregationFunction() DashboardAggregationFunctionOutput {
	return o.ApplyT(func(v DashboardReferenceLineDynamicDataConfiguration) DashboardAggregationFunction {
		return v.MeasureAggregationFunction
	}).(DashboardAggregationFunctionOutput)
}

type DashboardReferenceLineDynamicDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineDynamicDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) ToDashboardReferenceLineDynamicDataConfigurationPtrOutput() DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) ToDashboardReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) Elem() DashboardReferenceLineDynamicDataConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineDynamicDataConfiguration) DashboardReferenceLineDynamicDataConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineDynamicDataConfiguration
		return ret
	}).(DashboardReferenceLineDynamicDataConfigurationOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) Calculation() DashboardNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineDynamicDataConfiguration) *DashboardNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return &v.Calculation
	}).(DashboardNumericalAggregationFunctionPtrOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineDynamicDataConfiguration) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardReferenceLineDynamicDataConfigurationPtrOutput) MeasureAggregationFunction() DashboardAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineDynamicDataConfiguration) *DashboardAggregationFunction {
		if v == nil {
			return nil
		}
		return &v.MeasureAggregationFunction
	}).(DashboardAggregationFunctionPtrOutput)
}

type DashboardReferenceLineLabelConfiguration struct {
	CustomLabelConfiguration *DashboardReferenceLineCustomLabelConfiguration `pulumi:"customLabelConfiguration"`
	FontColor                *string                                         `pulumi:"fontColor"`
	FontConfiguration        *DashboardFontConfiguration                     `pulumi:"fontConfiguration"`
	HorizontalPosition       *DashboardReferenceLineLabelHorizontalPosition  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  *DashboardReferenceLineValueLabelConfiguration  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         *DashboardReferenceLineLabelVerticalPosition    `pulumi:"verticalPosition"`
}

// DashboardReferenceLineLabelConfigurationInput is an input type that accepts DashboardReferenceLineLabelConfigurationArgs and DashboardReferenceLineLabelConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineLabelConfigurationInput` via:
//
//	DashboardReferenceLineLabelConfigurationArgs{...}
type DashboardReferenceLineLabelConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelConfigurationOutput() DashboardReferenceLineLabelConfigurationOutput
	ToDashboardReferenceLineLabelConfigurationOutputWithContext(context.Context) DashboardReferenceLineLabelConfigurationOutput
}

type DashboardReferenceLineLabelConfigurationArgs struct {
	CustomLabelConfiguration DashboardReferenceLineCustomLabelConfigurationPtrInput `pulumi:"customLabelConfiguration"`
	FontColor                pulumi.StringPtrInput                                  `pulumi:"fontColor"`
	FontConfiguration        DashboardFontConfigurationPtrInput                     `pulumi:"fontConfiguration"`
	HorizontalPosition       DashboardReferenceLineLabelHorizontalPositionPtrInput  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  DashboardReferenceLineValueLabelConfigurationPtrInput  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         DashboardReferenceLineLabelVerticalPositionPtrInput    `pulumi:"verticalPosition"`
}

func (DashboardReferenceLineLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineLabelConfigurationArgs) ToDashboardReferenceLineLabelConfigurationOutput() DashboardReferenceLineLabelConfigurationOutput {
	return i.ToDashboardReferenceLineLabelConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineLabelConfigurationArgs) ToDashboardReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineLabelConfigurationOutput)
}

func (i DashboardReferenceLineLabelConfigurationArgs) ToDashboardReferenceLineLabelConfigurationPtrOutput() DashboardReferenceLineLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineLabelConfigurationArgs) ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineLabelConfigurationOutput).ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineLabelConfigurationPtrInput is an input type that accepts DashboardReferenceLineLabelConfigurationArgs, DashboardReferenceLineLabelConfigurationPtr and DashboardReferenceLineLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineLabelConfigurationPtrInput` via:
//
//	        DashboardReferenceLineLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineLabelConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineLabelConfigurationPtrOutput() DashboardReferenceLineLabelConfigurationPtrOutput
	ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineLabelConfigurationPtrOutput
}

type dashboardReferenceLineLabelConfigurationPtrType DashboardReferenceLineLabelConfigurationArgs

func DashboardReferenceLineLabelConfigurationPtr(v *DashboardReferenceLineLabelConfigurationArgs) DashboardReferenceLineLabelConfigurationPtrInput {
	return (*dashboardReferenceLineLabelConfigurationPtrType)(v)
}

func (*dashboardReferenceLineLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineLabelConfigurationPtrType) ToDashboardReferenceLineLabelConfigurationPtrOutput() DashboardReferenceLineLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineLabelConfigurationPtrType) ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineLabelConfigurationPtrOutput)
}

type DashboardReferenceLineLabelConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineLabelConfigurationOutput) ToDashboardReferenceLineLabelConfigurationOutput() DashboardReferenceLineLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineLabelConfigurationOutput) ToDashboardReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineLabelConfigurationOutput) ToDashboardReferenceLineLabelConfigurationPtrOutput() DashboardReferenceLineLabelConfigurationPtrOutput {
	return o.ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineLabelConfigurationOutput) ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineLabelConfiguration {
		return &v
	}).(DashboardReferenceLineLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) CustomLabelConfiguration() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineCustomLabelConfiguration {
		return v.CustomLabelConfiguration
	}).(DashboardReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *DashboardFontConfiguration {
		return v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) HorizontalPosition() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineLabelHorizontalPosition {
		return v.HorizontalPosition
	}).(DashboardReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) ValueLabelConfiguration() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineValueLabelConfiguration {
		return v.ValueLabelConfiguration
	}).(DashboardReferenceLineValueLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationOutput) VerticalPosition() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineLabelVerticalPosition {
		return v.VerticalPosition
	}).(DashboardReferenceLineLabelVerticalPositionPtrOutput)
}

type DashboardReferenceLineLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) ToDashboardReferenceLineLabelConfigurationPtrOutput() DashboardReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) ToDashboardReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) Elem() DashboardReferenceLineLabelConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) DashboardReferenceLineLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineLabelConfiguration
		return ret
	}).(DashboardReferenceLineLabelConfigurationOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) CustomLabelConfiguration() DashboardReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineCustomLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomLabelConfiguration
	}).(DashboardReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) HorizontalPosition() DashboardReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineLabelHorizontalPosition {
		if v == nil {
			return nil
		}
		return v.HorizontalPosition
	}).(DashboardReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) ValueLabelConfiguration() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineValueLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueLabelConfiguration
	}).(DashboardReferenceLineValueLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineLabelConfigurationPtrOutput) VerticalPosition() DashboardReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineLabelConfiguration) *DashboardReferenceLineLabelVerticalPosition {
		if v == nil {
			return nil
		}
		return v.VerticalPosition
	}).(DashboardReferenceLineLabelVerticalPositionPtrOutput)
}

type DashboardReferenceLineStaticDataConfiguration struct {
	Value float64 `pulumi:"value"`
}

// DashboardReferenceLineStaticDataConfigurationInput is an input type that accepts DashboardReferenceLineStaticDataConfigurationArgs and DashboardReferenceLineStaticDataConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineStaticDataConfigurationInput` via:
//
//	DashboardReferenceLineStaticDataConfigurationArgs{...}
type DashboardReferenceLineStaticDataConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineStaticDataConfigurationOutput() DashboardReferenceLineStaticDataConfigurationOutput
	ToDashboardReferenceLineStaticDataConfigurationOutputWithContext(context.Context) DashboardReferenceLineStaticDataConfigurationOutput
}

type DashboardReferenceLineStaticDataConfigurationArgs struct {
	Value pulumi.Float64Input `pulumi:"value"`
}

func (DashboardReferenceLineStaticDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineStaticDataConfigurationArgs) ToDashboardReferenceLineStaticDataConfigurationOutput() DashboardReferenceLineStaticDataConfigurationOutput {
	return i.ToDashboardReferenceLineStaticDataConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineStaticDataConfigurationArgs) ToDashboardReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStaticDataConfigurationOutput)
}

func (i DashboardReferenceLineStaticDataConfigurationArgs) ToDashboardReferenceLineStaticDataConfigurationPtrOutput() DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineStaticDataConfigurationArgs) ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStaticDataConfigurationOutput).ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineStaticDataConfigurationPtrInput is an input type that accepts DashboardReferenceLineStaticDataConfigurationArgs, DashboardReferenceLineStaticDataConfigurationPtr and DashboardReferenceLineStaticDataConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineStaticDataConfigurationPtrInput` via:
//
//	        DashboardReferenceLineStaticDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineStaticDataConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineStaticDataConfigurationPtrOutput() DashboardReferenceLineStaticDataConfigurationPtrOutput
	ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineStaticDataConfigurationPtrOutput
}

type dashboardReferenceLineStaticDataConfigurationPtrType DashboardReferenceLineStaticDataConfigurationArgs

func DashboardReferenceLineStaticDataConfigurationPtr(v *DashboardReferenceLineStaticDataConfigurationArgs) DashboardReferenceLineStaticDataConfigurationPtrInput {
	return (*dashboardReferenceLineStaticDataConfigurationPtrType)(v)
}

func (*dashboardReferenceLineStaticDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineStaticDataConfigurationPtrType) ToDashboardReferenceLineStaticDataConfigurationPtrOutput() DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineStaticDataConfigurationPtrType) ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStaticDataConfigurationPtrOutput)
}

type DashboardReferenceLineStaticDataConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineStaticDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineStaticDataConfigurationOutput) ToDashboardReferenceLineStaticDataConfigurationOutput() DashboardReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineStaticDataConfigurationOutput) ToDashboardReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o DashboardReferenceLineStaticDataConfigurationOutput) ToDashboardReferenceLineStaticDataConfigurationPtrOutput() DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return o.ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineStaticDataConfigurationOutput) ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineStaticDataConfiguration) *DashboardReferenceLineStaticDataConfiguration {
		return &v
	}).(DashboardReferenceLineStaticDataConfigurationPtrOutput)
}

func (o DashboardReferenceLineStaticDataConfigurationOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardReferenceLineStaticDataConfiguration) float64 { return v.Value }).(pulumi.Float64Output)
}

type DashboardReferenceLineStaticDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineStaticDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineStaticDataConfigurationPtrOutput) ToDashboardReferenceLineStaticDataConfigurationPtrOutput() DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineStaticDataConfigurationPtrOutput) ToDashboardReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineStaticDataConfigurationPtrOutput) Elem() DashboardReferenceLineStaticDataConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineStaticDataConfiguration) DashboardReferenceLineStaticDataConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineStaticDataConfiguration
		return ret
	}).(DashboardReferenceLineStaticDataConfigurationOutput)
}

func (o DashboardReferenceLineStaticDataConfigurationPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineStaticDataConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardReferenceLineStyleConfiguration struct {
	Color   *string                            `pulumi:"color"`
	Pattern *DashboardReferenceLinePatternType `pulumi:"pattern"`
}

// DashboardReferenceLineStyleConfigurationInput is an input type that accepts DashboardReferenceLineStyleConfigurationArgs and DashboardReferenceLineStyleConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineStyleConfigurationInput` via:
//
//	DashboardReferenceLineStyleConfigurationArgs{...}
type DashboardReferenceLineStyleConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineStyleConfigurationOutput() DashboardReferenceLineStyleConfigurationOutput
	ToDashboardReferenceLineStyleConfigurationOutputWithContext(context.Context) DashboardReferenceLineStyleConfigurationOutput
}

type DashboardReferenceLineStyleConfigurationArgs struct {
	Color   pulumi.StringPtrInput                     `pulumi:"color"`
	Pattern DashboardReferenceLinePatternTypePtrInput `pulumi:"pattern"`
}

func (DashboardReferenceLineStyleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineStyleConfigurationArgs) ToDashboardReferenceLineStyleConfigurationOutput() DashboardReferenceLineStyleConfigurationOutput {
	return i.ToDashboardReferenceLineStyleConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineStyleConfigurationArgs) ToDashboardReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStyleConfigurationOutput)
}

func (i DashboardReferenceLineStyleConfigurationArgs) ToDashboardReferenceLineStyleConfigurationPtrOutput() DashboardReferenceLineStyleConfigurationPtrOutput {
	return i.ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineStyleConfigurationArgs) ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStyleConfigurationOutput).ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineStyleConfigurationPtrInput is an input type that accepts DashboardReferenceLineStyleConfigurationArgs, DashboardReferenceLineStyleConfigurationPtr and DashboardReferenceLineStyleConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineStyleConfigurationPtrInput` via:
//
//	        DashboardReferenceLineStyleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineStyleConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineStyleConfigurationPtrOutput() DashboardReferenceLineStyleConfigurationPtrOutput
	ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineStyleConfigurationPtrOutput
}

type dashboardReferenceLineStyleConfigurationPtrType DashboardReferenceLineStyleConfigurationArgs

func DashboardReferenceLineStyleConfigurationPtr(v *DashboardReferenceLineStyleConfigurationArgs) DashboardReferenceLineStyleConfigurationPtrInput {
	return (*dashboardReferenceLineStyleConfigurationPtrType)(v)
}

func (*dashboardReferenceLineStyleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineStyleConfigurationPtrType) ToDashboardReferenceLineStyleConfigurationPtrOutput() DashboardReferenceLineStyleConfigurationPtrOutput {
	return i.ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineStyleConfigurationPtrType) ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineStyleConfigurationPtrOutput)
}

type DashboardReferenceLineStyleConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineStyleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineStyleConfigurationOutput) ToDashboardReferenceLineStyleConfigurationOutput() DashboardReferenceLineStyleConfigurationOutput {
	return o
}

func (o DashboardReferenceLineStyleConfigurationOutput) ToDashboardReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationOutput {
	return o
}

func (o DashboardReferenceLineStyleConfigurationOutput) ToDashboardReferenceLineStyleConfigurationPtrOutput() DashboardReferenceLineStyleConfigurationPtrOutput {
	return o.ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineStyleConfigurationOutput) ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineStyleConfiguration) *DashboardReferenceLineStyleConfiguration {
		return &v
	}).(DashboardReferenceLineStyleConfigurationPtrOutput)
}

func (o DashboardReferenceLineStyleConfigurationOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineStyleConfiguration) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardReferenceLineStyleConfigurationOutput) Pattern() DashboardReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineStyleConfiguration) *DashboardReferenceLinePatternType { return v.Pattern }).(DashboardReferenceLinePatternTypePtrOutput)
}

type DashboardReferenceLineStyleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineStyleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineStyleConfigurationPtrOutput) ToDashboardReferenceLineStyleConfigurationPtrOutput() DashboardReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineStyleConfigurationPtrOutput) ToDashboardReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineStyleConfigurationPtrOutput) Elem() DashboardReferenceLineStyleConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineStyleConfiguration) DashboardReferenceLineStyleConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineStyleConfiguration
		return ret
	}).(DashboardReferenceLineStyleConfigurationOutput)
}

func (o DashboardReferenceLineStyleConfigurationPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineStyleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardReferenceLineStyleConfigurationPtrOutput) Pattern() DashboardReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineStyleConfiguration) *DashboardReferenceLinePatternType {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(DashboardReferenceLinePatternTypePtrOutput)
}

type DashboardReferenceLineValueLabelConfiguration struct {
	FormatConfiguration *DashboardNumericFormatConfiguration              `pulumi:"formatConfiguration"`
	RelativePosition    *DashboardReferenceLineValueLabelRelativePosition `pulumi:"relativePosition"`
}

// DashboardReferenceLineValueLabelConfigurationInput is an input type that accepts DashboardReferenceLineValueLabelConfigurationArgs and DashboardReferenceLineValueLabelConfigurationOutput values.
// You can construct a concrete instance of `DashboardReferenceLineValueLabelConfigurationInput` via:
//
//	DashboardReferenceLineValueLabelConfigurationArgs{...}
type DashboardReferenceLineValueLabelConfigurationInput interface {
	pulumi.Input

	ToDashboardReferenceLineValueLabelConfigurationOutput() DashboardReferenceLineValueLabelConfigurationOutput
	ToDashboardReferenceLineValueLabelConfigurationOutputWithContext(context.Context) DashboardReferenceLineValueLabelConfigurationOutput
}

type DashboardReferenceLineValueLabelConfigurationArgs struct {
	FormatConfiguration DashboardNumericFormatConfigurationPtrInput              `pulumi:"formatConfiguration"`
	RelativePosition    DashboardReferenceLineValueLabelRelativePositionPtrInput `pulumi:"relativePosition"`
}

func (DashboardReferenceLineValueLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i DashboardReferenceLineValueLabelConfigurationArgs) ToDashboardReferenceLineValueLabelConfigurationOutput() DashboardReferenceLineValueLabelConfigurationOutput {
	return i.ToDashboardReferenceLineValueLabelConfigurationOutputWithContext(context.Background())
}

func (i DashboardReferenceLineValueLabelConfigurationArgs) ToDashboardReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineValueLabelConfigurationOutput)
}

func (i DashboardReferenceLineValueLabelConfigurationArgs) ToDashboardReferenceLineValueLabelConfigurationPtrOutput() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardReferenceLineValueLabelConfigurationArgs) ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineValueLabelConfigurationOutput).ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx)
}

// DashboardReferenceLineValueLabelConfigurationPtrInput is an input type that accepts DashboardReferenceLineValueLabelConfigurationArgs, DashboardReferenceLineValueLabelConfigurationPtr and DashboardReferenceLineValueLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardReferenceLineValueLabelConfigurationPtrInput` via:
//
//	        DashboardReferenceLineValueLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardReferenceLineValueLabelConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardReferenceLineValueLabelConfigurationPtrOutput() DashboardReferenceLineValueLabelConfigurationPtrOutput
	ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Context) DashboardReferenceLineValueLabelConfigurationPtrOutput
}

type dashboardReferenceLineValueLabelConfigurationPtrType DashboardReferenceLineValueLabelConfigurationArgs

func DashboardReferenceLineValueLabelConfigurationPtr(v *DashboardReferenceLineValueLabelConfigurationArgs) DashboardReferenceLineValueLabelConfigurationPtrInput {
	return (*dashboardReferenceLineValueLabelConfigurationPtrType)(v)
}

func (*dashboardReferenceLineValueLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i *dashboardReferenceLineValueLabelConfigurationPtrType) ToDashboardReferenceLineValueLabelConfigurationPtrOutput() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardReferenceLineValueLabelConfigurationPtrType) ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardReferenceLineValueLabelConfigurationPtrOutput)
}

type DashboardReferenceLineValueLabelConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineValueLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) ToDashboardReferenceLineValueLabelConfigurationOutput() DashboardReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) ToDashboardReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) ToDashboardReferenceLineValueLabelConfigurationPtrOutput() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o.ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardReferenceLineValueLabelConfiguration) *DashboardReferenceLineValueLabelConfiguration {
		return &v
	}).(DashboardReferenceLineValueLabelConfigurationPtrOutput)
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) FormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineValueLabelConfiguration) *DashboardNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

func (o DashboardReferenceLineValueLabelConfigurationOutput) RelativePosition() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v DashboardReferenceLineValueLabelConfiguration) *DashboardReferenceLineValueLabelRelativePosition {
		return v.RelativePosition
	}).(DashboardReferenceLineValueLabelRelativePositionPtrOutput)
}

type DashboardReferenceLineValueLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardReferenceLineValueLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o DashboardReferenceLineValueLabelConfigurationPtrOutput) ToDashboardReferenceLineValueLabelConfigurationPtrOutput() DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineValueLabelConfigurationPtrOutput) ToDashboardReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) DashboardReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o DashboardReferenceLineValueLabelConfigurationPtrOutput) Elem() DashboardReferenceLineValueLabelConfigurationOutput {
	return o.ApplyT(func(v *DashboardReferenceLineValueLabelConfiguration) DashboardReferenceLineValueLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardReferenceLineValueLabelConfiguration
		return ret
	}).(DashboardReferenceLineValueLabelConfigurationOutput)
}

func (o DashboardReferenceLineValueLabelConfigurationPtrOutput) FormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineValueLabelConfiguration) *DashboardNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

func (o DashboardReferenceLineValueLabelConfigurationPtrOutput) RelativePosition() DashboardReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v *DashboardReferenceLineValueLabelConfiguration) *DashboardReferenceLineValueLabelRelativePosition {
		if v == nil {
			return nil
		}
		return v.RelativePosition
	}).(DashboardReferenceLineValueLabelRelativePositionPtrOutput)
}

type DashboardRelativeDateTimeControlDisplayOptions struct {
	DateTimeFormat *string                `pulumi:"dateTimeFormat"`
	TitleOptions   *DashboardLabelOptions `pulumi:"titleOptions"`
}

// DashboardRelativeDateTimeControlDisplayOptionsInput is an input type that accepts DashboardRelativeDateTimeControlDisplayOptionsArgs and DashboardRelativeDateTimeControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardRelativeDateTimeControlDisplayOptionsInput` via:
//
//	DashboardRelativeDateTimeControlDisplayOptionsArgs{...}
type DashboardRelativeDateTimeControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardRelativeDateTimeControlDisplayOptionsOutput() DashboardRelativeDateTimeControlDisplayOptionsOutput
	ToDashboardRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Context) DashboardRelativeDateTimeControlDisplayOptionsOutput
}

type DashboardRelativeDateTimeControlDisplayOptionsArgs struct {
	DateTimeFormat pulumi.StringPtrInput         `pulumi:"dateTimeFormat"`
	TitleOptions   DashboardLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (DashboardRelativeDateTimeControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i DashboardRelativeDateTimeControlDisplayOptionsArgs) ToDashboardRelativeDateTimeControlDisplayOptionsOutput() DashboardRelativeDateTimeControlDisplayOptionsOutput {
	return i.ToDashboardRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardRelativeDateTimeControlDisplayOptionsArgs) ToDashboardRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDateTimeControlDisplayOptionsOutput)
}

func (i DashboardRelativeDateTimeControlDisplayOptionsArgs) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutput() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardRelativeDateTimeControlDisplayOptionsArgs) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDateTimeControlDisplayOptionsOutput).ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardRelativeDateTimeControlDisplayOptionsPtrInput is an input type that accepts DashboardRelativeDateTimeControlDisplayOptionsArgs, DashboardRelativeDateTimeControlDisplayOptionsPtr and DashboardRelativeDateTimeControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardRelativeDateTimeControlDisplayOptionsPtrInput` via:
//
//	        DashboardRelativeDateTimeControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardRelativeDateTimeControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutput() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput
	ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardRelativeDateTimeControlDisplayOptionsPtrOutput
}

type dashboardRelativeDateTimeControlDisplayOptionsPtrType DashboardRelativeDateTimeControlDisplayOptionsArgs

func DashboardRelativeDateTimeControlDisplayOptionsPtr(v *DashboardRelativeDateTimeControlDisplayOptionsArgs) DashboardRelativeDateTimeControlDisplayOptionsPtrInput {
	return (*dashboardRelativeDateTimeControlDisplayOptionsPtrType)(v)
}

func (*dashboardRelativeDateTimeControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardRelativeDateTimeControlDisplayOptionsPtrType) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutput() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardRelativeDateTimeControlDisplayOptionsPtrType) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDateTimeControlDisplayOptionsPtrOutput)
}

type DashboardRelativeDateTimeControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDateTimeControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) ToDashboardRelativeDateTimeControlDisplayOptionsOutput() DashboardRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) ToDashboardRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutput() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRelativeDateTimeControlDisplayOptions) *DashboardRelativeDateTimeControlDisplayOptions {
		return &v
	}).(DashboardRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardRelativeDateTimeControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o DashboardRelativeDateTimeControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardRelativeDateTimeControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardRelativeDateTimeControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutput() DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) ToDashboardRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) Elem() DashboardRelativeDateTimeControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardRelativeDateTimeControlDisplayOptions) DashboardRelativeDateTimeControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardRelativeDateTimeControlDisplayOptions
		return ret
	}).(DashboardRelativeDateTimeControlDisplayOptionsOutput)
}

func (o DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDateTimeControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRelativeDateTimeControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDateTimeControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardRelativeDatesFilter struct {
	AnchorDateConfiguration    DashboardAnchorDateConfiguration     `pulumi:"anchorDateConfiguration"`
	Column                     DashboardColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *DashboardExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                               `pulumi:"filterId"`
	MinimumGranularity         *DashboardTimeGranularity            `pulumi:"minimumGranularity"`
	NullOption                 DashboardFilterNullOption            `pulumi:"nullOption"`
	ParameterName              *string                              `pulumi:"parameterName"`
	RelativeDateType           DashboardRelativeDateType            `pulumi:"relativeDateType"`
	RelativeDateValue          *float64                             `pulumi:"relativeDateValue"`
	TimeGranularity            DashboardTimeGranularity             `pulumi:"timeGranularity"`
}

// DashboardRelativeDatesFilterInput is an input type that accepts DashboardRelativeDatesFilterArgs and DashboardRelativeDatesFilterOutput values.
// You can construct a concrete instance of `DashboardRelativeDatesFilterInput` via:
//
//	DashboardRelativeDatesFilterArgs{...}
type DashboardRelativeDatesFilterInput interface {
	pulumi.Input

	ToDashboardRelativeDatesFilterOutput() DashboardRelativeDatesFilterOutput
	ToDashboardRelativeDatesFilterOutputWithContext(context.Context) DashboardRelativeDatesFilterOutput
}

type DashboardRelativeDatesFilterArgs struct {
	AnchorDateConfiguration    DashboardAnchorDateConfigurationInput       `pulumi:"anchorDateConfiguration"`
	Column                     DashboardColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration DashboardExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                          `pulumi:"filterId"`
	MinimumGranularity         DashboardTimeGranularityPtrInput            `pulumi:"minimumGranularity"`
	NullOption                 DashboardFilterNullOptionInput              `pulumi:"nullOption"`
	ParameterName              pulumi.StringPtrInput                       `pulumi:"parameterName"`
	RelativeDateType           DashboardRelativeDateTypeInput              `pulumi:"relativeDateType"`
	RelativeDateValue          pulumi.Float64PtrInput                      `pulumi:"relativeDateValue"`
	TimeGranularity            DashboardTimeGranularityInput               `pulumi:"timeGranularity"`
}

func (DashboardRelativeDatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDatesFilter)(nil)).Elem()
}

func (i DashboardRelativeDatesFilterArgs) ToDashboardRelativeDatesFilterOutput() DashboardRelativeDatesFilterOutput {
	return i.ToDashboardRelativeDatesFilterOutputWithContext(context.Background())
}

func (i DashboardRelativeDatesFilterArgs) ToDashboardRelativeDatesFilterOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDatesFilterOutput)
}

func (i DashboardRelativeDatesFilterArgs) ToDashboardRelativeDatesFilterPtrOutput() DashboardRelativeDatesFilterPtrOutput {
	return i.ToDashboardRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i DashboardRelativeDatesFilterArgs) ToDashboardRelativeDatesFilterPtrOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDatesFilterOutput).ToDashboardRelativeDatesFilterPtrOutputWithContext(ctx)
}

// DashboardRelativeDatesFilterPtrInput is an input type that accepts DashboardRelativeDatesFilterArgs, DashboardRelativeDatesFilterPtr and DashboardRelativeDatesFilterPtrOutput values.
// You can construct a concrete instance of `DashboardRelativeDatesFilterPtrInput` via:
//
//	        DashboardRelativeDatesFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardRelativeDatesFilterPtrInput interface {
	pulumi.Input

	ToDashboardRelativeDatesFilterPtrOutput() DashboardRelativeDatesFilterPtrOutput
	ToDashboardRelativeDatesFilterPtrOutputWithContext(context.Context) DashboardRelativeDatesFilterPtrOutput
}

type dashboardRelativeDatesFilterPtrType DashboardRelativeDatesFilterArgs

func DashboardRelativeDatesFilterPtr(v *DashboardRelativeDatesFilterArgs) DashboardRelativeDatesFilterPtrInput {
	return (*dashboardRelativeDatesFilterPtrType)(v)
}

func (*dashboardRelativeDatesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeDatesFilter)(nil)).Elem()
}

func (i *dashboardRelativeDatesFilterPtrType) ToDashboardRelativeDatesFilterPtrOutput() DashboardRelativeDatesFilterPtrOutput {
	return i.ToDashboardRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardRelativeDatesFilterPtrType) ToDashboardRelativeDatesFilterPtrOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRelativeDatesFilterPtrOutput)
}

type DashboardRelativeDatesFilterOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRelativeDatesFilter)(nil)).Elem()
}

func (o DashboardRelativeDatesFilterOutput) ToDashboardRelativeDatesFilterOutput() DashboardRelativeDatesFilterOutput {
	return o
}

func (o DashboardRelativeDatesFilterOutput) ToDashboardRelativeDatesFilterOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterOutput {
	return o
}

func (o DashboardRelativeDatesFilterOutput) ToDashboardRelativeDatesFilterPtrOutput() DashboardRelativeDatesFilterPtrOutput {
	return o.ToDashboardRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (o DashboardRelativeDatesFilterOutput) ToDashboardRelativeDatesFilterPtrOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRelativeDatesFilter) *DashboardRelativeDatesFilter {
		return &v
	}).(DashboardRelativeDatesFilterPtrOutput)
}

func (o DashboardRelativeDatesFilterOutput) AnchorDateConfiguration() DashboardAnchorDateConfigurationOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) DashboardAnchorDateConfiguration {
		return v.AnchorDateConfiguration
	}).(DashboardAnchorDateConfigurationOutput)
}

func (o DashboardRelativeDatesFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardRelativeDatesFilterOutput) ExcludePeriodConfiguration() DashboardExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) *DashboardExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(DashboardExcludePeriodConfigurationPtrOutput)
}

func (o DashboardRelativeDatesFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardRelativeDatesFilterOutput) MinimumGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) *DashboardTimeGranularity { return v.MinimumGranularity }).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardRelativeDatesFilterOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardRelativeDatesFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o DashboardRelativeDatesFilterOutput) RelativeDateType() DashboardRelativeDateTypeOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) DashboardRelativeDateType { return v.RelativeDateType }).(DashboardRelativeDateTypeOutput)
}

func (o DashboardRelativeDatesFilterOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) *float64 { return v.RelativeDateValue }).(pulumi.Float64PtrOutput)
}

func (o DashboardRelativeDatesFilterOutput) TimeGranularity() DashboardTimeGranularityOutput {
	return o.ApplyT(func(v DashboardRelativeDatesFilter) DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityOutput)
}

type DashboardRelativeDatesFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardRelativeDatesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRelativeDatesFilter)(nil)).Elem()
}

func (o DashboardRelativeDatesFilterPtrOutput) ToDashboardRelativeDatesFilterPtrOutput() DashboardRelativeDatesFilterPtrOutput {
	return o
}

func (o DashboardRelativeDatesFilterPtrOutput) ToDashboardRelativeDatesFilterPtrOutputWithContext(ctx context.Context) DashboardRelativeDatesFilterPtrOutput {
	return o
}

func (o DashboardRelativeDatesFilterPtrOutput) Elem() DashboardRelativeDatesFilterOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) DashboardRelativeDatesFilter {
		if v != nil {
			return *v
		}
		var ret DashboardRelativeDatesFilter
		return ret
	}).(DashboardRelativeDatesFilterOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) AnchorDateConfiguration() DashboardAnchorDateConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardAnchorDateConfiguration {
		if v == nil {
			return nil
		}
		return &v.AnchorDateConfiguration
	}).(DashboardAnchorDateConfigurationPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) ExcludePeriodConfiguration() DashboardExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(DashboardExcludePeriodConfigurationPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) MinimumGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.MinimumGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) RelativeDateType() DashboardRelativeDateTypePtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardRelativeDateType {
		if v == nil {
			return nil
		}
		return &v.RelativeDateType
	}).(DashboardRelativeDateTypePtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.RelativeDateValue
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardRelativeDatesFilterPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardRelativeDatesFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

type DashboardResourcePermission struct {
	Actions   []string `pulumi:"actions"`
	Principal string   `pulumi:"principal"`
	Resource  *string  `pulumi:"resource"`
}

// DashboardResourcePermissionInput is an input type that accepts DashboardResourcePermissionArgs and DashboardResourcePermissionOutput values.
// You can construct a concrete instance of `DashboardResourcePermissionInput` via:
//
//	DashboardResourcePermissionArgs{...}
type DashboardResourcePermissionInput interface {
	pulumi.Input

	ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput
	ToDashboardResourcePermissionOutputWithContext(context.Context) DashboardResourcePermissionOutput
}

type DashboardResourcePermissionArgs struct {
	Actions   pulumi.StringArrayInput `pulumi:"actions"`
	Principal pulumi.StringInput      `pulumi:"principal"`
	Resource  pulumi.StringPtrInput   `pulumi:"resource"`
}

func (DashboardResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourcePermission)(nil)).Elem()
}

func (i DashboardResourcePermissionArgs) ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput {
	return i.ToDashboardResourcePermissionOutputWithContext(context.Background())
}

func (i DashboardResourcePermissionArgs) ToDashboardResourcePermissionOutputWithContext(ctx context.Context) DashboardResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardResourcePermissionOutput)
}

// DashboardResourcePermissionArrayInput is an input type that accepts DashboardResourcePermissionArray and DashboardResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DashboardResourcePermissionArrayInput` via:
//
//	DashboardResourcePermissionArray{ DashboardResourcePermissionArgs{...} }
type DashboardResourcePermissionArrayInput interface {
	pulumi.Input

	ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput
	ToDashboardResourcePermissionArrayOutputWithContext(context.Context) DashboardResourcePermissionArrayOutput
}

type DashboardResourcePermissionArray []DashboardResourcePermissionInput

func (DashboardResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardResourcePermission)(nil)).Elem()
}

func (i DashboardResourcePermissionArray) ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput {
	return i.ToDashboardResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DashboardResourcePermissionArray) ToDashboardResourcePermissionArrayOutputWithContext(ctx context.Context) DashboardResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardResourcePermissionArrayOutput)
}

type DashboardResourcePermissionOutput struct{ *pulumi.OutputState }

func (DashboardResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardResourcePermission)(nil)).Elem()
}

func (o DashboardResourcePermissionOutput) ToDashboardResourcePermissionOutput() DashboardResourcePermissionOutput {
	return o
}

func (o DashboardResourcePermissionOutput) ToDashboardResourcePermissionOutputWithContext(ctx context.Context) DashboardResourcePermissionOutput {
	return o
}

func (o DashboardResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o DashboardResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

func (o DashboardResourcePermissionOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardResourcePermission) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

type DashboardResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DashboardResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardResourcePermission)(nil)).Elem()
}

func (o DashboardResourcePermissionArrayOutput) ToDashboardResourcePermissionArrayOutput() DashboardResourcePermissionArrayOutput {
	return o
}

func (o DashboardResourcePermissionArrayOutput) ToDashboardResourcePermissionArrayOutputWithContext(ctx context.Context) DashboardResourcePermissionArrayOutput {
	return o
}

func (o DashboardResourcePermissionArrayOutput) Index(i pulumi.IntInput) DashboardResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardResourcePermission {
		return vs[0].([]DashboardResourcePermission)[vs[1].(int)]
	}).(DashboardResourcePermissionOutput)
}

type DashboardRollingDateConfiguration struct {
	DataSetIdentifier *string `pulumi:"dataSetIdentifier"`
	Expression        string  `pulumi:"expression"`
}

// DashboardRollingDateConfigurationInput is an input type that accepts DashboardRollingDateConfigurationArgs and DashboardRollingDateConfigurationOutput values.
// You can construct a concrete instance of `DashboardRollingDateConfigurationInput` via:
//
//	DashboardRollingDateConfigurationArgs{...}
type DashboardRollingDateConfigurationInput interface {
	pulumi.Input

	ToDashboardRollingDateConfigurationOutput() DashboardRollingDateConfigurationOutput
	ToDashboardRollingDateConfigurationOutputWithContext(context.Context) DashboardRollingDateConfigurationOutput
}

type DashboardRollingDateConfigurationArgs struct {
	DataSetIdentifier pulumi.StringPtrInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput    `pulumi:"expression"`
}

func (DashboardRollingDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRollingDateConfiguration)(nil)).Elem()
}

func (i DashboardRollingDateConfigurationArgs) ToDashboardRollingDateConfigurationOutput() DashboardRollingDateConfigurationOutput {
	return i.ToDashboardRollingDateConfigurationOutputWithContext(context.Background())
}

func (i DashboardRollingDateConfigurationArgs) ToDashboardRollingDateConfigurationOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRollingDateConfigurationOutput)
}

func (i DashboardRollingDateConfigurationArgs) ToDashboardRollingDateConfigurationPtrOutput() DashboardRollingDateConfigurationPtrOutput {
	return i.ToDashboardRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardRollingDateConfigurationArgs) ToDashboardRollingDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRollingDateConfigurationOutput).ToDashboardRollingDateConfigurationPtrOutputWithContext(ctx)
}

// DashboardRollingDateConfigurationPtrInput is an input type that accepts DashboardRollingDateConfigurationArgs, DashboardRollingDateConfigurationPtr and DashboardRollingDateConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardRollingDateConfigurationPtrInput` via:
//
//	        DashboardRollingDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardRollingDateConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardRollingDateConfigurationPtrOutput() DashboardRollingDateConfigurationPtrOutput
	ToDashboardRollingDateConfigurationPtrOutputWithContext(context.Context) DashboardRollingDateConfigurationPtrOutput
}

type dashboardRollingDateConfigurationPtrType DashboardRollingDateConfigurationArgs

func DashboardRollingDateConfigurationPtr(v *DashboardRollingDateConfigurationArgs) DashboardRollingDateConfigurationPtrInput {
	return (*dashboardRollingDateConfigurationPtrType)(v)
}

func (*dashboardRollingDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRollingDateConfiguration)(nil)).Elem()
}

func (i *dashboardRollingDateConfigurationPtrType) ToDashboardRollingDateConfigurationPtrOutput() DashboardRollingDateConfigurationPtrOutput {
	return i.ToDashboardRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardRollingDateConfigurationPtrType) ToDashboardRollingDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRollingDateConfigurationPtrOutput)
}

type DashboardRollingDateConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardRollingDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRollingDateConfiguration)(nil)).Elem()
}

func (o DashboardRollingDateConfigurationOutput) ToDashboardRollingDateConfigurationOutput() DashboardRollingDateConfigurationOutput {
	return o
}

func (o DashboardRollingDateConfigurationOutput) ToDashboardRollingDateConfigurationOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationOutput {
	return o
}

func (o DashboardRollingDateConfigurationOutput) ToDashboardRollingDateConfigurationPtrOutput() DashboardRollingDateConfigurationPtrOutput {
	return o.ToDashboardRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardRollingDateConfigurationOutput) ToDashboardRollingDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRollingDateConfiguration) *DashboardRollingDateConfiguration {
		return &v
	}).(DashboardRollingDateConfigurationPtrOutput)
}

func (o DashboardRollingDateConfigurationOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardRollingDateConfiguration) *string { return v.DataSetIdentifier }).(pulumi.StringPtrOutput)
}

func (o DashboardRollingDateConfigurationOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardRollingDateConfiguration) string { return v.Expression }).(pulumi.StringOutput)
}

type DashboardRollingDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardRollingDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRollingDateConfiguration)(nil)).Elem()
}

func (o DashboardRollingDateConfigurationPtrOutput) ToDashboardRollingDateConfigurationPtrOutput() DashboardRollingDateConfigurationPtrOutput {
	return o
}

func (o DashboardRollingDateConfigurationPtrOutput) ToDashboardRollingDateConfigurationPtrOutputWithContext(ctx context.Context) DashboardRollingDateConfigurationPtrOutput {
	return o
}

func (o DashboardRollingDateConfigurationPtrOutput) Elem() DashboardRollingDateConfigurationOutput {
	return o.ApplyT(func(v *DashboardRollingDateConfiguration) DashboardRollingDateConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardRollingDateConfiguration
		return ret
	}).(DashboardRollingDateConfigurationOutput)
}

func (o DashboardRollingDateConfigurationPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o DashboardRollingDateConfigurationPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type DashboardRowAlternateColorOptions struct {
	RowAlternateColors []string               `pulumi:"rowAlternateColors"`
	Status             *DashboardWidgetStatus `pulumi:"status"`
}

// DashboardRowAlternateColorOptionsInput is an input type that accepts DashboardRowAlternateColorOptionsArgs and DashboardRowAlternateColorOptionsOutput values.
// You can construct a concrete instance of `DashboardRowAlternateColorOptionsInput` via:
//
//	DashboardRowAlternateColorOptionsArgs{...}
type DashboardRowAlternateColorOptionsInput interface {
	pulumi.Input

	ToDashboardRowAlternateColorOptionsOutput() DashboardRowAlternateColorOptionsOutput
	ToDashboardRowAlternateColorOptionsOutputWithContext(context.Context) DashboardRowAlternateColorOptionsOutput
}

type DashboardRowAlternateColorOptionsArgs struct {
	RowAlternateColors pulumi.StringArrayInput       `pulumi:"rowAlternateColors"`
	Status             DashboardWidgetStatusPtrInput `pulumi:"status"`
}

func (DashboardRowAlternateColorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRowAlternateColorOptions)(nil)).Elem()
}

func (i DashboardRowAlternateColorOptionsArgs) ToDashboardRowAlternateColorOptionsOutput() DashboardRowAlternateColorOptionsOutput {
	return i.ToDashboardRowAlternateColorOptionsOutputWithContext(context.Background())
}

func (i DashboardRowAlternateColorOptionsArgs) ToDashboardRowAlternateColorOptionsOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRowAlternateColorOptionsOutput)
}

func (i DashboardRowAlternateColorOptionsArgs) ToDashboardRowAlternateColorOptionsPtrOutput() DashboardRowAlternateColorOptionsPtrOutput {
	return i.ToDashboardRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardRowAlternateColorOptionsArgs) ToDashboardRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRowAlternateColorOptionsOutput).ToDashboardRowAlternateColorOptionsPtrOutputWithContext(ctx)
}

// DashboardRowAlternateColorOptionsPtrInput is an input type that accepts DashboardRowAlternateColorOptionsArgs, DashboardRowAlternateColorOptionsPtr and DashboardRowAlternateColorOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardRowAlternateColorOptionsPtrInput` via:
//
//	        DashboardRowAlternateColorOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardRowAlternateColorOptionsPtrInput interface {
	pulumi.Input

	ToDashboardRowAlternateColorOptionsPtrOutput() DashboardRowAlternateColorOptionsPtrOutput
	ToDashboardRowAlternateColorOptionsPtrOutputWithContext(context.Context) DashboardRowAlternateColorOptionsPtrOutput
}

type dashboardRowAlternateColorOptionsPtrType DashboardRowAlternateColorOptionsArgs

func DashboardRowAlternateColorOptionsPtr(v *DashboardRowAlternateColorOptionsArgs) DashboardRowAlternateColorOptionsPtrInput {
	return (*dashboardRowAlternateColorOptionsPtrType)(v)
}

func (*dashboardRowAlternateColorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRowAlternateColorOptions)(nil)).Elem()
}

func (i *dashboardRowAlternateColorOptionsPtrType) ToDashboardRowAlternateColorOptionsPtrOutput() DashboardRowAlternateColorOptionsPtrOutput {
	return i.ToDashboardRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardRowAlternateColorOptionsPtrType) ToDashboardRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardRowAlternateColorOptionsPtrOutput)
}

type DashboardRowAlternateColorOptionsOutput struct{ *pulumi.OutputState }

func (DashboardRowAlternateColorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardRowAlternateColorOptions)(nil)).Elem()
}

func (o DashboardRowAlternateColorOptionsOutput) ToDashboardRowAlternateColorOptionsOutput() DashboardRowAlternateColorOptionsOutput {
	return o
}

func (o DashboardRowAlternateColorOptionsOutput) ToDashboardRowAlternateColorOptionsOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsOutput {
	return o
}

func (o DashboardRowAlternateColorOptionsOutput) ToDashboardRowAlternateColorOptionsPtrOutput() DashboardRowAlternateColorOptionsPtrOutput {
	return o.ToDashboardRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardRowAlternateColorOptionsOutput) ToDashboardRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardRowAlternateColorOptions) *DashboardRowAlternateColorOptions {
		return &v
	}).(DashboardRowAlternateColorOptionsPtrOutput)
}

func (o DashboardRowAlternateColorOptionsOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardRowAlternateColorOptions) []string { return v.RowAlternateColors }).(pulumi.StringArrayOutput)
}

func (o DashboardRowAlternateColorOptionsOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v DashboardRowAlternateColorOptions) *DashboardWidgetStatus { return v.Status }).(DashboardWidgetStatusPtrOutput)
}

type DashboardRowAlternateColorOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardRowAlternateColorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardRowAlternateColorOptions)(nil)).Elem()
}

func (o DashboardRowAlternateColorOptionsPtrOutput) ToDashboardRowAlternateColorOptionsPtrOutput() DashboardRowAlternateColorOptionsPtrOutput {
	return o
}

func (o DashboardRowAlternateColorOptionsPtrOutput) ToDashboardRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) DashboardRowAlternateColorOptionsPtrOutput {
	return o
}

func (o DashboardRowAlternateColorOptionsPtrOutput) Elem() DashboardRowAlternateColorOptionsOutput {
	return o.ApplyT(func(v *DashboardRowAlternateColorOptions) DashboardRowAlternateColorOptions {
		if v != nil {
			return *v
		}
		var ret DashboardRowAlternateColorOptions
		return ret
	}).(DashboardRowAlternateColorOptionsOutput)
}

func (o DashboardRowAlternateColorOptionsPtrOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardRowAlternateColorOptions) []string {
		if v == nil {
			return nil
		}
		return v.RowAlternateColors
	}).(pulumi.StringArrayOutput)
}

func (o DashboardRowAlternateColorOptionsPtrOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v *DashboardRowAlternateColorOptions) *DashboardWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DashboardWidgetStatusPtrOutput)
}

type DashboardSameSheetTargetVisualConfiguration struct {
	TargetVisualOptions *DashboardTargetVisualOptions `pulumi:"targetVisualOptions"`
	TargetVisuals       []string                      `pulumi:"targetVisuals"`
}

// DashboardSameSheetTargetVisualConfigurationInput is an input type that accepts DashboardSameSheetTargetVisualConfigurationArgs and DashboardSameSheetTargetVisualConfigurationOutput values.
// You can construct a concrete instance of `DashboardSameSheetTargetVisualConfigurationInput` via:
//
//	DashboardSameSheetTargetVisualConfigurationArgs{...}
type DashboardSameSheetTargetVisualConfigurationInput interface {
	pulumi.Input

	ToDashboardSameSheetTargetVisualConfigurationOutput() DashboardSameSheetTargetVisualConfigurationOutput
	ToDashboardSameSheetTargetVisualConfigurationOutputWithContext(context.Context) DashboardSameSheetTargetVisualConfigurationOutput
}

type DashboardSameSheetTargetVisualConfigurationArgs struct {
	TargetVisualOptions DashboardTargetVisualOptionsPtrInput `pulumi:"targetVisualOptions"`
	TargetVisuals       pulumi.StringArrayInput              `pulumi:"targetVisuals"`
}

func (DashboardSameSheetTargetVisualConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i DashboardSameSheetTargetVisualConfigurationArgs) ToDashboardSameSheetTargetVisualConfigurationOutput() DashboardSameSheetTargetVisualConfigurationOutput {
	return i.ToDashboardSameSheetTargetVisualConfigurationOutputWithContext(context.Background())
}

func (i DashboardSameSheetTargetVisualConfigurationArgs) ToDashboardSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSameSheetTargetVisualConfigurationOutput)
}

func (i DashboardSameSheetTargetVisualConfigurationArgs) ToDashboardSameSheetTargetVisualConfigurationPtrOutput() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSameSheetTargetVisualConfigurationArgs) ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSameSheetTargetVisualConfigurationOutput).ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx)
}

// DashboardSameSheetTargetVisualConfigurationPtrInput is an input type that accepts DashboardSameSheetTargetVisualConfigurationArgs, DashboardSameSheetTargetVisualConfigurationPtr and DashboardSameSheetTargetVisualConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSameSheetTargetVisualConfigurationPtrInput` via:
//
//	        DashboardSameSheetTargetVisualConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSameSheetTargetVisualConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSameSheetTargetVisualConfigurationPtrOutput() DashboardSameSheetTargetVisualConfigurationPtrOutput
	ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Context) DashboardSameSheetTargetVisualConfigurationPtrOutput
}

type dashboardSameSheetTargetVisualConfigurationPtrType DashboardSameSheetTargetVisualConfigurationArgs

func DashboardSameSheetTargetVisualConfigurationPtr(v *DashboardSameSheetTargetVisualConfigurationArgs) DashboardSameSheetTargetVisualConfigurationPtrInput {
	return (*dashboardSameSheetTargetVisualConfigurationPtrType)(v)
}

func (*dashboardSameSheetTargetVisualConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i *dashboardSameSheetTargetVisualConfigurationPtrType) ToDashboardSameSheetTargetVisualConfigurationPtrOutput() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSameSheetTargetVisualConfigurationPtrType) ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSameSheetTargetVisualConfigurationPtrOutput)
}

type DashboardSameSheetTargetVisualConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSameSheetTargetVisualConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) ToDashboardSameSheetTargetVisualConfigurationOutput() DashboardSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) ToDashboardSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) ToDashboardSameSheetTargetVisualConfigurationPtrOutput() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o.ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSameSheetTargetVisualConfiguration) *DashboardSameSheetTargetVisualConfiguration {
		return &v
	}).(DashboardSameSheetTargetVisualConfigurationPtrOutput)
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) TargetVisualOptions() DashboardTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSameSheetTargetVisualConfiguration) *DashboardTargetVisualOptions {
		return v.TargetVisualOptions
	}).(DashboardTargetVisualOptionsPtrOutput)
}

func (o DashboardSameSheetTargetVisualConfigurationOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSameSheetTargetVisualConfiguration) []string { return v.TargetVisuals }).(pulumi.StringArrayOutput)
}

type DashboardSameSheetTargetVisualConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSameSheetTargetVisualConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o DashboardSameSheetTargetVisualConfigurationPtrOutput) ToDashboardSameSheetTargetVisualConfigurationPtrOutput() DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o DashboardSameSheetTargetVisualConfigurationPtrOutput) ToDashboardSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) DashboardSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o DashboardSameSheetTargetVisualConfigurationPtrOutput) Elem() DashboardSameSheetTargetVisualConfigurationOutput {
	return o.ApplyT(func(v *DashboardSameSheetTargetVisualConfiguration) DashboardSameSheetTargetVisualConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSameSheetTargetVisualConfiguration
		return ret
	}).(DashboardSameSheetTargetVisualConfigurationOutput)
}

func (o DashboardSameSheetTargetVisualConfigurationPtrOutput) TargetVisualOptions() DashboardTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSameSheetTargetVisualConfiguration) *DashboardTargetVisualOptions {
		if v == nil {
			return nil
		}
		return v.TargetVisualOptions
	}).(DashboardTargetVisualOptionsPtrOutput)
}

func (o DashboardSameSheetTargetVisualConfigurationPtrOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardSameSheetTargetVisualConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.TargetVisuals
	}).(pulumi.StringArrayOutput)
}

type DashboardSankeyDiagramAggregatedFieldWells struct {
	Destination []DashboardDimensionField `pulumi:"destination"`
	Source      []DashboardDimensionField `pulumi:"source"`
	Weight      []DashboardMeasureField   `pulumi:"weight"`
}

// DashboardSankeyDiagramAggregatedFieldWellsInput is an input type that accepts DashboardSankeyDiagramAggregatedFieldWellsArgs and DashboardSankeyDiagramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramAggregatedFieldWellsInput` via:
//
//	DashboardSankeyDiagramAggregatedFieldWellsArgs{...}
type DashboardSankeyDiagramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramAggregatedFieldWellsOutput() DashboardSankeyDiagramAggregatedFieldWellsOutput
	ToDashboardSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Context) DashboardSankeyDiagramAggregatedFieldWellsOutput
}

type DashboardSankeyDiagramAggregatedFieldWellsArgs struct {
	Destination DashboardDimensionFieldArrayInput `pulumi:"destination"`
	Source      DashboardDimensionFieldArrayInput `pulumi:"source"`
	Weight      DashboardMeasureFieldArrayInput   `pulumi:"weight"`
}

func (DashboardSankeyDiagramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardSankeyDiagramAggregatedFieldWellsArgs) ToDashboardSankeyDiagramAggregatedFieldWellsOutput() DashboardSankeyDiagramAggregatedFieldWellsOutput {
	return i.ToDashboardSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramAggregatedFieldWellsArgs) ToDashboardSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramAggregatedFieldWellsOutput)
}

func (i DashboardSankeyDiagramAggregatedFieldWellsArgs) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutput() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramAggregatedFieldWellsArgs) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramAggregatedFieldWellsOutput).ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardSankeyDiagramAggregatedFieldWellsPtrInput is an input type that accepts DashboardSankeyDiagramAggregatedFieldWellsArgs, DashboardSankeyDiagramAggregatedFieldWellsPtr and DashboardSankeyDiagramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramAggregatedFieldWellsPtrInput` via:
//
//	        DashboardSankeyDiagramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardSankeyDiagramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutput() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput
	ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardSankeyDiagramAggregatedFieldWellsPtrOutput
}

type dashboardSankeyDiagramAggregatedFieldWellsPtrType DashboardSankeyDiagramAggregatedFieldWellsArgs

func DashboardSankeyDiagramAggregatedFieldWellsPtr(v *DashboardSankeyDiagramAggregatedFieldWellsArgs) DashboardSankeyDiagramAggregatedFieldWellsPtrInput {
	return (*dashboardSankeyDiagramAggregatedFieldWellsPtrType)(v)
}

func (*dashboardSankeyDiagramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardSankeyDiagramAggregatedFieldWellsPtrType) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutput() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardSankeyDiagramAggregatedFieldWellsPtrType) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type DashboardSankeyDiagramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) ToDashboardSankeyDiagramAggregatedFieldWellsOutput() DashboardSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) ToDashboardSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutput() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSankeyDiagramAggregatedFieldWells) *DashboardSankeyDiagramAggregatedFieldWells {
		return &v
	}).(DashboardSankeyDiagramAggregatedFieldWellsPtrOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) Destination() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramAggregatedFieldWells) []DashboardDimensionField { return v.Destination }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) Source() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramAggregatedFieldWells) []DashboardDimensionField { return v.Source }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsOutput) Weight() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramAggregatedFieldWells) []DashboardMeasureField { return v.Weight }).(DashboardMeasureFieldArrayOutput)
}

type DashboardSankeyDiagramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutput() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) ToDashboardSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) Elem() DashboardSankeyDiagramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramAggregatedFieldWells) DashboardSankeyDiagramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardSankeyDiagramAggregatedFieldWells
		return ret
	}).(DashboardSankeyDiagramAggregatedFieldWellsOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) Destination() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) Source() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Source
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardSankeyDiagramAggregatedFieldWellsPtrOutput) Weight() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardSankeyDiagramChartConfiguration struct {
	DataLabels        *DashboardDataLabelOptions               `pulumi:"dataLabels"`
	FieldWells        *DashboardSankeyDiagramFieldWells        `pulumi:"fieldWells"`
	SortConfiguration *DashboardSankeyDiagramSortConfiguration `pulumi:"sortConfiguration"`
}

// DashboardSankeyDiagramChartConfigurationInput is an input type that accepts DashboardSankeyDiagramChartConfigurationArgs and DashboardSankeyDiagramChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramChartConfigurationInput` via:
//
//	DashboardSankeyDiagramChartConfigurationArgs{...}
type DashboardSankeyDiagramChartConfigurationInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramChartConfigurationOutput() DashboardSankeyDiagramChartConfigurationOutput
	ToDashboardSankeyDiagramChartConfigurationOutputWithContext(context.Context) DashboardSankeyDiagramChartConfigurationOutput
}

type DashboardSankeyDiagramChartConfigurationArgs struct {
	DataLabels        DashboardDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	FieldWells        DashboardSankeyDiagramFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration DashboardSankeyDiagramSortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (DashboardSankeyDiagramChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i DashboardSankeyDiagramChartConfigurationArgs) ToDashboardSankeyDiagramChartConfigurationOutput() DashboardSankeyDiagramChartConfigurationOutput {
	return i.ToDashboardSankeyDiagramChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramChartConfigurationArgs) ToDashboardSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramChartConfigurationOutput)
}

func (i DashboardSankeyDiagramChartConfigurationArgs) ToDashboardSankeyDiagramChartConfigurationPtrOutput() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return i.ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramChartConfigurationArgs) ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramChartConfigurationOutput).ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardSankeyDiagramChartConfigurationPtrInput is an input type that accepts DashboardSankeyDiagramChartConfigurationArgs, DashboardSankeyDiagramChartConfigurationPtr and DashboardSankeyDiagramChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramChartConfigurationPtrInput` via:
//
//	        DashboardSankeyDiagramChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSankeyDiagramChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramChartConfigurationPtrOutput() DashboardSankeyDiagramChartConfigurationPtrOutput
	ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(context.Context) DashboardSankeyDiagramChartConfigurationPtrOutput
}

type dashboardSankeyDiagramChartConfigurationPtrType DashboardSankeyDiagramChartConfigurationArgs

func DashboardSankeyDiagramChartConfigurationPtr(v *DashboardSankeyDiagramChartConfigurationArgs) DashboardSankeyDiagramChartConfigurationPtrInput {
	return (*dashboardSankeyDiagramChartConfigurationPtrType)(v)
}

func (*dashboardSankeyDiagramChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i *dashboardSankeyDiagramChartConfigurationPtrType) ToDashboardSankeyDiagramChartConfigurationPtrOutput() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return i.ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSankeyDiagramChartConfigurationPtrType) ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramChartConfigurationPtrOutput)
}

type DashboardSankeyDiagramChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o DashboardSankeyDiagramChartConfigurationOutput) ToDashboardSankeyDiagramChartConfigurationOutput() DashboardSankeyDiagramChartConfigurationOutput {
	return o
}

func (o DashboardSankeyDiagramChartConfigurationOutput) ToDashboardSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationOutput {
	return o
}

func (o DashboardSankeyDiagramChartConfigurationOutput) ToDashboardSankeyDiagramChartConfigurationPtrOutput() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o.ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSankeyDiagramChartConfigurationOutput) ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSankeyDiagramChartConfiguration) *DashboardSankeyDiagramChartConfiguration {
		return &v
	}).(DashboardSankeyDiagramChartConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramChartConfigurationOutput) FieldWells() DashboardSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramChartConfiguration) *DashboardSankeyDiagramFieldWells {
		return v.FieldWells
	}).(DashboardSankeyDiagramFieldWellsPtrOutput)
}

func (o DashboardSankeyDiagramChartConfigurationOutput) SortConfiguration() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramChartConfiguration) *DashboardSankeyDiagramSortConfiguration {
		return v.SortConfiguration
	}).(DashboardSankeyDiagramSortConfigurationPtrOutput)
}

type DashboardSankeyDiagramChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) ToDashboardSankeyDiagramChartConfigurationPtrOutput() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) ToDashboardSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) Elem() DashboardSankeyDiagramChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramChartConfiguration) DashboardSankeyDiagramChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSankeyDiagramChartConfiguration
		return ret
	}).(DashboardSankeyDiagramChartConfigurationOutput)
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) FieldWells() DashboardSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramChartConfiguration) *DashboardSankeyDiagramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardSankeyDiagramFieldWellsPtrOutput)
}

func (o DashboardSankeyDiagramChartConfigurationPtrOutput) SortConfiguration() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramChartConfiguration) *DashboardSankeyDiagramSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardSankeyDiagramSortConfigurationPtrOutput)
}

type DashboardSankeyDiagramFieldWells struct {
	SankeyDiagramAggregatedFieldWells *DashboardSankeyDiagramAggregatedFieldWells `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

// DashboardSankeyDiagramFieldWellsInput is an input type that accepts DashboardSankeyDiagramFieldWellsArgs and DashboardSankeyDiagramFieldWellsOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramFieldWellsInput` via:
//
//	DashboardSankeyDiagramFieldWellsArgs{...}
type DashboardSankeyDiagramFieldWellsInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramFieldWellsOutput() DashboardSankeyDiagramFieldWellsOutput
	ToDashboardSankeyDiagramFieldWellsOutputWithContext(context.Context) DashboardSankeyDiagramFieldWellsOutput
}

type DashboardSankeyDiagramFieldWellsArgs struct {
	SankeyDiagramAggregatedFieldWells DashboardSankeyDiagramAggregatedFieldWellsPtrInput `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

func (DashboardSankeyDiagramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramFieldWells)(nil)).Elem()
}

func (i DashboardSankeyDiagramFieldWellsArgs) ToDashboardSankeyDiagramFieldWellsOutput() DashboardSankeyDiagramFieldWellsOutput {
	return i.ToDashboardSankeyDiagramFieldWellsOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramFieldWellsArgs) ToDashboardSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramFieldWellsOutput)
}

func (i DashboardSankeyDiagramFieldWellsArgs) ToDashboardSankeyDiagramFieldWellsPtrOutput() DashboardSankeyDiagramFieldWellsPtrOutput {
	return i.ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramFieldWellsArgs) ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramFieldWellsOutput).ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(ctx)
}

// DashboardSankeyDiagramFieldWellsPtrInput is an input type that accepts DashboardSankeyDiagramFieldWellsArgs, DashboardSankeyDiagramFieldWellsPtr and DashboardSankeyDiagramFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramFieldWellsPtrInput` via:
//
//	        DashboardSankeyDiagramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardSankeyDiagramFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramFieldWellsPtrOutput() DashboardSankeyDiagramFieldWellsPtrOutput
	ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(context.Context) DashboardSankeyDiagramFieldWellsPtrOutput
}

type dashboardSankeyDiagramFieldWellsPtrType DashboardSankeyDiagramFieldWellsArgs

func DashboardSankeyDiagramFieldWellsPtr(v *DashboardSankeyDiagramFieldWellsArgs) DashboardSankeyDiagramFieldWellsPtrInput {
	return (*dashboardSankeyDiagramFieldWellsPtrType)(v)
}

func (*dashboardSankeyDiagramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramFieldWells)(nil)).Elem()
}

func (i *dashboardSankeyDiagramFieldWellsPtrType) ToDashboardSankeyDiagramFieldWellsPtrOutput() DashboardSankeyDiagramFieldWellsPtrOutput {
	return i.ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardSankeyDiagramFieldWellsPtrType) ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramFieldWellsPtrOutput)
}

type DashboardSankeyDiagramFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramFieldWells)(nil)).Elem()
}

func (o DashboardSankeyDiagramFieldWellsOutput) ToDashboardSankeyDiagramFieldWellsOutput() DashboardSankeyDiagramFieldWellsOutput {
	return o
}

func (o DashboardSankeyDiagramFieldWellsOutput) ToDashboardSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsOutput {
	return o
}

func (o DashboardSankeyDiagramFieldWellsOutput) ToDashboardSankeyDiagramFieldWellsPtrOutput() DashboardSankeyDiagramFieldWellsPtrOutput {
	return o.ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardSankeyDiagramFieldWellsOutput) ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSankeyDiagramFieldWells) *DashboardSankeyDiagramFieldWells {
		return &v
	}).(DashboardSankeyDiagramFieldWellsPtrOutput)
}

func (o DashboardSankeyDiagramFieldWellsOutput) SankeyDiagramAggregatedFieldWells() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramFieldWells) *DashboardSankeyDiagramAggregatedFieldWells {
		return v.SankeyDiagramAggregatedFieldWells
	}).(DashboardSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type DashboardSankeyDiagramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramFieldWells)(nil)).Elem()
}

func (o DashboardSankeyDiagramFieldWellsPtrOutput) ToDashboardSankeyDiagramFieldWellsPtrOutput() DashboardSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o DashboardSankeyDiagramFieldWellsPtrOutput) ToDashboardSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o DashboardSankeyDiagramFieldWellsPtrOutput) Elem() DashboardSankeyDiagramFieldWellsOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramFieldWells) DashboardSankeyDiagramFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardSankeyDiagramFieldWells
		return ret
	}).(DashboardSankeyDiagramFieldWellsOutput)
}

func (o DashboardSankeyDiagramFieldWellsPtrOutput) SankeyDiagramAggregatedFieldWells() DashboardSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramFieldWells) *DashboardSankeyDiagramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.SankeyDiagramAggregatedFieldWells
	}).(DashboardSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type DashboardSankeyDiagramSortConfiguration struct {
	DestinationItemsLimit *DashboardItemsLimitConfiguration `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      *DashboardItemsLimitConfiguration `pulumi:"sourceItemsLimit"`
	WeightSort            []DashboardFieldSortOptions       `pulumi:"weightSort"`
}

// DashboardSankeyDiagramSortConfigurationInput is an input type that accepts DashboardSankeyDiagramSortConfigurationArgs and DashboardSankeyDiagramSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramSortConfigurationInput` via:
//
//	DashboardSankeyDiagramSortConfigurationArgs{...}
type DashboardSankeyDiagramSortConfigurationInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramSortConfigurationOutput() DashboardSankeyDiagramSortConfigurationOutput
	ToDashboardSankeyDiagramSortConfigurationOutputWithContext(context.Context) DashboardSankeyDiagramSortConfigurationOutput
}

type DashboardSankeyDiagramSortConfigurationArgs struct {
	DestinationItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      DashboardItemsLimitConfigurationPtrInput `pulumi:"sourceItemsLimit"`
	WeightSort            DashboardFieldSortOptionsArrayInput      `pulumi:"weightSort"`
}

func (DashboardSankeyDiagramSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i DashboardSankeyDiagramSortConfigurationArgs) ToDashboardSankeyDiagramSortConfigurationOutput() DashboardSankeyDiagramSortConfigurationOutput {
	return i.ToDashboardSankeyDiagramSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramSortConfigurationArgs) ToDashboardSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramSortConfigurationOutput)
}

func (i DashboardSankeyDiagramSortConfigurationArgs) ToDashboardSankeyDiagramSortConfigurationPtrOutput() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return i.ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramSortConfigurationArgs) ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramSortConfigurationOutput).ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardSankeyDiagramSortConfigurationPtrInput is an input type that accepts DashboardSankeyDiagramSortConfigurationArgs, DashboardSankeyDiagramSortConfigurationPtr and DashboardSankeyDiagramSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramSortConfigurationPtrInput` via:
//
//	        DashboardSankeyDiagramSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSankeyDiagramSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramSortConfigurationPtrOutput() DashboardSankeyDiagramSortConfigurationPtrOutput
	ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(context.Context) DashboardSankeyDiagramSortConfigurationPtrOutput
}

type dashboardSankeyDiagramSortConfigurationPtrType DashboardSankeyDiagramSortConfigurationArgs

func DashboardSankeyDiagramSortConfigurationPtr(v *DashboardSankeyDiagramSortConfigurationArgs) DashboardSankeyDiagramSortConfigurationPtrInput {
	return (*dashboardSankeyDiagramSortConfigurationPtrType)(v)
}

func (*dashboardSankeyDiagramSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i *dashboardSankeyDiagramSortConfigurationPtrType) ToDashboardSankeyDiagramSortConfigurationPtrOutput() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return i.ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSankeyDiagramSortConfigurationPtrType) ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramSortConfigurationPtrOutput)
}

type DashboardSankeyDiagramSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o DashboardSankeyDiagramSortConfigurationOutput) ToDashboardSankeyDiagramSortConfigurationOutput() DashboardSankeyDiagramSortConfigurationOutput {
	return o
}

func (o DashboardSankeyDiagramSortConfigurationOutput) ToDashboardSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationOutput {
	return o
}

func (o DashboardSankeyDiagramSortConfigurationOutput) ToDashboardSankeyDiagramSortConfigurationPtrOutput() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o.ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSankeyDiagramSortConfigurationOutput) ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSankeyDiagramSortConfiguration) *DashboardSankeyDiagramSortConfiguration {
		return &v
	}).(DashboardSankeyDiagramSortConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramSortConfigurationOutput) DestinationItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.DestinationItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramSortConfigurationOutput) SourceItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.SourceItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramSortConfigurationOutput) WeightSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramSortConfiguration) []DashboardFieldSortOptions { return v.WeightSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardSankeyDiagramSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) ToDashboardSankeyDiagramSortConfigurationPtrOutput() DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) ToDashboardSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) Elem() DashboardSankeyDiagramSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramSortConfiguration) DashboardSankeyDiagramSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSankeyDiagramSortConfiguration
		return ret
	}).(DashboardSankeyDiagramSortConfigurationOutput)
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) DestinationItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) SourceItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SourceItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramSortConfigurationPtrOutput) WeightSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.WeightSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardSankeyDiagramVisual struct {
	Actions            []DashboardVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration *DashboardSankeyDiagramChartConfiguration `pulumi:"chartConfiguration"`
	Subtitle           *DashboardVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions         `pulumi:"title"`
	VisualId           string                                    `pulumi:"visualId"`
}

// DashboardSankeyDiagramVisualInput is an input type that accepts DashboardSankeyDiagramVisualArgs and DashboardSankeyDiagramVisualOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramVisualInput` via:
//
//	DashboardSankeyDiagramVisualArgs{...}
type DashboardSankeyDiagramVisualInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramVisualOutput() DashboardSankeyDiagramVisualOutput
	ToDashboardSankeyDiagramVisualOutputWithContext(context.Context) DashboardSankeyDiagramVisualOutput
}

type DashboardSankeyDiagramVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration DashboardSankeyDiagramChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId           pulumi.StringInput                               `pulumi:"visualId"`
}

func (DashboardSankeyDiagramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramVisual)(nil)).Elem()
}

func (i DashboardSankeyDiagramVisualArgs) ToDashboardSankeyDiagramVisualOutput() DashboardSankeyDiagramVisualOutput {
	return i.ToDashboardSankeyDiagramVisualOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramVisualArgs) ToDashboardSankeyDiagramVisualOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramVisualOutput)
}

func (i DashboardSankeyDiagramVisualArgs) ToDashboardSankeyDiagramVisualPtrOutput() DashboardSankeyDiagramVisualPtrOutput {
	return i.ToDashboardSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i DashboardSankeyDiagramVisualArgs) ToDashboardSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramVisualOutput).ToDashboardSankeyDiagramVisualPtrOutputWithContext(ctx)
}

// DashboardSankeyDiagramVisualPtrInput is an input type that accepts DashboardSankeyDiagramVisualArgs, DashboardSankeyDiagramVisualPtr and DashboardSankeyDiagramVisualPtrOutput values.
// You can construct a concrete instance of `DashboardSankeyDiagramVisualPtrInput` via:
//
//	        DashboardSankeyDiagramVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardSankeyDiagramVisualPtrInput interface {
	pulumi.Input

	ToDashboardSankeyDiagramVisualPtrOutput() DashboardSankeyDiagramVisualPtrOutput
	ToDashboardSankeyDiagramVisualPtrOutputWithContext(context.Context) DashboardSankeyDiagramVisualPtrOutput
}

type dashboardSankeyDiagramVisualPtrType DashboardSankeyDiagramVisualArgs

func DashboardSankeyDiagramVisualPtr(v *DashboardSankeyDiagramVisualArgs) DashboardSankeyDiagramVisualPtrInput {
	return (*dashboardSankeyDiagramVisualPtrType)(v)
}

func (*dashboardSankeyDiagramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramVisual)(nil)).Elem()
}

func (i *dashboardSankeyDiagramVisualPtrType) ToDashboardSankeyDiagramVisualPtrOutput() DashboardSankeyDiagramVisualPtrOutput {
	return i.ToDashboardSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardSankeyDiagramVisualPtrType) ToDashboardSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSankeyDiagramVisualPtrOutput)
}

type DashboardSankeyDiagramVisualOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSankeyDiagramVisual)(nil)).Elem()
}

func (o DashboardSankeyDiagramVisualOutput) ToDashboardSankeyDiagramVisualOutput() DashboardSankeyDiagramVisualOutput {
	return o
}

func (o DashboardSankeyDiagramVisualOutput) ToDashboardSankeyDiagramVisualOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualOutput {
	return o
}

func (o DashboardSankeyDiagramVisualOutput) ToDashboardSankeyDiagramVisualPtrOutput() DashboardSankeyDiagramVisualPtrOutput {
	return o.ToDashboardSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (o DashboardSankeyDiagramVisualOutput) ToDashboardSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSankeyDiagramVisual) *DashboardSankeyDiagramVisual {
		return &v
	}).(DashboardSankeyDiagramVisualPtrOutput)
}

func (o DashboardSankeyDiagramVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardSankeyDiagramVisualOutput) ChartConfiguration() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramVisual) *DashboardSankeyDiagramChartConfiguration {
		return v.ChartConfiguration
	}).(DashboardSankeyDiagramChartConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSankeyDiagramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardSankeyDiagramVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardSankeyDiagramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSankeyDiagramVisual)(nil)).Elem()
}

func (o DashboardSankeyDiagramVisualPtrOutput) ToDashboardSankeyDiagramVisualPtrOutput() DashboardSankeyDiagramVisualPtrOutput {
	return o
}

func (o DashboardSankeyDiagramVisualPtrOutput) ToDashboardSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) DashboardSankeyDiagramVisualPtrOutput {
	return o
}

func (o DashboardSankeyDiagramVisualPtrOutput) Elem() DashboardSankeyDiagramVisualOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) DashboardSankeyDiagramVisual {
		if v != nil {
			return *v
		}
		var ret DashboardSankeyDiagramVisual
		return ret
	}).(DashboardSankeyDiagramVisualOutput)
}

func (o DashboardSankeyDiagramVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardSankeyDiagramVisualPtrOutput) ChartConfiguration() DashboardSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) *DashboardSankeyDiagramChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardSankeyDiagramChartConfigurationPtrOutput)
}

func (o DashboardSankeyDiagramVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardSankeyDiagramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSankeyDiagramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardScatterPlotCategoricallyAggregatedFieldWells struct {
	Category []DashboardDimensionField `pulumi:"category"`
	Size     []DashboardMeasureField   `pulumi:"size"`
	XAxis    []DashboardMeasureField   `pulumi:"xAxis"`
	YAxis    []DashboardMeasureField   `pulumi:"yAxis"`
}

// DashboardScatterPlotCategoricallyAggregatedFieldWellsInput is an input type that accepts DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs and DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardScatterPlotCategoricallyAggregatedFieldWellsInput` via:
//
//	DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
type DashboardScatterPlotCategoricallyAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput
	ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput
}

type DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs struct {
	Category DashboardDimensionFieldArrayInput `pulumi:"category"`
	Size     DashboardMeasureFieldArrayInput   `pulumi:"size"`
	XAxis    DashboardMeasureFieldArrayInput   `pulumi:"xAxis"`
	YAxis    DashboardMeasureFieldArrayInput   `pulumi:"yAxis"`
}

func (DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return i.ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (i DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput).ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput is an input type that accepts DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs, DashboardScatterPlotCategoricallyAggregatedFieldWellsPtr and DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput` via:
//
//	        DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
	ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
}

type dashboardScatterPlotCategoricallyAggregatedFieldWellsPtrType DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs

func DashboardScatterPlotCategoricallyAggregatedFieldWellsPtr(v *DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput {
	return (*dashboardScatterPlotCategoricallyAggregatedFieldWellsPtrType)(v)
}

func (*dashboardScatterPlotCategoricallyAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

type DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScatterPlotCategoricallyAggregatedFieldWells) *DashboardScatterPlotCategoricallyAggregatedFieldWells {
		return &v
	}).(DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardDimensionField {
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField { return v.Size }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) XAxis() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField { return v.XAxis }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput) YAxis() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField { return v.YAxis }).(DashboardMeasureFieldArrayOutput)
}

type DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToDashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Elem() DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardScatterPlotCategoricallyAggregatedFieldWells) DashboardScatterPlotCategoricallyAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardScatterPlotCategoricallyAggregatedFieldWells
		return ret
	}).(DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Category() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) XAxis() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) YAxis() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotCategoricallyAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardScatterPlotConfiguration struct {
	DataLabels          *DashboardDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *DashboardScatterPlotFieldWells `pulumi:"fieldWells"`
	Legend              *DashboardLegendOptions         `pulumi:"legend"`
	Tooltip             *DashboardTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *DashboardVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *DashboardAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *DashboardChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *DashboardAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   *DashboardChartAxisLabelOptions `pulumi:"yAxisLabelOptions"`
}

// DashboardScatterPlotConfigurationInput is an input type that accepts DashboardScatterPlotConfigurationArgs and DashboardScatterPlotConfigurationOutput values.
// You can construct a concrete instance of `DashboardScatterPlotConfigurationInput` via:
//
//	DashboardScatterPlotConfigurationArgs{...}
type DashboardScatterPlotConfigurationInput interface {
	pulumi.Input

	ToDashboardScatterPlotConfigurationOutput() DashboardScatterPlotConfigurationOutput
	ToDashboardScatterPlotConfigurationOutputWithContext(context.Context) DashboardScatterPlotConfigurationOutput
}

type DashboardScatterPlotConfigurationArgs struct {
	DataLabels          DashboardDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          DashboardScatterPlotFieldWellsPtrInput `pulumi:"fieldWells"`
	Legend              DashboardLegendOptionsPtrInput         `pulumi:"legend"`
	Tooltip             DashboardTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       DashboardVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput `pulumi:"yAxisLabelOptions"`
}

func (DashboardScatterPlotConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotConfiguration)(nil)).Elem()
}

func (i DashboardScatterPlotConfigurationArgs) ToDashboardScatterPlotConfigurationOutput() DashboardScatterPlotConfigurationOutput {
	return i.ToDashboardScatterPlotConfigurationOutputWithContext(context.Background())
}

func (i DashboardScatterPlotConfigurationArgs) ToDashboardScatterPlotConfigurationOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotConfigurationOutput)
}

func (i DashboardScatterPlotConfigurationArgs) ToDashboardScatterPlotConfigurationPtrOutput() DashboardScatterPlotConfigurationPtrOutput {
	return i.ToDashboardScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardScatterPlotConfigurationArgs) ToDashboardScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotConfigurationOutput).ToDashboardScatterPlotConfigurationPtrOutputWithContext(ctx)
}

// DashboardScatterPlotConfigurationPtrInput is an input type that accepts DashboardScatterPlotConfigurationArgs, DashboardScatterPlotConfigurationPtr and DashboardScatterPlotConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardScatterPlotConfigurationPtrInput` via:
//
//	        DashboardScatterPlotConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardScatterPlotConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardScatterPlotConfigurationPtrOutput() DashboardScatterPlotConfigurationPtrOutput
	ToDashboardScatterPlotConfigurationPtrOutputWithContext(context.Context) DashboardScatterPlotConfigurationPtrOutput
}

type dashboardScatterPlotConfigurationPtrType DashboardScatterPlotConfigurationArgs

func DashboardScatterPlotConfigurationPtr(v *DashboardScatterPlotConfigurationArgs) DashboardScatterPlotConfigurationPtrInput {
	return (*dashboardScatterPlotConfigurationPtrType)(v)
}

func (*dashboardScatterPlotConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotConfiguration)(nil)).Elem()
}

func (i *dashboardScatterPlotConfigurationPtrType) ToDashboardScatterPlotConfigurationPtrOutput() DashboardScatterPlotConfigurationPtrOutput {
	return i.ToDashboardScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardScatterPlotConfigurationPtrType) ToDashboardScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotConfigurationPtrOutput)
}

type DashboardScatterPlotConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotConfiguration)(nil)).Elem()
}

func (o DashboardScatterPlotConfigurationOutput) ToDashboardScatterPlotConfigurationOutput() DashboardScatterPlotConfigurationOutput {
	return o
}

func (o DashboardScatterPlotConfigurationOutput) ToDashboardScatterPlotConfigurationOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationOutput {
	return o
}

func (o DashboardScatterPlotConfigurationOutput) ToDashboardScatterPlotConfigurationPtrOutput() DashboardScatterPlotConfigurationPtrOutput {
	return o.ToDashboardScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardScatterPlotConfigurationOutput) ToDashboardScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScatterPlotConfiguration) *DashboardScatterPlotConfiguration {
		return &v
	}).(DashboardScatterPlotConfigurationPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) FieldWells() DashboardScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardScatterPlotFieldWells { return v.FieldWells }).(DashboardScatterPlotFieldWellsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardAxisDisplayOptions { return v.XAxisDisplayOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardChartAxisLabelOptions { return v.XAxisLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) YAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardAxisDisplayOptions { return v.YAxisDisplayOptions }).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationOutput) YAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotConfiguration) *DashboardChartAxisLabelOptions { return v.YAxisLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

type DashboardScatterPlotConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotConfiguration)(nil)).Elem()
}

func (o DashboardScatterPlotConfigurationPtrOutput) ToDashboardScatterPlotConfigurationPtrOutput() DashboardScatterPlotConfigurationPtrOutput {
	return o
}

func (o DashboardScatterPlotConfigurationPtrOutput) ToDashboardScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) DashboardScatterPlotConfigurationPtrOutput {
	return o
}

func (o DashboardScatterPlotConfigurationPtrOutput) Elem() DashboardScatterPlotConfigurationOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) DashboardScatterPlotConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardScatterPlotConfiguration
		return ret
	}).(DashboardScatterPlotConfigurationOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) FieldWells() DashboardScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardScatterPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardScatterPlotFieldWellsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) XAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) XAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) YAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardScatterPlotConfigurationPtrOutput) YAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.YAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

type DashboardScatterPlotFieldWells struct {
	ScatterPlotCategoricallyAggregatedFieldWells *DashboardScatterPlotCategoricallyAggregatedFieldWells `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            *DashboardScatterPlotUnaggregatedFieldWells            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

// DashboardScatterPlotFieldWellsInput is an input type that accepts DashboardScatterPlotFieldWellsArgs and DashboardScatterPlotFieldWellsOutput values.
// You can construct a concrete instance of `DashboardScatterPlotFieldWellsInput` via:
//
//	DashboardScatterPlotFieldWellsArgs{...}
type DashboardScatterPlotFieldWellsInput interface {
	pulumi.Input

	ToDashboardScatterPlotFieldWellsOutput() DashboardScatterPlotFieldWellsOutput
	ToDashboardScatterPlotFieldWellsOutputWithContext(context.Context) DashboardScatterPlotFieldWellsOutput
}

type DashboardScatterPlotFieldWellsArgs struct {
	ScatterPlotCategoricallyAggregatedFieldWells DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            DashboardScatterPlotUnaggregatedFieldWellsPtrInput            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

func (DashboardScatterPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotFieldWells)(nil)).Elem()
}

func (i DashboardScatterPlotFieldWellsArgs) ToDashboardScatterPlotFieldWellsOutput() DashboardScatterPlotFieldWellsOutput {
	return i.ToDashboardScatterPlotFieldWellsOutputWithContext(context.Background())
}

func (i DashboardScatterPlotFieldWellsArgs) ToDashboardScatterPlotFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotFieldWellsOutput)
}

func (i DashboardScatterPlotFieldWellsArgs) ToDashboardScatterPlotFieldWellsPtrOutput() DashboardScatterPlotFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardScatterPlotFieldWellsArgs) ToDashboardScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotFieldWellsOutput).ToDashboardScatterPlotFieldWellsPtrOutputWithContext(ctx)
}

// DashboardScatterPlotFieldWellsPtrInput is an input type that accepts DashboardScatterPlotFieldWellsArgs, DashboardScatterPlotFieldWellsPtr and DashboardScatterPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardScatterPlotFieldWellsPtrInput` via:
//
//	        DashboardScatterPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardScatterPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardScatterPlotFieldWellsPtrOutput() DashboardScatterPlotFieldWellsPtrOutput
	ToDashboardScatterPlotFieldWellsPtrOutputWithContext(context.Context) DashboardScatterPlotFieldWellsPtrOutput
}

type dashboardScatterPlotFieldWellsPtrType DashboardScatterPlotFieldWellsArgs

func DashboardScatterPlotFieldWellsPtr(v *DashboardScatterPlotFieldWellsArgs) DashboardScatterPlotFieldWellsPtrInput {
	return (*dashboardScatterPlotFieldWellsPtrType)(v)
}

func (*dashboardScatterPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotFieldWells)(nil)).Elem()
}

func (i *dashboardScatterPlotFieldWellsPtrType) ToDashboardScatterPlotFieldWellsPtrOutput() DashboardScatterPlotFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardScatterPlotFieldWellsPtrType) ToDashboardScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotFieldWellsPtrOutput)
}

type DashboardScatterPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotFieldWellsOutput) ToDashboardScatterPlotFieldWellsOutput() DashboardScatterPlotFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotFieldWellsOutput) ToDashboardScatterPlotFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotFieldWellsOutput) ToDashboardScatterPlotFieldWellsPtrOutput() DashboardScatterPlotFieldWellsPtrOutput {
	return o.ToDashboardScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardScatterPlotFieldWellsOutput) ToDashboardScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScatterPlotFieldWells) *DashboardScatterPlotFieldWells {
		return &v
	}).(DashboardScatterPlotFieldWellsPtrOutput)
}

func (o DashboardScatterPlotFieldWellsOutput) ScatterPlotCategoricallyAggregatedFieldWells() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotFieldWells) *DashboardScatterPlotCategoricallyAggregatedFieldWells {
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o DashboardScatterPlotFieldWellsOutput) ScatterPlotUnaggregatedFieldWells() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotFieldWells) *DashboardScatterPlotUnaggregatedFieldWells {
		return v.ScatterPlotUnaggregatedFieldWells
	}).(DashboardScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type DashboardScatterPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotFieldWellsPtrOutput) ToDashboardScatterPlotFieldWellsPtrOutput() DashboardScatterPlotFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotFieldWellsPtrOutput) ToDashboardScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotFieldWellsPtrOutput) Elem() DashboardScatterPlotFieldWellsOutput {
	return o.ApplyT(func(v *DashboardScatterPlotFieldWells) DashboardScatterPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardScatterPlotFieldWells
		return ret
	}).(DashboardScatterPlotFieldWellsOutput)
}

func (o DashboardScatterPlotFieldWellsPtrOutput) ScatterPlotCategoricallyAggregatedFieldWells() DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotFieldWells) *DashboardScatterPlotCategoricallyAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o DashboardScatterPlotFieldWellsPtrOutput) ScatterPlotUnaggregatedFieldWells() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotFieldWells) *DashboardScatterPlotUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotUnaggregatedFieldWells
	}).(DashboardScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type DashboardScatterPlotUnaggregatedFieldWells struct {
	Size  []DashboardMeasureField   `pulumi:"size"`
	XAxis []DashboardDimensionField `pulumi:"xAxis"`
	YAxis []DashboardDimensionField `pulumi:"yAxis"`
}

// DashboardScatterPlotUnaggregatedFieldWellsInput is an input type that accepts DashboardScatterPlotUnaggregatedFieldWellsArgs and DashboardScatterPlotUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardScatterPlotUnaggregatedFieldWellsInput` via:
//
//	DashboardScatterPlotUnaggregatedFieldWellsArgs{...}
type DashboardScatterPlotUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardScatterPlotUnaggregatedFieldWellsOutput() DashboardScatterPlotUnaggregatedFieldWellsOutput
	ToDashboardScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Context) DashboardScatterPlotUnaggregatedFieldWellsOutput
}

type DashboardScatterPlotUnaggregatedFieldWellsArgs struct {
	Size  DashboardMeasureFieldArrayInput   `pulumi:"size"`
	XAxis DashboardDimensionFieldArrayInput `pulumi:"xAxis"`
	YAxis DashboardDimensionFieldArrayInput `pulumi:"yAxis"`
}

func (DashboardScatterPlotUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i DashboardScatterPlotUnaggregatedFieldWellsArgs) ToDashboardScatterPlotUnaggregatedFieldWellsOutput() DashboardScatterPlotUnaggregatedFieldWellsOutput {
	return i.ToDashboardScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardScatterPlotUnaggregatedFieldWellsArgs) ToDashboardScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotUnaggregatedFieldWellsOutput)
}

func (i DashboardScatterPlotUnaggregatedFieldWellsArgs) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutput() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardScatterPlotUnaggregatedFieldWellsArgs) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotUnaggregatedFieldWellsOutput).ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardScatterPlotUnaggregatedFieldWellsPtrInput is an input type that accepts DashboardScatterPlotUnaggregatedFieldWellsArgs, DashboardScatterPlotUnaggregatedFieldWellsPtr and DashboardScatterPlotUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardScatterPlotUnaggregatedFieldWellsPtrInput` via:
//
//	        DashboardScatterPlotUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardScatterPlotUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutput() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput
	ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardScatterPlotUnaggregatedFieldWellsPtrOutput
}

type dashboardScatterPlotUnaggregatedFieldWellsPtrType DashboardScatterPlotUnaggregatedFieldWellsArgs

func DashboardScatterPlotUnaggregatedFieldWellsPtr(v *DashboardScatterPlotUnaggregatedFieldWellsArgs) DashboardScatterPlotUnaggregatedFieldWellsPtrInput {
	return (*dashboardScatterPlotUnaggregatedFieldWellsPtrType)(v)
}

func (*dashboardScatterPlotUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardScatterPlotUnaggregatedFieldWellsPtrType) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutput() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardScatterPlotUnaggregatedFieldWellsPtrType) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type DashboardScatterPlotUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) ToDashboardScatterPlotUnaggregatedFieldWellsOutput() DashboardScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) ToDashboardScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutput() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScatterPlotUnaggregatedFieldWells) *DashboardScatterPlotUnaggregatedFieldWells {
		return &v
	}).(DashboardScatterPlotUnaggregatedFieldWellsPtrOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotUnaggregatedFieldWells) []DashboardMeasureField { return v.Size }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) XAxis() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotUnaggregatedFieldWells) []DashboardDimensionField { return v.XAxis }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsOutput) YAxis() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotUnaggregatedFieldWells) []DashboardDimensionField { return v.YAxis }).(DashboardDimensionFieldArrayOutput)
}

type DashboardScatterPlotUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutput() DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) ToDashboardScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) Elem() DashboardScatterPlotUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardScatterPlotUnaggregatedFieldWells) DashboardScatterPlotUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardScatterPlotUnaggregatedFieldWells
		return ret
	}).(DashboardScatterPlotUnaggregatedFieldWellsOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotUnaggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) XAxis() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotUnaggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardScatterPlotUnaggregatedFieldWellsPtrOutput) YAxis() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotUnaggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(DashboardDimensionFieldArrayOutput)
}

type DashboardScatterPlotVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardScatterPlotConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardScatterPlotVisualInput is an input type that accepts DashboardScatterPlotVisualArgs and DashboardScatterPlotVisualOutput values.
// You can construct a concrete instance of `DashboardScatterPlotVisualInput` via:
//
//	DashboardScatterPlotVisualArgs{...}
type DashboardScatterPlotVisualInput interface {
	pulumi.Input

	ToDashboardScatterPlotVisualOutput() DashboardScatterPlotVisualOutput
	ToDashboardScatterPlotVisualOutputWithContext(context.Context) DashboardScatterPlotVisualOutput
}

type DashboardScatterPlotVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardScatterPlotConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardScatterPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotVisual)(nil)).Elem()
}

func (i DashboardScatterPlotVisualArgs) ToDashboardScatterPlotVisualOutput() DashboardScatterPlotVisualOutput {
	return i.ToDashboardScatterPlotVisualOutputWithContext(context.Background())
}

func (i DashboardScatterPlotVisualArgs) ToDashboardScatterPlotVisualOutputWithContext(ctx context.Context) DashboardScatterPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotVisualOutput)
}

func (i DashboardScatterPlotVisualArgs) ToDashboardScatterPlotVisualPtrOutput() DashboardScatterPlotVisualPtrOutput {
	return i.ToDashboardScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i DashboardScatterPlotVisualArgs) ToDashboardScatterPlotVisualPtrOutputWithContext(ctx context.Context) DashboardScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotVisualOutput).ToDashboardScatterPlotVisualPtrOutputWithContext(ctx)
}

// DashboardScatterPlotVisualPtrInput is an input type that accepts DashboardScatterPlotVisualArgs, DashboardScatterPlotVisualPtr and DashboardScatterPlotVisualPtrOutput values.
// You can construct a concrete instance of `DashboardScatterPlotVisualPtrInput` via:
//
//	        DashboardScatterPlotVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardScatterPlotVisualPtrInput interface {
	pulumi.Input

	ToDashboardScatterPlotVisualPtrOutput() DashboardScatterPlotVisualPtrOutput
	ToDashboardScatterPlotVisualPtrOutputWithContext(context.Context) DashboardScatterPlotVisualPtrOutput
}

type dashboardScatterPlotVisualPtrType DashboardScatterPlotVisualArgs

func DashboardScatterPlotVisualPtr(v *DashboardScatterPlotVisualArgs) DashboardScatterPlotVisualPtrInput {
	return (*dashboardScatterPlotVisualPtrType)(v)
}

func (*dashboardScatterPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotVisual)(nil)).Elem()
}

func (i *dashboardScatterPlotVisualPtrType) ToDashboardScatterPlotVisualPtrOutput() DashboardScatterPlotVisualPtrOutput {
	return i.ToDashboardScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardScatterPlotVisualPtrType) ToDashboardScatterPlotVisualPtrOutputWithContext(ctx context.Context) DashboardScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScatterPlotVisualPtrOutput)
}

type DashboardScatterPlotVisualOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScatterPlotVisual)(nil)).Elem()
}

func (o DashboardScatterPlotVisualOutput) ToDashboardScatterPlotVisualOutput() DashboardScatterPlotVisualOutput {
	return o
}

func (o DashboardScatterPlotVisualOutput) ToDashboardScatterPlotVisualOutputWithContext(ctx context.Context) DashboardScatterPlotVisualOutput {
	return o
}

func (o DashboardScatterPlotVisualOutput) ToDashboardScatterPlotVisualPtrOutput() DashboardScatterPlotVisualPtrOutput {
	return o.ToDashboardScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (o DashboardScatterPlotVisualOutput) ToDashboardScatterPlotVisualPtrOutputWithContext(ctx context.Context) DashboardScatterPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScatterPlotVisual) *DashboardScatterPlotVisual {
		return &v
	}).(DashboardScatterPlotVisualPtrOutput)
}

func (o DashboardScatterPlotVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardScatterPlotVisualOutput) ChartConfiguration() DashboardScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) *DashboardScatterPlotConfiguration { return v.ChartConfiguration }).(DashboardScatterPlotConfigurationPtrOutput)
}

func (o DashboardScatterPlotVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardScatterPlotVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardScatterPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardScatterPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardScatterPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScatterPlotVisual)(nil)).Elem()
}

func (o DashboardScatterPlotVisualPtrOutput) ToDashboardScatterPlotVisualPtrOutput() DashboardScatterPlotVisualPtrOutput {
	return o
}

func (o DashboardScatterPlotVisualPtrOutput) ToDashboardScatterPlotVisualPtrOutputWithContext(ctx context.Context) DashboardScatterPlotVisualPtrOutput {
	return o
}

func (o DashboardScatterPlotVisualPtrOutput) Elem() DashboardScatterPlotVisualOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) DashboardScatterPlotVisual {
		if v != nil {
			return *v
		}
		var ret DashboardScatterPlotVisual
		return ret
	}).(DashboardScatterPlotVisualOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) ChartConfiguration() DashboardScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) *DashboardScatterPlotConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardScatterPlotConfigurationPtrOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardScatterPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardScatterPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardScrollBarOptions struct {
	Visibility   *DashboardVisibility          `pulumi:"visibility"`
	VisibleRange *DashboardVisibleRangeOptions `pulumi:"visibleRange"`
}

// DashboardScrollBarOptionsInput is an input type that accepts DashboardScrollBarOptionsArgs and DashboardScrollBarOptionsOutput values.
// You can construct a concrete instance of `DashboardScrollBarOptionsInput` via:
//
//	DashboardScrollBarOptionsArgs{...}
type DashboardScrollBarOptionsInput interface {
	pulumi.Input

	ToDashboardScrollBarOptionsOutput() DashboardScrollBarOptionsOutput
	ToDashboardScrollBarOptionsOutputWithContext(context.Context) DashboardScrollBarOptionsOutput
}

type DashboardScrollBarOptionsArgs struct {
	Visibility   DashboardVisibilityPtrInput          `pulumi:"visibility"`
	VisibleRange DashboardVisibleRangeOptionsPtrInput `pulumi:"visibleRange"`
}

func (DashboardScrollBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScrollBarOptions)(nil)).Elem()
}

func (i DashboardScrollBarOptionsArgs) ToDashboardScrollBarOptionsOutput() DashboardScrollBarOptionsOutput {
	return i.ToDashboardScrollBarOptionsOutputWithContext(context.Background())
}

func (i DashboardScrollBarOptionsArgs) ToDashboardScrollBarOptionsOutputWithContext(ctx context.Context) DashboardScrollBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScrollBarOptionsOutput)
}

func (i DashboardScrollBarOptionsArgs) ToDashboardScrollBarOptionsPtrOutput() DashboardScrollBarOptionsPtrOutput {
	return i.ToDashboardScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardScrollBarOptionsArgs) ToDashboardScrollBarOptionsPtrOutputWithContext(ctx context.Context) DashboardScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScrollBarOptionsOutput).ToDashboardScrollBarOptionsPtrOutputWithContext(ctx)
}

// DashboardScrollBarOptionsPtrInput is an input type that accepts DashboardScrollBarOptionsArgs, DashboardScrollBarOptionsPtr and DashboardScrollBarOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardScrollBarOptionsPtrInput` via:
//
//	        DashboardScrollBarOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardScrollBarOptionsPtrInput interface {
	pulumi.Input

	ToDashboardScrollBarOptionsPtrOutput() DashboardScrollBarOptionsPtrOutput
	ToDashboardScrollBarOptionsPtrOutputWithContext(context.Context) DashboardScrollBarOptionsPtrOutput
}

type dashboardScrollBarOptionsPtrType DashboardScrollBarOptionsArgs

func DashboardScrollBarOptionsPtr(v *DashboardScrollBarOptionsArgs) DashboardScrollBarOptionsPtrInput {
	return (*dashboardScrollBarOptionsPtrType)(v)
}

func (*dashboardScrollBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScrollBarOptions)(nil)).Elem()
}

func (i *dashboardScrollBarOptionsPtrType) ToDashboardScrollBarOptionsPtrOutput() DashboardScrollBarOptionsPtrOutput {
	return i.ToDashboardScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardScrollBarOptionsPtrType) ToDashboardScrollBarOptionsPtrOutputWithContext(ctx context.Context) DashboardScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardScrollBarOptionsPtrOutput)
}

type DashboardScrollBarOptionsOutput struct{ *pulumi.OutputState }

func (DashboardScrollBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardScrollBarOptions)(nil)).Elem()
}

func (o DashboardScrollBarOptionsOutput) ToDashboardScrollBarOptionsOutput() DashboardScrollBarOptionsOutput {
	return o
}

func (o DashboardScrollBarOptionsOutput) ToDashboardScrollBarOptionsOutputWithContext(ctx context.Context) DashboardScrollBarOptionsOutput {
	return o
}

func (o DashboardScrollBarOptionsOutput) ToDashboardScrollBarOptionsPtrOutput() DashboardScrollBarOptionsPtrOutput {
	return o.ToDashboardScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardScrollBarOptionsOutput) ToDashboardScrollBarOptionsPtrOutputWithContext(ctx context.Context) DashboardScrollBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardScrollBarOptions) *DashboardScrollBarOptions {
		return &v
	}).(DashboardScrollBarOptionsPtrOutput)
}

func (o DashboardScrollBarOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardScrollBarOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardScrollBarOptionsOutput) VisibleRange() DashboardVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardScrollBarOptions) *DashboardVisibleRangeOptions { return v.VisibleRange }).(DashboardVisibleRangeOptionsPtrOutput)
}

type DashboardScrollBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardScrollBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardScrollBarOptions)(nil)).Elem()
}

func (o DashboardScrollBarOptionsPtrOutput) ToDashboardScrollBarOptionsPtrOutput() DashboardScrollBarOptionsPtrOutput {
	return o
}

func (o DashboardScrollBarOptionsPtrOutput) ToDashboardScrollBarOptionsPtrOutputWithContext(ctx context.Context) DashboardScrollBarOptionsPtrOutput {
	return o
}

func (o DashboardScrollBarOptionsPtrOutput) Elem() DashboardScrollBarOptionsOutput {
	return o.ApplyT(func(v *DashboardScrollBarOptions) DashboardScrollBarOptions {
		if v != nil {
			return *v
		}
		var ret DashboardScrollBarOptions
		return ret
	}).(DashboardScrollBarOptionsOutput)
}

func (o DashboardScrollBarOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardScrollBarOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardScrollBarOptionsPtrOutput) VisibleRange() DashboardVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardScrollBarOptions) *DashboardVisibleRangeOptions {
		if v == nil {
			return nil
		}
		return v.VisibleRange
	}).(DashboardVisibleRangeOptionsPtrOutput)
}

type DashboardSecondaryValueOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardSecondaryValueOptionsInput is an input type that accepts DashboardSecondaryValueOptionsArgs and DashboardSecondaryValueOptionsOutput values.
// You can construct a concrete instance of `DashboardSecondaryValueOptionsInput` via:
//
//	DashboardSecondaryValueOptionsArgs{...}
type DashboardSecondaryValueOptionsInput interface {
	pulumi.Input

	ToDashboardSecondaryValueOptionsOutput() DashboardSecondaryValueOptionsOutput
	ToDashboardSecondaryValueOptionsOutputWithContext(context.Context) DashboardSecondaryValueOptionsOutput
}

type DashboardSecondaryValueOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardSecondaryValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSecondaryValueOptions)(nil)).Elem()
}

func (i DashboardSecondaryValueOptionsArgs) ToDashboardSecondaryValueOptionsOutput() DashboardSecondaryValueOptionsOutput {
	return i.ToDashboardSecondaryValueOptionsOutputWithContext(context.Background())
}

func (i DashboardSecondaryValueOptionsArgs) ToDashboardSecondaryValueOptionsOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSecondaryValueOptionsOutput)
}

func (i DashboardSecondaryValueOptionsArgs) ToDashboardSecondaryValueOptionsPtrOutput() DashboardSecondaryValueOptionsPtrOutput {
	return i.ToDashboardSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSecondaryValueOptionsArgs) ToDashboardSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSecondaryValueOptionsOutput).ToDashboardSecondaryValueOptionsPtrOutputWithContext(ctx)
}

// DashboardSecondaryValueOptionsPtrInput is an input type that accepts DashboardSecondaryValueOptionsArgs, DashboardSecondaryValueOptionsPtr and DashboardSecondaryValueOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSecondaryValueOptionsPtrInput` via:
//
//	        DashboardSecondaryValueOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSecondaryValueOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSecondaryValueOptionsPtrOutput() DashboardSecondaryValueOptionsPtrOutput
	ToDashboardSecondaryValueOptionsPtrOutputWithContext(context.Context) DashboardSecondaryValueOptionsPtrOutput
}

type dashboardSecondaryValueOptionsPtrType DashboardSecondaryValueOptionsArgs

func DashboardSecondaryValueOptionsPtr(v *DashboardSecondaryValueOptionsArgs) DashboardSecondaryValueOptionsPtrInput {
	return (*dashboardSecondaryValueOptionsPtrType)(v)
}

func (*dashboardSecondaryValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSecondaryValueOptions)(nil)).Elem()
}

func (i *dashboardSecondaryValueOptionsPtrType) ToDashboardSecondaryValueOptionsPtrOutput() DashboardSecondaryValueOptionsPtrOutput {
	return i.ToDashboardSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSecondaryValueOptionsPtrType) ToDashboardSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSecondaryValueOptionsPtrOutput)
}

type DashboardSecondaryValueOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSecondaryValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSecondaryValueOptions)(nil)).Elem()
}

func (o DashboardSecondaryValueOptionsOutput) ToDashboardSecondaryValueOptionsOutput() DashboardSecondaryValueOptionsOutput {
	return o
}

func (o DashboardSecondaryValueOptionsOutput) ToDashboardSecondaryValueOptionsOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsOutput {
	return o
}

func (o DashboardSecondaryValueOptionsOutput) ToDashboardSecondaryValueOptionsPtrOutput() DashboardSecondaryValueOptionsPtrOutput {
	return o.ToDashboardSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSecondaryValueOptionsOutput) ToDashboardSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSecondaryValueOptions) *DashboardSecondaryValueOptions {
		return &v
	}).(DashboardSecondaryValueOptionsPtrOutput)
}

func (o DashboardSecondaryValueOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardSecondaryValueOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardSecondaryValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSecondaryValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSecondaryValueOptions)(nil)).Elem()
}

func (o DashboardSecondaryValueOptionsPtrOutput) ToDashboardSecondaryValueOptionsPtrOutput() DashboardSecondaryValueOptionsPtrOutput {
	return o
}

func (o DashboardSecondaryValueOptionsPtrOutput) ToDashboardSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) DashboardSecondaryValueOptionsPtrOutput {
	return o
}

func (o DashboardSecondaryValueOptionsPtrOutput) Elem() DashboardSecondaryValueOptionsOutput {
	return o.ApplyT(func(v *DashboardSecondaryValueOptions) DashboardSecondaryValueOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSecondaryValueOptions
		return ret
	}).(DashboardSecondaryValueOptionsOutput)
}

func (o DashboardSecondaryValueOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardSecondaryValueOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardSectionAfterPageBreak struct {
	Status *DashboardSectionPageBreakStatus `pulumi:"status"`
}

// DashboardSectionAfterPageBreakInput is an input type that accepts DashboardSectionAfterPageBreakArgs and DashboardSectionAfterPageBreakOutput values.
// You can construct a concrete instance of `DashboardSectionAfterPageBreakInput` via:
//
//	DashboardSectionAfterPageBreakArgs{...}
type DashboardSectionAfterPageBreakInput interface {
	pulumi.Input

	ToDashboardSectionAfterPageBreakOutput() DashboardSectionAfterPageBreakOutput
	ToDashboardSectionAfterPageBreakOutputWithContext(context.Context) DashboardSectionAfterPageBreakOutput
}

type DashboardSectionAfterPageBreakArgs struct {
	Status DashboardSectionPageBreakStatusPtrInput `pulumi:"status"`
}

func (DashboardSectionAfterPageBreakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionAfterPageBreak)(nil)).Elem()
}

func (i DashboardSectionAfterPageBreakArgs) ToDashboardSectionAfterPageBreakOutput() DashboardSectionAfterPageBreakOutput {
	return i.ToDashboardSectionAfterPageBreakOutputWithContext(context.Background())
}

func (i DashboardSectionAfterPageBreakArgs) ToDashboardSectionAfterPageBreakOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionAfterPageBreakOutput)
}

func (i DashboardSectionAfterPageBreakArgs) ToDashboardSectionAfterPageBreakPtrOutput() DashboardSectionAfterPageBreakPtrOutput {
	return i.ToDashboardSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i DashboardSectionAfterPageBreakArgs) ToDashboardSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionAfterPageBreakOutput).ToDashboardSectionAfterPageBreakPtrOutputWithContext(ctx)
}

// DashboardSectionAfterPageBreakPtrInput is an input type that accepts DashboardSectionAfterPageBreakArgs, DashboardSectionAfterPageBreakPtr and DashboardSectionAfterPageBreakPtrOutput values.
// You can construct a concrete instance of `DashboardSectionAfterPageBreakPtrInput` via:
//
//	        DashboardSectionAfterPageBreakArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionAfterPageBreakPtrInput interface {
	pulumi.Input

	ToDashboardSectionAfterPageBreakPtrOutput() DashboardSectionAfterPageBreakPtrOutput
	ToDashboardSectionAfterPageBreakPtrOutputWithContext(context.Context) DashboardSectionAfterPageBreakPtrOutput
}

type dashboardSectionAfterPageBreakPtrType DashboardSectionAfterPageBreakArgs

func DashboardSectionAfterPageBreakPtr(v *DashboardSectionAfterPageBreakArgs) DashboardSectionAfterPageBreakPtrInput {
	return (*dashboardSectionAfterPageBreakPtrType)(v)
}

func (*dashboardSectionAfterPageBreakPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionAfterPageBreak)(nil)).Elem()
}

func (i *dashboardSectionAfterPageBreakPtrType) ToDashboardSectionAfterPageBreakPtrOutput() DashboardSectionAfterPageBreakPtrOutput {
	return i.ToDashboardSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionAfterPageBreakPtrType) ToDashboardSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionAfterPageBreakPtrOutput)
}

type DashboardSectionAfterPageBreakOutput struct{ *pulumi.OutputState }

func (DashboardSectionAfterPageBreakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionAfterPageBreak)(nil)).Elem()
}

func (o DashboardSectionAfterPageBreakOutput) ToDashboardSectionAfterPageBreakOutput() DashboardSectionAfterPageBreakOutput {
	return o
}

func (o DashboardSectionAfterPageBreakOutput) ToDashboardSectionAfterPageBreakOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakOutput {
	return o
}

func (o DashboardSectionAfterPageBreakOutput) ToDashboardSectionAfterPageBreakPtrOutput() DashboardSectionAfterPageBreakPtrOutput {
	return o.ToDashboardSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (o DashboardSectionAfterPageBreakOutput) ToDashboardSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionAfterPageBreak) *DashboardSectionAfterPageBreak {
		return &v
	}).(DashboardSectionAfterPageBreakPtrOutput)
}

func (o DashboardSectionAfterPageBreakOutput) Status() DashboardSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v DashboardSectionAfterPageBreak) *DashboardSectionPageBreakStatus { return v.Status }).(DashboardSectionPageBreakStatusPtrOutput)
}

type DashboardSectionAfterPageBreakPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionAfterPageBreakPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionAfterPageBreak)(nil)).Elem()
}

func (o DashboardSectionAfterPageBreakPtrOutput) ToDashboardSectionAfterPageBreakPtrOutput() DashboardSectionAfterPageBreakPtrOutput {
	return o
}

func (o DashboardSectionAfterPageBreakPtrOutput) ToDashboardSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) DashboardSectionAfterPageBreakPtrOutput {
	return o
}

func (o DashboardSectionAfterPageBreakPtrOutput) Elem() DashboardSectionAfterPageBreakOutput {
	return o.ApplyT(func(v *DashboardSectionAfterPageBreak) DashboardSectionAfterPageBreak {
		if v != nil {
			return *v
		}
		var ret DashboardSectionAfterPageBreak
		return ret
	}).(DashboardSectionAfterPageBreakOutput)
}

func (o DashboardSectionAfterPageBreakPtrOutput) Status() DashboardSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v *DashboardSectionAfterPageBreak) *DashboardSectionPageBreakStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DashboardSectionPageBreakStatusPtrOutput)
}

type DashboardSectionBasedLayoutCanvasSizeOptions struct {
	PaperCanvasSizeOptions *DashboardSectionBasedLayoutPaperCanvasSizeOptions `pulumi:"paperCanvasSizeOptions"`
}

// DashboardSectionBasedLayoutCanvasSizeOptionsInput is an input type that accepts DashboardSectionBasedLayoutCanvasSizeOptionsArgs and DashboardSectionBasedLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutCanvasSizeOptionsInput` via:
//
//	DashboardSectionBasedLayoutCanvasSizeOptionsArgs{...}
type DashboardSectionBasedLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutCanvasSizeOptionsOutput() DashboardSectionBasedLayoutCanvasSizeOptionsOutput
	ToDashboardSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsOutput
}

type DashboardSectionBasedLayoutCanvasSizeOptionsArgs struct {
	PaperCanvasSizeOptions DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput `pulumi:"paperCanvasSizeOptions"`
}

func (DashboardSectionBasedLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardSectionBasedLayoutCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutCanvasSizeOptionsOutput() DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return i.ToDashboardSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (i DashboardSectionBasedLayoutCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutCanvasSizeOptionsOutput).ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardSectionBasedLayoutCanvasSizeOptionsPtrInput is an input type that accepts DashboardSectionBasedLayoutCanvasSizeOptionsArgs, DashboardSectionBasedLayoutCanvasSizeOptionsPtr and DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutCanvasSizeOptionsPtrInput` via:
//
//	        DashboardSectionBasedLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionBasedLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput
	ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput
}

type dashboardSectionBasedLayoutCanvasSizeOptionsPtrType DashboardSectionBasedLayoutCanvasSizeOptionsArgs

func DashboardSectionBasedLayoutCanvasSizeOptionsPtr(v *DashboardSectionBasedLayoutCanvasSizeOptionsArgs) DashboardSectionBasedLayoutCanvasSizeOptionsPtrInput {
	return (*dashboardSectionBasedLayoutCanvasSizeOptionsPtrType)(v)
}

func (*dashboardSectionBasedLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardSectionBasedLayoutCanvasSizeOptionsPtrType) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionBasedLayoutCanvasSizeOptionsPtrType) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type DashboardSectionBasedLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsOutput() DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionBasedLayoutCanvasSizeOptions) *DashboardSectionBasedLayoutCanvasSizeOptions {
		return &v
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsOutput) PaperCanvasSizeOptions() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutCanvasSizeOptions) *DashboardSectionBasedLayoutPaperCanvasSizeOptions {
		return v.PaperCanvasSizeOptions
	}).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToDashboardSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput) Elem() DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutCanvasSizeOptions) DashboardSectionBasedLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSectionBasedLayoutCanvasSizeOptions
		return ret
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput) PaperCanvasSizeOptions() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutCanvasSizeOptions) *DashboardSectionBasedLayoutPaperCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.PaperCanvasSizeOptions
	}).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type DashboardSectionBasedLayoutConfiguration struct {
	BodySections      []DashboardBodySectionConfiguration          `pulumi:"bodySections"`
	CanvasSizeOptions DashboardSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	FooterSections    []DashboardHeaderFooterSectionConfiguration  `pulumi:"footerSections"`
	HeaderSections    []DashboardHeaderFooterSectionConfiguration  `pulumi:"headerSections"`
}

// DashboardSectionBasedLayoutConfigurationInput is an input type that accepts DashboardSectionBasedLayoutConfigurationArgs and DashboardSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutConfigurationInput` via:
//
//	DashboardSectionBasedLayoutConfigurationArgs{...}
type DashboardSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutConfigurationOutput() DashboardSectionBasedLayoutConfigurationOutput
	ToDashboardSectionBasedLayoutConfigurationOutputWithContext(context.Context) DashboardSectionBasedLayoutConfigurationOutput
}

type DashboardSectionBasedLayoutConfigurationArgs struct {
	BodySections      DashboardBodySectionConfigurationArrayInput         `pulumi:"bodySections"`
	CanvasSizeOptions DashboardSectionBasedLayoutCanvasSizeOptionsInput   `pulumi:"canvasSizeOptions"`
	FooterSections    DashboardHeaderFooterSectionConfigurationArrayInput `pulumi:"footerSections"`
	HeaderSections    DashboardHeaderFooterSectionConfigurationArrayInput `pulumi:"headerSections"`
}

func (DashboardSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i DashboardSectionBasedLayoutConfigurationArgs) ToDashboardSectionBasedLayoutConfigurationOutput() DashboardSectionBasedLayoutConfigurationOutput {
	return i.ToDashboardSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutConfigurationArgs) ToDashboardSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutConfigurationOutput)
}

func (i DashboardSectionBasedLayoutConfigurationArgs) ToDashboardSectionBasedLayoutConfigurationPtrOutput() DashboardSectionBasedLayoutConfigurationPtrOutput {
	return i.ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutConfigurationArgs) ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutConfigurationOutput).ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardSectionBasedLayoutConfigurationPtrInput is an input type that accepts DashboardSectionBasedLayoutConfigurationArgs, DashboardSectionBasedLayoutConfigurationPtr and DashboardSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutConfigurationPtrInput` via:
//
//	        DashboardSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutConfigurationPtrOutput() DashboardSectionBasedLayoutConfigurationPtrOutput
	ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) DashboardSectionBasedLayoutConfigurationPtrOutput
}

type dashboardSectionBasedLayoutConfigurationPtrType DashboardSectionBasedLayoutConfigurationArgs

func DashboardSectionBasedLayoutConfigurationPtr(v *DashboardSectionBasedLayoutConfigurationArgs) DashboardSectionBasedLayoutConfigurationPtrInput {
	return (*dashboardSectionBasedLayoutConfigurationPtrType)(v)
}

func (*dashboardSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardSectionBasedLayoutConfigurationPtrType) ToDashboardSectionBasedLayoutConfigurationPtrOutput() DashboardSectionBasedLayoutConfigurationPtrOutput {
	return i.ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionBasedLayoutConfigurationPtrType) ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutConfigurationPtrOutput)
}

type DashboardSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutConfigurationOutput) ToDashboardSectionBasedLayoutConfigurationOutput() DashboardSectionBasedLayoutConfigurationOutput {
	return o
}

func (o DashboardSectionBasedLayoutConfigurationOutput) ToDashboardSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationOutput {
	return o
}

func (o DashboardSectionBasedLayoutConfigurationOutput) ToDashboardSectionBasedLayoutConfigurationPtrOutput() DashboardSectionBasedLayoutConfigurationPtrOutput {
	return o.ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSectionBasedLayoutConfigurationOutput) ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionBasedLayoutConfiguration) *DashboardSectionBasedLayoutConfiguration {
		return &v
	}).(DashboardSectionBasedLayoutConfigurationPtrOutput)
}

func (o DashboardSectionBasedLayoutConfigurationOutput) BodySections() DashboardBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutConfiguration) []DashboardBodySectionConfiguration {
		return v.BodySections
	}).(DashboardBodySectionConfigurationArrayOutput)
}

func (o DashboardSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() DashboardSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutConfiguration) DashboardSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o DashboardSectionBasedLayoutConfigurationOutput) FooterSections() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutConfiguration) []DashboardHeaderFooterSectionConfiguration {
		return v.FooterSections
	}).(DashboardHeaderFooterSectionConfigurationArrayOutput)
}

func (o DashboardSectionBasedLayoutConfigurationOutput) HeaderSections() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutConfiguration) []DashboardHeaderFooterSectionConfiguration {
		return v.HeaderSections
	}).(DashboardHeaderFooterSectionConfigurationArrayOutput)
}

type DashboardSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) ToDashboardSectionBasedLayoutConfigurationPtrOutput() DashboardSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) ToDashboardSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) Elem() DashboardSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutConfiguration) DashboardSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSectionBasedLayoutConfiguration
		return ret
	}).(DashboardSectionBasedLayoutConfigurationOutput)
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) BodySections() DashboardBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutConfiguration) []DashboardBodySectionConfiguration {
		if v == nil {
			return nil
		}
		return v.BodySections
	}).(DashboardBodySectionConfigurationArrayOutput)
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutConfiguration) *DashboardSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) FooterSections() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutConfiguration) []DashboardHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.FooterSections
	}).(DashboardHeaderFooterSectionConfigurationArrayOutput)
}

func (o DashboardSectionBasedLayoutConfigurationPtrOutput) HeaderSections() DashboardHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutConfiguration) []DashboardHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.HeaderSections
	}).(DashboardHeaderFooterSectionConfigurationArrayOutput)
}

type DashboardSectionBasedLayoutPaperCanvasSizeOptions struct {
	PaperMargin      *DashboardSpacing          `pulumi:"paperMargin"`
	PaperOrientation *DashboardPaperOrientation `pulumi:"paperOrientation"`
	PaperSize        *DashboardPaperSize        `pulumi:"paperSize"`
}

// DashboardSectionBasedLayoutPaperCanvasSizeOptionsInput is an input type that accepts DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs and DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutPaperCanvasSizeOptionsInput` via:
//
//	DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
type DashboardSectionBasedLayoutPaperCanvasSizeOptionsInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput
	ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput
}

type DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs struct {
	PaperMargin      DashboardSpacingPtrInput          `pulumi:"paperMargin"`
	PaperOrientation DashboardPaperOrientationPtrInput `pulumi:"paperOrientation"`
	PaperSize        DashboardPaperSizePtrInput        `pulumi:"paperSize"`
}

func (DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return i.ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (i DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput).ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput is an input type that accepts DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs, DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtr and DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput` via:
//
//	        DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
	ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
}

type dashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrType DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs

func DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtr(v *DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput {
	return (*dashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrType)(v)
}

func (*dashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i *dashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardSectionBasedLayoutPaperCanvasSizeOptions {
		return &v
	}).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperMargin() DashboardSpacingPtrOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardSpacing { return v.PaperMargin }).(DashboardSpacingPtrOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperOrientation() DashboardPaperOrientationPtrOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardPaperOrientation {
		return v.PaperOrientation
	}).(DashboardPaperOrientationPtrOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperSize() DashboardPaperSizePtrOutput {
	return o.ApplyT(func(v DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardPaperSize { return v.PaperSize }).(DashboardPaperSizePtrOutput)
}

type DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToDashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) Elem() DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutPaperCanvasSizeOptions) DashboardSectionBasedLayoutPaperCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSectionBasedLayoutPaperCanvasSizeOptions
		return ret
	}).(DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperMargin() DashboardSpacingPtrOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardSpacing {
		if v == nil {
			return nil
		}
		return v.PaperMargin
	}).(DashboardSpacingPtrOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperOrientation() DashboardPaperOrientationPtrOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardPaperOrientation {
		if v == nil {
			return nil
		}
		return v.PaperOrientation
	}).(DashboardPaperOrientationPtrOutput)
}

func (o DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperSize() DashboardPaperSizePtrOutput {
	return o.ApplyT(func(v *DashboardSectionBasedLayoutPaperCanvasSizeOptions) *DashboardPaperSize {
		if v == nil {
			return nil
		}
		return v.PaperSize
	}).(DashboardPaperSizePtrOutput)
}

type DashboardSectionLayoutConfiguration struct {
	FreeFormLayout DashboardFreeFormSectionLayoutConfiguration `pulumi:"freeFormLayout"`
}

// DashboardSectionLayoutConfigurationInput is an input type that accepts DashboardSectionLayoutConfigurationArgs and DashboardSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardSectionLayoutConfigurationInput` via:
//
//	DashboardSectionLayoutConfigurationArgs{...}
type DashboardSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardSectionLayoutConfigurationOutput() DashboardSectionLayoutConfigurationOutput
	ToDashboardSectionLayoutConfigurationOutputWithContext(context.Context) DashboardSectionLayoutConfigurationOutput
}

type DashboardSectionLayoutConfigurationArgs struct {
	FreeFormLayout DashboardFreeFormSectionLayoutConfigurationInput `pulumi:"freeFormLayout"`
}

func (DashboardSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionLayoutConfiguration)(nil)).Elem()
}

func (i DashboardSectionLayoutConfigurationArgs) ToDashboardSectionLayoutConfigurationOutput() DashboardSectionLayoutConfigurationOutput {
	return i.ToDashboardSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardSectionLayoutConfigurationArgs) ToDashboardSectionLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionLayoutConfigurationOutput)
}

func (i DashboardSectionLayoutConfigurationArgs) ToDashboardSectionLayoutConfigurationPtrOutput() DashboardSectionLayoutConfigurationPtrOutput {
	return i.ToDashboardSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSectionLayoutConfigurationArgs) ToDashboardSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionLayoutConfigurationOutput).ToDashboardSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// DashboardSectionLayoutConfigurationPtrInput is an input type that accepts DashboardSectionLayoutConfigurationArgs, DashboardSectionLayoutConfigurationPtr and DashboardSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSectionLayoutConfigurationPtrInput` via:
//
//	        DashboardSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSectionLayoutConfigurationPtrOutput() DashboardSectionLayoutConfigurationPtrOutput
	ToDashboardSectionLayoutConfigurationPtrOutputWithContext(context.Context) DashboardSectionLayoutConfigurationPtrOutput
}

type dashboardSectionLayoutConfigurationPtrType DashboardSectionLayoutConfigurationArgs

func DashboardSectionLayoutConfigurationPtr(v *DashboardSectionLayoutConfigurationArgs) DashboardSectionLayoutConfigurationPtrInput {
	return (*dashboardSectionLayoutConfigurationPtrType)(v)
}

func (*dashboardSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionLayoutConfiguration)(nil)).Elem()
}

func (i *dashboardSectionLayoutConfigurationPtrType) ToDashboardSectionLayoutConfigurationPtrOutput() DashboardSectionLayoutConfigurationPtrOutput {
	return i.ToDashboardSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionLayoutConfigurationPtrType) ToDashboardSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionLayoutConfigurationPtrOutput)
}

type DashboardSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionLayoutConfiguration)(nil)).Elem()
}

func (o DashboardSectionLayoutConfigurationOutput) ToDashboardSectionLayoutConfigurationOutput() DashboardSectionLayoutConfigurationOutput {
	return o
}

func (o DashboardSectionLayoutConfigurationOutput) ToDashboardSectionLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationOutput {
	return o
}

func (o DashboardSectionLayoutConfigurationOutput) ToDashboardSectionLayoutConfigurationPtrOutput() DashboardSectionLayoutConfigurationPtrOutput {
	return o.ToDashboardSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSectionLayoutConfigurationOutput) ToDashboardSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionLayoutConfiguration) *DashboardSectionLayoutConfiguration {
		return &v
	}).(DashboardSectionLayoutConfigurationPtrOutput)
}

func (o DashboardSectionLayoutConfigurationOutput) FreeFormLayout() DashboardFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v DashboardSectionLayoutConfiguration) DashboardFreeFormSectionLayoutConfiguration {
		return v.FreeFormLayout
	}).(DashboardFreeFormSectionLayoutConfigurationOutput)
}

type DashboardSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionLayoutConfiguration)(nil)).Elem()
}

func (o DashboardSectionLayoutConfigurationPtrOutput) ToDashboardSectionLayoutConfigurationPtrOutput() DashboardSectionLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardSectionLayoutConfigurationPtrOutput) ToDashboardSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionLayoutConfigurationPtrOutput {
	return o
}

func (o DashboardSectionLayoutConfigurationPtrOutput) Elem() DashboardSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *DashboardSectionLayoutConfiguration) DashboardSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSectionLayoutConfiguration
		return ret
	}).(DashboardSectionLayoutConfigurationOutput)
}

func (o DashboardSectionLayoutConfigurationPtrOutput) FreeFormLayout() DashboardFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSectionLayoutConfiguration) *DashboardFreeFormSectionLayoutConfiguration {
		if v == nil {
			return nil
		}
		return &v.FreeFormLayout
	}).(DashboardFreeFormSectionLayoutConfigurationPtrOutput)
}

type DashboardSectionPageBreakConfiguration struct {
	After *DashboardSectionAfterPageBreak `pulumi:"after"`
}

// DashboardSectionPageBreakConfigurationInput is an input type that accepts DashboardSectionPageBreakConfigurationArgs and DashboardSectionPageBreakConfigurationOutput values.
// You can construct a concrete instance of `DashboardSectionPageBreakConfigurationInput` via:
//
//	DashboardSectionPageBreakConfigurationArgs{...}
type DashboardSectionPageBreakConfigurationInput interface {
	pulumi.Input

	ToDashboardSectionPageBreakConfigurationOutput() DashboardSectionPageBreakConfigurationOutput
	ToDashboardSectionPageBreakConfigurationOutputWithContext(context.Context) DashboardSectionPageBreakConfigurationOutput
}

type DashboardSectionPageBreakConfigurationArgs struct {
	After DashboardSectionAfterPageBreakPtrInput `pulumi:"after"`
}

func (DashboardSectionPageBreakConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionPageBreakConfiguration)(nil)).Elem()
}

func (i DashboardSectionPageBreakConfigurationArgs) ToDashboardSectionPageBreakConfigurationOutput() DashboardSectionPageBreakConfigurationOutput {
	return i.ToDashboardSectionPageBreakConfigurationOutputWithContext(context.Background())
}

func (i DashboardSectionPageBreakConfigurationArgs) ToDashboardSectionPageBreakConfigurationOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionPageBreakConfigurationOutput)
}

func (i DashboardSectionPageBreakConfigurationArgs) ToDashboardSectionPageBreakConfigurationPtrOutput() DashboardSectionPageBreakConfigurationPtrOutput {
	return i.ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSectionPageBreakConfigurationArgs) ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionPageBreakConfigurationOutput).ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(ctx)
}

// DashboardSectionPageBreakConfigurationPtrInput is an input type that accepts DashboardSectionPageBreakConfigurationArgs, DashboardSectionPageBreakConfigurationPtr and DashboardSectionPageBreakConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSectionPageBreakConfigurationPtrInput` via:
//
//	        DashboardSectionPageBreakConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionPageBreakConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSectionPageBreakConfigurationPtrOutput() DashboardSectionPageBreakConfigurationPtrOutput
	ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(context.Context) DashboardSectionPageBreakConfigurationPtrOutput
}

type dashboardSectionPageBreakConfigurationPtrType DashboardSectionPageBreakConfigurationArgs

func DashboardSectionPageBreakConfigurationPtr(v *DashboardSectionPageBreakConfigurationArgs) DashboardSectionPageBreakConfigurationPtrInput {
	return (*dashboardSectionPageBreakConfigurationPtrType)(v)
}

func (*dashboardSectionPageBreakConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionPageBreakConfiguration)(nil)).Elem()
}

func (i *dashboardSectionPageBreakConfigurationPtrType) ToDashboardSectionPageBreakConfigurationPtrOutput() DashboardSectionPageBreakConfigurationPtrOutput {
	return i.ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSectionPageBreakConfigurationPtrType) ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionPageBreakConfigurationPtrOutput)
}

type DashboardSectionPageBreakConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSectionPageBreakConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionPageBreakConfiguration)(nil)).Elem()
}

func (o DashboardSectionPageBreakConfigurationOutput) ToDashboardSectionPageBreakConfigurationOutput() DashboardSectionPageBreakConfigurationOutput {
	return o
}

func (o DashboardSectionPageBreakConfigurationOutput) ToDashboardSectionPageBreakConfigurationOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationOutput {
	return o
}

func (o DashboardSectionPageBreakConfigurationOutput) ToDashboardSectionPageBreakConfigurationPtrOutput() DashboardSectionPageBreakConfigurationPtrOutput {
	return o.ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSectionPageBreakConfigurationOutput) ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionPageBreakConfiguration) *DashboardSectionPageBreakConfiguration {
		return &v
	}).(DashboardSectionPageBreakConfigurationPtrOutput)
}

func (o DashboardSectionPageBreakConfigurationOutput) After() DashboardSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v DashboardSectionPageBreakConfiguration) *DashboardSectionAfterPageBreak { return v.After }).(DashboardSectionAfterPageBreakPtrOutput)
}

type DashboardSectionPageBreakConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionPageBreakConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionPageBreakConfiguration)(nil)).Elem()
}

func (o DashboardSectionPageBreakConfigurationPtrOutput) ToDashboardSectionPageBreakConfigurationPtrOutput() DashboardSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o DashboardSectionPageBreakConfigurationPtrOutput) ToDashboardSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) DashboardSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o DashboardSectionPageBreakConfigurationPtrOutput) Elem() DashboardSectionPageBreakConfigurationOutput {
	return o.ApplyT(func(v *DashboardSectionPageBreakConfiguration) DashboardSectionPageBreakConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSectionPageBreakConfiguration
		return ret
	}).(DashboardSectionPageBreakConfigurationOutput)
}

func (o DashboardSectionPageBreakConfigurationPtrOutput) After() DashboardSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v *DashboardSectionPageBreakConfiguration) *DashboardSectionAfterPageBreak {
		if v == nil {
			return nil
		}
		return v.After
	}).(DashboardSectionAfterPageBreakPtrOutput)
}

type DashboardSectionStyle struct {
	// String based length that is composed of value and unit in px
	Height  *string           `pulumi:"height"`
	Padding *DashboardSpacing `pulumi:"padding"`
}

// DashboardSectionStyleInput is an input type that accepts DashboardSectionStyleArgs and DashboardSectionStyleOutput values.
// You can construct a concrete instance of `DashboardSectionStyleInput` via:
//
//	DashboardSectionStyleArgs{...}
type DashboardSectionStyleInput interface {
	pulumi.Input

	ToDashboardSectionStyleOutput() DashboardSectionStyleOutput
	ToDashboardSectionStyleOutputWithContext(context.Context) DashboardSectionStyleOutput
}

type DashboardSectionStyleArgs struct {
	// String based length that is composed of value and unit in px
	Height  pulumi.StringPtrInput    `pulumi:"height"`
	Padding DashboardSpacingPtrInput `pulumi:"padding"`
}

func (DashboardSectionStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionStyle)(nil)).Elem()
}

func (i DashboardSectionStyleArgs) ToDashboardSectionStyleOutput() DashboardSectionStyleOutput {
	return i.ToDashboardSectionStyleOutputWithContext(context.Background())
}

func (i DashboardSectionStyleArgs) ToDashboardSectionStyleOutputWithContext(ctx context.Context) DashboardSectionStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionStyleOutput)
}

func (i DashboardSectionStyleArgs) ToDashboardSectionStylePtrOutput() DashboardSectionStylePtrOutput {
	return i.ToDashboardSectionStylePtrOutputWithContext(context.Background())
}

func (i DashboardSectionStyleArgs) ToDashboardSectionStylePtrOutputWithContext(ctx context.Context) DashboardSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionStyleOutput).ToDashboardSectionStylePtrOutputWithContext(ctx)
}

// DashboardSectionStylePtrInput is an input type that accepts DashboardSectionStyleArgs, DashboardSectionStylePtr and DashboardSectionStylePtrOutput values.
// You can construct a concrete instance of `DashboardSectionStylePtrInput` via:
//
//	        DashboardSectionStyleArgs{...}
//
//	or:
//
//	        nil
type DashboardSectionStylePtrInput interface {
	pulumi.Input

	ToDashboardSectionStylePtrOutput() DashboardSectionStylePtrOutput
	ToDashboardSectionStylePtrOutputWithContext(context.Context) DashboardSectionStylePtrOutput
}

type dashboardSectionStylePtrType DashboardSectionStyleArgs

func DashboardSectionStylePtr(v *DashboardSectionStyleArgs) DashboardSectionStylePtrInput {
	return (*dashboardSectionStylePtrType)(v)
}

func (*dashboardSectionStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionStyle)(nil)).Elem()
}

func (i *dashboardSectionStylePtrType) ToDashboardSectionStylePtrOutput() DashboardSectionStylePtrOutput {
	return i.ToDashboardSectionStylePtrOutputWithContext(context.Background())
}

func (i *dashboardSectionStylePtrType) ToDashboardSectionStylePtrOutputWithContext(ctx context.Context) DashboardSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSectionStylePtrOutput)
}

type DashboardSectionStyleOutput struct{ *pulumi.OutputState }

func (DashboardSectionStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSectionStyle)(nil)).Elem()
}

func (o DashboardSectionStyleOutput) ToDashboardSectionStyleOutput() DashboardSectionStyleOutput {
	return o
}

func (o DashboardSectionStyleOutput) ToDashboardSectionStyleOutputWithContext(ctx context.Context) DashboardSectionStyleOutput {
	return o
}

func (o DashboardSectionStyleOutput) ToDashboardSectionStylePtrOutput() DashboardSectionStylePtrOutput {
	return o.ToDashboardSectionStylePtrOutputWithContext(context.Background())
}

func (o DashboardSectionStyleOutput) ToDashboardSectionStylePtrOutputWithContext(ctx context.Context) DashboardSectionStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSectionStyle) *DashboardSectionStyle {
		return &v
	}).(DashboardSectionStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardSectionStyleOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSectionStyle) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o DashboardSectionStyleOutput) Padding() DashboardSpacingPtrOutput {
	return o.ApplyT(func(v DashboardSectionStyle) *DashboardSpacing { return v.Padding }).(DashboardSpacingPtrOutput)
}

type DashboardSectionStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardSectionStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSectionStyle)(nil)).Elem()
}

func (o DashboardSectionStylePtrOutput) ToDashboardSectionStylePtrOutput() DashboardSectionStylePtrOutput {
	return o
}

func (o DashboardSectionStylePtrOutput) ToDashboardSectionStylePtrOutputWithContext(ctx context.Context) DashboardSectionStylePtrOutput {
	return o
}

func (o DashboardSectionStylePtrOutput) Elem() DashboardSectionStyleOutput {
	return o.ApplyT(func(v *DashboardSectionStyle) DashboardSectionStyle {
		if v != nil {
			return *v
		}
		var ret DashboardSectionStyle
		return ret
	}).(DashboardSectionStyleOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardSectionStylePtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSectionStyle) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o DashboardSectionStylePtrOutput) Padding() DashboardSpacingPtrOutput {
	return o.ApplyT(func(v *DashboardSectionStyle) *DashboardSpacing {
		if v == nil {
			return nil
		}
		return v.Padding
	}).(DashboardSpacingPtrOutput)
}

type DashboardSelectedSheetsFilterScopeConfiguration struct {
	SheetVisualScopingConfigurations []DashboardSheetVisualScopingConfiguration `pulumi:"sheetVisualScopingConfigurations"`
}

// DashboardSelectedSheetsFilterScopeConfigurationInput is an input type that accepts DashboardSelectedSheetsFilterScopeConfigurationArgs and DashboardSelectedSheetsFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `DashboardSelectedSheetsFilterScopeConfigurationInput` via:
//
//	DashboardSelectedSheetsFilterScopeConfigurationArgs{...}
type DashboardSelectedSheetsFilterScopeConfigurationInput interface {
	pulumi.Input

	ToDashboardSelectedSheetsFilterScopeConfigurationOutput() DashboardSelectedSheetsFilterScopeConfigurationOutput
	ToDashboardSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Context) DashboardSelectedSheetsFilterScopeConfigurationOutput
}

type DashboardSelectedSheetsFilterScopeConfigurationArgs struct {
	SheetVisualScopingConfigurations DashboardSheetVisualScopingConfigurationArrayInput `pulumi:"sheetVisualScopingConfigurations"`
}

func (DashboardSelectedSheetsFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i DashboardSelectedSheetsFilterScopeConfigurationArgs) ToDashboardSelectedSheetsFilterScopeConfigurationOutput() DashboardSelectedSheetsFilterScopeConfigurationOutput {
	return i.ToDashboardSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i DashboardSelectedSheetsFilterScopeConfigurationArgs) ToDashboardSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSelectedSheetsFilterScopeConfigurationOutput)
}

func (i DashboardSelectedSheetsFilterScopeConfigurationArgs) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutput() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardSelectedSheetsFilterScopeConfigurationArgs) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSelectedSheetsFilterScopeConfigurationOutput).ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx)
}

// DashboardSelectedSheetsFilterScopeConfigurationPtrInput is an input type that accepts DashboardSelectedSheetsFilterScopeConfigurationArgs, DashboardSelectedSheetsFilterScopeConfigurationPtr and DashboardSelectedSheetsFilterScopeConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardSelectedSheetsFilterScopeConfigurationPtrInput` via:
//
//	        DashboardSelectedSheetsFilterScopeConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardSelectedSheetsFilterScopeConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutput() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput
	ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Context) DashboardSelectedSheetsFilterScopeConfigurationPtrOutput
}

type dashboardSelectedSheetsFilterScopeConfigurationPtrType DashboardSelectedSheetsFilterScopeConfigurationArgs

func DashboardSelectedSheetsFilterScopeConfigurationPtr(v *DashboardSelectedSheetsFilterScopeConfigurationArgs) DashboardSelectedSheetsFilterScopeConfigurationPtrInput {
	return (*dashboardSelectedSheetsFilterScopeConfigurationPtrType)(v)
}

func (*dashboardSelectedSheetsFilterScopeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i *dashboardSelectedSheetsFilterScopeConfigurationPtrType) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutput() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardSelectedSheetsFilterScopeConfigurationPtrType) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type DashboardSelectedSheetsFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSelectedSheetsFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o DashboardSelectedSheetsFilterScopeConfigurationOutput) ToDashboardSelectedSheetsFilterScopeConfigurationOutput() DashboardSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o DashboardSelectedSheetsFilterScopeConfigurationOutput) ToDashboardSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o DashboardSelectedSheetsFilterScopeConfigurationOutput) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutput() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardSelectedSheetsFilterScopeConfigurationOutput) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSelectedSheetsFilterScopeConfiguration) *DashboardSelectedSheetsFilterScopeConfiguration {
		return &v
	}).(DashboardSelectedSheetsFilterScopeConfigurationPtrOutput)
}

func (o DashboardSelectedSheetsFilterScopeConfigurationOutput) SheetVisualScopingConfigurations() DashboardSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardSelectedSheetsFilterScopeConfiguration) []DashboardSheetVisualScopingConfiguration {
		return v.SheetVisualScopingConfigurations
	}).(DashboardSheetVisualScopingConfigurationArrayOutput)
}

type DashboardSelectedSheetsFilterScopeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardSelectedSheetsFilterScopeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o DashboardSelectedSheetsFilterScopeConfigurationPtrOutput) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutput() DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o DashboardSelectedSheetsFilterScopeConfigurationPtrOutput) ToDashboardSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) DashboardSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o DashboardSelectedSheetsFilterScopeConfigurationPtrOutput) Elem() DashboardSelectedSheetsFilterScopeConfigurationOutput {
	return o.ApplyT(func(v *DashboardSelectedSheetsFilterScopeConfiguration) DashboardSelectedSheetsFilterScopeConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardSelectedSheetsFilterScopeConfiguration
		return ret
	}).(DashboardSelectedSheetsFilterScopeConfigurationOutput)
}

func (o DashboardSelectedSheetsFilterScopeConfigurationPtrOutput) SheetVisualScopingConfigurations() DashboardSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardSelectedSheetsFilterScopeConfiguration) []DashboardSheetVisualScopingConfiguration {
		if v == nil {
			return nil
		}
		return v.SheetVisualScopingConfigurations
	}).(DashboardSheetVisualScopingConfigurationArrayOutput)
}

type DashboardSeriesItem struct {
	DataFieldSeriesItem *DashboardDataFieldSeriesItem `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     *DashboardFieldSeriesItem     `pulumi:"fieldSeriesItem"`
}

// DashboardSeriesItemInput is an input type that accepts DashboardSeriesItemArgs and DashboardSeriesItemOutput values.
// You can construct a concrete instance of `DashboardSeriesItemInput` via:
//
//	DashboardSeriesItemArgs{...}
type DashboardSeriesItemInput interface {
	pulumi.Input

	ToDashboardSeriesItemOutput() DashboardSeriesItemOutput
	ToDashboardSeriesItemOutputWithContext(context.Context) DashboardSeriesItemOutput
}

type DashboardSeriesItemArgs struct {
	DataFieldSeriesItem DashboardDataFieldSeriesItemPtrInput `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     DashboardFieldSeriesItemPtrInput     `pulumi:"fieldSeriesItem"`
}

func (DashboardSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSeriesItem)(nil)).Elem()
}

func (i DashboardSeriesItemArgs) ToDashboardSeriesItemOutput() DashboardSeriesItemOutput {
	return i.ToDashboardSeriesItemOutputWithContext(context.Background())
}

func (i DashboardSeriesItemArgs) ToDashboardSeriesItemOutputWithContext(ctx context.Context) DashboardSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSeriesItemOutput)
}

// DashboardSeriesItemArrayInput is an input type that accepts DashboardSeriesItemArray and DashboardSeriesItemArrayOutput values.
// You can construct a concrete instance of `DashboardSeriesItemArrayInput` via:
//
//	DashboardSeriesItemArray{ DashboardSeriesItemArgs{...} }
type DashboardSeriesItemArrayInput interface {
	pulumi.Input

	ToDashboardSeriesItemArrayOutput() DashboardSeriesItemArrayOutput
	ToDashboardSeriesItemArrayOutputWithContext(context.Context) DashboardSeriesItemArrayOutput
}

type DashboardSeriesItemArray []DashboardSeriesItemInput

func (DashboardSeriesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSeriesItem)(nil)).Elem()
}

func (i DashboardSeriesItemArray) ToDashboardSeriesItemArrayOutput() DashboardSeriesItemArrayOutput {
	return i.ToDashboardSeriesItemArrayOutputWithContext(context.Background())
}

func (i DashboardSeriesItemArray) ToDashboardSeriesItemArrayOutputWithContext(ctx context.Context) DashboardSeriesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSeriesItemArrayOutput)
}

type DashboardSeriesItemOutput struct{ *pulumi.OutputState }

func (DashboardSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSeriesItem)(nil)).Elem()
}

func (o DashboardSeriesItemOutput) ToDashboardSeriesItemOutput() DashboardSeriesItemOutput {
	return o
}

func (o DashboardSeriesItemOutput) ToDashboardSeriesItemOutputWithContext(ctx context.Context) DashboardSeriesItemOutput {
	return o
}

func (o DashboardSeriesItemOutput) DataFieldSeriesItem() DashboardDataFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v DashboardSeriesItem) *DashboardDataFieldSeriesItem { return v.DataFieldSeriesItem }).(DashboardDataFieldSeriesItemPtrOutput)
}

func (o DashboardSeriesItemOutput) FieldSeriesItem() DashboardFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v DashboardSeriesItem) *DashboardFieldSeriesItem { return v.FieldSeriesItem }).(DashboardFieldSeriesItemPtrOutput)
}

type DashboardSeriesItemArrayOutput struct{ *pulumi.OutputState }

func (DashboardSeriesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSeriesItem)(nil)).Elem()
}

func (o DashboardSeriesItemArrayOutput) ToDashboardSeriesItemArrayOutput() DashboardSeriesItemArrayOutput {
	return o
}

func (o DashboardSeriesItemArrayOutput) ToDashboardSeriesItemArrayOutputWithContext(ctx context.Context) DashboardSeriesItemArrayOutput {
	return o
}

func (o DashboardSeriesItemArrayOutput) Index(i pulumi.IntInput) DashboardSeriesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSeriesItem {
		return vs[0].([]DashboardSeriesItem)[vs[1].(int)]
	}).(DashboardSeriesItemOutput)
}

type DashboardSetParameterValueConfiguration struct {
	DestinationParameterName string                                          `pulumi:"destinationParameterName"`
	Value                    DashboardDestinationParameterValueConfiguration `pulumi:"value"`
}

// DashboardSetParameterValueConfigurationInput is an input type that accepts DashboardSetParameterValueConfigurationArgs and DashboardSetParameterValueConfigurationOutput values.
// You can construct a concrete instance of `DashboardSetParameterValueConfigurationInput` via:
//
//	DashboardSetParameterValueConfigurationArgs{...}
type DashboardSetParameterValueConfigurationInput interface {
	pulumi.Input

	ToDashboardSetParameterValueConfigurationOutput() DashboardSetParameterValueConfigurationOutput
	ToDashboardSetParameterValueConfigurationOutputWithContext(context.Context) DashboardSetParameterValueConfigurationOutput
}

type DashboardSetParameterValueConfigurationArgs struct {
	DestinationParameterName pulumi.StringInput                                   `pulumi:"destinationParameterName"`
	Value                    DashboardDestinationParameterValueConfigurationInput `pulumi:"value"`
}

func (DashboardSetParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSetParameterValueConfiguration)(nil)).Elem()
}

func (i DashboardSetParameterValueConfigurationArgs) ToDashboardSetParameterValueConfigurationOutput() DashboardSetParameterValueConfigurationOutput {
	return i.ToDashboardSetParameterValueConfigurationOutputWithContext(context.Background())
}

func (i DashboardSetParameterValueConfigurationArgs) ToDashboardSetParameterValueConfigurationOutputWithContext(ctx context.Context) DashboardSetParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSetParameterValueConfigurationOutput)
}

// DashboardSetParameterValueConfigurationArrayInput is an input type that accepts DashboardSetParameterValueConfigurationArray and DashboardSetParameterValueConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardSetParameterValueConfigurationArrayInput` via:
//
//	DashboardSetParameterValueConfigurationArray{ DashboardSetParameterValueConfigurationArgs{...} }
type DashboardSetParameterValueConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardSetParameterValueConfigurationArrayOutput() DashboardSetParameterValueConfigurationArrayOutput
	ToDashboardSetParameterValueConfigurationArrayOutputWithContext(context.Context) DashboardSetParameterValueConfigurationArrayOutput
}

type DashboardSetParameterValueConfigurationArray []DashboardSetParameterValueConfigurationInput

func (DashboardSetParameterValueConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSetParameterValueConfiguration)(nil)).Elem()
}

func (i DashboardSetParameterValueConfigurationArray) ToDashboardSetParameterValueConfigurationArrayOutput() DashboardSetParameterValueConfigurationArrayOutput {
	return i.ToDashboardSetParameterValueConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardSetParameterValueConfigurationArray) ToDashboardSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) DashboardSetParameterValueConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSetParameterValueConfigurationArrayOutput)
}

type DashboardSetParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSetParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSetParameterValueConfiguration)(nil)).Elem()
}

func (o DashboardSetParameterValueConfigurationOutput) ToDashboardSetParameterValueConfigurationOutput() DashboardSetParameterValueConfigurationOutput {
	return o
}

func (o DashboardSetParameterValueConfigurationOutput) ToDashboardSetParameterValueConfigurationOutputWithContext(ctx context.Context) DashboardSetParameterValueConfigurationOutput {
	return o
}

func (o DashboardSetParameterValueConfigurationOutput) DestinationParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSetParameterValueConfiguration) string { return v.DestinationParameterName }).(pulumi.StringOutput)
}

func (o DashboardSetParameterValueConfigurationOutput) Value() DashboardDestinationParameterValueConfigurationOutput {
	return o.ApplyT(func(v DashboardSetParameterValueConfiguration) DashboardDestinationParameterValueConfiguration {
		return v.Value
	}).(DashboardDestinationParameterValueConfigurationOutput)
}

type DashboardSetParameterValueConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardSetParameterValueConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSetParameterValueConfiguration)(nil)).Elem()
}

func (o DashboardSetParameterValueConfigurationArrayOutput) ToDashboardSetParameterValueConfigurationArrayOutput() DashboardSetParameterValueConfigurationArrayOutput {
	return o
}

func (o DashboardSetParameterValueConfigurationArrayOutput) ToDashboardSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) DashboardSetParameterValueConfigurationArrayOutput {
	return o
}

func (o DashboardSetParameterValueConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardSetParameterValueConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSetParameterValueConfiguration {
		return vs[0].([]DashboardSetParameterValueConfiguration)[vs[1].(int)]
	}).(DashboardSetParameterValueConfigurationOutput)
}

type DashboardShapeConditionalFormat struct {
	BackgroundColor DashboardConditionalFormattingColor `pulumi:"backgroundColor"`
}

// DashboardShapeConditionalFormatInput is an input type that accepts DashboardShapeConditionalFormatArgs and DashboardShapeConditionalFormatOutput values.
// You can construct a concrete instance of `DashboardShapeConditionalFormatInput` via:
//
//	DashboardShapeConditionalFormatArgs{...}
type DashboardShapeConditionalFormatInput interface {
	pulumi.Input

	ToDashboardShapeConditionalFormatOutput() DashboardShapeConditionalFormatOutput
	ToDashboardShapeConditionalFormatOutputWithContext(context.Context) DashboardShapeConditionalFormatOutput
}

type DashboardShapeConditionalFormatArgs struct {
	BackgroundColor DashboardConditionalFormattingColorInput `pulumi:"backgroundColor"`
}

func (DashboardShapeConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardShapeConditionalFormat)(nil)).Elem()
}

func (i DashboardShapeConditionalFormatArgs) ToDashboardShapeConditionalFormatOutput() DashboardShapeConditionalFormatOutput {
	return i.ToDashboardShapeConditionalFormatOutputWithContext(context.Background())
}

func (i DashboardShapeConditionalFormatArgs) ToDashboardShapeConditionalFormatOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShapeConditionalFormatOutput)
}

func (i DashboardShapeConditionalFormatArgs) ToDashboardShapeConditionalFormatPtrOutput() DashboardShapeConditionalFormatPtrOutput {
	return i.ToDashboardShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i DashboardShapeConditionalFormatArgs) ToDashboardShapeConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShapeConditionalFormatOutput).ToDashboardShapeConditionalFormatPtrOutputWithContext(ctx)
}

// DashboardShapeConditionalFormatPtrInput is an input type that accepts DashboardShapeConditionalFormatArgs, DashboardShapeConditionalFormatPtr and DashboardShapeConditionalFormatPtrOutput values.
// You can construct a concrete instance of `DashboardShapeConditionalFormatPtrInput` via:
//
//	        DashboardShapeConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type DashboardShapeConditionalFormatPtrInput interface {
	pulumi.Input

	ToDashboardShapeConditionalFormatPtrOutput() DashboardShapeConditionalFormatPtrOutput
	ToDashboardShapeConditionalFormatPtrOutputWithContext(context.Context) DashboardShapeConditionalFormatPtrOutput
}

type dashboardShapeConditionalFormatPtrType DashboardShapeConditionalFormatArgs

func DashboardShapeConditionalFormatPtr(v *DashboardShapeConditionalFormatArgs) DashboardShapeConditionalFormatPtrInput {
	return (*dashboardShapeConditionalFormatPtrType)(v)
}

func (*dashboardShapeConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardShapeConditionalFormat)(nil)).Elem()
}

func (i *dashboardShapeConditionalFormatPtrType) ToDashboardShapeConditionalFormatPtrOutput() DashboardShapeConditionalFormatPtrOutput {
	return i.ToDashboardShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *dashboardShapeConditionalFormatPtrType) ToDashboardShapeConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShapeConditionalFormatPtrOutput)
}

type DashboardShapeConditionalFormatOutput struct{ *pulumi.OutputState }

func (DashboardShapeConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardShapeConditionalFormat)(nil)).Elem()
}

func (o DashboardShapeConditionalFormatOutput) ToDashboardShapeConditionalFormatOutput() DashboardShapeConditionalFormatOutput {
	return o
}

func (o DashboardShapeConditionalFormatOutput) ToDashboardShapeConditionalFormatOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatOutput {
	return o
}

func (o DashboardShapeConditionalFormatOutput) ToDashboardShapeConditionalFormatPtrOutput() DashboardShapeConditionalFormatPtrOutput {
	return o.ToDashboardShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (o DashboardShapeConditionalFormatOutput) ToDashboardShapeConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardShapeConditionalFormat) *DashboardShapeConditionalFormat {
		return &v
	}).(DashboardShapeConditionalFormatPtrOutput)
}

func (o DashboardShapeConditionalFormatOutput) BackgroundColor() DashboardConditionalFormattingColorOutput {
	return o.ApplyT(func(v DashboardShapeConditionalFormat) DashboardConditionalFormattingColor { return v.BackgroundColor }).(DashboardConditionalFormattingColorOutput)
}

type DashboardShapeConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (DashboardShapeConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardShapeConditionalFormat)(nil)).Elem()
}

func (o DashboardShapeConditionalFormatPtrOutput) ToDashboardShapeConditionalFormatPtrOutput() DashboardShapeConditionalFormatPtrOutput {
	return o
}

func (o DashboardShapeConditionalFormatPtrOutput) ToDashboardShapeConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardShapeConditionalFormatPtrOutput {
	return o
}

func (o DashboardShapeConditionalFormatPtrOutput) Elem() DashboardShapeConditionalFormatOutput {
	return o.ApplyT(func(v *DashboardShapeConditionalFormat) DashboardShapeConditionalFormat {
		if v != nil {
			return *v
		}
		var ret DashboardShapeConditionalFormat
		return ret
	}).(DashboardShapeConditionalFormatOutput)
}

func (o DashboardShapeConditionalFormatPtrOutput) BackgroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardShapeConditionalFormat) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return &v.BackgroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardSheet struct {
	Name    *string `pulumi:"name"`
	SheetId *string `pulumi:"sheetId"`
}

type DashboardSheetOutput struct{ *pulumi.OutputState }

func (DashboardSheetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheet)(nil)).Elem()
}

func (o DashboardSheetOutput) ToDashboardSheetOutput() DashboardSheetOutput {
	return o
}

func (o DashboardSheetOutput) ToDashboardSheetOutputWithContext(ctx context.Context) DashboardSheetOutput {
	return o
}

func (o DashboardSheetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardSheetOutput) SheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheet) *string { return v.SheetId }).(pulumi.StringPtrOutput)
}

type DashboardSheetArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheet)(nil)).Elem()
}

func (o DashboardSheetArrayOutput) ToDashboardSheetArrayOutput() DashboardSheetArrayOutput {
	return o
}

func (o DashboardSheetArrayOutput) ToDashboardSheetArrayOutputWithContext(ctx context.Context) DashboardSheetArrayOutput {
	return o
}

func (o DashboardSheetArrayOutput) Index(i pulumi.IntInput) DashboardSheetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheet {
		return vs[0].([]DashboardSheet)[vs[1].(int)]
	}).(DashboardSheetOutput)
}

type DashboardSheetControlLayout struct {
	Configuration DashboardSheetControlLayoutConfiguration `pulumi:"configuration"`
}

// DashboardSheetControlLayoutInput is an input type that accepts DashboardSheetControlLayoutArgs and DashboardSheetControlLayoutOutput values.
// You can construct a concrete instance of `DashboardSheetControlLayoutInput` via:
//
//	DashboardSheetControlLayoutArgs{...}
type DashboardSheetControlLayoutInput interface {
	pulumi.Input

	ToDashboardSheetControlLayoutOutput() DashboardSheetControlLayoutOutput
	ToDashboardSheetControlLayoutOutputWithContext(context.Context) DashboardSheetControlLayoutOutput
}

type DashboardSheetControlLayoutArgs struct {
	Configuration DashboardSheetControlLayoutConfigurationInput `pulumi:"configuration"`
}

func (DashboardSheetControlLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlLayout)(nil)).Elem()
}

func (i DashboardSheetControlLayoutArgs) ToDashboardSheetControlLayoutOutput() DashboardSheetControlLayoutOutput {
	return i.ToDashboardSheetControlLayoutOutputWithContext(context.Background())
}

func (i DashboardSheetControlLayoutArgs) ToDashboardSheetControlLayoutOutputWithContext(ctx context.Context) DashboardSheetControlLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlLayoutOutput)
}

// DashboardSheetControlLayoutArrayInput is an input type that accepts DashboardSheetControlLayoutArray and DashboardSheetControlLayoutArrayOutput values.
// You can construct a concrete instance of `DashboardSheetControlLayoutArrayInput` via:
//
//	DashboardSheetControlLayoutArray{ DashboardSheetControlLayoutArgs{...} }
type DashboardSheetControlLayoutArrayInput interface {
	pulumi.Input

	ToDashboardSheetControlLayoutArrayOutput() DashboardSheetControlLayoutArrayOutput
	ToDashboardSheetControlLayoutArrayOutputWithContext(context.Context) DashboardSheetControlLayoutArrayOutput
}

type DashboardSheetControlLayoutArray []DashboardSheetControlLayoutInput

func (DashboardSheetControlLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetControlLayout)(nil)).Elem()
}

func (i DashboardSheetControlLayoutArray) ToDashboardSheetControlLayoutArrayOutput() DashboardSheetControlLayoutArrayOutput {
	return i.ToDashboardSheetControlLayoutArrayOutputWithContext(context.Background())
}

func (i DashboardSheetControlLayoutArray) ToDashboardSheetControlLayoutArrayOutputWithContext(ctx context.Context) DashboardSheetControlLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlLayoutArrayOutput)
}

type DashboardSheetControlLayoutOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlLayout)(nil)).Elem()
}

func (o DashboardSheetControlLayoutOutput) ToDashboardSheetControlLayoutOutput() DashboardSheetControlLayoutOutput {
	return o
}

func (o DashboardSheetControlLayoutOutput) ToDashboardSheetControlLayoutOutputWithContext(ctx context.Context) DashboardSheetControlLayoutOutput {
	return o
}

func (o DashboardSheetControlLayoutOutput) Configuration() DashboardSheetControlLayoutConfigurationOutput {
	return o.ApplyT(func(v DashboardSheetControlLayout) DashboardSheetControlLayoutConfiguration { return v.Configuration }).(DashboardSheetControlLayoutConfigurationOutput)
}

type DashboardSheetControlLayoutArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetControlLayout)(nil)).Elem()
}

func (o DashboardSheetControlLayoutArrayOutput) ToDashboardSheetControlLayoutArrayOutput() DashboardSheetControlLayoutArrayOutput {
	return o
}

func (o DashboardSheetControlLayoutArrayOutput) ToDashboardSheetControlLayoutArrayOutputWithContext(ctx context.Context) DashboardSheetControlLayoutArrayOutput {
	return o
}

func (o DashboardSheetControlLayoutArrayOutput) Index(i pulumi.IntInput) DashboardSheetControlLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheetControlLayout {
		return vs[0].([]DashboardSheetControlLayout)[vs[1].(int)]
	}).(DashboardSheetControlLayoutOutput)
}

type DashboardSheetControlLayoutConfiguration struct {
	GridLayout *DashboardGridLayoutConfiguration `pulumi:"gridLayout"`
}

// DashboardSheetControlLayoutConfigurationInput is an input type that accepts DashboardSheetControlLayoutConfigurationArgs and DashboardSheetControlLayoutConfigurationOutput values.
// You can construct a concrete instance of `DashboardSheetControlLayoutConfigurationInput` via:
//
//	DashboardSheetControlLayoutConfigurationArgs{...}
type DashboardSheetControlLayoutConfigurationInput interface {
	pulumi.Input

	ToDashboardSheetControlLayoutConfigurationOutput() DashboardSheetControlLayoutConfigurationOutput
	ToDashboardSheetControlLayoutConfigurationOutputWithContext(context.Context) DashboardSheetControlLayoutConfigurationOutput
}

type DashboardSheetControlLayoutConfigurationArgs struct {
	GridLayout DashboardGridLayoutConfigurationPtrInput `pulumi:"gridLayout"`
}

func (DashboardSheetControlLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlLayoutConfiguration)(nil)).Elem()
}

func (i DashboardSheetControlLayoutConfigurationArgs) ToDashboardSheetControlLayoutConfigurationOutput() DashboardSheetControlLayoutConfigurationOutput {
	return i.ToDashboardSheetControlLayoutConfigurationOutputWithContext(context.Background())
}

func (i DashboardSheetControlLayoutConfigurationArgs) ToDashboardSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSheetControlLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlLayoutConfigurationOutput)
}

type DashboardSheetControlLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlLayoutConfiguration)(nil)).Elem()
}

func (o DashboardSheetControlLayoutConfigurationOutput) ToDashboardSheetControlLayoutConfigurationOutput() DashboardSheetControlLayoutConfigurationOutput {
	return o
}

func (o DashboardSheetControlLayoutConfigurationOutput) ToDashboardSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) DashboardSheetControlLayoutConfigurationOutput {
	return o
}

func (o DashboardSheetControlLayoutConfigurationOutput) GridLayout() DashboardGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSheetControlLayoutConfiguration) *DashboardGridLayoutConfiguration {
		return v.GridLayout
	}).(DashboardGridLayoutConfigurationPtrOutput)
}

type DashboardSheetControlsOption struct {
	VisibilityState *DashboardUIState `pulumi:"visibilityState"`
}

// DashboardSheetControlsOptionInput is an input type that accepts DashboardSheetControlsOptionArgs and DashboardSheetControlsOptionOutput values.
// You can construct a concrete instance of `DashboardSheetControlsOptionInput` via:
//
//	DashboardSheetControlsOptionArgs{...}
type DashboardSheetControlsOptionInput interface {
	pulumi.Input

	ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput
	ToDashboardSheetControlsOptionOutputWithContext(context.Context) DashboardSheetControlsOptionOutput
}

type DashboardSheetControlsOptionArgs struct {
	VisibilityState DashboardUIStatePtrInput `pulumi:"visibilityState"`
}

func (DashboardSheetControlsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlsOption)(nil)).Elem()
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput {
	return i.ToDashboardSheetControlsOptionOutputWithContext(context.Background())
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionOutputWithContext(ctx context.Context) DashboardSheetControlsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionOutput)
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return i.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (i DashboardSheetControlsOptionArgs) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionOutput).ToDashboardSheetControlsOptionPtrOutputWithContext(ctx)
}

// DashboardSheetControlsOptionPtrInput is an input type that accepts DashboardSheetControlsOptionArgs, DashboardSheetControlsOptionPtr and DashboardSheetControlsOptionPtrOutput values.
// You can construct a concrete instance of `DashboardSheetControlsOptionPtrInput` via:
//
//	        DashboardSheetControlsOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardSheetControlsOptionPtrInput interface {
	pulumi.Input

	ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput
	ToDashboardSheetControlsOptionPtrOutputWithContext(context.Context) DashboardSheetControlsOptionPtrOutput
}

type dashboardSheetControlsOptionPtrType DashboardSheetControlsOptionArgs

func DashboardSheetControlsOptionPtr(v *DashboardSheetControlsOptionArgs) DashboardSheetControlsOptionPtrInput {
	return (*dashboardSheetControlsOptionPtrType)(v)
}

func (*dashboardSheetControlsOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlsOption)(nil)).Elem()
}

func (i *dashboardSheetControlsOptionPtrType) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return i.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardSheetControlsOptionPtrType) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetControlsOptionPtrOutput)
}

type DashboardSheetControlsOptionOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetControlsOption)(nil)).Elem()
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionOutput() DashboardSheetControlsOptionOutput {
	return o
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionOutputWithContext(ctx context.Context) DashboardSheetControlsOptionOutput {
	return o
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return o.ToDashboardSheetControlsOptionPtrOutputWithContext(context.Background())
}

func (o DashboardSheetControlsOptionOutput) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetControlsOption) *DashboardSheetControlsOption {
		return &v
	}).(DashboardSheetControlsOptionPtrOutput)
}

func (o DashboardSheetControlsOptionOutput) VisibilityState() DashboardUIStatePtrOutput {
	return o.ApplyT(func(v DashboardSheetControlsOption) *DashboardUIState { return v.VisibilityState }).(DashboardUIStatePtrOutput)
}

type DashboardSheetControlsOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetControlsOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetControlsOption)(nil)).Elem()
}

func (o DashboardSheetControlsOptionPtrOutput) ToDashboardSheetControlsOptionPtrOutput() DashboardSheetControlsOptionPtrOutput {
	return o
}

func (o DashboardSheetControlsOptionPtrOutput) ToDashboardSheetControlsOptionPtrOutputWithContext(ctx context.Context) DashboardSheetControlsOptionPtrOutput {
	return o
}

func (o DashboardSheetControlsOptionPtrOutput) Elem() DashboardSheetControlsOptionOutput {
	return o.ApplyT(func(v *DashboardSheetControlsOption) DashboardSheetControlsOption {
		if v != nil {
			return *v
		}
		var ret DashboardSheetControlsOption
		return ret
	}).(DashboardSheetControlsOptionOutput)
}

func (o DashboardSheetControlsOptionPtrOutput) VisibilityState() DashboardUIStatePtrOutput {
	return o.ApplyT(func(v *DashboardSheetControlsOption) *DashboardUIState {
		if v == nil {
			return nil
		}
		return v.VisibilityState
	}).(DashboardUIStatePtrOutput)
}

type DashboardSheetDefinition struct {
	ContentType         *DashboardSheetContentType    `pulumi:"contentType"`
	Description         *string                       `pulumi:"description"`
	FilterControls      []DashboardFilterControl      `pulumi:"filterControls"`
	Layouts             []DashboardLayout             `pulumi:"layouts"`
	Name                *string                       `pulumi:"name"`
	ParameterControls   []DashboardParameterControl   `pulumi:"parameterControls"`
	SheetControlLayouts []DashboardSheetControlLayout `pulumi:"sheetControlLayouts"`
	SheetId             string                        `pulumi:"sheetId"`
	TextBoxes           []DashboardSheetTextBox       `pulumi:"textBoxes"`
	Title               *string                       `pulumi:"title"`
	Visuals             []DashboardVisual             `pulumi:"visuals"`
}

// DashboardSheetDefinitionInput is an input type that accepts DashboardSheetDefinitionArgs and DashboardSheetDefinitionOutput values.
// You can construct a concrete instance of `DashboardSheetDefinitionInput` via:
//
//	DashboardSheetDefinitionArgs{...}
type DashboardSheetDefinitionInput interface {
	pulumi.Input

	ToDashboardSheetDefinitionOutput() DashboardSheetDefinitionOutput
	ToDashboardSheetDefinitionOutputWithContext(context.Context) DashboardSheetDefinitionOutput
}

type DashboardSheetDefinitionArgs struct {
	ContentType         DashboardSheetContentTypePtrInput     `pulumi:"contentType"`
	Description         pulumi.StringPtrInput                 `pulumi:"description"`
	FilterControls      DashboardFilterControlArrayInput      `pulumi:"filterControls"`
	Layouts             DashboardLayoutArrayInput             `pulumi:"layouts"`
	Name                pulumi.StringPtrInput                 `pulumi:"name"`
	ParameterControls   DashboardParameterControlArrayInput   `pulumi:"parameterControls"`
	SheetControlLayouts DashboardSheetControlLayoutArrayInput `pulumi:"sheetControlLayouts"`
	SheetId             pulumi.StringInput                    `pulumi:"sheetId"`
	TextBoxes           DashboardSheetTextBoxArrayInput       `pulumi:"textBoxes"`
	Title               pulumi.StringPtrInput                 `pulumi:"title"`
	Visuals             DashboardVisualArrayInput             `pulumi:"visuals"`
}

func (DashboardSheetDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetDefinition)(nil)).Elem()
}

func (i DashboardSheetDefinitionArgs) ToDashboardSheetDefinitionOutput() DashboardSheetDefinitionOutput {
	return i.ToDashboardSheetDefinitionOutputWithContext(context.Background())
}

func (i DashboardSheetDefinitionArgs) ToDashboardSheetDefinitionOutputWithContext(ctx context.Context) DashboardSheetDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetDefinitionOutput)
}

// DashboardSheetDefinitionArrayInput is an input type that accepts DashboardSheetDefinitionArray and DashboardSheetDefinitionArrayOutput values.
// You can construct a concrete instance of `DashboardSheetDefinitionArrayInput` via:
//
//	DashboardSheetDefinitionArray{ DashboardSheetDefinitionArgs{...} }
type DashboardSheetDefinitionArrayInput interface {
	pulumi.Input

	ToDashboardSheetDefinitionArrayOutput() DashboardSheetDefinitionArrayOutput
	ToDashboardSheetDefinitionArrayOutputWithContext(context.Context) DashboardSheetDefinitionArrayOutput
}

type DashboardSheetDefinitionArray []DashboardSheetDefinitionInput

func (DashboardSheetDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetDefinition)(nil)).Elem()
}

func (i DashboardSheetDefinitionArray) ToDashboardSheetDefinitionArrayOutput() DashboardSheetDefinitionArrayOutput {
	return i.ToDashboardSheetDefinitionArrayOutputWithContext(context.Background())
}

func (i DashboardSheetDefinitionArray) ToDashboardSheetDefinitionArrayOutputWithContext(ctx context.Context) DashboardSheetDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetDefinitionArrayOutput)
}

type DashboardSheetDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardSheetDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetDefinition)(nil)).Elem()
}

func (o DashboardSheetDefinitionOutput) ToDashboardSheetDefinitionOutput() DashboardSheetDefinitionOutput {
	return o
}

func (o DashboardSheetDefinitionOutput) ToDashboardSheetDefinitionOutputWithContext(ctx context.Context) DashboardSheetDefinitionOutput {
	return o
}

func (o DashboardSheetDefinitionOutput) ContentType() DashboardSheetContentTypePtrOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) *DashboardSheetContentType { return v.ContentType }).(DashboardSheetContentTypePtrOutput)
}

func (o DashboardSheetDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DashboardSheetDefinitionOutput) FilterControls() DashboardFilterControlArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardFilterControl { return v.FilterControls }).(DashboardFilterControlArrayOutput)
}

func (o DashboardSheetDefinitionOutput) Layouts() DashboardLayoutArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardLayout { return v.Layouts }).(DashboardLayoutArrayOutput)
}

func (o DashboardSheetDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardSheetDefinitionOutput) ParameterControls() DashboardParameterControlArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardParameterControl { return v.ParameterControls }).(DashboardParameterControlArrayOutput)
}

func (o DashboardSheetDefinitionOutput) SheetControlLayouts() DashboardSheetControlLayoutArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardSheetControlLayout { return v.SheetControlLayouts }).(DashboardSheetControlLayoutArrayOutput)
}

func (o DashboardSheetDefinitionOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o DashboardSheetDefinitionOutput) TextBoxes() DashboardSheetTextBoxArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardSheetTextBox { return v.TextBoxes }).(DashboardSheetTextBoxArrayOutput)
}

func (o DashboardSheetDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DashboardSheetDefinitionOutput) Visuals() DashboardVisualArrayOutput {
	return o.ApplyT(func(v DashboardSheetDefinition) []DashboardVisual { return v.Visuals }).(DashboardVisualArrayOutput)
}

type DashboardSheetDefinitionArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetDefinition)(nil)).Elem()
}

func (o DashboardSheetDefinitionArrayOutput) ToDashboardSheetDefinitionArrayOutput() DashboardSheetDefinitionArrayOutput {
	return o
}

func (o DashboardSheetDefinitionArrayOutput) ToDashboardSheetDefinitionArrayOutputWithContext(ctx context.Context) DashboardSheetDefinitionArrayOutput {
	return o
}

func (o DashboardSheetDefinitionArrayOutput) Index(i pulumi.IntInput) DashboardSheetDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheetDefinition {
		return vs[0].([]DashboardSheetDefinition)[vs[1].(int)]
	}).(DashboardSheetDefinitionOutput)
}

type DashboardSheetElementConfigurationOverrides struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardSheetElementConfigurationOverridesInput is an input type that accepts DashboardSheetElementConfigurationOverridesArgs and DashboardSheetElementConfigurationOverridesOutput values.
// You can construct a concrete instance of `DashboardSheetElementConfigurationOverridesInput` via:
//
//	DashboardSheetElementConfigurationOverridesArgs{...}
type DashboardSheetElementConfigurationOverridesInput interface {
	pulumi.Input

	ToDashboardSheetElementConfigurationOverridesOutput() DashboardSheetElementConfigurationOverridesOutput
	ToDashboardSheetElementConfigurationOverridesOutputWithContext(context.Context) DashboardSheetElementConfigurationOverridesOutput
}

type DashboardSheetElementConfigurationOverridesArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardSheetElementConfigurationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetElementConfigurationOverrides)(nil)).Elem()
}

func (i DashboardSheetElementConfigurationOverridesArgs) ToDashboardSheetElementConfigurationOverridesOutput() DashboardSheetElementConfigurationOverridesOutput {
	return i.ToDashboardSheetElementConfigurationOverridesOutputWithContext(context.Background())
}

func (i DashboardSheetElementConfigurationOverridesArgs) ToDashboardSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) DashboardSheetElementConfigurationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetElementConfigurationOverridesOutput)
}

type DashboardSheetElementConfigurationOverridesOutput struct{ *pulumi.OutputState }

func (DashboardSheetElementConfigurationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetElementConfigurationOverrides)(nil)).Elem()
}

func (o DashboardSheetElementConfigurationOverridesOutput) ToDashboardSheetElementConfigurationOverridesOutput() DashboardSheetElementConfigurationOverridesOutput {
	return o
}

func (o DashboardSheetElementConfigurationOverridesOutput) ToDashboardSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) DashboardSheetElementConfigurationOverridesOutput {
	return o
}

func (o DashboardSheetElementConfigurationOverridesOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardSheetElementConfigurationOverrides) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardSheetElementRenderingRule struct {
	ConfigurationOverrides DashboardSheetElementConfigurationOverrides `pulumi:"configurationOverrides"`
	Expression             string                                      `pulumi:"expression"`
}

// DashboardSheetElementRenderingRuleInput is an input type that accepts DashboardSheetElementRenderingRuleArgs and DashboardSheetElementRenderingRuleOutput values.
// You can construct a concrete instance of `DashboardSheetElementRenderingRuleInput` via:
//
//	DashboardSheetElementRenderingRuleArgs{...}
type DashboardSheetElementRenderingRuleInput interface {
	pulumi.Input

	ToDashboardSheetElementRenderingRuleOutput() DashboardSheetElementRenderingRuleOutput
	ToDashboardSheetElementRenderingRuleOutputWithContext(context.Context) DashboardSheetElementRenderingRuleOutput
}

type DashboardSheetElementRenderingRuleArgs struct {
	ConfigurationOverrides DashboardSheetElementConfigurationOverridesInput `pulumi:"configurationOverrides"`
	Expression             pulumi.StringInput                               `pulumi:"expression"`
}

func (DashboardSheetElementRenderingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetElementRenderingRule)(nil)).Elem()
}

func (i DashboardSheetElementRenderingRuleArgs) ToDashboardSheetElementRenderingRuleOutput() DashboardSheetElementRenderingRuleOutput {
	return i.ToDashboardSheetElementRenderingRuleOutputWithContext(context.Background())
}

func (i DashboardSheetElementRenderingRuleArgs) ToDashboardSheetElementRenderingRuleOutputWithContext(ctx context.Context) DashboardSheetElementRenderingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetElementRenderingRuleOutput)
}

// DashboardSheetElementRenderingRuleArrayInput is an input type that accepts DashboardSheetElementRenderingRuleArray and DashboardSheetElementRenderingRuleArrayOutput values.
// You can construct a concrete instance of `DashboardSheetElementRenderingRuleArrayInput` via:
//
//	DashboardSheetElementRenderingRuleArray{ DashboardSheetElementRenderingRuleArgs{...} }
type DashboardSheetElementRenderingRuleArrayInput interface {
	pulumi.Input

	ToDashboardSheetElementRenderingRuleArrayOutput() DashboardSheetElementRenderingRuleArrayOutput
	ToDashboardSheetElementRenderingRuleArrayOutputWithContext(context.Context) DashboardSheetElementRenderingRuleArrayOutput
}

type DashboardSheetElementRenderingRuleArray []DashboardSheetElementRenderingRuleInput

func (DashboardSheetElementRenderingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetElementRenderingRule)(nil)).Elem()
}

func (i DashboardSheetElementRenderingRuleArray) ToDashboardSheetElementRenderingRuleArrayOutput() DashboardSheetElementRenderingRuleArrayOutput {
	return i.ToDashboardSheetElementRenderingRuleArrayOutputWithContext(context.Background())
}

func (i DashboardSheetElementRenderingRuleArray) ToDashboardSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) DashboardSheetElementRenderingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetElementRenderingRuleArrayOutput)
}

type DashboardSheetElementRenderingRuleOutput struct{ *pulumi.OutputState }

func (DashboardSheetElementRenderingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetElementRenderingRule)(nil)).Elem()
}

func (o DashboardSheetElementRenderingRuleOutput) ToDashboardSheetElementRenderingRuleOutput() DashboardSheetElementRenderingRuleOutput {
	return o
}

func (o DashboardSheetElementRenderingRuleOutput) ToDashboardSheetElementRenderingRuleOutputWithContext(ctx context.Context) DashboardSheetElementRenderingRuleOutput {
	return o
}

func (o DashboardSheetElementRenderingRuleOutput) ConfigurationOverrides() DashboardSheetElementConfigurationOverridesOutput {
	return o.ApplyT(func(v DashboardSheetElementRenderingRule) DashboardSheetElementConfigurationOverrides {
		return v.ConfigurationOverrides
	}).(DashboardSheetElementConfigurationOverridesOutput)
}

func (o DashboardSheetElementRenderingRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSheetElementRenderingRule) string { return v.Expression }).(pulumi.StringOutput)
}

type DashboardSheetElementRenderingRuleArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetElementRenderingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetElementRenderingRule)(nil)).Elem()
}

func (o DashboardSheetElementRenderingRuleArrayOutput) ToDashboardSheetElementRenderingRuleArrayOutput() DashboardSheetElementRenderingRuleArrayOutput {
	return o
}

func (o DashboardSheetElementRenderingRuleArrayOutput) ToDashboardSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) DashboardSheetElementRenderingRuleArrayOutput {
	return o
}

func (o DashboardSheetElementRenderingRuleArrayOutput) Index(i pulumi.IntInput) DashboardSheetElementRenderingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheetElementRenderingRule {
		return vs[0].([]DashboardSheetElementRenderingRule)[vs[1].(int)]
	}).(DashboardSheetElementRenderingRuleOutput)
}

type DashboardSheetLayoutElementMaximizationOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardSheetLayoutElementMaximizationOptionInput is an input type that accepts DashboardSheetLayoutElementMaximizationOptionArgs and DashboardSheetLayoutElementMaximizationOptionOutput values.
// You can construct a concrete instance of `DashboardSheetLayoutElementMaximizationOptionInput` via:
//
//	DashboardSheetLayoutElementMaximizationOptionArgs{...}
type DashboardSheetLayoutElementMaximizationOptionInput interface {
	pulumi.Input

	ToDashboardSheetLayoutElementMaximizationOptionOutput() DashboardSheetLayoutElementMaximizationOptionOutput
	ToDashboardSheetLayoutElementMaximizationOptionOutputWithContext(context.Context) DashboardSheetLayoutElementMaximizationOptionOutput
}

type DashboardSheetLayoutElementMaximizationOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardSheetLayoutElementMaximizationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetLayoutElementMaximizationOption)(nil)).Elem()
}

func (i DashboardSheetLayoutElementMaximizationOptionArgs) ToDashboardSheetLayoutElementMaximizationOptionOutput() DashboardSheetLayoutElementMaximizationOptionOutput {
	return i.ToDashboardSheetLayoutElementMaximizationOptionOutputWithContext(context.Background())
}

func (i DashboardSheetLayoutElementMaximizationOptionArgs) ToDashboardSheetLayoutElementMaximizationOptionOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetLayoutElementMaximizationOptionOutput)
}

func (i DashboardSheetLayoutElementMaximizationOptionArgs) ToDashboardSheetLayoutElementMaximizationOptionPtrOutput() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return i.ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(context.Background())
}

func (i DashboardSheetLayoutElementMaximizationOptionArgs) ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetLayoutElementMaximizationOptionOutput).ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(ctx)
}

// DashboardSheetLayoutElementMaximizationOptionPtrInput is an input type that accepts DashboardSheetLayoutElementMaximizationOptionArgs, DashboardSheetLayoutElementMaximizationOptionPtr and DashboardSheetLayoutElementMaximizationOptionPtrOutput values.
// You can construct a concrete instance of `DashboardSheetLayoutElementMaximizationOptionPtrInput` via:
//
//	        DashboardSheetLayoutElementMaximizationOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardSheetLayoutElementMaximizationOptionPtrInput interface {
	pulumi.Input

	ToDashboardSheetLayoutElementMaximizationOptionPtrOutput() DashboardSheetLayoutElementMaximizationOptionPtrOutput
	ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(context.Context) DashboardSheetLayoutElementMaximizationOptionPtrOutput
}

type dashboardSheetLayoutElementMaximizationOptionPtrType DashboardSheetLayoutElementMaximizationOptionArgs

func DashboardSheetLayoutElementMaximizationOptionPtr(v *DashboardSheetLayoutElementMaximizationOptionArgs) DashboardSheetLayoutElementMaximizationOptionPtrInput {
	return (*dashboardSheetLayoutElementMaximizationOptionPtrType)(v)
}

func (*dashboardSheetLayoutElementMaximizationOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetLayoutElementMaximizationOption)(nil)).Elem()
}

func (i *dashboardSheetLayoutElementMaximizationOptionPtrType) ToDashboardSheetLayoutElementMaximizationOptionPtrOutput() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return i.ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardSheetLayoutElementMaximizationOptionPtrType) ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetLayoutElementMaximizationOptionPtrOutput)
}

type DashboardSheetLayoutElementMaximizationOptionOutput struct{ *pulumi.OutputState }

func (DashboardSheetLayoutElementMaximizationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetLayoutElementMaximizationOption)(nil)).Elem()
}

func (o DashboardSheetLayoutElementMaximizationOptionOutput) ToDashboardSheetLayoutElementMaximizationOptionOutput() DashboardSheetLayoutElementMaximizationOptionOutput {
	return o
}

func (o DashboardSheetLayoutElementMaximizationOptionOutput) ToDashboardSheetLayoutElementMaximizationOptionOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionOutput {
	return o
}

func (o DashboardSheetLayoutElementMaximizationOptionOutput) ToDashboardSheetLayoutElementMaximizationOptionPtrOutput() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o.ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(context.Background())
}

func (o DashboardSheetLayoutElementMaximizationOptionOutput) ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSheetLayoutElementMaximizationOption) *DashboardSheetLayoutElementMaximizationOption {
		return &v
	}).(DashboardSheetLayoutElementMaximizationOptionPtrOutput)
}

func (o DashboardSheetLayoutElementMaximizationOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardSheetLayoutElementMaximizationOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardSheetLayoutElementMaximizationOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardSheetLayoutElementMaximizationOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSheetLayoutElementMaximizationOption)(nil)).Elem()
}

func (o DashboardSheetLayoutElementMaximizationOptionPtrOutput) ToDashboardSheetLayoutElementMaximizationOptionPtrOutput() DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o
}

func (o DashboardSheetLayoutElementMaximizationOptionPtrOutput) ToDashboardSheetLayoutElementMaximizationOptionPtrOutputWithContext(ctx context.Context) DashboardSheetLayoutElementMaximizationOptionPtrOutput {
	return o
}

func (o DashboardSheetLayoutElementMaximizationOptionPtrOutput) Elem() DashboardSheetLayoutElementMaximizationOptionOutput {
	return o.ApplyT(func(v *DashboardSheetLayoutElementMaximizationOption) DashboardSheetLayoutElementMaximizationOption {
		if v != nil {
			return *v
		}
		var ret DashboardSheetLayoutElementMaximizationOption
		return ret
	}).(DashboardSheetLayoutElementMaximizationOptionOutput)
}

func (o DashboardSheetLayoutElementMaximizationOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardSheetLayoutElementMaximizationOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardSheetTextBox struct {
	Content        *string `pulumi:"content"`
	SheetTextBoxId string  `pulumi:"sheetTextBoxId"`
}

// DashboardSheetTextBoxInput is an input type that accepts DashboardSheetTextBoxArgs and DashboardSheetTextBoxOutput values.
// You can construct a concrete instance of `DashboardSheetTextBoxInput` via:
//
//	DashboardSheetTextBoxArgs{...}
type DashboardSheetTextBoxInput interface {
	pulumi.Input

	ToDashboardSheetTextBoxOutput() DashboardSheetTextBoxOutput
	ToDashboardSheetTextBoxOutputWithContext(context.Context) DashboardSheetTextBoxOutput
}

type DashboardSheetTextBoxArgs struct {
	Content        pulumi.StringPtrInput `pulumi:"content"`
	SheetTextBoxId pulumi.StringInput    `pulumi:"sheetTextBoxId"`
}

func (DashboardSheetTextBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetTextBox)(nil)).Elem()
}

func (i DashboardSheetTextBoxArgs) ToDashboardSheetTextBoxOutput() DashboardSheetTextBoxOutput {
	return i.ToDashboardSheetTextBoxOutputWithContext(context.Background())
}

func (i DashboardSheetTextBoxArgs) ToDashboardSheetTextBoxOutputWithContext(ctx context.Context) DashboardSheetTextBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetTextBoxOutput)
}

// DashboardSheetTextBoxArrayInput is an input type that accepts DashboardSheetTextBoxArray and DashboardSheetTextBoxArrayOutput values.
// You can construct a concrete instance of `DashboardSheetTextBoxArrayInput` via:
//
//	DashboardSheetTextBoxArray{ DashboardSheetTextBoxArgs{...} }
type DashboardSheetTextBoxArrayInput interface {
	pulumi.Input

	ToDashboardSheetTextBoxArrayOutput() DashboardSheetTextBoxArrayOutput
	ToDashboardSheetTextBoxArrayOutputWithContext(context.Context) DashboardSheetTextBoxArrayOutput
}

type DashboardSheetTextBoxArray []DashboardSheetTextBoxInput

func (DashboardSheetTextBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetTextBox)(nil)).Elem()
}

func (i DashboardSheetTextBoxArray) ToDashboardSheetTextBoxArrayOutput() DashboardSheetTextBoxArrayOutput {
	return i.ToDashboardSheetTextBoxArrayOutputWithContext(context.Background())
}

func (i DashboardSheetTextBoxArray) ToDashboardSheetTextBoxArrayOutputWithContext(ctx context.Context) DashboardSheetTextBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetTextBoxArrayOutput)
}

type DashboardSheetTextBoxOutput struct{ *pulumi.OutputState }

func (DashboardSheetTextBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetTextBox)(nil)).Elem()
}

func (o DashboardSheetTextBoxOutput) ToDashboardSheetTextBoxOutput() DashboardSheetTextBoxOutput {
	return o
}

func (o DashboardSheetTextBoxOutput) ToDashboardSheetTextBoxOutputWithContext(ctx context.Context) DashboardSheetTextBoxOutput {
	return o
}

func (o DashboardSheetTextBoxOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSheetTextBox) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o DashboardSheetTextBoxOutput) SheetTextBoxId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSheetTextBox) string { return v.SheetTextBoxId }).(pulumi.StringOutput)
}

type DashboardSheetTextBoxArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetTextBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetTextBox)(nil)).Elem()
}

func (o DashboardSheetTextBoxArrayOutput) ToDashboardSheetTextBoxArrayOutput() DashboardSheetTextBoxArrayOutput {
	return o
}

func (o DashboardSheetTextBoxArrayOutput) ToDashboardSheetTextBoxArrayOutputWithContext(ctx context.Context) DashboardSheetTextBoxArrayOutput {
	return o
}

func (o DashboardSheetTextBoxArrayOutput) Index(i pulumi.IntInput) DashboardSheetTextBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheetTextBox {
		return vs[0].([]DashboardSheetTextBox)[vs[1].(int)]
	}).(DashboardSheetTextBoxOutput)
}

type DashboardSheetVisualScopingConfiguration struct {
	Scope     DashboardFilterVisualScope `pulumi:"scope"`
	SheetId   string                     `pulumi:"sheetId"`
	VisualIds []string                   `pulumi:"visualIds"`
}

// DashboardSheetVisualScopingConfigurationInput is an input type that accepts DashboardSheetVisualScopingConfigurationArgs and DashboardSheetVisualScopingConfigurationOutput values.
// You can construct a concrete instance of `DashboardSheetVisualScopingConfigurationInput` via:
//
//	DashboardSheetVisualScopingConfigurationArgs{...}
type DashboardSheetVisualScopingConfigurationInput interface {
	pulumi.Input

	ToDashboardSheetVisualScopingConfigurationOutput() DashboardSheetVisualScopingConfigurationOutput
	ToDashboardSheetVisualScopingConfigurationOutputWithContext(context.Context) DashboardSheetVisualScopingConfigurationOutput
}

type DashboardSheetVisualScopingConfigurationArgs struct {
	Scope     DashboardFilterVisualScopeInput `pulumi:"scope"`
	SheetId   pulumi.StringInput              `pulumi:"sheetId"`
	VisualIds pulumi.StringArrayInput         `pulumi:"visualIds"`
}

func (DashboardSheetVisualScopingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i DashboardSheetVisualScopingConfigurationArgs) ToDashboardSheetVisualScopingConfigurationOutput() DashboardSheetVisualScopingConfigurationOutput {
	return i.ToDashboardSheetVisualScopingConfigurationOutputWithContext(context.Background())
}

func (i DashboardSheetVisualScopingConfigurationArgs) ToDashboardSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) DashboardSheetVisualScopingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetVisualScopingConfigurationOutput)
}

// DashboardSheetVisualScopingConfigurationArrayInput is an input type that accepts DashboardSheetVisualScopingConfigurationArray and DashboardSheetVisualScopingConfigurationArrayOutput values.
// You can construct a concrete instance of `DashboardSheetVisualScopingConfigurationArrayInput` via:
//
//	DashboardSheetVisualScopingConfigurationArray{ DashboardSheetVisualScopingConfigurationArgs{...} }
type DashboardSheetVisualScopingConfigurationArrayInput interface {
	pulumi.Input

	ToDashboardSheetVisualScopingConfigurationArrayOutput() DashboardSheetVisualScopingConfigurationArrayOutput
	ToDashboardSheetVisualScopingConfigurationArrayOutputWithContext(context.Context) DashboardSheetVisualScopingConfigurationArrayOutput
}

type DashboardSheetVisualScopingConfigurationArray []DashboardSheetVisualScopingConfigurationInput

func (DashboardSheetVisualScopingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i DashboardSheetVisualScopingConfigurationArray) ToDashboardSheetVisualScopingConfigurationArrayOutput() DashboardSheetVisualScopingConfigurationArrayOutput {
	return i.ToDashboardSheetVisualScopingConfigurationArrayOutputWithContext(context.Background())
}

func (i DashboardSheetVisualScopingConfigurationArray) ToDashboardSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) DashboardSheetVisualScopingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSheetVisualScopingConfigurationArrayOutput)
}

type DashboardSheetVisualScopingConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardSheetVisualScopingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o DashboardSheetVisualScopingConfigurationOutput) ToDashboardSheetVisualScopingConfigurationOutput() DashboardSheetVisualScopingConfigurationOutput {
	return o
}

func (o DashboardSheetVisualScopingConfigurationOutput) ToDashboardSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) DashboardSheetVisualScopingConfigurationOutput {
	return o
}

func (o DashboardSheetVisualScopingConfigurationOutput) Scope() DashboardFilterVisualScopeOutput {
	return o.ApplyT(func(v DashboardSheetVisualScopingConfiguration) DashboardFilterVisualScope { return v.Scope }).(DashboardFilterVisualScopeOutput)
}

func (o DashboardSheetVisualScopingConfigurationOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSheetVisualScopingConfiguration) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o DashboardSheetVisualScopingConfigurationOutput) VisualIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardSheetVisualScopingConfiguration) []string { return v.VisualIds }).(pulumi.StringArrayOutput)
}

type DashboardSheetVisualScopingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DashboardSheetVisualScopingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o DashboardSheetVisualScopingConfigurationArrayOutput) ToDashboardSheetVisualScopingConfigurationArrayOutput() DashboardSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o DashboardSheetVisualScopingConfigurationArrayOutput) ToDashboardSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) DashboardSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o DashboardSheetVisualScopingConfigurationArrayOutput) Index(i pulumi.IntInput) DashboardSheetVisualScopingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardSheetVisualScopingConfiguration {
		return vs[0].([]DashboardSheetVisualScopingConfiguration)[vs[1].(int)]
	}).(DashboardSheetVisualScopingConfigurationOutput)
}

type DashboardShortFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// DashboardShortFormatTextInput is an input type that accepts DashboardShortFormatTextArgs and DashboardShortFormatTextOutput values.
// You can construct a concrete instance of `DashboardShortFormatTextInput` via:
//
//	DashboardShortFormatTextArgs{...}
type DashboardShortFormatTextInput interface {
	pulumi.Input

	ToDashboardShortFormatTextOutput() DashboardShortFormatTextOutput
	ToDashboardShortFormatTextOutputWithContext(context.Context) DashboardShortFormatTextOutput
}

type DashboardShortFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (DashboardShortFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardShortFormatText)(nil)).Elem()
}

func (i DashboardShortFormatTextArgs) ToDashboardShortFormatTextOutput() DashboardShortFormatTextOutput {
	return i.ToDashboardShortFormatTextOutputWithContext(context.Background())
}

func (i DashboardShortFormatTextArgs) ToDashboardShortFormatTextOutputWithContext(ctx context.Context) DashboardShortFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShortFormatTextOutput)
}

func (i DashboardShortFormatTextArgs) ToDashboardShortFormatTextPtrOutput() DashboardShortFormatTextPtrOutput {
	return i.ToDashboardShortFormatTextPtrOutputWithContext(context.Background())
}

func (i DashboardShortFormatTextArgs) ToDashboardShortFormatTextPtrOutputWithContext(ctx context.Context) DashboardShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShortFormatTextOutput).ToDashboardShortFormatTextPtrOutputWithContext(ctx)
}

// DashboardShortFormatTextPtrInput is an input type that accepts DashboardShortFormatTextArgs, DashboardShortFormatTextPtr and DashboardShortFormatTextPtrOutput values.
// You can construct a concrete instance of `DashboardShortFormatTextPtrInput` via:
//
//	        DashboardShortFormatTextArgs{...}
//
//	or:
//
//	        nil
type DashboardShortFormatTextPtrInput interface {
	pulumi.Input

	ToDashboardShortFormatTextPtrOutput() DashboardShortFormatTextPtrOutput
	ToDashboardShortFormatTextPtrOutputWithContext(context.Context) DashboardShortFormatTextPtrOutput
}

type dashboardShortFormatTextPtrType DashboardShortFormatTextArgs

func DashboardShortFormatTextPtr(v *DashboardShortFormatTextArgs) DashboardShortFormatTextPtrInput {
	return (*dashboardShortFormatTextPtrType)(v)
}

func (*dashboardShortFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardShortFormatText)(nil)).Elem()
}

func (i *dashboardShortFormatTextPtrType) ToDashboardShortFormatTextPtrOutput() DashboardShortFormatTextPtrOutput {
	return i.ToDashboardShortFormatTextPtrOutputWithContext(context.Background())
}

func (i *dashboardShortFormatTextPtrType) ToDashboardShortFormatTextPtrOutputWithContext(ctx context.Context) DashboardShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardShortFormatTextPtrOutput)
}

type DashboardShortFormatTextOutput struct{ *pulumi.OutputState }

func (DashboardShortFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardShortFormatText)(nil)).Elem()
}

func (o DashboardShortFormatTextOutput) ToDashboardShortFormatTextOutput() DashboardShortFormatTextOutput {
	return o
}

func (o DashboardShortFormatTextOutput) ToDashboardShortFormatTextOutputWithContext(ctx context.Context) DashboardShortFormatTextOutput {
	return o
}

func (o DashboardShortFormatTextOutput) ToDashboardShortFormatTextPtrOutput() DashboardShortFormatTextPtrOutput {
	return o.ToDashboardShortFormatTextPtrOutputWithContext(context.Background())
}

func (o DashboardShortFormatTextOutput) ToDashboardShortFormatTextPtrOutputWithContext(ctx context.Context) DashboardShortFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardShortFormatText) *DashboardShortFormatText {
		return &v
	}).(DashboardShortFormatTextPtrOutput)
}

func (o DashboardShortFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardShortFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o DashboardShortFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardShortFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type DashboardShortFormatTextPtrOutput struct{ *pulumi.OutputState }

func (DashboardShortFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardShortFormatText)(nil)).Elem()
}

func (o DashboardShortFormatTextPtrOutput) ToDashboardShortFormatTextPtrOutput() DashboardShortFormatTextPtrOutput {
	return o
}

func (o DashboardShortFormatTextPtrOutput) ToDashboardShortFormatTextPtrOutputWithContext(ctx context.Context) DashboardShortFormatTextPtrOutput {
	return o
}

func (o DashboardShortFormatTextPtrOutput) Elem() DashboardShortFormatTextOutput {
	return o.ApplyT(func(v *DashboardShortFormatText) DashboardShortFormatText {
		if v != nil {
			return *v
		}
		var ret DashboardShortFormatText
		return ret
	}).(DashboardShortFormatTextOutput)
}

func (o DashboardShortFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o DashboardShortFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type DashboardSimpleClusterMarker struct {
	Color *string `pulumi:"color"`
}

// DashboardSimpleClusterMarkerInput is an input type that accepts DashboardSimpleClusterMarkerArgs and DashboardSimpleClusterMarkerOutput values.
// You can construct a concrete instance of `DashboardSimpleClusterMarkerInput` via:
//
//	DashboardSimpleClusterMarkerArgs{...}
type DashboardSimpleClusterMarkerInput interface {
	pulumi.Input

	ToDashboardSimpleClusterMarkerOutput() DashboardSimpleClusterMarkerOutput
	ToDashboardSimpleClusterMarkerOutputWithContext(context.Context) DashboardSimpleClusterMarkerOutput
}

type DashboardSimpleClusterMarkerArgs struct {
	Color pulumi.StringPtrInput `pulumi:"color"`
}

func (DashboardSimpleClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleClusterMarker)(nil)).Elem()
}

func (i DashboardSimpleClusterMarkerArgs) ToDashboardSimpleClusterMarkerOutput() DashboardSimpleClusterMarkerOutput {
	return i.ToDashboardSimpleClusterMarkerOutputWithContext(context.Background())
}

func (i DashboardSimpleClusterMarkerArgs) ToDashboardSimpleClusterMarkerOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSimpleClusterMarkerOutput)
}

func (i DashboardSimpleClusterMarkerArgs) ToDashboardSimpleClusterMarkerPtrOutput() DashboardSimpleClusterMarkerPtrOutput {
	return i.ToDashboardSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i DashboardSimpleClusterMarkerArgs) ToDashboardSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSimpleClusterMarkerOutput).ToDashboardSimpleClusterMarkerPtrOutputWithContext(ctx)
}

// DashboardSimpleClusterMarkerPtrInput is an input type that accepts DashboardSimpleClusterMarkerArgs, DashboardSimpleClusterMarkerPtr and DashboardSimpleClusterMarkerPtrOutput values.
// You can construct a concrete instance of `DashboardSimpleClusterMarkerPtrInput` via:
//
//	        DashboardSimpleClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type DashboardSimpleClusterMarkerPtrInput interface {
	pulumi.Input

	ToDashboardSimpleClusterMarkerPtrOutput() DashboardSimpleClusterMarkerPtrOutput
	ToDashboardSimpleClusterMarkerPtrOutputWithContext(context.Context) DashboardSimpleClusterMarkerPtrOutput
}

type dashboardSimpleClusterMarkerPtrType DashboardSimpleClusterMarkerArgs

func DashboardSimpleClusterMarkerPtr(v *DashboardSimpleClusterMarkerArgs) DashboardSimpleClusterMarkerPtrInput {
	return (*dashboardSimpleClusterMarkerPtrType)(v)
}

func (*dashboardSimpleClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSimpleClusterMarker)(nil)).Elem()
}

func (i *dashboardSimpleClusterMarkerPtrType) ToDashboardSimpleClusterMarkerPtrOutput() DashboardSimpleClusterMarkerPtrOutput {
	return i.ToDashboardSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *dashboardSimpleClusterMarkerPtrType) ToDashboardSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSimpleClusterMarkerPtrOutput)
}

type DashboardSimpleClusterMarkerOutput struct{ *pulumi.OutputState }

func (DashboardSimpleClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSimpleClusterMarker)(nil)).Elem()
}

func (o DashboardSimpleClusterMarkerOutput) ToDashboardSimpleClusterMarkerOutput() DashboardSimpleClusterMarkerOutput {
	return o
}

func (o DashboardSimpleClusterMarkerOutput) ToDashboardSimpleClusterMarkerOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerOutput {
	return o
}

func (o DashboardSimpleClusterMarkerOutput) ToDashboardSimpleClusterMarkerPtrOutput() DashboardSimpleClusterMarkerPtrOutput {
	return o.ToDashboardSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (o DashboardSimpleClusterMarkerOutput) ToDashboardSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSimpleClusterMarker) *DashboardSimpleClusterMarker {
		return &v
	}).(DashboardSimpleClusterMarkerPtrOutput)
}

func (o DashboardSimpleClusterMarkerOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSimpleClusterMarker) *string { return v.Color }).(pulumi.StringPtrOutput)
}

type DashboardSimpleClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (DashboardSimpleClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSimpleClusterMarker)(nil)).Elem()
}

func (o DashboardSimpleClusterMarkerPtrOutput) ToDashboardSimpleClusterMarkerPtrOutput() DashboardSimpleClusterMarkerPtrOutput {
	return o
}

func (o DashboardSimpleClusterMarkerPtrOutput) ToDashboardSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) DashboardSimpleClusterMarkerPtrOutput {
	return o
}

func (o DashboardSimpleClusterMarkerPtrOutput) Elem() DashboardSimpleClusterMarkerOutput {
	return o.ApplyT(func(v *DashboardSimpleClusterMarker) DashboardSimpleClusterMarker {
		if v != nil {
			return *v
		}
		var ret DashboardSimpleClusterMarker
		return ret
	}).(DashboardSimpleClusterMarkerOutput)
}

func (o DashboardSimpleClusterMarkerPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSimpleClusterMarker) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

type DashboardSliderControlDisplayOptions struct {
	TitleOptions *DashboardLabelOptions `pulumi:"titleOptions"`
}

// DashboardSliderControlDisplayOptionsInput is an input type that accepts DashboardSliderControlDisplayOptionsArgs and DashboardSliderControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardSliderControlDisplayOptionsInput` via:
//
//	DashboardSliderControlDisplayOptionsArgs{...}
type DashboardSliderControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardSliderControlDisplayOptionsOutput() DashboardSliderControlDisplayOptionsOutput
	ToDashboardSliderControlDisplayOptionsOutputWithContext(context.Context) DashboardSliderControlDisplayOptionsOutput
}

type DashboardSliderControlDisplayOptionsArgs struct {
	TitleOptions DashboardLabelOptionsPtrInput `pulumi:"titleOptions"`
}

func (DashboardSliderControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSliderControlDisplayOptions)(nil)).Elem()
}

func (i DashboardSliderControlDisplayOptionsArgs) ToDashboardSliderControlDisplayOptionsOutput() DashboardSliderControlDisplayOptionsOutput {
	return i.ToDashboardSliderControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardSliderControlDisplayOptionsArgs) ToDashboardSliderControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSliderControlDisplayOptionsOutput)
}

func (i DashboardSliderControlDisplayOptionsArgs) ToDashboardSliderControlDisplayOptionsPtrOutput() DashboardSliderControlDisplayOptionsPtrOutput {
	return i.ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSliderControlDisplayOptionsArgs) ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSliderControlDisplayOptionsOutput).ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardSliderControlDisplayOptionsPtrInput is an input type that accepts DashboardSliderControlDisplayOptionsArgs, DashboardSliderControlDisplayOptionsPtr and DashboardSliderControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSliderControlDisplayOptionsPtrInput` via:
//
//	        DashboardSliderControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSliderControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSliderControlDisplayOptionsPtrOutput() DashboardSliderControlDisplayOptionsPtrOutput
	ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardSliderControlDisplayOptionsPtrOutput
}

type dashboardSliderControlDisplayOptionsPtrType DashboardSliderControlDisplayOptionsArgs

func DashboardSliderControlDisplayOptionsPtr(v *DashboardSliderControlDisplayOptionsArgs) DashboardSliderControlDisplayOptionsPtrInput {
	return (*dashboardSliderControlDisplayOptionsPtrType)(v)
}

func (*dashboardSliderControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSliderControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardSliderControlDisplayOptionsPtrType) ToDashboardSliderControlDisplayOptionsPtrOutput() DashboardSliderControlDisplayOptionsPtrOutput {
	return i.ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSliderControlDisplayOptionsPtrType) ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSliderControlDisplayOptionsPtrOutput)
}

type DashboardSliderControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSliderControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSliderControlDisplayOptions)(nil)).Elem()
}

func (o DashboardSliderControlDisplayOptionsOutput) ToDashboardSliderControlDisplayOptionsOutput() DashboardSliderControlDisplayOptionsOutput {
	return o
}

func (o DashboardSliderControlDisplayOptionsOutput) ToDashboardSliderControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsOutput {
	return o
}

func (o DashboardSliderControlDisplayOptionsOutput) ToDashboardSliderControlDisplayOptionsPtrOutput() DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSliderControlDisplayOptionsOutput) ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSliderControlDisplayOptions) *DashboardSliderControlDisplayOptions {
		return &v
	}).(DashboardSliderControlDisplayOptionsPtrOutput)
}

func (o DashboardSliderControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardSliderControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardSliderControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSliderControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSliderControlDisplayOptions)(nil)).Elem()
}

func (o DashboardSliderControlDisplayOptionsPtrOutput) ToDashboardSliderControlDisplayOptionsPtrOutput() DashboardSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardSliderControlDisplayOptionsPtrOutput) ToDashboardSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardSliderControlDisplayOptionsPtrOutput) Elem() DashboardSliderControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardSliderControlDisplayOptions) DashboardSliderControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSliderControlDisplayOptions
		return ret
	}).(DashboardSliderControlDisplayOptionsOutput)
}

func (o DashboardSliderControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardSliderControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardSmallMultiplesOptions struct {
	MaxVisibleColumns  *float64                     `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     *float64                     `pulumi:"maxVisibleRows"`
	PanelConfiguration *DashboardPanelConfiguration `pulumi:"panelConfiguration"`
}

// DashboardSmallMultiplesOptionsInput is an input type that accepts DashboardSmallMultiplesOptionsArgs and DashboardSmallMultiplesOptionsOutput values.
// You can construct a concrete instance of `DashboardSmallMultiplesOptionsInput` via:
//
//	DashboardSmallMultiplesOptionsArgs{...}
type DashboardSmallMultiplesOptionsInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesOptionsOutput() DashboardSmallMultiplesOptionsOutput
	ToDashboardSmallMultiplesOptionsOutputWithContext(context.Context) DashboardSmallMultiplesOptionsOutput
}

type DashboardSmallMultiplesOptionsArgs struct {
	MaxVisibleColumns  pulumi.Float64PtrInput              `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     pulumi.Float64PtrInput              `pulumi:"maxVisibleRows"`
	PanelConfiguration DashboardPanelConfigurationPtrInput `pulumi:"panelConfiguration"`
}

func (DashboardSmallMultiplesOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesOptions)(nil)).Elem()
}

func (i DashboardSmallMultiplesOptionsArgs) ToDashboardSmallMultiplesOptionsOutput() DashboardSmallMultiplesOptionsOutput {
	return i.ToDashboardSmallMultiplesOptionsOutputWithContext(context.Background())
}

func (i DashboardSmallMultiplesOptionsArgs) ToDashboardSmallMultiplesOptionsOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSmallMultiplesOptionsOutput)
}

func (i DashboardSmallMultiplesOptionsArgs) ToDashboardSmallMultiplesOptionsPtrOutput() DashboardSmallMultiplesOptionsPtrOutput {
	return i.ToDashboardSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSmallMultiplesOptionsArgs) ToDashboardSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSmallMultiplesOptionsOutput).ToDashboardSmallMultiplesOptionsPtrOutputWithContext(ctx)
}

// DashboardSmallMultiplesOptionsPtrInput is an input type that accepts DashboardSmallMultiplesOptionsArgs, DashboardSmallMultiplesOptionsPtr and DashboardSmallMultiplesOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSmallMultiplesOptionsPtrInput` via:
//
//	        DashboardSmallMultiplesOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSmallMultiplesOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSmallMultiplesOptionsPtrOutput() DashboardSmallMultiplesOptionsPtrOutput
	ToDashboardSmallMultiplesOptionsPtrOutputWithContext(context.Context) DashboardSmallMultiplesOptionsPtrOutput
}

type dashboardSmallMultiplesOptionsPtrType DashboardSmallMultiplesOptionsArgs

func DashboardSmallMultiplesOptionsPtr(v *DashboardSmallMultiplesOptionsArgs) DashboardSmallMultiplesOptionsPtrInput {
	return (*dashboardSmallMultiplesOptionsPtrType)(v)
}

func (*dashboardSmallMultiplesOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSmallMultiplesOptions)(nil)).Elem()
}

func (i *dashboardSmallMultiplesOptionsPtrType) ToDashboardSmallMultiplesOptionsPtrOutput() DashboardSmallMultiplesOptionsPtrOutput {
	return i.ToDashboardSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSmallMultiplesOptionsPtrType) ToDashboardSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSmallMultiplesOptionsPtrOutput)
}

type DashboardSmallMultiplesOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSmallMultiplesOptions)(nil)).Elem()
}

func (o DashboardSmallMultiplesOptionsOutput) ToDashboardSmallMultiplesOptionsOutput() DashboardSmallMultiplesOptionsOutput {
	return o
}

func (o DashboardSmallMultiplesOptionsOutput) ToDashboardSmallMultiplesOptionsOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsOutput {
	return o
}

func (o DashboardSmallMultiplesOptionsOutput) ToDashboardSmallMultiplesOptionsPtrOutput() DashboardSmallMultiplesOptionsPtrOutput {
	return o.ToDashboardSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSmallMultiplesOptionsOutput) ToDashboardSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSmallMultiplesOptions) *DashboardSmallMultiplesOptions {
		return &v
	}).(DashboardSmallMultiplesOptionsPtrOutput)
}

func (o DashboardSmallMultiplesOptionsOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSmallMultiplesOptions) *float64 { return v.MaxVisibleColumns }).(pulumi.Float64PtrOutput)
}

func (o DashboardSmallMultiplesOptionsOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardSmallMultiplesOptions) *float64 { return v.MaxVisibleRows }).(pulumi.Float64PtrOutput)
}

func (o DashboardSmallMultiplesOptionsOutput) PanelConfiguration() DashboardPanelConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardSmallMultiplesOptions) *DashboardPanelConfiguration { return v.PanelConfiguration }).(DashboardPanelConfigurationPtrOutput)
}

type DashboardSmallMultiplesOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSmallMultiplesOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSmallMultiplesOptions)(nil)).Elem()
}

func (o DashboardSmallMultiplesOptionsPtrOutput) ToDashboardSmallMultiplesOptionsPtrOutput() DashboardSmallMultiplesOptionsPtrOutput {
	return o
}

func (o DashboardSmallMultiplesOptionsPtrOutput) ToDashboardSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) DashboardSmallMultiplesOptionsPtrOutput {
	return o
}

func (o DashboardSmallMultiplesOptionsPtrOutput) Elem() DashboardSmallMultiplesOptionsOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesOptions) DashboardSmallMultiplesOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSmallMultiplesOptions
		return ret
	}).(DashboardSmallMultiplesOptionsOutput)
}

func (o DashboardSmallMultiplesOptionsPtrOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleColumns
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardSmallMultiplesOptionsPtrOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleRows
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardSmallMultiplesOptionsPtrOutput) PanelConfiguration() DashboardPanelConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardSmallMultiplesOptions) *DashboardPanelConfiguration {
		if v == nil {
			return nil
		}
		return v.PanelConfiguration
	}).(DashboardPanelConfigurationPtrOutput)
}

type DashboardSourceEntity struct {
	SourceTemplate *DashboardSourceTemplate `pulumi:"sourceTemplate"`
}

// DashboardSourceEntityInput is an input type that accepts DashboardSourceEntityArgs and DashboardSourceEntityOutput values.
// You can construct a concrete instance of `DashboardSourceEntityInput` via:
//
//	DashboardSourceEntityArgs{...}
type DashboardSourceEntityInput interface {
	pulumi.Input

	ToDashboardSourceEntityOutput() DashboardSourceEntityOutput
	ToDashboardSourceEntityOutputWithContext(context.Context) DashboardSourceEntityOutput
}

type DashboardSourceEntityArgs struct {
	SourceTemplate DashboardSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (DashboardSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSourceEntity)(nil)).Elem()
}

func (i DashboardSourceEntityArgs) ToDashboardSourceEntityOutput() DashboardSourceEntityOutput {
	return i.ToDashboardSourceEntityOutputWithContext(context.Background())
}

func (i DashboardSourceEntityArgs) ToDashboardSourceEntityOutputWithContext(ctx context.Context) DashboardSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceEntityOutput)
}

func (i DashboardSourceEntityArgs) ToDashboardSourceEntityPtrOutput() DashboardSourceEntityPtrOutput {
	return i.ToDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (i DashboardSourceEntityArgs) ToDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceEntityOutput).ToDashboardSourceEntityPtrOutputWithContext(ctx)
}

// DashboardSourceEntityPtrInput is an input type that accepts DashboardSourceEntityArgs, DashboardSourceEntityPtr and DashboardSourceEntityPtrOutput values.
// You can construct a concrete instance of `DashboardSourceEntityPtrInput` via:
//
//	        DashboardSourceEntityArgs{...}
//
//	or:
//
//	        nil
type DashboardSourceEntityPtrInput interface {
	pulumi.Input

	ToDashboardSourceEntityPtrOutput() DashboardSourceEntityPtrOutput
	ToDashboardSourceEntityPtrOutputWithContext(context.Context) DashboardSourceEntityPtrOutput
}

type dashboardSourceEntityPtrType DashboardSourceEntityArgs

func DashboardSourceEntityPtr(v *DashboardSourceEntityArgs) DashboardSourceEntityPtrInput {
	return (*dashboardSourceEntityPtrType)(v)
}

func (*dashboardSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSourceEntity)(nil)).Elem()
}

func (i *dashboardSourceEntityPtrType) ToDashboardSourceEntityPtrOutput() DashboardSourceEntityPtrOutput {
	return i.ToDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (i *dashboardSourceEntityPtrType) ToDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceEntityPtrOutput)
}

type DashboardSourceEntityOutput struct{ *pulumi.OutputState }

func (DashboardSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSourceEntity)(nil)).Elem()
}

func (o DashboardSourceEntityOutput) ToDashboardSourceEntityOutput() DashboardSourceEntityOutput {
	return o
}

func (o DashboardSourceEntityOutput) ToDashboardSourceEntityOutputWithContext(ctx context.Context) DashboardSourceEntityOutput {
	return o
}

func (o DashboardSourceEntityOutput) ToDashboardSourceEntityPtrOutput() DashboardSourceEntityPtrOutput {
	return o.ToDashboardSourceEntityPtrOutputWithContext(context.Background())
}

func (o DashboardSourceEntityOutput) ToDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSourceEntity) *DashboardSourceEntity {
		return &v
	}).(DashboardSourceEntityPtrOutput)
}

func (o DashboardSourceEntityOutput) SourceTemplate() DashboardSourceTemplatePtrOutput {
	return o.ApplyT(func(v DashboardSourceEntity) *DashboardSourceTemplate { return v.SourceTemplate }).(DashboardSourceTemplatePtrOutput)
}

type DashboardSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (DashboardSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSourceEntity)(nil)).Elem()
}

func (o DashboardSourceEntityPtrOutput) ToDashboardSourceEntityPtrOutput() DashboardSourceEntityPtrOutput {
	return o
}

func (o DashboardSourceEntityPtrOutput) ToDashboardSourceEntityPtrOutputWithContext(ctx context.Context) DashboardSourceEntityPtrOutput {
	return o
}

func (o DashboardSourceEntityPtrOutput) Elem() DashboardSourceEntityOutput {
	return o.ApplyT(func(v *DashboardSourceEntity) DashboardSourceEntity {
		if v != nil {
			return *v
		}
		var ret DashboardSourceEntity
		return ret
	}).(DashboardSourceEntityOutput)
}

func (o DashboardSourceEntityPtrOutput) SourceTemplate() DashboardSourceTemplatePtrOutput {
	return o.ApplyT(func(v *DashboardSourceEntity) *DashboardSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(DashboardSourceTemplatePtrOutput)
}

type DashboardSourceTemplate struct {
	Arn               string                      `pulumi:"arn"`
	DataSetReferences []DashboardDataSetReference `pulumi:"dataSetReferences"`
}

// DashboardSourceTemplateInput is an input type that accepts DashboardSourceTemplateArgs and DashboardSourceTemplateOutput values.
// You can construct a concrete instance of `DashboardSourceTemplateInput` via:
//
//	DashboardSourceTemplateArgs{...}
type DashboardSourceTemplateInput interface {
	pulumi.Input

	ToDashboardSourceTemplateOutput() DashboardSourceTemplateOutput
	ToDashboardSourceTemplateOutputWithContext(context.Context) DashboardSourceTemplateOutput
}

type DashboardSourceTemplateArgs struct {
	Arn               pulumi.StringInput                  `pulumi:"arn"`
	DataSetReferences DashboardDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (DashboardSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSourceTemplate)(nil)).Elem()
}

func (i DashboardSourceTemplateArgs) ToDashboardSourceTemplateOutput() DashboardSourceTemplateOutput {
	return i.ToDashboardSourceTemplateOutputWithContext(context.Background())
}

func (i DashboardSourceTemplateArgs) ToDashboardSourceTemplateOutputWithContext(ctx context.Context) DashboardSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceTemplateOutput)
}

func (i DashboardSourceTemplateArgs) ToDashboardSourceTemplatePtrOutput() DashboardSourceTemplatePtrOutput {
	return i.ToDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (i DashboardSourceTemplateArgs) ToDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceTemplateOutput).ToDashboardSourceTemplatePtrOutputWithContext(ctx)
}

// DashboardSourceTemplatePtrInput is an input type that accepts DashboardSourceTemplateArgs, DashboardSourceTemplatePtr and DashboardSourceTemplatePtrOutput values.
// You can construct a concrete instance of `DashboardSourceTemplatePtrInput` via:
//
//	        DashboardSourceTemplateArgs{...}
//
//	or:
//
//	        nil
type DashboardSourceTemplatePtrInput interface {
	pulumi.Input

	ToDashboardSourceTemplatePtrOutput() DashboardSourceTemplatePtrOutput
	ToDashboardSourceTemplatePtrOutputWithContext(context.Context) DashboardSourceTemplatePtrOutput
}

type dashboardSourceTemplatePtrType DashboardSourceTemplateArgs

func DashboardSourceTemplatePtr(v *DashboardSourceTemplateArgs) DashboardSourceTemplatePtrInput {
	return (*dashboardSourceTemplatePtrType)(v)
}

func (*dashboardSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSourceTemplate)(nil)).Elem()
}

func (i *dashboardSourceTemplatePtrType) ToDashboardSourceTemplatePtrOutput() DashboardSourceTemplatePtrOutput {
	return i.ToDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *dashboardSourceTemplatePtrType) ToDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSourceTemplatePtrOutput)
}

type DashboardSourceTemplateOutput struct{ *pulumi.OutputState }

func (DashboardSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSourceTemplate)(nil)).Elem()
}

func (o DashboardSourceTemplateOutput) ToDashboardSourceTemplateOutput() DashboardSourceTemplateOutput {
	return o
}

func (o DashboardSourceTemplateOutput) ToDashboardSourceTemplateOutputWithContext(ctx context.Context) DashboardSourceTemplateOutput {
	return o
}

func (o DashboardSourceTemplateOutput) ToDashboardSourceTemplatePtrOutput() DashboardSourceTemplatePtrOutput {
	return o.ToDashboardSourceTemplatePtrOutputWithContext(context.Background())
}

func (o DashboardSourceTemplateOutput) ToDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSourceTemplate) *DashboardSourceTemplate {
		return &v
	}).(DashboardSourceTemplatePtrOutput)
}

func (o DashboardSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

func (o DashboardSourceTemplateOutput) DataSetReferences() DashboardDataSetReferenceArrayOutput {
	return o.ApplyT(func(v DashboardSourceTemplate) []DashboardDataSetReference { return v.DataSetReferences }).(DashboardDataSetReferenceArrayOutput)
}

type DashboardSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (DashboardSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSourceTemplate)(nil)).Elem()
}

func (o DashboardSourceTemplatePtrOutput) ToDashboardSourceTemplatePtrOutput() DashboardSourceTemplatePtrOutput {
	return o
}

func (o DashboardSourceTemplatePtrOutput) ToDashboardSourceTemplatePtrOutputWithContext(ctx context.Context) DashboardSourceTemplatePtrOutput {
	return o
}

func (o DashboardSourceTemplatePtrOutput) Elem() DashboardSourceTemplateOutput {
	return o.ApplyT(func(v *DashboardSourceTemplate) DashboardSourceTemplate {
		if v != nil {
			return *v
		}
		var ret DashboardSourceTemplate
		return ret
	}).(DashboardSourceTemplateOutput)
}

func (o DashboardSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o DashboardSourceTemplatePtrOutput) DataSetReferences() DashboardDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *DashboardSourceTemplate) []DashboardDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(DashboardDataSetReferenceArrayOutput)
}

type DashboardSpacing struct {
	// String based length that is composed of value and unit
	Bottom *string `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left *string `pulumi:"left"`
	// String based length that is composed of value and unit
	Right *string `pulumi:"right"`
	// String based length that is composed of value and unit
	Top *string `pulumi:"top"`
}

// DashboardSpacingInput is an input type that accepts DashboardSpacingArgs and DashboardSpacingOutput values.
// You can construct a concrete instance of `DashboardSpacingInput` via:
//
//	DashboardSpacingArgs{...}
type DashboardSpacingInput interface {
	pulumi.Input

	ToDashboardSpacingOutput() DashboardSpacingOutput
	ToDashboardSpacingOutputWithContext(context.Context) DashboardSpacingOutput
}

type DashboardSpacingArgs struct {
	// String based length that is composed of value and unit
	Bottom pulumi.StringPtrInput `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left pulumi.StringPtrInput `pulumi:"left"`
	// String based length that is composed of value and unit
	Right pulumi.StringPtrInput `pulumi:"right"`
	// String based length that is composed of value and unit
	Top pulumi.StringPtrInput `pulumi:"top"`
}

func (DashboardSpacingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSpacing)(nil)).Elem()
}

func (i DashboardSpacingArgs) ToDashboardSpacingOutput() DashboardSpacingOutput {
	return i.ToDashboardSpacingOutputWithContext(context.Background())
}

func (i DashboardSpacingArgs) ToDashboardSpacingOutputWithContext(ctx context.Context) DashboardSpacingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSpacingOutput)
}

func (i DashboardSpacingArgs) ToDashboardSpacingPtrOutput() DashboardSpacingPtrOutput {
	return i.ToDashboardSpacingPtrOutputWithContext(context.Background())
}

func (i DashboardSpacingArgs) ToDashboardSpacingPtrOutputWithContext(ctx context.Context) DashboardSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSpacingOutput).ToDashboardSpacingPtrOutputWithContext(ctx)
}

// DashboardSpacingPtrInput is an input type that accepts DashboardSpacingArgs, DashboardSpacingPtr and DashboardSpacingPtrOutput values.
// You can construct a concrete instance of `DashboardSpacingPtrInput` via:
//
//	        DashboardSpacingArgs{...}
//
//	or:
//
//	        nil
type DashboardSpacingPtrInput interface {
	pulumi.Input

	ToDashboardSpacingPtrOutput() DashboardSpacingPtrOutput
	ToDashboardSpacingPtrOutputWithContext(context.Context) DashboardSpacingPtrOutput
}

type dashboardSpacingPtrType DashboardSpacingArgs

func DashboardSpacingPtr(v *DashboardSpacingArgs) DashboardSpacingPtrInput {
	return (*dashboardSpacingPtrType)(v)
}

func (*dashboardSpacingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSpacing)(nil)).Elem()
}

func (i *dashboardSpacingPtrType) ToDashboardSpacingPtrOutput() DashboardSpacingPtrOutput {
	return i.ToDashboardSpacingPtrOutputWithContext(context.Background())
}

func (i *dashboardSpacingPtrType) ToDashboardSpacingPtrOutputWithContext(ctx context.Context) DashboardSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSpacingPtrOutput)
}

type DashboardSpacingOutput struct{ *pulumi.OutputState }

func (DashboardSpacingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSpacing)(nil)).Elem()
}

func (o DashboardSpacingOutput) ToDashboardSpacingOutput() DashboardSpacingOutput {
	return o
}

func (o DashboardSpacingOutput) ToDashboardSpacingOutputWithContext(ctx context.Context) DashboardSpacingOutput {
	return o
}

func (o DashboardSpacingOutput) ToDashboardSpacingPtrOutput() DashboardSpacingPtrOutput {
	return o.ToDashboardSpacingPtrOutputWithContext(context.Background())
}

func (o DashboardSpacingOutput) ToDashboardSpacingPtrOutputWithContext(ctx context.Context) DashboardSpacingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSpacing) *DashboardSpacing {
		return &v
	}).(DashboardSpacingPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSpacing) *string { return v.Bottom }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSpacing) *string { return v.Left }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSpacing) *string { return v.Right }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSpacing) *string { return v.Top }).(pulumi.StringPtrOutput)
}

type DashboardSpacingPtrOutput struct{ *pulumi.OutputState }

func (DashboardSpacingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSpacing)(nil)).Elem()
}

func (o DashboardSpacingPtrOutput) ToDashboardSpacingPtrOutput() DashboardSpacingPtrOutput {
	return o
}

func (o DashboardSpacingPtrOutput) ToDashboardSpacingPtrOutputWithContext(ctx context.Context) DashboardSpacingPtrOutput {
	return o
}

func (o DashboardSpacingPtrOutput) Elem() DashboardSpacingOutput {
	return o.ApplyT(func(v *DashboardSpacing) DashboardSpacing {
		if v != nil {
			return *v
		}
		var ret DashboardSpacing
		return ret
	}).(DashboardSpacingOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingPtrOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingPtrOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Left
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingPtrOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Right
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o DashboardSpacingPtrOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.StringPtrOutput)
}

type DashboardStringDefaultValues struct {
	DynamicValue *DashboardDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []string                      `pulumi:"staticValues"`
}

// DashboardStringDefaultValuesInput is an input type that accepts DashboardStringDefaultValuesArgs and DashboardStringDefaultValuesOutput values.
// You can construct a concrete instance of `DashboardStringDefaultValuesInput` via:
//
//	DashboardStringDefaultValuesArgs{...}
type DashboardStringDefaultValuesInput interface {
	pulumi.Input

	ToDashboardStringDefaultValuesOutput() DashboardStringDefaultValuesOutput
	ToDashboardStringDefaultValuesOutputWithContext(context.Context) DashboardStringDefaultValuesOutput
}

type DashboardStringDefaultValuesArgs struct {
	DynamicValue DashboardDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.StringArrayInput              `pulumi:"staticValues"`
}

func (DashboardStringDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringDefaultValues)(nil)).Elem()
}

func (i DashboardStringDefaultValuesArgs) ToDashboardStringDefaultValuesOutput() DashboardStringDefaultValuesOutput {
	return i.ToDashboardStringDefaultValuesOutputWithContext(context.Background())
}

func (i DashboardStringDefaultValuesArgs) ToDashboardStringDefaultValuesOutputWithContext(ctx context.Context) DashboardStringDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringDefaultValuesOutput)
}

func (i DashboardStringDefaultValuesArgs) ToDashboardStringDefaultValuesPtrOutput() DashboardStringDefaultValuesPtrOutput {
	return i.ToDashboardStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i DashboardStringDefaultValuesArgs) ToDashboardStringDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringDefaultValuesOutput).ToDashboardStringDefaultValuesPtrOutputWithContext(ctx)
}

// DashboardStringDefaultValuesPtrInput is an input type that accepts DashboardStringDefaultValuesArgs, DashboardStringDefaultValuesPtr and DashboardStringDefaultValuesPtrOutput values.
// You can construct a concrete instance of `DashboardStringDefaultValuesPtrInput` via:
//
//	        DashboardStringDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type DashboardStringDefaultValuesPtrInput interface {
	pulumi.Input

	ToDashboardStringDefaultValuesPtrOutput() DashboardStringDefaultValuesPtrOutput
	ToDashboardStringDefaultValuesPtrOutputWithContext(context.Context) DashboardStringDefaultValuesPtrOutput
}

type dashboardStringDefaultValuesPtrType DashboardStringDefaultValuesArgs

func DashboardStringDefaultValuesPtr(v *DashboardStringDefaultValuesArgs) DashboardStringDefaultValuesPtrInput {
	return (*dashboardStringDefaultValuesPtrType)(v)
}

func (*dashboardStringDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringDefaultValues)(nil)).Elem()
}

func (i *dashboardStringDefaultValuesPtrType) ToDashboardStringDefaultValuesPtrOutput() DashboardStringDefaultValuesPtrOutput {
	return i.ToDashboardStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *dashboardStringDefaultValuesPtrType) ToDashboardStringDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringDefaultValuesPtrOutput)
}

type DashboardStringDefaultValuesOutput struct{ *pulumi.OutputState }

func (DashboardStringDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringDefaultValues)(nil)).Elem()
}

func (o DashboardStringDefaultValuesOutput) ToDashboardStringDefaultValuesOutput() DashboardStringDefaultValuesOutput {
	return o
}

func (o DashboardStringDefaultValuesOutput) ToDashboardStringDefaultValuesOutputWithContext(ctx context.Context) DashboardStringDefaultValuesOutput {
	return o
}

func (o DashboardStringDefaultValuesOutput) ToDashboardStringDefaultValuesPtrOutput() DashboardStringDefaultValuesPtrOutput {
	return o.ToDashboardStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (o DashboardStringDefaultValuesOutput) ToDashboardStringDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardStringDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardStringDefaultValues) *DashboardStringDefaultValues {
		return &v
	}).(DashboardStringDefaultValuesPtrOutput)
}

func (o DashboardStringDefaultValuesOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v DashboardStringDefaultValues) *DashboardDynamicDefaultValue { return v.DynamicValue }).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardStringDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardStringDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type DashboardStringDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (DashboardStringDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringDefaultValues)(nil)).Elem()
}

func (o DashboardStringDefaultValuesPtrOutput) ToDashboardStringDefaultValuesPtrOutput() DashboardStringDefaultValuesPtrOutput {
	return o
}

func (o DashboardStringDefaultValuesPtrOutput) ToDashboardStringDefaultValuesPtrOutputWithContext(ctx context.Context) DashboardStringDefaultValuesPtrOutput {
	return o
}

func (o DashboardStringDefaultValuesPtrOutput) Elem() DashboardStringDefaultValuesOutput {
	return o.ApplyT(func(v *DashboardStringDefaultValues) DashboardStringDefaultValues {
		if v != nil {
			return *v
		}
		var ret DashboardStringDefaultValues
		return ret
	}).(DashboardStringDefaultValuesOutput)
}

func (o DashboardStringDefaultValuesPtrOutput) DynamicValue() DashboardDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *DashboardStringDefaultValues) *DashboardDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(DashboardDynamicDefaultValuePtrOutput)
}

func (o DashboardStringDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardStringDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type DashboardStringFormatConfiguration struct {
	NullValueFormatConfiguration *DashboardNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *DashboardNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// DashboardStringFormatConfigurationInput is an input type that accepts DashboardStringFormatConfigurationArgs and DashboardStringFormatConfigurationOutput values.
// You can construct a concrete instance of `DashboardStringFormatConfigurationInput` via:
//
//	DashboardStringFormatConfigurationArgs{...}
type DashboardStringFormatConfigurationInput interface {
	pulumi.Input

	ToDashboardStringFormatConfigurationOutput() DashboardStringFormatConfigurationOutput
	ToDashboardStringFormatConfigurationOutputWithContext(context.Context) DashboardStringFormatConfigurationOutput
}

type DashboardStringFormatConfigurationArgs struct {
	NullValueFormatConfiguration DashboardNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   DashboardNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (DashboardStringFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringFormatConfiguration)(nil)).Elem()
}

func (i DashboardStringFormatConfigurationArgs) ToDashboardStringFormatConfigurationOutput() DashboardStringFormatConfigurationOutput {
	return i.ToDashboardStringFormatConfigurationOutputWithContext(context.Background())
}

func (i DashboardStringFormatConfigurationArgs) ToDashboardStringFormatConfigurationOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringFormatConfigurationOutput)
}

func (i DashboardStringFormatConfigurationArgs) ToDashboardStringFormatConfigurationPtrOutput() DashboardStringFormatConfigurationPtrOutput {
	return i.ToDashboardStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardStringFormatConfigurationArgs) ToDashboardStringFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringFormatConfigurationOutput).ToDashboardStringFormatConfigurationPtrOutputWithContext(ctx)
}

// DashboardStringFormatConfigurationPtrInput is an input type that accepts DashboardStringFormatConfigurationArgs, DashboardStringFormatConfigurationPtr and DashboardStringFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardStringFormatConfigurationPtrInput` via:
//
//	        DashboardStringFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardStringFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardStringFormatConfigurationPtrOutput() DashboardStringFormatConfigurationPtrOutput
	ToDashboardStringFormatConfigurationPtrOutputWithContext(context.Context) DashboardStringFormatConfigurationPtrOutput
}

type dashboardStringFormatConfigurationPtrType DashboardStringFormatConfigurationArgs

func DashboardStringFormatConfigurationPtr(v *DashboardStringFormatConfigurationArgs) DashboardStringFormatConfigurationPtrInput {
	return (*dashboardStringFormatConfigurationPtrType)(v)
}

func (*dashboardStringFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringFormatConfiguration)(nil)).Elem()
}

func (i *dashboardStringFormatConfigurationPtrType) ToDashboardStringFormatConfigurationPtrOutput() DashboardStringFormatConfigurationPtrOutput {
	return i.ToDashboardStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardStringFormatConfigurationPtrType) ToDashboardStringFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringFormatConfigurationPtrOutput)
}

type DashboardStringFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardStringFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringFormatConfiguration)(nil)).Elem()
}

func (o DashboardStringFormatConfigurationOutput) ToDashboardStringFormatConfigurationOutput() DashboardStringFormatConfigurationOutput {
	return o
}

func (o DashboardStringFormatConfigurationOutput) ToDashboardStringFormatConfigurationOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationOutput {
	return o
}

func (o DashboardStringFormatConfigurationOutput) ToDashboardStringFormatConfigurationPtrOutput() DashboardStringFormatConfigurationPtrOutput {
	return o.ToDashboardStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardStringFormatConfigurationOutput) ToDashboardStringFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardStringFormatConfiguration) *DashboardStringFormatConfiguration {
		return &v
	}).(DashboardStringFormatConfigurationPtrOutput)
}

func (o DashboardStringFormatConfigurationOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardStringFormatConfiguration) *DashboardNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardStringFormatConfigurationOutput) NumericFormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardStringFormatConfiguration) *DashboardNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardStringFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardStringFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringFormatConfiguration)(nil)).Elem()
}

func (o DashboardStringFormatConfigurationPtrOutput) ToDashboardStringFormatConfigurationPtrOutput() DashboardStringFormatConfigurationPtrOutput {
	return o
}

func (o DashboardStringFormatConfigurationPtrOutput) ToDashboardStringFormatConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringFormatConfigurationPtrOutput {
	return o
}

func (o DashboardStringFormatConfigurationPtrOutput) Elem() DashboardStringFormatConfigurationOutput {
	return o.ApplyT(func(v *DashboardStringFormatConfiguration) DashboardStringFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardStringFormatConfiguration
		return ret
	}).(DashboardStringFormatConfigurationOutput)
}

func (o DashboardStringFormatConfigurationPtrOutput) NullValueFormatConfiguration() DashboardNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardStringFormatConfiguration) *DashboardNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(DashboardNullValueFormatConfigurationPtrOutput)
}

func (o DashboardStringFormatConfigurationPtrOutput) NumericFormatConfiguration() DashboardNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardStringFormatConfiguration) *DashboardNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(DashboardNumericFormatConfigurationPtrOutput)
}

type DashboardStringParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// DashboardStringParameterInput is an input type that accepts DashboardStringParameterArgs and DashboardStringParameterOutput values.
// You can construct a concrete instance of `DashboardStringParameterInput` via:
//
//	DashboardStringParameterArgs{...}
type DashboardStringParameterInput interface {
	pulumi.Input

	ToDashboardStringParameterOutput() DashboardStringParameterOutput
	ToDashboardStringParameterOutputWithContext(context.Context) DashboardStringParameterOutput
}

type DashboardStringParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardStringParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameter)(nil)).Elem()
}

func (i DashboardStringParameterArgs) ToDashboardStringParameterOutput() DashboardStringParameterOutput {
	return i.ToDashboardStringParameterOutputWithContext(context.Background())
}

func (i DashboardStringParameterArgs) ToDashboardStringParameterOutputWithContext(ctx context.Context) DashboardStringParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterOutput)
}

// DashboardStringParameterArrayInput is an input type that accepts DashboardStringParameterArray and DashboardStringParameterArrayOutput values.
// You can construct a concrete instance of `DashboardStringParameterArrayInput` via:
//
//	DashboardStringParameterArray{ DashboardStringParameterArgs{...} }
type DashboardStringParameterArrayInput interface {
	pulumi.Input

	ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput
	ToDashboardStringParameterArrayOutputWithContext(context.Context) DashboardStringParameterArrayOutput
}

type DashboardStringParameterArray []DashboardStringParameterInput

func (DashboardStringParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardStringParameter)(nil)).Elem()
}

func (i DashboardStringParameterArray) ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput {
	return i.ToDashboardStringParameterArrayOutputWithContext(context.Background())
}

func (i DashboardStringParameterArray) ToDashboardStringParameterArrayOutputWithContext(ctx context.Context) DashboardStringParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterArrayOutput)
}

type DashboardStringParameterOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameter)(nil)).Elem()
}

func (o DashboardStringParameterOutput) ToDashboardStringParameterOutput() DashboardStringParameterOutput {
	return o
}

func (o DashboardStringParameterOutput) ToDashboardStringParameterOutputWithContext(ctx context.Context) DashboardStringParameterOutput {
	return o
}

func (o DashboardStringParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardStringParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardStringParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardStringParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardStringParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardStringParameter)(nil)).Elem()
}

func (o DashboardStringParameterArrayOutput) ToDashboardStringParameterArrayOutput() DashboardStringParameterArrayOutput {
	return o
}

func (o DashboardStringParameterArrayOutput) ToDashboardStringParameterArrayOutputWithContext(ctx context.Context) DashboardStringParameterArrayOutput {
	return o
}

func (o DashboardStringParameterArrayOutput) Index(i pulumi.IntInput) DashboardStringParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardStringParameter {
		return vs[0].([]DashboardStringParameter)[vs[1].(int)]
	}).(DashboardStringParameterOutput)
}

type DashboardStringParameterDeclaration struct {
	DefaultValues           *DashboardStringDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []DashboardMappedDataSetParameter           `pulumi:"mappedDataSetParameters"`
	Name                    string                                      `pulumi:"name"`
	ParameterValueType      DashboardParameterValueType                 `pulumi:"parameterValueType"`
	ValueWhenUnset          *DashboardStringValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// DashboardStringParameterDeclarationInput is an input type that accepts DashboardStringParameterDeclarationArgs and DashboardStringParameterDeclarationOutput values.
// You can construct a concrete instance of `DashboardStringParameterDeclarationInput` via:
//
//	DashboardStringParameterDeclarationArgs{...}
type DashboardStringParameterDeclarationInput interface {
	pulumi.Input

	ToDashboardStringParameterDeclarationOutput() DashboardStringParameterDeclarationOutput
	ToDashboardStringParameterDeclarationOutputWithContext(context.Context) DashboardStringParameterDeclarationOutput
}

type DashboardStringParameterDeclarationArgs struct {
	DefaultValues           DashboardStringDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters DashboardMappedDataSetParameterArrayInput          `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                 `pulumi:"name"`
	ParameterValueType      DashboardParameterValueTypeInput                   `pulumi:"parameterValueType"`
	ValueWhenUnset          DashboardStringValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (DashboardStringParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameterDeclaration)(nil)).Elem()
}

func (i DashboardStringParameterDeclarationArgs) ToDashboardStringParameterDeclarationOutput() DashboardStringParameterDeclarationOutput {
	return i.ToDashboardStringParameterDeclarationOutputWithContext(context.Background())
}

func (i DashboardStringParameterDeclarationArgs) ToDashboardStringParameterDeclarationOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterDeclarationOutput)
}

func (i DashboardStringParameterDeclarationArgs) ToDashboardStringParameterDeclarationPtrOutput() DashboardStringParameterDeclarationPtrOutput {
	return i.ToDashboardStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i DashboardStringParameterDeclarationArgs) ToDashboardStringParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterDeclarationOutput).ToDashboardStringParameterDeclarationPtrOutputWithContext(ctx)
}

// DashboardStringParameterDeclarationPtrInput is an input type that accepts DashboardStringParameterDeclarationArgs, DashboardStringParameterDeclarationPtr and DashboardStringParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `DashboardStringParameterDeclarationPtrInput` via:
//
//	        DashboardStringParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type DashboardStringParameterDeclarationPtrInput interface {
	pulumi.Input

	ToDashboardStringParameterDeclarationPtrOutput() DashboardStringParameterDeclarationPtrOutput
	ToDashboardStringParameterDeclarationPtrOutputWithContext(context.Context) DashboardStringParameterDeclarationPtrOutput
}

type dashboardStringParameterDeclarationPtrType DashboardStringParameterDeclarationArgs

func DashboardStringParameterDeclarationPtr(v *DashboardStringParameterDeclarationArgs) DashboardStringParameterDeclarationPtrInput {
	return (*dashboardStringParameterDeclarationPtrType)(v)
}

func (*dashboardStringParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringParameterDeclaration)(nil)).Elem()
}

func (i *dashboardStringParameterDeclarationPtrType) ToDashboardStringParameterDeclarationPtrOutput() DashboardStringParameterDeclarationPtrOutput {
	return i.ToDashboardStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *dashboardStringParameterDeclarationPtrType) ToDashboardStringParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringParameterDeclarationPtrOutput)
}

type DashboardStringParameterDeclarationOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringParameterDeclaration)(nil)).Elem()
}

func (o DashboardStringParameterDeclarationOutput) ToDashboardStringParameterDeclarationOutput() DashboardStringParameterDeclarationOutput {
	return o
}

func (o DashboardStringParameterDeclarationOutput) ToDashboardStringParameterDeclarationOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationOutput {
	return o
}

func (o DashboardStringParameterDeclarationOutput) ToDashboardStringParameterDeclarationPtrOutput() DashboardStringParameterDeclarationPtrOutput {
	return o.ToDashboardStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o DashboardStringParameterDeclarationOutput) ToDashboardStringParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardStringParameterDeclaration) *DashboardStringParameterDeclaration {
		return &v
	}).(DashboardStringParameterDeclarationPtrOutput)
}

func (o DashboardStringParameterDeclarationOutput) DefaultValues() DashboardStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v DashboardStringParameterDeclaration) *DashboardStringDefaultValues { return v.DefaultValues }).(DashboardStringDefaultValuesPtrOutput)
}

func (o DashboardStringParameterDeclarationOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v DashboardStringParameterDeclaration) []DashboardMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardStringParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardStringParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardStringParameterDeclarationOutput) ParameterValueType() DashboardParameterValueTypeOutput {
	return o.ApplyT(func(v DashboardStringParameterDeclaration) DashboardParameterValueType { return v.ParameterValueType }).(DashboardParameterValueTypeOutput)
}

func (o DashboardStringParameterDeclarationOutput) ValueWhenUnset() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardStringParameterDeclaration) *DashboardStringValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(DashboardStringValueWhenUnsetConfigurationPtrOutput)
}

type DashboardStringParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (DashboardStringParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringParameterDeclaration)(nil)).Elem()
}

func (o DashboardStringParameterDeclarationPtrOutput) ToDashboardStringParameterDeclarationPtrOutput() DashboardStringParameterDeclarationPtrOutput {
	return o
}

func (o DashboardStringParameterDeclarationPtrOutput) ToDashboardStringParameterDeclarationPtrOutputWithContext(ctx context.Context) DashboardStringParameterDeclarationPtrOutput {
	return o
}

func (o DashboardStringParameterDeclarationPtrOutput) Elem() DashboardStringParameterDeclarationOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) DashboardStringParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret DashboardStringParameterDeclaration
		return ret
	}).(DashboardStringParameterDeclarationOutput)
}

func (o DashboardStringParameterDeclarationPtrOutput) DefaultValues() DashboardStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) *DashboardStringDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(DashboardStringDefaultValuesPtrOutput)
}

func (o DashboardStringParameterDeclarationPtrOutput) MappedDataSetParameters() DashboardMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) []DashboardMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(DashboardMappedDataSetParameterArrayOutput)
}

func (o DashboardStringParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardStringParameterDeclarationPtrOutput) ParameterValueType() DashboardParameterValueTypePtrOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) *DashboardParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(DashboardParameterValueTypePtrOutput)
}

func (o DashboardStringParameterDeclarationPtrOutput) ValueWhenUnset() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardStringParameterDeclaration) *DashboardStringValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(DashboardStringValueWhenUnsetConfigurationPtrOutput)
}

type DashboardStringValueWhenUnsetConfiguration struct {
	CustomValue          *string                        `pulumi:"customValue"`
	ValueWhenUnsetOption *DashboardValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// DashboardStringValueWhenUnsetConfigurationInput is an input type that accepts DashboardStringValueWhenUnsetConfigurationArgs and DashboardStringValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `DashboardStringValueWhenUnsetConfigurationInput` via:
//
//	DashboardStringValueWhenUnsetConfigurationArgs{...}
type DashboardStringValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToDashboardStringValueWhenUnsetConfigurationOutput() DashboardStringValueWhenUnsetConfigurationOutput
	ToDashboardStringValueWhenUnsetConfigurationOutputWithContext(context.Context) DashboardStringValueWhenUnsetConfigurationOutput
}

type DashboardStringValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                 `pulumi:"customValue"`
	ValueWhenUnsetOption DashboardValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (DashboardStringValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i DashboardStringValueWhenUnsetConfigurationArgs) ToDashboardStringValueWhenUnsetConfigurationOutput() DashboardStringValueWhenUnsetConfigurationOutput {
	return i.ToDashboardStringValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i DashboardStringValueWhenUnsetConfigurationArgs) ToDashboardStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringValueWhenUnsetConfigurationOutput)
}

func (i DashboardStringValueWhenUnsetConfigurationArgs) ToDashboardStringValueWhenUnsetConfigurationPtrOutput() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardStringValueWhenUnsetConfigurationArgs) ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringValueWhenUnsetConfigurationOutput).ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// DashboardStringValueWhenUnsetConfigurationPtrInput is an input type that accepts DashboardStringValueWhenUnsetConfigurationArgs, DashboardStringValueWhenUnsetConfigurationPtr and DashboardStringValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardStringValueWhenUnsetConfigurationPtrInput` via:
//
//	        DashboardStringValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardStringValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardStringValueWhenUnsetConfigurationPtrOutput() DashboardStringValueWhenUnsetConfigurationPtrOutput
	ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) DashboardStringValueWhenUnsetConfigurationPtrOutput
}

type dashboardStringValueWhenUnsetConfigurationPtrType DashboardStringValueWhenUnsetConfigurationArgs

func DashboardStringValueWhenUnsetConfigurationPtr(v *DashboardStringValueWhenUnsetConfigurationArgs) DashboardStringValueWhenUnsetConfigurationPtrInput {
	return (*dashboardStringValueWhenUnsetConfigurationPtrType)(v)
}

func (*dashboardStringValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *dashboardStringValueWhenUnsetConfigurationPtrType) ToDashboardStringValueWhenUnsetConfigurationPtrOutput() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardStringValueWhenUnsetConfigurationPtrType) ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardStringValueWhenUnsetConfigurationPtrOutput)
}

type DashboardStringValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardStringValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) ToDashboardStringValueWhenUnsetConfigurationOutput() DashboardStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) ToDashboardStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) ToDashboardStringValueWhenUnsetConfigurationPtrOutput() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o.ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardStringValueWhenUnsetConfiguration) *DashboardStringValueWhenUnsetConfiguration {
		return &v
	}).(DashboardStringValueWhenUnsetConfigurationPtrOutput)
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardStringValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o DashboardStringValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v DashboardStringValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardStringValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardStringValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o DashboardStringValueWhenUnsetConfigurationPtrOutput) ToDashboardStringValueWhenUnsetConfigurationPtrOutput() DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardStringValueWhenUnsetConfigurationPtrOutput) ToDashboardStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) DashboardStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o DashboardStringValueWhenUnsetConfigurationPtrOutput) Elem() DashboardStringValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *DashboardStringValueWhenUnsetConfiguration) DashboardStringValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardStringValueWhenUnsetConfiguration
		return ret
	}).(DashboardStringValueWhenUnsetConfigurationOutput)
}

func (o DashboardStringValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardStringValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o DashboardStringValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() DashboardValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *DashboardStringValueWhenUnsetConfiguration) *DashboardValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(DashboardValueWhenUnsetOptionPtrOutput)
}

type DashboardSubtotalOptions struct {
	CustomLabel           *string                                   `pulumi:"customLabel"`
	FieldLevel            *DashboardPivotTableSubtotalLevel         `pulumi:"fieldLevel"`
	FieldLevelOptions     []DashboardPivotTableFieldSubtotalOptions `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle *DashboardTableCellStyle                  `pulumi:"metricHeaderCellStyle"`
	TotalCellStyle        *DashboardTableCellStyle                  `pulumi:"totalCellStyle"`
	TotalsVisibility      *DashboardVisibility                      `pulumi:"totalsVisibility"`
	ValueCellStyle        *DashboardTableCellStyle                  `pulumi:"valueCellStyle"`
}

// DashboardSubtotalOptionsInput is an input type that accepts DashboardSubtotalOptionsArgs and DashboardSubtotalOptionsOutput values.
// You can construct a concrete instance of `DashboardSubtotalOptionsInput` via:
//
//	DashboardSubtotalOptionsArgs{...}
type DashboardSubtotalOptionsInput interface {
	pulumi.Input

	ToDashboardSubtotalOptionsOutput() DashboardSubtotalOptionsOutput
	ToDashboardSubtotalOptionsOutputWithContext(context.Context) DashboardSubtotalOptionsOutput
}

type DashboardSubtotalOptionsArgs struct {
	CustomLabel           pulumi.StringPtrInput                             `pulumi:"customLabel"`
	FieldLevel            DashboardPivotTableSubtotalLevelPtrInput          `pulumi:"fieldLevel"`
	FieldLevelOptions     DashboardPivotTableFieldSubtotalOptionsArrayInput `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle DashboardTableCellStylePtrInput                   `pulumi:"metricHeaderCellStyle"`
	TotalCellStyle        DashboardTableCellStylePtrInput                   `pulumi:"totalCellStyle"`
	TotalsVisibility      DashboardVisibilityPtrInput                       `pulumi:"totalsVisibility"`
	ValueCellStyle        DashboardTableCellStylePtrInput                   `pulumi:"valueCellStyle"`
}

func (DashboardSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSubtotalOptions)(nil)).Elem()
}

func (i DashboardSubtotalOptionsArgs) ToDashboardSubtotalOptionsOutput() DashboardSubtotalOptionsOutput {
	return i.ToDashboardSubtotalOptionsOutputWithContext(context.Background())
}

func (i DashboardSubtotalOptionsArgs) ToDashboardSubtotalOptionsOutputWithContext(ctx context.Context) DashboardSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSubtotalOptionsOutput)
}

func (i DashboardSubtotalOptionsArgs) ToDashboardSubtotalOptionsPtrOutput() DashboardSubtotalOptionsPtrOutput {
	return i.ToDashboardSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardSubtotalOptionsArgs) ToDashboardSubtotalOptionsPtrOutputWithContext(ctx context.Context) DashboardSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSubtotalOptionsOutput).ToDashboardSubtotalOptionsPtrOutputWithContext(ctx)
}

// DashboardSubtotalOptionsPtrInput is an input type that accepts DashboardSubtotalOptionsArgs, DashboardSubtotalOptionsPtr and DashboardSubtotalOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardSubtotalOptionsPtrInput` via:
//
//	        DashboardSubtotalOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardSubtotalOptionsPtrInput interface {
	pulumi.Input

	ToDashboardSubtotalOptionsPtrOutput() DashboardSubtotalOptionsPtrOutput
	ToDashboardSubtotalOptionsPtrOutputWithContext(context.Context) DashboardSubtotalOptionsPtrOutput
}

type dashboardSubtotalOptionsPtrType DashboardSubtotalOptionsArgs

func DashboardSubtotalOptionsPtr(v *DashboardSubtotalOptionsArgs) DashboardSubtotalOptionsPtrInput {
	return (*dashboardSubtotalOptionsPtrType)(v)
}

func (*dashboardSubtotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSubtotalOptions)(nil)).Elem()
}

func (i *dashboardSubtotalOptionsPtrType) ToDashboardSubtotalOptionsPtrOutput() DashboardSubtotalOptionsPtrOutput {
	return i.ToDashboardSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardSubtotalOptionsPtrType) ToDashboardSubtotalOptionsPtrOutputWithContext(ctx context.Context) DashboardSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardSubtotalOptionsPtrOutput)
}

type DashboardSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (DashboardSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardSubtotalOptions)(nil)).Elem()
}

func (o DashboardSubtotalOptionsOutput) ToDashboardSubtotalOptionsOutput() DashboardSubtotalOptionsOutput {
	return o
}

func (o DashboardSubtotalOptionsOutput) ToDashboardSubtotalOptionsOutputWithContext(ctx context.Context) DashboardSubtotalOptionsOutput {
	return o
}

func (o DashboardSubtotalOptionsOutput) ToDashboardSubtotalOptionsPtrOutput() DashboardSubtotalOptionsPtrOutput {
	return o.ToDashboardSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardSubtotalOptionsOutput) ToDashboardSubtotalOptionsPtrOutputWithContext(ctx context.Context) DashboardSubtotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardSubtotalOptions) *DashboardSubtotalOptions {
		return &v
	}).(DashboardSubtotalOptionsPtrOutput)
}

func (o DashboardSubtotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardSubtotalOptionsOutput) FieldLevel() DashboardPivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *DashboardPivotTableSubtotalLevel { return v.FieldLevel }).(DashboardPivotTableSubtotalLevelPtrOutput)
}

func (o DashboardSubtotalOptionsOutput) FieldLevelOptions() DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) []DashboardPivotTableFieldSubtotalOptions { return v.FieldLevelOptions }).(DashboardPivotTableFieldSubtotalOptionsArrayOutput)
}

func (o DashboardSubtotalOptionsOutput) MetricHeaderCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *DashboardTableCellStyle { return v.MetricHeaderCellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardSubtotalOptionsOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *DashboardTableCellStyle { return v.TotalCellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardSubtotalOptionsOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *DashboardVisibility { return v.TotalsVisibility }).(DashboardVisibilityPtrOutput)
}

func (o DashboardSubtotalOptionsOutput) ValueCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardSubtotalOptions) *DashboardTableCellStyle { return v.ValueCellStyle }).(DashboardTableCellStylePtrOutput)
}

type DashboardSubtotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardSubtotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardSubtotalOptions)(nil)).Elem()
}

func (o DashboardSubtotalOptionsPtrOutput) ToDashboardSubtotalOptionsPtrOutput() DashboardSubtotalOptionsPtrOutput {
	return o
}

func (o DashboardSubtotalOptionsPtrOutput) ToDashboardSubtotalOptionsPtrOutputWithContext(ctx context.Context) DashboardSubtotalOptionsPtrOutput {
	return o
}

func (o DashboardSubtotalOptionsPtrOutput) Elem() DashboardSubtotalOptionsOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) DashboardSubtotalOptions {
		if v != nil {
			return *v
		}
		var ret DashboardSubtotalOptions
		return ret
	}).(DashboardSubtotalOptionsOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) FieldLevel() DashboardPivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *DashboardPivotTableSubtotalLevel {
		if v == nil {
			return nil
		}
		return v.FieldLevel
	}).(DashboardPivotTableSubtotalLevelPtrOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) FieldLevelOptions() DashboardPivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) []DashboardPivotTableFieldSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.FieldLevelOptions
	}).(DashboardPivotTableFieldSubtotalOptionsArrayOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) MetricHeaderCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardSubtotalOptionsPtrOutput) ValueCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardSubtotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

type DashboardTableAggregatedFieldWells struct {
	GroupBy []DashboardDimensionField `pulumi:"groupBy"`
	Values  []DashboardMeasureField   `pulumi:"values"`
}

// DashboardTableAggregatedFieldWellsInput is an input type that accepts DashboardTableAggregatedFieldWellsArgs and DashboardTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardTableAggregatedFieldWellsInput` via:
//
//	DashboardTableAggregatedFieldWellsArgs{...}
type DashboardTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardTableAggregatedFieldWellsOutput() DashboardTableAggregatedFieldWellsOutput
	ToDashboardTableAggregatedFieldWellsOutputWithContext(context.Context) DashboardTableAggregatedFieldWellsOutput
}

type DashboardTableAggregatedFieldWellsArgs struct {
	GroupBy DashboardDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardTableAggregatedFieldWellsArgs) ToDashboardTableAggregatedFieldWellsOutput() DashboardTableAggregatedFieldWellsOutput {
	return i.ToDashboardTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardTableAggregatedFieldWellsArgs) ToDashboardTableAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableAggregatedFieldWellsOutput)
}

func (i DashboardTableAggregatedFieldWellsArgs) ToDashboardTableAggregatedFieldWellsPtrOutput() DashboardTableAggregatedFieldWellsPtrOutput {
	return i.ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardTableAggregatedFieldWellsArgs) ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableAggregatedFieldWellsOutput).ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardTableAggregatedFieldWellsPtrInput is an input type that accepts DashboardTableAggregatedFieldWellsArgs, DashboardTableAggregatedFieldWellsPtr and DashboardTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardTableAggregatedFieldWellsPtrInput` via:
//
//	        DashboardTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardTableAggregatedFieldWellsPtrOutput() DashboardTableAggregatedFieldWellsPtrOutput
	ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardTableAggregatedFieldWellsPtrOutput
}

type dashboardTableAggregatedFieldWellsPtrType DashboardTableAggregatedFieldWellsArgs

func DashboardTableAggregatedFieldWellsPtr(v *DashboardTableAggregatedFieldWellsArgs) DashboardTableAggregatedFieldWellsPtrInput {
	return (*dashboardTableAggregatedFieldWellsPtrType)(v)
}

func (*dashboardTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardTableAggregatedFieldWellsPtrType) ToDashboardTableAggregatedFieldWellsPtrOutput() DashboardTableAggregatedFieldWellsPtrOutput {
	return i.ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableAggregatedFieldWellsPtrType) ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableAggregatedFieldWellsPtrOutput)
}

type DashboardTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTableAggregatedFieldWellsOutput) ToDashboardTableAggregatedFieldWellsOutput() DashboardTableAggregatedFieldWellsOutput {
	return o
}

func (o DashboardTableAggregatedFieldWellsOutput) ToDashboardTableAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsOutput {
	return o
}

func (o DashboardTableAggregatedFieldWellsOutput) ToDashboardTableAggregatedFieldWellsPtrOutput() DashboardTableAggregatedFieldWellsPtrOutput {
	return o.ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardTableAggregatedFieldWellsOutput) ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableAggregatedFieldWells) *DashboardTableAggregatedFieldWells {
		return &v
	}).(DashboardTableAggregatedFieldWellsPtrOutput)
}

func (o DashboardTableAggregatedFieldWellsOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardTableAggregatedFieldWells) []DashboardDimensionField { return v.GroupBy }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardTableAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardTableAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTableAggregatedFieldWellsPtrOutput) ToDashboardTableAggregatedFieldWellsPtrOutput() DashboardTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTableAggregatedFieldWellsPtrOutput) ToDashboardTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTableAggregatedFieldWellsPtrOutput) Elem() DashboardTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardTableAggregatedFieldWells) DashboardTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardTableAggregatedFieldWells
		return ret
	}).(DashboardTableAggregatedFieldWellsOutput)
}

func (o DashboardTableAggregatedFieldWellsPtrOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTableAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardTableAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTableAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardTableBorderOptions struct {
	Color     *string                    `pulumi:"color"`
	Style     *DashboardTableBorderStyle `pulumi:"style"`
	Thickness *float64                   `pulumi:"thickness"`
}

// DashboardTableBorderOptionsInput is an input type that accepts DashboardTableBorderOptionsArgs and DashboardTableBorderOptionsOutput values.
// You can construct a concrete instance of `DashboardTableBorderOptionsInput` via:
//
//	DashboardTableBorderOptionsArgs{...}
type DashboardTableBorderOptionsInput interface {
	pulumi.Input

	ToDashboardTableBorderOptionsOutput() DashboardTableBorderOptionsOutput
	ToDashboardTableBorderOptionsOutputWithContext(context.Context) DashboardTableBorderOptionsOutput
}

type DashboardTableBorderOptionsArgs struct {
	Color     pulumi.StringPtrInput             `pulumi:"color"`
	Style     DashboardTableBorderStylePtrInput `pulumi:"style"`
	Thickness pulumi.Float64PtrInput            `pulumi:"thickness"`
}

func (DashboardTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableBorderOptions)(nil)).Elem()
}

func (i DashboardTableBorderOptionsArgs) ToDashboardTableBorderOptionsOutput() DashboardTableBorderOptionsOutput {
	return i.ToDashboardTableBorderOptionsOutputWithContext(context.Background())
}

func (i DashboardTableBorderOptionsArgs) ToDashboardTableBorderOptionsOutputWithContext(ctx context.Context) DashboardTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableBorderOptionsOutput)
}

func (i DashboardTableBorderOptionsArgs) ToDashboardTableBorderOptionsPtrOutput() DashboardTableBorderOptionsPtrOutput {
	return i.ToDashboardTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTableBorderOptionsArgs) ToDashboardTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableBorderOptionsOutput).ToDashboardTableBorderOptionsPtrOutputWithContext(ctx)
}

// DashboardTableBorderOptionsPtrInput is an input type that accepts DashboardTableBorderOptionsArgs, DashboardTableBorderOptionsPtr and DashboardTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTableBorderOptionsPtrInput` via:
//
//	        DashboardTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTableBorderOptionsPtrOutput() DashboardTableBorderOptionsPtrOutput
	ToDashboardTableBorderOptionsPtrOutputWithContext(context.Context) DashboardTableBorderOptionsPtrOutput
}

type dashboardTableBorderOptionsPtrType DashboardTableBorderOptionsArgs

func DashboardTableBorderOptionsPtr(v *DashboardTableBorderOptionsArgs) DashboardTableBorderOptionsPtrInput {
	return (*dashboardTableBorderOptionsPtrType)(v)
}

func (*dashboardTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableBorderOptions)(nil)).Elem()
}

func (i *dashboardTableBorderOptionsPtrType) ToDashboardTableBorderOptionsPtrOutput() DashboardTableBorderOptionsPtrOutput {
	return i.ToDashboardTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableBorderOptionsPtrType) ToDashboardTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableBorderOptionsPtrOutput)
}

type DashboardTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableBorderOptions)(nil)).Elem()
}

func (o DashboardTableBorderOptionsOutput) ToDashboardTableBorderOptionsOutput() DashboardTableBorderOptionsOutput {
	return o
}

func (o DashboardTableBorderOptionsOutput) ToDashboardTableBorderOptionsOutputWithContext(ctx context.Context) DashboardTableBorderOptionsOutput {
	return o
}

func (o DashboardTableBorderOptionsOutput) ToDashboardTableBorderOptionsPtrOutput() DashboardTableBorderOptionsPtrOutput {
	return o.ToDashboardTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTableBorderOptionsOutput) ToDashboardTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableBorderOptions) *DashboardTableBorderOptions {
		return &v
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableBorderOptionsOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTableBorderOptions) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o DashboardTableBorderOptionsOutput) Style() DashboardTableBorderStylePtrOutput {
	return o.ApplyT(func(v DashboardTableBorderOptions) *DashboardTableBorderStyle { return v.Style }).(DashboardTableBorderStylePtrOutput)
}

func (o DashboardTableBorderOptionsOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTableBorderOptions) *float64 { return v.Thickness }).(pulumi.Float64PtrOutput)
}

type DashboardTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableBorderOptions)(nil)).Elem()
}

func (o DashboardTableBorderOptionsPtrOutput) ToDashboardTableBorderOptionsPtrOutput() DashboardTableBorderOptionsPtrOutput {
	return o
}

func (o DashboardTableBorderOptionsPtrOutput) ToDashboardTableBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableBorderOptionsPtrOutput {
	return o
}

func (o DashboardTableBorderOptionsPtrOutput) Elem() DashboardTableBorderOptionsOutput {
	return o.ApplyT(func(v *DashboardTableBorderOptions) DashboardTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTableBorderOptions
		return ret
	}).(DashboardTableBorderOptionsOutput)
}

func (o DashboardTableBorderOptionsPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTableBorderOptions) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTableBorderOptionsPtrOutput) Style() DashboardTableBorderStylePtrOutput {
	return o.ApplyT(func(v *DashboardTableBorderOptions) *DashboardTableBorderStyle {
		if v == nil {
			return nil
		}
		return v.Style
	}).(DashboardTableBorderStylePtrOutput)
}

func (o DashboardTableBorderOptionsPtrOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTableBorderOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Thickness
	}).(pulumi.Float64PtrOutput)
}

type DashboardTableCellConditionalFormatting struct {
	FieldId    string                          `pulumi:"fieldId"`
	TextFormat *DashboardTextConditionalFormat `pulumi:"textFormat"`
}

// DashboardTableCellConditionalFormattingInput is an input type that accepts DashboardTableCellConditionalFormattingArgs and DashboardTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardTableCellConditionalFormattingInput` via:
//
//	DashboardTableCellConditionalFormattingArgs{...}
type DashboardTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardTableCellConditionalFormattingOutput() DashboardTableCellConditionalFormattingOutput
	ToDashboardTableCellConditionalFormattingOutputWithContext(context.Context) DashboardTableCellConditionalFormattingOutput
}

type DashboardTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                     `pulumi:"fieldId"`
	TextFormat DashboardTextConditionalFormatPtrInput `pulumi:"textFormat"`
}

func (DashboardTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellConditionalFormatting)(nil)).Elem()
}

func (i DashboardTableCellConditionalFormattingArgs) ToDashboardTableCellConditionalFormattingOutput() DashboardTableCellConditionalFormattingOutput {
	return i.ToDashboardTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardTableCellConditionalFormattingArgs) ToDashboardTableCellConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellConditionalFormattingOutput)
}

func (i DashboardTableCellConditionalFormattingArgs) ToDashboardTableCellConditionalFormattingPtrOutput() DashboardTableCellConditionalFormattingPtrOutput {
	return i.ToDashboardTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardTableCellConditionalFormattingArgs) ToDashboardTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellConditionalFormattingOutput).ToDashboardTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardTableCellConditionalFormattingPtrInput is an input type that accepts DashboardTableCellConditionalFormattingArgs, DashboardTableCellConditionalFormattingPtr and DashboardTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardTableCellConditionalFormattingPtrInput` via:
//
//	        DashboardTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardTableCellConditionalFormattingPtrOutput() DashboardTableCellConditionalFormattingPtrOutput
	ToDashboardTableCellConditionalFormattingPtrOutputWithContext(context.Context) DashboardTableCellConditionalFormattingPtrOutput
}

type dashboardTableCellConditionalFormattingPtrType DashboardTableCellConditionalFormattingArgs

func DashboardTableCellConditionalFormattingPtr(v *DashboardTableCellConditionalFormattingArgs) DashboardTableCellConditionalFormattingPtrInput {
	return (*dashboardTableCellConditionalFormattingPtrType)(v)
}

func (*dashboardTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellConditionalFormatting)(nil)).Elem()
}

func (i *dashboardTableCellConditionalFormattingPtrType) ToDashboardTableCellConditionalFormattingPtrOutput() DashboardTableCellConditionalFormattingPtrOutput {
	return i.ToDashboardTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardTableCellConditionalFormattingPtrType) ToDashboardTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellConditionalFormattingPtrOutput)
}

type DashboardTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableCellConditionalFormattingOutput) ToDashboardTableCellConditionalFormattingOutput() DashboardTableCellConditionalFormattingOutput {
	return o
}

func (o DashboardTableCellConditionalFormattingOutput) ToDashboardTableCellConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingOutput {
	return o
}

func (o DashboardTableCellConditionalFormattingOutput) ToDashboardTableCellConditionalFormattingPtrOutput() DashboardTableCellConditionalFormattingPtrOutput {
	return o.ToDashboardTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardTableCellConditionalFormattingOutput) ToDashboardTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableCellConditionalFormatting) *DashboardTableCellConditionalFormatting {
		return &v
	}).(DashboardTableCellConditionalFormattingPtrOutput)
}

func (o DashboardTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardTableCellConditionalFormattingOutput) TextFormat() DashboardTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v DashboardTableCellConditionalFormatting) *DashboardTextConditionalFormat { return v.TextFormat }).(DashboardTextConditionalFormatPtrOutput)
}

type DashboardTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableCellConditionalFormattingPtrOutput) ToDashboardTableCellConditionalFormattingPtrOutput() DashboardTableCellConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableCellConditionalFormattingPtrOutput) ToDashboardTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableCellConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableCellConditionalFormattingPtrOutput) Elem() DashboardTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardTableCellConditionalFormatting) DashboardTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardTableCellConditionalFormatting
		return ret
	}).(DashboardTableCellConditionalFormattingOutput)
}

func (o DashboardTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTableCellConditionalFormattingPtrOutput) TextFormat() DashboardTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellConditionalFormatting) *DashboardTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(DashboardTextConditionalFormatPtrOutput)
}

type DashboardTableCellImageSizingConfiguration struct {
	TableCellImageScalingConfiguration *DashboardTableCellImageScalingConfiguration `pulumi:"tableCellImageScalingConfiguration"`
}

// DashboardTableCellImageSizingConfigurationInput is an input type that accepts DashboardTableCellImageSizingConfigurationArgs and DashboardTableCellImageSizingConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableCellImageSizingConfigurationInput` via:
//
//	DashboardTableCellImageSizingConfigurationArgs{...}
type DashboardTableCellImageSizingConfigurationInput interface {
	pulumi.Input

	ToDashboardTableCellImageSizingConfigurationOutput() DashboardTableCellImageSizingConfigurationOutput
	ToDashboardTableCellImageSizingConfigurationOutputWithContext(context.Context) DashboardTableCellImageSizingConfigurationOutput
}

type DashboardTableCellImageSizingConfigurationArgs struct {
	TableCellImageScalingConfiguration DashboardTableCellImageScalingConfigurationPtrInput `pulumi:"tableCellImageScalingConfiguration"`
}

func (DashboardTableCellImageSizingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i DashboardTableCellImageSizingConfigurationArgs) ToDashboardTableCellImageSizingConfigurationOutput() DashboardTableCellImageSizingConfigurationOutput {
	return i.ToDashboardTableCellImageSizingConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableCellImageSizingConfigurationArgs) ToDashboardTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellImageSizingConfigurationOutput)
}

func (i DashboardTableCellImageSizingConfigurationArgs) ToDashboardTableCellImageSizingConfigurationPtrOutput() DashboardTableCellImageSizingConfigurationPtrOutput {
	return i.ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableCellImageSizingConfigurationArgs) ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellImageSizingConfigurationOutput).ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableCellImageSizingConfigurationPtrInput is an input type that accepts DashboardTableCellImageSizingConfigurationArgs, DashboardTableCellImageSizingConfigurationPtr and DashboardTableCellImageSizingConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableCellImageSizingConfigurationPtrInput` via:
//
//	        DashboardTableCellImageSizingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableCellImageSizingConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableCellImageSizingConfigurationPtrOutput() DashboardTableCellImageSizingConfigurationPtrOutput
	ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(context.Context) DashboardTableCellImageSizingConfigurationPtrOutput
}

type dashboardTableCellImageSizingConfigurationPtrType DashboardTableCellImageSizingConfigurationArgs

func DashboardTableCellImageSizingConfigurationPtr(v *DashboardTableCellImageSizingConfigurationArgs) DashboardTableCellImageSizingConfigurationPtrInput {
	return (*dashboardTableCellImageSizingConfigurationPtrType)(v)
}

func (*dashboardTableCellImageSizingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i *dashboardTableCellImageSizingConfigurationPtrType) ToDashboardTableCellImageSizingConfigurationPtrOutput() DashboardTableCellImageSizingConfigurationPtrOutput {
	return i.ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableCellImageSizingConfigurationPtrType) ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellImageSizingConfigurationPtrOutput)
}

type DashboardTableCellImageSizingConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableCellImageSizingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o DashboardTableCellImageSizingConfigurationOutput) ToDashboardTableCellImageSizingConfigurationOutput() DashboardTableCellImageSizingConfigurationOutput {
	return o
}

func (o DashboardTableCellImageSizingConfigurationOutput) ToDashboardTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationOutput {
	return o
}

func (o DashboardTableCellImageSizingConfigurationOutput) ToDashboardTableCellImageSizingConfigurationPtrOutput() DashboardTableCellImageSizingConfigurationPtrOutput {
	return o.ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableCellImageSizingConfigurationOutput) ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableCellImageSizingConfiguration) *DashboardTableCellImageSizingConfiguration {
		return &v
	}).(DashboardTableCellImageSizingConfigurationPtrOutput)
}

func (o DashboardTableCellImageSizingConfigurationOutput) TableCellImageScalingConfiguration() DashboardTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableCellImageSizingConfiguration) *DashboardTableCellImageScalingConfiguration {
		return v.TableCellImageScalingConfiguration
	}).(DashboardTableCellImageScalingConfigurationPtrOutput)
}

type DashboardTableCellImageSizingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableCellImageSizingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o DashboardTableCellImageSizingConfigurationPtrOutput) ToDashboardTableCellImageSizingConfigurationPtrOutput() DashboardTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o DashboardTableCellImageSizingConfigurationPtrOutput) ToDashboardTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o DashboardTableCellImageSizingConfigurationPtrOutput) Elem() DashboardTableCellImageSizingConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableCellImageSizingConfiguration) DashboardTableCellImageSizingConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableCellImageSizingConfiguration
		return ret
	}).(DashboardTableCellImageSizingConfigurationOutput)
}

func (o DashboardTableCellImageSizingConfigurationPtrOutput) TableCellImageScalingConfiguration() DashboardTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellImageSizingConfiguration) *DashboardTableCellImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.TableCellImageScalingConfiguration
	}).(DashboardTableCellImageScalingConfigurationPtrOutput)
}

type DashboardTableCellStyle struct {
	BackgroundColor         *string                            `pulumi:"backgroundColor"`
	Border                  *DashboardGlobalTableBorderOptions `pulumi:"border"`
	FontConfiguration       *DashboardFontConfiguration        `pulumi:"fontConfiguration"`
	Height                  *float64                           `pulumi:"height"`
	HorizontalTextAlignment *DashboardHorizontalTextAlignment  `pulumi:"horizontalTextAlignment"`
	TextWrap                *DashboardTextWrap                 `pulumi:"textWrap"`
	VerticalTextAlignment   *DashboardVerticalTextAlignment    `pulumi:"verticalTextAlignment"`
	Visibility              *DashboardVisibility               `pulumi:"visibility"`
}

// DashboardTableCellStyleInput is an input type that accepts DashboardTableCellStyleArgs and DashboardTableCellStyleOutput values.
// You can construct a concrete instance of `DashboardTableCellStyleInput` via:
//
//	DashboardTableCellStyleArgs{...}
type DashboardTableCellStyleInput interface {
	pulumi.Input

	ToDashboardTableCellStyleOutput() DashboardTableCellStyleOutput
	ToDashboardTableCellStyleOutputWithContext(context.Context) DashboardTableCellStyleOutput
}

type DashboardTableCellStyleArgs struct {
	BackgroundColor         pulumi.StringPtrInput                     `pulumi:"backgroundColor"`
	Border                  DashboardGlobalTableBorderOptionsPtrInput `pulumi:"border"`
	FontConfiguration       DashboardFontConfigurationPtrInput        `pulumi:"fontConfiguration"`
	Height                  pulumi.Float64PtrInput                    `pulumi:"height"`
	HorizontalTextAlignment DashboardHorizontalTextAlignmentPtrInput  `pulumi:"horizontalTextAlignment"`
	TextWrap                DashboardTextWrapPtrInput                 `pulumi:"textWrap"`
	VerticalTextAlignment   DashboardVerticalTextAlignmentPtrInput    `pulumi:"verticalTextAlignment"`
	Visibility              DashboardVisibilityPtrInput               `pulumi:"visibility"`
}

func (DashboardTableCellStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellStyle)(nil)).Elem()
}

func (i DashboardTableCellStyleArgs) ToDashboardTableCellStyleOutput() DashboardTableCellStyleOutput {
	return i.ToDashboardTableCellStyleOutputWithContext(context.Background())
}

func (i DashboardTableCellStyleArgs) ToDashboardTableCellStyleOutputWithContext(ctx context.Context) DashboardTableCellStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellStyleOutput)
}

func (i DashboardTableCellStyleArgs) ToDashboardTableCellStylePtrOutput() DashboardTableCellStylePtrOutput {
	return i.ToDashboardTableCellStylePtrOutputWithContext(context.Background())
}

func (i DashboardTableCellStyleArgs) ToDashboardTableCellStylePtrOutputWithContext(ctx context.Context) DashboardTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellStyleOutput).ToDashboardTableCellStylePtrOutputWithContext(ctx)
}

// DashboardTableCellStylePtrInput is an input type that accepts DashboardTableCellStyleArgs, DashboardTableCellStylePtr and DashboardTableCellStylePtrOutput values.
// You can construct a concrete instance of `DashboardTableCellStylePtrInput` via:
//
//	        DashboardTableCellStyleArgs{...}
//
//	or:
//
//	        nil
type DashboardTableCellStylePtrInput interface {
	pulumi.Input

	ToDashboardTableCellStylePtrOutput() DashboardTableCellStylePtrOutput
	ToDashboardTableCellStylePtrOutputWithContext(context.Context) DashboardTableCellStylePtrOutput
}

type dashboardTableCellStylePtrType DashboardTableCellStyleArgs

func DashboardTableCellStylePtr(v *DashboardTableCellStyleArgs) DashboardTableCellStylePtrInput {
	return (*dashboardTableCellStylePtrType)(v)
}

func (*dashboardTableCellStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellStyle)(nil)).Elem()
}

func (i *dashboardTableCellStylePtrType) ToDashboardTableCellStylePtrOutput() DashboardTableCellStylePtrOutput {
	return i.ToDashboardTableCellStylePtrOutputWithContext(context.Background())
}

func (i *dashboardTableCellStylePtrType) ToDashboardTableCellStylePtrOutputWithContext(ctx context.Context) DashboardTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableCellStylePtrOutput)
}

type DashboardTableCellStyleOutput struct{ *pulumi.OutputState }

func (DashboardTableCellStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableCellStyle)(nil)).Elem()
}

func (o DashboardTableCellStyleOutput) ToDashboardTableCellStyleOutput() DashboardTableCellStyleOutput {
	return o
}

func (o DashboardTableCellStyleOutput) ToDashboardTableCellStyleOutputWithContext(ctx context.Context) DashboardTableCellStyleOutput {
	return o
}

func (o DashboardTableCellStyleOutput) ToDashboardTableCellStylePtrOutput() DashboardTableCellStylePtrOutput {
	return o.ToDashboardTableCellStylePtrOutputWithContext(context.Background())
}

func (o DashboardTableCellStyleOutput) ToDashboardTableCellStylePtrOutputWithContext(ctx context.Context) DashboardTableCellStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableCellStyle) *DashboardTableCellStyle {
		return &v
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTableCellStyleOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o DashboardTableCellStyleOutput) Border() DashboardGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardGlobalTableBorderOptions { return v.Border }).(DashboardGlobalTableBorderOptionsPtrOutput)
}

func (o DashboardTableCellStyleOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardFontConfiguration { return v.FontConfiguration }).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardTableCellStyleOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *float64 { return v.Height }).(pulumi.Float64PtrOutput)
}

func (o DashboardTableCellStyleOutput) HorizontalTextAlignment() DashboardHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardHorizontalTextAlignment { return v.HorizontalTextAlignment }).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (o DashboardTableCellStyleOutput) TextWrap() DashboardTextWrapPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardTextWrap { return v.TextWrap }).(DashboardTextWrapPtrOutput)
}

func (o DashboardTableCellStyleOutput) VerticalTextAlignment() DashboardVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardVerticalTextAlignment { return v.VerticalTextAlignment }).(DashboardVerticalTextAlignmentPtrOutput)
}

func (o DashboardTableCellStyleOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTableCellStyle) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTableCellStylePtrOutput struct{ *pulumi.OutputState }

func (DashboardTableCellStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableCellStyle)(nil)).Elem()
}

func (o DashboardTableCellStylePtrOutput) ToDashboardTableCellStylePtrOutput() DashboardTableCellStylePtrOutput {
	return o
}

func (o DashboardTableCellStylePtrOutput) ToDashboardTableCellStylePtrOutputWithContext(ctx context.Context) DashboardTableCellStylePtrOutput {
	return o
}

func (o DashboardTableCellStylePtrOutput) Elem() DashboardTableCellStyleOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) DashboardTableCellStyle {
		if v != nil {
			return *v
		}
		var ret DashboardTableCellStyle
		return ret
	}).(DashboardTableCellStyleOutput)
}

func (o DashboardTableCellStylePtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) Border() DashboardGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardGlobalTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Border
	}).(DashboardGlobalTableBorderOptionsPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *float64 {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTableCellStylePtrOutput) HorizontalTextAlignment() DashboardHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(DashboardHorizontalTextAlignmentPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) TextWrap() DashboardTextWrapPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardTextWrap {
		if v == nil {
			return nil
		}
		return v.TextWrap
	}).(DashboardTextWrapPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) VerticalTextAlignment() DashboardVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardVerticalTextAlignment {
		if v == nil {
			return nil
		}
		return v.VerticalTextAlignment
	}).(DashboardVerticalTextAlignmentPtrOutput)
}

func (o DashboardTableCellStylePtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTableCellStyle) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTableConditionalFormatting struct {
	ConditionalFormattingOptions []DashboardTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// DashboardTableConditionalFormattingInput is an input type that accepts DashboardTableConditionalFormattingArgs and DashboardTableConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardTableConditionalFormattingInput` via:
//
//	DashboardTableConditionalFormattingArgs{...}
type DashboardTableConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardTableConditionalFormattingOutput() DashboardTableConditionalFormattingOutput
	ToDashboardTableConditionalFormattingOutputWithContext(context.Context) DashboardTableConditionalFormattingOutput
}

type DashboardTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions DashboardTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (DashboardTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConditionalFormatting)(nil)).Elem()
}

func (i DashboardTableConditionalFormattingArgs) ToDashboardTableConditionalFormattingOutput() DashboardTableConditionalFormattingOutput {
	return i.ToDashboardTableConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardTableConditionalFormattingArgs) ToDashboardTableConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConditionalFormattingOutput)
}

func (i DashboardTableConditionalFormattingArgs) ToDashboardTableConditionalFormattingPtrOutput() DashboardTableConditionalFormattingPtrOutput {
	return i.ToDashboardTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardTableConditionalFormattingArgs) ToDashboardTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConditionalFormattingOutput).ToDashboardTableConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardTableConditionalFormattingPtrInput is an input type that accepts DashboardTableConditionalFormattingArgs, DashboardTableConditionalFormattingPtr and DashboardTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardTableConditionalFormattingPtrInput` via:
//
//	        DashboardTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardTableConditionalFormattingPtrOutput() DashboardTableConditionalFormattingPtrOutput
	ToDashboardTableConditionalFormattingPtrOutputWithContext(context.Context) DashboardTableConditionalFormattingPtrOutput
}

type dashboardTableConditionalFormattingPtrType DashboardTableConditionalFormattingArgs

func DashboardTableConditionalFormattingPtr(v *DashboardTableConditionalFormattingArgs) DashboardTableConditionalFormattingPtrInput {
	return (*dashboardTableConditionalFormattingPtrType)(v)
}

func (*dashboardTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableConditionalFormatting)(nil)).Elem()
}

func (i *dashboardTableConditionalFormattingPtrType) ToDashboardTableConditionalFormattingPtrOutput() DashboardTableConditionalFormattingPtrOutput {
	return i.ToDashboardTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardTableConditionalFormattingPtrType) ToDashboardTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConditionalFormattingPtrOutput)
}

type DashboardTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableConditionalFormattingOutput) ToDashboardTableConditionalFormattingOutput() DashboardTableConditionalFormattingOutput {
	return o
}

func (o DashboardTableConditionalFormattingOutput) ToDashboardTableConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOutput {
	return o
}

func (o DashboardTableConditionalFormattingOutput) ToDashboardTableConditionalFormattingPtrOutput() DashboardTableConditionalFormattingPtrOutput {
	return o.ToDashboardTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardTableConditionalFormattingOutput) ToDashboardTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableConditionalFormatting) *DashboardTableConditionalFormatting {
		return &v
	}).(DashboardTableConditionalFormattingPtrOutput)
}

func (o DashboardTableConditionalFormattingOutput) ConditionalFormattingOptions() DashboardTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v DashboardTableConditionalFormatting) []DashboardTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(DashboardTableConditionalFormattingOptionArrayOutput)
}

type DashboardTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableConditionalFormattingPtrOutput) ToDashboardTableConditionalFormattingPtrOutput() DashboardTableConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableConditionalFormattingPtrOutput) ToDashboardTableConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableConditionalFormattingPtrOutput) Elem() DashboardTableConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardTableConditionalFormatting) DashboardTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardTableConditionalFormatting
		return ret
	}).(DashboardTableConditionalFormattingOutput)
}

func (o DashboardTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() DashboardTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *DashboardTableConditionalFormatting) []DashboardTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(DashboardTableConditionalFormattingOptionArrayOutput)
}

type DashboardTableConditionalFormattingOption struct {
	Cell *DashboardTableCellConditionalFormatting `pulumi:"cell"`
	Row  *DashboardTableRowConditionalFormatting  `pulumi:"row"`
}

// DashboardTableConditionalFormattingOptionInput is an input type that accepts DashboardTableConditionalFormattingOptionArgs and DashboardTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `DashboardTableConditionalFormattingOptionInput` via:
//
//	DashboardTableConditionalFormattingOptionArgs{...}
type DashboardTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToDashboardTableConditionalFormattingOptionOutput() DashboardTableConditionalFormattingOptionOutput
	ToDashboardTableConditionalFormattingOptionOutputWithContext(context.Context) DashboardTableConditionalFormattingOptionOutput
}

type DashboardTableConditionalFormattingOptionArgs struct {
	Cell DashboardTableCellConditionalFormattingPtrInput `pulumi:"cell"`
	Row  DashboardTableRowConditionalFormattingPtrInput  `pulumi:"row"`
}

func (DashboardTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardTableConditionalFormattingOptionArgs) ToDashboardTableConditionalFormattingOptionOutput() DashboardTableConditionalFormattingOptionOutput {
	return i.ToDashboardTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i DashboardTableConditionalFormattingOptionArgs) ToDashboardTableConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConditionalFormattingOptionOutput)
}

// DashboardTableConditionalFormattingOptionArrayInput is an input type that accepts DashboardTableConditionalFormattingOptionArray and DashboardTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `DashboardTableConditionalFormattingOptionArrayInput` via:
//
//	DashboardTableConditionalFormattingOptionArray{ DashboardTableConditionalFormattingOptionArgs{...} }
type DashboardTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToDashboardTableConditionalFormattingOptionArrayOutput() DashboardTableConditionalFormattingOptionArrayOutput
	ToDashboardTableConditionalFormattingOptionArrayOutputWithContext(context.Context) DashboardTableConditionalFormattingOptionArrayOutput
}

type DashboardTableConditionalFormattingOptionArray []DashboardTableConditionalFormattingOptionInput

func (DashboardTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableConditionalFormattingOption)(nil)).Elem()
}

func (i DashboardTableConditionalFormattingOptionArray) ToDashboardTableConditionalFormattingOptionArrayOutput() DashboardTableConditionalFormattingOptionArrayOutput {
	return i.ToDashboardTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i DashboardTableConditionalFormattingOptionArray) ToDashboardTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConditionalFormattingOptionArrayOutput)
}

type DashboardTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (DashboardTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardTableConditionalFormattingOptionOutput) ToDashboardTableConditionalFormattingOptionOutput() DashboardTableConditionalFormattingOptionOutput {
	return o
}

func (o DashboardTableConditionalFormattingOptionOutput) ToDashboardTableConditionalFormattingOptionOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOptionOutput {
	return o
}

func (o DashboardTableConditionalFormattingOptionOutput) Cell() DashboardTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardTableConditionalFormattingOption) *DashboardTableCellConditionalFormatting {
		return v.Cell
	}).(DashboardTableCellConditionalFormattingPtrOutput)
}

func (o DashboardTableConditionalFormattingOptionOutput) Row() DashboardTableRowConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardTableConditionalFormattingOption) *DashboardTableRowConditionalFormatting {
		return v.Row
	}).(DashboardTableRowConditionalFormattingPtrOutput)
}

type DashboardTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableConditionalFormattingOption)(nil)).Elem()
}

func (o DashboardTableConditionalFormattingOptionArrayOutput) ToDashboardTableConditionalFormattingOptionArrayOutput() DashboardTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardTableConditionalFormattingOptionArrayOutput) ToDashboardTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) DashboardTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o DashboardTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) DashboardTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTableConditionalFormattingOption {
		return vs[0].([]DashboardTableConditionalFormattingOption)[vs[1].(int)]
	}).(DashboardTableConditionalFormattingOptionOutput)
}

type DashboardTableConfiguration struct {
	FieldOptions              *DashboardTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells                *DashboardTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions    *DashboardTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration         *DashboardTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableInlineVisualizations []DashboardTableInlineVisualization   `pulumi:"tableInlineVisualizations"`
	TableOptions              *DashboardTableOptions                `pulumi:"tableOptions"`
	TotalOptions              *DashboardTotalOptions                `pulumi:"totalOptions"`
}

// DashboardTableConfigurationInput is an input type that accepts DashboardTableConfigurationArgs and DashboardTableConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableConfigurationInput` via:
//
//	DashboardTableConfigurationArgs{...}
type DashboardTableConfigurationInput interface {
	pulumi.Input

	ToDashboardTableConfigurationOutput() DashboardTableConfigurationOutput
	ToDashboardTableConfigurationOutputWithContext(context.Context) DashboardTableConfigurationOutput
}

type DashboardTableConfigurationArgs struct {
	FieldOptions              DashboardTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells                DashboardTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions    DashboardTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration         DashboardTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableInlineVisualizations DashboardTableInlineVisualizationArrayInput  `pulumi:"tableInlineVisualizations"`
	TableOptions              DashboardTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions              DashboardTotalOptionsPtrInput                `pulumi:"totalOptions"`
}

func (DashboardTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConfiguration)(nil)).Elem()
}

func (i DashboardTableConfigurationArgs) ToDashboardTableConfigurationOutput() DashboardTableConfigurationOutput {
	return i.ToDashboardTableConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableConfigurationArgs) ToDashboardTableConfigurationOutputWithContext(ctx context.Context) DashboardTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConfigurationOutput)
}

func (i DashboardTableConfigurationArgs) ToDashboardTableConfigurationPtrOutput() DashboardTableConfigurationPtrOutput {
	return i.ToDashboardTableConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableConfigurationArgs) ToDashboardTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConfigurationOutput).ToDashboardTableConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableConfigurationPtrInput is an input type that accepts DashboardTableConfigurationArgs, DashboardTableConfigurationPtr and DashboardTableConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableConfigurationPtrInput` via:
//
//	        DashboardTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableConfigurationPtrOutput() DashboardTableConfigurationPtrOutput
	ToDashboardTableConfigurationPtrOutputWithContext(context.Context) DashboardTableConfigurationPtrOutput
}

type dashboardTableConfigurationPtrType DashboardTableConfigurationArgs

func DashboardTableConfigurationPtr(v *DashboardTableConfigurationArgs) DashboardTableConfigurationPtrInput {
	return (*dashboardTableConfigurationPtrType)(v)
}

func (*dashboardTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableConfiguration)(nil)).Elem()
}

func (i *dashboardTableConfigurationPtrType) ToDashboardTableConfigurationPtrOutput() DashboardTableConfigurationPtrOutput {
	return i.ToDashboardTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableConfigurationPtrType) ToDashboardTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableConfigurationPtrOutput)
}

type DashboardTableConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableConfiguration)(nil)).Elem()
}

func (o DashboardTableConfigurationOutput) ToDashboardTableConfigurationOutput() DashboardTableConfigurationOutput {
	return o
}

func (o DashboardTableConfigurationOutput) ToDashboardTableConfigurationOutputWithContext(ctx context.Context) DashboardTableConfigurationOutput {
	return o
}

func (o DashboardTableConfigurationOutput) ToDashboardTableConfigurationPtrOutput() DashboardTableConfigurationPtrOutput {
	return o.ToDashboardTableConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableConfigurationOutput) ToDashboardTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableConfiguration) *DashboardTableConfiguration {
		return &v
	}).(DashboardTableConfigurationPtrOutput)
}

func (o DashboardTableConfigurationOutput) FieldOptions() DashboardTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTableFieldOptions { return v.FieldOptions }).(DashboardTableFieldOptionsPtrOutput)
}

func (o DashboardTableConfigurationOutput) FieldWells() DashboardTableFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTableFieldWells { return v.FieldWells }).(DashboardTableFieldWellsPtrOutput)
}

func (o DashboardTableConfigurationOutput) PaginatedReportOptions() DashboardTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(DashboardTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardTableConfigurationOutput) SortConfiguration() DashboardTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTableSortConfiguration { return v.SortConfiguration }).(DashboardTableSortConfigurationPtrOutput)
}

func (o DashboardTableConfigurationOutput) TableInlineVisualizations() DashboardTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) []DashboardTableInlineVisualization {
		return v.TableInlineVisualizations
	}).(DashboardTableInlineVisualizationArrayOutput)
}

func (o DashboardTableConfigurationOutput) TableOptions() DashboardTableOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTableOptions { return v.TableOptions }).(DashboardTableOptionsPtrOutput)
}

func (o DashboardTableConfigurationOutput) TotalOptions() DashboardTotalOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableConfiguration) *DashboardTotalOptions { return v.TotalOptions }).(DashboardTotalOptionsPtrOutput)
}

type DashboardTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableConfiguration)(nil)).Elem()
}

func (o DashboardTableConfigurationPtrOutput) ToDashboardTableConfigurationPtrOutput() DashboardTableConfigurationPtrOutput {
	return o
}

func (o DashboardTableConfigurationPtrOutput) ToDashboardTableConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableConfigurationPtrOutput {
	return o
}

func (o DashboardTableConfigurationPtrOutput) Elem() DashboardTableConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) DashboardTableConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableConfiguration
		return ret
	}).(DashboardTableConfigurationOutput)
}

func (o DashboardTableConfigurationPtrOutput) FieldOptions() DashboardTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(DashboardTableFieldOptionsPtrOutput)
}

func (o DashboardTableConfigurationPtrOutput) FieldWells() DashboardTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardTableFieldWellsPtrOutput)
}

func (o DashboardTableConfigurationPtrOutput) PaginatedReportOptions() DashboardTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(DashboardTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardTableConfigurationPtrOutput) SortConfiguration() DashboardTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardTableSortConfigurationPtrOutput)
}

func (o DashboardTableConfigurationPtrOutput) TableInlineVisualizations() DashboardTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) []DashboardTableInlineVisualization {
		if v == nil {
			return nil
		}
		return v.TableInlineVisualizations
	}).(DashboardTableInlineVisualizationArrayOutput)
}

func (o DashboardTableConfigurationPtrOutput) TableOptions() DashboardTableOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(DashboardTableOptionsPtrOutput)
}

func (o DashboardTableConfigurationPtrOutput) TotalOptions() DashboardTotalOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableConfiguration) *DashboardTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(DashboardTotalOptionsPtrOutput)
}

type DashboardTableFieldCustomIconContent struct {
	Icon *DashboardTableFieldIconSetType `pulumi:"icon"`
}

// DashboardTableFieldCustomIconContentInput is an input type that accepts DashboardTableFieldCustomIconContentArgs and DashboardTableFieldCustomIconContentOutput values.
// You can construct a concrete instance of `DashboardTableFieldCustomIconContentInput` via:
//
//	DashboardTableFieldCustomIconContentArgs{...}
type DashboardTableFieldCustomIconContentInput interface {
	pulumi.Input

	ToDashboardTableFieldCustomIconContentOutput() DashboardTableFieldCustomIconContentOutput
	ToDashboardTableFieldCustomIconContentOutputWithContext(context.Context) DashboardTableFieldCustomIconContentOutput
}

type DashboardTableFieldCustomIconContentArgs struct {
	Icon DashboardTableFieldIconSetTypePtrInput `pulumi:"icon"`
}

func (DashboardTableFieldCustomIconContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldCustomIconContent)(nil)).Elem()
}

func (i DashboardTableFieldCustomIconContentArgs) ToDashboardTableFieldCustomIconContentOutput() DashboardTableFieldCustomIconContentOutput {
	return i.ToDashboardTableFieldCustomIconContentOutputWithContext(context.Background())
}

func (i DashboardTableFieldCustomIconContentArgs) ToDashboardTableFieldCustomIconContentOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomIconContentOutput)
}

func (i DashboardTableFieldCustomIconContentArgs) ToDashboardTableFieldCustomIconContentPtrOutput() DashboardTableFieldCustomIconContentPtrOutput {
	return i.ToDashboardTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldCustomIconContentArgs) ToDashboardTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomIconContentOutput).ToDashboardTableFieldCustomIconContentPtrOutputWithContext(ctx)
}

// DashboardTableFieldCustomIconContentPtrInput is an input type that accepts DashboardTableFieldCustomIconContentArgs, DashboardTableFieldCustomIconContentPtr and DashboardTableFieldCustomIconContentPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldCustomIconContentPtrInput` via:
//
//	        DashboardTableFieldCustomIconContentArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldCustomIconContentPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldCustomIconContentPtrOutput() DashboardTableFieldCustomIconContentPtrOutput
	ToDashboardTableFieldCustomIconContentPtrOutputWithContext(context.Context) DashboardTableFieldCustomIconContentPtrOutput
}

type dashboardTableFieldCustomIconContentPtrType DashboardTableFieldCustomIconContentArgs

func DashboardTableFieldCustomIconContentPtr(v *DashboardTableFieldCustomIconContentArgs) DashboardTableFieldCustomIconContentPtrInput {
	return (*dashboardTableFieldCustomIconContentPtrType)(v)
}

func (*dashboardTableFieldCustomIconContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldCustomIconContent)(nil)).Elem()
}

func (i *dashboardTableFieldCustomIconContentPtrType) ToDashboardTableFieldCustomIconContentPtrOutput() DashboardTableFieldCustomIconContentPtrOutput {
	return i.ToDashboardTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldCustomIconContentPtrType) ToDashboardTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomIconContentPtrOutput)
}

type DashboardTableFieldCustomIconContentOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldCustomIconContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldCustomIconContent)(nil)).Elem()
}

func (o DashboardTableFieldCustomIconContentOutput) ToDashboardTableFieldCustomIconContentOutput() DashboardTableFieldCustomIconContentOutput {
	return o
}

func (o DashboardTableFieldCustomIconContentOutput) ToDashboardTableFieldCustomIconContentOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentOutput {
	return o
}

func (o DashboardTableFieldCustomIconContentOutput) ToDashboardTableFieldCustomIconContentPtrOutput() DashboardTableFieldCustomIconContentPtrOutput {
	return o.ToDashboardTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldCustomIconContentOutput) ToDashboardTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldCustomIconContent) *DashboardTableFieldCustomIconContent {
		return &v
	}).(DashboardTableFieldCustomIconContentPtrOutput)
}

func (o DashboardTableFieldCustomIconContentOutput) Icon() DashboardTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v DashboardTableFieldCustomIconContent) *DashboardTableFieldIconSetType { return v.Icon }).(DashboardTableFieldIconSetTypePtrOutput)
}

type DashboardTableFieldCustomIconContentPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldCustomIconContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldCustomIconContent)(nil)).Elem()
}

func (o DashboardTableFieldCustomIconContentPtrOutput) ToDashboardTableFieldCustomIconContentPtrOutput() DashboardTableFieldCustomIconContentPtrOutput {
	return o
}

func (o DashboardTableFieldCustomIconContentPtrOutput) ToDashboardTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomIconContentPtrOutput {
	return o
}

func (o DashboardTableFieldCustomIconContentPtrOutput) Elem() DashboardTableFieldCustomIconContentOutput {
	return o.ApplyT(func(v *DashboardTableFieldCustomIconContent) DashboardTableFieldCustomIconContent {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldCustomIconContent
		return ret
	}).(DashboardTableFieldCustomIconContentOutput)
}

func (o DashboardTableFieldCustomIconContentPtrOutput) Icon() DashboardTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldCustomIconContent) *DashboardTableFieldIconSetType {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(DashboardTableFieldIconSetTypePtrOutput)
}

type DashboardTableFieldCustomTextContent struct {
	FontConfiguration DashboardFontConfiguration `pulumi:"fontConfiguration"`
	Value             *string                    `pulumi:"value"`
}

// DashboardTableFieldCustomTextContentInput is an input type that accepts DashboardTableFieldCustomTextContentArgs and DashboardTableFieldCustomTextContentOutput values.
// You can construct a concrete instance of `DashboardTableFieldCustomTextContentInput` via:
//
//	DashboardTableFieldCustomTextContentArgs{...}
type DashboardTableFieldCustomTextContentInput interface {
	pulumi.Input

	ToDashboardTableFieldCustomTextContentOutput() DashboardTableFieldCustomTextContentOutput
	ToDashboardTableFieldCustomTextContentOutputWithContext(context.Context) DashboardTableFieldCustomTextContentOutput
}

type DashboardTableFieldCustomTextContentArgs struct {
	FontConfiguration DashboardFontConfigurationInput `pulumi:"fontConfiguration"`
	Value             pulumi.StringPtrInput           `pulumi:"value"`
}

func (DashboardTableFieldCustomTextContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldCustomTextContent)(nil)).Elem()
}

func (i DashboardTableFieldCustomTextContentArgs) ToDashboardTableFieldCustomTextContentOutput() DashboardTableFieldCustomTextContentOutput {
	return i.ToDashboardTableFieldCustomTextContentOutputWithContext(context.Background())
}

func (i DashboardTableFieldCustomTextContentArgs) ToDashboardTableFieldCustomTextContentOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomTextContentOutput)
}

func (i DashboardTableFieldCustomTextContentArgs) ToDashboardTableFieldCustomTextContentPtrOutput() DashboardTableFieldCustomTextContentPtrOutput {
	return i.ToDashboardTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldCustomTextContentArgs) ToDashboardTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomTextContentOutput).ToDashboardTableFieldCustomTextContentPtrOutputWithContext(ctx)
}

// DashboardTableFieldCustomTextContentPtrInput is an input type that accepts DashboardTableFieldCustomTextContentArgs, DashboardTableFieldCustomTextContentPtr and DashboardTableFieldCustomTextContentPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldCustomTextContentPtrInput` via:
//
//	        DashboardTableFieldCustomTextContentArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldCustomTextContentPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldCustomTextContentPtrOutput() DashboardTableFieldCustomTextContentPtrOutput
	ToDashboardTableFieldCustomTextContentPtrOutputWithContext(context.Context) DashboardTableFieldCustomTextContentPtrOutput
}

type dashboardTableFieldCustomTextContentPtrType DashboardTableFieldCustomTextContentArgs

func DashboardTableFieldCustomTextContentPtr(v *DashboardTableFieldCustomTextContentArgs) DashboardTableFieldCustomTextContentPtrInput {
	return (*dashboardTableFieldCustomTextContentPtrType)(v)
}

func (*dashboardTableFieldCustomTextContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldCustomTextContent)(nil)).Elem()
}

func (i *dashboardTableFieldCustomTextContentPtrType) ToDashboardTableFieldCustomTextContentPtrOutput() DashboardTableFieldCustomTextContentPtrOutput {
	return i.ToDashboardTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldCustomTextContentPtrType) ToDashboardTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldCustomTextContentPtrOutput)
}

type DashboardTableFieldCustomTextContentOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldCustomTextContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldCustomTextContent)(nil)).Elem()
}

func (o DashboardTableFieldCustomTextContentOutput) ToDashboardTableFieldCustomTextContentOutput() DashboardTableFieldCustomTextContentOutput {
	return o
}

func (o DashboardTableFieldCustomTextContentOutput) ToDashboardTableFieldCustomTextContentOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentOutput {
	return o
}

func (o DashboardTableFieldCustomTextContentOutput) ToDashboardTableFieldCustomTextContentPtrOutput() DashboardTableFieldCustomTextContentPtrOutput {
	return o.ToDashboardTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldCustomTextContentOutput) ToDashboardTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldCustomTextContent) *DashboardTableFieldCustomTextContent {
		return &v
	}).(DashboardTableFieldCustomTextContentPtrOutput)
}

func (o DashboardTableFieldCustomTextContentOutput) FontConfiguration() DashboardFontConfigurationOutput {
	return o.ApplyT(func(v DashboardTableFieldCustomTextContent) DashboardFontConfiguration { return v.FontConfiguration }).(DashboardFontConfigurationOutput)
}

func (o DashboardTableFieldCustomTextContentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldCustomTextContent) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DashboardTableFieldCustomTextContentPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldCustomTextContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldCustomTextContent)(nil)).Elem()
}

func (o DashboardTableFieldCustomTextContentPtrOutput) ToDashboardTableFieldCustomTextContentPtrOutput() DashboardTableFieldCustomTextContentPtrOutput {
	return o
}

func (o DashboardTableFieldCustomTextContentPtrOutput) ToDashboardTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) DashboardTableFieldCustomTextContentPtrOutput {
	return o
}

func (o DashboardTableFieldCustomTextContentPtrOutput) Elem() DashboardTableFieldCustomTextContentOutput {
	return o.ApplyT(func(v *DashboardTableFieldCustomTextContent) DashboardTableFieldCustomTextContent {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldCustomTextContent
		return ret
	}).(DashboardTableFieldCustomTextContentOutput)
}

func (o DashboardTableFieldCustomTextContentPtrOutput) FontConfiguration() DashboardFontConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldCustomTextContent) *DashboardFontConfiguration {
		if v == nil {
			return nil
		}
		return &v.FontConfiguration
	}).(DashboardFontConfigurationPtrOutput)
}

func (o DashboardTableFieldCustomTextContentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldCustomTextContent) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type DashboardTableFieldImageConfiguration struct {
	SizingOptions *DashboardTableCellImageSizingConfiguration `pulumi:"sizingOptions"`
}

// DashboardTableFieldImageConfigurationInput is an input type that accepts DashboardTableFieldImageConfigurationArgs and DashboardTableFieldImageConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableFieldImageConfigurationInput` via:
//
//	DashboardTableFieldImageConfigurationArgs{...}
type DashboardTableFieldImageConfigurationInput interface {
	pulumi.Input

	ToDashboardTableFieldImageConfigurationOutput() DashboardTableFieldImageConfigurationOutput
	ToDashboardTableFieldImageConfigurationOutputWithContext(context.Context) DashboardTableFieldImageConfigurationOutput
}

type DashboardTableFieldImageConfigurationArgs struct {
	SizingOptions DashboardTableCellImageSizingConfigurationPtrInput `pulumi:"sizingOptions"`
}

func (DashboardTableFieldImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldImageConfiguration)(nil)).Elem()
}

func (i DashboardTableFieldImageConfigurationArgs) ToDashboardTableFieldImageConfigurationOutput() DashboardTableFieldImageConfigurationOutput {
	return i.ToDashboardTableFieldImageConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableFieldImageConfigurationArgs) ToDashboardTableFieldImageConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldImageConfigurationOutput)
}

func (i DashboardTableFieldImageConfigurationArgs) ToDashboardTableFieldImageConfigurationPtrOutput() DashboardTableFieldImageConfigurationPtrOutput {
	return i.ToDashboardTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldImageConfigurationArgs) ToDashboardTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldImageConfigurationOutput).ToDashboardTableFieldImageConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableFieldImageConfigurationPtrInput is an input type that accepts DashboardTableFieldImageConfigurationArgs, DashboardTableFieldImageConfigurationPtr and DashboardTableFieldImageConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldImageConfigurationPtrInput` via:
//
//	        DashboardTableFieldImageConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldImageConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldImageConfigurationPtrOutput() DashboardTableFieldImageConfigurationPtrOutput
	ToDashboardTableFieldImageConfigurationPtrOutputWithContext(context.Context) DashboardTableFieldImageConfigurationPtrOutput
}

type dashboardTableFieldImageConfigurationPtrType DashboardTableFieldImageConfigurationArgs

func DashboardTableFieldImageConfigurationPtr(v *DashboardTableFieldImageConfigurationArgs) DashboardTableFieldImageConfigurationPtrInput {
	return (*dashboardTableFieldImageConfigurationPtrType)(v)
}

func (*dashboardTableFieldImageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldImageConfiguration)(nil)).Elem()
}

func (i *dashboardTableFieldImageConfigurationPtrType) ToDashboardTableFieldImageConfigurationPtrOutput() DashboardTableFieldImageConfigurationPtrOutput {
	return i.ToDashboardTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldImageConfigurationPtrType) ToDashboardTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldImageConfigurationPtrOutput)
}

type DashboardTableFieldImageConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldImageConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldImageConfigurationOutput) ToDashboardTableFieldImageConfigurationOutput() DashboardTableFieldImageConfigurationOutput {
	return o
}

func (o DashboardTableFieldImageConfigurationOutput) ToDashboardTableFieldImageConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationOutput {
	return o
}

func (o DashboardTableFieldImageConfigurationOutput) ToDashboardTableFieldImageConfigurationPtrOutput() DashboardTableFieldImageConfigurationPtrOutput {
	return o.ToDashboardTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldImageConfigurationOutput) ToDashboardTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldImageConfiguration) *DashboardTableFieldImageConfiguration {
		return &v
	}).(DashboardTableFieldImageConfigurationPtrOutput)
}

func (o DashboardTableFieldImageConfigurationOutput) SizingOptions() DashboardTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldImageConfiguration) *DashboardTableCellImageSizingConfiguration {
		return v.SizingOptions
	}).(DashboardTableCellImageSizingConfigurationPtrOutput)
}

type DashboardTableFieldImageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldImageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldImageConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldImageConfigurationPtrOutput) ToDashboardTableFieldImageConfigurationPtrOutput() DashboardTableFieldImageConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldImageConfigurationPtrOutput) ToDashboardTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldImageConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldImageConfigurationPtrOutput) Elem() DashboardTableFieldImageConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableFieldImageConfiguration) DashboardTableFieldImageConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldImageConfiguration
		return ret
	}).(DashboardTableFieldImageConfigurationOutput)
}

func (o DashboardTableFieldImageConfigurationPtrOutput) SizingOptions() DashboardTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldImageConfiguration) *DashboardTableCellImageSizingConfiguration {
		if v == nil {
			return nil
		}
		return v.SizingOptions
	}).(DashboardTableCellImageSizingConfigurationPtrOutput)
}

type DashboardTableFieldLinkConfiguration struct {
	Content DashboardTableFieldLinkContentConfiguration `pulumi:"content"`
	Target  DashboardURLTargetConfiguration             `pulumi:"target"`
}

// DashboardTableFieldLinkConfigurationInput is an input type that accepts DashboardTableFieldLinkConfigurationArgs and DashboardTableFieldLinkConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableFieldLinkConfigurationInput` via:
//
//	DashboardTableFieldLinkConfigurationArgs{...}
type DashboardTableFieldLinkConfigurationInput interface {
	pulumi.Input

	ToDashboardTableFieldLinkConfigurationOutput() DashboardTableFieldLinkConfigurationOutput
	ToDashboardTableFieldLinkConfigurationOutputWithContext(context.Context) DashboardTableFieldLinkConfigurationOutput
}

type DashboardTableFieldLinkConfigurationArgs struct {
	Content DashboardTableFieldLinkContentConfigurationInput `pulumi:"content"`
	Target  DashboardURLTargetConfigurationInput             `pulumi:"target"`
}

func (DashboardTableFieldLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldLinkConfiguration)(nil)).Elem()
}

func (i DashboardTableFieldLinkConfigurationArgs) ToDashboardTableFieldLinkConfigurationOutput() DashboardTableFieldLinkConfigurationOutput {
	return i.ToDashboardTableFieldLinkConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableFieldLinkConfigurationArgs) ToDashboardTableFieldLinkConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkConfigurationOutput)
}

func (i DashboardTableFieldLinkConfigurationArgs) ToDashboardTableFieldLinkConfigurationPtrOutput() DashboardTableFieldLinkConfigurationPtrOutput {
	return i.ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldLinkConfigurationArgs) ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkConfigurationOutput).ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableFieldLinkConfigurationPtrInput is an input type that accepts DashboardTableFieldLinkConfigurationArgs, DashboardTableFieldLinkConfigurationPtr and DashboardTableFieldLinkConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldLinkConfigurationPtrInput` via:
//
//	        DashboardTableFieldLinkConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldLinkConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldLinkConfigurationPtrOutput() DashboardTableFieldLinkConfigurationPtrOutput
	ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(context.Context) DashboardTableFieldLinkConfigurationPtrOutput
}

type dashboardTableFieldLinkConfigurationPtrType DashboardTableFieldLinkConfigurationArgs

func DashboardTableFieldLinkConfigurationPtr(v *DashboardTableFieldLinkConfigurationArgs) DashboardTableFieldLinkConfigurationPtrInput {
	return (*dashboardTableFieldLinkConfigurationPtrType)(v)
}

func (*dashboardTableFieldLinkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldLinkConfiguration)(nil)).Elem()
}

func (i *dashboardTableFieldLinkConfigurationPtrType) ToDashboardTableFieldLinkConfigurationPtrOutput() DashboardTableFieldLinkConfigurationPtrOutput {
	return i.ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldLinkConfigurationPtrType) ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkConfigurationPtrOutput)
}

type DashboardTableFieldLinkConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldLinkConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldLinkConfigurationOutput) ToDashboardTableFieldLinkConfigurationOutput() DashboardTableFieldLinkConfigurationOutput {
	return o
}

func (o DashboardTableFieldLinkConfigurationOutput) ToDashboardTableFieldLinkConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationOutput {
	return o
}

func (o DashboardTableFieldLinkConfigurationOutput) ToDashboardTableFieldLinkConfigurationPtrOutput() DashboardTableFieldLinkConfigurationPtrOutput {
	return o.ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldLinkConfigurationOutput) ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldLinkConfiguration) *DashboardTableFieldLinkConfiguration {
		return &v
	}).(DashboardTableFieldLinkConfigurationPtrOutput)
}

func (o DashboardTableFieldLinkConfigurationOutput) Content() DashboardTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v DashboardTableFieldLinkConfiguration) DashboardTableFieldLinkContentConfiguration {
		return v.Content
	}).(DashboardTableFieldLinkContentConfigurationOutput)
}

func (o DashboardTableFieldLinkConfigurationOutput) Target() DashboardURLTargetConfigurationOutput {
	return o.ApplyT(func(v DashboardTableFieldLinkConfiguration) DashboardURLTargetConfiguration { return v.Target }).(DashboardURLTargetConfigurationOutput)
}

type DashboardTableFieldLinkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldLinkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldLinkConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldLinkConfigurationPtrOutput) ToDashboardTableFieldLinkConfigurationPtrOutput() DashboardTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldLinkConfigurationPtrOutput) ToDashboardTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldLinkConfigurationPtrOutput) Elem() DashboardTableFieldLinkConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkConfiguration) DashboardTableFieldLinkConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldLinkConfiguration
		return ret
	}).(DashboardTableFieldLinkConfigurationOutput)
}

func (o DashboardTableFieldLinkConfigurationPtrOutput) Content() DashboardTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkConfiguration) *DashboardTableFieldLinkContentConfiguration {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(DashboardTableFieldLinkContentConfigurationPtrOutput)
}

func (o DashboardTableFieldLinkConfigurationPtrOutput) Target() DashboardURLTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkConfiguration) *DashboardURLTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(DashboardURLTargetConfigurationPtrOutput)
}

type DashboardTableFieldLinkContentConfiguration struct {
	CustomIconContent *DashboardTableFieldCustomIconContent `pulumi:"customIconContent"`
	CustomTextContent *DashboardTableFieldCustomTextContent `pulumi:"customTextContent"`
}

// DashboardTableFieldLinkContentConfigurationInput is an input type that accepts DashboardTableFieldLinkContentConfigurationArgs and DashboardTableFieldLinkContentConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableFieldLinkContentConfigurationInput` via:
//
//	DashboardTableFieldLinkContentConfigurationArgs{...}
type DashboardTableFieldLinkContentConfigurationInput interface {
	pulumi.Input

	ToDashboardTableFieldLinkContentConfigurationOutput() DashboardTableFieldLinkContentConfigurationOutput
	ToDashboardTableFieldLinkContentConfigurationOutputWithContext(context.Context) DashboardTableFieldLinkContentConfigurationOutput
}

type DashboardTableFieldLinkContentConfigurationArgs struct {
	CustomIconContent DashboardTableFieldCustomIconContentPtrInput `pulumi:"customIconContent"`
	CustomTextContent DashboardTableFieldCustomTextContentPtrInput `pulumi:"customTextContent"`
}

func (DashboardTableFieldLinkContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i DashboardTableFieldLinkContentConfigurationArgs) ToDashboardTableFieldLinkContentConfigurationOutput() DashboardTableFieldLinkContentConfigurationOutput {
	return i.ToDashboardTableFieldLinkContentConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableFieldLinkContentConfigurationArgs) ToDashboardTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkContentConfigurationOutput)
}

func (i DashboardTableFieldLinkContentConfigurationArgs) ToDashboardTableFieldLinkContentConfigurationPtrOutput() DashboardTableFieldLinkContentConfigurationPtrOutput {
	return i.ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldLinkContentConfigurationArgs) ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkContentConfigurationOutput).ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableFieldLinkContentConfigurationPtrInput is an input type that accepts DashboardTableFieldLinkContentConfigurationArgs, DashboardTableFieldLinkContentConfigurationPtr and DashboardTableFieldLinkContentConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldLinkContentConfigurationPtrInput` via:
//
//	        DashboardTableFieldLinkContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldLinkContentConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldLinkContentConfigurationPtrOutput() DashboardTableFieldLinkContentConfigurationPtrOutput
	ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(context.Context) DashboardTableFieldLinkContentConfigurationPtrOutput
}

type dashboardTableFieldLinkContentConfigurationPtrType DashboardTableFieldLinkContentConfigurationArgs

func DashboardTableFieldLinkContentConfigurationPtr(v *DashboardTableFieldLinkContentConfigurationArgs) DashboardTableFieldLinkContentConfigurationPtrInput {
	return (*dashboardTableFieldLinkContentConfigurationPtrType)(v)
}

func (*dashboardTableFieldLinkContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i *dashboardTableFieldLinkContentConfigurationPtrType) ToDashboardTableFieldLinkContentConfigurationPtrOutput() DashboardTableFieldLinkContentConfigurationPtrOutput {
	return i.ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldLinkContentConfigurationPtrType) ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldLinkContentConfigurationPtrOutput)
}

type DashboardTableFieldLinkContentConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldLinkContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldLinkContentConfigurationOutput) ToDashboardTableFieldLinkContentConfigurationOutput() DashboardTableFieldLinkContentConfigurationOutput {
	return o
}

func (o DashboardTableFieldLinkContentConfigurationOutput) ToDashboardTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationOutput {
	return o
}

func (o DashboardTableFieldLinkContentConfigurationOutput) ToDashboardTableFieldLinkContentConfigurationPtrOutput() DashboardTableFieldLinkContentConfigurationPtrOutput {
	return o.ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldLinkContentConfigurationOutput) ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldLinkContentConfiguration) *DashboardTableFieldLinkContentConfiguration {
		return &v
	}).(DashboardTableFieldLinkContentConfigurationPtrOutput)
}

func (o DashboardTableFieldLinkContentConfigurationOutput) CustomIconContent() DashboardTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldLinkContentConfiguration) *DashboardTableFieldCustomIconContent {
		return v.CustomIconContent
	}).(DashboardTableFieldCustomIconContentPtrOutput)
}

func (o DashboardTableFieldLinkContentConfigurationOutput) CustomTextContent() DashboardTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldLinkContentConfiguration) *DashboardTableFieldCustomTextContent {
		return v.CustomTextContent
	}).(DashboardTableFieldCustomTextContentPtrOutput)
}

type DashboardTableFieldLinkContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldLinkContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldLinkContentConfigurationPtrOutput) ToDashboardTableFieldLinkContentConfigurationPtrOutput() DashboardTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldLinkContentConfigurationPtrOutput) ToDashboardTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldLinkContentConfigurationPtrOutput) Elem() DashboardTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkContentConfiguration) DashboardTableFieldLinkContentConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldLinkContentConfiguration
		return ret
	}).(DashboardTableFieldLinkContentConfigurationOutput)
}

func (o DashboardTableFieldLinkContentConfigurationPtrOutput) CustomIconContent() DashboardTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkContentConfiguration) *DashboardTableFieldCustomIconContent {
		if v == nil {
			return nil
		}
		return v.CustomIconContent
	}).(DashboardTableFieldCustomIconContentPtrOutput)
}

func (o DashboardTableFieldLinkContentConfigurationPtrOutput) CustomTextContent() DashboardTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldLinkContentConfiguration) *DashboardTableFieldCustomTextContent {
		if v == nil {
			return nil
		}
		return v.CustomTextContent
	}).(DashboardTableFieldCustomTextContentPtrOutput)
}

type DashboardTableFieldOption struct {
	CustomLabel *string                              `pulumi:"customLabel"`
	FieldId     string                               `pulumi:"fieldId"`
	URLStyling  *DashboardTableFieldURLConfiguration `pulumi:"uRLStyling"`
	Visibility  *DashboardVisibility                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// DashboardTableFieldOptionInput is an input type that accepts DashboardTableFieldOptionArgs and DashboardTableFieldOptionOutput values.
// You can construct a concrete instance of `DashboardTableFieldOptionInput` via:
//
//	DashboardTableFieldOptionArgs{...}
type DashboardTableFieldOptionInput interface {
	pulumi.Input

	ToDashboardTableFieldOptionOutput() DashboardTableFieldOptionOutput
	ToDashboardTableFieldOptionOutputWithContext(context.Context) DashboardTableFieldOptionOutput
}

type DashboardTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput                       `pulumi:"customLabel"`
	FieldId     pulumi.StringInput                          `pulumi:"fieldId"`
	URLStyling  DashboardTableFieldURLConfigurationPtrInput `pulumi:"uRLStyling"`
	Visibility  DashboardVisibilityPtrInput                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (DashboardTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldOption)(nil)).Elem()
}

func (i DashboardTableFieldOptionArgs) ToDashboardTableFieldOptionOutput() DashboardTableFieldOptionOutput {
	return i.ToDashboardTableFieldOptionOutputWithContext(context.Background())
}

func (i DashboardTableFieldOptionArgs) ToDashboardTableFieldOptionOutputWithContext(ctx context.Context) DashboardTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldOptionOutput)
}

// DashboardTableFieldOptionArrayInput is an input type that accepts DashboardTableFieldOptionArray and DashboardTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `DashboardTableFieldOptionArrayInput` via:
//
//	DashboardTableFieldOptionArray{ DashboardTableFieldOptionArgs{...} }
type DashboardTableFieldOptionArrayInput interface {
	pulumi.Input

	ToDashboardTableFieldOptionArrayOutput() DashboardTableFieldOptionArrayOutput
	ToDashboardTableFieldOptionArrayOutputWithContext(context.Context) DashboardTableFieldOptionArrayOutput
}

type DashboardTableFieldOptionArray []DashboardTableFieldOptionInput

func (DashboardTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableFieldOption)(nil)).Elem()
}

func (i DashboardTableFieldOptionArray) ToDashboardTableFieldOptionArrayOutput() DashboardTableFieldOptionArrayOutput {
	return i.ToDashboardTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i DashboardTableFieldOptionArray) ToDashboardTableFieldOptionArrayOutputWithContext(ctx context.Context) DashboardTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldOptionArrayOutput)
}

type DashboardTableFieldOptionOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldOption)(nil)).Elem()
}

func (o DashboardTableFieldOptionOutput) ToDashboardTableFieldOptionOutput() DashboardTableFieldOptionOutput {
	return o
}

func (o DashboardTableFieldOptionOutput) ToDashboardTableFieldOptionOutputWithContext(ctx context.Context) DashboardTableFieldOptionOutput {
	return o
}

func (o DashboardTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardTableFieldOptionOutput) URLStyling() DashboardTableFieldURLConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldOption) *DashboardTableFieldURLConfiguration { return v.URLStyling }).(DashboardTableFieldURLConfigurationPtrOutput)
}

func (o DashboardTableFieldOptionOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldOption) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o DashboardTableFieldOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type DashboardTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableFieldOption)(nil)).Elem()
}

func (o DashboardTableFieldOptionArrayOutput) ToDashboardTableFieldOptionArrayOutput() DashboardTableFieldOptionArrayOutput {
	return o
}

func (o DashboardTableFieldOptionArrayOutput) ToDashboardTableFieldOptionArrayOutputWithContext(ctx context.Context) DashboardTableFieldOptionArrayOutput {
	return o
}

func (o DashboardTableFieldOptionArrayOutput) Index(i pulumi.IntInput) DashboardTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTableFieldOption {
		return vs[0].([]DashboardTableFieldOption)[vs[1].(int)]
	}).(DashboardTableFieldOptionOutput)
}

type DashboardTableFieldOptions struct {
	Order                []string                    `pulumi:"order"`
	SelectedFieldOptions []DashboardTableFieldOption `pulumi:"selectedFieldOptions"`
}

// DashboardTableFieldOptionsInput is an input type that accepts DashboardTableFieldOptionsArgs and DashboardTableFieldOptionsOutput values.
// You can construct a concrete instance of `DashboardTableFieldOptionsInput` via:
//
//	DashboardTableFieldOptionsArgs{...}
type DashboardTableFieldOptionsInput interface {
	pulumi.Input

	ToDashboardTableFieldOptionsOutput() DashboardTableFieldOptionsOutput
	ToDashboardTableFieldOptionsOutputWithContext(context.Context) DashboardTableFieldOptionsOutput
}

type DashboardTableFieldOptionsArgs struct {
	Order                pulumi.StringArrayInput             `pulumi:"order"`
	SelectedFieldOptions DashboardTableFieldOptionArrayInput `pulumi:"selectedFieldOptions"`
}

func (DashboardTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldOptions)(nil)).Elem()
}

func (i DashboardTableFieldOptionsArgs) ToDashboardTableFieldOptionsOutput() DashboardTableFieldOptionsOutput {
	return i.ToDashboardTableFieldOptionsOutputWithContext(context.Background())
}

func (i DashboardTableFieldOptionsArgs) ToDashboardTableFieldOptionsOutputWithContext(ctx context.Context) DashboardTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldOptionsOutput)
}

func (i DashboardTableFieldOptionsArgs) ToDashboardTableFieldOptionsPtrOutput() DashboardTableFieldOptionsPtrOutput {
	return i.ToDashboardTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldOptionsArgs) ToDashboardTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldOptionsOutput).ToDashboardTableFieldOptionsPtrOutputWithContext(ctx)
}

// DashboardTableFieldOptionsPtrInput is an input type that accepts DashboardTableFieldOptionsArgs, DashboardTableFieldOptionsPtr and DashboardTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldOptionsPtrInput` via:
//
//	        DashboardTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldOptionsPtrOutput() DashboardTableFieldOptionsPtrOutput
	ToDashboardTableFieldOptionsPtrOutputWithContext(context.Context) DashboardTableFieldOptionsPtrOutput
}

type dashboardTableFieldOptionsPtrType DashboardTableFieldOptionsArgs

func DashboardTableFieldOptionsPtr(v *DashboardTableFieldOptionsArgs) DashboardTableFieldOptionsPtrInput {
	return (*dashboardTableFieldOptionsPtrType)(v)
}

func (*dashboardTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldOptions)(nil)).Elem()
}

func (i *dashboardTableFieldOptionsPtrType) ToDashboardTableFieldOptionsPtrOutput() DashboardTableFieldOptionsPtrOutput {
	return i.ToDashboardTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldOptionsPtrType) ToDashboardTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldOptionsPtrOutput)
}

type DashboardTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldOptions)(nil)).Elem()
}

func (o DashboardTableFieldOptionsOutput) ToDashboardTableFieldOptionsOutput() DashboardTableFieldOptionsOutput {
	return o
}

func (o DashboardTableFieldOptionsOutput) ToDashboardTableFieldOptionsOutputWithContext(ctx context.Context) DashboardTableFieldOptionsOutput {
	return o
}

func (o DashboardTableFieldOptionsOutput) ToDashboardTableFieldOptionsPtrOutput() DashboardTableFieldOptionsPtrOutput {
	return o.ToDashboardTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldOptionsOutput) ToDashboardTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldOptions) *DashboardTableFieldOptions {
		return &v
	}).(DashboardTableFieldOptionsPtrOutput)
}

func (o DashboardTableFieldOptionsOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardTableFieldOptions) []string { return v.Order }).(pulumi.StringArrayOutput)
}

func (o DashboardTableFieldOptionsOutput) SelectedFieldOptions() DashboardTableFieldOptionArrayOutput {
	return o.ApplyT(func(v DashboardTableFieldOptions) []DashboardTableFieldOption { return v.SelectedFieldOptions }).(DashboardTableFieldOptionArrayOutput)
}

type DashboardTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldOptions)(nil)).Elem()
}

func (o DashboardTableFieldOptionsPtrOutput) ToDashboardTableFieldOptionsPtrOutput() DashboardTableFieldOptionsPtrOutput {
	return o
}

func (o DashboardTableFieldOptionsPtrOutput) ToDashboardTableFieldOptionsPtrOutputWithContext(ctx context.Context) DashboardTableFieldOptionsPtrOutput {
	return o
}

func (o DashboardTableFieldOptionsPtrOutput) Elem() DashboardTableFieldOptionsOutput {
	return o.ApplyT(func(v *DashboardTableFieldOptions) DashboardTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldOptions
		return ret
	}).(DashboardTableFieldOptionsOutput)
}

func (o DashboardTableFieldOptionsPtrOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardTableFieldOptions) []string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringArrayOutput)
}

func (o DashboardTableFieldOptionsPtrOutput) SelectedFieldOptions() DashboardTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *DashboardTableFieldOptions) []DashboardTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(DashboardTableFieldOptionArrayOutput)
}

type DashboardTableFieldURLConfiguration struct {
	ImageConfiguration *DashboardTableFieldImageConfiguration `pulumi:"imageConfiguration"`
	LinkConfiguration  *DashboardTableFieldLinkConfiguration  `pulumi:"linkConfiguration"`
}

// DashboardTableFieldURLConfigurationInput is an input type that accepts DashboardTableFieldURLConfigurationArgs and DashboardTableFieldURLConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableFieldURLConfigurationInput` via:
//
//	DashboardTableFieldURLConfigurationArgs{...}
type DashboardTableFieldURLConfigurationInput interface {
	pulumi.Input

	ToDashboardTableFieldURLConfigurationOutput() DashboardTableFieldURLConfigurationOutput
	ToDashboardTableFieldURLConfigurationOutputWithContext(context.Context) DashboardTableFieldURLConfigurationOutput
}

type DashboardTableFieldURLConfigurationArgs struct {
	ImageConfiguration DashboardTableFieldImageConfigurationPtrInput `pulumi:"imageConfiguration"`
	LinkConfiguration  DashboardTableFieldLinkConfigurationPtrInput  `pulumi:"linkConfiguration"`
}

func (DashboardTableFieldURLConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldURLConfiguration)(nil)).Elem()
}

func (i DashboardTableFieldURLConfigurationArgs) ToDashboardTableFieldURLConfigurationOutput() DashboardTableFieldURLConfigurationOutput {
	return i.ToDashboardTableFieldURLConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableFieldURLConfigurationArgs) ToDashboardTableFieldURLConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldURLConfigurationOutput)
}

func (i DashboardTableFieldURLConfigurationArgs) ToDashboardTableFieldURLConfigurationPtrOutput() DashboardTableFieldURLConfigurationPtrOutput {
	return i.ToDashboardTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldURLConfigurationArgs) ToDashboardTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldURLConfigurationOutput).ToDashboardTableFieldURLConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableFieldURLConfigurationPtrInput is an input type that accepts DashboardTableFieldURLConfigurationArgs, DashboardTableFieldURLConfigurationPtr and DashboardTableFieldURLConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldURLConfigurationPtrInput` via:
//
//	        DashboardTableFieldURLConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldURLConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldURLConfigurationPtrOutput() DashboardTableFieldURLConfigurationPtrOutput
	ToDashboardTableFieldURLConfigurationPtrOutputWithContext(context.Context) DashboardTableFieldURLConfigurationPtrOutput
}

type dashboardTableFieldURLConfigurationPtrType DashboardTableFieldURLConfigurationArgs

func DashboardTableFieldURLConfigurationPtr(v *DashboardTableFieldURLConfigurationArgs) DashboardTableFieldURLConfigurationPtrInput {
	return (*dashboardTableFieldURLConfigurationPtrType)(v)
}

func (*dashboardTableFieldURLConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldURLConfiguration)(nil)).Elem()
}

func (i *dashboardTableFieldURLConfigurationPtrType) ToDashboardTableFieldURLConfigurationPtrOutput() DashboardTableFieldURLConfigurationPtrOutput {
	return i.ToDashboardTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldURLConfigurationPtrType) ToDashboardTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldURLConfigurationPtrOutput)
}

type DashboardTableFieldURLConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldURLConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldURLConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldURLConfigurationOutput) ToDashboardTableFieldURLConfigurationOutput() DashboardTableFieldURLConfigurationOutput {
	return o
}

func (o DashboardTableFieldURLConfigurationOutput) ToDashboardTableFieldURLConfigurationOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationOutput {
	return o
}

func (o DashboardTableFieldURLConfigurationOutput) ToDashboardTableFieldURLConfigurationPtrOutput() DashboardTableFieldURLConfigurationPtrOutput {
	return o.ToDashboardTableFieldURLConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldURLConfigurationOutput) ToDashboardTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldURLConfiguration) *DashboardTableFieldURLConfiguration {
		return &v
	}).(DashboardTableFieldURLConfigurationPtrOutput)
}

func (o DashboardTableFieldURLConfigurationOutput) ImageConfiguration() DashboardTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldURLConfiguration) *DashboardTableFieldImageConfiguration {
		return v.ImageConfiguration
	}).(DashboardTableFieldImageConfigurationPtrOutput)
}

func (o DashboardTableFieldURLConfigurationOutput) LinkConfiguration() DashboardTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldURLConfiguration) *DashboardTableFieldLinkConfiguration {
		return v.LinkConfiguration
	}).(DashboardTableFieldLinkConfigurationPtrOutput)
}

type DashboardTableFieldURLConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldURLConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldURLConfiguration)(nil)).Elem()
}

func (o DashboardTableFieldURLConfigurationPtrOutput) ToDashboardTableFieldURLConfigurationPtrOutput() DashboardTableFieldURLConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldURLConfigurationPtrOutput) ToDashboardTableFieldURLConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableFieldURLConfigurationPtrOutput {
	return o
}

func (o DashboardTableFieldURLConfigurationPtrOutput) Elem() DashboardTableFieldURLConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableFieldURLConfiguration) DashboardTableFieldURLConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldURLConfiguration
		return ret
	}).(DashboardTableFieldURLConfigurationOutput)
}

func (o DashboardTableFieldURLConfigurationPtrOutput) ImageConfiguration() DashboardTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldURLConfiguration) *DashboardTableFieldImageConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageConfiguration
	}).(DashboardTableFieldImageConfigurationPtrOutput)
}

func (o DashboardTableFieldURLConfigurationPtrOutput) LinkConfiguration() DashboardTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldURLConfiguration) *DashboardTableFieldLinkConfiguration {
		if v == nil {
			return nil
		}
		return v.LinkConfiguration
	}).(DashboardTableFieldLinkConfigurationPtrOutput)
}

type DashboardTableFieldWells struct {
	TableAggregatedFieldWells   *DashboardTableAggregatedFieldWells   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells *DashboardTableUnaggregatedFieldWells `pulumi:"tableUnaggregatedFieldWells"`
}

// DashboardTableFieldWellsInput is an input type that accepts DashboardTableFieldWellsArgs and DashboardTableFieldWellsOutput values.
// You can construct a concrete instance of `DashboardTableFieldWellsInput` via:
//
//	DashboardTableFieldWellsArgs{...}
type DashboardTableFieldWellsInput interface {
	pulumi.Input

	ToDashboardTableFieldWellsOutput() DashboardTableFieldWellsOutput
	ToDashboardTableFieldWellsOutputWithContext(context.Context) DashboardTableFieldWellsOutput
}

type DashboardTableFieldWellsArgs struct {
	TableAggregatedFieldWells   DashboardTableAggregatedFieldWellsPtrInput   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells DashboardTableUnaggregatedFieldWellsPtrInput `pulumi:"tableUnaggregatedFieldWells"`
}

func (DashboardTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldWells)(nil)).Elem()
}

func (i DashboardTableFieldWellsArgs) ToDashboardTableFieldWellsOutput() DashboardTableFieldWellsOutput {
	return i.ToDashboardTableFieldWellsOutputWithContext(context.Background())
}

func (i DashboardTableFieldWellsArgs) ToDashboardTableFieldWellsOutputWithContext(ctx context.Context) DashboardTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldWellsOutput)
}

func (i DashboardTableFieldWellsArgs) ToDashboardTableFieldWellsPtrOutput() DashboardTableFieldWellsPtrOutput {
	return i.ToDashboardTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardTableFieldWellsArgs) ToDashboardTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldWellsOutput).ToDashboardTableFieldWellsPtrOutputWithContext(ctx)
}

// DashboardTableFieldWellsPtrInput is an input type that accepts DashboardTableFieldWellsArgs, DashboardTableFieldWellsPtr and DashboardTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardTableFieldWellsPtrInput` via:
//
//	        DashboardTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardTableFieldWellsPtrOutput() DashboardTableFieldWellsPtrOutput
	ToDashboardTableFieldWellsPtrOutputWithContext(context.Context) DashboardTableFieldWellsPtrOutput
}

type dashboardTableFieldWellsPtrType DashboardTableFieldWellsArgs

func DashboardTableFieldWellsPtr(v *DashboardTableFieldWellsArgs) DashboardTableFieldWellsPtrInput {
	return (*dashboardTableFieldWellsPtrType)(v)
}

func (*dashboardTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldWells)(nil)).Elem()
}

func (i *dashboardTableFieldWellsPtrType) ToDashboardTableFieldWellsPtrOutput() DashboardTableFieldWellsPtrOutput {
	return i.ToDashboardTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableFieldWellsPtrType) ToDashboardTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableFieldWellsPtrOutput)
}

type DashboardTableFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableFieldWells)(nil)).Elem()
}

func (o DashboardTableFieldWellsOutput) ToDashboardTableFieldWellsOutput() DashboardTableFieldWellsOutput {
	return o
}

func (o DashboardTableFieldWellsOutput) ToDashboardTableFieldWellsOutputWithContext(ctx context.Context) DashboardTableFieldWellsOutput {
	return o
}

func (o DashboardTableFieldWellsOutput) ToDashboardTableFieldWellsPtrOutput() DashboardTableFieldWellsPtrOutput {
	return o.ToDashboardTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardTableFieldWellsOutput) ToDashboardTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableFieldWells) *DashboardTableFieldWells {
		return &v
	}).(DashboardTableFieldWellsPtrOutput)
}

func (o DashboardTableFieldWellsOutput) TableAggregatedFieldWells() DashboardTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldWells) *DashboardTableAggregatedFieldWells {
		return v.TableAggregatedFieldWells
	}).(DashboardTableAggregatedFieldWellsPtrOutput)
}

func (o DashboardTableFieldWellsOutput) TableUnaggregatedFieldWells() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardTableFieldWells) *DashboardTableUnaggregatedFieldWells {
		return v.TableUnaggregatedFieldWells
	}).(DashboardTableUnaggregatedFieldWellsPtrOutput)
}

type DashboardTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableFieldWells)(nil)).Elem()
}

func (o DashboardTableFieldWellsPtrOutput) ToDashboardTableFieldWellsPtrOutput() DashboardTableFieldWellsPtrOutput {
	return o
}

func (o DashboardTableFieldWellsPtrOutput) ToDashboardTableFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableFieldWellsPtrOutput {
	return o
}

func (o DashboardTableFieldWellsPtrOutput) Elem() DashboardTableFieldWellsOutput {
	return o.ApplyT(func(v *DashboardTableFieldWells) DashboardTableFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardTableFieldWells
		return ret
	}).(DashboardTableFieldWellsOutput)
}

func (o DashboardTableFieldWellsPtrOutput) TableAggregatedFieldWells() DashboardTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldWells) *DashboardTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableAggregatedFieldWells
	}).(DashboardTableAggregatedFieldWellsPtrOutput)
}

func (o DashboardTableFieldWellsPtrOutput) TableUnaggregatedFieldWells() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardTableFieldWells) *DashboardTableUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableUnaggregatedFieldWells
	}).(DashboardTableUnaggregatedFieldWellsPtrOutput)
}

type DashboardTableInlineVisualization struct {
	DataBars *DashboardDataBarsOptions `pulumi:"dataBars"`
}

// DashboardTableInlineVisualizationInput is an input type that accepts DashboardTableInlineVisualizationArgs and DashboardTableInlineVisualizationOutput values.
// You can construct a concrete instance of `DashboardTableInlineVisualizationInput` via:
//
//	DashboardTableInlineVisualizationArgs{...}
type DashboardTableInlineVisualizationInput interface {
	pulumi.Input

	ToDashboardTableInlineVisualizationOutput() DashboardTableInlineVisualizationOutput
	ToDashboardTableInlineVisualizationOutputWithContext(context.Context) DashboardTableInlineVisualizationOutput
}

type DashboardTableInlineVisualizationArgs struct {
	DataBars DashboardDataBarsOptionsPtrInput `pulumi:"dataBars"`
}

func (DashboardTableInlineVisualizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableInlineVisualization)(nil)).Elem()
}

func (i DashboardTableInlineVisualizationArgs) ToDashboardTableInlineVisualizationOutput() DashboardTableInlineVisualizationOutput {
	return i.ToDashboardTableInlineVisualizationOutputWithContext(context.Background())
}

func (i DashboardTableInlineVisualizationArgs) ToDashboardTableInlineVisualizationOutputWithContext(ctx context.Context) DashboardTableInlineVisualizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableInlineVisualizationOutput)
}

// DashboardTableInlineVisualizationArrayInput is an input type that accepts DashboardTableInlineVisualizationArray and DashboardTableInlineVisualizationArrayOutput values.
// You can construct a concrete instance of `DashboardTableInlineVisualizationArrayInput` via:
//
//	DashboardTableInlineVisualizationArray{ DashboardTableInlineVisualizationArgs{...} }
type DashboardTableInlineVisualizationArrayInput interface {
	pulumi.Input

	ToDashboardTableInlineVisualizationArrayOutput() DashboardTableInlineVisualizationArrayOutput
	ToDashboardTableInlineVisualizationArrayOutputWithContext(context.Context) DashboardTableInlineVisualizationArrayOutput
}

type DashboardTableInlineVisualizationArray []DashboardTableInlineVisualizationInput

func (DashboardTableInlineVisualizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableInlineVisualization)(nil)).Elem()
}

func (i DashboardTableInlineVisualizationArray) ToDashboardTableInlineVisualizationArrayOutput() DashboardTableInlineVisualizationArrayOutput {
	return i.ToDashboardTableInlineVisualizationArrayOutputWithContext(context.Background())
}

func (i DashboardTableInlineVisualizationArray) ToDashboardTableInlineVisualizationArrayOutputWithContext(ctx context.Context) DashboardTableInlineVisualizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableInlineVisualizationArrayOutput)
}

type DashboardTableInlineVisualizationOutput struct{ *pulumi.OutputState }

func (DashboardTableInlineVisualizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableInlineVisualization)(nil)).Elem()
}

func (o DashboardTableInlineVisualizationOutput) ToDashboardTableInlineVisualizationOutput() DashboardTableInlineVisualizationOutput {
	return o
}

func (o DashboardTableInlineVisualizationOutput) ToDashboardTableInlineVisualizationOutputWithContext(ctx context.Context) DashboardTableInlineVisualizationOutput {
	return o
}

func (o DashboardTableInlineVisualizationOutput) DataBars() DashboardDataBarsOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableInlineVisualization) *DashboardDataBarsOptions { return v.DataBars }).(DashboardDataBarsOptionsPtrOutput)
}

type DashboardTableInlineVisualizationArrayOutput struct{ *pulumi.OutputState }

func (DashboardTableInlineVisualizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTableInlineVisualization)(nil)).Elem()
}

func (o DashboardTableInlineVisualizationArrayOutput) ToDashboardTableInlineVisualizationArrayOutput() DashboardTableInlineVisualizationArrayOutput {
	return o
}

func (o DashboardTableInlineVisualizationArrayOutput) ToDashboardTableInlineVisualizationArrayOutputWithContext(ctx context.Context) DashboardTableInlineVisualizationArrayOutput {
	return o
}

func (o DashboardTableInlineVisualizationArrayOutput) Index(i pulumi.IntInput) DashboardTableInlineVisualizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTableInlineVisualization {
		return vs[0].([]DashboardTableInlineVisualization)[vs[1].(int)]
	}).(DashboardTableInlineVisualizationOutput)
}

type DashboardTableOptions struct {
	CellStyle                *DashboardTableCellStyle           `pulumi:"cellStyle"`
	HeaderStyle              *DashboardTableCellStyle           `pulumi:"headerStyle"`
	Orientation              *DashboardTableOrientation         `pulumi:"orientation"`
	RowAlternateColorOptions *DashboardRowAlternateColorOptions `pulumi:"rowAlternateColorOptions"`
}

// DashboardTableOptionsInput is an input type that accepts DashboardTableOptionsArgs and DashboardTableOptionsOutput values.
// You can construct a concrete instance of `DashboardTableOptionsInput` via:
//
//	DashboardTableOptionsArgs{...}
type DashboardTableOptionsInput interface {
	pulumi.Input

	ToDashboardTableOptionsOutput() DashboardTableOptionsOutput
	ToDashboardTableOptionsOutputWithContext(context.Context) DashboardTableOptionsOutput
}

type DashboardTableOptionsArgs struct {
	CellStyle                DashboardTableCellStylePtrInput           `pulumi:"cellStyle"`
	HeaderStyle              DashboardTableCellStylePtrInput           `pulumi:"headerStyle"`
	Orientation              DashboardTableOrientationPtrInput         `pulumi:"orientation"`
	RowAlternateColorOptions DashboardRowAlternateColorOptionsPtrInput `pulumi:"rowAlternateColorOptions"`
}

func (DashboardTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableOptions)(nil)).Elem()
}

func (i DashboardTableOptionsArgs) ToDashboardTableOptionsOutput() DashboardTableOptionsOutput {
	return i.ToDashboardTableOptionsOutputWithContext(context.Background())
}

func (i DashboardTableOptionsArgs) ToDashboardTableOptionsOutputWithContext(ctx context.Context) DashboardTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableOptionsOutput)
}

func (i DashboardTableOptionsArgs) ToDashboardTableOptionsPtrOutput() DashboardTableOptionsPtrOutput {
	return i.ToDashboardTableOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTableOptionsArgs) ToDashboardTableOptionsPtrOutputWithContext(ctx context.Context) DashboardTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableOptionsOutput).ToDashboardTableOptionsPtrOutputWithContext(ctx)
}

// DashboardTableOptionsPtrInput is an input type that accepts DashboardTableOptionsArgs, DashboardTableOptionsPtr and DashboardTableOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTableOptionsPtrInput` via:
//
//	        DashboardTableOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTableOptionsPtrOutput() DashboardTableOptionsPtrOutput
	ToDashboardTableOptionsPtrOutputWithContext(context.Context) DashboardTableOptionsPtrOutput
}

type dashboardTableOptionsPtrType DashboardTableOptionsArgs

func DashboardTableOptionsPtr(v *DashboardTableOptionsArgs) DashboardTableOptionsPtrInput {
	return (*dashboardTableOptionsPtrType)(v)
}

func (*dashboardTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableOptions)(nil)).Elem()
}

func (i *dashboardTableOptionsPtrType) ToDashboardTableOptionsPtrOutput() DashboardTableOptionsPtrOutput {
	return i.ToDashboardTableOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableOptionsPtrType) ToDashboardTableOptionsPtrOutputWithContext(ctx context.Context) DashboardTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableOptionsPtrOutput)
}

type DashboardTableOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableOptions)(nil)).Elem()
}

func (o DashboardTableOptionsOutput) ToDashboardTableOptionsOutput() DashboardTableOptionsOutput {
	return o
}

func (o DashboardTableOptionsOutput) ToDashboardTableOptionsOutputWithContext(ctx context.Context) DashboardTableOptionsOutput {
	return o
}

func (o DashboardTableOptionsOutput) ToDashboardTableOptionsPtrOutput() DashboardTableOptionsPtrOutput {
	return o.ToDashboardTableOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTableOptionsOutput) ToDashboardTableOptionsPtrOutputWithContext(ctx context.Context) DashboardTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableOptions) *DashboardTableOptions {
		return &v
	}).(DashboardTableOptionsPtrOutput)
}

func (o DashboardTableOptionsOutput) CellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardTableOptions) *DashboardTableCellStyle { return v.CellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTableOptionsOutput) HeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardTableOptions) *DashboardTableCellStyle { return v.HeaderStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTableOptionsOutput) Orientation() DashboardTableOrientationPtrOutput {
	return o.ApplyT(func(v DashboardTableOptions) *DashboardTableOrientation { return v.Orientation }).(DashboardTableOrientationPtrOutput)
}

func (o DashboardTableOptionsOutput) RowAlternateColorOptions() DashboardRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableOptions) *DashboardRowAlternateColorOptions { return v.RowAlternateColorOptions }).(DashboardRowAlternateColorOptionsPtrOutput)
}

type DashboardTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableOptions)(nil)).Elem()
}

func (o DashboardTableOptionsPtrOutput) ToDashboardTableOptionsPtrOutput() DashboardTableOptionsPtrOutput {
	return o
}

func (o DashboardTableOptionsPtrOutput) ToDashboardTableOptionsPtrOutputWithContext(ctx context.Context) DashboardTableOptionsPtrOutput {
	return o
}

func (o DashboardTableOptionsPtrOutput) Elem() DashboardTableOptionsOutput {
	return o.ApplyT(func(v *DashboardTableOptions) DashboardTableOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTableOptions
		return ret
	}).(DashboardTableOptionsOutput)
}

func (o DashboardTableOptionsPtrOutput) CellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTableOptionsPtrOutput) HeaderStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardTableOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.HeaderStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTableOptionsPtrOutput) Orientation() DashboardTableOrientationPtrOutput {
	return o.ApplyT(func(v *DashboardTableOptions) *DashboardTableOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(DashboardTableOrientationPtrOutput)
}

func (o DashboardTableOptionsPtrOutput) RowAlternateColorOptions() DashboardRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableOptions) *DashboardRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(DashboardRowAlternateColorOptionsPtrOutput)
}

type DashboardTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *DashboardVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *DashboardVisibility `pulumi:"verticalOverflowVisibility"`
}

// DashboardTablePaginatedReportOptionsInput is an input type that accepts DashboardTablePaginatedReportOptionsArgs and DashboardTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `DashboardTablePaginatedReportOptionsInput` via:
//
//	DashboardTablePaginatedReportOptionsArgs{...}
type DashboardTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToDashboardTablePaginatedReportOptionsOutput() DashboardTablePaginatedReportOptionsOutput
	ToDashboardTablePaginatedReportOptionsOutputWithContext(context.Context) DashboardTablePaginatedReportOptionsOutput
}

type DashboardTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility DashboardVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     DashboardVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (DashboardTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTablePaginatedReportOptions)(nil)).Elem()
}

func (i DashboardTablePaginatedReportOptionsArgs) ToDashboardTablePaginatedReportOptionsOutput() DashboardTablePaginatedReportOptionsOutput {
	return i.ToDashboardTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i DashboardTablePaginatedReportOptionsArgs) ToDashboardTablePaginatedReportOptionsOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTablePaginatedReportOptionsOutput)
}

func (i DashboardTablePaginatedReportOptionsArgs) ToDashboardTablePaginatedReportOptionsPtrOutput() DashboardTablePaginatedReportOptionsPtrOutput {
	return i.ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTablePaginatedReportOptionsArgs) ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTablePaginatedReportOptionsOutput).ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// DashboardTablePaginatedReportOptionsPtrInput is an input type that accepts DashboardTablePaginatedReportOptionsArgs, DashboardTablePaginatedReportOptionsPtr and DashboardTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTablePaginatedReportOptionsPtrInput` via:
//
//	        DashboardTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTablePaginatedReportOptionsPtrOutput() DashboardTablePaginatedReportOptionsPtrOutput
	ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(context.Context) DashboardTablePaginatedReportOptionsPtrOutput
}

type dashboardTablePaginatedReportOptionsPtrType DashboardTablePaginatedReportOptionsArgs

func DashboardTablePaginatedReportOptionsPtr(v *DashboardTablePaginatedReportOptionsArgs) DashboardTablePaginatedReportOptionsPtrInput {
	return (*dashboardTablePaginatedReportOptionsPtrType)(v)
}

func (*dashboardTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTablePaginatedReportOptions)(nil)).Elem()
}

func (i *dashboardTablePaginatedReportOptionsPtrType) ToDashboardTablePaginatedReportOptionsPtrOutput() DashboardTablePaginatedReportOptionsPtrOutput {
	return i.ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTablePaginatedReportOptionsPtrType) ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTablePaginatedReportOptionsPtrOutput)
}

type DashboardTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTablePaginatedReportOptions)(nil)).Elem()
}

func (o DashboardTablePaginatedReportOptionsOutput) ToDashboardTablePaginatedReportOptionsOutput() DashboardTablePaginatedReportOptionsOutput {
	return o
}

func (o DashboardTablePaginatedReportOptionsOutput) ToDashboardTablePaginatedReportOptionsOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsOutput {
	return o
}

func (o DashboardTablePaginatedReportOptionsOutput) ToDashboardTablePaginatedReportOptionsPtrOutput() DashboardTablePaginatedReportOptionsPtrOutput {
	return o.ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTablePaginatedReportOptionsOutput) ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTablePaginatedReportOptions) *DashboardTablePaginatedReportOptions {
		return &v
	}).(DashboardTablePaginatedReportOptionsPtrOutput)
}

func (o DashboardTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTablePaginatedReportOptions) *DashboardVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTablePaginatedReportOptions) *DashboardVisibility { return v.VerticalOverflowVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTablePaginatedReportOptions)(nil)).Elem()
}

func (o DashboardTablePaginatedReportOptionsPtrOutput) ToDashboardTablePaginatedReportOptionsPtrOutput() DashboardTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o DashboardTablePaginatedReportOptionsPtrOutput) ToDashboardTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) DashboardTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o DashboardTablePaginatedReportOptionsPtrOutput) Elem() DashboardTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *DashboardTablePaginatedReportOptions) DashboardTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTablePaginatedReportOptions
		return ret
	}).(DashboardTablePaginatedReportOptionsOutput)
}

func (o DashboardTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTablePaginatedReportOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(DashboardVisibilityPtrOutput)
}

func (o DashboardTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTablePaginatedReportOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTableRowConditionalFormatting struct {
	BackgroundColor *DashboardConditionalFormattingColor `pulumi:"backgroundColor"`
	TextColor       *DashboardConditionalFormattingColor `pulumi:"textColor"`
}

// DashboardTableRowConditionalFormattingInput is an input type that accepts DashboardTableRowConditionalFormattingArgs and DashboardTableRowConditionalFormattingOutput values.
// You can construct a concrete instance of `DashboardTableRowConditionalFormattingInput` via:
//
//	DashboardTableRowConditionalFormattingArgs{...}
type DashboardTableRowConditionalFormattingInput interface {
	pulumi.Input

	ToDashboardTableRowConditionalFormattingOutput() DashboardTableRowConditionalFormattingOutput
	ToDashboardTableRowConditionalFormattingOutputWithContext(context.Context) DashboardTableRowConditionalFormattingOutput
}

type DashboardTableRowConditionalFormattingArgs struct {
	BackgroundColor DashboardConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	TextColor       DashboardConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (DashboardTableRowConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableRowConditionalFormatting)(nil)).Elem()
}

func (i DashboardTableRowConditionalFormattingArgs) ToDashboardTableRowConditionalFormattingOutput() DashboardTableRowConditionalFormattingOutput {
	return i.ToDashboardTableRowConditionalFormattingOutputWithContext(context.Background())
}

func (i DashboardTableRowConditionalFormattingArgs) ToDashboardTableRowConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableRowConditionalFormattingOutput)
}

func (i DashboardTableRowConditionalFormattingArgs) ToDashboardTableRowConditionalFormattingPtrOutput() DashboardTableRowConditionalFormattingPtrOutput {
	return i.ToDashboardTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i DashboardTableRowConditionalFormattingArgs) ToDashboardTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableRowConditionalFormattingOutput).ToDashboardTableRowConditionalFormattingPtrOutputWithContext(ctx)
}

// DashboardTableRowConditionalFormattingPtrInput is an input type that accepts DashboardTableRowConditionalFormattingArgs, DashboardTableRowConditionalFormattingPtr and DashboardTableRowConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `DashboardTableRowConditionalFormattingPtrInput` via:
//
//	        DashboardTableRowConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type DashboardTableRowConditionalFormattingPtrInput interface {
	pulumi.Input

	ToDashboardTableRowConditionalFormattingPtrOutput() DashboardTableRowConditionalFormattingPtrOutput
	ToDashboardTableRowConditionalFormattingPtrOutputWithContext(context.Context) DashboardTableRowConditionalFormattingPtrOutput
}

type dashboardTableRowConditionalFormattingPtrType DashboardTableRowConditionalFormattingArgs

func DashboardTableRowConditionalFormattingPtr(v *DashboardTableRowConditionalFormattingArgs) DashboardTableRowConditionalFormattingPtrInput {
	return (*dashboardTableRowConditionalFormattingPtrType)(v)
}

func (*dashboardTableRowConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableRowConditionalFormatting)(nil)).Elem()
}

func (i *dashboardTableRowConditionalFormattingPtrType) ToDashboardTableRowConditionalFormattingPtrOutput() DashboardTableRowConditionalFormattingPtrOutput {
	return i.ToDashboardTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *dashboardTableRowConditionalFormattingPtrType) ToDashboardTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableRowConditionalFormattingPtrOutput)
}

type DashboardTableRowConditionalFormattingOutput struct{ *pulumi.OutputState }

func (DashboardTableRowConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableRowConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableRowConditionalFormattingOutput) ToDashboardTableRowConditionalFormattingOutput() DashboardTableRowConditionalFormattingOutput {
	return o
}

func (o DashboardTableRowConditionalFormattingOutput) ToDashboardTableRowConditionalFormattingOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingOutput {
	return o
}

func (o DashboardTableRowConditionalFormattingOutput) ToDashboardTableRowConditionalFormattingPtrOutput() DashboardTableRowConditionalFormattingPtrOutput {
	return o.ToDashboardTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o DashboardTableRowConditionalFormattingOutput) ToDashboardTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableRowConditionalFormatting) *DashboardTableRowConditionalFormatting {
		return &v
	}).(DashboardTableRowConditionalFormattingPtrOutput)
}

func (o DashboardTableRowConditionalFormattingOutput) BackgroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardTableRowConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.BackgroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

func (o DashboardTableRowConditionalFormattingOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardTableRowConditionalFormatting) *DashboardConditionalFormattingColor {
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardTableRowConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableRowConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableRowConditionalFormatting)(nil)).Elem()
}

func (o DashboardTableRowConditionalFormattingPtrOutput) ToDashboardTableRowConditionalFormattingPtrOutput() DashboardTableRowConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableRowConditionalFormattingPtrOutput) ToDashboardTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) DashboardTableRowConditionalFormattingPtrOutput {
	return o
}

func (o DashboardTableRowConditionalFormattingPtrOutput) Elem() DashboardTableRowConditionalFormattingOutput {
	return o.ApplyT(func(v *DashboardTableRowConditionalFormatting) DashboardTableRowConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret DashboardTableRowConditionalFormatting
		return ret
	}).(DashboardTableRowConditionalFormattingOutput)
}

func (o DashboardTableRowConditionalFormattingPtrOutput) BackgroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardTableRowConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

func (o DashboardTableRowConditionalFormattingPtrOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardTableRowConditionalFormatting) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardTableSideBorderOptions struct {
	Bottom          *DashboardTableBorderOptions `pulumi:"bottom"`
	InnerHorizontal *DashboardTableBorderOptions `pulumi:"innerHorizontal"`
	InnerVertical   *DashboardTableBorderOptions `pulumi:"innerVertical"`
	Left            *DashboardTableBorderOptions `pulumi:"left"`
	Right           *DashboardTableBorderOptions `pulumi:"right"`
	Top             *DashboardTableBorderOptions `pulumi:"top"`
}

// DashboardTableSideBorderOptionsInput is an input type that accepts DashboardTableSideBorderOptionsArgs and DashboardTableSideBorderOptionsOutput values.
// You can construct a concrete instance of `DashboardTableSideBorderOptionsInput` via:
//
//	DashboardTableSideBorderOptionsArgs{...}
type DashboardTableSideBorderOptionsInput interface {
	pulumi.Input

	ToDashboardTableSideBorderOptionsOutput() DashboardTableSideBorderOptionsOutput
	ToDashboardTableSideBorderOptionsOutputWithContext(context.Context) DashboardTableSideBorderOptionsOutput
}

type DashboardTableSideBorderOptionsArgs struct {
	Bottom          DashboardTableBorderOptionsPtrInput `pulumi:"bottom"`
	InnerHorizontal DashboardTableBorderOptionsPtrInput `pulumi:"innerHorizontal"`
	InnerVertical   DashboardTableBorderOptionsPtrInput `pulumi:"innerVertical"`
	Left            DashboardTableBorderOptionsPtrInput `pulumi:"left"`
	Right           DashboardTableBorderOptionsPtrInput `pulumi:"right"`
	Top             DashboardTableBorderOptionsPtrInput `pulumi:"top"`
}

func (DashboardTableSideBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableSideBorderOptions)(nil)).Elem()
}

func (i DashboardTableSideBorderOptionsArgs) ToDashboardTableSideBorderOptionsOutput() DashboardTableSideBorderOptionsOutput {
	return i.ToDashboardTableSideBorderOptionsOutputWithContext(context.Background())
}

func (i DashboardTableSideBorderOptionsArgs) ToDashboardTableSideBorderOptionsOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSideBorderOptionsOutput)
}

func (i DashboardTableSideBorderOptionsArgs) ToDashboardTableSideBorderOptionsPtrOutput() DashboardTableSideBorderOptionsPtrOutput {
	return i.ToDashboardTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTableSideBorderOptionsArgs) ToDashboardTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSideBorderOptionsOutput).ToDashboardTableSideBorderOptionsPtrOutputWithContext(ctx)
}

// DashboardTableSideBorderOptionsPtrInput is an input type that accepts DashboardTableSideBorderOptionsArgs, DashboardTableSideBorderOptionsPtr and DashboardTableSideBorderOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTableSideBorderOptionsPtrInput` via:
//
//	        DashboardTableSideBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableSideBorderOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTableSideBorderOptionsPtrOutput() DashboardTableSideBorderOptionsPtrOutput
	ToDashboardTableSideBorderOptionsPtrOutputWithContext(context.Context) DashboardTableSideBorderOptionsPtrOutput
}

type dashboardTableSideBorderOptionsPtrType DashboardTableSideBorderOptionsArgs

func DashboardTableSideBorderOptionsPtr(v *DashboardTableSideBorderOptionsArgs) DashboardTableSideBorderOptionsPtrInput {
	return (*dashboardTableSideBorderOptionsPtrType)(v)
}

func (*dashboardTableSideBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableSideBorderOptions)(nil)).Elem()
}

func (i *dashboardTableSideBorderOptionsPtrType) ToDashboardTableSideBorderOptionsPtrOutput() DashboardTableSideBorderOptionsPtrOutput {
	return i.ToDashboardTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableSideBorderOptionsPtrType) ToDashboardTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSideBorderOptionsPtrOutput)
}

type DashboardTableSideBorderOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTableSideBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableSideBorderOptions)(nil)).Elem()
}

func (o DashboardTableSideBorderOptionsOutput) ToDashboardTableSideBorderOptionsOutput() DashboardTableSideBorderOptionsOutput {
	return o
}

func (o DashboardTableSideBorderOptionsOutput) ToDashboardTableSideBorderOptionsOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsOutput {
	return o
}

func (o DashboardTableSideBorderOptionsOutput) ToDashboardTableSideBorderOptionsPtrOutput() DashboardTableSideBorderOptionsPtrOutput {
	return o.ToDashboardTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTableSideBorderOptionsOutput) ToDashboardTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableSideBorderOptions) *DashboardTableSideBorderOptions {
		return &v
	}).(DashboardTableSideBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) Bottom() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.Bottom }).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) InnerHorizontal() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.InnerHorizontal }).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) InnerVertical() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.InnerVertical }).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) Left() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.Left }).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) Right() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.Right }).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsOutput) Top() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableSideBorderOptions) *DashboardTableBorderOptions { return v.Top }).(DashboardTableBorderOptionsPtrOutput)
}

type DashboardTableSideBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableSideBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableSideBorderOptions)(nil)).Elem()
}

func (o DashboardTableSideBorderOptionsPtrOutput) ToDashboardTableSideBorderOptionsPtrOutput() DashboardTableSideBorderOptionsPtrOutput {
	return o
}

func (o DashboardTableSideBorderOptionsPtrOutput) ToDashboardTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) DashboardTableSideBorderOptionsPtrOutput {
	return o
}

func (o DashboardTableSideBorderOptionsPtrOutput) Elem() DashboardTableSideBorderOptionsOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) DashboardTableSideBorderOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTableSideBorderOptions
		return ret
	}).(DashboardTableSideBorderOptionsOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) Bottom() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) InnerHorizontal() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerHorizontal
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) InnerVertical() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerVertical
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) Left() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Left
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) Right() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Right
	}).(DashboardTableBorderOptionsPtrOutput)
}

func (o DashboardTableSideBorderOptionsPtrOutput) Top() DashboardTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableSideBorderOptions) *DashboardTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Top
	}).(DashboardTableBorderOptionsPtrOutput)
}

type DashboardTableSortConfiguration struct {
	PaginationConfiguration *DashboardPaginationConfiguration `pulumi:"paginationConfiguration"`
	RowSort                 []DashboardFieldSortOptions       `pulumi:"rowSort"`
}

// DashboardTableSortConfigurationInput is an input type that accepts DashboardTableSortConfigurationArgs and DashboardTableSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardTableSortConfigurationInput` via:
//
//	DashboardTableSortConfigurationArgs{...}
type DashboardTableSortConfigurationInput interface {
	pulumi.Input

	ToDashboardTableSortConfigurationOutput() DashboardTableSortConfigurationOutput
	ToDashboardTableSortConfigurationOutputWithContext(context.Context) DashboardTableSortConfigurationOutput
}

type DashboardTableSortConfigurationArgs struct {
	PaginationConfiguration DashboardPaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
	RowSort                 DashboardFieldSortOptionsArrayInput      `pulumi:"rowSort"`
}

func (DashboardTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableSortConfiguration)(nil)).Elem()
}

func (i DashboardTableSortConfigurationArgs) ToDashboardTableSortConfigurationOutput() DashboardTableSortConfigurationOutput {
	return i.ToDashboardTableSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardTableSortConfigurationArgs) ToDashboardTableSortConfigurationOutputWithContext(ctx context.Context) DashboardTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSortConfigurationOutput)
}

func (i DashboardTableSortConfigurationArgs) ToDashboardTableSortConfigurationPtrOutput() DashboardTableSortConfigurationPtrOutput {
	return i.ToDashboardTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTableSortConfigurationArgs) ToDashboardTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSortConfigurationOutput).ToDashboardTableSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardTableSortConfigurationPtrInput is an input type that accepts DashboardTableSortConfigurationArgs, DashboardTableSortConfigurationPtr and DashboardTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTableSortConfigurationPtrInput` via:
//
//	        DashboardTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTableSortConfigurationPtrOutput() DashboardTableSortConfigurationPtrOutput
	ToDashboardTableSortConfigurationPtrOutputWithContext(context.Context) DashboardTableSortConfigurationPtrOutput
}

type dashboardTableSortConfigurationPtrType DashboardTableSortConfigurationArgs

func DashboardTableSortConfigurationPtr(v *DashboardTableSortConfigurationArgs) DashboardTableSortConfigurationPtrInput {
	return (*dashboardTableSortConfigurationPtrType)(v)
}

func (*dashboardTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableSortConfiguration)(nil)).Elem()
}

func (i *dashboardTableSortConfigurationPtrType) ToDashboardTableSortConfigurationPtrOutput() DashboardTableSortConfigurationPtrOutput {
	return i.ToDashboardTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTableSortConfigurationPtrType) ToDashboardTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableSortConfigurationPtrOutput)
}

type DashboardTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableSortConfiguration)(nil)).Elem()
}

func (o DashboardTableSortConfigurationOutput) ToDashboardTableSortConfigurationOutput() DashboardTableSortConfigurationOutput {
	return o
}

func (o DashboardTableSortConfigurationOutput) ToDashboardTableSortConfigurationOutputWithContext(ctx context.Context) DashboardTableSortConfigurationOutput {
	return o
}

func (o DashboardTableSortConfigurationOutput) ToDashboardTableSortConfigurationPtrOutput() DashboardTableSortConfigurationPtrOutput {
	return o.ToDashboardTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTableSortConfigurationOutput) ToDashboardTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableSortConfiguration) *DashboardTableSortConfiguration {
		return &v
	}).(DashboardTableSortConfigurationPtrOutput)
}

func (o DashboardTableSortConfigurationOutput) PaginationConfiguration() DashboardPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableSortConfiguration) *DashboardPaginationConfiguration {
		return v.PaginationConfiguration
	}).(DashboardPaginationConfigurationPtrOutput)
}

func (o DashboardTableSortConfigurationOutput) RowSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardTableSortConfiguration) []DashboardFieldSortOptions { return v.RowSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableSortConfiguration)(nil)).Elem()
}

func (o DashboardTableSortConfigurationPtrOutput) ToDashboardTableSortConfigurationPtrOutput() DashboardTableSortConfigurationPtrOutput {
	return o
}

func (o DashboardTableSortConfigurationPtrOutput) ToDashboardTableSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTableSortConfigurationPtrOutput {
	return o
}

func (o DashboardTableSortConfigurationPtrOutput) Elem() DashboardTableSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardTableSortConfiguration) DashboardTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTableSortConfiguration
		return ret
	}).(DashboardTableSortConfigurationOutput)
}

func (o DashboardTableSortConfigurationPtrOutput) PaginationConfiguration() DashboardPaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableSortConfiguration) *DashboardPaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(DashboardPaginationConfigurationPtrOutput)
}

func (o DashboardTableSortConfigurationPtrOutput) RowSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardTableSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.RowSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardTableUnaggregatedFieldWells struct {
	Values []DashboardUnaggregatedField `pulumi:"values"`
}

// DashboardTableUnaggregatedFieldWellsInput is an input type that accepts DashboardTableUnaggregatedFieldWellsArgs and DashboardTableUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardTableUnaggregatedFieldWellsInput` via:
//
//	DashboardTableUnaggregatedFieldWellsArgs{...}
type DashboardTableUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardTableUnaggregatedFieldWellsOutput() DashboardTableUnaggregatedFieldWellsOutput
	ToDashboardTableUnaggregatedFieldWellsOutputWithContext(context.Context) DashboardTableUnaggregatedFieldWellsOutput
}

type DashboardTableUnaggregatedFieldWellsArgs struct {
	Values DashboardUnaggregatedFieldArrayInput `pulumi:"values"`
}

func (DashboardTableUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i DashboardTableUnaggregatedFieldWellsArgs) ToDashboardTableUnaggregatedFieldWellsOutput() DashboardTableUnaggregatedFieldWellsOutput {
	return i.ToDashboardTableUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardTableUnaggregatedFieldWellsArgs) ToDashboardTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableUnaggregatedFieldWellsOutput)
}

func (i DashboardTableUnaggregatedFieldWellsArgs) ToDashboardTableUnaggregatedFieldWellsPtrOutput() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return i.ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardTableUnaggregatedFieldWellsArgs) ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableUnaggregatedFieldWellsOutput).ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardTableUnaggregatedFieldWellsPtrInput is an input type that accepts DashboardTableUnaggregatedFieldWellsArgs, DashboardTableUnaggregatedFieldWellsPtr and DashboardTableUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardTableUnaggregatedFieldWellsPtrInput` via:
//
//	        DashboardTableUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardTableUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardTableUnaggregatedFieldWellsPtrOutput() DashboardTableUnaggregatedFieldWellsPtrOutput
	ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardTableUnaggregatedFieldWellsPtrOutput
}

type dashboardTableUnaggregatedFieldWellsPtrType DashboardTableUnaggregatedFieldWellsArgs

func DashboardTableUnaggregatedFieldWellsPtr(v *DashboardTableUnaggregatedFieldWellsArgs) DashboardTableUnaggregatedFieldWellsPtrInput {
	return (*dashboardTableUnaggregatedFieldWellsPtrType)(v)
}

func (*dashboardTableUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardTableUnaggregatedFieldWellsPtrType) ToDashboardTableUnaggregatedFieldWellsPtrOutput() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return i.ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardTableUnaggregatedFieldWellsPtrType) ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableUnaggregatedFieldWellsPtrOutput)
}

type DashboardTableUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardTableUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTableUnaggregatedFieldWellsOutput) ToDashboardTableUnaggregatedFieldWellsOutput() DashboardTableUnaggregatedFieldWellsOutput {
	return o
}

func (o DashboardTableUnaggregatedFieldWellsOutput) ToDashboardTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsOutput {
	return o
}

func (o DashboardTableUnaggregatedFieldWellsOutput) ToDashboardTableUnaggregatedFieldWellsPtrOutput() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o.ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardTableUnaggregatedFieldWellsOutput) ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableUnaggregatedFieldWells) *DashboardTableUnaggregatedFieldWells {
		return &v
	}).(DashboardTableUnaggregatedFieldWellsPtrOutput)
}

func (o DashboardTableUnaggregatedFieldWellsOutput) Values() DashboardUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v DashboardTableUnaggregatedFieldWells) []DashboardUnaggregatedField { return v.Values }).(DashboardUnaggregatedFieldArrayOutput)
}

type DashboardTableUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTableUnaggregatedFieldWellsPtrOutput) ToDashboardTableUnaggregatedFieldWellsPtrOutput() DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTableUnaggregatedFieldWellsPtrOutput) ToDashboardTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTableUnaggregatedFieldWellsPtrOutput) Elem() DashboardTableUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardTableUnaggregatedFieldWells) DashboardTableUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardTableUnaggregatedFieldWells
		return ret
	}).(DashboardTableUnaggregatedFieldWellsOutput)
}

func (o DashboardTableUnaggregatedFieldWellsPtrOutput) Values() DashboardUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTableUnaggregatedFieldWells) []DashboardUnaggregatedField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardUnaggregatedFieldArrayOutput)
}

type DashboardTableVisual struct {
	Actions               []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *DashboardTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *DashboardTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                               `pulumi:"visualId"`
}

// DashboardTableVisualInput is an input type that accepts DashboardTableVisualArgs and DashboardTableVisualOutput values.
// You can construct a concrete instance of `DashboardTableVisualInput` via:
//
//	DashboardTableVisualArgs{...}
type DashboardTableVisualInput interface {
	pulumi.Input

	ToDashboardTableVisualOutput() DashboardTableVisualOutput
	ToDashboardTableVisualOutputWithContext(context.Context) DashboardTableVisualOutput
}

type DashboardTableVisualArgs struct {
	Actions               DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    DashboardTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting DashboardTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableVisual)(nil)).Elem()
}

func (i DashboardTableVisualArgs) ToDashboardTableVisualOutput() DashboardTableVisualOutput {
	return i.ToDashboardTableVisualOutputWithContext(context.Background())
}

func (i DashboardTableVisualArgs) ToDashboardTableVisualOutputWithContext(ctx context.Context) DashboardTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableVisualOutput)
}

func (i DashboardTableVisualArgs) ToDashboardTableVisualPtrOutput() DashboardTableVisualPtrOutput {
	return i.ToDashboardTableVisualPtrOutputWithContext(context.Background())
}

func (i DashboardTableVisualArgs) ToDashboardTableVisualPtrOutputWithContext(ctx context.Context) DashboardTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableVisualOutput).ToDashboardTableVisualPtrOutputWithContext(ctx)
}

// DashboardTableVisualPtrInput is an input type that accepts DashboardTableVisualArgs, DashboardTableVisualPtr and DashboardTableVisualPtrOutput values.
// You can construct a concrete instance of `DashboardTableVisualPtrInput` via:
//
//	        DashboardTableVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardTableVisualPtrInput interface {
	pulumi.Input

	ToDashboardTableVisualPtrOutput() DashboardTableVisualPtrOutput
	ToDashboardTableVisualPtrOutputWithContext(context.Context) DashboardTableVisualPtrOutput
}

type dashboardTableVisualPtrType DashboardTableVisualArgs

func DashboardTableVisualPtr(v *DashboardTableVisualArgs) DashboardTableVisualPtrInput {
	return (*dashboardTableVisualPtrType)(v)
}

func (*dashboardTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableVisual)(nil)).Elem()
}

func (i *dashboardTableVisualPtrType) ToDashboardTableVisualPtrOutput() DashboardTableVisualPtrOutput {
	return i.ToDashboardTableVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardTableVisualPtrType) ToDashboardTableVisualPtrOutputWithContext(ctx context.Context) DashboardTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTableVisualPtrOutput)
}

type DashboardTableVisualOutput struct{ *pulumi.OutputState }

func (DashboardTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTableVisual)(nil)).Elem()
}

func (o DashboardTableVisualOutput) ToDashboardTableVisualOutput() DashboardTableVisualOutput {
	return o
}

func (o DashboardTableVisualOutput) ToDashboardTableVisualOutputWithContext(ctx context.Context) DashboardTableVisualOutput {
	return o
}

func (o DashboardTableVisualOutput) ToDashboardTableVisualPtrOutput() DashboardTableVisualPtrOutput {
	return o.ToDashboardTableVisualPtrOutputWithContext(context.Background())
}

func (o DashboardTableVisualOutput) ToDashboardTableVisualPtrOutputWithContext(ctx context.Context) DashboardTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTableVisual) *DashboardTableVisual {
		return &v
	}).(DashboardTableVisualPtrOutput)
}

func (o DashboardTableVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardTableVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardTableVisualOutput) ChartConfiguration() DashboardTableConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTableVisual) *DashboardTableConfiguration { return v.ChartConfiguration }).(DashboardTableConfigurationPtrOutput)
}

func (o DashboardTableVisualOutput) ConditionalFormatting() DashboardTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v DashboardTableVisual) *DashboardTableConditionalFormatting { return v.ConditionalFormatting }).(DashboardTableConditionalFormattingPtrOutput)
}

func (o DashboardTableVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardTableVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTableVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardTableVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTableVisual)(nil)).Elem()
}

func (o DashboardTableVisualPtrOutput) ToDashboardTableVisualPtrOutput() DashboardTableVisualPtrOutput {
	return o
}

func (o DashboardTableVisualPtrOutput) ToDashboardTableVisualPtrOutputWithContext(ctx context.Context) DashboardTableVisualPtrOutput {
	return o
}

func (o DashboardTableVisualPtrOutput) Elem() DashboardTableVisualOutput {
	return o.ApplyT(func(v *DashboardTableVisual) DashboardTableVisual {
		if v != nil {
			return *v
		}
		var ret DashboardTableVisual
		return ret
	}).(DashboardTableVisualOutput)
}

func (o DashboardTableVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardTableVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardTableVisualPtrOutput) ChartConfiguration() DashboardTableConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTableVisual) *DashboardTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardTableConfigurationPtrOutput)
}

func (o DashboardTableVisualPtrOutput) ConditionalFormatting() DashboardTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *DashboardTableVisual) *DashboardTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(DashboardTableConditionalFormattingPtrOutput)
}

func (o DashboardTableVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardTableVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTableVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DashboardTagInput is an input type that accepts DashboardTagArgs and DashboardTagOutput values.
// You can construct a concrete instance of `DashboardTagInput` via:
//
//	DashboardTagArgs{...}
type DashboardTagInput interface {
	pulumi.Input

	ToDashboardTagOutput() DashboardTagOutput
	ToDashboardTagOutputWithContext(context.Context) DashboardTagOutput
}

type DashboardTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DashboardTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTag)(nil)).Elem()
}

func (i DashboardTagArgs) ToDashboardTagOutput() DashboardTagOutput {
	return i.ToDashboardTagOutputWithContext(context.Background())
}

func (i DashboardTagArgs) ToDashboardTagOutputWithContext(ctx context.Context) DashboardTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTagOutput)
}

// DashboardTagArrayInput is an input type that accepts DashboardTagArray and DashboardTagArrayOutput values.
// You can construct a concrete instance of `DashboardTagArrayInput` via:
//
//	DashboardTagArray{ DashboardTagArgs{...} }
type DashboardTagArrayInput interface {
	pulumi.Input

	ToDashboardTagArrayOutput() DashboardTagArrayOutput
	ToDashboardTagArrayOutputWithContext(context.Context) DashboardTagArrayOutput
}

type DashboardTagArray []DashboardTagInput

func (DashboardTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTag)(nil)).Elem()
}

func (i DashboardTagArray) ToDashboardTagArrayOutput() DashboardTagArrayOutput {
	return i.ToDashboardTagArrayOutputWithContext(context.Background())
}

func (i DashboardTagArray) ToDashboardTagArrayOutputWithContext(ctx context.Context) DashboardTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTagArrayOutput)
}

type DashboardTagOutput struct{ *pulumi.OutputState }

func (DashboardTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTag)(nil)).Elem()
}

func (o DashboardTagOutput) ToDashboardTagOutput() DashboardTagOutput {
	return o
}

func (o DashboardTagOutput) ToDashboardTagOutputWithContext(ctx context.Context) DashboardTagOutput {
	return o
}

func (o DashboardTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTag) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardTagArrayOutput struct{ *pulumi.OutputState }

func (DashboardTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTag)(nil)).Elem()
}

func (o DashboardTagArrayOutput) ToDashboardTagArrayOutput() DashboardTagArrayOutput {
	return o
}

func (o DashboardTagArrayOutput) ToDashboardTagArrayOutputWithContext(ctx context.Context) DashboardTagArrayOutput {
	return o
}

func (o DashboardTagArrayOutput) Index(i pulumi.IntInput) DashboardTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTag {
		return vs[0].([]DashboardTag)[vs[1].(int)]
	}).(DashboardTagOutput)
}

type DashboardTextAreaControlDisplayOptions struct {
	PlaceholderOptions *DashboardTextControlPlaceholderOptions `pulumi:"placeholderOptions"`
	TitleOptions       *DashboardLabelOptions                  `pulumi:"titleOptions"`
}

// DashboardTextAreaControlDisplayOptionsInput is an input type that accepts DashboardTextAreaControlDisplayOptionsArgs and DashboardTextAreaControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardTextAreaControlDisplayOptionsInput` via:
//
//	DashboardTextAreaControlDisplayOptionsArgs{...}
type DashboardTextAreaControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardTextAreaControlDisplayOptionsOutput() DashboardTextAreaControlDisplayOptionsOutput
	ToDashboardTextAreaControlDisplayOptionsOutputWithContext(context.Context) DashboardTextAreaControlDisplayOptionsOutput
}

type DashboardTextAreaControlDisplayOptionsArgs struct {
	PlaceholderOptions DashboardTextControlPlaceholderOptionsPtrInput `pulumi:"placeholderOptions"`
	TitleOptions       DashboardLabelOptionsPtrInput                  `pulumi:"titleOptions"`
}

func (DashboardTextAreaControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i DashboardTextAreaControlDisplayOptionsArgs) ToDashboardTextAreaControlDisplayOptionsOutput() DashboardTextAreaControlDisplayOptionsOutput {
	return i.ToDashboardTextAreaControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardTextAreaControlDisplayOptionsArgs) ToDashboardTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextAreaControlDisplayOptionsOutput)
}

func (i DashboardTextAreaControlDisplayOptionsArgs) ToDashboardTextAreaControlDisplayOptionsPtrOutput() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return i.ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTextAreaControlDisplayOptionsArgs) ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextAreaControlDisplayOptionsOutput).ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardTextAreaControlDisplayOptionsPtrInput is an input type that accepts DashboardTextAreaControlDisplayOptionsArgs, DashboardTextAreaControlDisplayOptionsPtr and DashboardTextAreaControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTextAreaControlDisplayOptionsPtrInput` via:
//
//	        DashboardTextAreaControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTextAreaControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTextAreaControlDisplayOptionsPtrOutput() DashboardTextAreaControlDisplayOptionsPtrOutput
	ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardTextAreaControlDisplayOptionsPtrOutput
}

type dashboardTextAreaControlDisplayOptionsPtrType DashboardTextAreaControlDisplayOptionsArgs

func DashboardTextAreaControlDisplayOptionsPtr(v *DashboardTextAreaControlDisplayOptionsArgs) DashboardTextAreaControlDisplayOptionsPtrInput {
	return (*dashboardTextAreaControlDisplayOptionsPtrType)(v)
}

func (*dashboardTextAreaControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardTextAreaControlDisplayOptionsPtrType) ToDashboardTextAreaControlDisplayOptionsPtrOutput() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return i.ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTextAreaControlDisplayOptionsPtrType) ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

type DashboardTextAreaControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTextAreaControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o DashboardTextAreaControlDisplayOptionsOutput) ToDashboardTextAreaControlDisplayOptionsOutput() DashboardTextAreaControlDisplayOptionsOutput {
	return o
}

func (o DashboardTextAreaControlDisplayOptionsOutput) ToDashboardTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsOutput {
	return o
}

func (o DashboardTextAreaControlDisplayOptionsOutput) ToDashboardTextAreaControlDisplayOptionsPtrOutput() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTextAreaControlDisplayOptionsOutput) ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTextAreaControlDisplayOptions) *DashboardTextAreaControlDisplayOptions {
		return &v
	}).(DashboardTextAreaControlDisplayOptionsPtrOutput)
}

func (o DashboardTextAreaControlDisplayOptionsOutput) PlaceholderOptions() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTextAreaControlDisplayOptions) *DashboardTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

func (o DashboardTextAreaControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTextAreaControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardTextAreaControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTextAreaControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o DashboardTextAreaControlDisplayOptionsPtrOutput) ToDashboardTextAreaControlDisplayOptionsPtrOutput() DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardTextAreaControlDisplayOptionsPtrOutput) ToDashboardTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardTextAreaControlDisplayOptionsPtrOutput) Elem() DashboardTextAreaControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardTextAreaControlDisplayOptions) DashboardTextAreaControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTextAreaControlDisplayOptions
		return ret
	}).(DashboardTextAreaControlDisplayOptionsOutput)
}

func (o DashboardTextAreaControlDisplayOptionsPtrOutput) PlaceholderOptions() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTextAreaControlDisplayOptions) *DashboardTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

func (o DashboardTextAreaControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTextAreaControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardTextConditionalFormat struct {
	BackgroundColor *DashboardConditionalFormattingColor `pulumi:"backgroundColor"`
	Icon            *DashboardConditionalFormattingIcon  `pulumi:"icon"`
	TextColor       *DashboardConditionalFormattingColor `pulumi:"textColor"`
}

// DashboardTextConditionalFormatInput is an input type that accepts DashboardTextConditionalFormatArgs and DashboardTextConditionalFormatOutput values.
// You can construct a concrete instance of `DashboardTextConditionalFormatInput` via:
//
//	DashboardTextConditionalFormatArgs{...}
type DashboardTextConditionalFormatInput interface {
	pulumi.Input

	ToDashboardTextConditionalFormatOutput() DashboardTextConditionalFormatOutput
	ToDashboardTextConditionalFormatOutputWithContext(context.Context) DashboardTextConditionalFormatOutput
}

type DashboardTextConditionalFormatArgs struct {
	BackgroundColor DashboardConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	Icon            DashboardConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor       DashboardConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (DashboardTextConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextConditionalFormat)(nil)).Elem()
}

func (i DashboardTextConditionalFormatArgs) ToDashboardTextConditionalFormatOutput() DashboardTextConditionalFormatOutput {
	return i.ToDashboardTextConditionalFormatOutputWithContext(context.Background())
}

func (i DashboardTextConditionalFormatArgs) ToDashboardTextConditionalFormatOutputWithContext(ctx context.Context) DashboardTextConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextConditionalFormatOutput)
}

func (i DashboardTextConditionalFormatArgs) ToDashboardTextConditionalFormatPtrOutput() DashboardTextConditionalFormatPtrOutput {
	return i.ToDashboardTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i DashboardTextConditionalFormatArgs) ToDashboardTextConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextConditionalFormatOutput).ToDashboardTextConditionalFormatPtrOutputWithContext(ctx)
}

// DashboardTextConditionalFormatPtrInput is an input type that accepts DashboardTextConditionalFormatArgs, DashboardTextConditionalFormatPtr and DashboardTextConditionalFormatPtrOutput values.
// You can construct a concrete instance of `DashboardTextConditionalFormatPtrInput` via:
//
//	        DashboardTextConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type DashboardTextConditionalFormatPtrInput interface {
	pulumi.Input

	ToDashboardTextConditionalFormatPtrOutput() DashboardTextConditionalFormatPtrOutput
	ToDashboardTextConditionalFormatPtrOutputWithContext(context.Context) DashboardTextConditionalFormatPtrOutput
}

type dashboardTextConditionalFormatPtrType DashboardTextConditionalFormatArgs

func DashboardTextConditionalFormatPtr(v *DashboardTextConditionalFormatArgs) DashboardTextConditionalFormatPtrInput {
	return (*dashboardTextConditionalFormatPtrType)(v)
}

func (*dashboardTextConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextConditionalFormat)(nil)).Elem()
}

func (i *dashboardTextConditionalFormatPtrType) ToDashboardTextConditionalFormatPtrOutput() DashboardTextConditionalFormatPtrOutput {
	return i.ToDashboardTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *dashboardTextConditionalFormatPtrType) ToDashboardTextConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextConditionalFormatPtrOutput)
}

type DashboardTextConditionalFormatOutput struct{ *pulumi.OutputState }

func (DashboardTextConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextConditionalFormat)(nil)).Elem()
}

func (o DashboardTextConditionalFormatOutput) ToDashboardTextConditionalFormatOutput() DashboardTextConditionalFormatOutput {
	return o
}

func (o DashboardTextConditionalFormatOutput) ToDashboardTextConditionalFormatOutputWithContext(ctx context.Context) DashboardTextConditionalFormatOutput {
	return o
}

func (o DashboardTextConditionalFormatOutput) ToDashboardTextConditionalFormatPtrOutput() DashboardTextConditionalFormatPtrOutput {
	return o.ToDashboardTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (o DashboardTextConditionalFormatOutput) ToDashboardTextConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardTextConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTextConditionalFormat) *DashboardTextConditionalFormat {
		return &v
	}).(DashboardTextConditionalFormatPtrOutput)
}

func (o DashboardTextConditionalFormatOutput) BackgroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardTextConditionalFormat) *DashboardConditionalFormattingColor { return v.BackgroundColor }).(DashboardConditionalFormattingColorPtrOutput)
}

func (o DashboardTextConditionalFormatOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v DashboardTextConditionalFormat) *DashboardConditionalFormattingIcon { return v.Icon }).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardTextConditionalFormatOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v DashboardTextConditionalFormat) *DashboardConditionalFormattingColor { return v.TextColor }).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardTextConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (DashboardTextConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextConditionalFormat)(nil)).Elem()
}

func (o DashboardTextConditionalFormatPtrOutput) ToDashboardTextConditionalFormatPtrOutput() DashboardTextConditionalFormatPtrOutput {
	return o
}

func (o DashboardTextConditionalFormatPtrOutput) ToDashboardTextConditionalFormatPtrOutputWithContext(ctx context.Context) DashboardTextConditionalFormatPtrOutput {
	return o
}

func (o DashboardTextConditionalFormatPtrOutput) Elem() DashboardTextConditionalFormatOutput {
	return o.ApplyT(func(v *DashboardTextConditionalFormat) DashboardTextConditionalFormat {
		if v != nil {
			return *v
		}
		var ret DashboardTextConditionalFormat
		return ret
	}).(DashboardTextConditionalFormatOutput)
}

func (o DashboardTextConditionalFormatPtrOutput) BackgroundColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardTextConditionalFormat) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

func (o DashboardTextConditionalFormatPtrOutput) Icon() DashboardConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *DashboardTextConditionalFormat) *DashboardConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(DashboardConditionalFormattingIconPtrOutput)
}

func (o DashboardTextConditionalFormatPtrOutput) TextColor() DashboardConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *DashboardTextConditionalFormat) *DashboardConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(DashboardConditionalFormattingColorPtrOutput)
}

type DashboardTextControlPlaceholderOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardTextControlPlaceholderOptionsInput is an input type that accepts DashboardTextControlPlaceholderOptionsArgs and DashboardTextControlPlaceholderOptionsOutput values.
// You can construct a concrete instance of `DashboardTextControlPlaceholderOptionsInput` via:
//
//	DashboardTextControlPlaceholderOptionsArgs{...}
type DashboardTextControlPlaceholderOptionsInput interface {
	pulumi.Input

	ToDashboardTextControlPlaceholderOptionsOutput() DashboardTextControlPlaceholderOptionsOutput
	ToDashboardTextControlPlaceholderOptionsOutputWithContext(context.Context) DashboardTextControlPlaceholderOptionsOutput
}

type DashboardTextControlPlaceholderOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardTextControlPlaceholderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextControlPlaceholderOptions)(nil)).Elem()
}

func (i DashboardTextControlPlaceholderOptionsArgs) ToDashboardTextControlPlaceholderOptionsOutput() DashboardTextControlPlaceholderOptionsOutput {
	return i.ToDashboardTextControlPlaceholderOptionsOutputWithContext(context.Background())
}

func (i DashboardTextControlPlaceholderOptionsArgs) ToDashboardTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextControlPlaceholderOptionsOutput)
}

func (i DashboardTextControlPlaceholderOptionsArgs) ToDashboardTextControlPlaceholderOptionsPtrOutput() DashboardTextControlPlaceholderOptionsPtrOutput {
	return i.ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTextControlPlaceholderOptionsArgs) ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextControlPlaceholderOptionsOutput).ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(ctx)
}

// DashboardTextControlPlaceholderOptionsPtrInput is an input type that accepts DashboardTextControlPlaceholderOptionsArgs, DashboardTextControlPlaceholderOptionsPtr and DashboardTextControlPlaceholderOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTextControlPlaceholderOptionsPtrInput` via:
//
//	        DashboardTextControlPlaceholderOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTextControlPlaceholderOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTextControlPlaceholderOptionsPtrOutput() DashboardTextControlPlaceholderOptionsPtrOutput
	ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(context.Context) DashboardTextControlPlaceholderOptionsPtrOutput
}

type dashboardTextControlPlaceholderOptionsPtrType DashboardTextControlPlaceholderOptionsArgs

func DashboardTextControlPlaceholderOptionsPtr(v *DashboardTextControlPlaceholderOptionsArgs) DashboardTextControlPlaceholderOptionsPtrInput {
	return (*dashboardTextControlPlaceholderOptionsPtrType)(v)
}

func (*dashboardTextControlPlaceholderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextControlPlaceholderOptions)(nil)).Elem()
}

func (i *dashboardTextControlPlaceholderOptionsPtrType) ToDashboardTextControlPlaceholderOptionsPtrOutput() DashboardTextControlPlaceholderOptionsPtrOutput {
	return i.ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTextControlPlaceholderOptionsPtrType) ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

type DashboardTextControlPlaceholderOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTextControlPlaceholderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextControlPlaceholderOptions)(nil)).Elem()
}

func (o DashboardTextControlPlaceholderOptionsOutput) ToDashboardTextControlPlaceholderOptionsOutput() DashboardTextControlPlaceholderOptionsOutput {
	return o
}

func (o DashboardTextControlPlaceholderOptionsOutput) ToDashboardTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsOutput {
	return o
}

func (o DashboardTextControlPlaceholderOptionsOutput) ToDashboardTextControlPlaceholderOptionsPtrOutput() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTextControlPlaceholderOptionsOutput) ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTextControlPlaceholderOptions) *DashboardTextControlPlaceholderOptions {
		return &v
	}).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

func (o DashboardTextControlPlaceholderOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTextControlPlaceholderOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTextControlPlaceholderOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTextControlPlaceholderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextControlPlaceholderOptions)(nil)).Elem()
}

func (o DashboardTextControlPlaceholderOptionsPtrOutput) ToDashboardTextControlPlaceholderOptionsPtrOutput() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o DashboardTextControlPlaceholderOptionsPtrOutput) ToDashboardTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) DashboardTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o DashboardTextControlPlaceholderOptionsPtrOutput) Elem() DashboardTextControlPlaceholderOptionsOutput {
	return o.ApplyT(func(v *DashboardTextControlPlaceholderOptions) DashboardTextControlPlaceholderOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTextControlPlaceholderOptions
		return ret
	}).(DashboardTextControlPlaceholderOptionsOutput)
}

func (o DashboardTextControlPlaceholderOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTextControlPlaceholderOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTextFieldControlDisplayOptions struct {
	PlaceholderOptions *DashboardTextControlPlaceholderOptions `pulumi:"placeholderOptions"`
	TitleOptions       *DashboardLabelOptions                  `pulumi:"titleOptions"`
}

// DashboardTextFieldControlDisplayOptionsInput is an input type that accepts DashboardTextFieldControlDisplayOptionsArgs and DashboardTextFieldControlDisplayOptionsOutput values.
// You can construct a concrete instance of `DashboardTextFieldControlDisplayOptionsInput` via:
//
//	DashboardTextFieldControlDisplayOptionsArgs{...}
type DashboardTextFieldControlDisplayOptionsInput interface {
	pulumi.Input

	ToDashboardTextFieldControlDisplayOptionsOutput() DashboardTextFieldControlDisplayOptionsOutput
	ToDashboardTextFieldControlDisplayOptionsOutputWithContext(context.Context) DashboardTextFieldControlDisplayOptionsOutput
}

type DashboardTextFieldControlDisplayOptionsArgs struct {
	PlaceholderOptions DashboardTextControlPlaceholderOptionsPtrInput `pulumi:"placeholderOptions"`
	TitleOptions       DashboardLabelOptionsPtrInput                  `pulumi:"titleOptions"`
}

func (DashboardTextFieldControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i DashboardTextFieldControlDisplayOptionsArgs) ToDashboardTextFieldControlDisplayOptionsOutput() DashboardTextFieldControlDisplayOptionsOutput {
	return i.ToDashboardTextFieldControlDisplayOptionsOutputWithContext(context.Background())
}

func (i DashboardTextFieldControlDisplayOptionsArgs) ToDashboardTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextFieldControlDisplayOptionsOutput)
}

func (i DashboardTextFieldControlDisplayOptionsArgs) ToDashboardTextFieldControlDisplayOptionsPtrOutput() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return i.ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTextFieldControlDisplayOptionsArgs) ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextFieldControlDisplayOptionsOutput).ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(ctx)
}

// DashboardTextFieldControlDisplayOptionsPtrInput is an input type that accepts DashboardTextFieldControlDisplayOptionsArgs, DashboardTextFieldControlDisplayOptionsPtr and DashboardTextFieldControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTextFieldControlDisplayOptionsPtrInput` via:
//
//	        DashboardTextFieldControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTextFieldControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTextFieldControlDisplayOptionsPtrOutput() DashboardTextFieldControlDisplayOptionsPtrOutput
	ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(context.Context) DashboardTextFieldControlDisplayOptionsPtrOutput
}

type dashboardTextFieldControlDisplayOptionsPtrType DashboardTextFieldControlDisplayOptionsArgs

func DashboardTextFieldControlDisplayOptionsPtr(v *DashboardTextFieldControlDisplayOptionsArgs) DashboardTextFieldControlDisplayOptionsPtrInput {
	return (*dashboardTextFieldControlDisplayOptionsPtrType)(v)
}

func (*dashboardTextFieldControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i *dashboardTextFieldControlDisplayOptionsPtrType) ToDashboardTextFieldControlDisplayOptionsPtrOutput() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return i.ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTextFieldControlDisplayOptionsPtrType) ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

type DashboardTextFieldControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTextFieldControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o DashboardTextFieldControlDisplayOptionsOutput) ToDashboardTextFieldControlDisplayOptionsOutput() DashboardTextFieldControlDisplayOptionsOutput {
	return o
}

func (o DashboardTextFieldControlDisplayOptionsOutput) ToDashboardTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsOutput {
	return o
}

func (o DashboardTextFieldControlDisplayOptionsOutput) ToDashboardTextFieldControlDisplayOptionsPtrOutput() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTextFieldControlDisplayOptionsOutput) ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTextFieldControlDisplayOptions) *DashboardTextFieldControlDisplayOptions {
		return &v
	}).(DashboardTextFieldControlDisplayOptionsPtrOutput)
}

func (o DashboardTextFieldControlDisplayOptionsOutput) PlaceholderOptions() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTextFieldControlDisplayOptions) *DashboardTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

func (o DashboardTextFieldControlDisplayOptionsOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTextFieldControlDisplayOptions) *DashboardLabelOptions { return v.TitleOptions }).(DashboardLabelOptionsPtrOutput)
}

type DashboardTextFieldControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTextFieldControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o DashboardTextFieldControlDisplayOptionsPtrOutput) ToDashboardTextFieldControlDisplayOptionsPtrOutput() DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardTextFieldControlDisplayOptionsPtrOutput) ToDashboardTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) DashboardTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o DashboardTextFieldControlDisplayOptionsPtrOutput) Elem() DashboardTextFieldControlDisplayOptionsOutput {
	return o.ApplyT(func(v *DashboardTextFieldControlDisplayOptions) DashboardTextFieldControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTextFieldControlDisplayOptions
		return ret
	}).(DashboardTextFieldControlDisplayOptionsOutput)
}

func (o DashboardTextFieldControlDisplayOptionsPtrOutput) PlaceholderOptions() DashboardTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTextFieldControlDisplayOptions) *DashboardTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(DashboardTextControlPlaceholderOptionsPtrOutput)
}

func (o DashboardTextFieldControlDisplayOptionsPtrOutput) TitleOptions() DashboardLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTextFieldControlDisplayOptions) *DashboardLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(DashboardLabelOptionsPtrOutput)
}

type DashboardThousandSeparatorOptions struct {
	Symbol     *DashboardNumericSeparatorSymbol `pulumi:"symbol"`
	Visibility *DashboardVisibility             `pulumi:"visibility"`
}

// DashboardThousandSeparatorOptionsInput is an input type that accepts DashboardThousandSeparatorOptionsArgs and DashboardThousandSeparatorOptionsOutput values.
// You can construct a concrete instance of `DashboardThousandSeparatorOptionsInput` via:
//
//	DashboardThousandSeparatorOptionsArgs{...}
type DashboardThousandSeparatorOptionsInput interface {
	pulumi.Input

	ToDashboardThousandSeparatorOptionsOutput() DashboardThousandSeparatorOptionsOutput
	ToDashboardThousandSeparatorOptionsOutputWithContext(context.Context) DashboardThousandSeparatorOptionsOutput
}

type DashboardThousandSeparatorOptionsArgs struct {
	Symbol     DashboardNumericSeparatorSymbolPtrInput `pulumi:"symbol"`
	Visibility DashboardVisibilityPtrInput             `pulumi:"visibility"`
}

func (DashboardThousandSeparatorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardThousandSeparatorOptions)(nil)).Elem()
}

func (i DashboardThousandSeparatorOptionsArgs) ToDashboardThousandSeparatorOptionsOutput() DashboardThousandSeparatorOptionsOutput {
	return i.ToDashboardThousandSeparatorOptionsOutputWithContext(context.Background())
}

func (i DashboardThousandSeparatorOptionsArgs) ToDashboardThousandSeparatorOptionsOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardThousandSeparatorOptionsOutput)
}

func (i DashboardThousandSeparatorOptionsArgs) ToDashboardThousandSeparatorOptionsPtrOutput() DashboardThousandSeparatorOptionsPtrOutput {
	return i.ToDashboardThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardThousandSeparatorOptionsArgs) ToDashboardThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardThousandSeparatorOptionsOutput).ToDashboardThousandSeparatorOptionsPtrOutputWithContext(ctx)
}

// DashboardThousandSeparatorOptionsPtrInput is an input type that accepts DashboardThousandSeparatorOptionsArgs, DashboardThousandSeparatorOptionsPtr and DashboardThousandSeparatorOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardThousandSeparatorOptionsPtrInput` via:
//
//	        DashboardThousandSeparatorOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardThousandSeparatorOptionsPtrInput interface {
	pulumi.Input

	ToDashboardThousandSeparatorOptionsPtrOutput() DashboardThousandSeparatorOptionsPtrOutput
	ToDashboardThousandSeparatorOptionsPtrOutputWithContext(context.Context) DashboardThousandSeparatorOptionsPtrOutput
}

type dashboardThousandSeparatorOptionsPtrType DashboardThousandSeparatorOptionsArgs

func DashboardThousandSeparatorOptionsPtr(v *DashboardThousandSeparatorOptionsArgs) DashboardThousandSeparatorOptionsPtrInput {
	return (*dashboardThousandSeparatorOptionsPtrType)(v)
}

func (*dashboardThousandSeparatorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardThousandSeparatorOptions)(nil)).Elem()
}

func (i *dashboardThousandSeparatorOptionsPtrType) ToDashboardThousandSeparatorOptionsPtrOutput() DashboardThousandSeparatorOptionsPtrOutput {
	return i.ToDashboardThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardThousandSeparatorOptionsPtrType) ToDashboardThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardThousandSeparatorOptionsPtrOutput)
}

type DashboardThousandSeparatorOptionsOutput struct{ *pulumi.OutputState }

func (DashboardThousandSeparatorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardThousandSeparatorOptions)(nil)).Elem()
}

func (o DashboardThousandSeparatorOptionsOutput) ToDashboardThousandSeparatorOptionsOutput() DashboardThousandSeparatorOptionsOutput {
	return o
}

func (o DashboardThousandSeparatorOptionsOutput) ToDashboardThousandSeparatorOptionsOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsOutput {
	return o
}

func (o DashboardThousandSeparatorOptionsOutput) ToDashboardThousandSeparatorOptionsPtrOutput() DashboardThousandSeparatorOptionsPtrOutput {
	return o.ToDashboardThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardThousandSeparatorOptionsOutput) ToDashboardThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardThousandSeparatorOptions) *DashboardThousandSeparatorOptions {
		return &v
	}).(DashboardThousandSeparatorOptionsPtrOutput)
}

func (o DashboardThousandSeparatorOptionsOutput) Symbol() DashboardNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v DashboardThousandSeparatorOptions) *DashboardNumericSeparatorSymbol { return v.Symbol }).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (o DashboardThousandSeparatorOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardThousandSeparatorOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardThousandSeparatorOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardThousandSeparatorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardThousandSeparatorOptions)(nil)).Elem()
}

func (o DashboardThousandSeparatorOptionsPtrOutput) ToDashboardThousandSeparatorOptionsPtrOutput() DashboardThousandSeparatorOptionsPtrOutput {
	return o
}

func (o DashboardThousandSeparatorOptionsPtrOutput) ToDashboardThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) DashboardThousandSeparatorOptionsPtrOutput {
	return o
}

func (o DashboardThousandSeparatorOptionsPtrOutput) Elem() DashboardThousandSeparatorOptionsOutput {
	return o.ApplyT(func(v *DashboardThousandSeparatorOptions) DashboardThousandSeparatorOptions {
		if v != nil {
			return *v
		}
		var ret DashboardThousandSeparatorOptions
		return ret
	}).(DashboardThousandSeparatorOptionsOutput)
}

func (o DashboardThousandSeparatorOptionsPtrOutput) Symbol() DashboardNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *DashboardThousandSeparatorOptions) *DashboardNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(DashboardNumericSeparatorSymbolPtrOutput)
}

func (o DashboardThousandSeparatorOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardThousandSeparatorOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTimeBasedForecastProperties struct {
	LowerBoundary      *float64 `pulumi:"lowerBoundary"`
	PeriodsBackward    *float64 `pulumi:"periodsBackward"`
	PeriodsForward     *float64 `pulumi:"periodsForward"`
	PredictionInterval *float64 `pulumi:"predictionInterval"`
	Seasonality        *float64 `pulumi:"seasonality"`
	UpperBoundary      *float64 `pulumi:"upperBoundary"`
}

// DashboardTimeBasedForecastPropertiesInput is an input type that accepts DashboardTimeBasedForecastPropertiesArgs and DashboardTimeBasedForecastPropertiesOutput values.
// You can construct a concrete instance of `DashboardTimeBasedForecastPropertiesInput` via:
//
//	DashboardTimeBasedForecastPropertiesArgs{...}
type DashboardTimeBasedForecastPropertiesInput interface {
	pulumi.Input

	ToDashboardTimeBasedForecastPropertiesOutput() DashboardTimeBasedForecastPropertiesOutput
	ToDashboardTimeBasedForecastPropertiesOutputWithContext(context.Context) DashboardTimeBasedForecastPropertiesOutput
}

type DashboardTimeBasedForecastPropertiesArgs struct {
	LowerBoundary      pulumi.Float64PtrInput `pulumi:"lowerBoundary"`
	PeriodsBackward    pulumi.Float64PtrInput `pulumi:"periodsBackward"`
	PeriodsForward     pulumi.Float64PtrInput `pulumi:"periodsForward"`
	PredictionInterval pulumi.Float64PtrInput `pulumi:"predictionInterval"`
	Seasonality        pulumi.Float64PtrInput `pulumi:"seasonality"`
	UpperBoundary      pulumi.Float64PtrInput `pulumi:"upperBoundary"`
}

func (DashboardTimeBasedForecastPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeBasedForecastProperties)(nil)).Elem()
}

func (i DashboardTimeBasedForecastPropertiesArgs) ToDashboardTimeBasedForecastPropertiesOutput() DashboardTimeBasedForecastPropertiesOutput {
	return i.ToDashboardTimeBasedForecastPropertiesOutputWithContext(context.Background())
}

func (i DashboardTimeBasedForecastPropertiesArgs) ToDashboardTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeBasedForecastPropertiesOutput)
}

func (i DashboardTimeBasedForecastPropertiesArgs) ToDashboardTimeBasedForecastPropertiesPtrOutput() DashboardTimeBasedForecastPropertiesPtrOutput {
	return i.ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i DashboardTimeBasedForecastPropertiesArgs) ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeBasedForecastPropertiesOutput).ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(ctx)
}

// DashboardTimeBasedForecastPropertiesPtrInput is an input type that accepts DashboardTimeBasedForecastPropertiesArgs, DashboardTimeBasedForecastPropertiesPtr and DashboardTimeBasedForecastPropertiesPtrOutput values.
// You can construct a concrete instance of `DashboardTimeBasedForecastPropertiesPtrInput` via:
//
//	        DashboardTimeBasedForecastPropertiesArgs{...}
//
//	or:
//
//	        nil
type DashboardTimeBasedForecastPropertiesPtrInput interface {
	pulumi.Input

	ToDashboardTimeBasedForecastPropertiesPtrOutput() DashboardTimeBasedForecastPropertiesPtrOutput
	ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(context.Context) DashboardTimeBasedForecastPropertiesPtrOutput
}

type dashboardTimeBasedForecastPropertiesPtrType DashboardTimeBasedForecastPropertiesArgs

func DashboardTimeBasedForecastPropertiesPtr(v *DashboardTimeBasedForecastPropertiesArgs) DashboardTimeBasedForecastPropertiesPtrInput {
	return (*dashboardTimeBasedForecastPropertiesPtrType)(v)
}

func (*dashboardTimeBasedForecastPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeBasedForecastProperties)(nil)).Elem()
}

func (i *dashboardTimeBasedForecastPropertiesPtrType) ToDashboardTimeBasedForecastPropertiesPtrOutput() DashboardTimeBasedForecastPropertiesPtrOutput {
	return i.ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeBasedForecastPropertiesPtrType) ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeBasedForecastPropertiesPtrOutput)
}

type DashboardTimeBasedForecastPropertiesOutput struct{ *pulumi.OutputState }

func (DashboardTimeBasedForecastPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeBasedForecastProperties)(nil)).Elem()
}

func (o DashboardTimeBasedForecastPropertiesOutput) ToDashboardTimeBasedForecastPropertiesOutput() DashboardTimeBasedForecastPropertiesOutput {
	return o
}

func (o DashboardTimeBasedForecastPropertiesOutput) ToDashboardTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesOutput {
	return o
}

func (o DashboardTimeBasedForecastPropertiesOutput) ToDashboardTimeBasedForecastPropertiesPtrOutput() DashboardTimeBasedForecastPropertiesPtrOutput {
	return o.ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (o DashboardTimeBasedForecastPropertiesOutput) ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeBasedForecastProperties) *DashboardTimeBasedForecastProperties {
		return &v
	}).(DashboardTimeBasedForecastPropertiesPtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.Seasonality }).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTimeBasedForecastProperties) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

type DashboardTimeBasedForecastPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeBasedForecastPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeBasedForecastProperties)(nil)).Elem()
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) ToDashboardTimeBasedForecastPropertiesPtrOutput() DashboardTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) ToDashboardTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) DashboardTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) Elem() DashboardTimeBasedForecastPropertiesOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) DashboardTimeBasedForecastProperties {
		if v != nil {
			return *v
		}
		var ret DashboardTimeBasedForecastProperties
		return ret
	}).(DashboardTimeBasedForecastPropertiesOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTimeBasedForecastPropertiesPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

type DashboardTimeEqualityFilter struct {
	Column          DashboardColumnIdentifier `pulumi:"column"`
	FilterId        string                    `pulumi:"filterId"`
	ParameterName   *string                   `pulumi:"parameterName"`
	TimeGranularity *DashboardTimeGranularity `pulumi:"timeGranularity"`
	Value           *string                   `pulumi:"value"`
}

// DashboardTimeEqualityFilterInput is an input type that accepts DashboardTimeEqualityFilterArgs and DashboardTimeEqualityFilterOutput values.
// You can construct a concrete instance of `DashboardTimeEqualityFilterInput` via:
//
//	DashboardTimeEqualityFilterArgs{...}
type DashboardTimeEqualityFilterInput interface {
	pulumi.Input

	ToDashboardTimeEqualityFilterOutput() DashboardTimeEqualityFilterOutput
	ToDashboardTimeEqualityFilterOutputWithContext(context.Context) DashboardTimeEqualityFilterOutput
}

type DashboardTimeEqualityFilterArgs struct {
	Column          DashboardColumnIdentifierInput   `pulumi:"column"`
	FilterId        pulumi.StringInput               `pulumi:"filterId"`
	ParameterName   pulumi.StringPtrInput            `pulumi:"parameterName"`
	TimeGranularity DashboardTimeGranularityPtrInput `pulumi:"timeGranularity"`
	Value           pulumi.StringPtrInput            `pulumi:"value"`
}

func (DashboardTimeEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeEqualityFilter)(nil)).Elem()
}

func (i DashboardTimeEqualityFilterArgs) ToDashboardTimeEqualityFilterOutput() DashboardTimeEqualityFilterOutput {
	return i.ToDashboardTimeEqualityFilterOutputWithContext(context.Background())
}

func (i DashboardTimeEqualityFilterArgs) ToDashboardTimeEqualityFilterOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeEqualityFilterOutput)
}

func (i DashboardTimeEqualityFilterArgs) ToDashboardTimeEqualityFilterPtrOutput() DashboardTimeEqualityFilterPtrOutput {
	return i.ToDashboardTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i DashboardTimeEqualityFilterArgs) ToDashboardTimeEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeEqualityFilterOutput).ToDashboardTimeEqualityFilterPtrOutputWithContext(ctx)
}

// DashboardTimeEqualityFilterPtrInput is an input type that accepts DashboardTimeEqualityFilterArgs, DashboardTimeEqualityFilterPtr and DashboardTimeEqualityFilterPtrOutput values.
// You can construct a concrete instance of `DashboardTimeEqualityFilterPtrInput` via:
//
//	        DashboardTimeEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardTimeEqualityFilterPtrInput interface {
	pulumi.Input

	ToDashboardTimeEqualityFilterPtrOutput() DashboardTimeEqualityFilterPtrOutput
	ToDashboardTimeEqualityFilterPtrOutputWithContext(context.Context) DashboardTimeEqualityFilterPtrOutput
}

type dashboardTimeEqualityFilterPtrType DashboardTimeEqualityFilterArgs

func DashboardTimeEqualityFilterPtr(v *DashboardTimeEqualityFilterArgs) DashboardTimeEqualityFilterPtrInput {
	return (*dashboardTimeEqualityFilterPtrType)(v)
}

func (*dashboardTimeEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeEqualityFilter)(nil)).Elem()
}

func (i *dashboardTimeEqualityFilterPtrType) ToDashboardTimeEqualityFilterPtrOutput() DashboardTimeEqualityFilterPtrOutput {
	return i.ToDashboardTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeEqualityFilterPtrType) ToDashboardTimeEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeEqualityFilterPtrOutput)
}

type DashboardTimeEqualityFilterOutput struct{ *pulumi.OutputState }

func (DashboardTimeEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeEqualityFilter)(nil)).Elem()
}

func (o DashboardTimeEqualityFilterOutput) ToDashboardTimeEqualityFilterOutput() DashboardTimeEqualityFilterOutput {
	return o
}

func (o DashboardTimeEqualityFilterOutput) ToDashboardTimeEqualityFilterOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterOutput {
	return o
}

func (o DashboardTimeEqualityFilterOutput) ToDashboardTimeEqualityFilterPtrOutput() DashboardTimeEqualityFilterPtrOutput {
	return o.ToDashboardTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (o DashboardTimeEqualityFilterOutput) ToDashboardTimeEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeEqualityFilter) *DashboardTimeEqualityFilter {
		return &v
	}).(DashboardTimeEqualityFilterPtrOutput)
}

func (o DashboardTimeEqualityFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardTimeEqualityFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardTimeEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardTimeEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTimeEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o DashboardTimeEqualityFilterOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardTimeEqualityFilter) *DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardTimeEqualityFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTimeEqualityFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DashboardTimeEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeEqualityFilter)(nil)).Elem()
}

func (o DashboardTimeEqualityFilterPtrOutput) ToDashboardTimeEqualityFilterPtrOutput() DashboardTimeEqualityFilterPtrOutput {
	return o
}

func (o DashboardTimeEqualityFilterPtrOutput) ToDashboardTimeEqualityFilterPtrOutputWithContext(ctx context.Context) DashboardTimeEqualityFilterPtrOutput {
	return o
}

func (o DashboardTimeEqualityFilterPtrOutput) Elem() DashboardTimeEqualityFilterOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) DashboardTimeEqualityFilter {
		if v != nil {
			return *v
		}
		var ret DashboardTimeEqualityFilter
		return ret
	}).(DashboardTimeEqualityFilterOutput)
}

func (o DashboardTimeEqualityFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardTimeEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeEqualityFilterPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

func (o DashboardTimeEqualityFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeDrillDownFilter struct {
	Column          DashboardColumnIdentifier `pulumi:"column"`
	RangeMaximum    string                    `pulumi:"rangeMaximum"`
	RangeMinimum    string                    `pulumi:"rangeMinimum"`
	TimeGranularity DashboardTimeGranularity  `pulumi:"timeGranularity"`
}

// DashboardTimeRangeDrillDownFilterInput is an input type that accepts DashboardTimeRangeDrillDownFilterArgs and DashboardTimeRangeDrillDownFilterOutput values.
// You can construct a concrete instance of `DashboardTimeRangeDrillDownFilterInput` via:
//
//	DashboardTimeRangeDrillDownFilterArgs{...}
type DashboardTimeRangeDrillDownFilterInput interface {
	pulumi.Input

	ToDashboardTimeRangeDrillDownFilterOutput() DashboardTimeRangeDrillDownFilterOutput
	ToDashboardTimeRangeDrillDownFilterOutputWithContext(context.Context) DashboardTimeRangeDrillDownFilterOutput
}

type DashboardTimeRangeDrillDownFilterArgs struct {
	Column          DashboardColumnIdentifierInput `pulumi:"column"`
	RangeMaximum    pulumi.StringInput             `pulumi:"rangeMaximum"`
	RangeMinimum    pulumi.StringInput             `pulumi:"rangeMinimum"`
	TimeGranularity DashboardTimeGranularityInput  `pulumi:"timeGranularity"`
}

func (DashboardTimeRangeDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i DashboardTimeRangeDrillDownFilterArgs) ToDashboardTimeRangeDrillDownFilterOutput() DashboardTimeRangeDrillDownFilterOutput {
	return i.ToDashboardTimeRangeDrillDownFilterOutputWithContext(context.Background())
}

func (i DashboardTimeRangeDrillDownFilterArgs) ToDashboardTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeDrillDownFilterOutput)
}

func (i DashboardTimeRangeDrillDownFilterArgs) ToDashboardTimeRangeDrillDownFilterPtrOutput() DashboardTimeRangeDrillDownFilterPtrOutput {
	return i.ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeDrillDownFilterArgs) ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeDrillDownFilterOutput).ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(ctx)
}

// DashboardTimeRangeDrillDownFilterPtrInput is an input type that accepts DashboardTimeRangeDrillDownFilterArgs, DashboardTimeRangeDrillDownFilterPtr and DashboardTimeRangeDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeDrillDownFilterPtrInput` via:
//
//	        DashboardTimeRangeDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardTimeRangeDrillDownFilterPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeDrillDownFilterPtrOutput() DashboardTimeRangeDrillDownFilterPtrOutput
	ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(context.Context) DashboardTimeRangeDrillDownFilterPtrOutput
}

type dashboardTimeRangeDrillDownFilterPtrType DashboardTimeRangeDrillDownFilterArgs

func DashboardTimeRangeDrillDownFilterPtr(v *DashboardTimeRangeDrillDownFilterArgs) DashboardTimeRangeDrillDownFilterPtrInput {
	return (*dashboardTimeRangeDrillDownFilterPtrType)(v)
}

func (*dashboardTimeRangeDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i *dashboardTimeRangeDrillDownFilterPtrType) ToDashboardTimeRangeDrillDownFilterPtrOutput() DashboardTimeRangeDrillDownFilterPtrOutput {
	return i.ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeDrillDownFilterPtrType) ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeDrillDownFilterPtrOutput)
}

type DashboardTimeRangeDrillDownFilterOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o DashboardTimeRangeDrillDownFilterOutput) ToDashboardTimeRangeDrillDownFilterOutput() DashboardTimeRangeDrillDownFilterOutput {
	return o
}

func (o DashboardTimeRangeDrillDownFilterOutput) ToDashboardTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterOutput {
	return o
}

func (o DashboardTimeRangeDrillDownFilterOutput) ToDashboardTimeRangeDrillDownFilterPtrOutput() DashboardTimeRangeDrillDownFilterPtrOutput {
	return o.ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeDrillDownFilterOutput) ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeDrillDownFilter) *DashboardTimeRangeDrillDownFilter {
		return &v
	}).(DashboardTimeRangeDrillDownFilterPtrOutput)
}

func (o DashboardTimeRangeDrillDownFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardTimeRangeDrillDownFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardTimeRangeDrillDownFilterOutput) RangeMaximum() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeDrillDownFilter) string { return v.RangeMaximum }).(pulumi.StringOutput)
}

func (o DashboardTimeRangeDrillDownFilterOutput) RangeMinimum() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeDrillDownFilter) string { return v.RangeMinimum }).(pulumi.StringOutput)
}

func (o DashboardTimeRangeDrillDownFilterOutput) TimeGranularity() DashboardTimeGranularityOutput {
	return o.ApplyT(func(v DashboardTimeRangeDrillDownFilter) DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityOutput)
}

type DashboardTimeRangeDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) ToDashboardTimeRangeDrillDownFilterPtrOutput() DashboardTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) ToDashboardTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) Elem() DashboardTimeRangeDrillDownFilterOutput {
	return o.ApplyT(func(v *DashboardTimeRangeDrillDownFilter) DashboardTimeRangeDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeDrillDownFilter
		return ret
	}).(DashboardTimeRangeDrillDownFilterOutput)
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeDrillDownFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) RangeMaximum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMaximum
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) RangeMinimum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMinimum
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeRangeDrillDownFilterPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeDrillDownFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

type DashboardTimeRangeFilter struct {
	Column                     DashboardColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *DashboardExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                               `pulumi:"filterId"`
	IncludeMaximum             *bool                                `pulumi:"includeMaximum"`
	IncludeMinimum             *bool                                `pulumi:"includeMinimum"`
	NullOption                 DashboardFilterNullOption            `pulumi:"nullOption"`
	RangeMaximumValue          *DashboardTimeRangeFilterValue       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          *DashboardTimeRangeFilterValue       `pulumi:"rangeMinimumValue"`
	TimeGranularity            *DashboardTimeGranularity            `pulumi:"timeGranularity"`
}

// DashboardTimeRangeFilterInput is an input type that accepts DashboardTimeRangeFilterArgs and DashboardTimeRangeFilterOutput values.
// You can construct a concrete instance of `DashboardTimeRangeFilterInput` via:
//
//	DashboardTimeRangeFilterArgs{...}
type DashboardTimeRangeFilterInput interface {
	pulumi.Input

	ToDashboardTimeRangeFilterOutput() DashboardTimeRangeFilterOutput
	ToDashboardTimeRangeFilterOutputWithContext(context.Context) DashboardTimeRangeFilterOutput
}

type DashboardTimeRangeFilterArgs struct {
	Column                     DashboardColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration DashboardExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                          `pulumi:"filterId"`
	IncludeMaximum             pulumi.BoolPtrInput                         `pulumi:"includeMaximum"`
	IncludeMinimum             pulumi.BoolPtrInput                         `pulumi:"includeMinimum"`
	NullOption                 DashboardFilterNullOptionInput              `pulumi:"nullOption"`
	RangeMaximumValue          DashboardTimeRangeFilterValuePtrInput       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          DashboardTimeRangeFilterValuePtrInput       `pulumi:"rangeMinimumValue"`
	TimeGranularity            DashboardTimeGranularityPtrInput            `pulumi:"timeGranularity"`
}

func (DashboardTimeRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeFilter)(nil)).Elem()
}

func (i DashboardTimeRangeFilterArgs) ToDashboardTimeRangeFilterOutput() DashboardTimeRangeFilterOutput {
	return i.ToDashboardTimeRangeFilterOutputWithContext(context.Background())
}

func (i DashboardTimeRangeFilterArgs) ToDashboardTimeRangeFilterOutputWithContext(ctx context.Context) DashboardTimeRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterOutput)
}

func (i DashboardTimeRangeFilterArgs) ToDashboardTimeRangeFilterPtrOutput() DashboardTimeRangeFilterPtrOutput {
	return i.ToDashboardTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeFilterArgs) ToDashboardTimeRangeFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterOutput).ToDashboardTimeRangeFilterPtrOutputWithContext(ctx)
}

// DashboardTimeRangeFilterPtrInput is an input type that accepts DashboardTimeRangeFilterArgs, DashboardTimeRangeFilterPtr and DashboardTimeRangeFilterPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeFilterPtrInput` via:
//
//	        DashboardTimeRangeFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardTimeRangeFilterPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeFilterPtrOutput() DashboardTimeRangeFilterPtrOutput
	ToDashboardTimeRangeFilterPtrOutputWithContext(context.Context) DashboardTimeRangeFilterPtrOutput
}

type dashboardTimeRangeFilterPtrType DashboardTimeRangeFilterArgs

func DashboardTimeRangeFilterPtr(v *DashboardTimeRangeFilterArgs) DashboardTimeRangeFilterPtrInput {
	return (*dashboardTimeRangeFilterPtrType)(v)
}

func (*dashboardTimeRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeFilter)(nil)).Elem()
}

func (i *dashboardTimeRangeFilterPtrType) ToDashboardTimeRangeFilterPtrOutput() DashboardTimeRangeFilterPtrOutput {
	return i.ToDashboardTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeFilterPtrType) ToDashboardTimeRangeFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterPtrOutput)
}

type DashboardTimeRangeFilterOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeFilter)(nil)).Elem()
}

func (o DashboardTimeRangeFilterOutput) ToDashboardTimeRangeFilterOutput() DashboardTimeRangeFilterOutput {
	return o
}

func (o DashboardTimeRangeFilterOutput) ToDashboardTimeRangeFilterOutputWithContext(ctx context.Context) DashboardTimeRangeFilterOutput {
	return o
}

func (o DashboardTimeRangeFilterOutput) ToDashboardTimeRangeFilterPtrOutput() DashboardTimeRangeFilterPtrOutput {
	return o.ToDashboardTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeFilterOutput) ToDashboardTimeRangeFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeFilter) *DashboardTimeRangeFilter {
		return &v
	}).(DashboardTimeRangeFilterPtrOutput)
}

func (o DashboardTimeRangeFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardTimeRangeFilterOutput) ExcludePeriodConfiguration() DashboardExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *DashboardExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(DashboardExcludePeriodConfigurationPtrOutput)
}

func (o DashboardTimeRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardTimeRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o DashboardTimeRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o DashboardTimeRangeFilterOutput) NullOption() DashboardFilterNullOptionOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) DashboardFilterNullOption { return v.NullOption }).(DashboardFilterNullOptionOutput)
}

func (o DashboardTimeRangeFilterOutput) RangeMaximumValue() DashboardTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *DashboardTimeRangeFilterValue { return v.RangeMaximumValue }).(DashboardTimeRangeFilterValuePtrOutput)
}

func (o DashboardTimeRangeFilterOutput) RangeMinimumValue() DashboardTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *DashboardTimeRangeFilterValue { return v.RangeMinimumValue }).(DashboardTimeRangeFilterValuePtrOutput)
}

func (o DashboardTimeRangeFilterOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilter) *DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

type DashboardTimeRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeFilter)(nil)).Elem()
}

func (o DashboardTimeRangeFilterPtrOutput) ToDashboardTimeRangeFilterPtrOutput() DashboardTimeRangeFilterPtrOutput {
	return o
}

func (o DashboardTimeRangeFilterPtrOutput) ToDashboardTimeRangeFilterPtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterPtrOutput {
	return o
}

func (o DashboardTimeRangeFilterPtrOutput) Elem() DashboardTimeRangeFilterOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) DashboardTimeRangeFilter {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeFilter
		return ret
	}).(DashboardTimeRangeFilterOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) ExcludePeriodConfiguration() DashboardExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(DashboardExcludePeriodConfigurationPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) NullOption() DashboardFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(DashboardFilterNullOptionPtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) RangeMaximumValue() DashboardTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximumValue
	}).(DashboardTimeRangeFilterValuePtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) RangeMinimumValue() DashboardTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimumValue
	}).(DashboardTimeRangeFilterValuePtrOutput)
}

func (o DashboardTimeRangeFilterPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

type DashboardTimeRangeFilterValue struct {
	Parameter   *string                            `pulumi:"parameter"`
	RollingDate *DashboardRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValue *string                            `pulumi:"staticValue"`
}

// DashboardTimeRangeFilterValueInput is an input type that accepts DashboardTimeRangeFilterValueArgs and DashboardTimeRangeFilterValueOutput values.
// You can construct a concrete instance of `DashboardTimeRangeFilterValueInput` via:
//
//	DashboardTimeRangeFilterValueArgs{...}
type DashboardTimeRangeFilterValueInput interface {
	pulumi.Input

	ToDashboardTimeRangeFilterValueOutput() DashboardTimeRangeFilterValueOutput
	ToDashboardTimeRangeFilterValueOutputWithContext(context.Context) DashboardTimeRangeFilterValueOutput
}

type DashboardTimeRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput                     `pulumi:"parameter"`
	RollingDate DashboardRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValue pulumi.StringPtrInput                     `pulumi:"staticValue"`
}

func (DashboardTimeRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeFilterValue)(nil)).Elem()
}

func (i DashboardTimeRangeFilterValueArgs) ToDashboardTimeRangeFilterValueOutput() DashboardTimeRangeFilterValueOutput {
	return i.ToDashboardTimeRangeFilterValueOutputWithContext(context.Background())
}

func (i DashboardTimeRangeFilterValueArgs) ToDashboardTimeRangeFilterValueOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterValueOutput)
}

func (i DashboardTimeRangeFilterValueArgs) ToDashboardTimeRangeFilterValuePtrOutput() DashboardTimeRangeFilterValuePtrOutput {
	return i.ToDashboardTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeFilterValueArgs) ToDashboardTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterValueOutput).ToDashboardTimeRangeFilterValuePtrOutputWithContext(ctx)
}

// DashboardTimeRangeFilterValuePtrInput is an input type that accepts DashboardTimeRangeFilterValueArgs, DashboardTimeRangeFilterValuePtr and DashboardTimeRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeFilterValuePtrInput` via:
//
//	        DashboardTimeRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type DashboardTimeRangeFilterValuePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeFilterValuePtrOutput() DashboardTimeRangeFilterValuePtrOutput
	ToDashboardTimeRangeFilterValuePtrOutputWithContext(context.Context) DashboardTimeRangeFilterValuePtrOutput
}

type dashboardTimeRangeFilterValuePtrType DashboardTimeRangeFilterValueArgs

func DashboardTimeRangeFilterValuePtr(v *DashboardTimeRangeFilterValueArgs) DashboardTimeRangeFilterValuePtrInput {
	return (*dashboardTimeRangeFilterValuePtrType)(v)
}

func (*dashboardTimeRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeFilterValue)(nil)).Elem()
}

func (i *dashboardTimeRangeFilterValuePtrType) ToDashboardTimeRangeFilterValuePtrOutput() DashboardTimeRangeFilterValuePtrOutput {
	return i.ToDashboardTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeFilterValuePtrType) ToDashboardTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeFilterValuePtrOutput)
}

type DashboardTimeRangeFilterValueOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeFilterValue)(nil)).Elem()
}

func (o DashboardTimeRangeFilterValueOutput) ToDashboardTimeRangeFilterValueOutput() DashboardTimeRangeFilterValueOutput {
	return o
}

func (o DashboardTimeRangeFilterValueOutput) ToDashboardTimeRangeFilterValueOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValueOutput {
	return o
}

func (o DashboardTimeRangeFilterValueOutput) ToDashboardTimeRangeFilterValuePtrOutput() DashboardTimeRangeFilterValuePtrOutput {
	return o.ToDashboardTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeFilterValueOutput) ToDashboardTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeFilterValue) *DashboardTimeRangeFilterValue {
		return &v
	}).(DashboardTimeRangeFilterValuePtrOutput)
}

func (o DashboardTimeRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o DashboardTimeRangeFilterValueOutput) RollingDate() DashboardRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilterValue) *DashboardRollingDateConfiguration { return v.RollingDate }).(DashboardRollingDateConfigurationPtrOutput)
}

func (o DashboardTimeRangeFilterValueOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeFilterValue) *string { return v.StaticValue }).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeFilterValue)(nil)).Elem()
}

func (o DashboardTimeRangeFilterValuePtrOutput) ToDashboardTimeRangeFilterValuePtrOutput() DashboardTimeRangeFilterValuePtrOutput {
	return o
}

func (o DashboardTimeRangeFilterValuePtrOutput) ToDashboardTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) DashboardTimeRangeFilterValuePtrOutput {
	return o
}

func (o DashboardTimeRangeFilterValuePtrOutput) Elem() DashboardTimeRangeFilterValueOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilterValue) DashboardTimeRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeFilterValue
		return ret
	}).(DashboardTimeRangeFilterValueOutput)
}

func (o DashboardTimeRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTimeRangeFilterValuePtrOutput) RollingDate() DashboardRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilterValue) *DashboardRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(DashboardRollingDateConfigurationPtrOutput)
}

func (o DashboardTimeRangeFilterValuePtrOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.StringPtrOutput)
}

type DashboardTooltipItem struct {
	ColumnTooltipItem *DashboardColumnTooltipItem `pulumi:"columnTooltipItem"`
	FieldTooltipItem  *DashboardFieldTooltipItem  `pulumi:"fieldTooltipItem"`
}

// DashboardTooltipItemInput is an input type that accepts DashboardTooltipItemArgs and DashboardTooltipItemOutput values.
// You can construct a concrete instance of `DashboardTooltipItemInput` via:
//
//	DashboardTooltipItemArgs{...}
type DashboardTooltipItemInput interface {
	pulumi.Input

	ToDashboardTooltipItemOutput() DashboardTooltipItemOutput
	ToDashboardTooltipItemOutputWithContext(context.Context) DashboardTooltipItemOutput
}

type DashboardTooltipItemArgs struct {
	ColumnTooltipItem DashboardColumnTooltipItemPtrInput `pulumi:"columnTooltipItem"`
	FieldTooltipItem  DashboardFieldTooltipItemPtrInput  `pulumi:"fieldTooltipItem"`
}

func (DashboardTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipItem)(nil)).Elem()
}

func (i DashboardTooltipItemArgs) ToDashboardTooltipItemOutput() DashboardTooltipItemOutput {
	return i.ToDashboardTooltipItemOutputWithContext(context.Background())
}

func (i DashboardTooltipItemArgs) ToDashboardTooltipItemOutputWithContext(ctx context.Context) DashboardTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTooltipItemOutput)
}

// DashboardTooltipItemArrayInput is an input type that accepts DashboardTooltipItemArray and DashboardTooltipItemArrayOutput values.
// You can construct a concrete instance of `DashboardTooltipItemArrayInput` via:
//
//	DashboardTooltipItemArray{ DashboardTooltipItemArgs{...} }
type DashboardTooltipItemArrayInput interface {
	pulumi.Input

	ToDashboardTooltipItemArrayOutput() DashboardTooltipItemArrayOutput
	ToDashboardTooltipItemArrayOutputWithContext(context.Context) DashboardTooltipItemArrayOutput
}

type DashboardTooltipItemArray []DashboardTooltipItemInput

func (DashboardTooltipItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTooltipItem)(nil)).Elem()
}

func (i DashboardTooltipItemArray) ToDashboardTooltipItemArrayOutput() DashboardTooltipItemArrayOutput {
	return i.ToDashboardTooltipItemArrayOutputWithContext(context.Background())
}

func (i DashboardTooltipItemArray) ToDashboardTooltipItemArrayOutputWithContext(ctx context.Context) DashboardTooltipItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTooltipItemArrayOutput)
}

type DashboardTooltipItemOutput struct{ *pulumi.OutputState }

func (DashboardTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipItem)(nil)).Elem()
}

func (o DashboardTooltipItemOutput) ToDashboardTooltipItemOutput() DashboardTooltipItemOutput {
	return o
}

func (o DashboardTooltipItemOutput) ToDashboardTooltipItemOutputWithContext(ctx context.Context) DashboardTooltipItemOutput {
	return o
}

func (o DashboardTooltipItemOutput) ColumnTooltipItem() DashboardColumnTooltipItemPtrOutput {
	return o.ApplyT(func(v DashboardTooltipItem) *DashboardColumnTooltipItem { return v.ColumnTooltipItem }).(DashboardColumnTooltipItemPtrOutput)
}

func (o DashboardTooltipItemOutput) FieldTooltipItem() DashboardFieldTooltipItemPtrOutput {
	return o.ApplyT(func(v DashboardTooltipItem) *DashboardFieldTooltipItem { return v.FieldTooltipItem }).(DashboardFieldTooltipItemPtrOutput)
}

type DashboardTooltipItemArrayOutput struct{ *pulumi.OutputState }

func (DashboardTooltipItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTooltipItem)(nil)).Elem()
}

func (o DashboardTooltipItemArrayOutput) ToDashboardTooltipItemArrayOutput() DashboardTooltipItemArrayOutput {
	return o
}

func (o DashboardTooltipItemArrayOutput) ToDashboardTooltipItemArrayOutputWithContext(ctx context.Context) DashboardTooltipItemArrayOutput {
	return o
}

func (o DashboardTooltipItemArrayOutput) Index(i pulumi.IntInput) DashboardTooltipItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTooltipItem {
		return vs[0].([]DashboardTooltipItem)[vs[1].(int)]
	}).(DashboardTooltipItemOutput)
}

type DashboardTooltipOptions struct {
	FieldBasedTooltip   *DashboardFieldBasedTooltip   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType *DashboardSelectedTooltipType `pulumi:"selectedTooltipType"`
	TooltipVisibility   *DashboardVisibility          `pulumi:"tooltipVisibility"`
}

// DashboardTooltipOptionsInput is an input type that accepts DashboardTooltipOptionsArgs and DashboardTooltipOptionsOutput values.
// You can construct a concrete instance of `DashboardTooltipOptionsInput` via:
//
//	DashboardTooltipOptionsArgs{...}
type DashboardTooltipOptionsInput interface {
	pulumi.Input

	ToDashboardTooltipOptionsOutput() DashboardTooltipOptionsOutput
	ToDashboardTooltipOptionsOutputWithContext(context.Context) DashboardTooltipOptionsOutput
}

type DashboardTooltipOptionsArgs struct {
	FieldBasedTooltip   DashboardFieldBasedTooltipPtrInput   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType DashboardSelectedTooltipTypePtrInput `pulumi:"selectedTooltipType"`
	TooltipVisibility   DashboardVisibilityPtrInput          `pulumi:"tooltipVisibility"`
}

func (DashboardTooltipOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipOptions)(nil)).Elem()
}

func (i DashboardTooltipOptionsArgs) ToDashboardTooltipOptionsOutput() DashboardTooltipOptionsOutput {
	return i.ToDashboardTooltipOptionsOutputWithContext(context.Background())
}

func (i DashboardTooltipOptionsArgs) ToDashboardTooltipOptionsOutputWithContext(ctx context.Context) DashboardTooltipOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTooltipOptionsOutput)
}

func (i DashboardTooltipOptionsArgs) ToDashboardTooltipOptionsPtrOutput() DashboardTooltipOptionsPtrOutput {
	return i.ToDashboardTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTooltipOptionsArgs) ToDashboardTooltipOptionsPtrOutputWithContext(ctx context.Context) DashboardTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTooltipOptionsOutput).ToDashboardTooltipOptionsPtrOutputWithContext(ctx)
}

// DashboardTooltipOptionsPtrInput is an input type that accepts DashboardTooltipOptionsArgs, DashboardTooltipOptionsPtr and DashboardTooltipOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTooltipOptionsPtrInput` via:
//
//	        DashboardTooltipOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTooltipOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTooltipOptionsPtrOutput() DashboardTooltipOptionsPtrOutput
	ToDashboardTooltipOptionsPtrOutputWithContext(context.Context) DashboardTooltipOptionsPtrOutput
}

type dashboardTooltipOptionsPtrType DashboardTooltipOptionsArgs

func DashboardTooltipOptionsPtr(v *DashboardTooltipOptionsArgs) DashboardTooltipOptionsPtrInput {
	return (*dashboardTooltipOptionsPtrType)(v)
}

func (*dashboardTooltipOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTooltipOptions)(nil)).Elem()
}

func (i *dashboardTooltipOptionsPtrType) ToDashboardTooltipOptionsPtrOutput() DashboardTooltipOptionsPtrOutput {
	return i.ToDashboardTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTooltipOptionsPtrType) ToDashboardTooltipOptionsPtrOutputWithContext(ctx context.Context) DashboardTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTooltipOptionsPtrOutput)
}

type DashboardTooltipOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTooltipOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTooltipOptions)(nil)).Elem()
}

func (o DashboardTooltipOptionsOutput) ToDashboardTooltipOptionsOutput() DashboardTooltipOptionsOutput {
	return o
}

func (o DashboardTooltipOptionsOutput) ToDashboardTooltipOptionsOutputWithContext(ctx context.Context) DashboardTooltipOptionsOutput {
	return o
}

func (o DashboardTooltipOptionsOutput) ToDashboardTooltipOptionsPtrOutput() DashboardTooltipOptionsPtrOutput {
	return o.ToDashboardTooltipOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTooltipOptionsOutput) ToDashboardTooltipOptionsPtrOutputWithContext(ctx context.Context) DashboardTooltipOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTooltipOptions) *DashboardTooltipOptions {
		return &v
	}).(DashboardTooltipOptionsPtrOutput)
}

func (o DashboardTooltipOptionsOutput) FieldBasedTooltip() DashboardFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v DashboardTooltipOptions) *DashboardFieldBasedTooltip { return v.FieldBasedTooltip }).(DashboardFieldBasedTooltipPtrOutput)
}

func (o DashboardTooltipOptionsOutput) SelectedTooltipType() DashboardSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v DashboardTooltipOptions) *DashboardSelectedTooltipType { return v.SelectedTooltipType }).(DashboardSelectedTooltipTypePtrOutput)
}

func (o DashboardTooltipOptionsOutput) TooltipVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTooltipOptions) *DashboardVisibility { return v.TooltipVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTooltipOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTooltipOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTooltipOptions)(nil)).Elem()
}

func (o DashboardTooltipOptionsPtrOutput) ToDashboardTooltipOptionsPtrOutput() DashboardTooltipOptionsPtrOutput {
	return o
}

func (o DashboardTooltipOptionsPtrOutput) ToDashboardTooltipOptionsPtrOutputWithContext(ctx context.Context) DashboardTooltipOptionsPtrOutput {
	return o
}

func (o DashboardTooltipOptionsPtrOutput) Elem() DashboardTooltipOptionsOutput {
	return o.ApplyT(func(v *DashboardTooltipOptions) DashboardTooltipOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTooltipOptions
		return ret
	}).(DashboardTooltipOptionsOutput)
}

func (o DashboardTooltipOptionsPtrOutput) FieldBasedTooltip() DashboardFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v *DashboardTooltipOptions) *DashboardFieldBasedTooltip {
		if v == nil {
			return nil
		}
		return v.FieldBasedTooltip
	}).(DashboardFieldBasedTooltipPtrOutput)
}

func (o DashboardTooltipOptionsPtrOutput) SelectedTooltipType() DashboardSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v *DashboardTooltipOptions) *DashboardSelectedTooltipType {
		if v == nil {
			return nil
		}
		return v.SelectedTooltipType
	}).(DashboardSelectedTooltipTypePtrOutput)
}

func (o DashboardTooltipOptionsPtrOutput) TooltipVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTooltipOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.TooltipVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTopBottomFilter struct {
	AggregationSortConfigurations []DashboardAggregationSortConfiguration `pulumi:"aggregationSortConfigurations"`
	Column                        DashboardColumnIdentifier               `pulumi:"column"`
	FilterId                      string                                  `pulumi:"filterId"`
	Limit                         *float64                                `pulumi:"limit"`
	ParameterName                 *string                                 `pulumi:"parameterName"`
	TimeGranularity               *DashboardTimeGranularity               `pulumi:"timeGranularity"`
}

// DashboardTopBottomFilterInput is an input type that accepts DashboardTopBottomFilterArgs and DashboardTopBottomFilterOutput values.
// You can construct a concrete instance of `DashboardTopBottomFilterInput` via:
//
//	DashboardTopBottomFilterArgs{...}
type DashboardTopBottomFilterInput interface {
	pulumi.Input

	ToDashboardTopBottomFilterOutput() DashboardTopBottomFilterOutput
	ToDashboardTopBottomFilterOutputWithContext(context.Context) DashboardTopBottomFilterOutput
}

type DashboardTopBottomFilterArgs struct {
	AggregationSortConfigurations DashboardAggregationSortConfigurationArrayInput `pulumi:"aggregationSortConfigurations"`
	Column                        DashboardColumnIdentifierInput                  `pulumi:"column"`
	FilterId                      pulumi.StringInput                              `pulumi:"filterId"`
	Limit                         pulumi.Float64PtrInput                          `pulumi:"limit"`
	ParameterName                 pulumi.StringPtrInput                           `pulumi:"parameterName"`
	TimeGranularity               DashboardTimeGranularityPtrInput                `pulumi:"timeGranularity"`
}

func (DashboardTopBottomFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomFilter)(nil)).Elem()
}

func (i DashboardTopBottomFilterArgs) ToDashboardTopBottomFilterOutput() DashboardTopBottomFilterOutput {
	return i.ToDashboardTopBottomFilterOutputWithContext(context.Background())
}

func (i DashboardTopBottomFilterArgs) ToDashboardTopBottomFilterOutputWithContext(ctx context.Context) DashboardTopBottomFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomFilterOutput)
}

func (i DashboardTopBottomFilterArgs) ToDashboardTopBottomFilterPtrOutput() DashboardTopBottomFilterPtrOutput {
	return i.ToDashboardTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i DashboardTopBottomFilterArgs) ToDashboardTopBottomFilterPtrOutputWithContext(ctx context.Context) DashboardTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomFilterOutput).ToDashboardTopBottomFilterPtrOutputWithContext(ctx)
}

// DashboardTopBottomFilterPtrInput is an input type that accepts DashboardTopBottomFilterArgs, DashboardTopBottomFilterPtr and DashboardTopBottomFilterPtrOutput values.
// You can construct a concrete instance of `DashboardTopBottomFilterPtrInput` via:
//
//	        DashboardTopBottomFilterArgs{...}
//
//	or:
//
//	        nil
type DashboardTopBottomFilterPtrInput interface {
	pulumi.Input

	ToDashboardTopBottomFilterPtrOutput() DashboardTopBottomFilterPtrOutput
	ToDashboardTopBottomFilterPtrOutputWithContext(context.Context) DashboardTopBottomFilterPtrOutput
}

type dashboardTopBottomFilterPtrType DashboardTopBottomFilterArgs

func DashboardTopBottomFilterPtr(v *DashboardTopBottomFilterArgs) DashboardTopBottomFilterPtrInput {
	return (*dashboardTopBottomFilterPtrType)(v)
}

func (*dashboardTopBottomFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomFilter)(nil)).Elem()
}

func (i *dashboardTopBottomFilterPtrType) ToDashboardTopBottomFilterPtrOutput() DashboardTopBottomFilterPtrOutput {
	return i.ToDashboardTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i *dashboardTopBottomFilterPtrType) ToDashboardTopBottomFilterPtrOutputWithContext(ctx context.Context) DashboardTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomFilterPtrOutput)
}

type DashboardTopBottomFilterOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomFilter)(nil)).Elem()
}

func (o DashboardTopBottomFilterOutput) ToDashboardTopBottomFilterOutput() DashboardTopBottomFilterOutput {
	return o
}

func (o DashboardTopBottomFilterOutput) ToDashboardTopBottomFilterOutputWithContext(ctx context.Context) DashboardTopBottomFilterOutput {
	return o
}

func (o DashboardTopBottomFilterOutput) ToDashboardTopBottomFilterPtrOutput() DashboardTopBottomFilterPtrOutput {
	return o.ToDashboardTopBottomFilterPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomFilterOutput) ToDashboardTopBottomFilterPtrOutputWithContext(ctx context.Context) DashboardTopBottomFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopBottomFilter) *DashboardTopBottomFilter {
		return &v
	}).(DashboardTopBottomFilterPtrOutput)
}

func (o DashboardTopBottomFilterOutput) AggregationSortConfigurations() DashboardAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) []DashboardAggregationSortConfiguration {
		return v.AggregationSortConfigurations
	}).(DashboardAggregationSortConfigurationArrayOutput)
}

func (o DashboardTopBottomFilterOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardTopBottomFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o DashboardTopBottomFilterOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) *float64 { return v.Limit }).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomFilterOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomFilter) *DashboardTimeGranularity { return v.TimeGranularity }).(DashboardTimeGranularityPtrOutput)
}

type DashboardTopBottomFilterPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomFilter)(nil)).Elem()
}

func (o DashboardTopBottomFilterPtrOutput) ToDashboardTopBottomFilterPtrOutput() DashboardTopBottomFilterPtrOutput {
	return o
}

func (o DashboardTopBottomFilterPtrOutput) ToDashboardTopBottomFilterPtrOutputWithContext(ctx context.Context) DashboardTopBottomFilterPtrOutput {
	return o
}

func (o DashboardTopBottomFilterPtrOutput) Elem() DashboardTopBottomFilterOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) DashboardTopBottomFilter {
		if v != nil {
			return *v
		}
		var ret DashboardTopBottomFilter
		return ret
	}).(DashboardTopBottomFilterOutput)
}

func (o DashboardTopBottomFilterPtrOutput) AggregationSortConfigurations() DashboardAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) []DashboardAggregationSortConfiguration {
		if v == nil {
			return nil
		}
		return v.AggregationSortConfigurations
	}).(DashboardAggregationSortConfigurationArrayOutput)
}

func (o DashboardTopBottomFilterPtrOutput) Column() DashboardColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) *DashboardColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(DashboardColumnIdentifierPtrOutput)
}

func (o DashboardTopBottomFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomFilterPtrOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomFilterPtrOutput) TimeGranularity() DashboardTimeGranularityPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomFilter) *DashboardTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(DashboardTimeGranularityPtrOutput)
}

type DashboardTopBottomMoversComputation struct {
	Category      DashboardDimensionField           `pulumi:"category"`
	ComputationId string                            `pulumi:"computationId"`
	MoverSize     *float64                          `pulumi:"moverSize"`
	Name          *string                           `pulumi:"name"`
	SortOrder     *DashboardTopBottomSortOrder      `pulumi:"sortOrder"`
	Time          DashboardDimensionField           `pulumi:"time"`
	Type          DashboardTopBottomComputationType `pulumi:"type"`
	Value         *DashboardMeasureField            `pulumi:"value"`
}

// DashboardTopBottomMoversComputationInput is an input type that accepts DashboardTopBottomMoversComputationArgs and DashboardTopBottomMoversComputationOutput values.
// You can construct a concrete instance of `DashboardTopBottomMoversComputationInput` via:
//
//	DashboardTopBottomMoversComputationArgs{...}
type DashboardTopBottomMoversComputationInput interface {
	pulumi.Input

	ToDashboardTopBottomMoversComputationOutput() DashboardTopBottomMoversComputationOutput
	ToDashboardTopBottomMoversComputationOutputWithContext(context.Context) DashboardTopBottomMoversComputationOutput
}

type DashboardTopBottomMoversComputationArgs struct {
	Category      DashboardDimensionFieldInput           `pulumi:"category"`
	ComputationId pulumi.StringInput                     `pulumi:"computationId"`
	MoverSize     pulumi.Float64PtrInput                 `pulumi:"moverSize"`
	Name          pulumi.StringPtrInput                  `pulumi:"name"`
	SortOrder     DashboardTopBottomSortOrderPtrInput    `pulumi:"sortOrder"`
	Time          DashboardDimensionFieldInput           `pulumi:"time"`
	Type          DashboardTopBottomComputationTypeInput `pulumi:"type"`
	Value         DashboardMeasureFieldPtrInput          `pulumi:"value"`
}

func (DashboardTopBottomMoversComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomMoversComputation)(nil)).Elem()
}

func (i DashboardTopBottomMoversComputationArgs) ToDashboardTopBottomMoversComputationOutput() DashboardTopBottomMoversComputationOutput {
	return i.ToDashboardTopBottomMoversComputationOutputWithContext(context.Background())
}

func (i DashboardTopBottomMoversComputationArgs) ToDashboardTopBottomMoversComputationOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomMoversComputationOutput)
}

func (i DashboardTopBottomMoversComputationArgs) ToDashboardTopBottomMoversComputationPtrOutput() DashboardTopBottomMoversComputationPtrOutput {
	return i.ToDashboardTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i DashboardTopBottomMoversComputationArgs) ToDashboardTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomMoversComputationOutput).ToDashboardTopBottomMoversComputationPtrOutputWithContext(ctx)
}

// DashboardTopBottomMoversComputationPtrInput is an input type that accepts DashboardTopBottomMoversComputationArgs, DashboardTopBottomMoversComputationPtr and DashboardTopBottomMoversComputationPtrOutput values.
// You can construct a concrete instance of `DashboardTopBottomMoversComputationPtrInput` via:
//
//	        DashboardTopBottomMoversComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardTopBottomMoversComputationPtrInput interface {
	pulumi.Input

	ToDashboardTopBottomMoversComputationPtrOutput() DashboardTopBottomMoversComputationPtrOutput
	ToDashboardTopBottomMoversComputationPtrOutputWithContext(context.Context) DashboardTopBottomMoversComputationPtrOutput
}

type dashboardTopBottomMoversComputationPtrType DashboardTopBottomMoversComputationArgs

func DashboardTopBottomMoversComputationPtr(v *DashboardTopBottomMoversComputationArgs) DashboardTopBottomMoversComputationPtrInput {
	return (*dashboardTopBottomMoversComputationPtrType)(v)
}

func (*dashboardTopBottomMoversComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomMoversComputation)(nil)).Elem()
}

func (i *dashboardTopBottomMoversComputationPtrType) ToDashboardTopBottomMoversComputationPtrOutput() DashboardTopBottomMoversComputationPtrOutput {
	return i.ToDashboardTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardTopBottomMoversComputationPtrType) ToDashboardTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomMoversComputationPtrOutput)
}

type DashboardTopBottomMoversComputationOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomMoversComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomMoversComputation)(nil)).Elem()
}

func (o DashboardTopBottomMoversComputationOutput) ToDashboardTopBottomMoversComputationOutput() DashboardTopBottomMoversComputationOutput {
	return o
}

func (o DashboardTopBottomMoversComputationOutput) ToDashboardTopBottomMoversComputationOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationOutput {
	return o
}

func (o DashboardTopBottomMoversComputationOutput) ToDashboardTopBottomMoversComputationPtrOutput() DashboardTopBottomMoversComputationPtrOutput {
	return o.ToDashboardTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomMoversComputationOutput) ToDashboardTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopBottomMoversComputation) *DashboardTopBottomMoversComputation {
		return &v
	}).(DashboardTopBottomMoversComputationPtrOutput)
}

func (o DashboardTopBottomMoversComputationOutput) Category() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) DashboardDimensionField { return v.Category }).(DashboardDimensionFieldOutput)
}

func (o DashboardTopBottomMoversComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardTopBottomMoversComputationOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) *float64 { return v.MoverSize }).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomMoversComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomMoversComputationOutput) SortOrder() DashboardTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) *DashboardTopBottomSortOrder { return v.SortOrder }).(DashboardTopBottomSortOrderPtrOutput)
}

func (o DashboardTopBottomMoversComputationOutput) Time() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) DashboardDimensionField { return v.Time }).(DashboardDimensionFieldOutput)
}

func (o DashboardTopBottomMoversComputationOutput) Type() DashboardTopBottomComputationTypeOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) DashboardTopBottomComputationType { return v.Type }).(DashboardTopBottomComputationTypeOutput)
}

func (o DashboardTopBottomMoversComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomMoversComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardTopBottomMoversComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomMoversComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomMoversComputation)(nil)).Elem()
}

func (o DashboardTopBottomMoversComputationPtrOutput) ToDashboardTopBottomMoversComputationPtrOutput() DashboardTopBottomMoversComputationPtrOutput {
	return o
}

func (o DashboardTopBottomMoversComputationPtrOutput) ToDashboardTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomMoversComputationPtrOutput {
	return o
}

func (o DashboardTopBottomMoversComputationPtrOutput) Elem() DashboardTopBottomMoversComputationOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) DashboardTopBottomMoversComputation {
		if v != nil {
			return *v
		}
		var ret DashboardTopBottomMoversComputation
		return ret
	}).(DashboardTopBottomMoversComputationOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) Category() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.MoverSize
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) SortOrder() DashboardTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *DashboardTopBottomSortOrder {
		if v == nil {
			return nil
		}
		return v.SortOrder
	}).(DashboardTopBottomSortOrderPtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) Time() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) Type() DashboardTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *DashboardTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DashboardTopBottomComputationTypePtrOutput)
}

func (o DashboardTopBottomMoversComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomMoversComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardTopBottomRankedComputation struct {
	Category      DashboardDimensionField           `pulumi:"category"`
	ComputationId string                            `pulumi:"computationId"`
	Name          *string                           `pulumi:"name"`
	ResultSize    *float64                          `pulumi:"resultSize"`
	Type          DashboardTopBottomComputationType `pulumi:"type"`
	Value         *DashboardMeasureField            `pulumi:"value"`
}

// DashboardTopBottomRankedComputationInput is an input type that accepts DashboardTopBottomRankedComputationArgs and DashboardTopBottomRankedComputationOutput values.
// You can construct a concrete instance of `DashboardTopBottomRankedComputationInput` via:
//
//	DashboardTopBottomRankedComputationArgs{...}
type DashboardTopBottomRankedComputationInput interface {
	pulumi.Input

	ToDashboardTopBottomRankedComputationOutput() DashboardTopBottomRankedComputationOutput
	ToDashboardTopBottomRankedComputationOutputWithContext(context.Context) DashboardTopBottomRankedComputationOutput
}

type DashboardTopBottomRankedComputationArgs struct {
	Category      DashboardDimensionFieldInput           `pulumi:"category"`
	ComputationId pulumi.StringInput                     `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                  `pulumi:"name"`
	ResultSize    pulumi.Float64PtrInput                 `pulumi:"resultSize"`
	Type          DashboardTopBottomComputationTypeInput `pulumi:"type"`
	Value         DashboardMeasureFieldPtrInput          `pulumi:"value"`
}

func (DashboardTopBottomRankedComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomRankedComputation)(nil)).Elem()
}

func (i DashboardTopBottomRankedComputationArgs) ToDashboardTopBottomRankedComputationOutput() DashboardTopBottomRankedComputationOutput {
	return i.ToDashboardTopBottomRankedComputationOutputWithContext(context.Background())
}

func (i DashboardTopBottomRankedComputationArgs) ToDashboardTopBottomRankedComputationOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomRankedComputationOutput)
}

func (i DashboardTopBottomRankedComputationArgs) ToDashboardTopBottomRankedComputationPtrOutput() DashboardTopBottomRankedComputationPtrOutput {
	return i.ToDashboardTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i DashboardTopBottomRankedComputationArgs) ToDashboardTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomRankedComputationOutput).ToDashboardTopBottomRankedComputationPtrOutputWithContext(ctx)
}

// DashboardTopBottomRankedComputationPtrInput is an input type that accepts DashboardTopBottomRankedComputationArgs, DashboardTopBottomRankedComputationPtr and DashboardTopBottomRankedComputationPtrOutput values.
// You can construct a concrete instance of `DashboardTopBottomRankedComputationPtrInput` via:
//
//	        DashboardTopBottomRankedComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardTopBottomRankedComputationPtrInput interface {
	pulumi.Input

	ToDashboardTopBottomRankedComputationPtrOutput() DashboardTopBottomRankedComputationPtrOutput
	ToDashboardTopBottomRankedComputationPtrOutputWithContext(context.Context) DashboardTopBottomRankedComputationPtrOutput
}

type dashboardTopBottomRankedComputationPtrType DashboardTopBottomRankedComputationArgs

func DashboardTopBottomRankedComputationPtr(v *DashboardTopBottomRankedComputationArgs) DashboardTopBottomRankedComputationPtrInput {
	return (*dashboardTopBottomRankedComputationPtrType)(v)
}

func (*dashboardTopBottomRankedComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomRankedComputation)(nil)).Elem()
}

func (i *dashboardTopBottomRankedComputationPtrType) ToDashboardTopBottomRankedComputationPtrOutput() DashboardTopBottomRankedComputationPtrOutput {
	return i.ToDashboardTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardTopBottomRankedComputationPtrType) ToDashboardTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopBottomRankedComputationPtrOutput)
}

type DashboardTopBottomRankedComputationOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomRankedComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopBottomRankedComputation)(nil)).Elem()
}

func (o DashboardTopBottomRankedComputationOutput) ToDashboardTopBottomRankedComputationOutput() DashboardTopBottomRankedComputationOutput {
	return o
}

func (o DashboardTopBottomRankedComputationOutput) ToDashboardTopBottomRankedComputationOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationOutput {
	return o
}

func (o DashboardTopBottomRankedComputationOutput) ToDashboardTopBottomRankedComputationPtrOutput() DashboardTopBottomRankedComputationPtrOutput {
	return o.ToDashboardTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (o DashboardTopBottomRankedComputationOutput) ToDashboardTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopBottomRankedComputation) *DashboardTopBottomRankedComputation {
		return &v
	}).(DashboardTopBottomRankedComputationPtrOutput)
}

func (o DashboardTopBottomRankedComputationOutput) Category() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) DashboardDimensionField { return v.Category }).(DashboardDimensionFieldOutput)
}

func (o DashboardTopBottomRankedComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardTopBottomRankedComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomRankedComputationOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) *float64 { return v.ResultSize }).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomRankedComputationOutput) Type() DashboardTopBottomComputationTypeOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) DashboardTopBottomComputationType { return v.Type }).(DashboardTopBottomComputationTypeOutput)
}

func (o DashboardTopBottomRankedComputationOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v DashboardTopBottomRankedComputation) *DashboardMeasureField { return v.Value }).(DashboardMeasureFieldPtrOutput)
}

type DashboardTopBottomRankedComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopBottomRankedComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopBottomRankedComputation)(nil)).Elem()
}

func (o DashboardTopBottomRankedComputationPtrOutput) ToDashboardTopBottomRankedComputationPtrOutput() DashboardTopBottomRankedComputationPtrOutput {
	return o
}

func (o DashboardTopBottomRankedComputationPtrOutput) ToDashboardTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) DashboardTopBottomRankedComputationPtrOutput {
	return o
}

func (o DashboardTopBottomRankedComputationPtrOutput) Elem() DashboardTopBottomRankedComputationOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) DashboardTopBottomRankedComputation {
		if v != nil {
			return *v
		}
		var ret DashboardTopBottomRankedComputation
		return ret
	}).(DashboardTopBottomRankedComputationOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) Category() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.ResultSize
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) Type() DashboardTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *DashboardTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DashboardTopBottomComputationTypePtrOutput)
}

func (o DashboardTopBottomRankedComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTopBottomRankedComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardTotalAggregationComputation struct {
	ComputationId string                `pulumi:"computationId"`
	Name          *string               `pulumi:"name"`
	Value         DashboardMeasureField `pulumi:"value"`
}

// DashboardTotalAggregationComputationInput is an input type that accepts DashboardTotalAggregationComputationArgs and DashboardTotalAggregationComputationOutput values.
// You can construct a concrete instance of `DashboardTotalAggregationComputationInput` via:
//
//	DashboardTotalAggregationComputationArgs{...}
type DashboardTotalAggregationComputationInput interface {
	pulumi.Input

	ToDashboardTotalAggregationComputationOutput() DashboardTotalAggregationComputationOutput
	ToDashboardTotalAggregationComputationOutputWithContext(context.Context) DashboardTotalAggregationComputationOutput
}

type DashboardTotalAggregationComputationArgs struct {
	ComputationId pulumi.StringInput         `pulumi:"computationId"`
	Name          pulumi.StringPtrInput      `pulumi:"name"`
	Value         DashboardMeasureFieldInput `pulumi:"value"`
}

func (DashboardTotalAggregationComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTotalAggregationComputation)(nil)).Elem()
}

func (i DashboardTotalAggregationComputationArgs) ToDashboardTotalAggregationComputationOutput() DashboardTotalAggregationComputationOutput {
	return i.ToDashboardTotalAggregationComputationOutputWithContext(context.Background())
}

func (i DashboardTotalAggregationComputationArgs) ToDashboardTotalAggregationComputationOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalAggregationComputationOutput)
}

func (i DashboardTotalAggregationComputationArgs) ToDashboardTotalAggregationComputationPtrOutput() DashboardTotalAggregationComputationPtrOutput {
	return i.ToDashboardTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i DashboardTotalAggregationComputationArgs) ToDashboardTotalAggregationComputationPtrOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalAggregationComputationOutput).ToDashboardTotalAggregationComputationPtrOutputWithContext(ctx)
}

// DashboardTotalAggregationComputationPtrInput is an input type that accepts DashboardTotalAggregationComputationArgs, DashboardTotalAggregationComputationPtr and DashboardTotalAggregationComputationPtrOutput values.
// You can construct a concrete instance of `DashboardTotalAggregationComputationPtrInput` via:
//
//	        DashboardTotalAggregationComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardTotalAggregationComputationPtrInput interface {
	pulumi.Input

	ToDashboardTotalAggregationComputationPtrOutput() DashboardTotalAggregationComputationPtrOutput
	ToDashboardTotalAggregationComputationPtrOutputWithContext(context.Context) DashboardTotalAggregationComputationPtrOutput
}

type dashboardTotalAggregationComputationPtrType DashboardTotalAggregationComputationArgs

func DashboardTotalAggregationComputationPtr(v *DashboardTotalAggregationComputationArgs) DashboardTotalAggregationComputationPtrInput {
	return (*dashboardTotalAggregationComputationPtrType)(v)
}

func (*dashboardTotalAggregationComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTotalAggregationComputation)(nil)).Elem()
}

func (i *dashboardTotalAggregationComputationPtrType) ToDashboardTotalAggregationComputationPtrOutput() DashboardTotalAggregationComputationPtrOutput {
	return i.ToDashboardTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardTotalAggregationComputationPtrType) ToDashboardTotalAggregationComputationPtrOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalAggregationComputationPtrOutput)
}

type DashboardTotalAggregationComputationOutput struct{ *pulumi.OutputState }

func (DashboardTotalAggregationComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTotalAggregationComputation)(nil)).Elem()
}

func (o DashboardTotalAggregationComputationOutput) ToDashboardTotalAggregationComputationOutput() DashboardTotalAggregationComputationOutput {
	return o
}

func (o DashboardTotalAggregationComputationOutput) ToDashboardTotalAggregationComputationOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationOutput {
	return o
}

func (o DashboardTotalAggregationComputationOutput) ToDashboardTotalAggregationComputationPtrOutput() DashboardTotalAggregationComputationPtrOutput {
	return o.ToDashboardTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (o DashboardTotalAggregationComputationOutput) ToDashboardTotalAggregationComputationPtrOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTotalAggregationComputation) *DashboardTotalAggregationComputation {
		return &v
	}).(DashboardTotalAggregationComputationPtrOutput)
}

func (o DashboardTotalAggregationComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTotalAggregationComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardTotalAggregationComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTotalAggregationComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DashboardTotalAggregationComputationOutput) Value() DashboardMeasureFieldOutput {
	return o.ApplyT(func(v DashboardTotalAggregationComputation) DashboardMeasureField { return v.Value }).(DashboardMeasureFieldOutput)
}

type DashboardTotalAggregationComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTotalAggregationComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTotalAggregationComputation)(nil)).Elem()
}

func (o DashboardTotalAggregationComputationPtrOutput) ToDashboardTotalAggregationComputationPtrOutput() DashboardTotalAggregationComputationPtrOutput {
	return o
}

func (o DashboardTotalAggregationComputationPtrOutput) ToDashboardTotalAggregationComputationPtrOutputWithContext(ctx context.Context) DashboardTotalAggregationComputationPtrOutput {
	return o
}

func (o DashboardTotalAggregationComputationPtrOutput) Elem() DashboardTotalAggregationComputationOutput {
	return o.ApplyT(func(v *DashboardTotalAggregationComputation) DashboardTotalAggregationComputation {
		if v != nil {
			return *v
		}
		var ret DashboardTotalAggregationComputation
		return ret
	}).(DashboardTotalAggregationComputationOutput)
}

func (o DashboardTotalAggregationComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTotalAggregationComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTotalAggregationComputationPtrOutput) Value() DashboardMeasureFieldPtrOutput {
	return o.ApplyT(func(v *DashboardTotalAggregationComputation) *DashboardMeasureField {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(DashboardMeasureFieldPtrOutput)
}

type DashboardTotalOptions struct {
	CustomLabel      *string                           `pulumi:"customLabel"`
	Placement        *DashboardTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus     *DashboardTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalCellStyle   *DashboardTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility *DashboardVisibility              `pulumi:"totalsVisibility"`
}

// DashboardTotalOptionsInput is an input type that accepts DashboardTotalOptionsArgs and DashboardTotalOptionsOutput values.
// You can construct a concrete instance of `DashboardTotalOptionsInput` via:
//
//	DashboardTotalOptionsArgs{...}
type DashboardTotalOptionsInput interface {
	pulumi.Input

	ToDashboardTotalOptionsOutput() DashboardTotalOptionsOutput
	ToDashboardTotalOptionsOutputWithContext(context.Context) DashboardTotalOptionsOutput
}

type DashboardTotalOptionsArgs struct {
	CustomLabel      pulumi.StringPtrInput                    `pulumi:"customLabel"`
	Placement        DashboardTableTotalsPlacementPtrInput    `pulumi:"placement"`
	ScrollStatus     DashboardTableTotalsScrollStatusPtrInput `pulumi:"scrollStatus"`
	TotalCellStyle   DashboardTableCellStylePtrInput          `pulumi:"totalCellStyle"`
	TotalsVisibility DashboardVisibilityPtrInput              `pulumi:"totalsVisibility"`
}

func (DashboardTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTotalOptions)(nil)).Elem()
}

func (i DashboardTotalOptionsArgs) ToDashboardTotalOptionsOutput() DashboardTotalOptionsOutput {
	return i.ToDashboardTotalOptionsOutputWithContext(context.Background())
}

func (i DashboardTotalOptionsArgs) ToDashboardTotalOptionsOutputWithContext(ctx context.Context) DashboardTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalOptionsOutput)
}

func (i DashboardTotalOptionsArgs) ToDashboardTotalOptionsPtrOutput() DashboardTotalOptionsPtrOutput {
	return i.ToDashboardTotalOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTotalOptionsArgs) ToDashboardTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalOptionsOutput).ToDashboardTotalOptionsPtrOutputWithContext(ctx)
}

// DashboardTotalOptionsPtrInput is an input type that accepts DashboardTotalOptionsArgs, DashboardTotalOptionsPtr and DashboardTotalOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTotalOptionsPtrInput` via:
//
//	        DashboardTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTotalOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTotalOptionsPtrOutput() DashboardTotalOptionsPtrOutput
	ToDashboardTotalOptionsPtrOutputWithContext(context.Context) DashboardTotalOptionsPtrOutput
}

type dashboardTotalOptionsPtrType DashboardTotalOptionsArgs

func DashboardTotalOptionsPtr(v *DashboardTotalOptionsArgs) DashboardTotalOptionsPtrInput {
	return (*dashboardTotalOptionsPtrType)(v)
}

func (*dashboardTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTotalOptions)(nil)).Elem()
}

func (i *dashboardTotalOptionsPtrType) ToDashboardTotalOptionsPtrOutput() DashboardTotalOptionsPtrOutput {
	return i.ToDashboardTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTotalOptionsPtrType) ToDashboardTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTotalOptionsPtrOutput)
}

type DashboardTotalOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTotalOptions)(nil)).Elem()
}

func (o DashboardTotalOptionsOutput) ToDashboardTotalOptionsOutput() DashboardTotalOptionsOutput {
	return o
}

func (o DashboardTotalOptionsOutput) ToDashboardTotalOptionsOutputWithContext(ctx context.Context) DashboardTotalOptionsOutput {
	return o
}

func (o DashboardTotalOptionsOutput) ToDashboardTotalOptionsPtrOutput() DashboardTotalOptionsPtrOutput {
	return o.ToDashboardTotalOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTotalOptionsOutput) ToDashboardTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTotalOptions) *DashboardTotalOptions {
		return &v
	}).(DashboardTotalOptionsPtrOutput)
}

func (o DashboardTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o DashboardTotalOptionsOutput) Placement() DashboardTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v DashboardTotalOptions) *DashboardTableTotalsPlacement { return v.Placement }).(DashboardTableTotalsPlacementPtrOutput)
}

func (o DashboardTotalOptionsOutput) ScrollStatus() DashboardTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v DashboardTotalOptions) *DashboardTableTotalsScrollStatus { return v.ScrollStatus }).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (o DashboardTotalOptionsOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v DashboardTotalOptions) *DashboardTableCellStyle { return v.TotalCellStyle }).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTotalOptionsOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTotalOptions) *DashboardVisibility { return v.TotalsVisibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTotalOptions)(nil)).Elem()
}

func (o DashboardTotalOptionsPtrOutput) ToDashboardTotalOptionsPtrOutput() DashboardTotalOptionsPtrOutput {
	return o
}

func (o DashboardTotalOptionsPtrOutput) ToDashboardTotalOptionsPtrOutputWithContext(ctx context.Context) DashboardTotalOptionsPtrOutput {
	return o
}

func (o DashboardTotalOptionsPtrOutput) Elem() DashboardTotalOptionsOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) DashboardTotalOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTotalOptions
		return ret
	}).(DashboardTotalOptionsOutput)
}

func (o DashboardTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o DashboardTotalOptionsPtrOutput) Placement() DashboardTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) *DashboardTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(DashboardTableTotalsPlacementPtrOutput)
}

func (o DashboardTotalOptionsPtrOutput) ScrollStatus() DashboardTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) *DashboardTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(DashboardTableTotalsScrollStatusPtrOutput)
}

func (o DashboardTotalOptionsPtrOutput) TotalCellStyle() DashboardTableCellStylePtrOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) *DashboardTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(DashboardTableCellStylePtrOutput)
}

func (o DashboardTotalOptionsPtrOutput) TotalsVisibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTotalOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardTreeMapAggregatedFieldWells struct {
	Colors []DashboardMeasureField   `pulumi:"colors"`
	Groups []DashboardDimensionField `pulumi:"groups"`
	Sizes  []DashboardMeasureField   `pulumi:"sizes"`
}

// DashboardTreeMapAggregatedFieldWellsInput is an input type that accepts DashboardTreeMapAggregatedFieldWellsArgs and DashboardTreeMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardTreeMapAggregatedFieldWellsInput` via:
//
//	DashboardTreeMapAggregatedFieldWellsArgs{...}
type DashboardTreeMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardTreeMapAggregatedFieldWellsOutput() DashboardTreeMapAggregatedFieldWellsOutput
	ToDashboardTreeMapAggregatedFieldWellsOutputWithContext(context.Context) DashboardTreeMapAggregatedFieldWellsOutput
}

type DashboardTreeMapAggregatedFieldWellsArgs struct {
	Colors DashboardMeasureFieldArrayInput   `pulumi:"colors"`
	Groups DashboardDimensionFieldArrayInput `pulumi:"groups"`
	Sizes  DashboardMeasureFieldArrayInput   `pulumi:"sizes"`
}

func (DashboardTreeMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardTreeMapAggregatedFieldWellsArgs) ToDashboardTreeMapAggregatedFieldWellsOutput() DashboardTreeMapAggregatedFieldWellsOutput {
	return i.ToDashboardTreeMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardTreeMapAggregatedFieldWellsArgs) ToDashboardTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapAggregatedFieldWellsOutput)
}

func (i DashboardTreeMapAggregatedFieldWellsArgs) ToDashboardTreeMapAggregatedFieldWellsPtrOutput() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardTreeMapAggregatedFieldWellsArgs) ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapAggregatedFieldWellsOutput).ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardTreeMapAggregatedFieldWellsPtrInput is an input type that accepts DashboardTreeMapAggregatedFieldWellsArgs, DashboardTreeMapAggregatedFieldWellsPtr and DashboardTreeMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardTreeMapAggregatedFieldWellsPtrInput` via:
//
//	        DashboardTreeMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardTreeMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardTreeMapAggregatedFieldWellsPtrOutput() DashboardTreeMapAggregatedFieldWellsPtrOutput
	ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardTreeMapAggregatedFieldWellsPtrOutput
}

type dashboardTreeMapAggregatedFieldWellsPtrType DashboardTreeMapAggregatedFieldWellsArgs

func DashboardTreeMapAggregatedFieldWellsPtr(v *DashboardTreeMapAggregatedFieldWellsArgs) DashboardTreeMapAggregatedFieldWellsPtrInput {
	return (*dashboardTreeMapAggregatedFieldWellsPtrType)(v)
}

func (*dashboardTreeMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardTreeMapAggregatedFieldWellsPtrType) ToDashboardTreeMapAggregatedFieldWellsPtrOutput() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardTreeMapAggregatedFieldWellsPtrType) ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapAggregatedFieldWellsPtrOutput)
}

type DashboardTreeMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) ToDashboardTreeMapAggregatedFieldWellsOutput() DashboardTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) ToDashboardTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) ToDashboardTreeMapAggregatedFieldWellsPtrOutput() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o.ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTreeMapAggregatedFieldWells) *DashboardTreeMapAggregatedFieldWells {
		return &v
	}).(DashboardTreeMapAggregatedFieldWellsPtrOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) Colors() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapAggregatedFieldWells) []DashboardMeasureField { return v.Colors }).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) Groups() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapAggregatedFieldWells) []DashboardDimensionField { return v.Groups }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsOutput) Sizes() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapAggregatedFieldWells) []DashboardMeasureField { return v.Sizes }).(DashboardMeasureFieldArrayOutput)
}

type DashboardTreeMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) ToDashboardTreeMapAggregatedFieldWellsPtrOutput() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) ToDashboardTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) Elem() DashboardTreeMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardTreeMapAggregatedFieldWells) DashboardTreeMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardTreeMapAggregatedFieldWells
		return ret
	}).(DashboardTreeMapAggregatedFieldWellsOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) Colors() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(DashboardMeasureFieldArrayOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) Groups() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardTreeMapAggregatedFieldWellsPtrOutput) Sizes() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Sizes
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardTreeMapConfiguration struct {
	ColorLabelOptions *DashboardChartAxisLabelOptions    `pulumi:"colorLabelOptions"`
	ColorScale        *DashboardColorScale               `pulumi:"colorScale"`
	DataLabels        *DashboardDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells        *DashboardTreeMapFieldWells        `pulumi:"fieldWells"`
	GroupLabelOptions *DashboardChartAxisLabelOptions    `pulumi:"groupLabelOptions"`
	Legend            *DashboardLegendOptions            `pulumi:"legend"`
	SizeLabelOptions  *DashboardChartAxisLabelOptions    `pulumi:"sizeLabelOptions"`
	SortConfiguration *DashboardTreeMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *DashboardTooltipOptions           `pulumi:"tooltip"`
}

// DashboardTreeMapConfigurationInput is an input type that accepts DashboardTreeMapConfigurationArgs and DashboardTreeMapConfigurationOutput values.
// You can construct a concrete instance of `DashboardTreeMapConfigurationInput` via:
//
//	DashboardTreeMapConfigurationArgs{...}
type DashboardTreeMapConfigurationInput interface {
	pulumi.Input

	ToDashboardTreeMapConfigurationOutput() DashboardTreeMapConfigurationOutput
	ToDashboardTreeMapConfigurationOutputWithContext(context.Context) DashboardTreeMapConfigurationOutput
}

type DashboardTreeMapConfigurationArgs struct {
	ColorLabelOptions DashboardChartAxisLabelOptionsPtrInput    `pulumi:"colorLabelOptions"`
	ColorScale        DashboardColorScalePtrInput               `pulumi:"colorScale"`
	DataLabels        DashboardDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells        DashboardTreeMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	GroupLabelOptions DashboardChartAxisLabelOptionsPtrInput    `pulumi:"groupLabelOptions"`
	Legend            DashboardLegendOptionsPtrInput            `pulumi:"legend"`
	SizeLabelOptions  DashboardChartAxisLabelOptionsPtrInput    `pulumi:"sizeLabelOptions"`
	SortConfiguration DashboardTreeMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           DashboardTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (DashboardTreeMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapConfiguration)(nil)).Elem()
}

func (i DashboardTreeMapConfigurationArgs) ToDashboardTreeMapConfigurationOutput() DashboardTreeMapConfigurationOutput {
	return i.ToDashboardTreeMapConfigurationOutputWithContext(context.Background())
}

func (i DashboardTreeMapConfigurationArgs) ToDashboardTreeMapConfigurationOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapConfigurationOutput)
}

func (i DashboardTreeMapConfigurationArgs) ToDashboardTreeMapConfigurationPtrOutput() DashboardTreeMapConfigurationPtrOutput {
	return i.ToDashboardTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTreeMapConfigurationArgs) ToDashboardTreeMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapConfigurationOutput).ToDashboardTreeMapConfigurationPtrOutputWithContext(ctx)
}

// DashboardTreeMapConfigurationPtrInput is an input type that accepts DashboardTreeMapConfigurationArgs, DashboardTreeMapConfigurationPtr and DashboardTreeMapConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTreeMapConfigurationPtrInput` via:
//
//	        DashboardTreeMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTreeMapConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTreeMapConfigurationPtrOutput() DashboardTreeMapConfigurationPtrOutput
	ToDashboardTreeMapConfigurationPtrOutputWithContext(context.Context) DashboardTreeMapConfigurationPtrOutput
}

type dashboardTreeMapConfigurationPtrType DashboardTreeMapConfigurationArgs

func DashboardTreeMapConfigurationPtr(v *DashboardTreeMapConfigurationArgs) DashboardTreeMapConfigurationPtrInput {
	return (*dashboardTreeMapConfigurationPtrType)(v)
}

func (*dashboardTreeMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapConfiguration)(nil)).Elem()
}

func (i *dashboardTreeMapConfigurationPtrType) ToDashboardTreeMapConfigurationPtrOutput() DashboardTreeMapConfigurationPtrOutput {
	return i.ToDashboardTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTreeMapConfigurationPtrType) ToDashboardTreeMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapConfigurationPtrOutput)
}

type DashboardTreeMapConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapConfiguration)(nil)).Elem()
}

func (o DashboardTreeMapConfigurationOutput) ToDashboardTreeMapConfigurationOutput() DashboardTreeMapConfigurationOutput {
	return o
}

func (o DashboardTreeMapConfigurationOutput) ToDashboardTreeMapConfigurationOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationOutput {
	return o
}

func (o DashboardTreeMapConfigurationOutput) ToDashboardTreeMapConfigurationPtrOutput() DashboardTreeMapConfigurationPtrOutput {
	return o.ToDashboardTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTreeMapConfigurationOutput) ToDashboardTreeMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTreeMapConfiguration) *DashboardTreeMapConfiguration {
		return &v
	}).(DashboardTreeMapConfigurationPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions { return v.ColorLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) ColorScale() DashboardColorScalePtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardColorScale { return v.ColorScale }).(DashboardColorScalePtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) FieldWells() DashboardTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardTreeMapFieldWells { return v.FieldWells }).(DashboardTreeMapFieldWellsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) GroupLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions { return v.GroupLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) SizeLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions { return v.SizeLabelOptions }).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) SortConfiguration() DashboardTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardTreeMapSortConfiguration { return v.SortConfiguration }).(DashboardTreeMapSortConfigurationPtrOutput)
}

func (o DashboardTreeMapConfigurationOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapConfiguration) *DashboardTooltipOptions { return v.Tooltip }).(DashboardTooltipOptionsPtrOutput)
}

type DashboardTreeMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapConfiguration)(nil)).Elem()
}

func (o DashboardTreeMapConfigurationPtrOutput) ToDashboardTreeMapConfigurationPtrOutput() DashboardTreeMapConfigurationPtrOutput {
	return o
}

func (o DashboardTreeMapConfigurationPtrOutput) ToDashboardTreeMapConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapConfigurationPtrOutput {
	return o
}

func (o DashboardTreeMapConfigurationPtrOutput) Elem() DashboardTreeMapConfigurationOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) DashboardTreeMapConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTreeMapConfiguration
		return ret
	}).(DashboardTreeMapConfigurationOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) ColorLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) ColorScale() DashboardColorScalePtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(DashboardColorScalePtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) FieldWells() DashboardTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardTreeMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardTreeMapFieldWellsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) GroupLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.GroupLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) SizeLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SizeLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) SortConfiguration() DashboardTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardTreeMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardTreeMapSortConfigurationPtrOutput)
}

func (o DashboardTreeMapConfigurationPtrOutput) Tooltip() DashboardTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapConfiguration) *DashboardTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(DashboardTooltipOptionsPtrOutput)
}

type DashboardTreeMapFieldWells struct {
	TreeMapAggregatedFieldWells *DashboardTreeMapAggregatedFieldWells `pulumi:"treeMapAggregatedFieldWells"`
}

// DashboardTreeMapFieldWellsInput is an input type that accepts DashboardTreeMapFieldWellsArgs and DashboardTreeMapFieldWellsOutput values.
// You can construct a concrete instance of `DashboardTreeMapFieldWellsInput` via:
//
//	DashboardTreeMapFieldWellsArgs{...}
type DashboardTreeMapFieldWellsInput interface {
	pulumi.Input

	ToDashboardTreeMapFieldWellsOutput() DashboardTreeMapFieldWellsOutput
	ToDashboardTreeMapFieldWellsOutputWithContext(context.Context) DashboardTreeMapFieldWellsOutput
}

type DashboardTreeMapFieldWellsArgs struct {
	TreeMapAggregatedFieldWells DashboardTreeMapAggregatedFieldWellsPtrInput `pulumi:"treeMapAggregatedFieldWells"`
}

func (DashboardTreeMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapFieldWells)(nil)).Elem()
}

func (i DashboardTreeMapFieldWellsArgs) ToDashboardTreeMapFieldWellsOutput() DashboardTreeMapFieldWellsOutput {
	return i.ToDashboardTreeMapFieldWellsOutputWithContext(context.Background())
}

func (i DashboardTreeMapFieldWellsArgs) ToDashboardTreeMapFieldWellsOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapFieldWellsOutput)
}

func (i DashboardTreeMapFieldWellsArgs) ToDashboardTreeMapFieldWellsPtrOutput() DashboardTreeMapFieldWellsPtrOutput {
	return i.ToDashboardTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardTreeMapFieldWellsArgs) ToDashboardTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapFieldWellsOutput).ToDashboardTreeMapFieldWellsPtrOutputWithContext(ctx)
}

// DashboardTreeMapFieldWellsPtrInput is an input type that accepts DashboardTreeMapFieldWellsArgs, DashboardTreeMapFieldWellsPtr and DashboardTreeMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardTreeMapFieldWellsPtrInput` via:
//
//	        DashboardTreeMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardTreeMapFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardTreeMapFieldWellsPtrOutput() DashboardTreeMapFieldWellsPtrOutput
	ToDashboardTreeMapFieldWellsPtrOutputWithContext(context.Context) DashboardTreeMapFieldWellsPtrOutput
}

type dashboardTreeMapFieldWellsPtrType DashboardTreeMapFieldWellsArgs

func DashboardTreeMapFieldWellsPtr(v *DashboardTreeMapFieldWellsArgs) DashboardTreeMapFieldWellsPtrInput {
	return (*dashboardTreeMapFieldWellsPtrType)(v)
}

func (*dashboardTreeMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapFieldWells)(nil)).Elem()
}

func (i *dashboardTreeMapFieldWellsPtrType) ToDashboardTreeMapFieldWellsPtrOutput() DashboardTreeMapFieldWellsPtrOutput {
	return i.ToDashboardTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardTreeMapFieldWellsPtrType) ToDashboardTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapFieldWellsPtrOutput)
}

type DashboardTreeMapFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapFieldWells)(nil)).Elem()
}

func (o DashboardTreeMapFieldWellsOutput) ToDashboardTreeMapFieldWellsOutput() DashboardTreeMapFieldWellsOutput {
	return o
}

func (o DashboardTreeMapFieldWellsOutput) ToDashboardTreeMapFieldWellsOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsOutput {
	return o
}

func (o DashboardTreeMapFieldWellsOutput) ToDashboardTreeMapFieldWellsPtrOutput() DashboardTreeMapFieldWellsPtrOutput {
	return o.ToDashboardTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardTreeMapFieldWellsOutput) ToDashboardTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTreeMapFieldWells) *DashboardTreeMapFieldWells {
		return &v
	}).(DashboardTreeMapFieldWellsPtrOutput)
}

func (o DashboardTreeMapFieldWellsOutput) TreeMapAggregatedFieldWells() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapFieldWells) *DashboardTreeMapAggregatedFieldWells {
		return v.TreeMapAggregatedFieldWells
	}).(DashboardTreeMapAggregatedFieldWellsPtrOutput)
}

type DashboardTreeMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapFieldWells)(nil)).Elem()
}

func (o DashboardTreeMapFieldWellsPtrOutput) ToDashboardTreeMapFieldWellsPtrOutput() DashboardTreeMapFieldWellsPtrOutput {
	return o
}

func (o DashboardTreeMapFieldWellsPtrOutput) ToDashboardTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) DashboardTreeMapFieldWellsPtrOutput {
	return o
}

func (o DashboardTreeMapFieldWellsPtrOutput) Elem() DashboardTreeMapFieldWellsOutput {
	return o.ApplyT(func(v *DashboardTreeMapFieldWells) DashboardTreeMapFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardTreeMapFieldWells
		return ret
	}).(DashboardTreeMapFieldWellsOutput)
}

func (o DashboardTreeMapFieldWellsPtrOutput) TreeMapAggregatedFieldWells() DashboardTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapFieldWells) *DashboardTreeMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TreeMapAggregatedFieldWells
	}).(DashboardTreeMapAggregatedFieldWellsPtrOutput)
}

type DashboardTreeMapSortConfiguration struct {
	TreeMapGroupItemsLimitConfiguration *DashboardItemsLimitConfiguration `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         []DashboardFieldSortOptions       `pulumi:"treeMapSort"`
}

// DashboardTreeMapSortConfigurationInput is an input type that accepts DashboardTreeMapSortConfigurationArgs and DashboardTreeMapSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardTreeMapSortConfigurationInput` via:
//
//	DashboardTreeMapSortConfigurationArgs{...}
type DashboardTreeMapSortConfigurationInput interface {
	pulumi.Input

	ToDashboardTreeMapSortConfigurationOutput() DashboardTreeMapSortConfigurationOutput
	ToDashboardTreeMapSortConfigurationOutputWithContext(context.Context) DashboardTreeMapSortConfigurationOutput
}

type DashboardTreeMapSortConfigurationArgs struct {
	TreeMapGroupItemsLimitConfiguration DashboardItemsLimitConfigurationPtrInput `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         DashboardFieldSortOptionsArrayInput      `pulumi:"treeMapSort"`
}

func (DashboardTreeMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapSortConfiguration)(nil)).Elem()
}

func (i DashboardTreeMapSortConfigurationArgs) ToDashboardTreeMapSortConfigurationOutput() DashboardTreeMapSortConfigurationOutput {
	return i.ToDashboardTreeMapSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardTreeMapSortConfigurationArgs) ToDashboardTreeMapSortConfigurationOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapSortConfigurationOutput)
}

func (i DashboardTreeMapSortConfigurationArgs) ToDashboardTreeMapSortConfigurationPtrOutput() DashboardTreeMapSortConfigurationPtrOutput {
	return i.ToDashboardTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardTreeMapSortConfigurationArgs) ToDashboardTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapSortConfigurationOutput).ToDashboardTreeMapSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardTreeMapSortConfigurationPtrInput is an input type that accepts DashboardTreeMapSortConfigurationArgs, DashboardTreeMapSortConfigurationPtr and DashboardTreeMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardTreeMapSortConfigurationPtrInput` via:
//
//	        DashboardTreeMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardTreeMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardTreeMapSortConfigurationPtrOutput() DashboardTreeMapSortConfigurationPtrOutput
	ToDashboardTreeMapSortConfigurationPtrOutputWithContext(context.Context) DashboardTreeMapSortConfigurationPtrOutput
}

type dashboardTreeMapSortConfigurationPtrType DashboardTreeMapSortConfigurationArgs

func DashboardTreeMapSortConfigurationPtr(v *DashboardTreeMapSortConfigurationArgs) DashboardTreeMapSortConfigurationPtrInput {
	return (*dashboardTreeMapSortConfigurationPtrType)(v)
}

func (*dashboardTreeMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapSortConfiguration)(nil)).Elem()
}

func (i *dashboardTreeMapSortConfigurationPtrType) ToDashboardTreeMapSortConfigurationPtrOutput() DashboardTreeMapSortConfigurationPtrOutput {
	return i.ToDashboardTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardTreeMapSortConfigurationPtrType) ToDashboardTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapSortConfigurationPtrOutput)
}

type DashboardTreeMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapSortConfiguration)(nil)).Elem()
}

func (o DashboardTreeMapSortConfigurationOutput) ToDashboardTreeMapSortConfigurationOutput() DashboardTreeMapSortConfigurationOutput {
	return o
}

func (o DashboardTreeMapSortConfigurationOutput) ToDashboardTreeMapSortConfigurationOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationOutput {
	return o
}

func (o DashboardTreeMapSortConfigurationOutput) ToDashboardTreeMapSortConfigurationPtrOutput() DashboardTreeMapSortConfigurationPtrOutput {
	return o.ToDashboardTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardTreeMapSortConfigurationOutput) ToDashboardTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTreeMapSortConfiguration) *DashboardTreeMapSortConfiguration {
		return &v
	}).(DashboardTreeMapSortConfigurationPtrOutput)
}

func (o DashboardTreeMapSortConfigurationOutput) TreeMapGroupItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.TreeMapGroupItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardTreeMapSortConfigurationOutput) TreeMapSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapSortConfiguration) []DashboardFieldSortOptions { return v.TreeMapSort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardTreeMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapSortConfiguration)(nil)).Elem()
}

func (o DashboardTreeMapSortConfigurationPtrOutput) ToDashboardTreeMapSortConfigurationPtrOutput() DashboardTreeMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardTreeMapSortConfigurationPtrOutput) ToDashboardTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardTreeMapSortConfigurationPtrOutput {
	return o
}

func (o DashboardTreeMapSortConfigurationPtrOutput) Elem() DashboardTreeMapSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardTreeMapSortConfiguration) DashboardTreeMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardTreeMapSortConfiguration
		return ret
	}).(DashboardTreeMapSortConfigurationOutput)
}

func (o DashboardTreeMapSortConfigurationPtrOutput) TreeMapGroupItemsLimitConfiguration() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.TreeMapGroupItemsLimitConfiguration
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardTreeMapSortConfigurationPtrOutput) TreeMapSort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TreeMapSort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardTreeMapVisual struct {
	Actions            []DashboardVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *DashboardTreeMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                               `pulumi:"visualId"`
}

// DashboardTreeMapVisualInput is an input type that accepts DashboardTreeMapVisualArgs and DashboardTreeMapVisualOutput values.
// You can construct a concrete instance of `DashboardTreeMapVisualInput` via:
//
//	DashboardTreeMapVisualArgs{...}
type DashboardTreeMapVisualInput interface {
	pulumi.Input

	ToDashboardTreeMapVisualOutput() DashboardTreeMapVisualOutput
	ToDashboardTreeMapVisualOutputWithContext(context.Context) DashboardTreeMapVisualOutput
}

type DashboardTreeMapVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration DashboardTreeMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                          `pulumi:"visualId"`
}

func (DashboardTreeMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapVisual)(nil)).Elem()
}

func (i DashboardTreeMapVisualArgs) ToDashboardTreeMapVisualOutput() DashboardTreeMapVisualOutput {
	return i.ToDashboardTreeMapVisualOutputWithContext(context.Background())
}

func (i DashboardTreeMapVisualArgs) ToDashboardTreeMapVisualOutputWithContext(ctx context.Context) DashboardTreeMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapVisualOutput)
}

func (i DashboardTreeMapVisualArgs) ToDashboardTreeMapVisualPtrOutput() DashboardTreeMapVisualPtrOutput {
	return i.ToDashboardTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i DashboardTreeMapVisualArgs) ToDashboardTreeMapVisualPtrOutputWithContext(ctx context.Context) DashboardTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapVisualOutput).ToDashboardTreeMapVisualPtrOutputWithContext(ctx)
}

// DashboardTreeMapVisualPtrInput is an input type that accepts DashboardTreeMapVisualArgs, DashboardTreeMapVisualPtr and DashboardTreeMapVisualPtrOutput values.
// You can construct a concrete instance of `DashboardTreeMapVisualPtrInput` via:
//
//	        DashboardTreeMapVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardTreeMapVisualPtrInput interface {
	pulumi.Input

	ToDashboardTreeMapVisualPtrOutput() DashboardTreeMapVisualPtrOutput
	ToDashboardTreeMapVisualPtrOutputWithContext(context.Context) DashboardTreeMapVisualPtrOutput
}

type dashboardTreeMapVisualPtrType DashboardTreeMapVisualArgs

func DashboardTreeMapVisualPtr(v *DashboardTreeMapVisualArgs) DashboardTreeMapVisualPtrInput {
	return (*dashboardTreeMapVisualPtrType)(v)
}

func (*dashboardTreeMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapVisual)(nil)).Elem()
}

func (i *dashboardTreeMapVisualPtrType) ToDashboardTreeMapVisualPtrOutput() DashboardTreeMapVisualPtrOutput {
	return i.ToDashboardTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardTreeMapVisualPtrType) ToDashboardTreeMapVisualPtrOutputWithContext(ctx context.Context) DashboardTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTreeMapVisualPtrOutput)
}

type DashboardTreeMapVisualOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTreeMapVisual)(nil)).Elem()
}

func (o DashboardTreeMapVisualOutput) ToDashboardTreeMapVisualOutput() DashboardTreeMapVisualOutput {
	return o
}

func (o DashboardTreeMapVisualOutput) ToDashboardTreeMapVisualOutputWithContext(ctx context.Context) DashboardTreeMapVisualOutput {
	return o
}

func (o DashboardTreeMapVisualOutput) ToDashboardTreeMapVisualPtrOutput() DashboardTreeMapVisualPtrOutput {
	return o.ToDashboardTreeMapVisualPtrOutputWithContext(context.Background())
}

func (o DashboardTreeMapVisualOutput) ToDashboardTreeMapVisualPtrOutputWithContext(ctx context.Context) DashboardTreeMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTreeMapVisual) *DashboardTreeMapVisual {
		return &v
	}).(DashboardTreeMapVisualPtrOutput)
}

func (o DashboardTreeMapVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardTreeMapVisualOutput) ChartConfiguration() DashboardTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) *DashboardTreeMapConfiguration { return v.ChartConfiguration }).(DashboardTreeMapConfigurationPtrOutput)
}

func (o DashboardTreeMapVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardTreeMapVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardTreeMapVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardTreeMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTreeMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardTreeMapVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardTreeMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTreeMapVisual)(nil)).Elem()
}

func (o DashboardTreeMapVisualPtrOutput) ToDashboardTreeMapVisualPtrOutput() DashboardTreeMapVisualPtrOutput {
	return o
}

func (o DashboardTreeMapVisualPtrOutput) ToDashboardTreeMapVisualPtrOutputWithContext(ctx context.Context) DashboardTreeMapVisualPtrOutput {
	return o
}

func (o DashboardTreeMapVisualPtrOutput) Elem() DashboardTreeMapVisualOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) DashboardTreeMapVisual {
		if v != nil {
			return *v
		}
		var ret DashboardTreeMapVisual
		return ret
	}).(DashboardTreeMapVisualOutput)
}

func (o DashboardTreeMapVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardTreeMapVisualPtrOutput) ChartConfiguration() DashboardTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) *DashboardTreeMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardTreeMapConfigurationPtrOutput)
}

func (o DashboardTreeMapVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardTreeMapVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardTreeMapVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardTreeMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTreeMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardTrendArrowOptions struct {
	Visibility *DashboardVisibility `pulumi:"visibility"`
}

// DashboardTrendArrowOptionsInput is an input type that accepts DashboardTrendArrowOptionsArgs and DashboardTrendArrowOptionsOutput values.
// You can construct a concrete instance of `DashboardTrendArrowOptionsInput` via:
//
//	DashboardTrendArrowOptionsArgs{...}
type DashboardTrendArrowOptionsInput interface {
	pulumi.Input

	ToDashboardTrendArrowOptionsOutput() DashboardTrendArrowOptionsOutput
	ToDashboardTrendArrowOptionsOutputWithContext(context.Context) DashboardTrendArrowOptionsOutput
}

type DashboardTrendArrowOptionsArgs struct {
	Visibility DashboardVisibilityPtrInput `pulumi:"visibility"`
}

func (DashboardTrendArrowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTrendArrowOptions)(nil)).Elem()
}

func (i DashboardTrendArrowOptionsArgs) ToDashboardTrendArrowOptionsOutput() DashboardTrendArrowOptionsOutput {
	return i.ToDashboardTrendArrowOptionsOutputWithContext(context.Background())
}

func (i DashboardTrendArrowOptionsArgs) ToDashboardTrendArrowOptionsOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTrendArrowOptionsOutput)
}

func (i DashboardTrendArrowOptionsArgs) ToDashboardTrendArrowOptionsPtrOutput() DashboardTrendArrowOptionsPtrOutput {
	return i.ToDashboardTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardTrendArrowOptionsArgs) ToDashboardTrendArrowOptionsPtrOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTrendArrowOptionsOutput).ToDashboardTrendArrowOptionsPtrOutputWithContext(ctx)
}

// DashboardTrendArrowOptionsPtrInput is an input type that accepts DashboardTrendArrowOptionsArgs, DashboardTrendArrowOptionsPtr and DashboardTrendArrowOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardTrendArrowOptionsPtrInput` via:
//
//	        DashboardTrendArrowOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardTrendArrowOptionsPtrInput interface {
	pulumi.Input

	ToDashboardTrendArrowOptionsPtrOutput() DashboardTrendArrowOptionsPtrOutput
	ToDashboardTrendArrowOptionsPtrOutputWithContext(context.Context) DashboardTrendArrowOptionsPtrOutput
}

type dashboardTrendArrowOptionsPtrType DashboardTrendArrowOptionsArgs

func DashboardTrendArrowOptionsPtr(v *DashboardTrendArrowOptionsArgs) DashboardTrendArrowOptionsPtrInput {
	return (*dashboardTrendArrowOptionsPtrType)(v)
}

func (*dashboardTrendArrowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTrendArrowOptions)(nil)).Elem()
}

func (i *dashboardTrendArrowOptionsPtrType) ToDashboardTrendArrowOptionsPtrOutput() DashboardTrendArrowOptionsPtrOutput {
	return i.ToDashboardTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardTrendArrowOptionsPtrType) ToDashboardTrendArrowOptionsPtrOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTrendArrowOptionsPtrOutput)
}

type DashboardTrendArrowOptionsOutput struct{ *pulumi.OutputState }

func (DashboardTrendArrowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTrendArrowOptions)(nil)).Elem()
}

func (o DashboardTrendArrowOptionsOutput) ToDashboardTrendArrowOptionsOutput() DashboardTrendArrowOptionsOutput {
	return o
}

func (o DashboardTrendArrowOptionsOutput) ToDashboardTrendArrowOptionsOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsOutput {
	return o
}

func (o DashboardTrendArrowOptionsOutput) ToDashboardTrendArrowOptionsPtrOutput() DashboardTrendArrowOptionsPtrOutput {
	return o.ToDashboardTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardTrendArrowOptionsOutput) ToDashboardTrendArrowOptionsPtrOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTrendArrowOptions) *DashboardTrendArrowOptions {
		return &v
	}).(DashboardTrendArrowOptionsPtrOutput)
}

func (o DashboardTrendArrowOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardTrendArrowOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardTrendArrowOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardTrendArrowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTrendArrowOptions)(nil)).Elem()
}

func (o DashboardTrendArrowOptionsPtrOutput) ToDashboardTrendArrowOptionsPtrOutput() DashboardTrendArrowOptionsPtrOutput {
	return o
}

func (o DashboardTrendArrowOptionsPtrOutput) ToDashboardTrendArrowOptionsPtrOutputWithContext(ctx context.Context) DashboardTrendArrowOptionsPtrOutput {
	return o
}

func (o DashboardTrendArrowOptionsPtrOutput) Elem() DashboardTrendArrowOptionsOutput {
	return o.ApplyT(func(v *DashboardTrendArrowOptions) DashboardTrendArrowOptions {
		if v != nil {
			return *v
		}
		var ret DashboardTrendArrowOptions
		return ret
	}).(DashboardTrendArrowOptionsOutput)
}

func (o DashboardTrendArrowOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardTrendArrowOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardUnaggregatedField struct {
	Column              DashboardColumnIdentifier     `pulumi:"column"`
	FieldId             string                        `pulumi:"fieldId"`
	FormatConfiguration *DashboardFormatConfiguration `pulumi:"formatConfiguration"`
}

// DashboardUnaggregatedFieldInput is an input type that accepts DashboardUnaggregatedFieldArgs and DashboardUnaggregatedFieldOutput values.
// You can construct a concrete instance of `DashboardUnaggregatedFieldInput` via:
//
//	DashboardUnaggregatedFieldArgs{...}
type DashboardUnaggregatedFieldInput interface {
	pulumi.Input

	ToDashboardUnaggregatedFieldOutput() DashboardUnaggregatedFieldOutput
	ToDashboardUnaggregatedFieldOutputWithContext(context.Context) DashboardUnaggregatedFieldOutput
}

type DashboardUnaggregatedFieldArgs struct {
	Column              DashboardColumnIdentifierInput       `pulumi:"column"`
	FieldId             pulumi.StringInput                   `pulumi:"fieldId"`
	FormatConfiguration DashboardFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (DashboardUnaggregatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUnaggregatedField)(nil)).Elem()
}

func (i DashboardUnaggregatedFieldArgs) ToDashboardUnaggregatedFieldOutput() DashboardUnaggregatedFieldOutput {
	return i.ToDashboardUnaggregatedFieldOutputWithContext(context.Background())
}

func (i DashboardUnaggregatedFieldArgs) ToDashboardUnaggregatedFieldOutputWithContext(ctx context.Context) DashboardUnaggregatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardUnaggregatedFieldOutput)
}

// DashboardUnaggregatedFieldArrayInput is an input type that accepts DashboardUnaggregatedFieldArray and DashboardUnaggregatedFieldArrayOutput values.
// You can construct a concrete instance of `DashboardUnaggregatedFieldArrayInput` via:
//
//	DashboardUnaggregatedFieldArray{ DashboardUnaggregatedFieldArgs{...} }
type DashboardUnaggregatedFieldArrayInput interface {
	pulumi.Input

	ToDashboardUnaggregatedFieldArrayOutput() DashboardUnaggregatedFieldArrayOutput
	ToDashboardUnaggregatedFieldArrayOutputWithContext(context.Context) DashboardUnaggregatedFieldArrayOutput
}

type DashboardUnaggregatedFieldArray []DashboardUnaggregatedFieldInput

func (DashboardUnaggregatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardUnaggregatedField)(nil)).Elem()
}

func (i DashboardUnaggregatedFieldArray) ToDashboardUnaggregatedFieldArrayOutput() DashboardUnaggregatedFieldArrayOutput {
	return i.ToDashboardUnaggregatedFieldArrayOutputWithContext(context.Background())
}

func (i DashboardUnaggregatedFieldArray) ToDashboardUnaggregatedFieldArrayOutputWithContext(ctx context.Context) DashboardUnaggregatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardUnaggregatedFieldArrayOutput)
}

type DashboardUnaggregatedFieldOutput struct{ *pulumi.OutputState }

func (DashboardUnaggregatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUnaggregatedField)(nil)).Elem()
}

func (o DashboardUnaggregatedFieldOutput) ToDashboardUnaggregatedFieldOutput() DashboardUnaggregatedFieldOutput {
	return o
}

func (o DashboardUnaggregatedFieldOutput) ToDashboardUnaggregatedFieldOutputWithContext(ctx context.Context) DashboardUnaggregatedFieldOutput {
	return o
}

func (o DashboardUnaggregatedFieldOutput) Column() DashboardColumnIdentifierOutput {
	return o.ApplyT(func(v DashboardUnaggregatedField) DashboardColumnIdentifier { return v.Column }).(DashboardColumnIdentifierOutput)
}

func (o DashboardUnaggregatedFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardUnaggregatedField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o DashboardUnaggregatedFieldOutput) FormatConfiguration() DashboardFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardUnaggregatedField) *DashboardFormatConfiguration { return v.FormatConfiguration }).(DashboardFormatConfigurationPtrOutput)
}

type DashboardUnaggregatedFieldArrayOutput struct{ *pulumi.OutputState }

func (DashboardUnaggregatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardUnaggregatedField)(nil)).Elem()
}

func (o DashboardUnaggregatedFieldArrayOutput) ToDashboardUnaggregatedFieldArrayOutput() DashboardUnaggregatedFieldArrayOutput {
	return o
}

func (o DashboardUnaggregatedFieldArrayOutput) ToDashboardUnaggregatedFieldArrayOutputWithContext(ctx context.Context) DashboardUnaggregatedFieldArrayOutput {
	return o
}

func (o DashboardUnaggregatedFieldArrayOutput) Index(i pulumi.IntInput) DashboardUnaggregatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardUnaggregatedField {
		return vs[0].([]DashboardUnaggregatedField)[vs[1].(int)]
	}).(DashboardUnaggregatedFieldOutput)
}

type DashboardUniqueValuesComputation struct {
	Category      DashboardDimensionField `pulumi:"category"`
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
}

// DashboardUniqueValuesComputationInput is an input type that accepts DashboardUniqueValuesComputationArgs and DashboardUniqueValuesComputationOutput values.
// You can construct a concrete instance of `DashboardUniqueValuesComputationInput` via:
//
//	DashboardUniqueValuesComputationArgs{...}
type DashboardUniqueValuesComputationInput interface {
	pulumi.Input

	ToDashboardUniqueValuesComputationOutput() DashboardUniqueValuesComputationOutput
	ToDashboardUniqueValuesComputationOutputWithContext(context.Context) DashboardUniqueValuesComputationOutput
}

type DashboardUniqueValuesComputationArgs struct {
	Category      DashboardDimensionFieldInput `pulumi:"category"`
	ComputationId pulumi.StringInput           `pulumi:"computationId"`
	Name          pulumi.StringPtrInput        `pulumi:"name"`
}

func (DashboardUniqueValuesComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUniqueValuesComputation)(nil)).Elem()
}

func (i DashboardUniqueValuesComputationArgs) ToDashboardUniqueValuesComputationOutput() DashboardUniqueValuesComputationOutput {
	return i.ToDashboardUniqueValuesComputationOutputWithContext(context.Background())
}

func (i DashboardUniqueValuesComputationArgs) ToDashboardUniqueValuesComputationOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardUniqueValuesComputationOutput)
}

func (i DashboardUniqueValuesComputationArgs) ToDashboardUniqueValuesComputationPtrOutput() DashboardUniqueValuesComputationPtrOutput {
	return i.ToDashboardUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i DashboardUniqueValuesComputationArgs) ToDashboardUniqueValuesComputationPtrOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardUniqueValuesComputationOutput).ToDashboardUniqueValuesComputationPtrOutputWithContext(ctx)
}

// DashboardUniqueValuesComputationPtrInput is an input type that accepts DashboardUniqueValuesComputationArgs, DashboardUniqueValuesComputationPtr and DashboardUniqueValuesComputationPtrOutput values.
// You can construct a concrete instance of `DashboardUniqueValuesComputationPtrInput` via:
//
//	        DashboardUniqueValuesComputationArgs{...}
//
//	or:
//
//	        nil
type DashboardUniqueValuesComputationPtrInput interface {
	pulumi.Input

	ToDashboardUniqueValuesComputationPtrOutput() DashboardUniqueValuesComputationPtrOutput
	ToDashboardUniqueValuesComputationPtrOutputWithContext(context.Context) DashboardUniqueValuesComputationPtrOutput
}

type dashboardUniqueValuesComputationPtrType DashboardUniqueValuesComputationArgs

func DashboardUniqueValuesComputationPtr(v *DashboardUniqueValuesComputationArgs) DashboardUniqueValuesComputationPtrInput {
	return (*dashboardUniqueValuesComputationPtrType)(v)
}

func (*dashboardUniqueValuesComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardUniqueValuesComputation)(nil)).Elem()
}

func (i *dashboardUniqueValuesComputationPtrType) ToDashboardUniqueValuesComputationPtrOutput() DashboardUniqueValuesComputationPtrOutput {
	return i.ToDashboardUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i *dashboardUniqueValuesComputationPtrType) ToDashboardUniqueValuesComputationPtrOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardUniqueValuesComputationPtrOutput)
}

type DashboardUniqueValuesComputationOutput struct{ *pulumi.OutputState }

func (DashboardUniqueValuesComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardUniqueValuesComputation)(nil)).Elem()
}

func (o DashboardUniqueValuesComputationOutput) ToDashboardUniqueValuesComputationOutput() DashboardUniqueValuesComputationOutput {
	return o
}

func (o DashboardUniqueValuesComputationOutput) ToDashboardUniqueValuesComputationOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationOutput {
	return o
}

func (o DashboardUniqueValuesComputationOutput) ToDashboardUniqueValuesComputationPtrOutput() DashboardUniqueValuesComputationPtrOutput {
	return o.ToDashboardUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (o DashboardUniqueValuesComputationOutput) ToDashboardUniqueValuesComputationPtrOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardUniqueValuesComputation) *DashboardUniqueValuesComputation {
		return &v
	}).(DashboardUniqueValuesComputationPtrOutput)
}

func (o DashboardUniqueValuesComputationOutput) Category() DashboardDimensionFieldOutput {
	return o.ApplyT(func(v DashboardUniqueValuesComputation) DashboardDimensionField { return v.Category }).(DashboardDimensionFieldOutput)
}

func (o DashboardUniqueValuesComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardUniqueValuesComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o DashboardUniqueValuesComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardUniqueValuesComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DashboardUniqueValuesComputationPtrOutput struct{ *pulumi.OutputState }

func (DashboardUniqueValuesComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardUniqueValuesComputation)(nil)).Elem()
}

func (o DashboardUniqueValuesComputationPtrOutput) ToDashboardUniqueValuesComputationPtrOutput() DashboardUniqueValuesComputationPtrOutput {
	return o
}

func (o DashboardUniqueValuesComputationPtrOutput) ToDashboardUniqueValuesComputationPtrOutputWithContext(ctx context.Context) DashboardUniqueValuesComputationPtrOutput {
	return o
}

func (o DashboardUniqueValuesComputationPtrOutput) Elem() DashboardUniqueValuesComputationOutput {
	return o.ApplyT(func(v *DashboardUniqueValuesComputation) DashboardUniqueValuesComputation {
		if v != nil {
			return *v
		}
		var ret DashboardUniqueValuesComputation
		return ret
	}).(DashboardUniqueValuesComputationOutput)
}

func (o DashboardUniqueValuesComputationPtrOutput) Category() DashboardDimensionFieldPtrOutput {
	return o.ApplyT(func(v *DashboardUniqueValuesComputation) *DashboardDimensionField {
		if v == nil {
			return nil
		}
		return &v.Category
	}).(DashboardDimensionFieldPtrOutput)
}

func (o DashboardUniqueValuesComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o DashboardUniqueValuesComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type DashboardVersion struct {
	Arn             *string                  `pulumi:"arn"`
	CreatedTime     *string                  `pulumi:"createdTime"`
	DataSetArns     []string                 `pulumi:"dataSetArns"`
	Description     *string                  `pulumi:"description"`
	Errors          []DashboardError         `pulumi:"errors"`
	Sheets          []DashboardSheet         `pulumi:"sheets"`
	SourceEntityArn *string                  `pulumi:"sourceEntityArn"`
	Status          *DashboardResourceStatus `pulumi:"status"`
	ThemeArn        *string                  `pulumi:"themeArn"`
	VersionNumber   *float64                 `pulumi:"versionNumber"`
}

type DashboardVersionOutput struct{ *pulumi.OutputState }

func (DashboardVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVersion)(nil)).Elem()
}

func (o DashboardVersionOutput) ToDashboardVersionOutput() DashboardVersionOutput {
	return o
}

func (o DashboardVersionOutput) ToDashboardVersionOutputWithContext(ctx context.Context) DashboardVersionOutput {
	return o
}

func (o DashboardVersionOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o DashboardVersionOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o DashboardVersionOutput) DataSetArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardVersion) []string { return v.DataSetArns }).(pulumi.StringArrayOutput)
}

func (o DashboardVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DashboardVersionOutput) Errors() DashboardErrorArrayOutput {
	return o.ApplyT(func(v DashboardVersion) []DashboardError { return v.Errors }).(DashboardErrorArrayOutput)
}

func (o DashboardVersionOutput) Sheets() DashboardSheetArrayOutput {
	return o.ApplyT(func(v DashboardVersion) []DashboardSheet { return v.Sheets }).(DashboardSheetArrayOutput)
}

func (o DashboardVersionOutput) SourceEntityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *string { return v.SourceEntityArn }).(pulumi.StringPtrOutput)
}

func (o DashboardVersionOutput) Status() DashboardResourceStatusPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *DashboardResourceStatus { return v.Status }).(DashboardResourceStatusPtrOutput)
}

func (o DashboardVersionOutput) ThemeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVersion) *string { return v.ThemeArn }).(pulumi.StringPtrOutput)
}

func (o DashboardVersionOutput) VersionNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardVersion) *float64 { return v.VersionNumber }).(pulumi.Float64PtrOutput)
}

type DashboardVersionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVersion)(nil)).Elem()
}

func (o DashboardVersionPtrOutput) ToDashboardVersionPtrOutput() DashboardVersionPtrOutput {
	return o
}

func (o DashboardVersionPtrOutput) ToDashboardVersionPtrOutputWithContext(ctx context.Context) DashboardVersionPtrOutput {
	return o
}

func (o DashboardVersionPtrOutput) Elem() DashboardVersionOutput {
	return o.ApplyT(func(v *DashboardVersion) DashboardVersion {
		if v != nil {
			return *v
		}
		var ret DashboardVersion
		return ret
	}).(DashboardVersionOutput)
}

func (o DashboardVersionPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVersionPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVersionPtrOutput) DataSetArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DashboardVersion) []string {
		if v == nil {
			return nil
		}
		return v.DataSetArns
	}).(pulumi.StringArrayOutput)
}

func (o DashboardVersionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVersionPtrOutput) Errors() DashboardErrorArrayOutput {
	return o.ApplyT(func(v *DashboardVersion) []DashboardError {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(DashboardErrorArrayOutput)
}

func (o DashboardVersionPtrOutput) Sheets() DashboardSheetArrayOutput {
	return o.ApplyT(func(v *DashboardVersion) []DashboardSheet {
		if v == nil {
			return nil
		}
		return v.Sheets
	}).(DashboardSheetArrayOutput)
}

func (o DashboardVersionPtrOutput) SourceEntityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *string {
		if v == nil {
			return nil
		}
		return v.SourceEntityArn
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVersionPtrOutput) Status() DashboardResourceStatusPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *DashboardResourceStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DashboardResourceStatusPtrOutput)
}

func (o DashboardVersionPtrOutput) ThemeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *string {
		if v == nil {
			return nil
		}
		return v.ThemeArn
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVersionPtrOutput) VersionNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardVersion) *float64 {
		if v == nil {
			return nil
		}
		return v.VersionNumber
	}).(pulumi.Float64PtrOutput)
}

type DashboardVersionDefinition struct {
	AnalysisDefaults              *DashboardAnalysisDefaults              `pulumi:"analysisDefaults"`
	CalculatedFields              []DashboardCalculatedField              `pulumi:"calculatedFields"`
	ColumnConfigurations          []DashboardColumnConfiguration          `pulumi:"columnConfigurations"`
	DataSetIdentifierDeclarations []DashboardDataSetIdentifierDeclaration `pulumi:"dataSetIdentifierDeclarations"`
	FilterGroups                  []DashboardFilterGroup                  `pulumi:"filterGroups"`
	ParameterDeclarations         []DashboardParameterDeclaration         `pulumi:"parameterDeclarations"`
	Sheets                        []DashboardSheetDefinition              `pulumi:"sheets"`
}

// DashboardVersionDefinitionInput is an input type that accepts DashboardVersionDefinitionArgs and DashboardVersionDefinitionOutput values.
// You can construct a concrete instance of `DashboardVersionDefinitionInput` via:
//
//	DashboardVersionDefinitionArgs{...}
type DashboardVersionDefinitionInput interface {
	pulumi.Input

	ToDashboardVersionDefinitionOutput() DashboardVersionDefinitionOutput
	ToDashboardVersionDefinitionOutputWithContext(context.Context) DashboardVersionDefinitionOutput
}

type DashboardVersionDefinitionArgs struct {
	AnalysisDefaults              DashboardAnalysisDefaultsPtrInput               `pulumi:"analysisDefaults"`
	CalculatedFields              DashboardCalculatedFieldArrayInput              `pulumi:"calculatedFields"`
	ColumnConfigurations          DashboardColumnConfigurationArrayInput          `pulumi:"columnConfigurations"`
	DataSetIdentifierDeclarations DashboardDataSetIdentifierDeclarationArrayInput `pulumi:"dataSetIdentifierDeclarations"`
	FilterGroups                  DashboardFilterGroupArrayInput                  `pulumi:"filterGroups"`
	ParameterDeclarations         DashboardParameterDeclarationArrayInput         `pulumi:"parameterDeclarations"`
	Sheets                        DashboardSheetDefinitionArrayInput              `pulumi:"sheets"`
}

func (DashboardVersionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVersionDefinition)(nil)).Elem()
}

func (i DashboardVersionDefinitionArgs) ToDashboardVersionDefinitionOutput() DashboardVersionDefinitionOutput {
	return i.ToDashboardVersionDefinitionOutputWithContext(context.Background())
}

func (i DashboardVersionDefinitionArgs) ToDashboardVersionDefinitionOutputWithContext(ctx context.Context) DashboardVersionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVersionDefinitionOutput)
}

func (i DashboardVersionDefinitionArgs) ToDashboardVersionDefinitionPtrOutput() DashboardVersionDefinitionPtrOutput {
	return i.ToDashboardVersionDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVersionDefinitionArgs) ToDashboardVersionDefinitionPtrOutputWithContext(ctx context.Context) DashboardVersionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVersionDefinitionOutput).ToDashboardVersionDefinitionPtrOutputWithContext(ctx)
}

// DashboardVersionDefinitionPtrInput is an input type that accepts DashboardVersionDefinitionArgs, DashboardVersionDefinitionPtr and DashboardVersionDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVersionDefinitionPtrInput` via:
//
//	        DashboardVersionDefinitionArgs{...}
//
//	or:
//
//	        nil
type DashboardVersionDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVersionDefinitionPtrOutput() DashboardVersionDefinitionPtrOutput
	ToDashboardVersionDefinitionPtrOutputWithContext(context.Context) DashboardVersionDefinitionPtrOutput
}

type dashboardVersionDefinitionPtrType DashboardVersionDefinitionArgs

func DashboardVersionDefinitionPtr(v *DashboardVersionDefinitionArgs) DashboardVersionDefinitionPtrInput {
	return (*dashboardVersionDefinitionPtrType)(v)
}

func (*dashboardVersionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVersionDefinition)(nil)).Elem()
}

func (i *dashboardVersionDefinitionPtrType) ToDashboardVersionDefinitionPtrOutput() DashboardVersionDefinitionPtrOutput {
	return i.ToDashboardVersionDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVersionDefinitionPtrType) ToDashboardVersionDefinitionPtrOutputWithContext(ctx context.Context) DashboardVersionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVersionDefinitionPtrOutput)
}

type DashboardVersionDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVersionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVersionDefinition)(nil)).Elem()
}

func (o DashboardVersionDefinitionOutput) ToDashboardVersionDefinitionOutput() DashboardVersionDefinitionOutput {
	return o
}

func (o DashboardVersionDefinitionOutput) ToDashboardVersionDefinitionOutputWithContext(ctx context.Context) DashboardVersionDefinitionOutput {
	return o
}

func (o DashboardVersionDefinitionOutput) ToDashboardVersionDefinitionPtrOutput() DashboardVersionDefinitionPtrOutput {
	return o.ToDashboardVersionDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVersionDefinitionOutput) ToDashboardVersionDefinitionPtrOutputWithContext(ctx context.Context) DashboardVersionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVersionDefinition) *DashboardVersionDefinition {
		return &v
	}).(DashboardVersionDefinitionPtrOutput)
}

func (o DashboardVersionDefinitionOutput) AnalysisDefaults() DashboardAnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) *DashboardAnalysisDefaults { return v.AnalysisDefaults }).(DashboardAnalysisDefaultsPtrOutput)
}

func (o DashboardVersionDefinitionOutput) CalculatedFields() DashboardCalculatedFieldArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardCalculatedField { return v.CalculatedFields }).(DashboardCalculatedFieldArrayOutput)
}

func (o DashboardVersionDefinitionOutput) ColumnConfigurations() DashboardColumnConfigurationArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardColumnConfiguration { return v.ColumnConfigurations }).(DashboardColumnConfigurationArrayOutput)
}

func (o DashboardVersionDefinitionOutput) DataSetIdentifierDeclarations() DashboardDataSetIdentifierDeclarationArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardDataSetIdentifierDeclaration {
		return v.DataSetIdentifierDeclarations
	}).(DashboardDataSetIdentifierDeclarationArrayOutput)
}

func (o DashboardVersionDefinitionOutput) FilterGroups() DashboardFilterGroupArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardFilterGroup { return v.FilterGroups }).(DashboardFilterGroupArrayOutput)
}

func (o DashboardVersionDefinitionOutput) ParameterDeclarations() DashboardParameterDeclarationArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardParameterDeclaration { return v.ParameterDeclarations }).(DashboardParameterDeclarationArrayOutput)
}

func (o DashboardVersionDefinitionOutput) Sheets() DashboardSheetDefinitionArrayOutput {
	return o.ApplyT(func(v DashboardVersionDefinition) []DashboardSheetDefinition { return v.Sheets }).(DashboardSheetDefinitionArrayOutput)
}

type DashboardVersionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVersionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVersionDefinition)(nil)).Elem()
}

func (o DashboardVersionDefinitionPtrOutput) ToDashboardVersionDefinitionPtrOutput() DashboardVersionDefinitionPtrOutput {
	return o
}

func (o DashboardVersionDefinitionPtrOutput) ToDashboardVersionDefinitionPtrOutputWithContext(ctx context.Context) DashboardVersionDefinitionPtrOutput {
	return o
}

func (o DashboardVersionDefinitionPtrOutput) Elem() DashboardVersionDefinitionOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) DashboardVersionDefinition {
		if v != nil {
			return *v
		}
		var ret DashboardVersionDefinition
		return ret
	}).(DashboardVersionDefinitionOutput)
}

func (o DashboardVersionDefinitionPtrOutput) AnalysisDefaults() DashboardAnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) *DashboardAnalysisDefaults {
		if v == nil {
			return nil
		}
		return v.AnalysisDefaults
	}).(DashboardAnalysisDefaultsPtrOutput)
}

func (o DashboardVersionDefinitionPtrOutput) CalculatedFields() DashboardCalculatedFieldArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardCalculatedField {
		if v == nil {
			return nil
		}
		return v.CalculatedFields
	}).(DashboardCalculatedFieldArrayOutput)
}

func (o DashboardVersionDefinitionPtrOutput) ColumnConfigurations() DashboardColumnConfigurationArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardColumnConfiguration {
		if v == nil {
			return nil
		}
		return v.ColumnConfigurations
	}).(DashboardColumnConfigurationArrayOutput)
}

func (o DashboardVersionDefinitionPtrOutput) DataSetIdentifierDeclarations() DashboardDataSetIdentifierDeclarationArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardDataSetIdentifierDeclaration {
		if v == nil {
			return nil
		}
		return v.DataSetIdentifierDeclarations
	}).(DashboardDataSetIdentifierDeclarationArrayOutput)
}

func (o DashboardVersionDefinitionPtrOutput) FilterGroups() DashboardFilterGroupArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardFilterGroup {
		if v == nil {
			return nil
		}
		return v.FilterGroups
	}).(DashboardFilterGroupArrayOutput)
}

func (o DashboardVersionDefinitionPtrOutput) ParameterDeclarations() DashboardParameterDeclarationArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardParameterDeclaration {
		if v == nil {
			return nil
		}
		return v.ParameterDeclarations
	}).(DashboardParameterDeclarationArrayOutput)
}

func (o DashboardVersionDefinitionPtrOutput) Sheets() DashboardSheetDefinitionArrayOutput {
	return o.ApplyT(func(v *DashboardVersionDefinition) []DashboardSheetDefinition {
		if v == nil {
			return nil
		}
		return v.Sheets
	}).(DashboardSheetDefinitionArrayOutput)
}

type DashboardVisibleRangeOptions struct {
	PercentRange *DashboardPercentVisibleRange `pulumi:"percentRange"`
}

// DashboardVisibleRangeOptionsInput is an input type that accepts DashboardVisibleRangeOptionsArgs and DashboardVisibleRangeOptionsOutput values.
// You can construct a concrete instance of `DashboardVisibleRangeOptionsInput` via:
//
//	DashboardVisibleRangeOptionsArgs{...}
type DashboardVisibleRangeOptionsInput interface {
	pulumi.Input

	ToDashboardVisibleRangeOptionsOutput() DashboardVisibleRangeOptionsOutput
	ToDashboardVisibleRangeOptionsOutputWithContext(context.Context) DashboardVisibleRangeOptionsOutput
}

type DashboardVisibleRangeOptionsArgs struct {
	PercentRange DashboardPercentVisibleRangePtrInput `pulumi:"percentRange"`
}

func (DashboardVisibleRangeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisibleRangeOptions)(nil)).Elem()
}

func (i DashboardVisibleRangeOptionsArgs) ToDashboardVisibleRangeOptionsOutput() DashboardVisibleRangeOptionsOutput {
	return i.ToDashboardVisibleRangeOptionsOutputWithContext(context.Background())
}

func (i DashboardVisibleRangeOptionsArgs) ToDashboardVisibleRangeOptionsOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisibleRangeOptionsOutput)
}

func (i DashboardVisibleRangeOptionsArgs) ToDashboardVisibleRangeOptionsPtrOutput() DashboardVisibleRangeOptionsPtrOutput {
	return i.ToDashboardVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardVisibleRangeOptionsArgs) ToDashboardVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisibleRangeOptionsOutput).ToDashboardVisibleRangeOptionsPtrOutputWithContext(ctx)
}

// DashboardVisibleRangeOptionsPtrInput is an input type that accepts DashboardVisibleRangeOptionsArgs, DashboardVisibleRangeOptionsPtr and DashboardVisibleRangeOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardVisibleRangeOptionsPtrInput` via:
//
//	        DashboardVisibleRangeOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardVisibleRangeOptionsPtrInput interface {
	pulumi.Input

	ToDashboardVisibleRangeOptionsPtrOutput() DashboardVisibleRangeOptionsPtrOutput
	ToDashboardVisibleRangeOptionsPtrOutputWithContext(context.Context) DashboardVisibleRangeOptionsPtrOutput
}

type dashboardVisibleRangeOptionsPtrType DashboardVisibleRangeOptionsArgs

func DashboardVisibleRangeOptionsPtr(v *DashboardVisibleRangeOptionsArgs) DashboardVisibleRangeOptionsPtrInput {
	return (*dashboardVisibleRangeOptionsPtrType)(v)
}

func (*dashboardVisibleRangeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisibleRangeOptions)(nil)).Elem()
}

func (i *dashboardVisibleRangeOptionsPtrType) ToDashboardVisibleRangeOptionsPtrOutput() DashboardVisibleRangeOptionsPtrOutput {
	return i.ToDashboardVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardVisibleRangeOptionsPtrType) ToDashboardVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisibleRangeOptionsPtrOutput)
}

type DashboardVisibleRangeOptionsOutput struct{ *pulumi.OutputState }

func (DashboardVisibleRangeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisibleRangeOptions)(nil)).Elem()
}

func (o DashboardVisibleRangeOptionsOutput) ToDashboardVisibleRangeOptionsOutput() DashboardVisibleRangeOptionsOutput {
	return o
}

func (o DashboardVisibleRangeOptionsOutput) ToDashboardVisibleRangeOptionsOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsOutput {
	return o
}

func (o DashboardVisibleRangeOptionsOutput) ToDashboardVisibleRangeOptionsPtrOutput() DashboardVisibleRangeOptionsPtrOutput {
	return o.ToDashboardVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardVisibleRangeOptionsOutput) ToDashboardVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisibleRangeOptions) *DashboardVisibleRangeOptions {
		return &v
	}).(DashboardVisibleRangeOptionsPtrOutput)
}

func (o DashboardVisibleRangeOptionsOutput) PercentRange() DashboardPercentVisibleRangePtrOutput {
	return o.ApplyT(func(v DashboardVisibleRangeOptions) *DashboardPercentVisibleRange { return v.PercentRange }).(DashboardPercentVisibleRangePtrOutput)
}

type DashboardVisibleRangeOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisibleRangeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisibleRangeOptions)(nil)).Elem()
}

func (o DashboardVisibleRangeOptionsPtrOutput) ToDashboardVisibleRangeOptionsPtrOutput() DashboardVisibleRangeOptionsPtrOutput {
	return o
}

func (o DashboardVisibleRangeOptionsPtrOutput) ToDashboardVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) DashboardVisibleRangeOptionsPtrOutput {
	return o
}

func (o DashboardVisibleRangeOptionsPtrOutput) Elem() DashboardVisibleRangeOptionsOutput {
	return o.ApplyT(func(v *DashboardVisibleRangeOptions) DashboardVisibleRangeOptions {
		if v != nil {
			return *v
		}
		var ret DashboardVisibleRangeOptions
		return ret
	}).(DashboardVisibleRangeOptionsOutput)
}

func (o DashboardVisibleRangeOptionsPtrOutput) PercentRange() DashboardPercentVisibleRangePtrOutput {
	return o.ApplyT(func(v *DashboardVisibleRangeOptions) *DashboardPercentVisibleRange {
		if v == nil {
			return nil
		}
		return v.PercentRange
	}).(DashboardPercentVisibleRangePtrOutput)
}

type DashboardVisual struct {
	BarChartVisual      *DashboardBarChartVisual      `pulumi:"barChartVisual"`
	BoxPlotVisual       *DashboardBoxPlotVisual       `pulumi:"boxPlotVisual"`
	ComboChartVisual    *DashboardComboChartVisual    `pulumi:"comboChartVisual"`
	CustomContentVisual *DashboardCustomContentVisual `pulumi:"customContentVisual"`
	EmptyVisual         *DashboardEmptyVisual         `pulumi:"emptyVisual"`
	FilledMapVisual     *DashboardFilledMapVisual     `pulumi:"filledMapVisual"`
	FunnelChartVisual   *DashboardFunnelChartVisual   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    *DashboardGaugeChartVisual    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual *DashboardGeospatialMapVisual `pulumi:"geospatialMapVisual"`
	HeatMapVisual       *DashboardHeatMapVisual       `pulumi:"heatMapVisual"`
	HistogramVisual     *DashboardHistogramVisual     `pulumi:"histogramVisual"`
	InsightVisual       *DashboardInsightVisual       `pulumi:"insightVisual"`
	KPIVisual           *DashboardKPIVisual           `pulumi:"kPIVisual"`
	LineChartVisual     *DashboardLineChartVisual     `pulumi:"lineChartVisual"`
	PieChartVisual      *DashboardPieChartVisual      `pulumi:"pieChartVisual"`
	PivotTableVisual    *DashboardPivotTableVisual    `pulumi:"pivotTableVisual"`
	RadarChartVisual    *DashboardRadarChartVisual    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual *DashboardSankeyDiagramVisual `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   *DashboardScatterPlotVisual   `pulumi:"scatterPlotVisual"`
	TableVisual         *DashboardTableVisual         `pulumi:"tableVisual"`
	TreeMapVisual       *DashboardTreeMapVisual       `pulumi:"treeMapVisual"`
	WaterfallVisual     *DashboardWaterfallVisual     `pulumi:"waterfallVisual"`
	WordCloudVisual     *DashboardWordCloudVisual     `pulumi:"wordCloudVisual"`
}

// DashboardVisualInput is an input type that accepts DashboardVisualArgs and DashboardVisualOutput values.
// You can construct a concrete instance of `DashboardVisualInput` via:
//
//	DashboardVisualArgs{...}
type DashboardVisualInput interface {
	pulumi.Input

	ToDashboardVisualOutput() DashboardVisualOutput
	ToDashboardVisualOutputWithContext(context.Context) DashboardVisualOutput
}

type DashboardVisualArgs struct {
	BarChartVisual      DashboardBarChartVisualPtrInput      `pulumi:"barChartVisual"`
	BoxPlotVisual       DashboardBoxPlotVisualPtrInput       `pulumi:"boxPlotVisual"`
	ComboChartVisual    DashboardComboChartVisualPtrInput    `pulumi:"comboChartVisual"`
	CustomContentVisual DashboardCustomContentVisualPtrInput `pulumi:"customContentVisual"`
	EmptyVisual         DashboardEmptyVisualPtrInput         `pulumi:"emptyVisual"`
	FilledMapVisual     DashboardFilledMapVisualPtrInput     `pulumi:"filledMapVisual"`
	FunnelChartVisual   DashboardFunnelChartVisualPtrInput   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    DashboardGaugeChartVisualPtrInput    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual DashboardGeospatialMapVisualPtrInput `pulumi:"geospatialMapVisual"`
	HeatMapVisual       DashboardHeatMapVisualPtrInput       `pulumi:"heatMapVisual"`
	HistogramVisual     DashboardHistogramVisualPtrInput     `pulumi:"histogramVisual"`
	InsightVisual       DashboardInsightVisualPtrInput       `pulumi:"insightVisual"`
	KPIVisual           DashboardKPIVisualPtrInput           `pulumi:"kPIVisual"`
	LineChartVisual     DashboardLineChartVisualPtrInput     `pulumi:"lineChartVisual"`
	PieChartVisual      DashboardPieChartVisualPtrInput      `pulumi:"pieChartVisual"`
	PivotTableVisual    DashboardPivotTableVisualPtrInput    `pulumi:"pivotTableVisual"`
	RadarChartVisual    DashboardRadarChartVisualPtrInput    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual DashboardSankeyDiagramVisualPtrInput `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   DashboardScatterPlotVisualPtrInput   `pulumi:"scatterPlotVisual"`
	TableVisual         DashboardTableVisualPtrInput         `pulumi:"tableVisual"`
	TreeMapVisual       DashboardTreeMapVisualPtrInput       `pulumi:"treeMapVisual"`
	WaterfallVisual     DashboardWaterfallVisualPtrInput     `pulumi:"waterfallVisual"`
	WordCloudVisual     DashboardWordCloudVisualPtrInput     `pulumi:"wordCloudVisual"`
}

func (DashboardVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisual)(nil)).Elem()
}

func (i DashboardVisualArgs) ToDashboardVisualOutput() DashboardVisualOutput {
	return i.ToDashboardVisualOutputWithContext(context.Background())
}

func (i DashboardVisualArgs) ToDashboardVisualOutputWithContext(ctx context.Context) DashboardVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualOutput)
}

// DashboardVisualArrayInput is an input type that accepts DashboardVisualArray and DashboardVisualArrayOutput values.
// You can construct a concrete instance of `DashboardVisualArrayInput` via:
//
//	DashboardVisualArray{ DashboardVisualArgs{...} }
type DashboardVisualArrayInput interface {
	pulumi.Input

	ToDashboardVisualArrayOutput() DashboardVisualArrayOutput
	ToDashboardVisualArrayOutputWithContext(context.Context) DashboardVisualArrayOutput
}

type DashboardVisualArray []DashboardVisualInput

func (DashboardVisualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisual)(nil)).Elem()
}

func (i DashboardVisualArray) ToDashboardVisualArrayOutput() DashboardVisualArrayOutput {
	return i.ToDashboardVisualArrayOutputWithContext(context.Background())
}

func (i DashboardVisualArray) ToDashboardVisualArrayOutputWithContext(ctx context.Context) DashboardVisualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualArrayOutput)
}

type DashboardVisualOutput struct{ *pulumi.OutputState }

func (DashboardVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisual)(nil)).Elem()
}

func (o DashboardVisualOutput) ToDashboardVisualOutput() DashboardVisualOutput {
	return o
}

func (o DashboardVisualOutput) ToDashboardVisualOutputWithContext(ctx context.Context) DashboardVisualOutput {
	return o
}

func (o DashboardVisualOutput) BarChartVisual() DashboardBarChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardBarChartVisual { return v.BarChartVisual }).(DashboardBarChartVisualPtrOutput)
}

func (o DashboardVisualOutput) BoxPlotVisual() DashboardBoxPlotVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardBoxPlotVisual { return v.BoxPlotVisual }).(DashboardBoxPlotVisualPtrOutput)
}

func (o DashboardVisualOutput) ComboChartVisual() DashboardComboChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardComboChartVisual { return v.ComboChartVisual }).(DashboardComboChartVisualPtrOutput)
}

func (o DashboardVisualOutput) CustomContentVisual() DashboardCustomContentVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardCustomContentVisual { return v.CustomContentVisual }).(DashboardCustomContentVisualPtrOutput)
}

func (o DashboardVisualOutput) EmptyVisual() DashboardEmptyVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardEmptyVisual { return v.EmptyVisual }).(DashboardEmptyVisualPtrOutput)
}

func (o DashboardVisualOutput) FilledMapVisual() DashboardFilledMapVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardFilledMapVisual { return v.FilledMapVisual }).(DashboardFilledMapVisualPtrOutput)
}

func (o DashboardVisualOutput) FunnelChartVisual() DashboardFunnelChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardFunnelChartVisual { return v.FunnelChartVisual }).(DashboardFunnelChartVisualPtrOutput)
}

func (o DashboardVisualOutput) GaugeChartVisual() DashboardGaugeChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardGaugeChartVisual { return v.GaugeChartVisual }).(DashboardGaugeChartVisualPtrOutput)
}

func (o DashboardVisualOutput) GeospatialMapVisual() DashboardGeospatialMapVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardGeospatialMapVisual { return v.GeospatialMapVisual }).(DashboardGeospatialMapVisualPtrOutput)
}

func (o DashboardVisualOutput) HeatMapVisual() DashboardHeatMapVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardHeatMapVisual { return v.HeatMapVisual }).(DashboardHeatMapVisualPtrOutput)
}

func (o DashboardVisualOutput) HistogramVisual() DashboardHistogramVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardHistogramVisual { return v.HistogramVisual }).(DashboardHistogramVisualPtrOutput)
}

func (o DashboardVisualOutput) InsightVisual() DashboardInsightVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardInsightVisual { return v.InsightVisual }).(DashboardInsightVisualPtrOutput)
}

func (o DashboardVisualOutput) KPIVisual() DashboardKPIVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardKPIVisual { return v.KPIVisual }).(DashboardKPIVisualPtrOutput)
}

func (o DashboardVisualOutput) LineChartVisual() DashboardLineChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardLineChartVisual { return v.LineChartVisual }).(DashboardLineChartVisualPtrOutput)
}

func (o DashboardVisualOutput) PieChartVisual() DashboardPieChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardPieChartVisual { return v.PieChartVisual }).(DashboardPieChartVisualPtrOutput)
}

func (o DashboardVisualOutput) PivotTableVisual() DashboardPivotTableVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardPivotTableVisual { return v.PivotTableVisual }).(DashboardPivotTableVisualPtrOutput)
}

func (o DashboardVisualOutput) RadarChartVisual() DashboardRadarChartVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardRadarChartVisual { return v.RadarChartVisual }).(DashboardRadarChartVisualPtrOutput)
}

func (o DashboardVisualOutput) SankeyDiagramVisual() DashboardSankeyDiagramVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardSankeyDiagramVisual { return v.SankeyDiagramVisual }).(DashboardSankeyDiagramVisualPtrOutput)
}

func (o DashboardVisualOutput) ScatterPlotVisual() DashboardScatterPlotVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardScatterPlotVisual { return v.ScatterPlotVisual }).(DashboardScatterPlotVisualPtrOutput)
}

func (o DashboardVisualOutput) TableVisual() DashboardTableVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardTableVisual { return v.TableVisual }).(DashboardTableVisualPtrOutput)
}

func (o DashboardVisualOutput) TreeMapVisual() DashboardTreeMapVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardTreeMapVisual { return v.TreeMapVisual }).(DashboardTreeMapVisualPtrOutput)
}

func (o DashboardVisualOutput) WaterfallVisual() DashboardWaterfallVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardWaterfallVisual { return v.WaterfallVisual }).(DashboardWaterfallVisualPtrOutput)
}

func (o DashboardVisualOutput) WordCloudVisual() DashboardWordCloudVisualPtrOutput {
	return o.ApplyT(func(v DashboardVisual) *DashboardWordCloudVisual { return v.WordCloudVisual }).(DashboardWordCloudVisualPtrOutput)
}

type DashboardVisualArrayOutput struct{ *pulumi.OutputState }

func (DashboardVisualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisual)(nil)).Elem()
}

func (o DashboardVisualArrayOutput) ToDashboardVisualArrayOutput() DashboardVisualArrayOutput {
	return o
}

func (o DashboardVisualArrayOutput) ToDashboardVisualArrayOutputWithContext(ctx context.Context) DashboardVisualArrayOutput {
	return o
}

func (o DashboardVisualArrayOutput) Index(i pulumi.IntInput) DashboardVisualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardVisual {
		return vs[0].([]DashboardVisual)[vs[1].(int)]
	}).(DashboardVisualOutput)
}

type DashboardVisualAxisSortOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardVisualAxisSortOptionInput is an input type that accepts DashboardVisualAxisSortOptionArgs and DashboardVisualAxisSortOptionOutput values.
// You can construct a concrete instance of `DashboardVisualAxisSortOptionInput` via:
//
//	DashboardVisualAxisSortOptionArgs{...}
type DashboardVisualAxisSortOptionInput interface {
	pulumi.Input

	ToDashboardVisualAxisSortOptionOutput() DashboardVisualAxisSortOptionOutput
	ToDashboardVisualAxisSortOptionOutputWithContext(context.Context) DashboardVisualAxisSortOptionOutput
}

type DashboardVisualAxisSortOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardVisualAxisSortOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualAxisSortOption)(nil)).Elem()
}

func (i DashboardVisualAxisSortOptionArgs) ToDashboardVisualAxisSortOptionOutput() DashboardVisualAxisSortOptionOutput {
	return i.ToDashboardVisualAxisSortOptionOutputWithContext(context.Background())
}

func (i DashboardVisualAxisSortOptionArgs) ToDashboardVisualAxisSortOptionOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualAxisSortOptionOutput)
}

func (i DashboardVisualAxisSortOptionArgs) ToDashboardVisualAxisSortOptionPtrOutput() DashboardVisualAxisSortOptionPtrOutput {
	return i.ToDashboardVisualAxisSortOptionPtrOutputWithContext(context.Background())
}

func (i DashboardVisualAxisSortOptionArgs) ToDashboardVisualAxisSortOptionPtrOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualAxisSortOptionOutput).ToDashboardVisualAxisSortOptionPtrOutputWithContext(ctx)
}

// DashboardVisualAxisSortOptionPtrInput is an input type that accepts DashboardVisualAxisSortOptionArgs, DashboardVisualAxisSortOptionPtr and DashboardVisualAxisSortOptionPtrOutput values.
// You can construct a concrete instance of `DashboardVisualAxisSortOptionPtrInput` via:
//
//	        DashboardVisualAxisSortOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualAxisSortOptionPtrInput interface {
	pulumi.Input

	ToDashboardVisualAxisSortOptionPtrOutput() DashboardVisualAxisSortOptionPtrOutput
	ToDashboardVisualAxisSortOptionPtrOutputWithContext(context.Context) DashboardVisualAxisSortOptionPtrOutput
}

type dashboardVisualAxisSortOptionPtrType DashboardVisualAxisSortOptionArgs

func DashboardVisualAxisSortOptionPtr(v *DashboardVisualAxisSortOptionArgs) DashboardVisualAxisSortOptionPtrInput {
	return (*dashboardVisualAxisSortOptionPtrType)(v)
}

func (*dashboardVisualAxisSortOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualAxisSortOption)(nil)).Elem()
}

func (i *dashboardVisualAxisSortOptionPtrType) ToDashboardVisualAxisSortOptionPtrOutput() DashboardVisualAxisSortOptionPtrOutput {
	return i.ToDashboardVisualAxisSortOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardVisualAxisSortOptionPtrType) ToDashboardVisualAxisSortOptionPtrOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualAxisSortOptionPtrOutput)
}

type DashboardVisualAxisSortOptionOutput struct{ *pulumi.OutputState }

func (DashboardVisualAxisSortOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualAxisSortOption)(nil)).Elem()
}

func (o DashboardVisualAxisSortOptionOutput) ToDashboardVisualAxisSortOptionOutput() DashboardVisualAxisSortOptionOutput {
	return o
}

func (o DashboardVisualAxisSortOptionOutput) ToDashboardVisualAxisSortOptionOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionOutput {
	return o
}

func (o DashboardVisualAxisSortOptionOutput) ToDashboardVisualAxisSortOptionPtrOutput() DashboardVisualAxisSortOptionPtrOutput {
	return o.ToDashboardVisualAxisSortOptionPtrOutputWithContext(context.Background())
}

func (o DashboardVisualAxisSortOptionOutput) ToDashboardVisualAxisSortOptionPtrOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualAxisSortOption) *DashboardVisualAxisSortOption {
		return &v
	}).(DashboardVisualAxisSortOptionPtrOutput)
}

func (o DashboardVisualAxisSortOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardVisualAxisSortOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardVisualAxisSortOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualAxisSortOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualAxisSortOption)(nil)).Elem()
}

func (o DashboardVisualAxisSortOptionPtrOutput) ToDashboardVisualAxisSortOptionPtrOutput() DashboardVisualAxisSortOptionPtrOutput {
	return o
}

func (o DashboardVisualAxisSortOptionPtrOutput) ToDashboardVisualAxisSortOptionPtrOutputWithContext(ctx context.Context) DashboardVisualAxisSortOptionPtrOutput {
	return o
}

func (o DashboardVisualAxisSortOptionPtrOutput) Elem() DashboardVisualAxisSortOptionOutput {
	return o.ApplyT(func(v *DashboardVisualAxisSortOption) DashboardVisualAxisSortOption {
		if v != nil {
			return *v
		}
		var ret DashboardVisualAxisSortOption
		return ret
	}).(DashboardVisualAxisSortOptionOutput)
}

func (o DashboardVisualAxisSortOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardVisualAxisSortOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardVisualCustomAction struct {
	ActionOperations []DashboardVisualCustomActionOperation `pulumi:"actionOperations"`
	CustomActionId   string                                 `pulumi:"customActionId"`
	Name             string                                 `pulumi:"name"`
	Status           *DashboardWidgetStatus                 `pulumi:"status"`
	Trigger          DashboardVisualCustomActionTrigger     `pulumi:"trigger"`
}

// DashboardVisualCustomActionInput is an input type that accepts DashboardVisualCustomActionArgs and DashboardVisualCustomActionOutput values.
// You can construct a concrete instance of `DashboardVisualCustomActionInput` via:
//
//	DashboardVisualCustomActionArgs{...}
type DashboardVisualCustomActionInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionOutput() DashboardVisualCustomActionOutput
	ToDashboardVisualCustomActionOutputWithContext(context.Context) DashboardVisualCustomActionOutput
}

type DashboardVisualCustomActionArgs struct {
	ActionOperations DashboardVisualCustomActionOperationArrayInput `pulumi:"actionOperations"`
	CustomActionId   pulumi.StringInput                             `pulumi:"customActionId"`
	Name             pulumi.StringInput                             `pulumi:"name"`
	Status           DashboardWidgetStatusPtrInput                  `pulumi:"status"`
	Trigger          DashboardVisualCustomActionTriggerInput        `pulumi:"trigger"`
}

func (DashboardVisualCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomAction)(nil)).Elem()
}

func (i DashboardVisualCustomActionArgs) ToDashboardVisualCustomActionOutput() DashboardVisualCustomActionOutput {
	return i.ToDashboardVisualCustomActionOutputWithContext(context.Background())
}

func (i DashboardVisualCustomActionArgs) ToDashboardVisualCustomActionOutputWithContext(ctx context.Context) DashboardVisualCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualCustomActionOutput)
}

// DashboardVisualCustomActionArrayInput is an input type that accepts DashboardVisualCustomActionArray and DashboardVisualCustomActionArrayOutput values.
// You can construct a concrete instance of `DashboardVisualCustomActionArrayInput` via:
//
//	DashboardVisualCustomActionArray{ DashboardVisualCustomActionArgs{...} }
type DashboardVisualCustomActionArrayInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionArrayOutput() DashboardVisualCustomActionArrayOutput
	ToDashboardVisualCustomActionArrayOutputWithContext(context.Context) DashboardVisualCustomActionArrayOutput
}

type DashboardVisualCustomActionArray []DashboardVisualCustomActionInput

func (DashboardVisualCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisualCustomAction)(nil)).Elem()
}

func (i DashboardVisualCustomActionArray) ToDashboardVisualCustomActionArrayOutput() DashboardVisualCustomActionArrayOutput {
	return i.ToDashboardVisualCustomActionArrayOutputWithContext(context.Background())
}

func (i DashboardVisualCustomActionArray) ToDashboardVisualCustomActionArrayOutputWithContext(ctx context.Context) DashboardVisualCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualCustomActionArrayOutput)
}

type DashboardVisualCustomActionOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomAction)(nil)).Elem()
}

func (o DashboardVisualCustomActionOutput) ToDashboardVisualCustomActionOutput() DashboardVisualCustomActionOutput {
	return o
}

func (o DashboardVisualCustomActionOutput) ToDashboardVisualCustomActionOutputWithContext(ctx context.Context) DashboardVisualCustomActionOutput {
	return o
}

func (o DashboardVisualCustomActionOutput) ActionOperations() DashboardVisualCustomActionOperationArrayOutput {
	return o.ApplyT(func(v DashboardVisualCustomAction) []DashboardVisualCustomActionOperation { return v.ActionOperations }).(DashboardVisualCustomActionOperationArrayOutput)
}

func (o DashboardVisualCustomActionOutput) CustomActionId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVisualCustomAction) string { return v.CustomActionId }).(pulumi.StringOutput)
}

func (o DashboardVisualCustomActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVisualCustomAction) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardVisualCustomActionOutput) Status() DashboardWidgetStatusPtrOutput {
	return o.ApplyT(func(v DashboardVisualCustomAction) *DashboardWidgetStatus { return v.Status }).(DashboardWidgetStatusPtrOutput)
}

func (o DashboardVisualCustomActionOutput) Trigger() DashboardVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v DashboardVisualCustomAction) DashboardVisualCustomActionTrigger { return v.Trigger }).(DashboardVisualCustomActionTriggerOutput)
}

type DashboardVisualCustomActionArrayOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisualCustomAction)(nil)).Elem()
}

func (o DashboardVisualCustomActionArrayOutput) ToDashboardVisualCustomActionArrayOutput() DashboardVisualCustomActionArrayOutput {
	return o
}

func (o DashboardVisualCustomActionArrayOutput) ToDashboardVisualCustomActionArrayOutputWithContext(ctx context.Context) DashboardVisualCustomActionArrayOutput {
	return o
}

func (o DashboardVisualCustomActionArrayOutput) Index(i pulumi.IntInput) DashboardVisualCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardVisualCustomAction {
		return vs[0].([]DashboardVisualCustomAction)[vs[1].(int)]
	}).(DashboardVisualCustomActionOutput)
}

type DashboardVisualCustomActionOperation struct {
	FilterOperation        *DashboardCustomActionFilterOperation        `pulumi:"filterOperation"`
	NavigationOperation    *DashboardCustomActionNavigationOperation    `pulumi:"navigationOperation"`
	SetParametersOperation *DashboardCustomActionSetParametersOperation `pulumi:"setParametersOperation"`
	URLOperation           *DashboardCustomActionURLOperation           `pulumi:"uRLOperation"`
}

// DashboardVisualCustomActionOperationInput is an input type that accepts DashboardVisualCustomActionOperationArgs and DashboardVisualCustomActionOperationOutput values.
// You can construct a concrete instance of `DashboardVisualCustomActionOperationInput` via:
//
//	DashboardVisualCustomActionOperationArgs{...}
type DashboardVisualCustomActionOperationInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionOperationOutput() DashboardVisualCustomActionOperationOutput
	ToDashboardVisualCustomActionOperationOutputWithContext(context.Context) DashboardVisualCustomActionOperationOutput
}

type DashboardVisualCustomActionOperationArgs struct {
	FilterOperation        DashboardCustomActionFilterOperationPtrInput        `pulumi:"filterOperation"`
	NavigationOperation    DashboardCustomActionNavigationOperationPtrInput    `pulumi:"navigationOperation"`
	SetParametersOperation DashboardCustomActionSetParametersOperationPtrInput `pulumi:"setParametersOperation"`
	URLOperation           DashboardCustomActionURLOperationPtrInput           `pulumi:"uRLOperation"`
}

func (DashboardVisualCustomActionOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomActionOperation)(nil)).Elem()
}

func (i DashboardVisualCustomActionOperationArgs) ToDashboardVisualCustomActionOperationOutput() DashboardVisualCustomActionOperationOutput {
	return i.ToDashboardVisualCustomActionOperationOutputWithContext(context.Background())
}

func (i DashboardVisualCustomActionOperationArgs) ToDashboardVisualCustomActionOperationOutputWithContext(ctx context.Context) DashboardVisualCustomActionOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualCustomActionOperationOutput)
}

// DashboardVisualCustomActionOperationArrayInput is an input type that accepts DashboardVisualCustomActionOperationArray and DashboardVisualCustomActionOperationArrayOutput values.
// You can construct a concrete instance of `DashboardVisualCustomActionOperationArrayInput` via:
//
//	DashboardVisualCustomActionOperationArray{ DashboardVisualCustomActionOperationArgs{...} }
type DashboardVisualCustomActionOperationArrayInput interface {
	pulumi.Input

	ToDashboardVisualCustomActionOperationArrayOutput() DashboardVisualCustomActionOperationArrayOutput
	ToDashboardVisualCustomActionOperationArrayOutputWithContext(context.Context) DashboardVisualCustomActionOperationArrayOutput
}

type DashboardVisualCustomActionOperationArray []DashboardVisualCustomActionOperationInput

func (DashboardVisualCustomActionOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisualCustomActionOperation)(nil)).Elem()
}

func (i DashboardVisualCustomActionOperationArray) ToDashboardVisualCustomActionOperationArrayOutput() DashboardVisualCustomActionOperationArrayOutput {
	return i.ToDashboardVisualCustomActionOperationArrayOutputWithContext(context.Background())
}

func (i DashboardVisualCustomActionOperationArray) ToDashboardVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) DashboardVisualCustomActionOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualCustomActionOperationArrayOutput)
}

type DashboardVisualCustomActionOperationOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualCustomActionOperation)(nil)).Elem()
}

func (o DashboardVisualCustomActionOperationOutput) ToDashboardVisualCustomActionOperationOutput() DashboardVisualCustomActionOperationOutput {
	return o
}

func (o DashboardVisualCustomActionOperationOutput) ToDashboardVisualCustomActionOperationOutputWithContext(ctx context.Context) DashboardVisualCustomActionOperationOutput {
	return o
}

func (o DashboardVisualCustomActionOperationOutput) FilterOperation() DashboardCustomActionFilterOperationPtrOutput {
	return o.ApplyT(func(v DashboardVisualCustomActionOperation) *DashboardCustomActionFilterOperation {
		return v.FilterOperation
	}).(DashboardCustomActionFilterOperationPtrOutput)
}

func (o DashboardVisualCustomActionOperationOutput) NavigationOperation() DashboardCustomActionNavigationOperationPtrOutput {
	return o.ApplyT(func(v DashboardVisualCustomActionOperation) *DashboardCustomActionNavigationOperation {
		return v.NavigationOperation
	}).(DashboardCustomActionNavigationOperationPtrOutput)
}

func (o DashboardVisualCustomActionOperationOutput) SetParametersOperation() DashboardCustomActionSetParametersOperationPtrOutput {
	return o.ApplyT(func(v DashboardVisualCustomActionOperation) *DashboardCustomActionSetParametersOperation {
		return v.SetParametersOperation
	}).(DashboardCustomActionSetParametersOperationPtrOutput)
}

func (o DashboardVisualCustomActionOperationOutput) URLOperation() DashboardCustomActionURLOperationPtrOutput {
	return o.ApplyT(func(v DashboardVisualCustomActionOperation) *DashboardCustomActionURLOperation { return v.URLOperation }).(DashboardCustomActionURLOperationPtrOutput)
}

type DashboardVisualCustomActionOperationArrayOutput struct{ *pulumi.OutputState }

func (DashboardVisualCustomActionOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVisualCustomActionOperation)(nil)).Elem()
}

func (o DashboardVisualCustomActionOperationArrayOutput) ToDashboardVisualCustomActionOperationArrayOutput() DashboardVisualCustomActionOperationArrayOutput {
	return o
}

func (o DashboardVisualCustomActionOperationArrayOutput) ToDashboardVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) DashboardVisualCustomActionOperationArrayOutput {
	return o
}

func (o DashboardVisualCustomActionOperationArrayOutput) Index(i pulumi.IntInput) DashboardVisualCustomActionOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardVisualCustomActionOperation {
		return vs[0].([]DashboardVisualCustomActionOperation)[vs[1].(int)]
	}).(DashboardVisualCustomActionOperationOutput)
}

type DashboardVisualMenuOption struct {
	AvailabilityStatus *DashboardBehavior `pulumi:"availabilityStatus"`
}

// DashboardVisualMenuOptionInput is an input type that accepts DashboardVisualMenuOptionArgs and DashboardVisualMenuOptionOutput values.
// You can construct a concrete instance of `DashboardVisualMenuOptionInput` via:
//
//	DashboardVisualMenuOptionArgs{...}
type DashboardVisualMenuOptionInput interface {
	pulumi.Input

	ToDashboardVisualMenuOptionOutput() DashboardVisualMenuOptionOutput
	ToDashboardVisualMenuOptionOutputWithContext(context.Context) DashboardVisualMenuOptionOutput
}

type DashboardVisualMenuOptionArgs struct {
	AvailabilityStatus DashboardBehaviorPtrInput `pulumi:"availabilityStatus"`
}

func (DashboardVisualMenuOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualMenuOption)(nil)).Elem()
}

func (i DashboardVisualMenuOptionArgs) ToDashboardVisualMenuOptionOutput() DashboardVisualMenuOptionOutput {
	return i.ToDashboardVisualMenuOptionOutputWithContext(context.Background())
}

func (i DashboardVisualMenuOptionArgs) ToDashboardVisualMenuOptionOutputWithContext(ctx context.Context) DashboardVisualMenuOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualMenuOptionOutput)
}

func (i DashboardVisualMenuOptionArgs) ToDashboardVisualMenuOptionPtrOutput() DashboardVisualMenuOptionPtrOutput {
	return i.ToDashboardVisualMenuOptionPtrOutputWithContext(context.Background())
}

func (i DashboardVisualMenuOptionArgs) ToDashboardVisualMenuOptionPtrOutputWithContext(ctx context.Context) DashboardVisualMenuOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualMenuOptionOutput).ToDashboardVisualMenuOptionPtrOutputWithContext(ctx)
}

// DashboardVisualMenuOptionPtrInput is an input type that accepts DashboardVisualMenuOptionArgs, DashboardVisualMenuOptionPtr and DashboardVisualMenuOptionPtrOutput values.
// You can construct a concrete instance of `DashboardVisualMenuOptionPtrInput` via:
//
//	        DashboardVisualMenuOptionArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualMenuOptionPtrInput interface {
	pulumi.Input

	ToDashboardVisualMenuOptionPtrOutput() DashboardVisualMenuOptionPtrOutput
	ToDashboardVisualMenuOptionPtrOutputWithContext(context.Context) DashboardVisualMenuOptionPtrOutput
}

type dashboardVisualMenuOptionPtrType DashboardVisualMenuOptionArgs

func DashboardVisualMenuOptionPtr(v *DashboardVisualMenuOptionArgs) DashboardVisualMenuOptionPtrInput {
	return (*dashboardVisualMenuOptionPtrType)(v)
}

func (*dashboardVisualMenuOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualMenuOption)(nil)).Elem()
}

func (i *dashboardVisualMenuOptionPtrType) ToDashboardVisualMenuOptionPtrOutput() DashboardVisualMenuOptionPtrOutput {
	return i.ToDashboardVisualMenuOptionPtrOutputWithContext(context.Background())
}

func (i *dashboardVisualMenuOptionPtrType) ToDashboardVisualMenuOptionPtrOutputWithContext(ctx context.Context) DashboardVisualMenuOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualMenuOptionPtrOutput)
}

type DashboardVisualMenuOptionOutput struct{ *pulumi.OutputState }

func (DashboardVisualMenuOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualMenuOption)(nil)).Elem()
}

func (o DashboardVisualMenuOptionOutput) ToDashboardVisualMenuOptionOutput() DashboardVisualMenuOptionOutput {
	return o
}

func (o DashboardVisualMenuOptionOutput) ToDashboardVisualMenuOptionOutputWithContext(ctx context.Context) DashboardVisualMenuOptionOutput {
	return o
}

func (o DashboardVisualMenuOptionOutput) ToDashboardVisualMenuOptionPtrOutput() DashboardVisualMenuOptionPtrOutput {
	return o.ToDashboardVisualMenuOptionPtrOutputWithContext(context.Background())
}

func (o DashboardVisualMenuOptionOutput) ToDashboardVisualMenuOptionPtrOutputWithContext(ctx context.Context) DashboardVisualMenuOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualMenuOption) *DashboardVisualMenuOption {
		return &v
	}).(DashboardVisualMenuOptionPtrOutput)
}

func (o DashboardVisualMenuOptionOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v DashboardVisualMenuOption) *DashboardBehavior { return v.AvailabilityStatus }).(DashboardBehaviorPtrOutput)
}

type DashboardVisualMenuOptionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualMenuOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualMenuOption)(nil)).Elem()
}

func (o DashboardVisualMenuOptionPtrOutput) ToDashboardVisualMenuOptionPtrOutput() DashboardVisualMenuOptionPtrOutput {
	return o
}

func (o DashboardVisualMenuOptionPtrOutput) ToDashboardVisualMenuOptionPtrOutputWithContext(ctx context.Context) DashboardVisualMenuOptionPtrOutput {
	return o
}

func (o DashboardVisualMenuOptionPtrOutput) Elem() DashboardVisualMenuOptionOutput {
	return o.ApplyT(func(v *DashboardVisualMenuOption) DashboardVisualMenuOption {
		if v != nil {
			return *v
		}
		var ret DashboardVisualMenuOption
		return ret
	}).(DashboardVisualMenuOptionOutput)
}

func (o DashboardVisualMenuOptionPtrOutput) AvailabilityStatus() DashboardBehaviorPtrOutput {
	return o.ApplyT(func(v *DashboardVisualMenuOption) *DashboardBehavior {
		if v == nil {
			return nil
		}
		return v.AvailabilityStatus
	}).(DashboardBehaviorPtrOutput)
}

type DashboardVisualPalette struct {
	ChartColor *string                  `pulumi:"chartColor"`
	ColorMap   []DashboardDataPathColor `pulumi:"colorMap"`
}

// DashboardVisualPaletteInput is an input type that accepts DashboardVisualPaletteArgs and DashboardVisualPaletteOutput values.
// You can construct a concrete instance of `DashboardVisualPaletteInput` via:
//
//	DashboardVisualPaletteArgs{...}
type DashboardVisualPaletteInput interface {
	pulumi.Input

	ToDashboardVisualPaletteOutput() DashboardVisualPaletteOutput
	ToDashboardVisualPaletteOutputWithContext(context.Context) DashboardVisualPaletteOutput
}

type DashboardVisualPaletteArgs struct {
	ChartColor pulumi.StringPtrInput            `pulumi:"chartColor"`
	ColorMap   DashboardDataPathColorArrayInput `pulumi:"colorMap"`
}

func (DashboardVisualPaletteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualPalette)(nil)).Elem()
}

func (i DashboardVisualPaletteArgs) ToDashboardVisualPaletteOutput() DashboardVisualPaletteOutput {
	return i.ToDashboardVisualPaletteOutputWithContext(context.Background())
}

func (i DashboardVisualPaletteArgs) ToDashboardVisualPaletteOutputWithContext(ctx context.Context) DashboardVisualPaletteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPaletteOutput)
}

func (i DashboardVisualPaletteArgs) ToDashboardVisualPalettePtrOutput() DashboardVisualPalettePtrOutput {
	return i.ToDashboardVisualPalettePtrOutputWithContext(context.Background())
}

func (i DashboardVisualPaletteArgs) ToDashboardVisualPalettePtrOutputWithContext(ctx context.Context) DashboardVisualPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPaletteOutput).ToDashboardVisualPalettePtrOutputWithContext(ctx)
}

// DashboardVisualPalettePtrInput is an input type that accepts DashboardVisualPaletteArgs, DashboardVisualPalettePtr and DashboardVisualPalettePtrOutput values.
// You can construct a concrete instance of `DashboardVisualPalettePtrInput` via:
//
//	        DashboardVisualPaletteArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualPalettePtrInput interface {
	pulumi.Input

	ToDashboardVisualPalettePtrOutput() DashboardVisualPalettePtrOutput
	ToDashboardVisualPalettePtrOutputWithContext(context.Context) DashboardVisualPalettePtrOutput
}

type dashboardVisualPalettePtrType DashboardVisualPaletteArgs

func DashboardVisualPalettePtr(v *DashboardVisualPaletteArgs) DashboardVisualPalettePtrInput {
	return (*dashboardVisualPalettePtrType)(v)
}

func (*dashboardVisualPalettePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualPalette)(nil)).Elem()
}

func (i *dashboardVisualPalettePtrType) ToDashboardVisualPalettePtrOutput() DashboardVisualPalettePtrOutput {
	return i.ToDashboardVisualPalettePtrOutputWithContext(context.Background())
}

func (i *dashboardVisualPalettePtrType) ToDashboardVisualPalettePtrOutputWithContext(ctx context.Context) DashboardVisualPalettePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPalettePtrOutput)
}

type DashboardVisualPaletteOutput struct{ *pulumi.OutputState }

func (DashboardVisualPaletteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualPalette)(nil)).Elem()
}

func (o DashboardVisualPaletteOutput) ToDashboardVisualPaletteOutput() DashboardVisualPaletteOutput {
	return o
}

func (o DashboardVisualPaletteOutput) ToDashboardVisualPaletteOutputWithContext(ctx context.Context) DashboardVisualPaletteOutput {
	return o
}

func (o DashboardVisualPaletteOutput) ToDashboardVisualPalettePtrOutput() DashboardVisualPalettePtrOutput {
	return o.ToDashboardVisualPalettePtrOutputWithContext(context.Background())
}

func (o DashboardVisualPaletteOutput) ToDashboardVisualPalettePtrOutputWithContext(ctx context.Context) DashboardVisualPalettePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualPalette) *DashboardVisualPalette {
		return &v
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardVisualPaletteOutput) ChartColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVisualPalette) *string { return v.ChartColor }).(pulumi.StringPtrOutput)
}

func (o DashboardVisualPaletteOutput) ColorMap() DashboardDataPathColorArrayOutput {
	return o.ApplyT(func(v DashboardVisualPalette) []DashboardDataPathColor { return v.ColorMap }).(DashboardDataPathColorArrayOutput)
}

type DashboardVisualPalettePtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualPalettePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualPalette)(nil)).Elem()
}

func (o DashboardVisualPalettePtrOutput) ToDashboardVisualPalettePtrOutput() DashboardVisualPalettePtrOutput {
	return o
}

func (o DashboardVisualPalettePtrOutput) ToDashboardVisualPalettePtrOutputWithContext(ctx context.Context) DashboardVisualPalettePtrOutput {
	return o
}

func (o DashboardVisualPalettePtrOutput) Elem() DashboardVisualPaletteOutput {
	return o.ApplyT(func(v *DashboardVisualPalette) DashboardVisualPalette {
		if v != nil {
			return *v
		}
		var ret DashboardVisualPalette
		return ret
	}).(DashboardVisualPaletteOutput)
}

func (o DashboardVisualPalettePtrOutput) ChartColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVisualPalette) *string {
		if v == nil {
			return nil
		}
		return v.ChartColor
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVisualPalettePtrOutput) ColorMap() DashboardDataPathColorArrayOutput {
	return o.ApplyT(func(v *DashboardVisualPalette) []DashboardDataPathColor {
		if v == nil {
			return nil
		}
		return v.ColorMap
	}).(DashboardDataPathColorArrayOutput)
}

type DashboardVisualPublishOptions struct {
	ExportHiddenFieldsOption *DashboardExportHiddenFieldsOption `pulumi:"exportHiddenFieldsOption"`
}

// DashboardVisualPublishOptionsInput is an input type that accepts DashboardVisualPublishOptionsArgs and DashboardVisualPublishOptionsOutput values.
// You can construct a concrete instance of `DashboardVisualPublishOptionsInput` via:
//
//	DashboardVisualPublishOptionsArgs{...}
type DashboardVisualPublishOptionsInput interface {
	pulumi.Input

	ToDashboardVisualPublishOptionsOutput() DashboardVisualPublishOptionsOutput
	ToDashboardVisualPublishOptionsOutputWithContext(context.Context) DashboardVisualPublishOptionsOutput
}

type DashboardVisualPublishOptionsArgs struct {
	ExportHiddenFieldsOption DashboardExportHiddenFieldsOptionPtrInput `pulumi:"exportHiddenFieldsOption"`
}

func (DashboardVisualPublishOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualPublishOptions)(nil)).Elem()
}

func (i DashboardVisualPublishOptionsArgs) ToDashboardVisualPublishOptionsOutput() DashboardVisualPublishOptionsOutput {
	return i.ToDashboardVisualPublishOptionsOutputWithContext(context.Background())
}

func (i DashboardVisualPublishOptionsArgs) ToDashboardVisualPublishOptionsOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPublishOptionsOutput)
}

func (i DashboardVisualPublishOptionsArgs) ToDashboardVisualPublishOptionsPtrOutput() DashboardVisualPublishOptionsPtrOutput {
	return i.ToDashboardVisualPublishOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardVisualPublishOptionsArgs) ToDashboardVisualPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPublishOptionsOutput).ToDashboardVisualPublishOptionsPtrOutputWithContext(ctx)
}

// DashboardVisualPublishOptionsPtrInput is an input type that accepts DashboardVisualPublishOptionsArgs, DashboardVisualPublishOptionsPtr and DashboardVisualPublishOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardVisualPublishOptionsPtrInput` via:
//
//	        DashboardVisualPublishOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualPublishOptionsPtrInput interface {
	pulumi.Input

	ToDashboardVisualPublishOptionsPtrOutput() DashboardVisualPublishOptionsPtrOutput
	ToDashboardVisualPublishOptionsPtrOutputWithContext(context.Context) DashboardVisualPublishOptionsPtrOutput
}

type dashboardVisualPublishOptionsPtrType DashboardVisualPublishOptionsArgs

func DashboardVisualPublishOptionsPtr(v *DashboardVisualPublishOptionsArgs) DashboardVisualPublishOptionsPtrInput {
	return (*dashboardVisualPublishOptionsPtrType)(v)
}

func (*dashboardVisualPublishOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualPublishOptions)(nil)).Elem()
}

func (i *dashboardVisualPublishOptionsPtrType) ToDashboardVisualPublishOptionsPtrOutput() DashboardVisualPublishOptionsPtrOutput {
	return i.ToDashboardVisualPublishOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardVisualPublishOptionsPtrType) ToDashboardVisualPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualPublishOptionsPtrOutput)
}

type DashboardVisualPublishOptionsOutput struct{ *pulumi.OutputState }

func (DashboardVisualPublishOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualPublishOptions)(nil)).Elem()
}

func (o DashboardVisualPublishOptionsOutput) ToDashboardVisualPublishOptionsOutput() DashboardVisualPublishOptionsOutput {
	return o
}

func (o DashboardVisualPublishOptionsOutput) ToDashboardVisualPublishOptionsOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsOutput {
	return o
}

func (o DashboardVisualPublishOptionsOutput) ToDashboardVisualPublishOptionsPtrOutput() DashboardVisualPublishOptionsPtrOutput {
	return o.ToDashboardVisualPublishOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardVisualPublishOptionsOutput) ToDashboardVisualPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualPublishOptions) *DashboardVisualPublishOptions {
		return &v
	}).(DashboardVisualPublishOptionsPtrOutput)
}

func (o DashboardVisualPublishOptionsOutput) ExportHiddenFieldsOption() DashboardExportHiddenFieldsOptionPtrOutput {
	return o.ApplyT(func(v DashboardVisualPublishOptions) *DashboardExportHiddenFieldsOption {
		return v.ExportHiddenFieldsOption
	}).(DashboardExportHiddenFieldsOptionPtrOutput)
}

type DashboardVisualPublishOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualPublishOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualPublishOptions)(nil)).Elem()
}

func (o DashboardVisualPublishOptionsPtrOutput) ToDashboardVisualPublishOptionsPtrOutput() DashboardVisualPublishOptionsPtrOutput {
	return o
}

func (o DashboardVisualPublishOptionsPtrOutput) ToDashboardVisualPublishOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualPublishOptionsPtrOutput {
	return o
}

func (o DashboardVisualPublishOptionsPtrOutput) Elem() DashboardVisualPublishOptionsOutput {
	return o.ApplyT(func(v *DashboardVisualPublishOptions) DashboardVisualPublishOptions {
		if v != nil {
			return *v
		}
		var ret DashboardVisualPublishOptions
		return ret
	}).(DashboardVisualPublishOptionsOutput)
}

func (o DashboardVisualPublishOptionsPtrOutput) ExportHiddenFieldsOption() DashboardExportHiddenFieldsOptionPtrOutput {
	return o.ApplyT(func(v *DashboardVisualPublishOptions) *DashboardExportHiddenFieldsOption {
		if v == nil {
			return nil
		}
		return v.ExportHiddenFieldsOption
	}).(DashboardExportHiddenFieldsOptionPtrOutput)
}

type DashboardVisualSubtitleLabelOptions struct {
	FormatText *DashboardLongFormatText `pulumi:"formatText"`
	Visibility *DashboardVisibility     `pulumi:"visibility"`
}

// DashboardVisualSubtitleLabelOptionsInput is an input type that accepts DashboardVisualSubtitleLabelOptionsArgs and DashboardVisualSubtitleLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardVisualSubtitleLabelOptionsInput` via:
//
//	DashboardVisualSubtitleLabelOptionsArgs{...}
type DashboardVisualSubtitleLabelOptionsInput interface {
	pulumi.Input

	ToDashboardVisualSubtitleLabelOptionsOutput() DashboardVisualSubtitleLabelOptionsOutput
	ToDashboardVisualSubtitleLabelOptionsOutputWithContext(context.Context) DashboardVisualSubtitleLabelOptionsOutput
}

type DashboardVisualSubtitleLabelOptionsArgs struct {
	FormatText DashboardLongFormatTextPtrInput `pulumi:"formatText"`
	Visibility DashboardVisibilityPtrInput     `pulumi:"visibility"`
}

func (DashboardVisualSubtitleLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualSubtitleLabelOptions)(nil)).Elem()
}

func (i DashboardVisualSubtitleLabelOptionsArgs) ToDashboardVisualSubtitleLabelOptionsOutput() DashboardVisualSubtitleLabelOptionsOutput {
	return i.ToDashboardVisualSubtitleLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardVisualSubtitleLabelOptionsArgs) ToDashboardVisualSubtitleLabelOptionsOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualSubtitleLabelOptionsOutput)
}

func (i DashboardVisualSubtitleLabelOptionsArgs) ToDashboardVisualSubtitleLabelOptionsPtrOutput() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return i.ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardVisualSubtitleLabelOptionsArgs) ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualSubtitleLabelOptionsOutput).ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardVisualSubtitleLabelOptionsPtrInput is an input type that accepts DashboardVisualSubtitleLabelOptionsArgs, DashboardVisualSubtitleLabelOptionsPtr and DashboardVisualSubtitleLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardVisualSubtitleLabelOptionsPtrInput` via:
//
//	        DashboardVisualSubtitleLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualSubtitleLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardVisualSubtitleLabelOptionsPtrOutput() DashboardVisualSubtitleLabelOptionsPtrOutput
	ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(context.Context) DashboardVisualSubtitleLabelOptionsPtrOutput
}

type dashboardVisualSubtitleLabelOptionsPtrType DashboardVisualSubtitleLabelOptionsArgs

func DashboardVisualSubtitleLabelOptionsPtr(v *DashboardVisualSubtitleLabelOptionsArgs) DashboardVisualSubtitleLabelOptionsPtrInput {
	return (*dashboardVisualSubtitleLabelOptionsPtrType)(v)
}

func (*dashboardVisualSubtitleLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualSubtitleLabelOptions)(nil)).Elem()
}

func (i *dashboardVisualSubtitleLabelOptionsPtrType) ToDashboardVisualSubtitleLabelOptionsPtrOutput() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return i.ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardVisualSubtitleLabelOptionsPtrType) ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

type DashboardVisualSubtitleLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardVisualSubtitleLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualSubtitleLabelOptions)(nil)).Elem()
}

func (o DashboardVisualSubtitleLabelOptionsOutput) ToDashboardVisualSubtitleLabelOptionsOutput() DashboardVisualSubtitleLabelOptionsOutput {
	return o
}

func (o DashboardVisualSubtitleLabelOptionsOutput) ToDashboardVisualSubtitleLabelOptionsOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsOutput {
	return o
}

func (o DashboardVisualSubtitleLabelOptionsOutput) ToDashboardVisualSubtitleLabelOptionsPtrOutput() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardVisualSubtitleLabelOptionsOutput) ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualSubtitleLabelOptions) *DashboardVisualSubtitleLabelOptions {
		return &v
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardVisualSubtitleLabelOptionsOutput) FormatText() DashboardLongFormatTextPtrOutput {
	return o.ApplyT(func(v DashboardVisualSubtitleLabelOptions) *DashboardLongFormatText { return v.FormatText }).(DashboardLongFormatTextPtrOutput)
}

func (o DashboardVisualSubtitleLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardVisualSubtitleLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardVisualSubtitleLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualSubtitleLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualSubtitleLabelOptions)(nil)).Elem()
}

func (o DashboardVisualSubtitleLabelOptionsPtrOutput) ToDashboardVisualSubtitleLabelOptionsPtrOutput() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o
}

func (o DashboardVisualSubtitleLabelOptionsPtrOutput) ToDashboardVisualSubtitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o
}

func (o DashboardVisualSubtitleLabelOptionsPtrOutput) Elem() DashboardVisualSubtitleLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardVisualSubtitleLabelOptions) DashboardVisualSubtitleLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardVisualSubtitleLabelOptions
		return ret
	}).(DashboardVisualSubtitleLabelOptionsOutput)
}

func (o DashboardVisualSubtitleLabelOptionsPtrOutput) FormatText() DashboardLongFormatTextPtrOutput {
	return o.ApplyT(func(v *DashboardVisualSubtitleLabelOptions) *DashboardLongFormatText {
		if v == nil {
			return nil
		}
		return v.FormatText
	}).(DashboardLongFormatTextPtrOutput)
}

func (o DashboardVisualSubtitleLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardVisualSubtitleLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardVisualTitleLabelOptions struct {
	FormatText *DashboardShortFormatText `pulumi:"formatText"`
	Visibility *DashboardVisibility      `pulumi:"visibility"`
}

// DashboardVisualTitleLabelOptionsInput is an input type that accepts DashboardVisualTitleLabelOptionsArgs and DashboardVisualTitleLabelOptionsOutput values.
// You can construct a concrete instance of `DashboardVisualTitleLabelOptionsInput` via:
//
//	DashboardVisualTitleLabelOptionsArgs{...}
type DashboardVisualTitleLabelOptionsInput interface {
	pulumi.Input

	ToDashboardVisualTitleLabelOptionsOutput() DashboardVisualTitleLabelOptionsOutput
	ToDashboardVisualTitleLabelOptionsOutputWithContext(context.Context) DashboardVisualTitleLabelOptionsOutput
}

type DashboardVisualTitleLabelOptionsArgs struct {
	FormatText DashboardShortFormatTextPtrInput `pulumi:"formatText"`
	Visibility DashboardVisibilityPtrInput      `pulumi:"visibility"`
}

func (DashboardVisualTitleLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualTitleLabelOptions)(nil)).Elem()
}

func (i DashboardVisualTitleLabelOptionsArgs) ToDashboardVisualTitleLabelOptionsOutput() DashboardVisualTitleLabelOptionsOutput {
	return i.ToDashboardVisualTitleLabelOptionsOutputWithContext(context.Background())
}

func (i DashboardVisualTitleLabelOptionsArgs) ToDashboardVisualTitleLabelOptionsOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualTitleLabelOptionsOutput)
}

func (i DashboardVisualTitleLabelOptionsArgs) ToDashboardVisualTitleLabelOptionsPtrOutput() DashboardVisualTitleLabelOptionsPtrOutput {
	return i.ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardVisualTitleLabelOptionsArgs) ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualTitleLabelOptionsOutput).ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(ctx)
}

// DashboardVisualTitleLabelOptionsPtrInput is an input type that accepts DashboardVisualTitleLabelOptionsArgs, DashboardVisualTitleLabelOptionsPtr and DashboardVisualTitleLabelOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardVisualTitleLabelOptionsPtrInput` via:
//
//	        DashboardVisualTitleLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardVisualTitleLabelOptionsPtrInput interface {
	pulumi.Input

	ToDashboardVisualTitleLabelOptionsPtrOutput() DashboardVisualTitleLabelOptionsPtrOutput
	ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(context.Context) DashboardVisualTitleLabelOptionsPtrOutput
}

type dashboardVisualTitleLabelOptionsPtrType DashboardVisualTitleLabelOptionsArgs

func DashboardVisualTitleLabelOptionsPtr(v *DashboardVisualTitleLabelOptionsArgs) DashboardVisualTitleLabelOptionsPtrInput {
	return (*dashboardVisualTitleLabelOptionsPtrType)(v)
}

func (*dashboardVisualTitleLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualTitleLabelOptions)(nil)).Elem()
}

func (i *dashboardVisualTitleLabelOptionsPtrType) ToDashboardVisualTitleLabelOptionsPtrOutput() DashboardVisualTitleLabelOptionsPtrOutput {
	return i.ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardVisualTitleLabelOptionsPtrType) ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVisualTitleLabelOptionsPtrOutput)
}

type DashboardVisualTitleLabelOptionsOutput struct{ *pulumi.OutputState }

func (DashboardVisualTitleLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVisualTitleLabelOptions)(nil)).Elem()
}

func (o DashboardVisualTitleLabelOptionsOutput) ToDashboardVisualTitleLabelOptionsOutput() DashboardVisualTitleLabelOptionsOutput {
	return o
}

func (o DashboardVisualTitleLabelOptionsOutput) ToDashboardVisualTitleLabelOptionsOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsOutput {
	return o
}

func (o DashboardVisualTitleLabelOptionsOutput) ToDashboardVisualTitleLabelOptionsPtrOutput() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardVisualTitleLabelOptionsOutput) ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVisualTitleLabelOptions) *DashboardVisualTitleLabelOptions {
		return &v
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardVisualTitleLabelOptionsOutput) FormatText() DashboardShortFormatTextPtrOutput {
	return o.ApplyT(func(v DashboardVisualTitleLabelOptions) *DashboardShortFormatText { return v.FormatText }).(DashboardShortFormatTextPtrOutput)
}

func (o DashboardVisualTitleLabelOptionsOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v DashboardVisualTitleLabelOptions) *DashboardVisibility { return v.Visibility }).(DashboardVisibilityPtrOutput)
}

type DashboardVisualTitleLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardVisualTitleLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVisualTitleLabelOptions)(nil)).Elem()
}

func (o DashboardVisualTitleLabelOptionsPtrOutput) ToDashboardVisualTitleLabelOptionsPtrOutput() DashboardVisualTitleLabelOptionsPtrOutput {
	return o
}

func (o DashboardVisualTitleLabelOptionsPtrOutput) ToDashboardVisualTitleLabelOptionsPtrOutputWithContext(ctx context.Context) DashboardVisualTitleLabelOptionsPtrOutput {
	return o
}

func (o DashboardVisualTitleLabelOptionsPtrOutput) Elem() DashboardVisualTitleLabelOptionsOutput {
	return o.ApplyT(func(v *DashboardVisualTitleLabelOptions) DashboardVisualTitleLabelOptions {
		if v != nil {
			return *v
		}
		var ret DashboardVisualTitleLabelOptions
		return ret
	}).(DashboardVisualTitleLabelOptionsOutput)
}

func (o DashboardVisualTitleLabelOptionsPtrOutput) FormatText() DashboardShortFormatTextPtrOutput {
	return o.ApplyT(func(v *DashboardVisualTitleLabelOptions) *DashboardShortFormatText {
		if v == nil {
			return nil
		}
		return v.FormatText
	}).(DashboardShortFormatTextPtrOutput)
}

func (o DashboardVisualTitleLabelOptionsPtrOutput) Visibility() DashboardVisibilityPtrOutput {
	return o.ApplyT(func(v *DashboardVisualTitleLabelOptions) *DashboardVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(DashboardVisibilityPtrOutput)
}

type DashboardWaterfallChartAggregatedFieldWells struct {
	Breakdowns []DashboardDimensionField `pulumi:"breakdowns"`
	Categories []DashboardDimensionField `pulumi:"categories"`
	Values     []DashboardMeasureField   `pulumi:"values"`
}

// DashboardWaterfallChartAggregatedFieldWellsInput is an input type that accepts DashboardWaterfallChartAggregatedFieldWellsArgs and DashboardWaterfallChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartAggregatedFieldWellsInput` via:
//
//	DashboardWaterfallChartAggregatedFieldWellsArgs{...}
type DashboardWaterfallChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardWaterfallChartAggregatedFieldWellsOutput() DashboardWaterfallChartAggregatedFieldWellsOutput
	ToDashboardWaterfallChartAggregatedFieldWellsOutputWithContext(context.Context) DashboardWaterfallChartAggregatedFieldWellsOutput
}

type DashboardWaterfallChartAggregatedFieldWellsArgs struct {
	Breakdowns DashboardDimensionFieldArrayInput `pulumi:"breakdowns"`
	Categories DashboardDimensionFieldArrayInput `pulumi:"categories"`
	Values     DashboardMeasureFieldArrayInput   `pulumi:"values"`
}

func (DashboardWaterfallChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardWaterfallChartAggregatedFieldWellsArgs) ToDashboardWaterfallChartAggregatedFieldWellsOutput() DashboardWaterfallChartAggregatedFieldWellsOutput {
	return i.ToDashboardWaterfallChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartAggregatedFieldWellsArgs) ToDashboardWaterfallChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartAggregatedFieldWellsOutput)
}

func (i DashboardWaterfallChartAggregatedFieldWellsArgs) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutput() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartAggregatedFieldWellsArgs) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartAggregatedFieldWellsOutput).ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardWaterfallChartAggregatedFieldWellsPtrInput is an input type that accepts DashboardWaterfallChartAggregatedFieldWellsArgs, DashboardWaterfallChartAggregatedFieldWellsPtr and DashboardWaterfallChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartAggregatedFieldWellsPtrInput` via:
//
//	        DashboardWaterfallChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallChartAggregatedFieldWellsPtrOutput() DashboardWaterfallChartAggregatedFieldWellsPtrOutput
	ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardWaterfallChartAggregatedFieldWellsPtrOutput
}

type dashboardWaterfallChartAggregatedFieldWellsPtrType DashboardWaterfallChartAggregatedFieldWellsArgs

func DashboardWaterfallChartAggregatedFieldWellsPtr(v *DashboardWaterfallChartAggregatedFieldWellsArgs) DashboardWaterfallChartAggregatedFieldWellsPtrInput {
	return (*dashboardWaterfallChartAggregatedFieldWellsPtrType)(v)
}

func (*dashboardWaterfallChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardWaterfallChartAggregatedFieldWellsPtrType) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutput() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return i.ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallChartAggregatedFieldWellsPtrType) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartAggregatedFieldWellsPtrOutput)
}

type DashboardWaterfallChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) ToDashboardWaterfallChartAggregatedFieldWellsOutput() DashboardWaterfallChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) ToDashboardWaterfallChartAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsOutput {
	return o
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutput() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallChartAggregatedFieldWells) *DashboardWaterfallChartAggregatedFieldWells {
		return &v
	}).(DashboardWaterfallChartAggregatedFieldWellsPtrOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) Breakdowns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallChartAggregatedFieldWells) []DashboardDimensionField { return v.Breakdowns }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) Categories() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallChartAggregatedFieldWells) []DashboardDimensionField { return v.Categories }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallChartAggregatedFieldWells) []DashboardMeasureField { return v.Values }).(DashboardMeasureFieldArrayOutput)
}

type DashboardWaterfallChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutput() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) ToDashboardWaterfallChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) Elem() DashboardWaterfallChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartAggregatedFieldWells) DashboardWaterfallChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallChartAggregatedFieldWells
		return ret
	}).(DashboardWaterfallChartAggregatedFieldWellsOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) Breakdowns() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Breakdowns
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) Categories() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWaterfallChartAggregatedFieldWellsPtrOutput) Values() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardWaterfallChartConfiguration struct {
	CategoryAxisDisplayOptions *DashboardAxisDisplayOptions              `pulumi:"categoryAxisDisplayOptions"`
	CategoryAxisLabelOptions   *DashboardChartAxisLabelOptions           `pulumi:"categoryAxisLabelOptions"`
	DataLabels                 *DashboardDataLabelOptions                `pulumi:"dataLabels"`
	FieldWells                 *DashboardWaterfallChartFieldWells        `pulumi:"fieldWells"`
	Legend                     *DashboardLegendOptions                   `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *DashboardAxisDisplayOptions              `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *DashboardChartAxisLabelOptions           `pulumi:"primaryYAxisLabelOptions"`
	SortConfiguration          *DashboardWaterfallChartSortConfiguration `pulumi:"sortConfiguration"`
	VisualPalette              *DashboardVisualPalette                   `pulumi:"visualPalette"`
	WaterfallChartOptions      *DashboardWaterfallChartOptions           `pulumi:"waterfallChartOptions"`
}

// DashboardWaterfallChartConfigurationInput is an input type that accepts DashboardWaterfallChartConfigurationArgs and DashboardWaterfallChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartConfigurationInput` via:
//
//	DashboardWaterfallChartConfigurationArgs{...}
type DashboardWaterfallChartConfigurationInput interface {
	pulumi.Input

	ToDashboardWaterfallChartConfigurationOutput() DashboardWaterfallChartConfigurationOutput
	ToDashboardWaterfallChartConfigurationOutputWithContext(context.Context) DashboardWaterfallChartConfigurationOutput
}

type DashboardWaterfallChartConfigurationArgs struct {
	CategoryAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput              `pulumi:"categoryAxisDisplayOptions"`
	CategoryAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput           `pulumi:"categoryAxisLabelOptions"`
	DataLabels                 DashboardDataLabelOptionsPtrInput                `pulumi:"dataLabels"`
	FieldWells                 DashboardWaterfallChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     DashboardLegendOptionsPtrInput                   `pulumi:"legend"`
	PrimaryYAxisDisplayOptions DashboardAxisDisplayOptionsPtrInput              `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   DashboardChartAxisLabelOptionsPtrInput           `pulumi:"primaryYAxisLabelOptions"`
	SortConfiguration          DashboardWaterfallChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	VisualPalette              DashboardVisualPalettePtrInput                   `pulumi:"visualPalette"`
	WaterfallChartOptions      DashboardWaterfallChartOptionsPtrInput           `pulumi:"waterfallChartOptions"`
}

func (DashboardWaterfallChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartConfiguration)(nil)).Elem()
}

func (i DashboardWaterfallChartConfigurationArgs) ToDashboardWaterfallChartConfigurationOutput() DashboardWaterfallChartConfigurationOutput {
	return i.ToDashboardWaterfallChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartConfigurationArgs) ToDashboardWaterfallChartConfigurationOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartConfigurationOutput)
}

func (i DashboardWaterfallChartConfigurationArgs) ToDashboardWaterfallChartConfigurationPtrOutput() DashboardWaterfallChartConfigurationPtrOutput {
	return i.ToDashboardWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartConfigurationArgs) ToDashboardWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartConfigurationOutput).ToDashboardWaterfallChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardWaterfallChartConfigurationPtrInput is an input type that accepts DashboardWaterfallChartConfigurationArgs, DashboardWaterfallChartConfigurationPtr and DashboardWaterfallChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartConfigurationPtrInput` via:
//
//	        DashboardWaterfallChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallChartConfigurationPtrOutput() DashboardWaterfallChartConfigurationPtrOutput
	ToDashboardWaterfallChartConfigurationPtrOutputWithContext(context.Context) DashboardWaterfallChartConfigurationPtrOutput
}

type dashboardWaterfallChartConfigurationPtrType DashboardWaterfallChartConfigurationArgs

func DashboardWaterfallChartConfigurationPtr(v *DashboardWaterfallChartConfigurationArgs) DashboardWaterfallChartConfigurationPtrInput {
	return (*dashboardWaterfallChartConfigurationPtrType)(v)
}

func (*dashboardWaterfallChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartConfiguration)(nil)).Elem()
}

func (i *dashboardWaterfallChartConfigurationPtrType) ToDashboardWaterfallChartConfigurationPtrOutput() DashboardWaterfallChartConfigurationPtrOutput {
	return i.ToDashboardWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallChartConfigurationPtrType) ToDashboardWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartConfigurationPtrOutput)
}

type DashboardWaterfallChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartConfiguration)(nil)).Elem()
}

func (o DashboardWaterfallChartConfigurationOutput) ToDashboardWaterfallChartConfigurationOutput() DashboardWaterfallChartConfigurationOutput {
	return o
}

func (o DashboardWaterfallChartConfigurationOutput) ToDashboardWaterfallChartConfigurationOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationOutput {
	return o
}

func (o DashboardWaterfallChartConfigurationOutput) ToDashboardWaterfallChartConfigurationPtrOutput() DashboardWaterfallChartConfigurationPtrOutput {
	return o.ToDashboardWaterfallChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallChartConfigurationOutput) ToDashboardWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallChartConfiguration) *DashboardWaterfallChartConfiguration {
		return &v
	}).(DashboardWaterfallChartConfigurationPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) CategoryAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardAxisDisplayOptions {
		return v.CategoryAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) CategoryAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardDataLabelOptions { return v.DataLabels }).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) FieldWells() DashboardWaterfallChartFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardWaterfallChartFieldWells { return v.FieldWells }).(DashboardWaterfallChartFieldWellsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardLegendOptions { return v.Legend }).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) SortConfiguration() DashboardWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardWaterfallChartSortConfiguration {
		return v.SortConfiguration
	}).(DashboardWaterfallChartSortConfigurationPtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardVisualPalette { return v.VisualPalette }).(DashboardVisualPalettePtrOutput)
}

func (o DashboardWaterfallChartConfigurationOutput) WaterfallChartOptions() DashboardWaterfallChartOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartConfiguration) *DashboardWaterfallChartOptions {
		return v.WaterfallChartOptions
	}).(DashboardWaterfallChartOptionsPtrOutput)
}

type DashboardWaterfallChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartConfiguration)(nil)).Elem()
}

func (o DashboardWaterfallChartConfigurationPtrOutput) ToDashboardWaterfallChartConfigurationPtrOutput() DashboardWaterfallChartConfigurationPtrOutput {
	return o
}

func (o DashboardWaterfallChartConfigurationPtrOutput) ToDashboardWaterfallChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartConfigurationPtrOutput {
	return o
}

func (o DashboardWaterfallChartConfigurationPtrOutput) Elem() DashboardWaterfallChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) DashboardWaterfallChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallChartConfiguration
		return ret
	}).(DashboardWaterfallChartConfigurationOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) CategoryAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) CategoryAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) DataLabels() DashboardDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(DashboardDataLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) FieldWells() DashboardWaterfallChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardWaterfallChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardWaterfallChartFieldWellsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) Legend() DashboardLegendOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(DashboardLegendOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() DashboardAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(DashboardAxisDisplayOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) SortConfiguration() DashboardWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardWaterfallChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardWaterfallChartSortConfigurationPtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) VisualPalette() DashboardVisualPalettePtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(DashboardVisualPalettePtrOutput)
}

func (o DashboardWaterfallChartConfigurationPtrOutput) WaterfallChartOptions() DashboardWaterfallChartOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartConfiguration) *DashboardWaterfallChartOptions {
		if v == nil {
			return nil
		}
		return v.WaterfallChartOptions
	}).(DashboardWaterfallChartOptionsPtrOutput)
}

type DashboardWaterfallChartFieldWells struct {
	WaterfallChartAggregatedFieldWells *DashboardWaterfallChartAggregatedFieldWells `pulumi:"waterfallChartAggregatedFieldWells"`
}

// DashboardWaterfallChartFieldWellsInput is an input type that accepts DashboardWaterfallChartFieldWellsArgs and DashboardWaterfallChartFieldWellsOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartFieldWellsInput` via:
//
//	DashboardWaterfallChartFieldWellsArgs{...}
type DashboardWaterfallChartFieldWellsInput interface {
	pulumi.Input

	ToDashboardWaterfallChartFieldWellsOutput() DashboardWaterfallChartFieldWellsOutput
	ToDashboardWaterfallChartFieldWellsOutputWithContext(context.Context) DashboardWaterfallChartFieldWellsOutput
}

type DashboardWaterfallChartFieldWellsArgs struct {
	WaterfallChartAggregatedFieldWells DashboardWaterfallChartAggregatedFieldWellsPtrInput `pulumi:"waterfallChartAggregatedFieldWells"`
}

func (DashboardWaterfallChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartFieldWells)(nil)).Elem()
}

func (i DashboardWaterfallChartFieldWellsArgs) ToDashboardWaterfallChartFieldWellsOutput() DashboardWaterfallChartFieldWellsOutput {
	return i.ToDashboardWaterfallChartFieldWellsOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartFieldWellsArgs) ToDashboardWaterfallChartFieldWellsOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartFieldWellsOutput)
}

func (i DashboardWaterfallChartFieldWellsArgs) ToDashboardWaterfallChartFieldWellsPtrOutput() DashboardWaterfallChartFieldWellsPtrOutput {
	return i.ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartFieldWellsArgs) ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartFieldWellsOutput).ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(ctx)
}

// DashboardWaterfallChartFieldWellsPtrInput is an input type that accepts DashboardWaterfallChartFieldWellsArgs, DashboardWaterfallChartFieldWellsPtr and DashboardWaterfallChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartFieldWellsPtrInput` via:
//
//	        DashboardWaterfallChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallChartFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallChartFieldWellsPtrOutput() DashboardWaterfallChartFieldWellsPtrOutput
	ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(context.Context) DashboardWaterfallChartFieldWellsPtrOutput
}

type dashboardWaterfallChartFieldWellsPtrType DashboardWaterfallChartFieldWellsArgs

func DashboardWaterfallChartFieldWellsPtr(v *DashboardWaterfallChartFieldWellsArgs) DashboardWaterfallChartFieldWellsPtrInput {
	return (*dashboardWaterfallChartFieldWellsPtrType)(v)
}

func (*dashboardWaterfallChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartFieldWells)(nil)).Elem()
}

func (i *dashboardWaterfallChartFieldWellsPtrType) ToDashboardWaterfallChartFieldWellsPtrOutput() DashboardWaterfallChartFieldWellsPtrOutput {
	return i.ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallChartFieldWellsPtrType) ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartFieldWellsPtrOutput)
}

type DashboardWaterfallChartFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartFieldWells)(nil)).Elem()
}

func (o DashboardWaterfallChartFieldWellsOutput) ToDashboardWaterfallChartFieldWellsOutput() DashboardWaterfallChartFieldWellsOutput {
	return o
}

func (o DashboardWaterfallChartFieldWellsOutput) ToDashboardWaterfallChartFieldWellsOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsOutput {
	return o
}

func (o DashboardWaterfallChartFieldWellsOutput) ToDashboardWaterfallChartFieldWellsPtrOutput() DashboardWaterfallChartFieldWellsPtrOutput {
	return o.ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallChartFieldWellsOutput) ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallChartFieldWells) *DashboardWaterfallChartFieldWells {
		return &v
	}).(DashboardWaterfallChartFieldWellsPtrOutput)
}

func (o DashboardWaterfallChartFieldWellsOutput) WaterfallChartAggregatedFieldWells() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartFieldWells) *DashboardWaterfallChartAggregatedFieldWells {
		return v.WaterfallChartAggregatedFieldWells
	}).(DashboardWaterfallChartAggregatedFieldWellsPtrOutput)
}

type DashboardWaterfallChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartFieldWells)(nil)).Elem()
}

func (o DashboardWaterfallChartFieldWellsPtrOutput) ToDashboardWaterfallChartFieldWellsPtrOutput() DashboardWaterfallChartFieldWellsPtrOutput {
	return o
}

func (o DashboardWaterfallChartFieldWellsPtrOutput) ToDashboardWaterfallChartFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartFieldWellsPtrOutput {
	return o
}

func (o DashboardWaterfallChartFieldWellsPtrOutput) Elem() DashboardWaterfallChartFieldWellsOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartFieldWells) DashboardWaterfallChartFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallChartFieldWells
		return ret
	}).(DashboardWaterfallChartFieldWellsOutput)
}

func (o DashboardWaterfallChartFieldWellsPtrOutput) WaterfallChartAggregatedFieldWells() DashboardWaterfallChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartFieldWells) *DashboardWaterfallChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.WaterfallChartAggregatedFieldWells
	}).(DashboardWaterfallChartAggregatedFieldWellsPtrOutput)
}

type DashboardWaterfallChartOptions struct {
	TotalBarLabel *string `pulumi:"totalBarLabel"`
}

// DashboardWaterfallChartOptionsInput is an input type that accepts DashboardWaterfallChartOptionsArgs and DashboardWaterfallChartOptionsOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartOptionsInput` via:
//
//	DashboardWaterfallChartOptionsArgs{...}
type DashboardWaterfallChartOptionsInput interface {
	pulumi.Input

	ToDashboardWaterfallChartOptionsOutput() DashboardWaterfallChartOptionsOutput
	ToDashboardWaterfallChartOptionsOutputWithContext(context.Context) DashboardWaterfallChartOptionsOutput
}

type DashboardWaterfallChartOptionsArgs struct {
	TotalBarLabel pulumi.StringPtrInput `pulumi:"totalBarLabel"`
}

func (DashboardWaterfallChartOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartOptions)(nil)).Elem()
}

func (i DashboardWaterfallChartOptionsArgs) ToDashboardWaterfallChartOptionsOutput() DashboardWaterfallChartOptionsOutput {
	return i.ToDashboardWaterfallChartOptionsOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartOptionsArgs) ToDashboardWaterfallChartOptionsOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartOptionsOutput)
}

func (i DashboardWaterfallChartOptionsArgs) ToDashboardWaterfallChartOptionsPtrOutput() DashboardWaterfallChartOptionsPtrOutput {
	return i.ToDashboardWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartOptionsArgs) ToDashboardWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartOptionsOutput).ToDashboardWaterfallChartOptionsPtrOutputWithContext(ctx)
}

// DashboardWaterfallChartOptionsPtrInput is an input type that accepts DashboardWaterfallChartOptionsArgs, DashboardWaterfallChartOptionsPtr and DashboardWaterfallChartOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartOptionsPtrInput` via:
//
//	        DashboardWaterfallChartOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallChartOptionsPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallChartOptionsPtrOutput() DashboardWaterfallChartOptionsPtrOutput
	ToDashboardWaterfallChartOptionsPtrOutputWithContext(context.Context) DashboardWaterfallChartOptionsPtrOutput
}

type dashboardWaterfallChartOptionsPtrType DashboardWaterfallChartOptionsArgs

func DashboardWaterfallChartOptionsPtr(v *DashboardWaterfallChartOptionsArgs) DashboardWaterfallChartOptionsPtrInput {
	return (*dashboardWaterfallChartOptionsPtrType)(v)
}

func (*dashboardWaterfallChartOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartOptions)(nil)).Elem()
}

func (i *dashboardWaterfallChartOptionsPtrType) ToDashboardWaterfallChartOptionsPtrOutput() DashboardWaterfallChartOptionsPtrOutput {
	return i.ToDashboardWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallChartOptionsPtrType) ToDashboardWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartOptionsPtrOutput)
}

type DashboardWaterfallChartOptionsOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartOptions)(nil)).Elem()
}

func (o DashboardWaterfallChartOptionsOutput) ToDashboardWaterfallChartOptionsOutput() DashboardWaterfallChartOptionsOutput {
	return o
}

func (o DashboardWaterfallChartOptionsOutput) ToDashboardWaterfallChartOptionsOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsOutput {
	return o
}

func (o DashboardWaterfallChartOptionsOutput) ToDashboardWaterfallChartOptionsPtrOutput() DashboardWaterfallChartOptionsPtrOutput {
	return o.ToDashboardWaterfallChartOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallChartOptionsOutput) ToDashboardWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallChartOptions) *DashboardWaterfallChartOptions {
		return &v
	}).(DashboardWaterfallChartOptionsPtrOutput)
}

func (o DashboardWaterfallChartOptionsOutput) TotalBarLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartOptions) *string { return v.TotalBarLabel }).(pulumi.StringPtrOutput)
}

type DashboardWaterfallChartOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartOptions)(nil)).Elem()
}

func (o DashboardWaterfallChartOptionsPtrOutput) ToDashboardWaterfallChartOptionsPtrOutput() DashboardWaterfallChartOptionsPtrOutput {
	return o
}

func (o DashboardWaterfallChartOptionsPtrOutput) ToDashboardWaterfallChartOptionsPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartOptionsPtrOutput {
	return o
}

func (o DashboardWaterfallChartOptionsPtrOutput) Elem() DashboardWaterfallChartOptionsOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartOptions) DashboardWaterfallChartOptions {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallChartOptions
		return ret
	}).(DashboardWaterfallChartOptionsOutput)
}

func (o DashboardWaterfallChartOptionsPtrOutput) TotalBarLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartOptions) *string {
		if v == nil {
			return nil
		}
		return v.TotalBarLabel
	}).(pulumi.StringPtrOutput)
}

type DashboardWaterfallChartSortConfiguration struct {
	BreakdownItemsLimit *DashboardItemsLimitConfiguration `pulumi:"breakdownItemsLimit"`
	CategorySort        []DashboardFieldSortOptions       `pulumi:"categorySort"`
}

// DashboardWaterfallChartSortConfigurationInput is an input type that accepts DashboardWaterfallChartSortConfigurationArgs and DashboardWaterfallChartSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartSortConfigurationInput` via:
//
//	DashboardWaterfallChartSortConfigurationArgs{...}
type DashboardWaterfallChartSortConfigurationInput interface {
	pulumi.Input

	ToDashboardWaterfallChartSortConfigurationOutput() DashboardWaterfallChartSortConfigurationOutput
	ToDashboardWaterfallChartSortConfigurationOutputWithContext(context.Context) DashboardWaterfallChartSortConfigurationOutput
}

type DashboardWaterfallChartSortConfigurationArgs struct {
	BreakdownItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"breakdownItemsLimit"`
	CategorySort        DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (DashboardWaterfallChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartSortConfiguration)(nil)).Elem()
}

func (i DashboardWaterfallChartSortConfigurationArgs) ToDashboardWaterfallChartSortConfigurationOutput() DashboardWaterfallChartSortConfigurationOutput {
	return i.ToDashboardWaterfallChartSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartSortConfigurationArgs) ToDashboardWaterfallChartSortConfigurationOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartSortConfigurationOutput)
}

func (i DashboardWaterfallChartSortConfigurationArgs) ToDashboardWaterfallChartSortConfigurationPtrOutput() DashboardWaterfallChartSortConfigurationPtrOutput {
	return i.ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallChartSortConfigurationArgs) ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartSortConfigurationOutput).ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardWaterfallChartSortConfigurationPtrInput is an input type that accepts DashboardWaterfallChartSortConfigurationArgs, DashboardWaterfallChartSortConfigurationPtr and DashboardWaterfallChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallChartSortConfigurationPtrInput` via:
//
//	        DashboardWaterfallChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallChartSortConfigurationPtrOutput() DashboardWaterfallChartSortConfigurationPtrOutput
	ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(context.Context) DashboardWaterfallChartSortConfigurationPtrOutput
}

type dashboardWaterfallChartSortConfigurationPtrType DashboardWaterfallChartSortConfigurationArgs

func DashboardWaterfallChartSortConfigurationPtr(v *DashboardWaterfallChartSortConfigurationArgs) DashboardWaterfallChartSortConfigurationPtrInput {
	return (*dashboardWaterfallChartSortConfigurationPtrType)(v)
}

func (*dashboardWaterfallChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartSortConfiguration)(nil)).Elem()
}

func (i *dashboardWaterfallChartSortConfigurationPtrType) ToDashboardWaterfallChartSortConfigurationPtrOutput() DashboardWaterfallChartSortConfigurationPtrOutput {
	return i.ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallChartSortConfigurationPtrType) ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallChartSortConfigurationPtrOutput)
}

type DashboardWaterfallChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallChartSortConfiguration)(nil)).Elem()
}

func (o DashboardWaterfallChartSortConfigurationOutput) ToDashboardWaterfallChartSortConfigurationOutput() DashboardWaterfallChartSortConfigurationOutput {
	return o
}

func (o DashboardWaterfallChartSortConfigurationOutput) ToDashboardWaterfallChartSortConfigurationOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationOutput {
	return o
}

func (o DashboardWaterfallChartSortConfigurationOutput) ToDashboardWaterfallChartSortConfigurationPtrOutput() DashboardWaterfallChartSortConfigurationPtrOutput {
	return o.ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallChartSortConfigurationOutput) ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallChartSortConfiguration) *DashboardWaterfallChartSortConfiguration {
		return &v
	}).(DashboardWaterfallChartSortConfigurationPtrOutput)
}

func (o DashboardWaterfallChartSortConfigurationOutput) BreakdownItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallChartSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.BreakdownItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardWaterfallChartSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallChartSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardWaterfallChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallChartSortConfiguration)(nil)).Elem()
}

func (o DashboardWaterfallChartSortConfigurationPtrOutput) ToDashboardWaterfallChartSortConfigurationPtrOutput() DashboardWaterfallChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardWaterfallChartSortConfigurationPtrOutput) ToDashboardWaterfallChartSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWaterfallChartSortConfigurationPtrOutput {
	return o
}

func (o DashboardWaterfallChartSortConfigurationPtrOutput) Elem() DashboardWaterfallChartSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartSortConfiguration) DashboardWaterfallChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallChartSortConfiguration
		return ret
	}).(DashboardWaterfallChartSortConfigurationOutput)
}

func (o DashboardWaterfallChartSortConfigurationPtrOutput) BreakdownItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.BreakdownItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardWaterfallChartSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallChartSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardWaterfallVisual struct {
	Actions            []DashboardVisualCustomAction         `pulumi:"actions"`
	ChartConfiguration *DashboardWaterfallChartConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy            `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions  `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions     `pulumi:"title"`
	VisualId           string                                `pulumi:"visualId"`
}

// DashboardWaterfallVisualInput is an input type that accepts DashboardWaterfallVisualArgs and DashboardWaterfallVisualOutput values.
// You can construct a concrete instance of `DashboardWaterfallVisualInput` via:
//
//	DashboardWaterfallVisualArgs{...}
type DashboardWaterfallVisualInput interface {
	pulumi.Input

	ToDashboardWaterfallVisualOutput() DashboardWaterfallVisualOutput
	ToDashboardWaterfallVisualOutputWithContext(context.Context) DashboardWaterfallVisualOutput
}

type DashboardWaterfallVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput        `pulumi:"actions"`
	ChartConfiguration DashboardWaterfallChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput           `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput  `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput     `pulumi:"title"`
	VisualId           pulumi.StringInput                           `pulumi:"visualId"`
}

func (DashboardWaterfallVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallVisual)(nil)).Elem()
}

func (i DashboardWaterfallVisualArgs) ToDashboardWaterfallVisualOutput() DashboardWaterfallVisualOutput {
	return i.ToDashboardWaterfallVisualOutputWithContext(context.Background())
}

func (i DashboardWaterfallVisualArgs) ToDashboardWaterfallVisualOutputWithContext(ctx context.Context) DashboardWaterfallVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallVisualOutput)
}

func (i DashboardWaterfallVisualArgs) ToDashboardWaterfallVisualPtrOutput() DashboardWaterfallVisualPtrOutput {
	return i.ToDashboardWaterfallVisualPtrOutputWithContext(context.Background())
}

func (i DashboardWaterfallVisualArgs) ToDashboardWaterfallVisualPtrOutputWithContext(ctx context.Context) DashboardWaterfallVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallVisualOutput).ToDashboardWaterfallVisualPtrOutputWithContext(ctx)
}

// DashboardWaterfallVisualPtrInput is an input type that accepts DashboardWaterfallVisualArgs, DashboardWaterfallVisualPtr and DashboardWaterfallVisualPtrOutput values.
// You can construct a concrete instance of `DashboardWaterfallVisualPtrInput` via:
//
//	        DashboardWaterfallVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardWaterfallVisualPtrInput interface {
	pulumi.Input

	ToDashboardWaterfallVisualPtrOutput() DashboardWaterfallVisualPtrOutput
	ToDashboardWaterfallVisualPtrOutputWithContext(context.Context) DashboardWaterfallVisualPtrOutput
}

type dashboardWaterfallVisualPtrType DashboardWaterfallVisualArgs

func DashboardWaterfallVisualPtr(v *DashboardWaterfallVisualArgs) DashboardWaterfallVisualPtrInput {
	return (*dashboardWaterfallVisualPtrType)(v)
}

func (*dashboardWaterfallVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallVisual)(nil)).Elem()
}

func (i *dashboardWaterfallVisualPtrType) ToDashboardWaterfallVisualPtrOutput() DashboardWaterfallVisualPtrOutput {
	return i.ToDashboardWaterfallVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardWaterfallVisualPtrType) ToDashboardWaterfallVisualPtrOutputWithContext(ctx context.Context) DashboardWaterfallVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWaterfallVisualPtrOutput)
}

type DashboardWaterfallVisualOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWaterfallVisual)(nil)).Elem()
}

func (o DashboardWaterfallVisualOutput) ToDashboardWaterfallVisualOutput() DashboardWaterfallVisualOutput {
	return o
}

func (o DashboardWaterfallVisualOutput) ToDashboardWaterfallVisualOutputWithContext(ctx context.Context) DashboardWaterfallVisualOutput {
	return o
}

func (o DashboardWaterfallVisualOutput) ToDashboardWaterfallVisualPtrOutput() DashboardWaterfallVisualPtrOutput {
	return o.ToDashboardWaterfallVisualPtrOutputWithContext(context.Background())
}

func (o DashboardWaterfallVisualOutput) ToDashboardWaterfallVisualPtrOutputWithContext(ctx context.Context) DashboardWaterfallVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWaterfallVisual) *DashboardWaterfallVisual {
		return &v
	}).(DashboardWaterfallVisualPtrOutput)
}

func (o DashboardWaterfallVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardWaterfallVisualOutput) ChartConfiguration() DashboardWaterfallChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) *DashboardWaterfallChartConfiguration { return v.ChartConfiguration }).(DashboardWaterfallChartConfigurationPtrOutput)
}

func (o DashboardWaterfallVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardWaterfallVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardWaterfallVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardWaterfallVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardWaterfallVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardWaterfallVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardWaterfallVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWaterfallVisual)(nil)).Elem()
}

func (o DashboardWaterfallVisualPtrOutput) ToDashboardWaterfallVisualPtrOutput() DashboardWaterfallVisualPtrOutput {
	return o
}

func (o DashboardWaterfallVisualPtrOutput) ToDashboardWaterfallVisualPtrOutputWithContext(ctx context.Context) DashboardWaterfallVisualPtrOutput {
	return o
}

func (o DashboardWaterfallVisualPtrOutput) Elem() DashboardWaterfallVisualOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) DashboardWaterfallVisual {
		if v != nil {
			return *v
		}
		var ret DashboardWaterfallVisual
		return ret
	}).(DashboardWaterfallVisualOutput)
}

func (o DashboardWaterfallVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardWaterfallVisualPtrOutput) ChartConfiguration() DashboardWaterfallChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) *DashboardWaterfallChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardWaterfallChartConfigurationPtrOutput)
}

func (o DashboardWaterfallVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardWaterfallVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardWaterfallVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardWaterfallVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWaterfallVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type DashboardWhatIfPointScenario struct {
	Date  string  `pulumi:"date"`
	Value float64 `pulumi:"value"`
}

// DashboardWhatIfPointScenarioInput is an input type that accepts DashboardWhatIfPointScenarioArgs and DashboardWhatIfPointScenarioOutput values.
// You can construct a concrete instance of `DashboardWhatIfPointScenarioInput` via:
//
//	DashboardWhatIfPointScenarioArgs{...}
type DashboardWhatIfPointScenarioInput interface {
	pulumi.Input

	ToDashboardWhatIfPointScenarioOutput() DashboardWhatIfPointScenarioOutput
	ToDashboardWhatIfPointScenarioOutputWithContext(context.Context) DashboardWhatIfPointScenarioOutput
}

type DashboardWhatIfPointScenarioArgs struct {
	Date  pulumi.StringInput  `pulumi:"date"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (DashboardWhatIfPointScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWhatIfPointScenario)(nil)).Elem()
}

func (i DashboardWhatIfPointScenarioArgs) ToDashboardWhatIfPointScenarioOutput() DashboardWhatIfPointScenarioOutput {
	return i.ToDashboardWhatIfPointScenarioOutputWithContext(context.Background())
}

func (i DashboardWhatIfPointScenarioArgs) ToDashboardWhatIfPointScenarioOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfPointScenarioOutput)
}

func (i DashboardWhatIfPointScenarioArgs) ToDashboardWhatIfPointScenarioPtrOutput() DashboardWhatIfPointScenarioPtrOutput {
	return i.ToDashboardWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (i DashboardWhatIfPointScenarioArgs) ToDashboardWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfPointScenarioOutput).ToDashboardWhatIfPointScenarioPtrOutputWithContext(ctx)
}

// DashboardWhatIfPointScenarioPtrInput is an input type that accepts DashboardWhatIfPointScenarioArgs, DashboardWhatIfPointScenarioPtr and DashboardWhatIfPointScenarioPtrOutput values.
// You can construct a concrete instance of `DashboardWhatIfPointScenarioPtrInput` via:
//
//	        DashboardWhatIfPointScenarioArgs{...}
//
//	or:
//
//	        nil
type DashboardWhatIfPointScenarioPtrInput interface {
	pulumi.Input

	ToDashboardWhatIfPointScenarioPtrOutput() DashboardWhatIfPointScenarioPtrOutput
	ToDashboardWhatIfPointScenarioPtrOutputWithContext(context.Context) DashboardWhatIfPointScenarioPtrOutput
}

type dashboardWhatIfPointScenarioPtrType DashboardWhatIfPointScenarioArgs

func DashboardWhatIfPointScenarioPtr(v *DashboardWhatIfPointScenarioArgs) DashboardWhatIfPointScenarioPtrInput {
	return (*dashboardWhatIfPointScenarioPtrType)(v)
}

func (*dashboardWhatIfPointScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWhatIfPointScenario)(nil)).Elem()
}

func (i *dashboardWhatIfPointScenarioPtrType) ToDashboardWhatIfPointScenarioPtrOutput() DashboardWhatIfPointScenarioPtrOutput {
	return i.ToDashboardWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (i *dashboardWhatIfPointScenarioPtrType) ToDashboardWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfPointScenarioPtrOutput)
}

type DashboardWhatIfPointScenarioOutput struct{ *pulumi.OutputState }

func (DashboardWhatIfPointScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWhatIfPointScenario)(nil)).Elem()
}

func (o DashboardWhatIfPointScenarioOutput) ToDashboardWhatIfPointScenarioOutput() DashboardWhatIfPointScenarioOutput {
	return o
}

func (o DashboardWhatIfPointScenarioOutput) ToDashboardWhatIfPointScenarioOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioOutput {
	return o
}

func (o DashboardWhatIfPointScenarioOutput) ToDashboardWhatIfPointScenarioPtrOutput() DashboardWhatIfPointScenarioPtrOutput {
	return o.ToDashboardWhatIfPointScenarioPtrOutputWithContext(context.Background())
}

func (o DashboardWhatIfPointScenarioOutput) ToDashboardWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWhatIfPointScenario) *DashboardWhatIfPointScenario {
		return &v
	}).(DashboardWhatIfPointScenarioPtrOutput)
}

func (o DashboardWhatIfPointScenarioOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardWhatIfPointScenario) string { return v.Date }).(pulumi.StringOutput)
}

func (o DashboardWhatIfPointScenarioOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardWhatIfPointScenario) float64 { return v.Value }).(pulumi.Float64Output)
}

type DashboardWhatIfPointScenarioPtrOutput struct{ *pulumi.OutputState }

func (DashboardWhatIfPointScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWhatIfPointScenario)(nil)).Elem()
}

func (o DashboardWhatIfPointScenarioPtrOutput) ToDashboardWhatIfPointScenarioPtrOutput() DashboardWhatIfPointScenarioPtrOutput {
	return o
}

func (o DashboardWhatIfPointScenarioPtrOutput) ToDashboardWhatIfPointScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfPointScenarioPtrOutput {
	return o
}

func (o DashboardWhatIfPointScenarioPtrOutput) Elem() DashboardWhatIfPointScenarioOutput {
	return o.ApplyT(func(v *DashboardWhatIfPointScenario) DashboardWhatIfPointScenario {
		if v != nil {
			return *v
		}
		var ret DashboardWhatIfPointScenario
		return ret
	}).(DashboardWhatIfPointScenarioOutput)
}

func (o DashboardWhatIfPointScenarioPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWhatIfPointScenario) *string {
		if v == nil {
			return nil
		}
		return &v.Date
	}).(pulumi.StringPtrOutput)
}

func (o DashboardWhatIfPointScenarioPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardWhatIfPointScenario) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardWhatIfRangeScenario struct {
	EndDate   string  `pulumi:"endDate"`
	StartDate string  `pulumi:"startDate"`
	Value     float64 `pulumi:"value"`
}

// DashboardWhatIfRangeScenarioInput is an input type that accepts DashboardWhatIfRangeScenarioArgs and DashboardWhatIfRangeScenarioOutput values.
// You can construct a concrete instance of `DashboardWhatIfRangeScenarioInput` via:
//
//	DashboardWhatIfRangeScenarioArgs{...}
type DashboardWhatIfRangeScenarioInput interface {
	pulumi.Input

	ToDashboardWhatIfRangeScenarioOutput() DashboardWhatIfRangeScenarioOutput
	ToDashboardWhatIfRangeScenarioOutputWithContext(context.Context) DashboardWhatIfRangeScenarioOutput
}

type DashboardWhatIfRangeScenarioArgs struct {
	EndDate   pulumi.StringInput  `pulumi:"endDate"`
	StartDate pulumi.StringInput  `pulumi:"startDate"`
	Value     pulumi.Float64Input `pulumi:"value"`
}

func (DashboardWhatIfRangeScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWhatIfRangeScenario)(nil)).Elem()
}

func (i DashboardWhatIfRangeScenarioArgs) ToDashboardWhatIfRangeScenarioOutput() DashboardWhatIfRangeScenarioOutput {
	return i.ToDashboardWhatIfRangeScenarioOutputWithContext(context.Background())
}

func (i DashboardWhatIfRangeScenarioArgs) ToDashboardWhatIfRangeScenarioOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfRangeScenarioOutput)
}

func (i DashboardWhatIfRangeScenarioArgs) ToDashboardWhatIfRangeScenarioPtrOutput() DashboardWhatIfRangeScenarioPtrOutput {
	return i.ToDashboardWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (i DashboardWhatIfRangeScenarioArgs) ToDashboardWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfRangeScenarioOutput).ToDashboardWhatIfRangeScenarioPtrOutputWithContext(ctx)
}

// DashboardWhatIfRangeScenarioPtrInput is an input type that accepts DashboardWhatIfRangeScenarioArgs, DashboardWhatIfRangeScenarioPtr and DashboardWhatIfRangeScenarioPtrOutput values.
// You can construct a concrete instance of `DashboardWhatIfRangeScenarioPtrInput` via:
//
//	        DashboardWhatIfRangeScenarioArgs{...}
//
//	or:
//
//	        nil
type DashboardWhatIfRangeScenarioPtrInput interface {
	pulumi.Input

	ToDashboardWhatIfRangeScenarioPtrOutput() DashboardWhatIfRangeScenarioPtrOutput
	ToDashboardWhatIfRangeScenarioPtrOutputWithContext(context.Context) DashboardWhatIfRangeScenarioPtrOutput
}

type dashboardWhatIfRangeScenarioPtrType DashboardWhatIfRangeScenarioArgs

func DashboardWhatIfRangeScenarioPtr(v *DashboardWhatIfRangeScenarioArgs) DashboardWhatIfRangeScenarioPtrInput {
	return (*dashboardWhatIfRangeScenarioPtrType)(v)
}

func (*dashboardWhatIfRangeScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWhatIfRangeScenario)(nil)).Elem()
}

func (i *dashboardWhatIfRangeScenarioPtrType) ToDashboardWhatIfRangeScenarioPtrOutput() DashboardWhatIfRangeScenarioPtrOutput {
	return i.ToDashboardWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (i *dashboardWhatIfRangeScenarioPtrType) ToDashboardWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWhatIfRangeScenarioPtrOutput)
}

type DashboardWhatIfRangeScenarioOutput struct{ *pulumi.OutputState }

func (DashboardWhatIfRangeScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWhatIfRangeScenario)(nil)).Elem()
}

func (o DashboardWhatIfRangeScenarioOutput) ToDashboardWhatIfRangeScenarioOutput() DashboardWhatIfRangeScenarioOutput {
	return o
}

func (o DashboardWhatIfRangeScenarioOutput) ToDashboardWhatIfRangeScenarioOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioOutput {
	return o
}

func (o DashboardWhatIfRangeScenarioOutput) ToDashboardWhatIfRangeScenarioPtrOutput() DashboardWhatIfRangeScenarioPtrOutput {
	return o.ToDashboardWhatIfRangeScenarioPtrOutputWithContext(context.Background())
}

func (o DashboardWhatIfRangeScenarioOutput) ToDashboardWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWhatIfRangeScenario) *DashboardWhatIfRangeScenario {
		return &v
	}).(DashboardWhatIfRangeScenarioPtrOutput)
}

func (o DashboardWhatIfRangeScenarioOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardWhatIfRangeScenario) string { return v.EndDate }).(pulumi.StringOutput)
}

func (o DashboardWhatIfRangeScenarioOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardWhatIfRangeScenario) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o DashboardWhatIfRangeScenarioOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v DashboardWhatIfRangeScenario) float64 { return v.Value }).(pulumi.Float64Output)
}

type DashboardWhatIfRangeScenarioPtrOutput struct{ *pulumi.OutputState }

func (DashboardWhatIfRangeScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWhatIfRangeScenario)(nil)).Elem()
}

func (o DashboardWhatIfRangeScenarioPtrOutput) ToDashboardWhatIfRangeScenarioPtrOutput() DashboardWhatIfRangeScenarioPtrOutput {
	return o
}

func (o DashboardWhatIfRangeScenarioPtrOutput) ToDashboardWhatIfRangeScenarioPtrOutputWithContext(ctx context.Context) DashboardWhatIfRangeScenarioPtrOutput {
	return o
}

func (o DashboardWhatIfRangeScenarioPtrOutput) Elem() DashboardWhatIfRangeScenarioOutput {
	return o.ApplyT(func(v *DashboardWhatIfRangeScenario) DashboardWhatIfRangeScenario {
		if v != nil {
			return *v
		}
		var ret DashboardWhatIfRangeScenario
		return ret
	}).(DashboardWhatIfRangeScenarioOutput)
}

func (o DashboardWhatIfRangeScenarioPtrOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWhatIfRangeScenario) *string {
		if v == nil {
			return nil
		}
		return &v.EndDate
	}).(pulumi.StringPtrOutput)
}

func (o DashboardWhatIfRangeScenarioPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWhatIfRangeScenario) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

func (o DashboardWhatIfRangeScenarioPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardWhatIfRangeScenario) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type DashboardWordCloudAggregatedFieldWells struct {
	GroupBy []DashboardDimensionField `pulumi:"groupBy"`
	Size    []DashboardMeasureField   `pulumi:"size"`
}

// DashboardWordCloudAggregatedFieldWellsInput is an input type that accepts DashboardWordCloudAggregatedFieldWellsArgs and DashboardWordCloudAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `DashboardWordCloudAggregatedFieldWellsInput` via:
//
//	DashboardWordCloudAggregatedFieldWellsArgs{...}
type DashboardWordCloudAggregatedFieldWellsInput interface {
	pulumi.Input

	ToDashboardWordCloudAggregatedFieldWellsOutput() DashboardWordCloudAggregatedFieldWellsOutput
	ToDashboardWordCloudAggregatedFieldWellsOutputWithContext(context.Context) DashboardWordCloudAggregatedFieldWellsOutput
}

type DashboardWordCloudAggregatedFieldWellsArgs struct {
	GroupBy DashboardDimensionFieldArrayInput `pulumi:"groupBy"`
	Size    DashboardMeasureFieldArrayInput   `pulumi:"size"`
}

func (DashboardWordCloudAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (i DashboardWordCloudAggregatedFieldWellsArgs) ToDashboardWordCloudAggregatedFieldWellsOutput() DashboardWordCloudAggregatedFieldWellsOutput {
	return i.ToDashboardWordCloudAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i DashboardWordCloudAggregatedFieldWellsArgs) ToDashboardWordCloudAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudAggregatedFieldWellsOutput)
}

func (i DashboardWordCloudAggregatedFieldWellsArgs) ToDashboardWordCloudAggregatedFieldWellsPtrOutput() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return i.ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudAggregatedFieldWellsArgs) ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudAggregatedFieldWellsOutput).ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// DashboardWordCloudAggregatedFieldWellsPtrInput is an input type that accepts DashboardWordCloudAggregatedFieldWellsArgs, DashboardWordCloudAggregatedFieldWellsPtr and DashboardWordCloudAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudAggregatedFieldWellsPtrInput` via:
//
//	        DashboardWordCloudAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudAggregatedFieldWellsPtrOutput() DashboardWordCloudAggregatedFieldWellsPtrOutput
	ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Context) DashboardWordCloudAggregatedFieldWellsPtrOutput
}

type dashboardWordCloudAggregatedFieldWellsPtrType DashboardWordCloudAggregatedFieldWellsArgs

func DashboardWordCloudAggregatedFieldWellsPtr(v *DashboardWordCloudAggregatedFieldWellsArgs) DashboardWordCloudAggregatedFieldWellsPtrInput {
	return (*dashboardWordCloudAggregatedFieldWellsPtrType)(v)
}

func (*dashboardWordCloudAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (i *dashboardWordCloudAggregatedFieldWellsPtrType) ToDashboardWordCloudAggregatedFieldWellsPtrOutput() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return i.ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudAggregatedFieldWellsPtrType) ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudAggregatedFieldWellsPtrOutput)
}

type DashboardWordCloudAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) ToDashboardWordCloudAggregatedFieldWellsOutput() DashboardWordCloudAggregatedFieldWellsOutput {
	return o
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) ToDashboardWordCloudAggregatedFieldWellsOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsOutput {
	return o
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) ToDashboardWordCloudAggregatedFieldWellsPtrOutput() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o.ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudAggregatedFieldWells) *DashboardWordCloudAggregatedFieldWells {
		return &v
	}).(DashboardWordCloudAggregatedFieldWellsPtrOutput)
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v DashboardWordCloudAggregatedFieldWells) []DashboardDimensionField { return v.GroupBy }).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWordCloudAggregatedFieldWellsOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v DashboardWordCloudAggregatedFieldWells) []DashboardMeasureField { return v.Size }).(DashboardMeasureFieldArrayOutput)
}

type DashboardWordCloudAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudAggregatedFieldWells)(nil)).Elem()
}

func (o DashboardWordCloudAggregatedFieldWellsPtrOutput) ToDashboardWordCloudAggregatedFieldWellsPtrOutput() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardWordCloudAggregatedFieldWellsPtrOutput) ToDashboardWordCloudAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o
}

func (o DashboardWordCloudAggregatedFieldWellsPtrOutput) Elem() DashboardWordCloudAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *DashboardWordCloudAggregatedFieldWells) DashboardWordCloudAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudAggregatedFieldWells
		return ret
	}).(DashboardWordCloudAggregatedFieldWellsOutput)
}

func (o DashboardWordCloudAggregatedFieldWellsPtrOutput) GroupBy() DashboardDimensionFieldArrayOutput {
	return o.ApplyT(func(v *DashboardWordCloudAggregatedFieldWells) []DashboardDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(DashboardDimensionFieldArrayOutput)
}

func (o DashboardWordCloudAggregatedFieldWellsPtrOutput) Size() DashboardMeasureFieldArrayOutput {
	return o.ApplyT(func(v *DashboardWordCloudAggregatedFieldWells) []DashboardMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(DashboardMeasureFieldArrayOutput)
}

type DashboardWordCloudChartConfiguration struct {
	CategoryLabelOptions *DashboardChartAxisLabelOptions      `pulumi:"categoryLabelOptions"`
	FieldWells           *DashboardWordCloudFieldWells        `pulumi:"fieldWells"`
	SortConfiguration    *DashboardWordCloudSortConfiguration `pulumi:"sortConfiguration"`
	WordCloudOptions     *DashboardWordCloudOptions           `pulumi:"wordCloudOptions"`
}

// DashboardWordCloudChartConfigurationInput is an input type that accepts DashboardWordCloudChartConfigurationArgs and DashboardWordCloudChartConfigurationOutput values.
// You can construct a concrete instance of `DashboardWordCloudChartConfigurationInput` via:
//
//	DashboardWordCloudChartConfigurationArgs{...}
type DashboardWordCloudChartConfigurationInput interface {
	pulumi.Input

	ToDashboardWordCloudChartConfigurationOutput() DashboardWordCloudChartConfigurationOutput
	ToDashboardWordCloudChartConfigurationOutputWithContext(context.Context) DashboardWordCloudChartConfigurationOutput
}

type DashboardWordCloudChartConfigurationArgs struct {
	CategoryLabelOptions DashboardChartAxisLabelOptionsPtrInput      `pulumi:"categoryLabelOptions"`
	FieldWells           DashboardWordCloudFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration    DashboardWordCloudSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	WordCloudOptions     DashboardWordCloudOptionsPtrInput           `pulumi:"wordCloudOptions"`
}

func (DashboardWordCloudChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudChartConfiguration)(nil)).Elem()
}

func (i DashboardWordCloudChartConfigurationArgs) ToDashboardWordCloudChartConfigurationOutput() DashboardWordCloudChartConfigurationOutput {
	return i.ToDashboardWordCloudChartConfigurationOutputWithContext(context.Background())
}

func (i DashboardWordCloudChartConfigurationArgs) ToDashboardWordCloudChartConfigurationOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudChartConfigurationOutput)
}

func (i DashboardWordCloudChartConfigurationArgs) ToDashboardWordCloudChartConfigurationPtrOutput() DashboardWordCloudChartConfigurationPtrOutput {
	return i.ToDashboardWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudChartConfigurationArgs) ToDashboardWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudChartConfigurationOutput).ToDashboardWordCloudChartConfigurationPtrOutputWithContext(ctx)
}

// DashboardWordCloudChartConfigurationPtrInput is an input type that accepts DashboardWordCloudChartConfigurationArgs, DashboardWordCloudChartConfigurationPtr and DashboardWordCloudChartConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudChartConfigurationPtrInput` via:
//
//	        DashboardWordCloudChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudChartConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudChartConfigurationPtrOutput() DashboardWordCloudChartConfigurationPtrOutput
	ToDashboardWordCloudChartConfigurationPtrOutputWithContext(context.Context) DashboardWordCloudChartConfigurationPtrOutput
}

type dashboardWordCloudChartConfigurationPtrType DashboardWordCloudChartConfigurationArgs

func DashboardWordCloudChartConfigurationPtr(v *DashboardWordCloudChartConfigurationArgs) DashboardWordCloudChartConfigurationPtrInput {
	return (*dashboardWordCloudChartConfigurationPtrType)(v)
}

func (*dashboardWordCloudChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudChartConfiguration)(nil)).Elem()
}

func (i *dashboardWordCloudChartConfigurationPtrType) ToDashboardWordCloudChartConfigurationPtrOutput() DashboardWordCloudChartConfigurationPtrOutput {
	return i.ToDashboardWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudChartConfigurationPtrType) ToDashboardWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudChartConfigurationPtrOutput)
}

type DashboardWordCloudChartConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudChartConfiguration)(nil)).Elem()
}

func (o DashboardWordCloudChartConfigurationOutput) ToDashboardWordCloudChartConfigurationOutput() DashboardWordCloudChartConfigurationOutput {
	return o
}

func (o DashboardWordCloudChartConfigurationOutput) ToDashboardWordCloudChartConfigurationOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationOutput {
	return o
}

func (o DashboardWordCloudChartConfigurationOutput) ToDashboardWordCloudChartConfigurationPtrOutput() DashboardWordCloudChartConfigurationPtrOutput {
	return o.ToDashboardWordCloudChartConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudChartConfigurationOutput) ToDashboardWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudChartConfiguration) *DashboardWordCloudChartConfiguration {
		return &v
	}).(DashboardWordCloudChartConfigurationPtrOutput)
}

func (o DashboardWordCloudChartConfigurationOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudChartConfiguration) *DashboardChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWordCloudChartConfigurationOutput) FieldWells() DashboardWordCloudFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudChartConfiguration) *DashboardWordCloudFieldWells { return v.FieldWells }).(DashboardWordCloudFieldWellsPtrOutput)
}

func (o DashboardWordCloudChartConfigurationOutput) SortConfiguration() DashboardWordCloudSortConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudChartConfiguration) *DashboardWordCloudSortConfiguration {
		return v.SortConfiguration
	}).(DashboardWordCloudSortConfigurationPtrOutput)
}

func (o DashboardWordCloudChartConfigurationOutput) WordCloudOptions() DashboardWordCloudOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudChartConfiguration) *DashboardWordCloudOptions { return v.WordCloudOptions }).(DashboardWordCloudOptionsPtrOutput)
}

type DashboardWordCloudChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudChartConfiguration)(nil)).Elem()
}

func (o DashboardWordCloudChartConfigurationPtrOutput) ToDashboardWordCloudChartConfigurationPtrOutput() DashboardWordCloudChartConfigurationPtrOutput {
	return o
}

func (o DashboardWordCloudChartConfigurationPtrOutput) ToDashboardWordCloudChartConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudChartConfigurationPtrOutput {
	return o
}

func (o DashboardWordCloudChartConfigurationPtrOutput) Elem() DashboardWordCloudChartConfigurationOutput {
	return o.ApplyT(func(v *DashboardWordCloudChartConfiguration) DashboardWordCloudChartConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudChartConfiguration
		return ret
	}).(DashboardWordCloudChartConfigurationOutput)
}

func (o DashboardWordCloudChartConfigurationPtrOutput) CategoryLabelOptions() DashboardChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudChartConfiguration) *DashboardChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(DashboardChartAxisLabelOptionsPtrOutput)
}

func (o DashboardWordCloudChartConfigurationPtrOutput) FieldWells() DashboardWordCloudFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudChartConfiguration) *DashboardWordCloudFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(DashboardWordCloudFieldWellsPtrOutput)
}

func (o DashboardWordCloudChartConfigurationPtrOutput) SortConfiguration() DashboardWordCloudSortConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudChartConfiguration) *DashboardWordCloudSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(DashboardWordCloudSortConfigurationPtrOutput)
}

func (o DashboardWordCloudChartConfigurationPtrOutput) WordCloudOptions() DashboardWordCloudOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudChartConfiguration) *DashboardWordCloudOptions {
		if v == nil {
			return nil
		}
		return v.WordCloudOptions
	}).(DashboardWordCloudOptionsPtrOutput)
}

type DashboardWordCloudFieldWells struct {
	WordCloudAggregatedFieldWells *DashboardWordCloudAggregatedFieldWells `pulumi:"wordCloudAggregatedFieldWells"`
}

// DashboardWordCloudFieldWellsInput is an input type that accepts DashboardWordCloudFieldWellsArgs and DashboardWordCloudFieldWellsOutput values.
// You can construct a concrete instance of `DashboardWordCloudFieldWellsInput` via:
//
//	DashboardWordCloudFieldWellsArgs{...}
type DashboardWordCloudFieldWellsInput interface {
	pulumi.Input

	ToDashboardWordCloudFieldWellsOutput() DashboardWordCloudFieldWellsOutput
	ToDashboardWordCloudFieldWellsOutputWithContext(context.Context) DashboardWordCloudFieldWellsOutput
}

type DashboardWordCloudFieldWellsArgs struct {
	WordCloudAggregatedFieldWells DashboardWordCloudAggregatedFieldWellsPtrInput `pulumi:"wordCloudAggregatedFieldWells"`
}

func (DashboardWordCloudFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudFieldWells)(nil)).Elem()
}

func (i DashboardWordCloudFieldWellsArgs) ToDashboardWordCloudFieldWellsOutput() DashboardWordCloudFieldWellsOutput {
	return i.ToDashboardWordCloudFieldWellsOutputWithContext(context.Background())
}

func (i DashboardWordCloudFieldWellsArgs) ToDashboardWordCloudFieldWellsOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudFieldWellsOutput)
}

func (i DashboardWordCloudFieldWellsArgs) ToDashboardWordCloudFieldWellsPtrOutput() DashboardWordCloudFieldWellsPtrOutput {
	return i.ToDashboardWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudFieldWellsArgs) ToDashboardWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudFieldWellsOutput).ToDashboardWordCloudFieldWellsPtrOutputWithContext(ctx)
}

// DashboardWordCloudFieldWellsPtrInput is an input type that accepts DashboardWordCloudFieldWellsArgs, DashboardWordCloudFieldWellsPtr and DashboardWordCloudFieldWellsPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudFieldWellsPtrInput` via:
//
//	        DashboardWordCloudFieldWellsArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudFieldWellsPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudFieldWellsPtrOutput() DashboardWordCloudFieldWellsPtrOutput
	ToDashboardWordCloudFieldWellsPtrOutputWithContext(context.Context) DashboardWordCloudFieldWellsPtrOutput
}

type dashboardWordCloudFieldWellsPtrType DashboardWordCloudFieldWellsArgs

func DashboardWordCloudFieldWellsPtr(v *DashboardWordCloudFieldWellsArgs) DashboardWordCloudFieldWellsPtrInput {
	return (*dashboardWordCloudFieldWellsPtrType)(v)
}

func (*dashboardWordCloudFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudFieldWells)(nil)).Elem()
}

func (i *dashboardWordCloudFieldWellsPtrType) ToDashboardWordCloudFieldWellsPtrOutput() DashboardWordCloudFieldWellsPtrOutput {
	return i.ToDashboardWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudFieldWellsPtrType) ToDashboardWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudFieldWellsPtrOutput)
}

type DashboardWordCloudFieldWellsOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudFieldWells)(nil)).Elem()
}

func (o DashboardWordCloudFieldWellsOutput) ToDashboardWordCloudFieldWellsOutput() DashboardWordCloudFieldWellsOutput {
	return o
}

func (o DashboardWordCloudFieldWellsOutput) ToDashboardWordCloudFieldWellsOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsOutput {
	return o
}

func (o DashboardWordCloudFieldWellsOutput) ToDashboardWordCloudFieldWellsPtrOutput() DashboardWordCloudFieldWellsPtrOutput {
	return o.ToDashboardWordCloudFieldWellsPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudFieldWellsOutput) ToDashboardWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudFieldWells) *DashboardWordCloudFieldWells {
		return &v
	}).(DashboardWordCloudFieldWellsPtrOutput)
}

func (o DashboardWordCloudFieldWellsOutput) WordCloudAggregatedFieldWells() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudFieldWells) *DashboardWordCloudAggregatedFieldWells {
		return v.WordCloudAggregatedFieldWells
	}).(DashboardWordCloudAggregatedFieldWellsPtrOutput)
}

type DashboardWordCloudFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudFieldWells)(nil)).Elem()
}

func (o DashboardWordCloudFieldWellsPtrOutput) ToDashboardWordCloudFieldWellsPtrOutput() DashboardWordCloudFieldWellsPtrOutput {
	return o
}

func (o DashboardWordCloudFieldWellsPtrOutput) ToDashboardWordCloudFieldWellsPtrOutputWithContext(ctx context.Context) DashboardWordCloudFieldWellsPtrOutput {
	return o
}

func (o DashboardWordCloudFieldWellsPtrOutput) Elem() DashboardWordCloudFieldWellsOutput {
	return o.ApplyT(func(v *DashboardWordCloudFieldWells) DashboardWordCloudFieldWells {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudFieldWells
		return ret
	}).(DashboardWordCloudFieldWellsOutput)
}

func (o DashboardWordCloudFieldWellsPtrOutput) WordCloudAggregatedFieldWells() DashboardWordCloudAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudFieldWells) *DashboardWordCloudAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.WordCloudAggregatedFieldWells
	}).(DashboardWordCloudAggregatedFieldWellsPtrOutput)
}

type DashboardWordCloudOptions struct {
	CloudLayout         *DashboardWordCloudCloudLayout     `pulumi:"cloudLayout"`
	MaximumStringLength *float64                           `pulumi:"maximumStringLength"`
	WordCasing          *DashboardWordCloudWordCasing      `pulumi:"wordCasing"`
	WordOrientation     *DashboardWordCloudWordOrientation `pulumi:"wordOrientation"`
	WordPadding         *DashboardWordCloudWordPadding     `pulumi:"wordPadding"`
	WordScaling         *DashboardWordCloudWordScaling     `pulumi:"wordScaling"`
}

// DashboardWordCloudOptionsInput is an input type that accepts DashboardWordCloudOptionsArgs and DashboardWordCloudOptionsOutput values.
// You can construct a concrete instance of `DashboardWordCloudOptionsInput` via:
//
//	DashboardWordCloudOptionsArgs{...}
type DashboardWordCloudOptionsInput interface {
	pulumi.Input

	ToDashboardWordCloudOptionsOutput() DashboardWordCloudOptionsOutput
	ToDashboardWordCloudOptionsOutputWithContext(context.Context) DashboardWordCloudOptionsOutput
}

type DashboardWordCloudOptionsArgs struct {
	CloudLayout         DashboardWordCloudCloudLayoutPtrInput     `pulumi:"cloudLayout"`
	MaximumStringLength pulumi.Float64PtrInput                    `pulumi:"maximumStringLength"`
	WordCasing          DashboardWordCloudWordCasingPtrInput      `pulumi:"wordCasing"`
	WordOrientation     DashboardWordCloudWordOrientationPtrInput `pulumi:"wordOrientation"`
	WordPadding         DashboardWordCloudWordPaddingPtrInput     `pulumi:"wordPadding"`
	WordScaling         DashboardWordCloudWordScalingPtrInput     `pulumi:"wordScaling"`
}

func (DashboardWordCloudOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudOptions)(nil)).Elem()
}

func (i DashboardWordCloudOptionsArgs) ToDashboardWordCloudOptionsOutput() DashboardWordCloudOptionsOutput {
	return i.ToDashboardWordCloudOptionsOutputWithContext(context.Background())
}

func (i DashboardWordCloudOptionsArgs) ToDashboardWordCloudOptionsOutputWithContext(ctx context.Context) DashboardWordCloudOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudOptionsOutput)
}

func (i DashboardWordCloudOptionsArgs) ToDashboardWordCloudOptionsPtrOutput() DashboardWordCloudOptionsPtrOutput {
	return i.ToDashboardWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudOptionsArgs) ToDashboardWordCloudOptionsPtrOutputWithContext(ctx context.Context) DashboardWordCloudOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudOptionsOutput).ToDashboardWordCloudOptionsPtrOutputWithContext(ctx)
}

// DashboardWordCloudOptionsPtrInput is an input type that accepts DashboardWordCloudOptionsArgs, DashboardWordCloudOptionsPtr and DashboardWordCloudOptionsPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudOptionsPtrInput` via:
//
//	        DashboardWordCloudOptionsArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudOptionsPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudOptionsPtrOutput() DashboardWordCloudOptionsPtrOutput
	ToDashboardWordCloudOptionsPtrOutputWithContext(context.Context) DashboardWordCloudOptionsPtrOutput
}

type dashboardWordCloudOptionsPtrType DashboardWordCloudOptionsArgs

func DashboardWordCloudOptionsPtr(v *DashboardWordCloudOptionsArgs) DashboardWordCloudOptionsPtrInput {
	return (*dashboardWordCloudOptionsPtrType)(v)
}

func (*dashboardWordCloudOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudOptions)(nil)).Elem()
}

func (i *dashboardWordCloudOptionsPtrType) ToDashboardWordCloudOptionsPtrOutput() DashboardWordCloudOptionsPtrOutput {
	return i.ToDashboardWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudOptionsPtrType) ToDashboardWordCloudOptionsPtrOutputWithContext(ctx context.Context) DashboardWordCloudOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudOptionsPtrOutput)
}

type DashboardWordCloudOptionsOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudOptions)(nil)).Elem()
}

func (o DashboardWordCloudOptionsOutput) ToDashboardWordCloudOptionsOutput() DashboardWordCloudOptionsOutput {
	return o
}

func (o DashboardWordCloudOptionsOutput) ToDashboardWordCloudOptionsOutputWithContext(ctx context.Context) DashboardWordCloudOptionsOutput {
	return o
}

func (o DashboardWordCloudOptionsOutput) ToDashboardWordCloudOptionsPtrOutput() DashboardWordCloudOptionsPtrOutput {
	return o.ToDashboardWordCloudOptionsPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudOptionsOutput) ToDashboardWordCloudOptionsPtrOutputWithContext(ctx context.Context) DashboardWordCloudOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudOptions) *DashboardWordCloudOptions {
		return &v
	}).(DashboardWordCloudOptionsPtrOutput)
}

func (o DashboardWordCloudOptionsOutput) CloudLayout() DashboardWordCloudCloudLayoutPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *DashboardWordCloudCloudLayout { return v.CloudLayout }).(DashboardWordCloudCloudLayoutPtrOutput)
}

func (o DashboardWordCloudOptionsOutput) MaximumStringLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *float64 { return v.MaximumStringLength }).(pulumi.Float64PtrOutput)
}

func (o DashboardWordCloudOptionsOutput) WordCasing() DashboardWordCloudWordCasingPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *DashboardWordCloudWordCasing { return v.WordCasing }).(DashboardWordCloudWordCasingPtrOutput)
}

func (o DashboardWordCloudOptionsOutput) WordOrientation() DashboardWordCloudWordOrientationPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *DashboardWordCloudWordOrientation { return v.WordOrientation }).(DashboardWordCloudWordOrientationPtrOutput)
}

func (o DashboardWordCloudOptionsOutput) WordPadding() DashboardWordCloudWordPaddingPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *DashboardWordCloudWordPadding { return v.WordPadding }).(DashboardWordCloudWordPaddingPtrOutput)
}

func (o DashboardWordCloudOptionsOutput) WordScaling() DashboardWordCloudWordScalingPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudOptions) *DashboardWordCloudWordScaling { return v.WordScaling }).(DashboardWordCloudWordScalingPtrOutput)
}

type DashboardWordCloudOptionsPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudOptions)(nil)).Elem()
}

func (o DashboardWordCloudOptionsPtrOutput) ToDashboardWordCloudOptionsPtrOutput() DashboardWordCloudOptionsPtrOutput {
	return o
}

func (o DashboardWordCloudOptionsPtrOutput) ToDashboardWordCloudOptionsPtrOutputWithContext(ctx context.Context) DashboardWordCloudOptionsPtrOutput {
	return o
}

func (o DashboardWordCloudOptionsPtrOutput) Elem() DashboardWordCloudOptionsOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) DashboardWordCloudOptions {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudOptions
		return ret
	}).(DashboardWordCloudOptionsOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) CloudLayout() DashboardWordCloudCloudLayoutPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *DashboardWordCloudCloudLayout {
		if v == nil {
			return nil
		}
		return v.CloudLayout
	}).(DashboardWordCloudCloudLayoutPtrOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) MaximumStringLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumStringLength
	}).(pulumi.Float64PtrOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) WordCasing() DashboardWordCloudWordCasingPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *DashboardWordCloudWordCasing {
		if v == nil {
			return nil
		}
		return v.WordCasing
	}).(DashboardWordCloudWordCasingPtrOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) WordOrientation() DashboardWordCloudWordOrientationPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *DashboardWordCloudWordOrientation {
		if v == nil {
			return nil
		}
		return v.WordOrientation
	}).(DashboardWordCloudWordOrientationPtrOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) WordPadding() DashboardWordCloudWordPaddingPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *DashboardWordCloudWordPadding {
		if v == nil {
			return nil
		}
		return v.WordPadding
	}).(DashboardWordCloudWordPaddingPtrOutput)
}

func (o DashboardWordCloudOptionsPtrOutput) WordScaling() DashboardWordCloudWordScalingPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudOptions) *DashboardWordCloudWordScaling {
		if v == nil {
			return nil
		}
		return v.WordScaling
	}).(DashboardWordCloudWordScalingPtrOutput)
}

type DashboardWordCloudSortConfiguration struct {
	CategoryItemsLimit *DashboardItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []DashboardFieldSortOptions       `pulumi:"categorySort"`
}

// DashboardWordCloudSortConfigurationInput is an input type that accepts DashboardWordCloudSortConfigurationArgs and DashboardWordCloudSortConfigurationOutput values.
// You can construct a concrete instance of `DashboardWordCloudSortConfigurationInput` via:
//
//	DashboardWordCloudSortConfigurationArgs{...}
type DashboardWordCloudSortConfigurationInput interface {
	pulumi.Input

	ToDashboardWordCloudSortConfigurationOutput() DashboardWordCloudSortConfigurationOutput
	ToDashboardWordCloudSortConfigurationOutputWithContext(context.Context) DashboardWordCloudSortConfigurationOutput
}

type DashboardWordCloudSortConfigurationArgs struct {
	CategoryItemsLimit DashboardItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       DashboardFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (DashboardWordCloudSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudSortConfiguration)(nil)).Elem()
}

func (i DashboardWordCloudSortConfigurationArgs) ToDashboardWordCloudSortConfigurationOutput() DashboardWordCloudSortConfigurationOutput {
	return i.ToDashboardWordCloudSortConfigurationOutputWithContext(context.Background())
}

func (i DashboardWordCloudSortConfigurationArgs) ToDashboardWordCloudSortConfigurationOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudSortConfigurationOutput)
}

func (i DashboardWordCloudSortConfigurationArgs) ToDashboardWordCloudSortConfigurationPtrOutput() DashboardWordCloudSortConfigurationPtrOutput {
	return i.ToDashboardWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudSortConfigurationArgs) ToDashboardWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudSortConfigurationOutput).ToDashboardWordCloudSortConfigurationPtrOutputWithContext(ctx)
}

// DashboardWordCloudSortConfigurationPtrInput is an input type that accepts DashboardWordCloudSortConfigurationArgs, DashboardWordCloudSortConfigurationPtr and DashboardWordCloudSortConfigurationPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudSortConfigurationPtrInput` via:
//
//	        DashboardWordCloudSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudSortConfigurationPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudSortConfigurationPtrOutput() DashboardWordCloudSortConfigurationPtrOutput
	ToDashboardWordCloudSortConfigurationPtrOutputWithContext(context.Context) DashboardWordCloudSortConfigurationPtrOutput
}

type dashboardWordCloudSortConfigurationPtrType DashboardWordCloudSortConfigurationArgs

func DashboardWordCloudSortConfigurationPtr(v *DashboardWordCloudSortConfigurationArgs) DashboardWordCloudSortConfigurationPtrInput {
	return (*dashboardWordCloudSortConfigurationPtrType)(v)
}

func (*dashboardWordCloudSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudSortConfiguration)(nil)).Elem()
}

func (i *dashboardWordCloudSortConfigurationPtrType) ToDashboardWordCloudSortConfigurationPtrOutput() DashboardWordCloudSortConfigurationPtrOutput {
	return i.ToDashboardWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudSortConfigurationPtrType) ToDashboardWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudSortConfigurationPtrOutput)
}

type DashboardWordCloudSortConfigurationOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudSortConfiguration)(nil)).Elem()
}

func (o DashboardWordCloudSortConfigurationOutput) ToDashboardWordCloudSortConfigurationOutput() DashboardWordCloudSortConfigurationOutput {
	return o
}

func (o DashboardWordCloudSortConfigurationOutput) ToDashboardWordCloudSortConfigurationOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationOutput {
	return o
}

func (o DashboardWordCloudSortConfigurationOutput) ToDashboardWordCloudSortConfigurationPtrOutput() DashboardWordCloudSortConfigurationPtrOutput {
	return o.ToDashboardWordCloudSortConfigurationPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudSortConfigurationOutput) ToDashboardWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudSortConfiguration) *DashboardWordCloudSortConfiguration {
		return &v
	}).(DashboardWordCloudSortConfigurationPtrOutput)
}

func (o DashboardWordCloudSortConfigurationOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudSortConfiguration) *DashboardItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardWordCloudSortConfigurationOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v DashboardWordCloudSortConfiguration) []DashboardFieldSortOptions { return v.CategorySort }).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardWordCloudSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudSortConfiguration)(nil)).Elem()
}

func (o DashboardWordCloudSortConfigurationPtrOutput) ToDashboardWordCloudSortConfigurationPtrOutput() DashboardWordCloudSortConfigurationPtrOutput {
	return o
}

func (o DashboardWordCloudSortConfigurationPtrOutput) ToDashboardWordCloudSortConfigurationPtrOutputWithContext(ctx context.Context) DashboardWordCloudSortConfigurationPtrOutput {
	return o
}

func (o DashboardWordCloudSortConfigurationPtrOutput) Elem() DashboardWordCloudSortConfigurationOutput {
	return o.ApplyT(func(v *DashboardWordCloudSortConfiguration) DashboardWordCloudSortConfiguration {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudSortConfiguration
		return ret
	}).(DashboardWordCloudSortConfigurationOutput)
}

func (o DashboardWordCloudSortConfigurationPtrOutput) CategoryItemsLimit() DashboardItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudSortConfiguration) *DashboardItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(DashboardItemsLimitConfigurationPtrOutput)
}

func (o DashboardWordCloudSortConfigurationPtrOutput) CategorySort() DashboardFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *DashboardWordCloudSortConfiguration) []DashboardFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(DashboardFieldSortOptionsArrayOutput)
}

type DashboardWordCloudVisual struct {
	Actions            []DashboardVisualCustomAction         `pulumi:"actions"`
	ChartConfiguration *DashboardWordCloudChartConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []DashboardColumnHierarchy            `pulumi:"columnHierarchies"`
	Subtitle           *DashboardVisualSubtitleLabelOptions  `pulumi:"subtitle"`
	Title              *DashboardVisualTitleLabelOptions     `pulumi:"title"`
	VisualId           string                                `pulumi:"visualId"`
}

// DashboardWordCloudVisualInput is an input type that accepts DashboardWordCloudVisualArgs and DashboardWordCloudVisualOutput values.
// You can construct a concrete instance of `DashboardWordCloudVisualInput` via:
//
//	DashboardWordCloudVisualArgs{...}
type DashboardWordCloudVisualInput interface {
	pulumi.Input

	ToDashboardWordCloudVisualOutput() DashboardWordCloudVisualOutput
	ToDashboardWordCloudVisualOutputWithContext(context.Context) DashboardWordCloudVisualOutput
}

type DashboardWordCloudVisualArgs struct {
	Actions            DashboardVisualCustomActionArrayInput        `pulumi:"actions"`
	ChartConfiguration DashboardWordCloudChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  DashboardColumnHierarchyArrayInput           `pulumi:"columnHierarchies"`
	Subtitle           DashboardVisualSubtitleLabelOptionsPtrInput  `pulumi:"subtitle"`
	Title              DashboardVisualTitleLabelOptionsPtrInput     `pulumi:"title"`
	VisualId           pulumi.StringInput                           `pulumi:"visualId"`
}

func (DashboardWordCloudVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudVisual)(nil)).Elem()
}

func (i DashboardWordCloudVisualArgs) ToDashboardWordCloudVisualOutput() DashboardWordCloudVisualOutput {
	return i.ToDashboardWordCloudVisualOutputWithContext(context.Background())
}

func (i DashboardWordCloudVisualArgs) ToDashboardWordCloudVisualOutputWithContext(ctx context.Context) DashboardWordCloudVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudVisualOutput)
}

func (i DashboardWordCloudVisualArgs) ToDashboardWordCloudVisualPtrOutput() DashboardWordCloudVisualPtrOutput {
	return i.ToDashboardWordCloudVisualPtrOutputWithContext(context.Background())
}

func (i DashboardWordCloudVisualArgs) ToDashboardWordCloudVisualPtrOutputWithContext(ctx context.Context) DashboardWordCloudVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudVisualOutput).ToDashboardWordCloudVisualPtrOutputWithContext(ctx)
}

// DashboardWordCloudVisualPtrInput is an input type that accepts DashboardWordCloudVisualArgs, DashboardWordCloudVisualPtr and DashboardWordCloudVisualPtrOutput values.
// You can construct a concrete instance of `DashboardWordCloudVisualPtrInput` via:
//
//	        DashboardWordCloudVisualArgs{...}
//
//	or:
//
//	        nil
type DashboardWordCloudVisualPtrInput interface {
	pulumi.Input

	ToDashboardWordCloudVisualPtrOutput() DashboardWordCloudVisualPtrOutput
	ToDashboardWordCloudVisualPtrOutputWithContext(context.Context) DashboardWordCloudVisualPtrOutput
}

type dashboardWordCloudVisualPtrType DashboardWordCloudVisualArgs

func DashboardWordCloudVisualPtr(v *DashboardWordCloudVisualArgs) DashboardWordCloudVisualPtrInput {
	return (*dashboardWordCloudVisualPtrType)(v)
}

func (*dashboardWordCloudVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudVisual)(nil)).Elem()
}

func (i *dashboardWordCloudVisualPtrType) ToDashboardWordCloudVisualPtrOutput() DashboardWordCloudVisualPtrOutput {
	return i.ToDashboardWordCloudVisualPtrOutputWithContext(context.Background())
}

func (i *dashboardWordCloudVisualPtrType) ToDashboardWordCloudVisualPtrOutputWithContext(ctx context.Context) DashboardWordCloudVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardWordCloudVisualPtrOutput)
}

type DashboardWordCloudVisualOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardWordCloudVisual)(nil)).Elem()
}

func (o DashboardWordCloudVisualOutput) ToDashboardWordCloudVisualOutput() DashboardWordCloudVisualOutput {
	return o
}

func (o DashboardWordCloudVisualOutput) ToDashboardWordCloudVisualOutputWithContext(ctx context.Context) DashboardWordCloudVisualOutput {
	return o
}

func (o DashboardWordCloudVisualOutput) ToDashboardWordCloudVisualPtrOutput() DashboardWordCloudVisualPtrOutput {
	return o.ToDashboardWordCloudVisualPtrOutputWithContext(context.Background())
}

func (o DashboardWordCloudVisualOutput) ToDashboardWordCloudVisualPtrOutputWithContext(ctx context.Context) DashboardWordCloudVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardWordCloudVisual) *DashboardWordCloudVisual {
		return &v
	}).(DashboardWordCloudVisualPtrOutput)
}

func (o DashboardWordCloudVisualOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) []DashboardVisualCustomAction { return v.Actions }).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardWordCloudVisualOutput) ChartConfiguration() DashboardWordCloudChartConfigurationPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) *DashboardWordCloudChartConfiguration { return v.ChartConfiguration }).(DashboardWordCloudChartConfigurationPtrOutput)
}

func (o DashboardWordCloudVisualOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) []DashboardColumnHierarchy { return v.ColumnHierarchies }).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardWordCloudVisualOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) *DashboardVisualSubtitleLabelOptions { return v.Subtitle }).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardWordCloudVisualOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) *DashboardVisualTitleLabelOptions { return v.Title }).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardWordCloudVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardWordCloudVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type DashboardWordCloudVisualPtrOutput struct{ *pulumi.OutputState }

func (DashboardWordCloudVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardWordCloudVisual)(nil)).Elem()
}

func (o DashboardWordCloudVisualPtrOutput) ToDashboardWordCloudVisualPtrOutput() DashboardWordCloudVisualPtrOutput {
	return o
}

func (o DashboardWordCloudVisualPtrOutput) ToDashboardWordCloudVisualPtrOutputWithContext(ctx context.Context) DashboardWordCloudVisualPtrOutput {
	return o
}

func (o DashboardWordCloudVisualPtrOutput) Elem() DashboardWordCloudVisualOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) DashboardWordCloudVisual {
		if v != nil {
			return *v
		}
		var ret DashboardWordCloudVisual
		return ret
	}).(DashboardWordCloudVisualOutput)
}

func (o DashboardWordCloudVisualPtrOutput) Actions() DashboardVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) []DashboardVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(DashboardVisualCustomActionArrayOutput)
}

func (o DashboardWordCloudVisualPtrOutput) ChartConfiguration() DashboardWordCloudChartConfigurationPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) *DashboardWordCloudChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(DashboardWordCloudChartConfigurationPtrOutput)
}

func (o DashboardWordCloudVisualPtrOutput) ColumnHierarchies() DashboardColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) []DashboardColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(DashboardColumnHierarchyArrayOutput)
}

func (o DashboardWordCloudVisualPtrOutput) Subtitle() DashboardVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) *DashboardVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(DashboardVisualSubtitleLabelOptionsPtrOutput)
}

func (o DashboardWordCloudVisualPtrOutput) Title() DashboardVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) *DashboardVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(DashboardVisualTitleLabelOptionsPtrOutput)
}

func (o DashboardWordCloudVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardWordCloudVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

// <p>Groupings of columns that work together in certain Amazon QuickSight features. This is
//
//	a variant type structure. For this structure to be valid, only one of the attributes can
//	be non-null.</p>
type DataSetColumnGroup struct {
	GeoSpatialColumnGroup *DataSetGeoSpatialColumnGroup `pulumi:"geoSpatialColumnGroup"`
}

// DataSetColumnGroupInput is an input type that accepts DataSetColumnGroupArgs and DataSetColumnGroupOutput values.
// You can construct a concrete instance of `DataSetColumnGroupInput` via:
//
//	DataSetColumnGroupArgs{...}
type DataSetColumnGroupInput interface {
	pulumi.Input

	ToDataSetColumnGroupOutput() DataSetColumnGroupOutput
	ToDataSetColumnGroupOutputWithContext(context.Context) DataSetColumnGroupOutput
}

// <p>Groupings of columns that work together in certain Amazon QuickSight features. This is
//
//	a variant type structure. For this structure to be valid, only one of the attributes can
//	be non-null.</p>
type DataSetColumnGroupArgs struct {
	GeoSpatialColumnGroup DataSetGeoSpatialColumnGroupPtrInput `pulumi:"geoSpatialColumnGroup"`
}

func (DataSetColumnGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnGroup)(nil)).Elem()
}

func (i DataSetColumnGroupArgs) ToDataSetColumnGroupOutput() DataSetColumnGroupOutput {
	return i.ToDataSetColumnGroupOutputWithContext(context.Background())
}

func (i DataSetColumnGroupArgs) ToDataSetColumnGroupOutputWithContext(ctx context.Context) DataSetColumnGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnGroupOutput)
}

// DataSetColumnGroupArrayInput is an input type that accepts DataSetColumnGroupArray and DataSetColumnGroupArrayOutput values.
// You can construct a concrete instance of `DataSetColumnGroupArrayInput` via:
//
//	DataSetColumnGroupArray{ DataSetColumnGroupArgs{...} }
type DataSetColumnGroupArrayInput interface {
	pulumi.Input

	ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput
	ToDataSetColumnGroupArrayOutputWithContext(context.Context) DataSetColumnGroupArrayOutput
}

type DataSetColumnGroupArray []DataSetColumnGroupInput

func (DataSetColumnGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnGroup)(nil)).Elem()
}

func (i DataSetColumnGroupArray) ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput {
	return i.ToDataSetColumnGroupArrayOutputWithContext(context.Background())
}

func (i DataSetColumnGroupArray) ToDataSetColumnGroupArrayOutputWithContext(ctx context.Context) DataSetColumnGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnGroupArrayOutput)
}

// <p>Groupings of columns that work together in certain Amazon QuickSight features. This is
//
//	a variant type structure. For this structure to be valid, only one of the attributes can
//	be non-null.</p>
type DataSetColumnGroupOutput struct{ *pulumi.OutputState }

func (DataSetColumnGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnGroup)(nil)).Elem()
}

func (o DataSetColumnGroupOutput) ToDataSetColumnGroupOutput() DataSetColumnGroupOutput {
	return o
}

func (o DataSetColumnGroupOutput) ToDataSetColumnGroupOutputWithContext(ctx context.Context) DataSetColumnGroupOutput {
	return o
}

func (o DataSetColumnGroupOutput) GeoSpatialColumnGroup() DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ApplyT(func(v DataSetColumnGroup) *DataSetGeoSpatialColumnGroup { return v.GeoSpatialColumnGroup }).(DataSetGeoSpatialColumnGroupPtrOutput)
}

type DataSetColumnGroupArrayOutput struct{ *pulumi.OutputState }

func (DataSetColumnGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnGroup)(nil)).Elem()
}

func (o DataSetColumnGroupArrayOutput) ToDataSetColumnGroupArrayOutput() DataSetColumnGroupArrayOutput {
	return o
}

func (o DataSetColumnGroupArrayOutput) ToDataSetColumnGroupArrayOutputWithContext(ctx context.Context) DataSetColumnGroupArrayOutput {
	return o
}

func (o DataSetColumnGroupArrayOutput) Index(i pulumi.IntInput) DataSetColumnGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetColumnGroup {
		return vs[0].([]DataSetColumnGroup)[vs[1].(int)]
	}).(DataSetColumnGroupOutput)
}

type DataSetColumnLevelPermissionRule struct {
	ColumnNames []string `pulumi:"columnNames"`
	Principals  []string `pulumi:"principals"`
}

// DataSetColumnLevelPermissionRuleInput is an input type that accepts DataSetColumnLevelPermissionRuleArgs and DataSetColumnLevelPermissionRuleOutput values.
// You can construct a concrete instance of `DataSetColumnLevelPermissionRuleInput` via:
//
//	DataSetColumnLevelPermissionRuleArgs{...}
type DataSetColumnLevelPermissionRuleInput interface {
	pulumi.Input

	ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput
	ToDataSetColumnLevelPermissionRuleOutputWithContext(context.Context) DataSetColumnLevelPermissionRuleOutput
}

type DataSetColumnLevelPermissionRuleArgs struct {
	ColumnNames pulumi.StringArrayInput `pulumi:"columnNames"`
	Principals  pulumi.StringArrayInput `pulumi:"principals"`
}

func (DataSetColumnLevelPermissionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (i DataSetColumnLevelPermissionRuleArgs) ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput {
	return i.ToDataSetColumnLevelPermissionRuleOutputWithContext(context.Background())
}

func (i DataSetColumnLevelPermissionRuleArgs) ToDataSetColumnLevelPermissionRuleOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnLevelPermissionRuleOutput)
}

// DataSetColumnLevelPermissionRuleArrayInput is an input type that accepts DataSetColumnLevelPermissionRuleArray and DataSetColumnLevelPermissionRuleArrayOutput values.
// You can construct a concrete instance of `DataSetColumnLevelPermissionRuleArrayInput` via:
//
//	DataSetColumnLevelPermissionRuleArray{ DataSetColumnLevelPermissionRuleArgs{...} }
type DataSetColumnLevelPermissionRuleArrayInput interface {
	pulumi.Input

	ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput
	ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(context.Context) DataSetColumnLevelPermissionRuleArrayOutput
}

type DataSetColumnLevelPermissionRuleArray []DataSetColumnLevelPermissionRuleInput

func (DataSetColumnLevelPermissionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (i DataSetColumnLevelPermissionRuleArray) ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput {
	return i.ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(context.Background())
}

func (i DataSetColumnLevelPermissionRuleArray) ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetColumnLevelPermissionRuleArrayOutput)
}

type DataSetColumnLevelPermissionRuleOutput struct{ *pulumi.OutputState }

func (DataSetColumnLevelPermissionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (o DataSetColumnLevelPermissionRuleOutput) ToDataSetColumnLevelPermissionRuleOutput() DataSetColumnLevelPermissionRuleOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleOutput) ToDataSetColumnLevelPermissionRuleOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetColumnLevelPermissionRule) []string { return v.ColumnNames }).(pulumi.StringArrayOutput)
}

func (o DataSetColumnLevelPermissionRuleOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetColumnLevelPermissionRule) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

type DataSetColumnLevelPermissionRuleArrayOutput struct{ *pulumi.OutputState }

func (DataSetColumnLevelPermissionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetColumnLevelPermissionRule)(nil)).Elem()
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) ToDataSetColumnLevelPermissionRuleArrayOutput() DataSetColumnLevelPermissionRuleArrayOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) ToDataSetColumnLevelPermissionRuleArrayOutputWithContext(ctx context.Context) DataSetColumnLevelPermissionRuleArrayOutput {
	return o
}

func (o DataSetColumnLevelPermissionRuleArrayOutput) Index(i pulumi.IntInput) DataSetColumnLevelPermissionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetColumnLevelPermissionRule {
		return vs[0].([]DataSetColumnLevelPermissionRule)[vs[1].(int)]
	}).(DataSetColumnLevelPermissionRuleOutput)
}

type DataSetFieldFolderMap struct {
}

// DataSetFieldFolderMapInput is an input type that accepts DataSetFieldFolderMap and DataSetFieldFolderMapOutput values.
// You can construct a concrete instance of `DataSetFieldFolderMapInput` via:
//
//	DataSetFieldFolderMap{ "key": DataSetFieldFolderArgs{...} }
type DataSetFieldFolderMapInput interface {
	pulumi.Input

	ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput
	ToDataSetFieldFolderMapOutputWithContext(context.Context) DataSetFieldFolderMapOutput
}

type DataSetFieldFolderMapArgs struct {
}

func (DataSetFieldFolderMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFieldFolderMap)(nil)).Elem()
}

func (i DataSetFieldFolderMapArgs) ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput {
	return i.ToDataSetFieldFolderMapOutputWithContext(context.Background())
}

func (i DataSetFieldFolderMapArgs) ToDataSetFieldFolderMapOutputWithContext(ctx context.Context) DataSetFieldFolderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFieldFolderMapOutput)
}

func (i DataSetFieldFolderMapArgs) ToDataSetFieldFolderMapPtrOutput() DataSetFieldFolderMapPtrOutput {
	return i.ToDataSetFieldFolderMapPtrOutputWithContext(context.Background())
}

func (i DataSetFieldFolderMapArgs) ToDataSetFieldFolderMapPtrOutputWithContext(ctx context.Context) DataSetFieldFolderMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFieldFolderMapOutput).ToDataSetFieldFolderMapPtrOutputWithContext(ctx)
}

// DataSetFieldFolderMapPtrInput is an input type that accepts DataSetFieldFolderMapArgs, DataSetFieldFolderMapPtr and DataSetFieldFolderMapPtrOutput values.
// You can construct a concrete instance of `DataSetFieldFolderMapPtrInput` via:
//
//	        DataSetFieldFolderMapArgs{...}
//
//	or:
//
//	        nil
type DataSetFieldFolderMapPtrInput interface {
	pulumi.Input

	ToDataSetFieldFolderMapPtrOutput() DataSetFieldFolderMapPtrOutput
	ToDataSetFieldFolderMapPtrOutputWithContext(context.Context) DataSetFieldFolderMapPtrOutput
}

type dataSetFieldFolderMapPtrType DataSetFieldFolderMapArgs

func DataSetFieldFolderMapPtr(v *DataSetFieldFolderMapArgs) DataSetFieldFolderMapPtrInput {
	return (*dataSetFieldFolderMapPtrType)(v)
}

func (*dataSetFieldFolderMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetFieldFolderMap)(nil)).Elem()
}

func (i *dataSetFieldFolderMapPtrType) ToDataSetFieldFolderMapPtrOutput() DataSetFieldFolderMapPtrOutput {
	return i.ToDataSetFieldFolderMapPtrOutputWithContext(context.Background())
}

func (i *dataSetFieldFolderMapPtrType) ToDataSetFieldFolderMapPtrOutputWithContext(ctx context.Context) DataSetFieldFolderMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetFieldFolderMapPtrOutput)
}

type DataSetFieldFolderMapOutput struct{ *pulumi.OutputState }

func (DataSetFieldFolderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetFieldFolderMap)(nil)).Elem()
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapOutput() DataSetFieldFolderMapOutput {
	return o
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapOutputWithContext(ctx context.Context) DataSetFieldFolderMapOutput {
	return o
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapPtrOutput() DataSetFieldFolderMapPtrOutput {
	return o.ToDataSetFieldFolderMapPtrOutputWithContext(context.Background())
}

func (o DataSetFieldFolderMapOutput) ToDataSetFieldFolderMapPtrOutputWithContext(ctx context.Context) DataSetFieldFolderMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetFieldFolderMap) *DataSetFieldFolderMap {
		return &v
	}).(DataSetFieldFolderMapPtrOutput)
}

type DataSetFieldFolderMapPtrOutput struct{ *pulumi.OutputState }

func (DataSetFieldFolderMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetFieldFolderMap)(nil)).Elem()
}

func (o DataSetFieldFolderMapPtrOutput) ToDataSetFieldFolderMapPtrOutput() DataSetFieldFolderMapPtrOutput {
	return o
}

func (o DataSetFieldFolderMapPtrOutput) ToDataSetFieldFolderMapPtrOutputWithContext(ctx context.Context) DataSetFieldFolderMapPtrOutput {
	return o
}

func (o DataSetFieldFolderMapPtrOutput) Elem() DataSetFieldFolderMapOutput {
	return o.ApplyT(func(v *DataSetFieldFolderMap) DataSetFieldFolderMap {
		if v != nil {
			return *v
		}
		var ret DataSetFieldFolderMap
		return ret
	}).(DataSetFieldFolderMapOutput)
}

// <p>Geospatial column group that denotes a hierarchy.</p>
type DataSetGeoSpatialColumnGroup struct {
	// <p>Columns in this hierarchy.</p>
	Columns     []string                      `pulumi:"columns"`
	CountryCode *DataSetGeoSpatialCountryCode `pulumi:"countryCode"`
	// <p>A display name for the hierarchy.</p>
	Name string `pulumi:"name"`
}

// DataSetGeoSpatialColumnGroupInput is an input type that accepts DataSetGeoSpatialColumnGroupArgs and DataSetGeoSpatialColumnGroupOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialColumnGroupInput` via:
//
//	DataSetGeoSpatialColumnGroupArgs{...}
type DataSetGeoSpatialColumnGroupInput interface {
	pulumi.Input

	ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput
	ToDataSetGeoSpatialColumnGroupOutputWithContext(context.Context) DataSetGeoSpatialColumnGroupOutput
}

// <p>Geospatial column group that denotes a hierarchy.</p>
type DataSetGeoSpatialColumnGroupArgs struct {
	// <p>Columns in this hierarchy.</p>
	Columns     pulumi.StringArrayInput              `pulumi:"columns"`
	CountryCode DataSetGeoSpatialCountryCodePtrInput `pulumi:"countryCode"`
	// <p>A display name for the hierarchy.</p>
	Name pulumi.StringInput `pulumi:"name"`
}

func (DataSetGeoSpatialColumnGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput {
	return i.ToDataSetGeoSpatialColumnGroupOutputWithContext(context.Background())
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupOutput)
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return i.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (i DataSetGeoSpatialColumnGroupArgs) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupOutput).ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx)
}

// DataSetGeoSpatialColumnGroupPtrInput is an input type that accepts DataSetGeoSpatialColumnGroupArgs, DataSetGeoSpatialColumnGroupPtr and DataSetGeoSpatialColumnGroupPtrOutput values.
// You can construct a concrete instance of `DataSetGeoSpatialColumnGroupPtrInput` via:
//
//	        DataSetGeoSpatialColumnGroupArgs{...}
//
//	or:
//
//	        nil
type DataSetGeoSpatialColumnGroupPtrInput interface {
	pulumi.Input

	ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput
	ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Context) DataSetGeoSpatialColumnGroupPtrOutput
}

type dataSetGeoSpatialColumnGroupPtrType DataSetGeoSpatialColumnGroupArgs

func DataSetGeoSpatialColumnGroupPtr(v *DataSetGeoSpatialColumnGroupArgs) DataSetGeoSpatialColumnGroupPtrInput {
	return (*dataSetGeoSpatialColumnGroupPtrType)(v)
}

func (*dataSetGeoSpatialColumnGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (i *dataSetGeoSpatialColumnGroupPtrType) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return i.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (i *dataSetGeoSpatialColumnGroupPtrType) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetGeoSpatialColumnGroupPtrOutput)
}

// <p>Geospatial column group that denotes a hierarchy.</p>
type DataSetGeoSpatialColumnGroupOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialColumnGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupOutput() DataSetGeoSpatialColumnGroupOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(context.Background())
}

func (o DataSetGeoSpatialColumnGroupOutput) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetGeoSpatialColumnGroup) *DataSetGeoSpatialColumnGroup {
		return &v
	}).(DataSetGeoSpatialColumnGroupPtrOutput)
}

// <p>Columns in this hierarchy.</p>
func (o DataSetGeoSpatialColumnGroupOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

func (o DataSetGeoSpatialColumnGroupOutput) CountryCode() DataSetGeoSpatialCountryCodePtrOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) *DataSetGeoSpatialCountryCode { return v.CountryCode }).(DataSetGeoSpatialCountryCodePtrOutput)
}

// <p>A display name for the hierarchy.</p>
func (o DataSetGeoSpatialColumnGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetGeoSpatialColumnGroup) string { return v.Name }).(pulumi.StringOutput)
}

type DataSetGeoSpatialColumnGroupPtrOutput struct{ *pulumi.OutputState }

func (DataSetGeoSpatialColumnGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetGeoSpatialColumnGroup)(nil)).Elem()
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) ToDataSetGeoSpatialColumnGroupPtrOutput() DataSetGeoSpatialColumnGroupPtrOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) ToDataSetGeoSpatialColumnGroupPtrOutputWithContext(ctx context.Context) DataSetGeoSpatialColumnGroupPtrOutput {
	return o
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) Elem() DataSetGeoSpatialColumnGroupOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) DataSetGeoSpatialColumnGroup {
		if v != nil {
			return *v
		}
		var ret DataSetGeoSpatialColumnGroup
		return ret
	}).(DataSetGeoSpatialColumnGroupOutput)
}

// <p>Columns in this hierarchy.</p>
func (o DataSetGeoSpatialColumnGroupPtrOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) []string {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(pulumi.StringArrayOutput)
}

func (o DataSetGeoSpatialColumnGroupPtrOutput) CountryCode() DataSetGeoSpatialCountryCodePtrOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) *DataSetGeoSpatialCountryCode {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(DataSetGeoSpatialCountryCodePtrOutput)
}

// <p>A display name for the hierarchy.</p>
func (o DataSetGeoSpatialColumnGroupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetGeoSpatialColumnGroup) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// <p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>
type DataSetIngestionWaitPolicy struct {
	// <p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.
	//  Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
	IngestionWaitTimeInHours *float64 `pulumi:"ingestionWaitTimeInHours"`
	// <p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).
	//   Applicable only when DataSetImportMode mode is set to SPICE.</p>
	WaitForSpiceIngestion *bool `pulumi:"waitForSpiceIngestion"`
}

// DataSetIngestionWaitPolicyInput is an input type that accepts DataSetIngestionWaitPolicyArgs and DataSetIngestionWaitPolicyOutput values.
// You can construct a concrete instance of `DataSetIngestionWaitPolicyInput` via:
//
//	DataSetIngestionWaitPolicyArgs{...}
type DataSetIngestionWaitPolicyInput interface {
	pulumi.Input

	ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput
	ToDataSetIngestionWaitPolicyOutputWithContext(context.Context) DataSetIngestionWaitPolicyOutput
}

// <p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>
type DataSetIngestionWaitPolicyArgs struct {
	// <p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.
	//  Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
	IngestionWaitTimeInHours pulumi.Float64PtrInput `pulumi:"ingestionWaitTimeInHours"`
	// <p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).
	//   Applicable only when DataSetImportMode mode is set to SPICE.</p>
	WaitForSpiceIngestion pulumi.BoolPtrInput `pulumi:"waitForSpiceIngestion"`
}

func (DataSetIngestionWaitPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput {
	return i.ToDataSetIngestionWaitPolicyOutputWithContext(context.Background())
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyOutput)
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return i.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (i DataSetIngestionWaitPolicyArgs) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyOutput).ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx)
}

// DataSetIngestionWaitPolicyPtrInput is an input type that accepts DataSetIngestionWaitPolicyArgs, DataSetIngestionWaitPolicyPtr and DataSetIngestionWaitPolicyPtrOutput values.
// You can construct a concrete instance of `DataSetIngestionWaitPolicyPtrInput` via:
//
//	        DataSetIngestionWaitPolicyArgs{...}
//
//	or:
//
//	        nil
type DataSetIngestionWaitPolicyPtrInput interface {
	pulumi.Input

	ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput
	ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Context) DataSetIngestionWaitPolicyPtrOutput
}

type dataSetIngestionWaitPolicyPtrType DataSetIngestionWaitPolicyArgs

func DataSetIngestionWaitPolicyPtr(v *DataSetIngestionWaitPolicyArgs) DataSetIngestionWaitPolicyPtrInput {
	return (*dataSetIngestionWaitPolicyPtrType)(v)
}

func (*dataSetIngestionWaitPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (i *dataSetIngestionWaitPolicyPtrType) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return i.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (i *dataSetIngestionWaitPolicyPtrType) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetIngestionWaitPolicyPtrOutput)
}

// <p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>
type DataSetIngestionWaitPolicyOutput struct{ *pulumi.OutputState }

func (DataSetIngestionWaitPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyOutput() DataSetIngestionWaitPolicyOutput {
	return o
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyOutput {
	return o
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return o.ToDataSetIngestionWaitPolicyPtrOutputWithContext(context.Background())
}

func (o DataSetIngestionWaitPolicyOutput) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetIngestionWaitPolicy) *DataSetIngestionWaitPolicy {
		return &v
	}).(DataSetIngestionWaitPolicyPtrOutput)
}

// <p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.
//
//	Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
func (o DataSetIngestionWaitPolicyOutput) IngestionWaitTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSetIngestionWaitPolicy) *float64 { return v.IngestionWaitTimeInHours }).(pulumi.Float64PtrOutput)
}

// <p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).
//
//	Applicable only when DataSetImportMode mode is set to SPICE.</p>
func (o DataSetIngestionWaitPolicyOutput) WaitForSpiceIngestion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetIngestionWaitPolicy) *bool { return v.WaitForSpiceIngestion }).(pulumi.BoolPtrOutput)
}

type DataSetIngestionWaitPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataSetIngestionWaitPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetIngestionWaitPolicy)(nil)).Elem()
}

func (o DataSetIngestionWaitPolicyPtrOutput) ToDataSetIngestionWaitPolicyPtrOutput() DataSetIngestionWaitPolicyPtrOutput {
	return o
}

func (o DataSetIngestionWaitPolicyPtrOutput) ToDataSetIngestionWaitPolicyPtrOutputWithContext(ctx context.Context) DataSetIngestionWaitPolicyPtrOutput {
	return o
}

func (o DataSetIngestionWaitPolicyPtrOutput) Elem() DataSetIngestionWaitPolicyOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) DataSetIngestionWaitPolicy {
		if v != nil {
			return *v
		}
		var ret DataSetIngestionWaitPolicy
		return ret
	}).(DataSetIngestionWaitPolicyOutput)
}

// <p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.
//
//	Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>
func (o DataSetIngestionWaitPolicyPtrOutput) IngestionWaitTimeInHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.IngestionWaitTimeInHours
	}).(pulumi.Float64PtrOutput)
}

// <p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).
//
//	Applicable only when DataSetImportMode mode is set to SPICE.</p>
func (o DataSetIngestionWaitPolicyPtrOutput) WaitForSpiceIngestion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetIngestionWaitPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForSpiceIngestion
	}).(pulumi.BoolPtrOutput)
}

type DataSetLogicalTableMap struct {
}

// DataSetLogicalTableMapInput is an input type that accepts DataSetLogicalTableMap and DataSetLogicalTableMapOutput values.
// You can construct a concrete instance of `DataSetLogicalTableMapInput` via:
//
//	DataSetLogicalTableMap{ "key": DataSetLogicalTableArgs{...} }
type DataSetLogicalTableMapInput interface {
	pulumi.Input

	ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput
	ToDataSetLogicalTableMapOutputWithContext(context.Context) DataSetLogicalTableMapOutput
}

type DataSetLogicalTableMapArgs struct {
}

func (DataSetLogicalTableMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTableMap)(nil)).Elem()
}

func (i DataSetLogicalTableMapArgs) ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput {
	return i.ToDataSetLogicalTableMapOutputWithContext(context.Background())
}

func (i DataSetLogicalTableMapArgs) ToDataSetLogicalTableMapOutputWithContext(ctx context.Context) DataSetLogicalTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableMapOutput)
}

func (i DataSetLogicalTableMapArgs) ToDataSetLogicalTableMapPtrOutput() DataSetLogicalTableMapPtrOutput {
	return i.ToDataSetLogicalTableMapPtrOutputWithContext(context.Background())
}

func (i DataSetLogicalTableMapArgs) ToDataSetLogicalTableMapPtrOutputWithContext(ctx context.Context) DataSetLogicalTableMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableMapOutput).ToDataSetLogicalTableMapPtrOutputWithContext(ctx)
}

// DataSetLogicalTableMapPtrInput is an input type that accepts DataSetLogicalTableMapArgs, DataSetLogicalTableMapPtr and DataSetLogicalTableMapPtrOutput values.
// You can construct a concrete instance of `DataSetLogicalTableMapPtrInput` via:
//
//	        DataSetLogicalTableMapArgs{...}
//
//	or:
//
//	        nil
type DataSetLogicalTableMapPtrInput interface {
	pulumi.Input

	ToDataSetLogicalTableMapPtrOutput() DataSetLogicalTableMapPtrOutput
	ToDataSetLogicalTableMapPtrOutputWithContext(context.Context) DataSetLogicalTableMapPtrOutput
}

type dataSetLogicalTableMapPtrType DataSetLogicalTableMapArgs

func DataSetLogicalTableMapPtr(v *DataSetLogicalTableMapArgs) DataSetLogicalTableMapPtrInput {
	return (*dataSetLogicalTableMapPtrType)(v)
}

func (*dataSetLogicalTableMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetLogicalTableMap)(nil)).Elem()
}

func (i *dataSetLogicalTableMapPtrType) ToDataSetLogicalTableMapPtrOutput() DataSetLogicalTableMapPtrOutput {
	return i.ToDataSetLogicalTableMapPtrOutputWithContext(context.Background())
}

func (i *dataSetLogicalTableMapPtrType) ToDataSetLogicalTableMapPtrOutputWithContext(ctx context.Context) DataSetLogicalTableMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetLogicalTableMapPtrOutput)
}

type DataSetLogicalTableMapOutput struct{ *pulumi.OutputState }

func (DataSetLogicalTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetLogicalTableMap)(nil)).Elem()
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapOutput() DataSetLogicalTableMapOutput {
	return o
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapOutputWithContext(ctx context.Context) DataSetLogicalTableMapOutput {
	return o
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapPtrOutput() DataSetLogicalTableMapPtrOutput {
	return o.ToDataSetLogicalTableMapPtrOutputWithContext(context.Background())
}

func (o DataSetLogicalTableMapOutput) ToDataSetLogicalTableMapPtrOutputWithContext(ctx context.Context) DataSetLogicalTableMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetLogicalTableMap) *DataSetLogicalTableMap {
		return &v
	}).(DataSetLogicalTableMapPtrOutput)
}

type DataSetLogicalTableMapPtrOutput struct{ *pulumi.OutputState }

func (DataSetLogicalTableMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetLogicalTableMap)(nil)).Elem()
}

func (o DataSetLogicalTableMapPtrOutput) ToDataSetLogicalTableMapPtrOutput() DataSetLogicalTableMapPtrOutput {
	return o
}

func (o DataSetLogicalTableMapPtrOutput) ToDataSetLogicalTableMapPtrOutputWithContext(ctx context.Context) DataSetLogicalTableMapPtrOutput {
	return o
}

func (o DataSetLogicalTableMapPtrOutput) Elem() DataSetLogicalTableMapOutput {
	return o.ApplyT(func(v *DataSetLogicalTableMap) DataSetLogicalTableMap {
		if v != nil {
			return *v
		}
		var ret DataSetLogicalTableMap
		return ret
	}).(DataSetLogicalTableMapOutput)
}

// <p>Output column.</p>
type DataSetOutputColumn struct {
	// <p>A description for a column.</p>
	Description *string `pulumi:"description"`
	// <p>A display name for the dataset.</p>
	Name *string                `pulumi:"name"`
	Type *DataSetColumnDataType `pulumi:"type"`
}

// <p>Output column.</p>
type DataSetOutputColumnOutput struct{ *pulumi.OutputState }

func (DataSetOutputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetOutputColumn)(nil)).Elem()
}

func (o DataSetOutputColumnOutput) ToDataSetOutputColumnOutput() DataSetOutputColumnOutput {
	return o
}

func (o DataSetOutputColumnOutput) ToDataSetOutputColumnOutputWithContext(ctx context.Context) DataSetOutputColumnOutput {
	return o
}

// <p>A description for a column.</p>
func (o DataSetOutputColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// <p>A display name for the dataset.</p>
func (o DataSetOutputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataSetOutputColumnOutput) Type() DataSetColumnDataTypePtrOutput {
	return o.ApplyT(func(v DataSetOutputColumn) *DataSetColumnDataType { return v.Type }).(DataSetColumnDataTypePtrOutput)
}

type DataSetOutputColumnArrayOutput struct{ *pulumi.OutputState }

func (DataSetOutputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetOutputColumn)(nil)).Elem()
}

func (o DataSetOutputColumnArrayOutput) ToDataSetOutputColumnArrayOutput() DataSetOutputColumnArrayOutput {
	return o
}

func (o DataSetOutputColumnArrayOutput) ToDataSetOutputColumnArrayOutputWithContext(ctx context.Context) DataSetOutputColumnArrayOutput {
	return o
}

func (o DataSetOutputColumnArrayOutput) Index(i pulumi.IntInput) DataSetOutputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetOutputColumn {
		return vs[0].([]DataSetOutputColumn)[vs[1].(int)]
	}).(DataSetOutputColumnOutput)
}

type DataSetPhysicalTableMap struct {
}

// DataSetPhysicalTableMapInput is an input type that accepts DataSetPhysicalTableMap and DataSetPhysicalTableMapOutput values.
// You can construct a concrete instance of `DataSetPhysicalTableMapInput` via:
//
//	DataSetPhysicalTableMap{ "key": DataSetPhysicalTableArgs{...} }
type DataSetPhysicalTableMapInput interface {
	pulumi.Input

	ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput
	ToDataSetPhysicalTableMapOutputWithContext(context.Context) DataSetPhysicalTableMapOutput
}

type DataSetPhysicalTableMapArgs struct {
}

func (DataSetPhysicalTableMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetPhysicalTableMap)(nil)).Elem()
}

func (i DataSetPhysicalTableMapArgs) ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput {
	return i.ToDataSetPhysicalTableMapOutputWithContext(context.Background())
}

func (i DataSetPhysicalTableMapArgs) ToDataSetPhysicalTableMapOutputWithContext(ctx context.Context) DataSetPhysicalTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetPhysicalTableMapOutput)
}

func (i DataSetPhysicalTableMapArgs) ToDataSetPhysicalTableMapPtrOutput() DataSetPhysicalTableMapPtrOutput {
	return i.ToDataSetPhysicalTableMapPtrOutputWithContext(context.Background())
}

func (i DataSetPhysicalTableMapArgs) ToDataSetPhysicalTableMapPtrOutputWithContext(ctx context.Context) DataSetPhysicalTableMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetPhysicalTableMapOutput).ToDataSetPhysicalTableMapPtrOutputWithContext(ctx)
}

// DataSetPhysicalTableMapPtrInput is an input type that accepts DataSetPhysicalTableMapArgs, DataSetPhysicalTableMapPtr and DataSetPhysicalTableMapPtrOutput values.
// You can construct a concrete instance of `DataSetPhysicalTableMapPtrInput` via:
//
//	        DataSetPhysicalTableMapArgs{...}
//
//	or:
//
//	        nil
type DataSetPhysicalTableMapPtrInput interface {
	pulumi.Input

	ToDataSetPhysicalTableMapPtrOutput() DataSetPhysicalTableMapPtrOutput
	ToDataSetPhysicalTableMapPtrOutputWithContext(context.Context) DataSetPhysicalTableMapPtrOutput
}

type dataSetPhysicalTableMapPtrType DataSetPhysicalTableMapArgs

func DataSetPhysicalTableMapPtr(v *DataSetPhysicalTableMapArgs) DataSetPhysicalTableMapPtrInput {
	return (*dataSetPhysicalTableMapPtrType)(v)
}

func (*dataSetPhysicalTableMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetPhysicalTableMap)(nil)).Elem()
}

func (i *dataSetPhysicalTableMapPtrType) ToDataSetPhysicalTableMapPtrOutput() DataSetPhysicalTableMapPtrOutput {
	return i.ToDataSetPhysicalTableMapPtrOutputWithContext(context.Background())
}

func (i *dataSetPhysicalTableMapPtrType) ToDataSetPhysicalTableMapPtrOutputWithContext(ctx context.Context) DataSetPhysicalTableMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetPhysicalTableMapPtrOutput)
}

type DataSetPhysicalTableMapOutput struct{ *pulumi.OutputState }

func (DataSetPhysicalTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetPhysicalTableMap)(nil)).Elem()
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapOutput() DataSetPhysicalTableMapOutput {
	return o
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapOutputWithContext(ctx context.Context) DataSetPhysicalTableMapOutput {
	return o
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapPtrOutput() DataSetPhysicalTableMapPtrOutput {
	return o.ToDataSetPhysicalTableMapPtrOutputWithContext(context.Background())
}

func (o DataSetPhysicalTableMapOutput) ToDataSetPhysicalTableMapPtrOutputWithContext(ctx context.Context) DataSetPhysicalTableMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetPhysicalTableMap) *DataSetPhysicalTableMap {
		return &v
	}).(DataSetPhysicalTableMapPtrOutput)
}

type DataSetPhysicalTableMapPtrOutput struct{ *pulumi.OutputState }

func (DataSetPhysicalTableMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetPhysicalTableMap)(nil)).Elem()
}

func (o DataSetPhysicalTableMapPtrOutput) ToDataSetPhysicalTableMapPtrOutput() DataSetPhysicalTableMapPtrOutput {
	return o
}

func (o DataSetPhysicalTableMapPtrOutput) ToDataSetPhysicalTableMapPtrOutputWithContext(ctx context.Context) DataSetPhysicalTableMapPtrOutput {
	return o
}

func (o DataSetPhysicalTableMapPtrOutput) Elem() DataSetPhysicalTableMapOutput {
	return o.ApplyT(func(v *DataSetPhysicalTableMap) DataSetPhysicalTableMap {
		if v != nil {
			return *v
		}
		var ret DataSetPhysicalTableMap
		return ret
	}).(DataSetPhysicalTableMapOutput)
}

// <p>Permission for the resource.</p>
type DataSetResourcePermission struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions []string `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal string `pulumi:"principal"`
}

// DataSetResourcePermissionInput is an input type that accepts DataSetResourcePermissionArgs and DataSetResourcePermissionOutput values.
// You can construct a concrete instance of `DataSetResourcePermissionInput` via:
//
//	DataSetResourcePermissionArgs{...}
type DataSetResourcePermissionInput interface {
	pulumi.Input

	ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput
	ToDataSetResourcePermissionOutputWithContext(context.Context) DataSetResourcePermissionOutput
}

// <p>Permission for the resource.</p>
type DataSetResourcePermissionArgs struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DataSetResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetResourcePermission)(nil)).Elem()
}

func (i DataSetResourcePermissionArgs) ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput {
	return i.ToDataSetResourcePermissionOutputWithContext(context.Background())
}

func (i DataSetResourcePermissionArgs) ToDataSetResourcePermissionOutputWithContext(ctx context.Context) DataSetResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetResourcePermissionOutput)
}

// DataSetResourcePermissionArrayInput is an input type that accepts DataSetResourcePermissionArray and DataSetResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DataSetResourcePermissionArrayInput` via:
//
//	DataSetResourcePermissionArray{ DataSetResourcePermissionArgs{...} }
type DataSetResourcePermissionArrayInput interface {
	pulumi.Input

	ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput
	ToDataSetResourcePermissionArrayOutputWithContext(context.Context) DataSetResourcePermissionArrayOutput
}

type DataSetResourcePermissionArray []DataSetResourcePermissionInput

func (DataSetResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetResourcePermission)(nil)).Elem()
}

func (i DataSetResourcePermissionArray) ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput {
	return i.ToDataSetResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DataSetResourcePermissionArray) ToDataSetResourcePermissionArrayOutputWithContext(ctx context.Context) DataSetResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetResourcePermissionArrayOutput)
}

// <p>Permission for the resource.</p>
type DataSetResourcePermissionOutput struct{ *pulumi.OutputState }

func (DataSetResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetResourcePermission)(nil)).Elem()
}

func (o DataSetResourcePermissionOutput) ToDataSetResourcePermissionOutput() DataSetResourcePermissionOutput {
	return o
}

func (o DataSetResourcePermissionOutput) ToDataSetResourcePermissionOutputWithContext(ctx context.Context) DataSetResourcePermissionOutput {
	return o
}

// <p>The IAM action to grant or revoke permissions on.</p>
func (o DataSetResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
//
//	    following:</p>
//	<ul>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
//	            ARN. Use this option only to share resources (templates) across AWS accounts.
//	            (This is less common.) </p>
//	    </li>
//	 </ul>
func (o DataSetResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DataSetResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DataSetResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetResourcePermission)(nil)).Elem()
}

func (o DataSetResourcePermissionArrayOutput) ToDataSetResourcePermissionArrayOutput() DataSetResourcePermissionArrayOutput {
	return o
}

func (o DataSetResourcePermissionArrayOutput) ToDataSetResourcePermissionArrayOutputWithContext(ctx context.Context) DataSetResourcePermissionArrayOutput {
	return o
}

func (o DataSetResourcePermissionArrayOutput) Index(i pulumi.IntInput) DataSetResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetResourcePermission {
		return vs[0].([]DataSetResourcePermission)[vs[1].(int)]
	}).(DataSetResourcePermissionOutput)
}

// <p>The row-level security configuration for the dataset.</p>
type DataSetRowLevelPermissionDataSet struct {
	// <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
	Arn           string                                  `pulumi:"arn"`
	FormatVersion *DataSetRowLevelPermissionFormatVersion `pulumi:"formatVersion"`
	// <p>The namespace associated with the row-level permissions dataset.</p>
	Namespace        *string                         `pulumi:"namespace"`
	PermissionPolicy DataSetRowLevelPermissionPolicy `pulumi:"permissionPolicy"`
}

// DataSetRowLevelPermissionDataSetInput is an input type that accepts DataSetRowLevelPermissionDataSetArgs and DataSetRowLevelPermissionDataSetOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionDataSetInput` via:
//
//	DataSetRowLevelPermissionDataSetArgs{...}
type DataSetRowLevelPermissionDataSetInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput
	ToDataSetRowLevelPermissionDataSetOutputWithContext(context.Context) DataSetRowLevelPermissionDataSetOutput
}

// <p>The row-level security configuration for the dataset.</p>
type DataSetRowLevelPermissionDataSetArgs struct {
	// <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
	Arn           pulumi.StringInput                             `pulumi:"arn"`
	FormatVersion DataSetRowLevelPermissionFormatVersionPtrInput `pulumi:"formatVersion"`
	// <p>The namespace associated with the row-level permissions dataset.</p>
	Namespace        pulumi.StringPtrInput                `pulumi:"namespace"`
	PermissionPolicy DataSetRowLevelPermissionPolicyInput `pulumi:"permissionPolicy"`
}

func (DataSetRowLevelPermissionDataSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput {
	return i.ToDataSetRowLevelPermissionDataSetOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetOutput)
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return i.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionDataSetArgs) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetOutput).ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx)
}

// DataSetRowLevelPermissionDataSetPtrInput is an input type that accepts DataSetRowLevelPermissionDataSetArgs, DataSetRowLevelPermissionDataSetPtr and DataSetRowLevelPermissionDataSetPtrOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionDataSetPtrInput` via:
//
//	        DataSetRowLevelPermissionDataSetArgs{...}
//
//	or:
//
//	        nil
type DataSetRowLevelPermissionDataSetPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput
	ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Context) DataSetRowLevelPermissionDataSetPtrOutput
}

type dataSetRowLevelPermissionDataSetPtrType DataSetRowLevelPermissionDataSetArgs

func DataSetRowLevelPermissionDataSetPtr(v *DataSetRowLevelPermissionDataSetArgs) DataSetRowLevelPermissionDataSetPtrInput {
	return (*dataSetRowLevelPermissionDataSetPtrType)(v)
}

func (*dataSetRowLevelPermissionDataSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (i *dataSetRowLevelPermissionDataSetPtrType) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return i.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (i *dataSetRowLevelPermissionDataSetPtrType) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionDataSetPtrOutput)
}

// <p>The row-level security configuration for the dataset.</p>
type DataSetRowLevelPermissionDataSetOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionDataSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetOutput() DataSetRowLevelPermissionDataSetOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return o.ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionDataSetOutput) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionDataSet) *DataSetRowLevelPermissionDataSet {
		return &v
	}).(DataSetRowLevelPermissionDataSetPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
func (o DataSetRowLevelPermissionDataSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) string { return v.Arn }).(pulumi.StringOutput)
}

func (o DataSetRowLevelPermissionDataSetOutput) FormatVersion() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) *DataSetRowLevelPermissionFormatVersion {
		return v.FormatVersion
	}).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

// <p>The namespace associated with the row-level permissions dataset.</p>
func (o DataSetRowLevelPermissionDataSetOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o DataSetRowLevelPermissionDataSetOutput) PermissionPolicy() DataSetRowLevelPermissionPolicyOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionDataSet) DataSetRowLevelPermissionPolicy { return v.PermissionPolicy }).(DataSetRowLevelPermissionPolicyOutput)
}

type DataSetRowLevelPermissionDataSetPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionDataSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionDataSet)(nil)).Elem()
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) ToDataSetRowLevelPermissionDataSetPtrOutput() DataSetRowLevelPermissionDataSetPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) ToDataSetRowLevelPermissionDataSetPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionDataSetPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) Elem() DataSetRowLevelPermissionDataSetOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) DataSetRowLevelPermissionDataSet {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionDataSet
		return ret
	}).(DataSetRowLevelPermissionDataSetOutput)
}

// <p>The Amazon Resource Name (ARN) of the permission dataset.</p>
func (o DataSetRowLevelPermissionDataSetPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) FormatVersion() DataSetRowLevelPermissionFormatVersionPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *DataSetRowLevelPermissionFormatVersion {
		if v == nil {
			return nil
		}
		return v.FormatVersion
	}).(DataSetRowLevelPermissionFormatVersionPtrOutput)
}

// <p>The namespace associated with the row-level permissions dataset.</p>
func (o DataSetRowLevelPermissionDataSetPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o DataSetRowLevelPermissionDataSetPtrOutput) PermissionPolicy() DataSetRowLevelPermissionPolicyPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionDataSet) *DataSetRowLevelPermissionPolicy {
		if v == nil {
			return nil
		}
		return &v.PermissionPolicy
	}).(DataSetRowLevelPermissionPolicyPtrOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSetTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// DataSetTagInput is an input type that accepts DataSetTagArgs and DataSetTagOutput values.
// You can construct a concrete instance of `DataSetTagInput` via:
//
//	DataSetTagArgs{...}
type DataSetTagInput interface {
	pulumi.Input

	ToDataSetTagOutput() DataSetTagOutput
	ToDataSetTagOutputWithContext(context.Context) DataSetTagOutput
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSetTagArgs struct {
	// <p>Tag key.</p>
	Key pulumi.StringInput `pulumi:"key"`
	// <p>Tag value.</p>
	Value pulumi.StringInput `pulumi:"value"`
}

func (DataSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTag)(nil)).Elem()
}

func (i DataSetTagArgs) ToDataSetTagOutput() DataSetTagOutput {
	return i.ToDataSetTagOutputWithContext(context.Background())
}

func (i DataSetTagArgs) ToDataSetTagOutputWithContext(ctx context.Context) DataSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagOutput)
}

// DataSetTagArrayInput is an input type that accepts DataSetTagArray and DataSetTagArrayOutput values.
// You can construct a concrete instance of `DataSetTagArrayInput` via:
//
//	DataSetTagArray{ DataSetTagArgs{...} }
type DataSetTagArrayInput interface {
	pulumi.Input

	ToDataSetTagArrayOutput() DataSetTagArrayOutput
	ToDataSetTagArrayOutputWithContext(context.Context) DataSetTagArrayOutput
}

type DataSetTagArray []DataSetTagInput

func (DataSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTag)(nil)).Elem()
}

func (i DataSetTagArray) ToDataSetTagArrayOutput() DataSetTagArrayOutput {
	return i.ToDataSetTagArrayOutputWithContext(context.Background())
}

func (i DataSetTagArray) ToDataSetTagArrayOutputWithContext(ctx context.Context) DataSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagArrayOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSetTagOutput struct{ *pulumi.OutputState }

func (DataSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTag)(nil)).Elem()
}

func (o DataSetTagOutput) ToDataSetTagOutput() DataSetTagOutput {
	return o
}

func (o DataSetTagOutput) ToDataSetTagOutputWithContext(ctx context.Context) DataSetTagOutput {
	return o
}

// <p>Tag key.</p>
func (o DataSetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetTag) string { return v.Key }).(pulumi.StringOutput)
}

// <p>Tag value.</p>
func (o DataSetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetTag) string { return v.Value }).(pulumi.StringOutput)
}

type DataSetTagArrayOutput struct{ *pulumi.OutputState }

func (DataSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTag)(nil)).Elem()
}

func (o DataSetTagArrayOutput) ToDataSetTagArrayOutput() DataSetTagArrayOutput {
	return o
}

func (o DataSetTagArrayOutput) ToDataSetTagArrayOutputWithContext(ctx context.Context) DataSetTagArrayOutput {
	return o
}

func (o DataSetTagArrayOutput) Index(i pulumi.IntInput) DataSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetTag {
		return vs[0].([]DataSetTag)[vs[1].(int)]
	}).(DataSetTagOutput)
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfiguration struct {
	DisableUseAsDirectQuerySource *bool `pulumi:"disableUseAsDirectQuerySource"`
	DisableUseAsImportedSource    *bool `pulumi:"disableUseAsImportedSource"`
}

// DataSetUsageConfigurationInput is an input type that accepts DataSetUsageConfigurationArgs and DataSetUsageConfigurationOutput values.
// You can construct a concrete instance of `DataSetUsageConfigurationInput` via:
//
//	DataSetUsageConfigurationArgs{...}
type DataSetUsageConfigurationInput interface {
	pulumi.Input

	ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput
	ToDataSetUsageConfigurationOutputWithContext(context.Context) DataSetUsageConfigurationOutput
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfigurationArgs struct {
	DisableUseAsDirectQuerySource pulumi.BoolPtrInput `pulumi:"disableUseAsDirectQuerySource"`
	DisableUseAsImportedSource    pulumi.BoolPtrInput `pulumi:"disableUseAsImportedSource"`
}

func (DataSetUsageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUsageConfiguration)(nil)).Elem()
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput {
	return i.ToDataSetUsageConfigurationOutputWithContext(context.Background())
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationOutputWithContext(ctx context.Context) DataSetUsageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationOutput)
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return i.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationOutput).ToDataSetUsageConfigurationPtrOutputWithContext(ctx)
}

// DataSetUsageConfigurationPtrInput is an input type that accepts DataSetUsageConfigurationArgs, DataSetUsageConfigurationPtr and DataSetUsageConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSetUsageConfigurationPtrInput` via:
//
//	        DataSetUsageConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSetUsageConfigurationPtrInput interface {
	pulumi.Input

	ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput
	ToDataSetUsageConfigurationPtrOutputWithContext(context.Context) DataSetUsageConfigurationPtrOutput
}

type dataSetUsageConfigurationPtrType DataSetUsageConfigurationArgs

func DataSetUsageConfigurationPtr(v *DataSetUsageConfigurationArgs) DataSetUsageConfigurationPtrInput {
	return (*dataSetUsageConfigurationPtrType)(v)
}

func (*dataSetUsageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUsageConfiguration)(nil)).Elem()
}

func (i *dataSetUsageConfigurationPtrType) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return i.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSetUsageConfigurationPtrType) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationPtrOutput)
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfigurationOutput struct{ *pulumi.OutputState }

func (DataSetUsageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUsageConfiguration)(nil)).Elem()
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput {
	return o
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationOutputWithContext(ctx context.Context) DataSetUsageConfigurationOutput {
	return o
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return o.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetUsageConfiguration) *DataSetUsageConfiguration {
		return &v
	}).(DataSetUsageConfigurationPtrOutput)
}

func (o DataSetUsageConfigurationOutput) DisableUseAsDirectQuerySource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUsageConfiguration) *bool { return v.DisableUseAsDirectQuerySource }).(pulumi.BoolPtrOutput)
}

func (o DataSetUsageConfigurationOutput) DisableUseAsImportedSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUsageConfiguration) *bool { return v.DisableUseAsImportedSource }).(pulumi.BoolPtrOutput)
}

type DataSetUsageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSetUsageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUsageConfiguration)(nil)).Elem()
}

func (o DataSetUsageConfigurationPtrOutput) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return o
}

func (o DataSetUsageConfigurationPtrOutput) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return o
}

func (o DataSetUsageConfigurationPtrOutput) Elem() DataSetUsageConfigurationOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) DataSetUsageConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSetUsageConfiguration
		return ret
	}).(DataSetUsageConfigurationOutput)
}

func (o DataSetUsageConfigurationPtrOutput) DisableUseAsDirectQuerySource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableUseAsDirectQuerySource
	}).(pulumi.BoolPtrOutput)
}

func (o DataSetUsageConfigurationPtrOutput) DisableUseAsImportedSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableUseAsImportedSource
	}).(pulumi.BoolPtrOutput)
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParameters struct {
	// <p>The Amazon Elasticsearch Service domain.</p>
	Domain string `pulumi:"domain"`
}

// DataSourceAmazonElasticsearchParametersInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs and DataSourceAmazonElasticsearchParametersOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersInput` via:
//
//	DataSourceAmazonElasticsearchParametersArgs{...}
type DataSourceAmazonElasticsearchParametersInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput
	ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersOutput
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParametersArgs struct {
	// <p>The Amazon Elasticsearch Service domain.</p>
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (DataSourceAmazonElasticsearchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return i.ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput)
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput).ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx)
}

// DataSourceAmazonElasticsearchParametersPtrInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs, DataSourceAmazonElasticsearchParametersPtr and DataSourceAmazonElasticsearchParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersPtrInput` via:
//
//	        DataSourceAmazonElasticsearchParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAmazonElasticsearchParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput
	ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersPtrOutput
}

type dataSourceAmazonElasticsearchParametersPtrType DataSourceAmazonElasticsearchParametersArgs

func DataSourceAmazonElasticsearchParametersPtr(v *DataSourceAmazonElasticsearchParametersArgs) DataSourceAmazonElasticsearchParametersPtrInput {
	return (*dataSourceAmazonElasticsearchParametersPtrType)(v)
}

func (*dataSourceAmazonElasticsearchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAmazonElasticsearchParameters) *DataSourceAmazonElasticsearchParameters {
		return &v
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// <p>The Amazon Elasticsearch Service domain.</p>
func (o DataSourceAmazonElasticsearchParametersOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAmazonElasticsearchParameters) string { return v.Domain }).(pulumi.StringOutput)
}

type DataSourceAmazonElasticsearchParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) Elem() DataSourceAmazonElasticsearchParametersOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) DataSourceAmazonElasticsearchParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAmazonElasticsearchParameters
		return ret
	}).(DataSourceAmazonElasticsearchParametersOutput)
}

// <p>The Amazon Elasticsearch Service domain.</p>
func (o DataSourceAmazonElasticsearchParametersPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParameters struct {
	// <p>The Amazon OpenSearch Service domain.</p>
	Domain string `pulumi:"domain"`
}

// DataSourceAmazonOpenSearchParametersInput is an input type that accepts DataSourceAmazonOpenSearchParametersArgs and DataSourceAmazonOpenSearchParametersOutput values.
// You can construct a concrete instance of `DataSourceAmazonOpenSearchParametersInput` via:
//
//	DataSourceAmazonOpenSearchParametersArgs{...}
type DataSourceAmazonOpenSearchParametersInput interface {
	pulumi.Input

	ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput
	ToDataSourceAmazonOpenSearchParametersOutputWithContext(context.Context) DataSourceAmazonOpenSearchParametersOutput
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParametersArgs struct {
	// <p>The Amazon OpenSearch Service domain.</p>
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (DataSourceAmazonOpenSearchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput {
	return i.ToDataSourceAmazonOpenSearchParametersOutputWithContext(context.Background())
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersOutput)
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return i.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersOutput).ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx)
}

// DataSourceAmazonOpenSearchParametersPtrInput is an input type that accepts DataSourceAmazonOpenSearchParametersArgs, DataSourceAmazonOpenSearchParametersPtr and DataSourceAmazonOpenSearchParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAmazonOpenSearchParametersPtrInput` via:
//
//	        DataSourceAmazonOpenSearchParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAmazonOpenSearchParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput
	ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Context) DataSourceAmazonOpenSearchParametersPtrOutput
}

type dataSourceAmazonOpenSearchParametersPtrType DataSourceAmazonOpenSearchParametersArgs

func DataSourceAmazonOpenSearchParametersPtr(v *DataSourceAmazonOpenSearchParametersArgs) DataSourceAmazonOpenSearchParametersPtrInput {
	return (*dataSourceAmazonOpenSearchParametersPtrType)(v)
}

func (*dataSourceAmazonOpenSearchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (i *dataSourceAmazonOpenSearchParametersPtrType) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return i.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAmazonOpenSearchParametersPtrType) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonOpenSearchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAmazonOpenSearchParameters) *DataSourceAmazonOpenSearchParameters {
		return &v
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

// <p>The Amazon OpenSearch Service domain.</p>
func (o DataSourceAmazonOpenSearchParametersOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAmazonOpenSearchParameters) string { return v.Domain }).(pulumi.StringOutput)
}

type DataSourceAmazonOpenSearchParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonOpenSearchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) Elem() DataSourceAmazonOpenSearchParametersOutput {
	return o.ApplyT(func(v *DataSourceAmazonOpenSearchParameters) DataSourceAmazonOpenSearchParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAmazonOpenSearchParameters
		return ret
	}).(DataSourceAmazonOpenSearchParametersOutput)
}

// <p>The Amazon OpenSearch Service domain.</p>
func (o DataSourceAmazonOpenSearchParametersPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAmazonOpenSearchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParameters struct {
	// <p>The workgroup that Amazon Athena uses.</p>
	WorkGroup *string `pulumi:"workGroup"`
}

// DataSourceAthenaParametersInput is an input type that accepts DataSourceAthenaParametersArgs and DataSourceAthenaParametersOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersInput` via:
//
//	DataSourceAthenaParametersArgs{...}
type DataSourceAthenaParametersInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput
	ToDataSourceAthenaParametersOutputWithContext(context.Context) DataSourceAthenaParametersOutput
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParametersArgs struct {
	// <p>The workgroup that Amazon Athena uses.</p>
	WorkGroup pulumi.StringPtrInput `pulumi:"workGroup"`
}

func (DataSourceAthenaParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return i.ToDataSourceAthenaParametersOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput)
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput).ToDataSourceAthenaParametersPtrOutputWithContext(ctx)
}

// DataSourceAthenaParametersPtrInput is an input type that accepts DataSourceAthenaParametersArgs, DataSourceAthenaParametersPtr and DataSourceAthenaParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersPtrInput` via:
//
//	        DataSourceAthenaParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAthenaParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput
	ToDataSourceAthenaParametersPtrOutputWithContext(context.Context) DataSourceAthenaParametersPtrOutput
}

type dataSourceAthenaParametersPtrType DataSourceAthenaParametersArgs

func DataSourceAthenaParametersPtr(v *DataSourceAthenaParametersArgs) DataSourceAthenaParametersPtrInput {
	return (*dataSourceAthenaParametersPtrType)(v)
}

func (*dataSourceAthenaParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersPtrOutput)
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAthenaParameters) *DataSourceAthenaParameters {
		return &v
	}).(DataSourceAthenaParametersPtrOutput)
}

// <p>The workgroup that Amazon Athena uses.</p>
func (o DataSourceAthenaParametersOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAthenaParameters) *string { return v.WorkGroup }).(pulumi.StringPtrOutput)
}

type DataSourceAthenaParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) Elem() DataSourceAthenaParametersOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) DataSourceAthenaParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAthenaParameters
		return ret
	}).(DataSourceAthenaParametersOutput)
}

// <p>The workgroup that Amazon Athena uses.</p>
func (o DataSourceAthenaParametersPtrOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) *string {
		if v == nil {
			return nil
		}
		return v.WorkGroup
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraParametersInput is an input type that accepts DataSourceAuroraParametersArgs and DataSourceAuroraParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersInput` via:
//
//	DataSourceAuroraParametersArgs{...}
type DataSourceAuroraParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput
	ToDataSourceAuroraParametersOutputWithContext(context.Context) DataSourceAuroraParametersOutput
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return i.ToDataSourceAuroraParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput)
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput).ToDataSourceAuroraParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraParametersPtrInput is an input type that accepts DataSourceAuroraParametersArgs, DataSourceAuroraParametersPtr and DataSourceAuroraParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersPtrInput` via:
//
//	        DataSourceAuroraParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAuroraParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput
	ToDataSourceAuroraParametersPtrOutputWithContext(context.Context) DataSourceAuroraParametersPtrOutput
}

type dataSourceAuroraParametersPtrType DataSourceAuroraParametersArgs

func DataSourceAuroraParametersPtr(v *DataSourceAuroraParametersArgs) DataSourceAuroraParametersPtrInput {
	return (*dataSourceAuroraParametersPtrType)(v)
}

func (*dataSourceAuroraParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersPtrOutput)
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraParameters) *DataSourceAuroraParameters {
		return &v
	}).(DataSourceAuroraParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) Elem() DataSourceAuroraParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) DataSourceAuroraParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraParameters
		return ret
	}).(DataSourceAuroraParametersOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraPostgreSqlParametersInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs and DataSourceAuroraPostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersInput` via:
//
//	DataSourceAuroraPostgreSqlParametersArgs{...}
type DataSourceAuroraPostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput
	ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersOutput
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraPostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput)
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput).ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraPostgreSqlParametersPtrInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs, DataSourceAuroraPostgreSqlParametersPtr and DataSourceAuroraPostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersPtrInput` via:
//
//	        DataSourceAuroraPostgreSqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAuroraPostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput
	ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput
}

type dataSourceAuroraPostgreSqlParametersPtrType DataSourceAuroraPostgreSqlParametersArgs

func DataSourceAuroraPostgreSqlParametersPtr(v *DataSourceAuroraPostgreSqlParametersArgs) DataSourceAuroraPostgreSqlParametersPtrInput {
	return (*dataSourceAuroraPostgreSqlParametersPtrType)(v)
}

func (*dataSourceAuroraPostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraPostgreSqlParameters) *DataSourceAuroraPostgreSqlParameters {
		return &v
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraPostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Elem() DataSourceAuroraPostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) DataSourceAuroraPostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraPostgreSqlParameters
		return ret
	}).(DataSourceAuroraPostgreSqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPair struct {
	// <p>A set of alternate data source parameters that you want to share for these
	//             credentials. The credentials are applied in tandem with the data source parameters when
	//             you copy a data source by using a create or update request. The API operation compares
	//             the <code>DataSourceParameters</code> structure that's in the request with the
	//             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
	//             structures are an exact match, the request is allowed to use the new data source with
	//             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
	//             null, the <code>DataSourceParameters</code> originally used with these
	//                 <code>Credentials</code> is automatically allowed.</p>
	AlternateDataSourceParameters []DataSourceParameters `pulumi:"alternateDataSourceParameters"`
	// <p>Password.</p>
	Password string `pulumi:"password"`
	// <p>User name.</p>
	Username string `pulumi:"username"`
}

// DataSourceCredentialPairInput is an input type that accepts DataSourceCredentialPairArgs and DataSourceCredentialPairOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairInput` via:
//
//	DataSourceCredentialPairArgs{...}
type DataSourceCredentialPairInput interface {
	pulumi.Input

	ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput
	ToDataSourceCredentialPairOutputWithContext(context.Context) DataSourceCredentialPairOutput
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPairArgs struct {
	// <p>A set of alternate data source parameters that you want to share for these
	//             credentials. The credentials are applied in tandem with the data source parameters when
	//             you copy a data source by using a create or update request. The API operation compares
	//             the <code>DataSourceParameters</code> structure that's in the request with the
	//             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
	//             structures are an exact match, the request is allowed to use the new data source with
	//             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
	//             null, the <code>DataSourceParameters</code> originally used with these
	//                 <code>Credentials</code> is automatically allowed.</p>
	AlternateDataSourceParameters DataSourceParametersArrayInput `pulumi:"alternateDataSourceParameters"`
	// <p>Password.</p>
	Password pulumi.StringInput `pulumi:"password"`
	// <p>User name.</p>
	Username pulumi.StringInput `pulumi:"username"`
}

func (DataSourceCredentialPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return i.ToDataSourceCredentialPairOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput)
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput).ToDataSourceCredentialPairPtrOutputWithContext(ctx)
}

// DataSourceCredentialPairPtrInput is an input type that accepts DataSourceCredentialPairArgs, DataSourceCredentialPairPtr and DataSourceCredentialPairPtrOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairPtrInput` via:
//
//	        DataSourceCredentialPairArgs{...}
//
//	or:
//
//	        nil
type DataSourceCredentialPairPtrInput interface {
	pulumi.Input

	ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput
	ToDataSourceCredentialPairPtrOutputWithContext(context.Context) DataSourceCredentialPairPtrOutput
}

type dataSourceCredentialPairPtrType DataSourceCredentialPairArgs

func DataSourceCredentialPairPtr(v *DataSourceCredentialPairArgs) DataSourceCredentialPairPtrInput {
	return (*dataSourceCredentialPairPtrType)(v)
}

func (*dataSourceCredentialPairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairPtrOutput)
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPairOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCredentialPair) *DataSourceCredentialPair {
		return &v
	}).(DataSourceCredentialPairPtrOutput)
}

// <p>A set of alternate data source parameters that you want to share for these
//
//	credentials. The credentials are applied in tandem with the data source parameters when
//	you copy a data source by using a create or update request. The API operation compares
//	the <code>DataSourceParameters</code> structure that's in the request with the
//	structures in the <code>AlternateDataSourceParameters</code> allow list. If the
//	structures are an exact match, the request is allowed to use the new data source with
//	the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
//	null, the <code>DataSourceParameters</code> originally used with these
//	    <code>Credentials</code> is automatically allowed.</p>
func (o DataSourceCredentialPairOutput) AlternateDataSourceParameters() DataSourceParametersArrayOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) []DataSourceParameters { return v.AlternateDataSourceParameters }).(DataSourceParametersArrayOutput)
}

// <p>Password.</p>
func (o DataSourceCredentialPairOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Password }).(pulumi.StringOutput)
}

// <p>User name.</p>
func (o DataSourceCredentialPairOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Username }).(pulumi.StringOutput)
}

type DataSourceCredentialPairPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) Elem() DataSourceCredentialPairOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) DataSourceCredentialPair {
		if v != nil {
			return *v
		}
		var ret DataSourceCredentialPair
		return ret
	}).(DataSourceCredentialPairOutput)
}

// <p>A set of alternate data source parameters that you want to share for these
//
//	credentials. The credentials are applied in tandem with the data source parameters when
//	you copy a data source by using a create or update request. The API operation compares
//	the <code>DataSourceParameters</code> structure that's in the request with the
//	structures in the <code>AlternateDataSourceParameters</code> allow list. If the
//	structures are an exact match, the request is allowed to use the new data source with
//	the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
//	null, the <code>DataSourceParameters</code> originally used with these
//	    <code>Credentials</code> is automatically allowed.</p>
func (o DataSourceCredentialPairPtrOutput) AlternateDataSourceParameters() DataSourceParametersArrayOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) []DataSourceParameters {
		if v == nil {
			return nil
		}
		return v.AlternateDataSourceParameters
	}).(DataSourceParametersArrayOutput)
}

// <p>Password.</p>
func (o DataSourceCredentialPairPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// <p>User name.</p>
func (o DataSourceCredentialPairPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentials struct {
	// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
	//             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
	//             data source in the ARN is used as the credentials for the
	//             <code>DataSourceCredentials</code> structure.</p>
	CopySourceArn  *string                   `pulumi:"copySourceArn"`
	CredentialPair *DataSourceCredentialPair `pulumi:"credentialPair"`
	// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
	SecretArn *string `pulumi:"secretArn"`
}

// DataSourceCredentialsInput is an input type that accepts DataSourceCredentialsArgs and DataSourceCredentialsOutput values.
// You can construct a concrete instance of `DataSourceCredentialsInput` via:
//
//	DataSourceCredentialsArgs{...}
type DataSourceCredentialsInput interface {
	pulumi.Input

	ToDataSourceCredentialsOutput() DataSourceCredentialsOutput
	ToDataSourceCredentialsOutputWithContext(context.Context) DataSourceCredentialsOutput
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentialsArgs struct {
	// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
	//             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
	//             data source in the ARN is used as the credentials for the
	//             <code>DataSourceCredentials</code> structure.</p>
	CopySourceArn  pulumi.StringPtrInput            `pulumi:"copySourceArn"`
	CredentialPair DataSourceCredentialPairPtrInput `pulumi:"credentialPair"`
	// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DataSourceCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentials)(nil)).Elem()
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsOutput() DataSourceCredentialsOutput {
	return i.ToDataSourceCredentialsOutputWithContext(context.Background())
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsOutput)
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return i.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsOutput).ToDataSourceCredentialsPtrOutputWithContext(ctx)
}

// DataSourceCredentialsPtrInput is an input type that accepts DataSourceCredentialsArgs, DataSourceCredentialsPtr and DataSourceCredentialsPtrOutput values.
// You can construct a concrete instance of `DataSourceCredentialsPtrInput` via:
//
//	        DataSourceCredentialsArgs{...}
//
//	or:
//
//	        nil
type DataSourceCredentialsPtrInput interface {
	pulumi.Input

	ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput
	ToDataSourceCredentialsPtrOutputWithContext(context.Context) DataSourceCredentialsPtrOutput
}

type dataSourceCredentialsPtrType DataSourceCredentialsArgs

func DataSourceCredentialsPtr(v *DataSourceCredentialsArgs) DataSourceCredentialsPtrInput {
	return (*dataSourceCredentialsPtrType)(v)
}

func (*dataSourceCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentials)(nil)).Elem()
}

func (i *dataSourceCredentialsPtrType) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return i.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i *dataSourceCredentialsPtrType) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsPtrOutput)
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentialsOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentials)(nil)).Elem()
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsOutput() DataSourceCredentialsOutput {
	return o
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceCredentialsOutput {
	return o
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return o.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCredentials) *DataSourceCredentials {
		return &v
	}).(DataSourceCredentialsPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
//
//	want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
//	data source in the ARN is used as the credentials for the
//	<code>DataSourceCredentials</code> structure.</p>
func (o DataSourceCredentialsOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *string { return v.CopySourceArn }).(pulumi.StringPtrOutput)
}

func (o DataSourceCredentialsOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *DataSourceCredentialPair { return v.CredentialPair }).(DataSourceCredentialPairPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
func (o DataSourceCredentialsOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DataSourceCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentials)(nil)).Elem()
}

func (o DataSourceCredentialsPtrOutput) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceCredentialsPtrOutput) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceCredentialsPtrOutput) Elem() DataSourceCredentialsOutput {
	return o.ApplyT(func(v *DataSourceCredentials) DataSourceCredentials {
		if v != nil {
			return *v
		}
		var ret DataSourceCredentials
		return ret
	}).(DataSourceCredentialsOutput)
}

// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
//
//	want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
//	data source in the ARN is used as the credentials for the
//	<code>DataSourceCredentials</code> structure.</p>
func (o DataSourceCredentialsPtrOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.CopySourceArn
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceCredentialsPtrOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *DataSourceCredentialPair {
		if v == nil {
			return nil
		}
		return v.CredentialPair
	}).(DataSourceCredentialPairPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
func (o DataSourceCredentialsPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParameters struct {
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
	// <p>The HTTP Path of the Databricks data source.</p>
	SqlEndpointPath string `pulumi:"sqlEndpointPath"`
}

// DataSourceDatabricksParametersInput is an input type that accepts DataSourceDatabricksParametersArgs and DataSourceDatabricksParametersOutput values.
// You can construct a concrete instance of `DataSourceDatabricksParametersInput` via:
//
//	DataSourceDatabricksParametersArgs{...}
type DataSourceDatabricksParametersInput interface {
	pulumi.Input

	ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput
	ToDataSourceDatabricksParametersOutputWithContext(context.Context) DataSourceDatabricksParametersOutput
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParametersArgs struct {
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
	// <p>The HTTP Path of the Databricks data source.</p>
	SqlEndpointPath pulumi.StringInput `pulumi:"sqlEndpointPath"`
}

func (DataSourceDatabricksParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabricksParameters)(nil)).Elem()
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput {
	return i.ToDataSourceDatabricksParametersOutputWithContext(context.Background())
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersOutputWithContext(ctx context.Context) DataSourceDatabricksParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersOutput)
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return i.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersOutput).ToDataSourceDatabricksParametersPtrOutputWithContext(ctx)
}

// DataSourceDatabricksParametersPtrInput is an input type that accepts DataSourceDatabricksParametersArgs, DataSourceDatabricksParametersPtr and DataSourceDatabricksParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceDatabricksParametersPtrInput` via:
//
//	        DataSourceDatabricksParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceDatabricksParametersPtrInput interface {
	pulumi.Input

	ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput
	ToDataSourceDatabricksParametersPtrOutputWithContext(context.Context) DataSourceDatabricksParametersPtrOutput
}

type dataSourceDatabricksParametersPtrType DataSourceDatabricksParametersArgs

func DataSourceDatabricksParametersPtr(v *DataSourceDatabricksParametersArgs) DataSourceDatabricksParametersPtrInput {
	return (*dataSourceDatabricksParametersPtrType)(v)
}

func (*dataSourceDatabricksParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDatabricksParameters)(nil)).Elem()
}

func (i *dataSourceDatabricksParametersPtrType) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return i.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceDatabricksParametersPtrType) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersPtrOutput)
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParametersOutput struct{ *pulumi.OutputState }

func (DataSourceDatabricksParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabricksParameters)(nil)).Elem()
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput {
	return o
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersOutputWithContext(ctx context.Context) DataSourceDatabricksParametersOutput {
	return o
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return o.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDatabricksParameters) *DataSourceDatabricksParameters {
		return &v
	}).(DataSourceDatabricksParametersPtrOutput)
}

// <p>Host.</p>
func (o DataSourceDatabricksParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDatabricksParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceDatabricksParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceDatabricksParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

// <p>The HTTP Path of the Databricks data source.</p>
func (o DataSourceDatabricksParametersOutput) SqlEndpointPath() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDatabricksParameters) string { return v.SqlEndpointPath }).(pulumi.StringOutput)
}

type DataSourceDatabricksParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDatabricksParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDatabricksParameters)(nil)).Elem()
}

func (o DataSourceDatabricksParametersPtrOutput) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return o
}

func (o DataSourceDatabricksParametersPtrOutput) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return o
}

func (o DataSourceDatabricksParametersPtrOutput) Elem() DataSourceDatabricksParametersOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) DataSourceDatabricksParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceDatabricksParameters
		return ret
	}).(DataSourceDatabricksParametersOutput)
}

// <p>Host.</p>
func (o DataSourceDatabricksParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceDatabricksParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The HTTP Path of the Databricks data source.</p>
func (o DataSourceDatabricksParametersPtrOutput) SqlEndpointPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *string {
		if v == nil {
			return nil
		}
		return &v.SqlEndpointPath
	}).(pulumi.StringPtrOutput)
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfo struct {
	// <p>Error message.</p>
	Message *string                  `pulumi:"message"`
	Type    *DataSourceErrorInfoType `pulumi:"type"`
}

// DataSourceErrorInfoInput is an input type that accepts DataSourceErrorInfoArgs and DataSourceErrorInfoOutput values.
// You can construct a concrete instance of `DataSourceErrorInfoInput` via:
//
//	DataSourceErrorInfoArgs{...}
type DataSourceErrorInfoInput interface {
	pulumi.Input

	ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput
	ToDataSourceErrorInfoOutputWithContext(context.Context) DataSourceErrorInfoOutput
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfoArgs struct {
	// <p>Error message.</p>
	Message pulumi.StringPtrInput           `pulumi:"message"`
	Type    DataSourceErrorInfoTypePtrInput `pulumi:"type"`
}

func (DataSourceErrorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfo)(nil)).Elem()
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput {
	return i.ToDataSourceErrorInfoOutputWithContext(context.Background())
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceErrorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoOutput)
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return i.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoOutput).ToDataSourceErrorInfoPtrOutputWithContext(ctx)
}

// DataSourceErrorInfoPtrInput is an input type that accepts DataSourceErrorInfoArgs, DataSourceErrorInfoPtr and DataSourceErrorInfoPtrOutput values.
// You can construct a concrete instance of `DataSourceErrorInfoPtrInput` via:
//
//	        DataSourceErrorInfoArgs{...}
//
//	or:
//
//	        nil
type DataSourceErrorInfoPtrInput interface {
	pulumi.Input

	ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput
	ToDataSourceErrorInfoPtrOutputWithContext(context.Context) DataSourceErrorInfoPtrOutput
}

type dataSourceErrorInfoPtrType DataSourceErrorInfoArgs

func DataSourceErrorInfoPtr(v *DataSourceErrorInfoArgs) DataSourceErrorInfoPtrInput {
	return (*dataSourceErrorInfoPtrType)(v)
}

func (*dataSourceErrorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfo)(nil)).Elem()
}

func (i *dataSourceErrorInfoPtrType) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return i.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i *dataSourceErrorInfoPtrType) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoPtrOutput)
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfoOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput {
	return o
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceErrorInfoOutput {
	return o
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return o.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceErrorInfo) *DataSourceErrorInfo {
		return &v
	}).(DataSourceErrorInfoPtrOutput)
}

// <p>Error message.</p>
func (o DataSourceErrorInfoOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceErrorInfo) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o DataSourceErrorInfoOutput) Type() DataSourceErrorInfoTypePtrOutput {
	return o.ApplyT(func(v DataSourceErrorInfo) *DataSourceErrorInfoType { return v.Type }).(DataSourceErrorInfoTypePtrOutput)
}

type DataSourceErrorInfoPtrOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceErrorInfoPtrOutput) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceErrorInfoPtrOutput) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceErrorInfoPtrOutput) Elem() DataSourceErrorInfoOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) DataSourceErrorInfo {
		if v != nil {
			return *v
		}
		var ret DataSourceErrorInfo
		return ret
	}).(DataSourceErrorInfoOutput)
}

// <p>Error message.</p>
func (o DataSourceErrorInfoPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceErrorInfoPtrOutput) Type() DataSourceErrorInfoTypePtrOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) *DataSourceErrorInfoType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DataSourceErrorInfoTypePtrOutput)
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocation struct {
	// <p>Amazon S3 bucket.</p>
	Bucket string `pulumi:"bucket"`
	// <p>Amazon S3 key that identifies an object.</p>
	Key string `pulumi:"key"`
}

// DataSourceManifestFileLocationInput is an input type that accepts DataSourceManifestFileLocationArgs and DataSourceManifestFileLocationOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationInput` via:
//
//	DataSourceManifestFileLocationArgs{...}
type DataSourceManifestFileLocationInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput
	ToDataSourceManifestFileLocationOutputWithContext(context.Context) DataSourceManifestFileLocationOutput
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocationArgs struct {
	// <p>Amazon S3 bucket.</p>
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// <p>Amazon S3 key that identifies an object.</p>
	Key pulumi.StringInput `pulumi:"key"`
}

func (DataSourceManifestFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return i.ToDataSourceManifestFileLocationOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput)
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput).ToDataSourceManifestFileLocationPtrOutputWithContext(ctx)
}

// DataSourceManifestFileLocationPtrInput is an input type that accepts DataSourceManifestFileLocationArgs, DataSourceManifestFileLocationPtr and DataSourceManifestFileLocationPtrOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationPtrInput` via:
//
//	        DataSourceManifestFileLocationArgs{...}
//
//	or:
//
//	        nil
type DataSourceManifestFileLocationPtrInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput
	ToDataSourceManifestFileLocationPtrOutputWithContext(context.Context) DataSourceManifestFileLocationPtrOutput
}

type dataSourceManifestFileLocationPtrType DataSourceManifestFileLocationArgs

func DataSourceManifestFileLocationPtr(v *DataSourceManifestFileLocationArgs) DataSourceManifestFileLocationPtrInput {
	return (*dataSourceManifestFileLocationPtrType)(v)
}

func (*dataSourceManifestFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocationOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceManifestFileLocation) *DataSourceManifestFileLocation {
		return &v
	}).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Amazon S3 bucket.</p>
func (o DataSourceManifestFileLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// <p>Amazon S3 key that identifies an object.</p>
func (o DataSourceManifestFileLocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Key }).(pulumi.StringOutput)
}

type DataSourceManifestFileLocationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) Elem() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) DataSourceManifestFileLocation {
		if v != nil {
			return *v
		}
		var ret DataSourceManifestFileLocation
		return ret
	}).(DataSourceManifestFileLocationOutput)
}

// <p>Amazon S3 bucket.</p>
func (o DataSourceManifestFileLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon S3 key that identifies an object.</p>
func (o DataSourceManifestFileLocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceMariaDbParametersInput is an input type that accepts DataSourceMariaDbParametersArgs and DataSourceMariaDbParametersOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersInput` via:
//
//	DataSourceMariaDbParametersArgs{...}
type DataSourceMariaDbParametersInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput
	ToDataSourceMariaDbParametersOutputWithContext(context.Context) DataSourceMariaDbParametersOutput
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMariaDbParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return i.ToDataSourceMariaDbParametersOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput)
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput).ToDataSourceMariaDbParametersPtrOutputWithContext(ctx)
}

// DataSourceMariaDbParametersPtrInput is an input type that accepts DataSourceMariaDbParametersArgs, DataSourceMariaDbParametersPtr and DataSourceMariaDbParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersPtrInput` via:
//
//	        DataSourceMariaDbParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceMariaDbParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput
	ToDataSourceMariaDbParametersPtrOutputWithContext(context.Context) DataSourceMariaDbParametersPtrOutput
}

type dataSourceMariaDbParametersPtrType DataSourceMariaDbParametersArgs

func DataSourceMariaDbParametersPtr(v *DataSourceMariaDbParametersArgs) DataSourceMariaDbParametersPtrInput {
	return (*dataSourceMariaDbParametersPtrType)(v)
}

func (*dataSourceMariaDbParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersPtrOutput)
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMariaDbParameters) *DataSourceMariaDbParameters {
		return &v
	}).(DataSourceMariaDbParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceMariaDbParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceMariaDbParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceMariaDbParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMariaDbParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMariaDbParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) Elem() DataSourceMariaDbParametersOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) DataSourceMariaDbParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMariaDbParameters
		return ret
	}).(DataSourceMariaDbParametersOutput)
}

// <p>Database.</p>
func (o DataSourceMariaDbParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceMariaDbParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceMariaDbParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceMySqlParametersInput is an input type that accepts DataSourceMySqlParametersArgs and DataSourceMySqlParametersOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersInput` via:
//
//	DataSourceMySqlParametersArgs{...}
type DataSourceMySqlParametersInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput
	ToDataSourceMySqlParametersOutputWithContext(context.Context) DataSourceMySqlParametersOutput
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMySqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return i.ToDataSourceMySqlParametersOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput)
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput).ToDataSourceMySqlParametersPtrOutputWithContext(ctx)
}

// DataSourceMySqlParametersPtrInput is an input type that accepts DataSourceMySqlParametersArgs, DataSourceMySqlParametersPtr and DataSourceMySqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersPtrInput` via:
//
//	        DataSourceMySqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceMySqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput
	ToDataSourceMySqlParametersPtrOutputWithContext(context.Context) DataSourceMySqlParametersPtrOutput
}

type dataSourceMySqlParametersPtrType DataSourceMySqlParametersArgs

func DataSourceMySqlParametersPtr(v *DataSourceMySqlParametersArgs) DataSourceMySqlParametersPtrInput {
	return (*dataSourceMySqlParametersPtrType)(v)
}

func (*dataSourceMySqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersPtrOutput)
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMySqlParameters) *DataSourceMySqlParameters {
		return &v
	}).(DataSourceMySqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceMySqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceMySqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceMySqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMySqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMySqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) Elem() DataSourceMySqlParametersOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) DataSourceMySqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMySqlParameters
		return ret
	}).(DataSourceMySqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourceMySqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceMySqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceMySqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

type DataSourceOracleParameters struct {
	Database string  `pulumi:"database"`
	Host     string  `pulumi:"host"`
	Port     float64 `pulumi:"port"`
}

// DataSourceOracleParametersInput is an input type that accepts DataSourceOracleParametersArgs and DataSourceOracleParametersOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersInput` via:
//
//	DataSourceOracleParametersArgs{...}
type DataSourceOracleParametersInput interface {
	pulumi.Input

	ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput
	ToDataSourceOracleParametersOutputWithContext(context.Context) DataSourceOracleParametersOutput
}

type DataSourceOracleParametersArgs struct {
	Database pulumi.StringInput  `pulumi:"database"`
	Host     pulumi.StringInput  `pulumi:"host"`
	Port     pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceOracleParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return i.ToDataSourceOracleParametersOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput)
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput).ToDataSourceOracleParametersPtrOutputWithContext(ctx)
}

// DataSourceOracleParametersPtrInput is an input type that accepts DataSourceOracleParametersArgs, DataSourceOracleParametersPtr and DataSourceOracleParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersPtrInput` via:
//
//	        DataSourceOracleParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceOracleParametersPtrInput interface {
	pulumi.Input

	ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput
	ToDataSourceOracleParametersPtrOutputWithContext(context.Context) DataSourceOracleParametersPtrOutput
}

type dataSourceOracleParametersPtrType DataSourceOracleParametersArgs

func DataSourceOracleParametersPtr(v *DataSourceOracleParametersArgs) DataSourceOracleParametersPtrInput {
	return (*dataSourceOracleParametersPtrType)(v)
}

func (*dataSourceOracleParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersPtrOutput)
}

type DataSourceOracleParametersOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceOracleParameters) *DataSourceOracleParameters {
		return &v
	}).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceOracleParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Database }).(pulumi.StringOutput)
}

func (o DataSourceOracleParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Host }).(pulumi.StringOutput)
}

func (o DataSourceOracleParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceOracleParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceOracleParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) Elem() DataSourceOracleParametersOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) DataSourceOracleParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceOracleParameters
		return ret
	}).(DataSourceOracleParametersOutput)
}

func (o DataSourceOracleParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceOracleParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceOracleParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParameters struct {
	AmazonElasticsearchParameters *DataSourceAmazonElasticsearchParameters `pulumi:"amazonElasticsearchParameters"`
	AmazonOpenSearchParameters    *DataSourceAmazonOpenSearchParameters    `pulumi:"amazonOpenSearchParameters"`
	AthenaParameters              *DataSourceAthenaParameters              `pulumi:"athenaParameters"`
	AuroraParameters              *DataSourceAuroraParameters              `pulumi:"auroraParameters"`
	AuroraPostgreSqlParameters    *DataSourceAuroraPostgreSqlParameters    `pulumi:"auroraPostgreSqlParameters"`
	DatabricksParameters          *DataSourceDatabricksParameters          `pulumi:"databricksParameters"`
	MariaDbParameters             *DataSourceMariaDbParameters             `pulumi:"mariaDbParameters"`
	MySqlParameters               *DataSourceMySqlParameters               `pulumi:"mySqlParameters"`
	OracleParameters              *DataSourceOracleParameters              `pulumi:"oracleParameters"`
	PostgreSqlParameters          *DataSourcePostgreSqlParameters          `pulumi:"postgreSqlParameters"`
	PrestoParameters              *DataSourcePrestoParameters              `pulumi:"prestoParameters"`
	RdsParameters                 *DataSourceRdsParameters                 `pulumi:"rdsParameters"`
	RedshiftParameters            *DataSourceRedshiftParameters            `pulumi:"redshiftParameters"`
	S3Parameters                  *DataSourceS3Parameters                  `pulumi:"s3Parameters"`
	SnowflakeParameters           *DataSourceSnowflakeParameters           `pulumi:"snowflakeParameters"`
	SparkParameters               *DataSourceSparkParameters               `pulumi:"sparkParameters"`
	SqlServerParameters           *DataSourceSqlServerParameters           `pulumi:"sqlServerParameters"`
	TeradataParameters            *DataSourceTeradataParameters            `pulumi:"teradataParameters"`
}

// DataSourceParametersInput is an input type that accepts DataSourceParametersArgs and DataSourceParametersOutput values.
// You can construct a concrete instance of `DataSourceParametersInput` via:
//
//	DataSourceParametersArgs{...}
type DataSourceParametersInput interface {
	pulumi.Input

	ToDataSourceParametersOutput() DataSourceParametersOutput
	ToDataSourceParametersOutputWithContext(context.Context) DataSourceParametersOutput
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParametersArgs struct {
	AmazonElasticsearchParameters DataSourceAmazonElasticsearchParametersPtrInput `pulumi:"amazonElasticsearchParameters"`
	AmazonOpenSearchParameters    DataSourceAmazonOpenSearchParametersPtrInput    `pulumi:"amazonOpenSearchParameters"`
	AthenaParameters              DataSourceAthenaParametersPtrInput              `pulumi:"athenaParameters"`
	AuroraParameters              DataSourceAuroraParametersPtrInput              `pulumi:"auroraParameters"`
	AuroraPostgreSqlParameters    DataSourceAuroraPostgreSqlParametersPtrInput    `pulumi:"auroraPostgreSqlParameters"`
	DatabricksParameters          DataSourceDatabricksParametersPtrInput          `pulumi:"databricksParameters"`
	MariaDbParameters             DataSourceMariaDbParametersPtrInput             `pulumi:"mariaDbParameters"`
	MySqlParameters               DataSourceMySqlParametersPtrInput               `pulumi:"mySqlParameters"`
	OracleParameters              DataSourceOracleParametersPtrInput              `pulumi:"oracleParameters"`
	PostgreSqlParameters          DataSourcePostgreSqlParametersPtrInput          `pulumi:"postgreSqlParameters"`
	PrestoParameters              DataSourcePrestoParametersPtrInput              `pulumi:"prestoParameters"`
	RdsParameters                 DataSourceRdsParametersPtrInput                 `pulumi:"rdsParameters"`
	RedshiftParameters            DataSourceRedshiftParametersPtrInput            `pulumi:"redshiftParameters"`
	S3Parameters                  DataSourceS3ParametersPtrInput                  `pulumi:"s3Parameters"`
	SnowflakeParameters           DataSourceSnowflakeParametersPtrInput           `pulumi:"snowflakeParameters"`
	SparkParameters               DataSourceSparkParametersPtrInput               `pulumi:"sparkParameters"`
	SqlServerParameters           DataSourceSqlServerParametersPtrInput           `pulumi:"sqlServerParameters"`
	TeradataParameters            DataSourceTeradataParametersPtrInput            `pulumi:"teradataParameters"`
}

func (DataSourceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParameters)(nil)).Elem()
}

func (i DataSourceParametersArgs) ToDataSourceParametersOutput() DataSourceParametersOutput {
	return i.ToDataSourceParametersOutputWithContext(context.Background())
}

func (i DataSourceParametersArgs) ToDataSourceParametersOutputWithContext(ctx context.Context) DataSourceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersOutput)
}

func (i DataSourceParametersArgs) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return i.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceParametersArgs) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersOutput).ToDataSourceParametersPtrOutputWithContext(ctx)
}

// DataSourceParametersPtrInput is an input type that accepts DataSourceParametersArgs, DataSourceParametersPtr and DataSourceParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceParametersPtrInput` via:
//
//	        DataSourceParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceParametersPtrInput interface {
	pulumi.Input

	ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput
	ToDataSourceParametersPtrOutputWithContext(context.Context) DataSourceParametersPtrOutput
}

type dataSourceParametersPtrType DataSourceParametersArgs

func DataSourceParametersPtr(v *DataSourceParametersArgs) DataSourceParametersPtrInput {
	return (*dataSourceParametersPtrType)(v)
}

func (*dataSourceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParameters)(nil)).Elem()
}

func (i *dataSourceParametersPtrType) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return i.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceParametersPtrType) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersPtrOutput)
}

// DataSourceParametersArrayInput is an input type that accepts DataSourceParametersArray and DataSourceParametersArrayOutput values.
// You can construct a concrete instance of `DataSourceParametersArrayInput` via:
//
//	DataSourceParametersArray{ DataSourceParametersArgs{...} }
type DataSourceParametersArrayInput interface {
	pulumi.Input

	ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput
	ToDataSourceParametersArrayOutputWithContext(context.Context) DataSourceParametersArrayOutput
}

type DataSourceParametersArray []DataSourceParametersInput

func (DataSourceParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceParameters)(nil)).Elem()
}

func (i DataSourceParametersArray) ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput {
	return i.ToDataSourceParametersArrayOutputWithContext(context.Background())
}

func (i DataSourceParametersArray) ToDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersArrayOutput)
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParametersOutput struct{ *pulumi.OutputState }

func (DataSourceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersOutput) ToDataSourceParametersOutput() DataSourceParametersOutput {
	return o
}

func (o DataSourceParametersOutput) ToDataSourceParametersOutputWithContext(ctx context.Context) DataSourceParametersOutput {
	return o
}

func (o DataSourceParametersOutput) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return o.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceParametersOutput) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceParameters) *DataSourceParameters {
		return &v
	}).(DataSourceParametersPtrOutput)
}

func (o DataSourceParametersOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

func (o DataSourceParametersOutput) AmazonOpenSearchParameters() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAmazonOpenSearchParameters {
		return v.AmazonOpenSearchParameters
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

func (o DataSourceParametersOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAthenaParameters { return v.AthenaParameters }).(DataSourceAthenaParametersPtrOutput)
}

func (o DataSourceParametersOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAuroraParameters { return v.AuroraParameters }).(DataSourceAuroraParametersPtrOutput)
}

func (o DataSourceParametersOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) DatabricksParameters() DataSourceDatabricksParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceDatabricksParameters { return v.DatabricksParameters }).(DataSourceDatabricksParametersPtrOutput)
}

func (o DataSourceParametersOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceMariaDbParameters { return v.MariaDbParameters }).(DataSourceMariaDbParametersPtrOutput)
}

func (o DataSourceParametersOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceMySqlParameters { return v.MySqlParameters }).(DataSourceMySqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceOracleParameters { return v.OracleParameters }).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceParametersOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourcePostgreSqlParameters { return v.PostgreSqlParameters }).(DataSourcePostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourcePrestoParameters { return v.PrestoParameters }).(DataSourcePrestoParametersPtrOutput)
}

func (o DataSourceParametersOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceRdsParameters { return v.RdsParameters }).(DataSourceRdsParametersPtrOutput)
}

func (o DataSourceParametersOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceRedshiftParameters { return v.RedshiftParameters }).(DataSourceRedshiftParametersPtrOutput)
}

func (o DataSourceParametersOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceS3Parameters { return v.S3Parameters }).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceParametersOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSnowflakeParameters { return v.SnowflakeParameters }).(DataSourceSnowflakeParametersPtrOutput)
}

func (o DataSourceParametersOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSparkParameters { return v.SparkParameters }).(DataSourceSparkParametersPtrOutput)
}

func (o DataSourceParametersOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSqlServerParameters { return v.SqlServerParameters }).(DataSourceSqlServerParametersPtrOutput)
}

func (o DataSourceParametersOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceTeradataParameters { return v.TeradataParameters }).(DataSourceTeradataParametersPtrOutput)
}

type DataSourceParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersPtrOutput) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return o
}

func (o DataSourceParametersPtrOutput) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return o
}

func (o DataSourceParametersPtrOutput) Elem() DataSourceParametersOutput {
	return o.ApplyT(func(v *DataSourceParameters) DataSourceParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceParameters
		return ret
	}).(DataSourceParametersOutput)
}

func (o DataSourceParametersPtrOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		if v == nil {
			return nil
		}
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AmazonOpenSearchParameters() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAmazonOpenSearchParameters {
		if v == nil {
			return nil
		}
		return v.AmazonOpenSearchParameters
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAthenaParameters {
		if v == nil {
			return nil
		}
		return v.AthenaParameters
	}).(DataSourceAthenaParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAuroraParameters {
		if v == nil {
			return nil
		}
		return v.AuroraParameters
	}).(DataSourceAuroraParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) DatabricksParameters() DataSourceDatabricksParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceDatabricksParameters {
		if v == nil {
			return nil
		}
		return v.DatabricksParameters
	}).(DataSourceDatabricksParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceMariaDbParameters {
		if v == nil {
			return nil
		}
		return v.MariaDbParameters
	}).(DataSourceMariaDbParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceMySqlParameters {
		if v == nil {
			return nil
		}
		return v.MySqlParameters
	}).(DataSourceMySqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceOracleParameters {
		if v == nil {
			return nil
		}
		return v.OracleParameters
	}).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourcePostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.PostgreSqlParameters
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourcePrestoParameters {
		if v == nil {
			return nil
		}
		return v.PrestoParameters
	}).(DataSourcePrestoParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceRdsParameters {
		if v == nil {
			return nil
		}
		return v.RdsParameters
	}).(DataSourceRdsParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceRedshiftParameters {
		if v == nil {
			return nil
		}
		return v.RedshiftParameters
	}).(DataSourceRedshiftParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceS3Parameters {
		if v == nil {
			return nil
		}
		return v.S3Parameters
	}).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSnowflakeParameters {
		if v == nil {
			return nil
		}
		return v.SnowflakeParameters
	}).(DataSourceSnowflakeParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSparkParameters {
		if v == nil {
			return nil
		}
		return v.SparkParameters
	}).(DataSourceSparkParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSqlServerParameters {
		if v == nil {
			return nil
		}
		return v.SqlServerParameters
	}).(DataSourceSqlServerParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceTeradataParameters {
		if v == nil {
			return nil
		}
		return v.TeradataParameters
	}).(DataSourceTeradataParametersPtrOutput)
}

type DataSourceParametersArrayOutput struct{ *pulumi.OutputState }

func (DataSourceParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersArrayOutput) ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput {
	return o
}

func (o DataSourceParametersArrayOutput) ToDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceParametersArrayOutput {
	return o
}

func (o DataSourceParametersArrayOutput) Index(i pulumi.IntInput) DataSourceParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceParameters {
		return vs[0].([]DataSourceParameters)[vs[1].(int)]
	}).(DataSourceParametersOutput)
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourcePostgreSqlParametersInput is an input type that accepts DataSourcePostgreSqlParametersArgs and DataSourcePostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersInput` via:
//
//	DataSourcePostgreSqlParametersArgs{...}
type DataSourcePostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput
	ToDataSourcePostgreSqlParametersOutputWithContext(context.Context) DataSourcePostgreSqlParametersOutput
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return i.ToDataSourcePostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput)
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput).ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourcePostgreSqlParametersPtrInput is an input type that accepts DataSourcePostgreSqlParametersArgs, DataSourcePostgreSqlParametersPtr and DataSourcePostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersPtrInput` via:
//
//	        DataSourcePostgreSqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourcePostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput
	ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Context) DataSourcePostgreSqlParametersPtrOutput
}

type dataSourcePostgreSqlParametersPtrType DataSourcePostgreSqlParametersArgs

func DataSourcePostgreSqlParametersPtr(v *DataSourcePostgreSqlParametersArgs) DataSourcePostgreSqlParametersPtrInput {
	return (*dataSourcePostgreSqlParametersPtrType)(v)
}

func (*dataSourcePostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersPtrOutput)
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePostgreSqlParameters) *DataSourcePostgreSqlParameters {
		return &v
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourcePostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourcePostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourcePostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) Elem() DataSourcePostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) DataSourcePostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePostgreSqlParameters
		return ret
	}).(DataSourcePostgreSqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Presto parameters.</p>
type DataSourcePrestoParameters struct {
	// <p>Catalog.</p>
	Catalog string `pulumi:"catalog"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourcePrestoParametersInput is an input type that accepts DataSourcePrestoParametersArgs and DataSourcePrestoParametersOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersInput` via:
//
//	DataSourcePrestoParametersArgs{...}
type DataSourcePrestoParametersInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput
	ToDataSourcePrestoParametersOutputWithContext(context.Context) DataSourcePrestoParametersOutput
}

// <p>Presto parameters.</p>
type DataSourcePrestoParametersArgs struct {
	// <p>Catalog.</p>
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePrestoParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return i.ToDataSourcePrestoParametersOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput)
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput).ToDataSourcePrestoParametersPtrOutputWithContext(ctx)
}

// DataSourcePrestoParametersPtrInput is an input type that accepts DataSourcePrestoParametersArgs, DataSourcePrestoParametersPtr and DataSourcePrestoParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersPtrInput` via:
//
//	        DataSourcePrestoParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourcePrestoParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput
	ToDataSourcePrestoParametersPtrOutputWithContext(context.Context) DataSourcePrestoParametersPtrOutput
}

type dataSourcePrestoParametersPtrType DataSourcePrestoParametersArgs

func DataSourcePrestoParametersPtr(v *DataSourcePrestoParametersArgs) DataSourcePrestoParametersPtrInput {
	return (*dataSourcePrestoParametersPtrType)(v)
}

func (*dataSourcePrestoParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersPtrOutput)
}

// <p>Presto parameters.</p>
type DataSourcePrestoParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePrestoParameters) *DataSourcePrestoParameters {
		return &v
	}).(DataSourcePrestoParametersPtrOutput)
}

// <p>Catalog.</p>
func (o DataSourcePrestoParametersOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Catalog }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourcePrestoParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourcePrestoParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePrestoParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePrestoParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) Elem() DataSourcePrestoParametersOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) DataSourcePrestoParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePrestoParameters
		return ret
	}).(DataSourcePrestoParametersOutput)
}

// <p>Catalog.</p>
func (o DataSourcePrestoParametersPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourcePrestoParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourcePrestoParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Instance ID.</p>
	InstanceId string `pulumi:"instanceId"`
}

// DataSourceRdsParametersInput is an input type that accepts DataSourceRdsParametersArgs and DataSourceRdsParametersOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersInput` via:
//
//	DataSourceRdsParametersArgs{...}
type DataSourceRdsParametersInput interface {
	pulumi.Input

	ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput
	ToDataSourceRdsParametersOutputWithContext(context.Context) DataSourceRdsParametersOutput
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Instance ID.</p>
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (DataSourceRdsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return i.ToDataSourceRdsParametersOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput)
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput).ToDataSourceRdsParametersPtrOutputWithContext(ctx)
}

// DataSourceRdsParametersPtrInput is an input type that accepts DataSourceRdsParametersArgs, DataSourceRdsParametersPtr and DataSourceRdsParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersPtrInput` via:
//
//	        DataSourceRdsParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceRdsParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput
	ToDataSourceRdsParametersPtrOutputWithContext(context.Context) DataSourceRdsParametersPtrOutput
}

type dataSourceRdsParametersPtrType DataSourceRdsParametersArgs

func DataSourceRdsParametersPtr(v *DataSourceRdsParametersArgs) DataSourceRdsParametersPtrInput {
	return (*dataSourceRdsParametersPtrType)(v)
}

func (*dataSourceRdsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersPtrOutput)
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRdsParameters) *DataSourceRdsParameters {
		return &v
	}).(DataSourceRdsParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRdsParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Instance ID.</p>
func (o DataSourceRdsParametersOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.InstanceId }).(pulumi.StringOutput)
}

type DataSourceRdsParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) Elem() DataSourceRdsParametersOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) DataSourceRdsParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRdsParameters
		return ret
	}).(DataSourceRdsParametersOutput)
}

// <p>Database.</p>
func (o DataSourceRdsParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Instance ID.</p>
func (o DataSourceRdsParametersPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParameters struct {
	// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
	//             provided.</p>
	ClusterId *string `pulumi:"clusterId"`
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
	Host *string `pulumi:"host"`
	// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
	Port *float64 `pulumi:"port"`
}

// DataSourceRedshiftParametersInput is an input type that accepts DataSourceRedshiftParametersArgs and DataSourceRedshiftParametersOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersInput` via:
//
//	DataSourceRedshiftParametersArgs{...}
type DataSourceRedshiftParametersInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput
	ToDataSourceRedshiftParametersOutputWithContext(context.Context) DataSourceRedshiftParametersOutput
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParametersArgs struct {
	// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
	//             provided.</p>
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
	Host pulumi.StringPtrInput `pulumi:"host"`
	// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
	Port pulumi.Float64PtrInput `pulumi:"port"`
}

func (DataSourceRedshiftParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return i.ToDataSourceRedshiftParametersOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput)
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput).ToDataSourceRedshiftParametersPtrOutputWithContext(ctx)
}

// DataSourceRedshiftParametersPtrInput is an input type that accepts DataSourceRedshiftParametersArgs, DataSourceRedshiftParametersPtr and DataSourceRedshiftParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersPtrInput` via:
//
//	        DataSourceRedshiftParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceRedshiftParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput
	ToDataSourceRedshiftParametersPtrOutputWithContext(context.Context) DataSourceRedshiftParametersPtrOutput
}

type dataSourceRedshiftParametersPtrType DataSourceRedshiftParametersArgs

func DataSourceRedshiftParametersPtr(v *DataSourceRedshiftParametersArgs) DataSourceRedshiftParametersPtrInput {
	return (*dataSourceRedshiftParametersPtrType)(v)
}

func (*dataSourceRedshiftParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersPtrOutput)
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRedshiftParameters) *DataSourceRedshiftParameters {
		return &v
	}).(DataSourceRedshiftParametersPtrOutput)
}

// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
//
//	provided.</p>
func (o DataSourceRedshiftParametersOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRedshiftParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

type DataSourceRedshiftParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) Elem() DataSourceRedshiftParametersOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) DataSourceRedshiftParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRedshiftParameters
		return ret
	}).(DataSourceRedshiftParametersOutput)
}

// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
//
//	provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRedshiftParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *float64 {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermission struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions []string `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal string `pulumi:"principal"`
}

// DataSourceResourcePermissionInput is an input type that accepts DataSourceResourcePermissionArgs and DataSourceResourcePermissionOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionInput` via:
//
//	DataSourceResourcePermissionArgs{...}
type DataSourceResourcePermissionInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput
	ToDataSourceResourcePermissionOutputWithContext(context.Context) DataSourceResourcePermissionOutput
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermissionArgs struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DataSourceResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return i.ToDataSourceResourcePermissionOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionOutput)
}

// DataSourceResourcePermissionArrayInput is an input type that accepts DataSourceResourcePermissionArray and DataSourceResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionArrayInput` via:
//
//	DataSourceResourcePermissionArray{ DataSourceResourcePermissionArgs{...} }
type DataSourceResourcePermissionArrayInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput
	ToDataSourceResourcePermissionArrayOutputWithContext(context.Context) DataSourceResourcePermissionArrayOutput
}

type DataSourceResourcePermissionArray []DataSourceResourcePermissionInput

func (DataSourceResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return i.ToDataSourceResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionArrayOutput)
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermissionOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return o
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return o
}

// <p>The IAM action to grant or revoke permissions on.</p>
func (o DataSourceResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
//
//	    following:</p>
//	<ul>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
//	            ARN. Use this option only to share resources (templates) across AWS accounts.
//	            (This is less common.) </p>
//	    </li>
//	 </ul>
func (o DataSourceResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DataSourceResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) Index(i pulumi.IntInput) DataSourceResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceResourcePermission {
		return vs[0].([]DataSourceResourcePermission)[vs[1].(int)]
	}).(DataSourceResourcePermissionOutput)
}

// <p>S3 parameters.</p>
type DataSourceS3Parameters struct {
	ManifestFileLocation DataSourceManifestFileLocation `pulumi:"manifestFileLocation"`
}

// DataSourceS3ParametersInput is an input type that accepts DataSourceS3ParametersArgs and DataSourceS3ParametersOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersInput` via:
//
//	DataSourceS3ParametersArgs{...}
type DataSourceS3ParametersInput interface {
	pulumi.Input

	ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput
	ToDataSourceS3ParametersOutputWithContext(context.Context) DataSourceS3ParametersOutput
}

// <p>S3 parameters.</p>
type DataSourceS3ParametersArgs struct {
	ManifestFileLocation DataSourceManifestFileLocationInput `pulumi:"manifestFileLocation"`
}

func (DataSourceS3ParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return i.ToDataSourceS3ParametersOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput)
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput).ToDataSourceS3ParametersPtrOutputWithContext(ctx)
}

// DataSourceS3ParametersPtrInput is an input type that accepts DataSourceS3ParametersArgs, DataSourceS3ParametersPtr and DataSourceS3ParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersPtrInput` via:
//
//	        DataSourceS3ParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceS3ParametersPtrInput interface {
	pulumi.Input

	ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput
	ToDataSourceS3ParametersPtrOutputWithContext(context.Context) DataSourceS3ParametersPtrOutput
}

type dataSourceS3ParametersPtrType DataSourceS3ParametersArgs

func DataSourceS3ParametersPtr(v *DataSourceS3ParametersArgs) DataSourceS3ParametersPtrInput {
	return (*dataSourceS3ParametersPtrType)(v)
}

func (*dataSourceS3ParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersPtrOutput)
}

// <p>S3 parameters.</p>
type DataSourceS3ParametersOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceS3Parameters) *DataSourceS3Parameters {
		return &v
	}).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceS3ParametersOutput) ManifestFileLocation() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v DataSourceS3Parameters) DataSourceManifestFileLocation { return v.ManifestFileLocation }).(DataSourceManifestFileLocationOutput)
}

type DataSourceS3ParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) Elem() DataSourceS3ParametersOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) DataSourceS3Parameters {
		if v != nil {
			return *v
		}
		var ret DataSourceS3Parameters
		return ret
	}).(DataSourceS3ParametersOutput)
}

func (o DataSourceS3ParametersPtrOutput) ManifestFileLocation() DataSourceManifestFileLocationPtrOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) *DataSourceManifestFileLocation {
		if v == nil {
			return nil
		}
		return &v.ManifestFileLocation
	}).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Warehouse.</p>
	Warehouse string `pulumi:"warehouse"`
}

// DataSourceSnowflakeParametersInput is an input type that accepts DataSourceSnowflakeParametersArgs and DataSourceSnowflakeParametersOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersInput` via:
//
//	DataSourceSnowflakeParametersArgs{...}
type DataSourceSnowflakeParametersInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput
	ToDataSourceSnowflakeParametersOutputWithContext(context.Context) DataSourceSnowflakeParametersOutput
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Warehouse.</p>
	Warehouse pulumi.StringInput `pulumi:"warehouse"`
}

func (DataSourceSnowflakeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return i.ToDataSourceSnowflakeParametersOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput)
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput).ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx)
}

// DataSourceSnowflakeParametersPtrInput is an input type that accepts DataSourceSnowflakeParametersArgs, DataSourceSnowflakeParametersPtr and DataSourceSnowflakeParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersPtrInput` via:
//
//	        DataSourceSnowflakeParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSnowflakeParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput
	ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Context) DataSourceSnowflakeParametersPtrOutput
}

type dataSourceSnowflakeParametersPtrType DataSourceSnowflakeParametersArgs

func DataSourceSnowflakeParametersPtr(v *DataSourceSnowflakeParametersArgs) DataSourceSnowflakeParametersPtrInput {
	return (*dataSourceSnowflakeParametersPtrType)(v)
}

func (*dataSourceSnowflakeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersPtrOutput)
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSnowflakeParameters) *DataSourceSnowflakeParameters {
		return &v
	}).(DataSourceSnowflakeParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceSnowflakeParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceSnowflakeParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Warehouse.</p>
func (o DataSourceSnowflakeParametersOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Warehouse }).(pulumi.StringOutput)
}

type DataSourceSnowflakeParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) Elem() DataSourceSnowflakeParametersOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) DataSourceSnowflakeParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSnowflakeParameters
		return ret
	}).(DataSourceSnowflakeParametersOutput)
}

// <p>Database.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Warehouse.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Warehouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Warehouse
	}).(pulumi.StringPtrOutput)
}

// <p>Spark parameters.</p>
type DataSourceSparkParameters struct {
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceSparkParametersInput is an input type that accepts DataSourceSparkParametersArgs and DataSourceSparkParametersOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersInput` via:
//
//	DataSourceSparkParametersArgs{...}
type DataSourceSparkParametersInput interface {
	pulumi.Input

	ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput
	ToDataSourceSparkParametersOutputWithContext(context.Context) DataSourceSparkParametersOutput
}

// <p>Spark parameters.</p>
type DataSourceSparkParametersArgs struct {
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSparkParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return i.ToDataSourceSparkParametersOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput)
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput).ToDataSourceSparkParametersPtrOutputWithContext(ctx)
}

// DataSourceSparkParametersPtrInput is an input type that accepts DataSourceSparkParametersArgs, DataSourceSparkParametersPtr and DataSourceSparkParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersPtrInput` via:
//
//	        DataSourceSparkParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSparkParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput
	ToDataSourceSparkParametersPtrOutputWithContext(context.Context) DataSourceSparkParametersPtrOutput
}

type dataSourceSparkParametersPtrType DataSourceSparkParametersArgs

func DataSourceSparkParametersPtr(v *DataSourceSparkParametersArgs) DataSourceSparkParametersPtrInput {
	return (*dataSourceSparkParametersPtrType)(v)
}

func (*dataSourceSparkParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersPtrOutput)
}

// <p>Spark parameters.</p>
type DataSourceSparkParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSparkParameters) *DataSourceSparkParameters {
		return &v
	}).(DataSourceSparkParametersPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSparkParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSparkParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceSparkParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSparkParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSparkParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) Elem() DataSourceSparkParametersOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) DataSourceSparkParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSparkParameters
		return ret
	}).(DataSourceSparkParametersOutput)
}

// <p>Host.</p>
func (o DataSourceSparkParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceSparkParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceSqlServerParametersInput is an input type that accepts DataSourceSqlServerParametersArgs and DataSourceSqlServerParametersOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersInput` via:
//
//	DataSourceSqlServerParametersArgs{...}
type DataSourceSqlServerParametersInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput
	ToDataSourceSqlServerParametersOutputWithContext(context.Context) DataSourceSqlServerParametersOutput
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSqlServerParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return i.ToDataSourceSqlServerParametersOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput)
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput).ToDataSourceSqlServerParametersPtrOutputWithContext(ctx)
}

// DataSourceSqlServerParametersPtrInput is an input type that accepts DataSourceSqlServerParametersArgs, DataSourceSqlServerParametersPtr and DataSourceSqlServerParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersPtrInput` via:
//
//	        DataSourceSqlServerParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSqlServerParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput
	ToDataSourceSqlServerParametersPtrOutputWithContext(context.Context) DataSourceSqlServerParametersPtrOutput
}

type dataSourceSqlServerParametersPtrType DataSourceSqlServerParametersArgs

func DataSourceSqlServerParametersPtr(v *DataSourceSqlServerParametersArgs) DataSourceSqlServerParametersPtrInput {
	return (*dataSourceSqlServerParametersPtrType)(v)
}

func (*dataSourceSqlServerParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersPtrOutput)
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSqlServerParameters) *DataSourceSqlServerParameters {
		return &v
	}).(DataSourceSqlServerParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceSqlServerParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceSqlServerParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceSqlServerParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSqlServerParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSqlServerParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) Elem() DataSourceSqlServerParametersOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) DataSourceSqlServerParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSqlServerParameters
		return ret
	}).(DataSourceSqlServerParametersOutput)
}

// <p>Database.</p>
func (o DataSourceSqlServerParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSqlServerParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceSqlServerParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslProperties struct {
	// <p>A Boolean option to control whether SSL should be disabled.</p>
	DisableSsl *bool `pulumi:"disableSsl"`
}

// DataSourceSslPropertiesInput is an input type that accepts DataSourceSslPropertiesArgs and DataSourceSslPropertiesOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesInput` via:
//
//	DataSourceSslPropertiesArgs{...}
type DataSourceSslPropertiesInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput
	ToDataSourceSslPropertiesOutputWithContext(context.Context) DataSourceSslPropertiesOutput
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslPropertiesArgs struct {
	// <p>A Boolean option to control whether SSL should be disabled.</p>
	DisableSsl pulumi.BoolPtrInput `pulumi:"disableSsl"`
}

func (DataSourceSslPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return i.ToDataSourceSslPropertiesOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput)
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput).ToDataSourceSslPropertiesPtrOutputWithContext(ctx)
}

// DataSourceSslPropertiesPtrInput is an input type that accepts DataSourceSslPropertiesArgs, DataSourceSslPropertiesPtr and DataSourceSslPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesPtrInput` via:
//
//	        DataSourceSslPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataSourceSslPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput
	ToDataSourceSslPropertiesPtrOutputWithContext(context.Context) DataSourceSslPropertiesPtrOutput
}

type dataSourceSslPropertiesPtrType DataSourceSslPropertiesArgs

func DataSourceSslPropertiesPtr(v *DataSourceSslPropertiesArgs) DataSourceSslPropertiesPtrInput {
	return (*dataSourceSslPropertiesPtrType)(v)
}

func (*dataSourceSslPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesPtrOutput)
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSslProperties) *DataSourceSslProperties {
		return &v
	}).(DataSourceSslPropertiesPtrOutput)
}

// <p>A Boolean option to control whether SSL should be disabled.</p>
func (o DataSourceSslPropertiesOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceSslProperties) *bool { return v.DisableSsl }).(pulumi.BoolPtrOutput)
}

type DataSourceSslPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) Elem() DataSourceSslPropertiesOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) DataSourceSslProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceSslProperties
		return ret
	}).(DataSourceSslPropertiesOutput)
}

// <p>A Boolean option to control whether SSL should be disabled.</p>
func (o DataSourceSslPropertiesPtrOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSsl
	}).(pulumi.BoolPtrOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSourceTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// DataSourceTagInput is an input type that accepts DataSourceTagArgs and DataSourceTagOutput values.
// You can construct a concrete instance of `DataSourceTagInput` via:
//
//	DataSourceTagArgs{...}
type DataSourceTagInput interface {
	pulumi.Input

	ToDataSourceTagOutput() DataSourceTagOutput
	ToDataSourceTagOutputWithContext(context.Context) DataSourceTagOutput
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSourceTagArgs struct {
	// <p>Tag key.</p>
	Key pulumi.StringInput `pulumi:"key"`
	// <p>Tag value.</p>
	Value pulumi.StringInput `pulumi:"value"`
}

func (DataSourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTag)(nil)).Elem()
}

func (i DataSourceTagArgs) ToDataSourceTagOutput() DataSourceTagOutput {
	return i.ToDataSourceTagOutputWithContext(context.Background())
}

func (i DataSourceTagArgs) ToDataSourceTagOutputWithContext(ctx context.Context) DataSourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTagOutput)
}

// DataSourceTagArrayInput is an input type that accepts DataSourceTagArray and DataSourceTagArrayOutput values.
// You can construct a concrete instance of `DataSourceTagArrayInput` via:
//
//	DataSourceTagArray{ DataSourceTagArgs{...} }
type DataSourceTagArrayInput interface {
	pulumi.Input

	ToDataSourceTagArrayOutput() DataSourceTagArrayOutput
	ToDataSourceTagArrayOutputWithContext(context.Context) DataSourceTagArrayOutput
}

type DataSourceTagArray []DataSourceTagInput

func (DataSourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceTag)(nil)).Elem()
}

func (i DataSourceTagArray) ToDataSourceTagArrayOutput() DataSourceTagArrayOutput {
	return i.ToDataSourceTagArrayOutputWithContext(context.Background())
}

func (i DataSourceTagArray) ToDataSourceTagArrayOutputWithContext(ctx context.Context) DataSourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTagArrayOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSourceTagOutput struct{ *pulumi.OutputState }

func (DataSourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTag)(nil)).Elem()
}

func (o DataSourceTagOutput) ToDataSourceTagOutput() DataSourceTagOutput {
	return o
}

func (o DataSourceTagOutput) ToDataSourceTagOutputWithContext(ctx context.Context) DataSourceTagOutput {
	return o
}

// <p>Tag key.</p>
func (o DataSourceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTag) string { return v.Key }).(pulumi.StringOutput)
}

// <p>Tag value.</p>
func (o DataSourceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTag) string { return v.Value }).(pulumi.StringOutput)
}

type DataSourceTagArrayOutput struct{ *pulumi.OutputState }

func (DataSourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceTag)(nil)).Elem()
}

func (o DataSourceTagArrayOutput) ToDataSourceTagArrayOutput() DataSourceTagArrayOutput {
	return o
}

func (o DataSourceTagArrayOutput) ToDataSourceTagArrayOutputWithContext(ctx context.Context) DataSourceTagArrayOutput {
	return o
}

func (o DataSourceTagArrayOutput) Index(i pulumi.IntInput) DataSourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceTag {
		return vs[0].([]DataSourceTag)[vs[1].(int)]
	}).(DataSourceTagOutput)
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceTeradataParametersInput is an input type that accepts DataSourceTeradataParametersArgs and DataSourceTeradataParametersOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersInput` via:
//
//	DataSourceTeradataParametersArgs{...}
type DataSourceTeradataParametersInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput
	ToDataSourceTeradataParametersOutputWithContext(context.Context) DataSourceTeradataParametersOutput
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceTeradataParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return i.ToDataSourceTeradataParametersOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput)
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput).ToDataSourceTeradataParametersPtrOutputWithContext(ctx)
}

// DataSourceTeradataParametersPtrInput is an input type that accepts DataSourceTeradataParametersArgs, DataSourceTeradataParametersPtr and DataSourceTeradataParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersPtrInput` via:
//
//	        DataSourceTeradataParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceTeradataParametersPtrInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput
	ToDataSourceTeradataParametersPtrOutputWithContext(context.Context) DataSourceTeradataParametersPtrOutput
}

type dataSourceTeradataParametersPtrType DataSourceTeradataParametersArgs

func DataSourceTeradataParametersPtr(v *DataSourceTeradataParametersArgs) DataSourceTeradataParametersPtrInput {
	return (*dataSourceTeradataParametersPtrType)(v)
}

func (*dataSourceTeradataParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersPtrOutput)
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParametersOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceTeradataParameters) *DataSourceTeradataParameters {
		return &v
	}).(DataSourceTeradataParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceTeradataParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceTeradataParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceTeradataParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceTeradataParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceTeradataParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) Elem() DataSourceTeradataParametersOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) DataSourceTeradataParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceTeradataParameters
		return ret
	}).(DataSourceTeradataParametersOutput)
}

// <p>Database.</p>
func (o DataSourceTeradataParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceTeradataParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceTeradataParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionProperties struct {
	// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
	VpcConnectionArn string `pulumi:"vpcConnectionArn"`
}

// DataSourceVpcConnectionPropertiesInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs and DataSourceVpcConnectionPropertiesOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesInput` via:
//
//	DataSourceVpcConnectionPropertiesArgs{...}
type DataSourceVpcConnectionPropertiesInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput
	ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesOutput
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionPropertiesArgs struct {
	// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
	VpcConnectionArn pulumi.StringInput `pulumi:"vpcConnectionArn"`
}

func (DataSourceVpcConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return i.ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput)
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput).ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx)
}

// DataSourceVpcConnectionPropertiesPtrInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs, DataSourceVpcConnectionPropertiesPtr and DataSourceVpcConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesPtrInput` via:
//
//	        DataSourceVpcConnectionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataSourceVpcConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput
	ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesPtrOutput
}

type dataSourceVpcConnectionPropertiesPtrType DataSourceVpcConnectionPropertiesArgs

func DataSourceVpcConnectionPropertiesPtr(v *DataSourceVpcConnectionPropertiesArgs) DataSourceVpcConnectionPropertiesPtrInput {
	return (*dataSourceVpcConnectionPropertiesPtrType)(v)
}

func (*dataSourceVpcConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceVpcConnectionProperties) *DataSourceVpcConnectionProperties {
		return &v
	}).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
func (o DataSourceVpcConnectionPropertiesOutput) VpcConnectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceVpcConnectionProperties) string { return v.VpcConnectionArn }).(pulumi.StringOutput)
}

type DataSourceVpcConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) Elem() DataSourceVpcConnectionPropertiesOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) DataSourceVpcConnectionProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceVpcConnectionProperties
		return ret
	}).(DataSourceVpcConnectionPropertiesOutput)
}

// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
func (o DataSourceVpcConnectionPropertiesPtrOutput) VpcConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VpcConnectionArn
	}).(pulumi.StringPtrOutput)
}

type TemplateAggregationFunction struct {
	CategoricalAggregationFunction *TemplateCategoricalAggregationFunction `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        *TemplateDateAggregationFunction        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   *TemplateNumericalAggregationFunction   `pulumi:"numericalAggregationFunction"`
}

// TemplateAggregationFunctionInput is an input type that accepts TemplateAggregationFunctionArgs and TemplateAggregationFunctionOutput values.
// You can construct a concrete instance of `TemplateAggregationFunctionInput` via:
//
//	TemplateAggregationFunctionArgs{...}
type TemplateAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput
	ToTemplateAggregationFunctionOutputWithContext(context.Context) TemplateAggregationFunctionOutput
}

type TemplateAggregationFunctionArgs struct {
	CategoricalAggregationFunction TemplateCategoricalAggregationFunctionPtrInput `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        TemplateDateAggregationFunctionPtrInput        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   TemplateNumericalAggregationFunctionPtrInput   `pulumi:"numericalAggregationFunction"`
}

func (TemplateAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationFunction)(nil)).Elem()
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput {
	return i.ToTemplateAggregationFunctionOutputWithContext(context.Background())
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionOutputWithContext(ctx context.Context) TemplateAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionOutput)
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return i.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionOutput).ToTemplateAggregationFunctionPtrOutputWithContext(ctx)
}

// TemplateAggregationFunctionPtrInput is an input type that accepts TemplateAggregationFunctionArgs, TemplateAggregationFunctionPtr and TemplateAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `TemplateAggregationFunctionPtrInput` via:
//
//	        TemplateAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type TemplateAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput
	ToTemplateAggregationFunctionPtrOutputWithContext(context.Context) TemplateAggregationFunctionPtrOutput
}

type templateAggregationFunctionPtrType TemplateAggregationFunctionArgs

func TemplateAggregationFunctionPtr(v *TemplateAggregationFunctionArgs) TemplateAggregationFunctionPtrInput {
	return (*templateAggregationFunctionPtrType)(v)
}

func (*templateAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAggregationFunction)(nil)).Elem()
}

func (i *templateAggregationFunctionPtrType) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return i.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *templateAggregationFunctionPtrType) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionPtrOutput)
}

type TemplateAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationFunction)(nil)).Elem()
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput {
	return o
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionOutputWithContext(ctx context.Context) TemplateAggregationFunctionOutput {
	return o
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return o.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAggregationFunction) *TemplateAggregationFunction {
		return &v
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) CategoricalAggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateCategoricalAggregationFunction {
		return v.CategoricalAggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) DateAggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateDateAggregationFunction { return v.DateAggregationFunction }).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) NumericalAggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateNumericalAggregationFunction {
		return v.NumericalAggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

type TemplateAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAggregationFunction)(nil)).Elem()
}

func (o TemplateAggregationFunctionPtrOutput) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAggregationFunctionPtrOutput) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAggregationFunctionPtrOutput) Elem() TemplateAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) TemplateAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateAggregationFunction
		return ret
	}).(TemplateAggregationFunctionOutput)
}

func (o TemplateAggregationFunctionPtrOutput) CategoricalAggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.CategoricalAggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionPtrOutput) DateAggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.DateAggregationFunction
	}).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionPtrOutput) NumericalAggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.NumericalAggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

type TemplateAggregationSortConfiguration struct {
	AggregationFunction TemplateAggregationFunction `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier    `pulumi:"column"`
	SortDirection       TemplateSortDirection       `pulumi:"sortDirection"`
}

// TemplateAggregationSortConfigurationInput is an input type that accepts TemplateAggregationSortConfigurationArgs and TemplateAggregationSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateAggregationSortConfigurationInput` via:
//
//	TemplateAggregationSortConfigurationArgs{...}
type TemplateAggregationSortConfigurationInput interface {
	pulumi.Input

	ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput
	ToTemplateAggregationSortConfigurationOutputWithContext(context.Context) TemplateAggregationSortConfigurationOutput
}

type TemplateAggregationSortConfigurationArgs struct {
	AggregationFunction TemplateAggregationFunctionInput `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput    `pulumi:"column"`
	SortDirection       TemplateSortDirectionInput       `pulumi:"sortDirection"`
}

func (TemplateAggregationSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (i TemplateAggregationSortConfigurationArgs) ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput {
	return i.ToTemplateAggregationSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateAggregationSortConfigurationArgs) ToTemplateAggregationSortConfigurationOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationSortConfigurationOutput)
}

// TemplateAggregationSortConfigurationArrayInput is an input type that accepts TemplateAggregationSortConfigurationArray and TemplateAggregationSortConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateAggregationSortConfigurationArrayInput` via:
//
//	TemplateAggregationSortConfigurationArray{ TemplateAggregationSortConfigurationArgs{...} }
type TemplateAggregationSortConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput
	ToTemplateAggregationSortConfigurationArrayOutputWithContext(context.Context) TemplateAggregationSortConfigurationArrayOutput
}

type TemplateAggregationSortConfigurationArray []TemplateAggregationSortConfigurationInput

func (TemplateAggregationSortConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (i TemplateAggregationSortConfigurationArray) ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput {
	return i.ToTemplateAggregationSortConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateAggregationSortConfigurationArray) ToTemplateAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationSortConfigurationArrayOutput)
}

type TemplateAggregationSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateAggregationSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (o TemplateAggregationSortConfigurationOutput) ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput {
	return o
}

func (o TemplateAggregationSortConfigurationOutput) ToTemplateAggregationSortConfigurationOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationOutput {
	return o
}

func (o TemplateAggregationSortConfigurationOutput) AggregationFunction() TemplateAggregationFunctionOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) TemplateAggregationFunction { return v.AggregationFunction }).(TemplateAggregationFunctionOutput)
}

func (o TemplateAggregationSortConfigurationOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateAggregationSortConfigurationOutput) SortDirection() TemplateSortDirectionOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) TemplateSortDirection { return v.SortDirection }).(TemplateSortDirectionOutput)
}

type TemplateAggregationSortConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateAggregationSortConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (o TemplateAggregationSortConfigurationArrayOutput) ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput {
	return o
}

func (o TemplateAggregationSortConfigurationArrayOutput) ToTemplateAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationArrayOutput {
	return o
}

func (o TemplateAggregationSortConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateAggregationSortConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateAggregationSortConfiguration {
		return vs[0].([]TemplateAggregationSortConfiguration)[vs[1].(int)]
	}).(TemplateAggregationSortConfigurationOutput)
}

type TemplateAnalysisDefaults struct {
	DefaultNewSheetConfiguration TemplateDefaultNewSheetConfiguration `pulumi:"defaultNewSheetConfiguration"`
}

// TemplateAnalysisDefaultsInput is an input type that accepts TemplateAnalysisDefaultsArgs and TemplateAnalysisDefaultsOutput values.
// You can construct a concrete instance of `TemplateAnalysisDefaultsInput` via:
//
//	TemplateAnalysisDefaultsArgs{...}
type TemplateAnalysisDefaultsInput interface {
	pulumi.Input

	ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput
	ToTemplateAnalysisDefaultsOutputWithContext(context.Context) TemplateAnalysisDefaultsOutput
}

type TemplateAnalysisDefaultsArgs struct {
	DefaultNewSheetConfiguration TemplateDefaultNewSheetConfigurationInput `pulumi:"defaultNewSheetConfiguration"`
}

func (TemplateAnalysisDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnalysisDefaults)(nil)).Elem()
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput {
	return i.ToTemplateAnalysisDefaultsOutputWithContext(context.Background())
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsOutput)
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return i.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsOutput).ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx)
}

// TemplateAnalysisDefaultsPtrInput is an input type that accepts TemplateAnalysisDefaultsArgs, TemplateAnalysisDefaultsPtr and TemplateAnalysisDefaultsPtrOutput values.
// You can construct a concrete instance of `TemplateAnalysisDefaultsPtrInput` via:
//
//	        TemplateAnalysisDefaultsArgs{...}
//
//	or:
//
//	        nil
type TemplateAnalysisDefaultsPtrInput interface {
	pulumi.Input

	ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput
	ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Context) TemplateAnalysisDefaultsPtrOutput
}

type templateAnalysisDefaultsPtrType TemplateAnalysisDefaultsArgs

func TemplateAnalysisDefaultsPtr(v *TemplateAnalysisDefaultsArgs) TemplateAnalysisDefaultsPtrInput {
	return (*templateAnalysisDefaultsPtrType)(v)
}

func (*templateAnalysisDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnalysisDefaults)(nil)).Elem()
}

func (i *templateAnalysisDefaultsPtrType) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return i.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i *templateAnalysisDefaultsPtrType) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsPtrOutput)
}

type TemplateAnalysisDefaultsOutput struct{ *pulumi.OutputState }

func (TemplateAnalysisDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnalysisDefaults)(nil)).Elem()
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput {
	return o
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsOutput {
	return o
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return o.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAnalysisDefaults) *TemplateAnalysisDefaults {
		return &v
	}).(TemplateAnalysisDefaultsPtrOutput)
}

func (o TemplateAnalysisDefaultsOutput) DefaultNewSheetConfiguration() TemplateDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v TemplateAnalysisDefaults) TemplateDefaultNewSheetConfiguration {
		return v.DefaultNewSheetConfiguration
	}).(TemplateDefaultNewSheetConfigurationOutput)
}

type TemplateAnalysisDefaultsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAnalysisDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnalysisDefaults)(nil)).Elem()
}

func (o TemplateAnalysisDefaultsPtrOutput) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return o
}

func (o TemplateAnalysisDefaultsPtrOutput) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return o
}

func (o TemplateAnalysisDefaultsPtrOutput) Elem() TemplateAnalysisDefaultsOutput {
	return o.ApplyT(func(v *TemplateAnalysisDefaults) TemplateAnalysisDefaults {
		if v != nil {
			return *v
		}
		var ret TemplateAnalysisDefaults
		return ret
	}).(TemplateAnalysisDefaultsOutput)
}

func (o TemplateAnalysisDefaultsPtrOutput) DefaultNewSheetConfiguration() TemplateDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateAnalysisDefaults) *TemplateDefaultNewSheetConfiguration {
		if v == nil {
			return nil
		}
		return &v.DefaultNewSheetConfiguration
	}).(TemplateDefaultNewSheetConfigurationPtrOutput)
}

type TemplateAnchorDateConfiguration struct {
	AnchorOption  *TemplateAnchorOption `pulumi:"anchorOption"`
	ParameterName *string               `pulumi:"parameterName"`
}

// TemplateAnchorDateConfigurationInput is an input type that accepts TemplateAnchorDateConfigurationArgs and TemplateAnchorDateConfigurationOutput values.
// You can construct a concrete instance of `TemplateAnchorDateConfigurationInput` via:
//
//	TemplateAnchorDateConfigurationArgs{...}
type TemplateAnchorDateConfigurationInput interface {
	pulumi.Input

	ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput
	ToTemplateAnchorDateConfigurationOutputWithContext(context.Context) TemplateAnchorDateConfigurationOutput
}

type TemplateAnchorDateConfigurationArgs struct {
	AnchorOption  TemplateAnchorOptionPtrInput `pulumi:"anchorOption"`
	ParameterName pulumi.StringPtrInput        `pulumi:"parameterName"`
}

func (TemplateAnchorDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput {
	return i.ToTemplateAnchorDateConfigurationOutputWithContext(context.Background())
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationOutput)
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return i.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationOutput).ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx)
}

// TemplateAnchorDateConfigurationPtrInput is an input type that accepts TemplateAnchorDateConfigurationArgs, TemplateAnchorDateConfigurationPtr and TemplateAnchorDateConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateAnchorDateConfigurationPtrInput` via:
//
//	        TemplateAnchorDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateAnchorDateConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput
	ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Context) TemplateAnchorDateConfigurationPtrOutput
}

type templateAnchorDateConfigurationPtrType TemplateAnchorDateConfigurationArgs

func TemplateAnchorDateConfigurationPtr(v *TemplateAnchorDateConfigurationArgs) TemplateAnchorDateConfigurationPtrInput {
	return (*templateAnchorDateConfigurationPtrType)(v)
}

func (*templateAnchorDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (i *templateAnchorDateConfigurationPtrType) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return i.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateAnchorDateConfigurationPtrType) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationPtrOutput)
}

type TemplateAnchorDateConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateAnchorDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput {
	return o
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationOutput {
	return o
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return o.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAnchorDateConfiguration) *TemplateAnchorDateConfiguration {
		return &v
	}).(TemplateAnchorDateConfigurationPtrOutput)
}

func (o TemplateAnchorDateConfigurationOutput) AnchorOption() TemplateAnchorOptionPtrOutput {
	return o.ApplyT(func(v TemplateAnchorDateConfiguration) *TemplateAnchorOption { return v.AnchorOption }).(TemplateAnchorOptionPtrOutput)
}

func (o TemplateAnchorDateConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAnchorDateConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

type TemplateAnchorDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateAnchorDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (o TemplateAnchorDateConfigurationPtrOutput) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return o
}

func (o TemplateAnchorDateConfigurationPtrOutput) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return o
}

func (o TemplateAnchorDateConfigurationPtrOutput) Elem() TemplateAnchorDateConfigurationOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) TemplateAnchorDateConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateAnchorDateConfiguration
		return ret
	}).(TemplateAnchorDateConfigurationOutput)
}

func (o TemplateAnchorDateConfigurationPtrOutput) AnchorOption() TemplateAnchorOptionPtrOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) *TemplateAnchorOption {
		if v == nil {
			return nil
		}
		return v.AnchorOption
	}).(TemplateAnchorOptionPtrOutput)
}

func (o TemplateAnchorDateConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

type TemplateArcAxisConfiguration struct {
	Range        *TemplateArcAxisDisplayRange `pulumi:"range"`
	ReserveRange *float64                     `pulumi:"reserveRange"`
}

// TemplateArcAxisConfigurationInput is an input type that accepts TemplateArcAxisConfigurationArgs and TemplateArcAxisConfigurationOutput values.
// You can construct a concrete instance of `TemplateArcAxisConfigurationInput` via:
//
//	TemplateArcAxisConfigurationArgs{...}
type TemplateArcAxisConfigurationInput interface {
	pulumi.Input

	ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput
	ToTemplateArcAxisConfigurationOutputWithContext(context.Context) TemplateArcAxisConfigurationOutput
}

type TemplateArcAxisConfigurationArgs struct {
	Range        TemplateArcAxisDisplayRangePtrInput `pulumi:"range"`
	ReserveRange pulumi.Float64PtrInput              `pulumi:"reserveRange"`
}

func (TemplateArcAxisConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisConfiguration)(nil)).Elem()
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput {
	return i.ToTemplateArcAxisConfigurationOutputWithContext(context.Background())
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationOutput)
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return i.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationOutput).ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx)
}

// TemplateArcAxisConfigurationPtrInput is an input type that accepts TemplateArcAxisConfigurationArgs, TemplateArcAxisConfigurationPtr and TemplateArcAxisConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateArcAxisConfigurationPtrInput` via:
//
//	        TemplateArcAxisConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateArcAxisConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput
	ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Context) TemplateArcAxisConfigurationPtrOutput
}

type templateArcAxisConfigurationPtrType TemplateArcAxisConfigurationArgs

func TemplateArcAxisConfigurationPtr(v *TemplateArcAxisConfigurationArgs) TemplateArcAxisConfigurationPtrInput {
	return (*templateArcAxisConfigurationPtrType)(v)
}

func (*templateArcAxisConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisConfiguration)(nil)).Elem()
}

func (i *templateArcAxisConfigurationPtrType) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return i.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateArcAxisConfigurationPtrType) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationPtrOutput)
}

type TemplateArcAxisConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisConfiguration)(nil)).Elem()
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput {
	return o
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationOutput {
	return o
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return o.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcAxisConfiguration) *TemplateArcAxisConfiguration {
		return &v
	}).(TemplateArcAxisConfigurationPtrOutput)
}

func (o TemplateArcAxisConfigurationOutput) Range() TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v TemplateArcAxisConfiguration) *TemplateArcAxisDisplayRange { return v.Range }).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisConfigurationOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisConfiguration) *float64 { return v.ReserveRange }).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisConfiguration)(nil)).Elem()
}

func (o TemplateArcAxisConfigurationPtrOutput) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return o
}

func (o TemplateArcAxisConfigurationPtrOutput) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return o
}

func (o TemplateArcAxisConfigurationPtrOutput) Elem() TemplateArcAxisConfigurationOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) TemplateArcAxisConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateArcAxisConfiguration
		return ret
	}).(TemplateArcAxisConfigurationOutput)
}

func (o TemplateArcAxisConfigurationPtrOutput) Range() TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) *TemplateArcAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisConfigurationPtrOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ReserveRange
	}).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisDisplayRange struct {
	Max *float64 `pulumi:"max"`
	Min *float64 `pulumi:"min"`
}

// TemplateArcAxisDisplayRangeInput is an input type that accepts TemplateArcAxisDisplayRangeArgs and TemplateArcAxisDisplayRangeOutput values.
// You can construct a concrete instance of `TemplateArcAxisDisplayRangeInput` via:
//
//	TemplateArcAxisDisplayRangeArgs{...}
type TemplateArcAxisDisplayRangeInput interface {
	pulumi.Input

	ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput
	ToTemplateArcAxisDisplayRangeOutputWithContext(context.Context) TemplateArcAxisDisplayRangeOutput
}

type TemplateArcAxisDisplayRangeArgs struct {
	Max pulumi.Float64PtrInput `pulumi:"max"`
	Min pulumi.Float64PtrInput `pulumi:"min"`
}

func (TemplateArcAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput {
	return i.ToTemplateArcAxisDisplayRangeOutputWithContext(context.Background())
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangeOutput)
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return i.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangeOutput).ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx)
}

// TemplateArcAxisDisplayRangePtrInput is an input type that accepts TemplateArcAxisDisplayRangeArgs, TemplateArcAxisDisplayRangePtr and TemplateArcAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `TemplateArcAxisDisplayRangePtrInput` via:
//
//	        TemplateArcAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateArcAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput
	ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Context) TemplateArcAxisDisplayRangePtrOutput
}

type templateArcAxisDisplayRangePtrType TemplateArcAxisDisplayRangeArgs

func TemplateArcAxisDisplayRangePtr(v *TemplateArcAxisDisplayRangeArgs) TemplateArcAxisDisplayRangePtrInput {
	return (*templateArcAxisDisplayRangePtrType)(v)
}

func (*templateArcAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (i *templateArcAxisDisplayRangePtrType) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return i.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *templateArcAxisDisplayRangePtrType) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangePtrOutput)
}

type TemplateArcAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput {
	return o
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangeOutput {
	return o
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return o.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcAxisDisplayRange) *TemplateArcAxisDisplayRange {
		return &v
	}).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisDisplayRangeOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisDisplayRange) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o TemplateArcAxisDisplayRangeOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisDisplayRange) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (o TemplateArcAxisDisplayRangePtrOutput) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateArcAxisDisplayRangePtrOutput) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateArcAxisDisplayRangePtrOutput) Elem() TemplateArcAxisDisplayRangeOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) TemplateArcAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret TemplateArcAxisDisplayRange
		return ret
	}).(TemplateArcAxisDisplayRangeOutput)
}

func (o TemplateArcAxisDisplayRangePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateArcAxisDisplayRangePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

type TemplateArcConfiguration struct {
	ArcAngle     *float64                     `pulumi:"arcAngle"`
	ArcThickness *TemplateArcThicknessOptions `pulumi:"arcThickness"`
}

// TemplateArcConfigurationInput is an input type that accepts TemplateArcConfigurationArgs and TemplateArcConfigurationOutput values.
// You can construct a concrete instance of `TemplateArcConfigurationInput` via:
//
//	TemplateArcConfigurationArgs{...}
type TemplateArcConfigurationInput interface {
	pulumi.Input

	ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput
	ToTemplateArcConfigurationOutputWithContext(context.Context) TemplateArcConfigurationOutput
}

type TemplateArcConfigurationArgs struct {
	ArcAngle     pulumi.Float64PtrInput              `pulumi:"arcAngle"`
	ArcThickness TemplateArcThicknessOptionsPtrInput `pulumi:"arcThickness"`
}

func (TemplateArcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcConfiguration)(nil)).Elem()
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput {
	return i.ToTemplateArcConfigurationOutputWithContext(context.Background())
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationOutputWithContext(ctx context.Context) TemplateArcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationOutput)
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return i.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationOutput).ToTemplateArcConfigurationPtrOutputWithContext(ctx)
}

// TemplateArcConfigurationPtrInput is an input type that accepts TemplateArcConfigurationArgs, TemplateArcConfigurationPtr and TemplateArcConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateArcConfigurationPtrInput` via:
//
//	        TemplateArcConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateArcConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput
	ToTemplateArcConfigurationPtrOutputWithContext(context.Context) TemplateArcConfigurationPtrOutput
}

type templateArcConfigurationPtrType TemplateArcConfigurationArgs

func TemplateArcConfigurationPtr(v *TemplateArcConfigurationArgs) TemplateArcConfigurationPtrInput {
	return (*templateArcConfigurationPtrType)(v)
}

func (*templateArcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcConfiguration)(nil)).Elem()
}

func (i *templateArcConfigurationPtrType) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return i.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateArcConfigurationPtrType) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationPtrOutput)
}

type TemplateArcConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateArcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcConfiguration)(nil)).Elem()
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput {
	return o
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationOutputWithContext(ctx context.Context) TemplateArcConfigurationOutput {
	return o
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return o.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcConfiguration) *TemplateArcConfiguration {
		return &v
	}).(TemplateArcConfigurationPtrOutput)
}

func (o TemplateArcConfigurationOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcConfiguration) *float64 { return v.ArcAngle }).(pulumi.Float64PtrOutput)
}

func (o TemplateArcConfigurationOutput) ArcThickness() TemplateArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v TemplateArcConfiguration) *TemplateArcThicknessOptions { return v.ArcThickness }).(TemplateArcThicknessOptionsPtrOutput)
}

type TemplateArcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcConfiguration)(nil)).Elem()
}

func (o TemplateArcConfigurationPtrOutput) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return o
}

func (o TemplateArcConfigurationPtrOutput) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return o
}

func (o TemplateArcConfigurationPtrOutput) Elem() TemplateArcConfigurationOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) TemplateArcConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateArcConfiguration
		return ret
	}).(TemplateArcConfigurationOutput)
}

func (o TemplateArcConfigurationPtrOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ArcAngle
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateArcConfigurationPtrOutput) ArcThickness() TemplateArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) *TemplateArcThicknessOptions {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(TemplateArcThicknessOptionsPtrOutput)
}

type TemplateArcOptions struct {
	ArcThickness *TemplateArcThickness `pulumi:"arcThickness"`
}

// TemplateArcOptionsInput is an input type that accepts TemplateArcOptionsArgs and TemplateArcOptionsOutput values.
// You can construct a concrete instance of `TemplateArcOptionsInput` via:
//
//	TemplateArcOptionsArgs{...}
type TemplateArcOptionsInput interface {
	pulumi.Input

	ToTemplateArcOptionsOutput() TemplateArcOptionsOutput
	ToTemplateArcOptionsOutputWithContext(context.Context) TemplateArcOptionsOutput
}

type TemplateArcOptionsArgs struct {
	ArcThickness TemplateArcThicknessPtrInput `pulumi:"arcThickness"`
}

func (TemplateArcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcOptions)(nil)).Elem()
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsOutput() TemplateArcOptionsOutput {
	return i.ToTemplateArcOptionsOutputWithContext(context.Background())
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsOutputWithContext(ctx context.Context) TemplateArcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsOutput)
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return i.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsOutput).ToTemplateArcOptionsPtrOutputWithContext(ctx)
}

// TemplateArcOptionsPtrInput is an input type that accepts TemplateArcOptionsArgs, TemplateArcOptionsPtr and TemplateArcOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateArcOptionsPtrInput` via:
//
//	        TemplateArcOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateArcOptionsPtrInput interface {
	pulumi.Input

	ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput
	ToTemplateArcOptionsPtrOutputWithContext(context.Context) TemplateArcOptionsPtrOutput
}

type templateArcOptionsPtrType TemplateArcOptionsArgs

func TemplateArcOptionsPtr(v *TemplateArcOptionsArgs) TemplateArcOptionsPtrInput {
	return (*templateArcOptionsPtrType)(v)
}

func (*templateArcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcOptions)(nil)).Elem()
}

func (i *templateArcOptionsPtrType) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return i.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (i *templateArcOptionsPtrType) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsPtrOutput)
}

type TemplateArcOptionsOutput struct{ *pulumi.OutputState }

func (TemplateArcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcOptions)(nil)).Elem()
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsOutput() TemplateArcOptionsOutput {
	return o
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsOutputWithContext(ctx context.Context) TemplateArcOptionsOutput {
	return o
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return o.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcOptions) *TemplateArcOptions {
		return &v
	}).(TemplateArcOptionsPtrOutput)
}

func (o TemplateArcOptionsOutput) ArcThickness() TemplateArcThicknessPtrOutput {
	return o.ApplyT(func(v TemplateArcOptions) *TemplateArcThickness { return v.ArcThickness }).(TemplateArcThicknessPtrOutput)
}

type TemplateArcOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcOptions)(nil)).Elem()
}

func (o TemplateArcOptionsPtrOutput) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return o
}

func (o TemplateArcOptionsPtrOutput) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return o
}

func (o TemplateArcOptionsPtrOutput) Elem() TemplateArcOptionsOutput {
	return o.ApplyT(func(v *TemplateArcOptions) TemplateArcOptions {
		if v != nil {
			return *v
		}
		var ret TemplateArcOptions
		return ret
	}).(TemplateArcOptionsOutput)
}

func (o TemplateArcOptionsPtrOutput) ArcThickness() TemplateArcThicknessPtrOutput {
	return o.ApplyT(func(v *TemplateArcOptions) *TemplateArcThickness {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(TemplateArcThicknessPtrOutput)
}

type TemplateAxisDataOptions struct {
	DateAxisOptions    *TemplateDateAxisOptions    `pulumi:"dateAxisOptions"`
	NumericAxisOptions *TemplateNumericAxisOptions `pulumi:"numericAxisOptions"`
}

// TemplateAxisDataOptionsInput is an input type that accepts TemplateAxisDataOptionsArgs and TemplateAxisDataOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisDataOptionsInput` via:
//
//	TemplateAxisDataOptionsArgs{...}
type TemplateAxisDataOptionsInput interface {
	pulumi.Input

	ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput
	ToTemplateAxisDataOptionsOutputWithContext(context.Context) TemplateAxisDataOptionsOutput
}

type TemplateAxisDataOptionsArgs struct {
	DateAxisOptions    TemplateDateAxisOptionsPtrInput    `pulumi:"dateAxisOptions"`
	NumericAxisOptions TemplateNumericAxisOptionsPtrInput `pulumi:"numericAxisOptions"`
}

func (TemplateAxisDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDataOptions)(nil)).Elem()
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput {
	return i.ToTemplateAxisDataOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsOutputWithContext(ctx context.Context) TemplateAxisDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsOutput)
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return i.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsOutput).ToTemplateAxisDataOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisDataOptionsPtrInput is an input type that accepts TemplateAxisDataOptionsArgs, TemplateAxisDataOptionsPtr and TemplateAxisDataOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisDataOptionsPtrInput` via:
//
//	        TemplateAxisDataOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDataOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput
	ToTemplateAxisDataOptionsPtrOutputWithContext(context.Context) TemplateAxisDataOptionsPtrOutput
}

type templateAxisDataOptionsPtrType TemplateAxisDataOptionsArgs

func TemplateAxisDataOptionsPtr(v *TemplateAxisDataOptionsArgs) TemplateAxisDataOptionsPtrInput {
	return (*templateAxisDataOptionsPtrType)(v)
}

func (*templateAxisDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDataOptions)(nil)).Elem()
}

func (i *templateAxisDataOptionsPtrType) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return i.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisDataOptionsPtrType) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsPtrOutput)
}

type TemplateAxisDataOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDataOptions)(nil)).Elem()
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput {
	return o
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsOutputWithContext(ctx context.Context) TemplateAxisDataOptionsOutput {
	return o
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return o.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDataOptions) *TemplateAxisDataOptions {
		return &v
	}).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsOutput) DateAxisOptions() TemplateDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDataOptions) *TemplateDateAxisOptions { return v.DateAxisOptions }).(TemplateDateAxisOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsOutput) NumericAxisOptions() TemplateNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDataOptions) *TemplateNumericAxisOptions { return v.NumericAxisOptions }).(TemplateNumericAxisOptionsPtrOutput)
}

type TemplateAxisDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDataOptions)(nil)).Elem()
}

func (o TemplateAxisDataOptionsPtrOutput) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return o
}

func (o TemplateAxisDataOptionsPtrOutput) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return o
}

func (o TemplateAxisDataOptionsPtrOutput) Elem() TemplateAxisDataOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) TemplateAxisDataOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDataOptions
		return ret
	}).(TemplateAxisDataOptionsOutput)
}

func (o TemplateAxisDataOptionsPtrOutput) DateAxisOptions() TemplateDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) *TemplateDateAxisOptions {
		if v == nil {
			return nil
		}
		return v.DateAxisOptions
	}).(TemplateDateAxisOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsPtrOutput) NumericAxisOptions() TemplateNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) *TemplateNumericAxisOptions {
		if v == nil {
			return nil
		}
		return v.NumericAxisOptions
	}).(TemplateNumericAxisOptionsPtrOutput)
}

type TemplateAxisDisplayDataDrivenRange struct {
}

// TemplateAxisDisplayDataDrivenRangeInput is an input type that accepts TemplateAxisDisplayDataDrivenRangeArgs and TemplateAxisDisplayDataDrivenRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayDataDrivenRangeInput` via:
//
//	TemplateAxisDisplayDataDrivenRangeArgs{...}
type TemplateAxisDisplayDataDrivenRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput
	ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(context.Context) TemplateAxisDisplayDataDrivenRangeOutput
}

type TemplateAxisDisplayDataDrivenRangeArgs struct {
}

func (TemplateAxisDisplayDataDrivenRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangeOutput)
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangeOutput).ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayDataDrivenRangePtrInput is an input type that accepts TemplateAxisDisplayDataDrivenRangeArgs, TemplateAxisDisplayDataDrivenRangePtr and TemplateAxisDisplayDataDrivenRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayDataDrivenRangePtrInput` via:
//
//	        TemplateAxisDisplayDataDrivenRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayDataDrivenRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput
	ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput
}

type templateAxisDisplayDataDrivenRangePtrType TemplateAxisDisplayDataDrivenRangeArgs

func TemplateAxisDisplayDataDrivenRangePtr(v *TemplateAxisDisplayDataDrivenRangeArgs) TemplateAxisDisplayDataDrivenRangePtrInput {
	return (*templateAxisDisplayDataDrivenRangePtrType)(v)
}

func (*templateAxisDisplayDataDrivenRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i *templateAxisDisplayDataDrivenRangePtrType) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayDataDrivenRangePtrType) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

type TemplateAxisDisplayDataDrivenRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayDataDrivenRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayDataDrivenRange) *TemplateAxisDisplayDataDrivenRange {
		return &v
	}).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

type TemplateAxisDisplayDataDrivenRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayDataDrivenRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) Elem() TemplateAxisDisplayDataDrivenRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayDataDrivenRange) TemplateAxisDisplayDataDrivenRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayDataDrivenRange
		return ret
	}).(TemplateAxisDisplayDataDrivenRangeOutput)
}

type TemplateAxisDisplayMinMaxRange struct {
	Maximum *float64 `pulumi:"maximum"`
	Minimum *float64 `pulumi:"minimum"`
}

// TemplateAxisDisplayMinMaxRangeInput is an input type that accepts TemplateAxisDisplayMinMaxRangeArgs and TemplateAxisDisplayMinMaxRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayMinMaxRangeInput` via:
//
//	TemplateAxisDisplayMinMaxRangeArgs{...}
type TemplateAxisDisplayMinMaxRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput
	ToTemplateAxisDisplayMinMaxRangeOutputWithContext(context.Context) TemplateAxisDisplayMinMaxRangeOutput
}

type TemplateAxisDisplayMinMaxRangeArgs struct {
	Maximum pulumi.Float64PtrInput `pulumi:"maximum"`
	Minimum pulumi.Float64PtrInput `pulumi:"minimum"`
}

func (TemplateAxisDisplayMinMaxRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput {
	return i.ToTemplateAxisDisplayMinMaxRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangeOutput)
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return i.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangeOutput).ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayMinMaxRangePtrInput is an input type that accepts TemplateAxisDisplayMinMaxRangeArgs, TemplateAxisDisplayMinMaxRangePtr and TemplateAxisDisplayMinMaxRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayMinMaxRangePtrInput` via:
//
//	        TemplateAxisDisplayMinMaxRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayMinMaxRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput
	ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Context) TemplateAxisDisplayMinMaxRangePtrOutput
}

type templateAxisDisplayMinMaxRangePtrType TemplateAxisDisplayMinMaxRangeArgs

func TemplateAxisDisplayMinMaxRangePtr(v *TemplateAxisDisplayMinMaxRangeArgs) TemplateAxisDisplayMinMaxRangePtrInput {
	return (*templateAxisDisplayMinMaxRangePtrType)(v)
}

func (*templateAxisDisplayMinMaxRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i *templateAxisDisplayMinMaxRangePtrType) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return i.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayMinMaxRangePtrType) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisDisplayMinMaxRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayMinMaxRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangeOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayMinMaxRange) *TemplateAxisDisplayMinMaxRange {
		return &v
	}).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangeOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayMinMaxRange) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangeOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayMinMaxRange) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

type TemplateAxisDisplayMinMaxRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayMinMaxRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Elem() TemplateAxisDisplayMinMaxRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) TemplateAxisDisplayMinMaxRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayMinMaxRange
		return ret
	}).(TemplateAxisDisplayMinMaxRangeOutput)
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisDisplayOptions struct {
	AxisLineVisibility *TemplateVisibility `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         *string                       `pulumi:"axisOffset"`
	DataOptions        *TemplateAxisDataOptions      `pulumi:"dataOptions"`
	GridLineVisibility *TemplateVisibility           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   *TemplateScrollBarOptions     `pulumi:"scrollbarOptions"`
	TickLabelOptions   *TemplateAxisTickLabelOptions `pulumi:"tickLabelOptions"`
}

// TemplateAxisDisplayOptionsInput is an input type that accepts TemplateAxisDisplayOptionsArgs and TemplateAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayOptionsInput` via:
//
//	TemplateAxisDisplayOptionsArgs{...}
type TemplateAxisDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput
	ToTemplateAxisDisplayOptionsOutputWithContext(context.Context) TemplateAxisDisplayOptionsOutput
}

type TemplateAxisDisplayOptionsArgs struct {
	AxisLineVisibility TemplateVisibilityPtrInput `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         pulumi.StringPtrInput                `pulumi:"axisOffset"`
	DataOptions        TemplateAxisDataOptionsPtrInput      `pulumi:"dataOptions"`
	GridLineVisibility TemplateVisibilityPtrInput           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   TemplateScrollBarOptionsPtrInput     `pulumi:"scrollbarOptions"`
	TickLabelOptions   TemplateAxisTickLabelOptionsPtrInput `pulumi:"tickLabelOptions"`
}

func (TemplateAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayOptions)(nil)).Elem()
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput {
	return i.ToTemplateAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsOutput)
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return i.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsOutput).ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisDisplayOptionsPtrInput is an input type that accepts TemplateAxisDisplayOptionsArgs, TemplateAxisDisplayOptionsPtr and TemplateAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayOptionsPtrInput` via:
//
//	        TemplateAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput
	ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Context) TemplateAxisDisplayOptionsPtrOutput
}

type templateAxisDisplayOptionsPtrType TemplateAxisDisplayOptionsArgs

func TemplateAxisDisplayOptionsPtr(v *TemplateAxisDisplayOptionsArgs) TemplateAxisDisplayOptionsPtrInput {
	return (*templateAxisDisplayOptionsPtrType)(v)
}

func (*templateAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayOptions)(nil)).Elem()
}

func (i *templateAxisDisplayOptionsPtrType) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return i.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayOptionsPtrType) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsPtrOutput)
}

type TemplateAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput {
	return o
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsOutput {
	return o
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return o.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayOptions) *TemplateAxisDisplayOptions {
		return &v
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) AxisLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateVisibility { return v.AxisLineVisibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateAxisDisplayOptionsOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *string { return v.AxisOffset }).(pulumi.StringPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) DataOptions() TemplateAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateAxisDataOptions { return v.DataOptions }).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) GridLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateVisibility { return v.GridLineVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) ScrollbarOptions() TemplateScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateScrollBarOptions { return v.ScrollbarOptions }).(TemplateScrollBarOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) TickLabelOptions() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateAxisTickLabelOptions { return v.TickLabelOptions }).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateAxisDisplayOptionsPtrOutput) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateAxisDisplayOptionsPtrOutput) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateAxisDisplayOptionsPtrOutput) Elem() TemplateAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) TemplateAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayOptions
		return ret
	}).(TemplateAxisDisplayOptionsOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) AxisLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AxisLineVisibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateAxisDisplayOptionsPtrOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.AxisOffset
	}).(pulumi.StringPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) DataOptions() TemplateAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateAxisDataOptions {
		if v == nil {
			return nil
		}
		return v.DataOptions
	}).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) GridLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.GridLineVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) ScrollbarOptions() TemplateScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateScrollBarOptions {
		if v == nil {
			return nil
		}
		return v.ScrollbarOptions
	}).(TemplateScrollBarOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) TickLabelOptions() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateAxisTickLabelOptions {
		if v == nil {
			return nil
		}
		return v.TickLabelOptions
	}).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisDisplayRange struct {
	DataDriven *TemplateAxisDisplayDataDrivenRange `pulumi:"dataDriven"`
	MinMax     *TemplateAxisDisplayMinMaxRange     `pulumi:"minMax"`
}

// TemplateAxisDisplayRangeInput is an input type that accepts TemplateAxisDisplayRangeArgs and TemplateAxisDisplayRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayRangeInput` via:
//
//	TemplateAxisDisplayRangeArgs{...}
type TemplateAxisDisplayRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput
	ToTemplateAxisDisplayRangeOutputWithContext(context.Context) TemplateAxisDisplayRangeOutput
}

type TemplateAxisDisplayRangeArgs struct {
	DataDriven TemplateAxisDisplayDataDrivenRangePtrInput `pulumi:"dataDriven"`
	MinMax     TemplateAxisDisplayMinMaxRangePtrInput     `pulumi:"minMax"`
}

func (TemplateAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayRange)(nil)).Elem()
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput {
	return i.ToTemplateAxisDisplayRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangeOutput)
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return i.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangeOutput).ToTemplateAxisDisplayRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayRangePtrInput is an input type that accepts TemplateAxisDisplayRangeArgs, TemplateAxisDisplayRangePtr and TemplateAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayRangePtrInput` via:
//
//	        TemplateAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput
	ToTemplateAxisDisplayRangePtrOutputWithContext(context.Context) TemplateAxisDisplayRangePtrOutput
}

type templateAxisDisplayRangePtrType TemplateAxisDisplayRangeArgs

func TemplateAxisDisplayRangePtr(v *TemplateAxisDisplayRangeArgs) TemplateAxisDisplayRangePtrInput {
	return (*templateAxisDisplayRangePtrType)(v)
}

func (*templateAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayRange)(nil)).Elem()
}

func (i *templateAxisDisplayRangePtrType) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return i.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayRangePtrType) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangePtrOutput)
}

type TemplateAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayRange)(nil)).Elem()
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput {
	return o
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayRangeOutput {
	return o
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return o.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayRange) *TemplateAxisDisplayRange {
		return &v
	}).(TemplateAxisDisplayRangePtrOutput)
}

func (o TemplateAxisDisplayRangeOutput) DataDriven() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayRange) *TemplateAxisDisplayDataDrivenRange { return v.DataDriven }).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

func (o TemplateAxisDisplayRangeOutput) MinMax() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayRange) *TemplateAxisDisplayMinMaxRange { return v.MinMax }).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayRange)(nil)).Elem()
}

func (o TemplateAxisDisplayRangePtrOutput) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayRangePtrOutput) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayRangePtrOutput) Elem() TemplateAxisDisplayRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) TemplateAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayRange
		return ret
	}).(TemplateAxisDisplayRangeOutput)
}

func (o TemplateAxisDisplayRangePtrOutput) DataDriven() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) *TemplateAxisDisplayDataDrivenRange {
		if v == nil {
			return nil
		}
		return v.DataDriven
	}).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

func (o TemplateAxisDisplayRangePtrOutput) MinMax() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) *TemplateAxisDisplayMinMaxRange {
		if v == nil {
			return nil
		}
		return v.MinMax
	}).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisLabelOptions struct {
	ApplyTo           *TemplateAxisLabelReferenceOptions `pulumi:"applyTo"`
	CustomLabel       *string                            `pulumi:"customLabel"`
	FontConfiguration *TemplateFontConfiguration         `pulumi:"fontConfiguration"`
}

// TemplateAxisLabelOptionsInput is an input type that accepts TemplateAxisLabelOptionsArgs and TemplateAxisLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisLabelOptionsInput` via:
//
//	TemplateAxisLabelOptionsArgs{...}
type TemplateAxisLabelOptionsInput interface {
	pulumi.Input

	ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput
	ToTemplateAxisLabelOptionsOutputWithContext(context.Context) TemplateAxisLabelOptionsOutput
}

type TemplateAxisLabelOptionsArgs struct {
	ApplyTo           TemplateAxisLabelReferenceOptionsPtrInput `pulumi:"applyTo"`
	CustomLabel       pulumi.StringPtrInput                     `pulumi:"customLabel"`
	FontConfiguration TemplateFontConfigurationPtrInput         `pulumi:"fontConfiguration"`
}

func (TemplateAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelOptions)(nil)).Elem()
}

func (i TemplateAxisLabelOptionsArgs) ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput {
	return i.ToTemplateAxisLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisLabelOptionsArgs) ToTemplateAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelOptionsOutput)
}

// TemplateAxisLabelOptionsArrayInput is an input type that accepts TemplateAxisLabelOptionsArray and TemplateAxisLabelOptionsArrayOutput values.
// You can construct a concrete instance of `TemplateAxisLabelOptionsArrayInput` via:
//
//	TemplateAxisLabelOptionsArray{ TemplateAxisLabelOptionsArgs{...} }
type TemplateAxisLabelOptionsArrayInput interface {
	pulumi.Input

	ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput
	ToTemplateAxisLabelOptionsArrayOutputWithContext(context.Context) TemplateAxisLabelOptionsArrayOutput
}

type TemplateAxisLabelOptionsArray []TemplateAxisLabelOptionsInput

func (TemplateAxisLabelOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAxisLabelOptions)(nil)).Elem()
}

func (i TemplateAxisLabelOptionsArray) ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput {
	return i.ToTemplateAxisLabelOptionsArrayOutputWithContext(context.Background())
}

func (i TemplateAxisLabelOptionsArray) ToTemplateAxisLabelOptionsArrayOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelOptionsArrayOutput)
}

type TemplateAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelOptions)(nil)).Elem()
}

func (o TemplateAxisLabelOptionsOutput) ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput {
	return o
}

func (o TemplateAxisLabelOptionsOutput) ToTemplateAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsOutput {
	return o
}

func (o TemplateAxisLabelOptionsOutput) ApplyTo() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *TemplateAxisLabelReferenceOptions { return v.ApplyTo }).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

func (o TemplateAxisLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateAxisLabelOptionsOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

type TemplateAxisLabelOptionsArrayOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAxisLabelOptions)(nil)).Elem()
}

func (o TemplateAxisLabelOptionsArrayOutput) ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput {
	return o
}

func (o TemplateAxisLabelOptionsArrayOutput) ToTemplateAxisLabelOptionsArrayOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsArrayOutput {
	return o
}

func (o TemplateAxisLabelOptionsArrayOutput) Index(i pulumi.IntInput) TemplateAxisLabelOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateAxisLabelOptions {
		return vs[0].([]TemplateAxisLabelOptions)[vs[1].(int)]
	}).(TemplateAxisLabelOptionsOutput)
}

type TemplateAxisLabelReferenceOptions struct {
	Column  TemplateColumnIdentifier `pulumi:"column"`
	FieldId string                   `pulumi:"fieldId"`
}

// TemplateAxisLabelReferenceOptionsInput is an input type that accepts TemplateAxisLabelReferenceOptionsArgs and TemplateAxisLabelReferenceOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisLabelReferenceOptionsInput` via:
//
//	TemplateAxisLabelReferenceOptionsArgs{...}
type TemplateAxisLabelReferenceOptionsInput interface {
	pulumi.Input

	ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput
	ToTemplateAxisLabelReferenceOptionsOutputWithContext(context.Context) TemplateAxisLabelReferenceOptionsOutput
}

type TemplateAxisLabelReferenceOptionsArgs struct {
	Column  TemplateColumnIdentifierInput `pulumi:"column"`
	FieldId pulumi.StringInput            `pulumi:"fieldId"`
}

func (TemplateAxisLabelReferenceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput {
	return i.ToTemplateAxisLabelReferenceOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsOutput)
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return i.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsOutput).ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisLabelReferenceOptionsPtrInput is an input type that accepts TemplateAxisLabelReferenceOptionsArgs, TemplateAxisLabelReferenceOptionsPtr and TemplateAxisLabelReferenceOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisLabelReferenceOptionsPtrInput` via:
//
//	        TemplateAxisLabelReferenceOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLabelReferenceOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput
	ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Context) TemplateAxisLabelReferenceOptionsPtrOutput
}

type templateAxisLabelReferenceOptionsPtrType TemplateAxisLabelReferenceOptionsArgs

func TemplateAxisLabelReferenceOptionsPtr(v *TemplateAxisLabelReferenceOptionsArgs) TemplateAxisLabelReferenceOptionsPtrInput {
	return (*templateAxisLabelReferenceOptionsPtrType)(v)
}

func (*templateAxisLabelReferenceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (i *templateAxisLabelReferenceOptionsPtrType) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return i.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisLabelReferenceOptionsPtrType) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

type TemplateAxisLabelReferenceOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelReferenceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLabelReferenceOptions) *TemplateAxisLabelReferenceOptions {
		return &v
	}).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

func (o TemplateAxisLabelReferenceOptionsOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateAxisLabelReferenceOptions) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateAxisLabelReferenceOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateAxisLabelReferenceOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

type TemplateAxisLabelReferenceOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelReferenceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) Elem() TemplateAxisLabelReferenceOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) TemplateAxisLabelReferenceOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLabelReferenceOptions
		return ret
	}).(TemplateAxisLabelReferenceOptionsOutput)
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type TemplateAxisLinearScale struct {
	StepCount *float64 `pulumi:"stepCount"`
	StepSize  *float64 `pulumi:"stepSize"`
}

// TemplateAxisLinearScaleInput is an input type that accepts TemplateAxisLinearScaleArgs and TemplateAxisLinearScaleOutput values.
// You can construct a concrete instance of `TemplateAxisLinearScaleInput` via:
//
//	TemplateAxisLinearScaleArgs{...}
type TemplateAxisLinearScaleInput interface {
	pulumi.Input

	ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput
	ToTemplateAxisLinearScaleOutputWithContext(context.Context) TemplateAxisLinearScaleOutput
}

type TemplateAxisLinearScaleArgs struct {
	StepCount pulumi.Float64PtrInput `pulumi:"stepCount"`
	StepSize  pulumi.Float64PtrInput `pulumi:"stepSize"`
}

func (TemplateAxisLinearScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLinearScale)(nil)).Elem()
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput {
	return i.ToTemplateAxisLinearScaleOutputWithContext(context.Background())
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScaleOutputWithContext(ctx context.Context) TemplateAxisLinearScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScaleOutput)
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return i.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScaleOutput).ToTemplateAxisLinearScalePtrOutputWithContext(ctx)
}

// TemplateAxisLinearScalePtrInput is an input type that accepts TemplateAxisLinearScaleArgs, TemplateAxisLinearScalePtr and TemplateAxisLinearScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisLinearScalePtrInput` via:
//
//	        TemplateAxisLinearScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLinearScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput
	ToTemplateAxisLinearScalePtrOutputWithContext(context.Context) TemplateAxisLinearScalePtrOutput
}

type templateAxisLinearScalePtrType TemplateAxisLinearScaleArgs

func TemplateAxisLinearScalePtr(v *TemplateAxisLinearScaleArgs) TemplateAxisLinearScalePtrInput {
	return (*templateAxisLinearScalePtrType)(v)
}

func (*templateAxisLinearScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLinearScale)(nil)).Elem()
}

func (i *templateAxisLinearScalePtrType) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return i.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisLinearScalePtrType) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScalePtrOutput)
}

type TemplateAxisLinearScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisLinearScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLinearScale)(nil)).Elem()
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput {
	return o
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScaleOutputWithContext(ctx context.Context) TemplateAxisLinearScaleOutput {
	return o
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return o.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLinearScale) *TemplateAxisLinearScale {
		return &v
	}).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisLinearScaleOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLinearScale) *float64 { return v.StepCount }).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisLinearScaleOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLinearScale) *float64 { return v.StepSize }).(pulumi.Float64PtrOutput)
}

type TemplateAxisLinearScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLinearScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLinearScale)(nil)).Elem()
}

func (o TemplateAxisLinearScalePtrOutput) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return o
}

func (o TemplateAxisLinearScalePtrOutput) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return o
}

func (o TemplateAxisLinearScalePtrOutput) Elem() TemplateAxisLinearScaleOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) TemplateAxisLinearScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLinearScale
		return ret
	}).(TemplateAxisLinearScaleOutput)
}

func (o TemplateAxisLinearScalePtrOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepCount
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisLinearScalePtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepSize
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisLogarithmicScale struct {
	Base *float64 `pulumi:"base"`
}

// TemplateAxisLogarithmicScaleInput is an input type that accepts TemplateAxisLogarithmicScaleArgs and TemplateAxisLogarithmicScaleOutput values.
// You can construct a concrete instance of `TemplateAxisLogarithmicScaleInput` via:
//
//	TemplateAxisLogarithmicScaleArgs{...}
type TemplateAxisLogarithmicScaleInput interface {
	pulumi.Input

	ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput
	ToTemplateAxisLogarithmicScaleOutputWithContext(context.Context) TemplateAxisLogarithmicScaleOutput
}

type TemplateAxisLogarithmicScaleArgs struct {
	Base pulumi.Float64PtrInput `pulumi:"base"`
}

func (TemplateAxisLogarithmicScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput {
	return i.ToTemplateAxisLogarithmicScaleOutputWithContext(context.Background())
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScaleOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScaleOutput)
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return i.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScaleOutput).ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx)
}

// TemplateAxisLogarithmicScalePtrInput is an input type that accepts TemplateAxisLogarithmicScaleArgs, TemplateAxisLogarithmicScalePtr and TemplateAxisLogarithmicScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisLogarithmicScalePtrInput` via:
//
//	        TemplateAxisLogarithmicScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLogarithmicScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput
	ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Context) TemplateAxisLogarithmicScalePtrOutput
}

type templateAxisLogarithmicScalePtrType TemplateAxisLogarithmicScaleArgs

func TemplateAxisLogarithmicScalePtr(v *TemplateAxisLogarithmicScaleArgs) TemplateAxisLogarithmicScalePtrInput {
	return (*templateAxisLogarithmicScalePtrType)(v)
}

func (*templateAxisLogarithmicScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (i *templateAxisLogarithmicScalePtrType) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return i.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisLogarithmicScalePtrType) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisLogarithmicScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisLogarithmicScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput {
	return o
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScaleOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScaleOutput {
	return o
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return o.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLogarithmicScale) *TemplateAxisLogarithmicScale {
		return &v
	}).(TemplateAxisLogarithmicScalePtrOutput)
}

func (o TemplateAxisLogarithmicScaleOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLogarithmicScale) *float64 { return v.Base }).(pulumi.Float64PtrOutput)
}

type TemplateAxisLogarithmicScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLogarithmicScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (o TemplateAxisLogarithmicScalePtrOutput) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return o
}

func (o TemplateAxisLogarithmicScalePtrOutput) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return o
}

func (o TemplateAxisLogarithmicScalePtrOutput) Elem() TemplateAxisLogarithmicScaleOutput {
	return o.ApplyT(func(v *TemplateAxisLogarithmicScale) TemplateAxisLogarithmicScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLogarithmicScale
		return ret
	}).(TemplateAxisLogarithmicScaleOutput)
}

func (o TemplateAxisLogarithmicScalePtrOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLogarithmicScale) *float64 {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisScale struct {
	Linear      *TemplateAxisLinearScale      `pulumi:"linear"`
	Logarithmic *TemplateAxisLogarithmicScale `pulumi:"logarithmic"`
}

// TemplateAxisScaleInput is an input type that accepts TemplateAxisScaleArgs and TemplateAxisScaleOutput values.
// You can construct a concrete instance of `TemplateAxisScaleInput` via:
//
//	TemplateAxisScaleArgs{...}
type TemplateAxisScaleInput interface {
	pulumi.Input

	ToTemplateAxisScaleOutput() TemplateAxisScaleOutput
	ToTemplateAxisScaleOutputWithContext(context.Context) TemplateAxisScaleOutput
}

type TemplateAxisScaleArgs struct {
	Linear      TemplateAxisLinearScalePtrInput      `pulumi:"linear"`
	Logarithmic TemplateAxisLogarithmicScalePtrInput `pulumi:"logarithmic"`
}

func (TemplateAxisScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisScale)(nil)).Elem()
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScaleOutput() TemplateAxisScaleOutput {
	return i.ToTemplateAxisScaleOutputWithContext(context.Background())
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScaleOutputWithContext(ctx context.Context) TemplateAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScaleOutput)
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return i.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScaleOutput).ToTemplateAxisScalePtrOutputWithContext(ctx)
}

// TemplateAxisScalePtrInput is an input type that accepts TemplateAxisScaleArgs, TemplateAxisScalePtr and TemplateAxisScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisScalePtrInput` via:
//
//	        TemplateAxisScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput
	ToTemplateAxisScalePtrOutputWithContext(context.Context) TemplateAxisScalePtrOutput
}

type templateAxisScalePtrType TemplateAxisScaleArgs

func TemplateAxisScalePtr(v *TemplateAxisScaleArgs) TemplateAxisScalePtrInput {
	return (*templateAxisScalePtrType)(v)
}

func (*templateAxisScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisScale)(nil)).Elem()
}

func (i *templateAxisScalePtrType) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return i.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisScalePtrType) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScalePtrOutput)
}

type TemplateAxisScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisScale)(nil)).Elem()
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScaleOutput() TemplateAxisScaleOutput {
	return o
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScaleOutputWithContext(ctx context.Context) TemplateAxisScaleOutput {
	return o
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return o.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisScale) *TemplateAxisScale {
		return &v
	}).(TemplateAxisScalePtrOutput)
}

func (o TemplateAxisScaleOutput) Linear() TemplateAxisLinearScalePtrOutput {
	return o.ApplyT(func(v TemplateAxisScale) *TemplateAxisLinearScale { return v.Linear }).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisScaleOutput) Logarithmic() TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v TemplateAxisScale) *TemplateAxisLogarithmicScale { return v.Logarithmic }).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisScale)(nil)).Elem()
}

func (o TemplateAxisScalePtrOutput) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return o
}

func (o TemplateAxisScalePtrOutput) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return o
}

func (o TemplateAxisScalePtrOutput) Elem() TemplateAxisScaleOutput {
	return o.ApplyT(func(v *TemplateAxisScale) TemplateAxisScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisScale
		return ret
	}).(TemplateAxisScaleOutput)
}

func (o TemplateAxisScalePtrOutput) Linear() TemplateAxisLinearScalePtrOutput {
	return o.ApplyT(func(v *TemplateAxisScale) *TemplateAxisLinearScale {
		if v == nil {
			return nil
		}
		return v.Linear
	}).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisScalePtrOutput) Logarithmic() TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v *TemplateAxisScale) *TemplateAxisLogarithmicScale {
		if v == nil {
			return nil
		}
		return v.Logarithmic
	}).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisTickLabelOptions struct {
	LabelOptions  *TemplateLabelOptions `pulumi:"labelOptions"`
	RotationAngle *float64              `pulumi:"rotationAngle"`
}

// TemplateAxisTickLabelOptionsInput is an input type that accepts TemplateAxisTickLabelOptionsArgs and TemplateAxisTickLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisTickLabelOptionsInput` via:
//
//	TemplateAxisTickLabelOptionsArgs{...}
type TemplateAxisTickLabelOptionsInput interface {
	pulumi.Input

	ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput
	ToTemplateAxisTickLabelOptionsOutputWithContext(context.Context) TemplateAxisTickLabelOptionsOutput
}

type TemplateAxisTickLabelOptionsArgs struct {
	LabelOptions  TemplateLabelOptionsPtrInput `pulumi:"labelOptions"`
	RotationAngle pulumi.Float64PtrInput       `pulumi:"rotationAngle"`
}

func (TemplateAxisTickLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput {
	return i.ToTemplateAxisTickLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsOutput)
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return i.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsOutput).ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisTickLabelOptionsPtrInput is an input type that accepts TemplateAxisTickLabelOptionsArgs, TemplateAxisTickLabelOptionsPtr and TemplateAxisTickLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisTickLabelOptionsPtrInput` via:
//
//	        TemplateAxisTickLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisTickLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput
	ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Context) TemplateAxisTickLabelOptionsPtrOutput
}

type templateAxisTickLabelOptionsPtrType TemplateAxisTickLabelOptionsArgs

func TemplateAxisTickLabelOptionsPtr(v *TemplateAxisTickLabelOptionsArgs) TemplateAxisTickLabelOptionsPtrInput {
	return (*templateAxisTickLabelOptionsPtrType)(v)
}

func (*templateAxisTickLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (i *templateAxisTickLabelOptionsPtrType) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return i.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisTickLabelOptionsPtrType) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisTickLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisTickLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisTickLabelOptions) *TemplateAxisTickLabelOptions {
		return &v
	}).(TemplateAxisTickLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsOutput) LabelOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisTickLabelOptions) *TemplateLabelOptions { return v.LabelOptions }).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisTickLabelOptions) *float64 { return v.RotationAngle }).(pulumi.Float64PtrOutput)
}

type TemplateAxisTickLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisTickLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (o TemplateAxisTickLabelOptionsPtrOutput) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsPtrOutput) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsPtrOutput) Elem() TemplateAxisTickLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) TemplateAxisTickLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisTickLabelOptions
		return ret
	}).(TemplateAxisTickLabelOptionsOutput)
}

func (o TemplateAxisTickLabelOptionsPtrOutput) LabelOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.LabelOptions
	}).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsPtrOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.RotationAngle
	}).(pulumi.Float64PtrOutput)
}

type TemplateBarChartAggregatedFieldWells struct {
	Category       []TemplateDimensionField `pulumi:"category"`
	Colors         []TemplateDimensionField `pulumi:"colors"`
	SmallMultiples []TemplateDimensionField `pulumi:"smallMultiples"`
	Values         []TemplateMeasureField   `pulumi:"values"`
}

// TemplateBarChartAggregatedFieldWellsInput is an input type that accepts TemplateBarChartAggregatedFieldWellsArgs and TemplateBarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBarChartAggregatedFieldWellsInput` via:
//
//	TemplateBarChartAggregatedFieldWellsArgs{...}
type TemplateBarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput
	ToTemplateBarChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateBarChartAggregatedFieldWellsOutput
}

type TemplateBarChartAggregatedFieldWellsArgs struct {
	Category       TemplateDimensionFieldArrayInput `pulumi:"category"`
	Colors         TemplateDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples TemplateDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateBarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsOutput)
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsOutput).ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBarChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateBarChartAggregatedFieldWellsArgs, TemplateBarChartAggregatedFieldWellsPtr and TemplateBarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateBarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput
	ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput
}

type templateBarChartAggregatedFieldWellsPtrType TemplateBarChartAggregatedFieldWellsArgs

func TemplateBarChartAggregatedFieldWellsPtr(v *TemplateBarChartAggregatedFieldWellsArgs) TemplateBarChartAggregatedFieldWellsPtrInput {
	return (*templateBarChartAggregatedFieldWellsPtrType)(v)
}

func (*templateBarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateBarChartAggregatedFieldWellsPtrType) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBarChartAggregatedFieldWellsPtrType) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartAggregatedFieldWells) *TemplateBarChartAggregatedFieldWells {
		return &v
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.Colors }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.SmallMultiples }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateBarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Elem() TemplateBarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) TemplateBarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartAggregatedFieldWells
		return ret
	}).(TemplateBarChartAggregatedFieldWellsOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateBarChartConfiguration struct {
	BarsArrangement              *TemplateBarsArrangement              `pulumi:"barsArrangement"`
	CategoryAxis                 *TemplateAxisDisplayOptions           `pulumi:"categoryAxis"`
	CategoryLabelOptions         *TemplateChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *TemplateChartAxisLabelOptions        `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults []TemplateContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *TemplateDataLabelOptions             `pulumi:"dataLabels"`
	FieldWells                   *TemplateBarChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *TemplateLegendOptions                `pulumi:"legend"`
	Orientation                  *TemplateBarChartOrientation          `pulumi:"orientation"`
	ReferenceLines               []TemplateReferenceLine               `pulumi:"referenceLines"`
	SmallMultiplesOptions        *TemplateSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *TemplateBarChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *TemplateTooltipOptions               `pulumi:"tooltip"`
	ValueAxis                    *TemplateAxisDisplayOptions           `pulumi:"valueAxis"`
	ValueLabelOptions            *TemplateChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *TemplateVisualPalette                `pulumi:"visualPalette"`
}

// TemplateBarChartConfigurationInput is an input type that accepts TemplateBarChartConfigurationArgs and TemplateBarChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateBarChartConfigurationInput` via:
//
//	TemplateBarChartConfigurationArgs{...}
type TemplateBarChartConfigurationInput interface {
	pulumi.Input

	ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput
	ToTemplateBarChartConfigurationOutputWithContext(context.Context) TemplateBarChartConfigurationOutput
}

type TemplateBarChartConfigurationArgs struct {
	BarsArrangement              TemplateBarsArrangementPtrInput               `pulumi:"barsArrangement"`
	CategoryAxis                 TemplateAxisDisplayOptionsPtrInput            `pulumi:"categoryAxis"`
	CategoryLabelOptions         TemplateChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            TemplateChartAxisLabelOptionsPtrInput         `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults TemplateContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   TemplateDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	FieldWells                   TemplateBarChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       TemplateLegendOptionsPtrInput                 `pulumi:"legend"`
	Orientation                  TemplateBarChartOrientationPtrInput           `pulumi:"orientation"`
	ReferenceLines               TemplateReferenceLineArrayInput               `pulumi:"referenceLines"`
	SmallMultiplesOptions        TemplateSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            TemplateBarChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      TemplateTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueAxis                    TemplateAxisDisplayOptionsPtrInput            `pulumi:"valueAxis"`
	ValueLabelOptions            TemplateChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                TemplateVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (TemplateBarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartConfiguration)(nil)).Elem()
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput {
	return i.ToTemplateBarChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationOutputWithContext(ctx context.Context) TemplateBarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationOutput)
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return i.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationOutput).ToTemplateBarChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateBarChartConfigurationPtrInput is an input type that accepts TemplateBarChartConfigurationArgs, TemplateBarChartConfigurationPtr and TemplateBarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartConfigurationPtrInput` via:
//
//	        TemplateBarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput
	ToTemplateBarChartConfigurationPtrOutputWithContext(context.Context) TemplateBarChartConfigurationPtrOutput
}

type templateBarChartConfigurationPtrType TemplateBarChartConfigurationArgs

func TemplateBarChartConfigurationPtr(v *TemplateBarChartConfigurationArgs) TemplateBarChartConfigurationPtrInput {
	return (*templateBarChartConfigurationPtrType)(v)
}

func (*templateBarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartConfiguration)(nil)).Elem()
}

func (i *templateBarChartConfigurationPtrType) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return i.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBarChartConfigurationPtrType) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationPtrOutput)
}

type TemplateBarChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartConfiguration)(nil)).Elem()
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput {
	return o
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationOutputWithContext(ctx context.Context) TemplateBarChartConfigurationOutput {
	return o
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return o.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartConfiguration) *TemplateBarChartConfiguration {
		return &v
	}).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarsArrangement { return v.BarsArrangement }).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.ColorLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) []TemplateContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateBarChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) FieldWells() TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartFieldWells { return v.FieldWells }).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Orientation() TemplateBarChartOrientationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartOrientation { return v.Orientation }).(TemplateBarChartOrientationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBarChartConfigurationOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateSmallMultiplesOptions { return v.SmallMultiplesOptions }).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) SortConfiguration() TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartSortConfiguration { return v.SortConfiguration }).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ValueAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateAxisDisplayOptions { return v.ValueAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.ValueLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateBarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartConfiguration)(nil)).Elem()
}

func (o TemplateBarChartConfigurationPtrOutput) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartConfigurationPtrOutput) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartConfigurationPtrOutput) Elem() TemplateBarChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) TemplateBarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartConfiguration
		return ret
	}).(TemplateBarChartConfigurationOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) []TemplateContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) FieldWells() TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Orientation() TemplateBarChartOrientationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(TemplateBarChartOrientationPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) SortConfiguration() TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ValueAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ValueAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateBarChartFieldWells struct {
	BarChartAggregatedFieldWells *TemplateBarChartAggregatedFieldWells `pulumi:"barChartAggregatedFieldWells"`
}

// TemplateBarChartFieldWellsInput is an input type that accepts TemplateBarChartFieldWellsArgs and TemplateBarChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBarChartFieldWellsInput` via:
//
//	TemplateBarChartFieldWellsArgs{...}
type TemplateBarChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput
	ToTemplateBarChartFieldWellsOutputWithContext(context.Context) TemplateBarChartFieldWellsOutput
}

type TemplateBarChartFieldWellsArgs struct {
	BarChartAggregatedFieldWells TemplateBarChartAggregatedFieldWellsPtrInput `pulumi:"barChartAggregatedFieldWells"`
}

func (TemplateBarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartFieldWells)(nil)).Elem()
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput {
	return i.ToTemplateBarChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsOutput)
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return i.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsOutput).ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBarChartFieldWellsPtrInput is an input type that accepts TemplateBarChartFieldWellsArgs, TemplateBarChartFieldWellsPtr and TemplateBarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartFieldWellsPtrInput` via:
//
//	        TemplateBarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput
	ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Context) TemplateBarChartFieldWellsPtrOutput
}

type templateBarChartFieldWellsPtrType TemplateBarChartFieldWellsArgs

func TemplateBarChartFieldWellsPtr(v *TemplateBarChartFieldWellsArgs) TemplateBarChartFieldWellsPtrInput {
	return (*templateBarChartFieldWellsPtrType)(v)
}

func (*templateBarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartFieldWells)(nil)).Elem()
}

func (i *templateBarChartFieldWellsPtrType) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return i.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBarChartFieldWellsPtrType) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsPtrOutput)
}

type TemplateBarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartFieldWells)(nil)).Elem()
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput {
	return o
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsOutput {
	return o
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return o.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartFieldWells) *TemplateBarChartFieldWells {
		return &v
	}).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartFieldWellsOutput) BarChartAggregatedFieldWells() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartFieldWells) *TemplateBarChartAggregatedFieldWells {
		return v.BarChartAggregatedFieldWells
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartFieldWells)(nil)).Elem()
}

func (o TemplateBarChartFieldWellsPtrOutput) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartFieldWellsPtrOutput) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartFieldWellsPtrOutput) Elem() TemplateBarChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBarChartFieldWells) TemplateBarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartFieldWells
		return ret
	}).(TemplateBarChartFieldWellsOutput)
}

func (o TemplateBarChartFieldWellsPtrOutput) BarChartAggregatedFieldWells() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartFieldWells) *TemplateBarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BarChartAggregatedFieldWells
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartSortConfiguration struct {
	CategoryItemsLimit               *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []TemplateFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit                  *TemplateItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort                        []TemplateFieldSortOptions       `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []TemplateFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// TemplateBarChartSortConfigurationInput is an input type that accepts TemplateBarChartSortConfigurationArgs and TemplateBarChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateBarChartSortConfigurationInput` via:
//
//	TemplateBarChartSortConfigurationArgs{...}
type TemplateBarChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput
	ToTemplateBarChartSortConfigurationOutputWithContext(context.Context) TemplateBarChartSortConfigurationOutput
}

type TemplateBarChartSortConfigurationArgs struct {
	CategoryItemsLimit               TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit                  TemplateItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort                        TemplateFieldSortOptionsArrayInput      `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               TemplateFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (TemplateBarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput {
	return i.ToTemplateBarChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationOutput)
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return i.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationOutput).ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateBarChartSortConfigurationPtrInput is an input type that accepts TemplateBarChartSortConfigurationArgs, TemplateBarChartSortConfigurationPtr and TemplateBarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartSortConfigurationPtrInput` via:
//
//	        TemplateBarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput
	ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Context) TemplateBarChartSortConfigurationPtrOutput
}

type templateBarChartSortConfigurationPtrType TemplateBarChartSortConfigurationArgs

func TemplateBarChartSortConfigurationPtr(v *TemplateBarChartSortConfigurationArgs) TemplateBarChartSortConfigurationPtrInput {
	return (*templateBarChartSortConfigurationPtrType)(v)
}

func (*templateBarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (i *templateBarChartSortConfigurationPtrType) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return i.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBarChartSortConfigurationPtrType) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationPtrOutput)
}

type TemplateBarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput {
	return o
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationOutput {
	return o
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return o.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartSortConfiguration) *TemplateBarChartSortConfiguration {
		return &v
	}).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration { return v.ColorItemsLimit }).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.ColorSort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.SmallMultiplesSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateBarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateBarChartSortConfigurationPtrOutput) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartSortConfigurationPtrOutput) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartSortConfigurationPtrOutput) Elem() TemplateBarChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) TemplateBarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartSortConfiguration
		return ret
	}).(TemplateBarChartSortConfigurationOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateBarChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateBarChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateBarChartVisualInput is an input type that accepts TemplateBarChartVisualArgs and TemplateBarChartVisualOutput values.
// You can construct a concrete instance of `TemplateBarChartVisualInput` via:
//
//	TemplateBarChartVisualArgs{...}
type TemplateBarChartVisualInput interface {
	pulumi.Input

	ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput
	ToTemplateBarChartVisualOutputWithContext(context.Context) TemplateBarChartVisualOutput
}

type TemplateBarChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateBarChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateBarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartVisual)(nil)).Elem()
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput {
	return i.ToTemplateBarChartVisualOutputWithContext(context.Background())
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualOutputWithContext(ctx context.Context) TemplateBarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualOutput)
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return i.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualOutput).ToTemplateBarChartVisualPtrOutputWithContext(ctx)
}

// TemplateBarChartVisualPtrInput is an input type that accepts TemplateBarChartVisualArgs, TemplateBarChartVisualPtr and TemplateBarChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartVisualPtrInput` via:
//
//	        TemplateBarChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput
	ToTemplateBarChartVisualPtrOutputWithContext(context.Context) TemplateBarChartVisualPtrOutput
}

type templateBarChartVisualPtrType TemplateBarChartVisualArgs

func TemplateBarChartVisualPtr(v *TemplateBarChartVisualArgs) TemplateBarChartVisualPtrInput {
	return (*templateBarChartVisualPtrType)(v)
}

func (*templateBarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartVisual)(nil)).Elem()
}

func (i *templateBarChartVisualPtrType) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return i.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateBarChartVisualPtrType) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualPtrOutput)
}

type TemplateBarChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateBarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartVisual)(nil)).Elem()
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput {
	return o
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualOutputWithContext(ctx context.Context) TemplateBarChartVisualOutput {
	return o
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return o.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartVisual) *TemplateBarChartVisual {
		return &v
	}).(TemplateBarChartVisualPtrOutput)
}

func (o TemplateBarChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBarChartVisualOutput) ChartConfiguration() TemplateBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateBarChartConfiguration { return v.ChartConfiguration }).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBarChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateBarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartVisual)(nil)).Elem()
}

func (o TemplateBarChartVisualPtrOutput) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return o
}

func (o TemplateBarChartVisualPtrOutput) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return o
}

func (o TemplateBarChartVisualPtrOutput) Elem() TemplateBarChartVisualOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) TemplateBarChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartVisual
		return ret
	}).(TemplateBarChartVisualOutput)
}

func (o TemplateBarChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBarChartVisualPtrOutput) ChartConfiguration() TemplateBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateBarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBarChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateBinCountOptions struct {
	Value *float64 `pulumi:"value"`
}

// TemplateBinCountOptionsInput is an input type that accepts TemplateBinCountOptionsArgs and TemplateBinCountOptionsOutput values.
// You can construct a concrete instance of `TemplateBinCountOptionsInput` via:
//
//	TemplateBinCountOptionsArgs{...}
type TemplateBinCountOptionsInput interface {
	pulumi.Input

	ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput
	ToTemplateBinCountOptionsOutputWithContext(context.Context) TemplateBinCountOptionsOutput
}

type TemplateBinCountOptionsArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (TemplateBinCountOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinCountOptions)(nil)).Elem()
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput {
	return i.ToTemplateBinCountOptionsOutputWithContext(context.Background())
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsOutputWithContext(ctx context.Context) TemplateBinCountOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsOutput)
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return i.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsOutput).ToTemplateBinCountOptionsPtrOutputWithContext(ctx)
}

// TemplateBinCountOptionsPtrInput is an input type that accepts TemplateBinCountOptionsArgs, TemplateBinCountOptionsPtr and TemplateBinCountOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBinCountOptionsPtrInput` via:
//
//	        TemplateBinCountOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBinCountOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput
	ToTemplateBinCountOptionsPtrOutputWithContext(context.Context) TemplateBinCountOptionsPtrOutput
}

type templateBinCountOptionsPtrType TemplateBinCountOptionsArgs

func TemplateBinCountOptionsPtr(v *TemplateBinCountOptionsArgs) TemplateBinCountOptionsPtrInput {
	return (*templateBinCountOptionsPtrType)(v)
}

func (*templateBinCountOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinCountOptions)(nil)).Elem()
}

func (i *templateBinCountOptionsPtrType) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return i.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBinCountOptionsPtrType) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsPtrOutput)
}

type TemplateBinCountOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBinCountOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinCountOptions)(nil)).Elem()
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput {
	return o
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsOutputWithContext(ctx context.Context) TemplateBinCountOptionsOutput {
	return o
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return o.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBinCountOptions) *TemplateBinCountOptions {
		return &v
	}).(TemplateBinCountOptionsPtrOutput)
}

func (o TemplateBinCountOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinCountOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TemplateBinCountOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBinCountOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinCountOptions)(nil)).Elem()
}

func (o TemplateBinCountOptionsPtrOutput) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return o
}

func (o TemplateBinCountOptionsPtrOutput) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return o
}

func (o TemplateBinCountOptionsPtrOutput) Elem() TemplateBinCountOptionsOutput {
	return o.ApplyT(func(v *TemplateBinCountOptions) TemplateBinCountOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBinCountOptions
		return ret
	}).(TemplateBinCountOptionsOutput)
}

func (o TemplateBinCountOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinCountOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateBinWidthOptions struct {
	BinCountLimit *float64 `pulumi:"binCountLimit"`
	Value         *float64 `pulumi:"value"`
}

// TemplateBinWidthOptionsInput is an input type that accepts TemplateBinWidthOptionsArgs and TemplateBinWidthOptionsOutput values.
// You can construct a concrete instance of `TemplateBinWidthOptionsInput` via:
//
//	TemplateBinWidthOptionsArgs{...}
type TemplateBinWidthOptionsInput interface {
	pulumi.Input

	ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput
	ToTemplateBinWidthOptionsOutputWithContext(context.Context) TemplateBinWidthOptionsOutput
}

type TemplateBinWidthOptionsArgs struct {
	BinCountLimit pulumi.Float64PtrInput `pulumi:"binCountLimit"`
	Value         pulumi.Float64PtrInput `pulumi:"value"`
}

func (TemplateBinWidthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinWidthOptions)(nil)).Elem()
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput {
	return i.ToTemplateBinWidthOptionsOutputWithContext(context.Background())
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsOutputWithContext(ctx context.Context) TemplateBinWidthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsOutput)
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return i.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsOutput).ToTemplateBinWidthOptionsPtrOutputWithContext(ctx)
}

// TemplateBinWidthOptionsPtrInput is an input type that accepts TemplateBinWidthOptionsArgs, TemplateBinWidthOptionsPtr and TemplateBinWidthOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBinWidthOptionsPtrInput` via:
//
//	        TemplateBinWidthOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBinWidthOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput
	ToTemplateBinWidthOptionsPtrOutputWithContext(context.Context) TemplateBinWidthOptionsPtrOutput
}

type templateBinWidthOptionsPtrType TemplateBinWidthOptionsArgs

func TemplateBinWidthOptionsPtr(v *TemplateBinWidthOptionsArgs) TemplateBinWidthOptionsPtrInput {
	return (*templateBinWidthOptionsPtrType)(v)
}

func (*templateBinWidthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinWidthOptions)(nil)).Elem()
}

func (i *templateBinWidthOptionsPtrType) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return i.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBinWidthOptionsPtrType) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsPtrOutput)
}

type TemplateBinWidthOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBinWidthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinWidthOptions)(nil)).Elem()
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput {
	return o
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsOutputWithContext(ctx context.Context) TemplateBinWidthOptionsOutput {
	return o
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return o.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBinWidthOptions) *TemplateBinWidthOptions {
		return &v
	}).(TemplateBinWidthOptionsPtrOutput)
}

func (o TemplateBinWidthOptionsOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinWidthOptions) *float64 { return v.BinCountLimit }).(pulumi.Float64PtrOutput)
}

func (o TemplateBinWidthOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinWidthOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TemplateBinWidthOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBinWidthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinWidthOptions)(nil)).Elem()
}

func (o TemplateBinWidthOptionsPtrOutput) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return o
}

func (o TemplateBinWidthOptionsPtrOutput) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return o
}

func (o TemplateBinWidthOptionsPtrOutput) Elem() TemplateBinWidthOptionsOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) TemplateBinWidthOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBinWidthOptions
		return ret
	}).(TemplateBinWidthOptionsOutput)
}

func (o TemplateBinWidthOptionsPtrOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.BinCountLimit
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateBinWidthOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateBodySectionConfiguration struct {
	Content                TemplateBodySectionContent             `pulumi:"content"`
	PageBreakConfiguration *TemplateSectionPageBreakConfiguration `pulumi:"pageBreakConfiguration"`
	SectionId              string                                 `pulumi:"sectionId"`
	Style                  *TemplateSectionStyle                  `pulumi:"style"`
}

// TemplateBodySectionConfigurationInput is an input type that accepts TemplateBodySectionConfigurationArgs and TemplateBodySectionConfigurationOutput values.
// You can construct a concrete instance of `TemplateBodySectionConfigurationInput` via:
//
//	TemplateBodySectionConfigurationArgs{...}
type TemplateBodySectionConfigurationInput interface {
	pulumi.Input

	ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput
	ToTemplateBodySectionConfigurationOutputWithContext(context.Context) TemplateBodySectionConfigurationOutput
}

type TemplateBodySectionConfigurationArgs struct {
	Content                TemplateBodySectionContentInput               `pulumi:"content"`
	PageBreakConfiguration TemplateSectionPageBreakConfigurationPtrInput `pulumi:"pageBreakConfiguration"`
	SectionId              pulumi.StringInput                            `pulumi:"sectionId"`
	Style                  TemplateSectionStylePtrInput                  `pulumi:"style"`
}

func (TemplateBodySectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionConfiguration)(nil)).Elem()
}

func (i TemplateBodySectionConfigurationArgs) ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput {
	return i.ToTemplateBodySectionConfigurationOutputWithContext(context.Background())
}

func (i TemplateBodySectionConfigurationArgs) ToTemplateBodySectionConfigurationOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionConfigurationOutput)
}

// TemplateBodySectionConfigurationArrayInput is an input type that accepts TemplateBodySectionConfigurationArray and TemplateBodySectionConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateBodySectionConfigurationArrayInput` via:
//
//	TemplateBodySectionConfigurationArray{ TemplateBodySectionConfigurationArgs{...} }
type TemplateBodySectionConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput
	ToTemplateBodySectionConfigurationArrayOutputWithContext(context.Context) TemplateBodySectionConfigurationArrayOutput
}

type TemplateBodySectionConfigurationArray []TemplateBodySectionConfigurationInput

func (TemplateBodySectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateBodySectionConfiguration)(nil)).Elem()
}

func (i TemplateBodySectionConfigurationArray) ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput {
	return i.ToTemplateBodySectionConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateBodySectionConfigurationArray) ToTemplateBodySectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionConfigurationArrayOutput)
}

type TemplateBodySectionConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionConfiguration)(nil)).Elem()
}

func (o TemplateBodySectionConfigurationOutput) ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput {
	return o
}

func (o TemplateBodySectionConfigurationOutput) ToTemplateBodySectionConfigurationOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationOutput {
	return o
}

func (o TemplateBodySectionConfigurationOutput) Content() TemplateBodySectionContentOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) TemplateBodySectionContent { return v.Content }).(TemplateBodySectionContentOutput)
}

func (o TemplateBodySectionConfigurationOutput) PageBreakConfiguration() TemplateSectionPageBreakConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) *TemplateSectionPageBreakConfiguration {
		return v.PageBreakConfiguration
	}).(TemplateSectionPageBreakConfigurationPtrOutput)
}

func (o TemplateBodySectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o TemplateBodySectionConfigurationOutput) Style() TemplateSectionStylePtrOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) *TemplateSectionStyle { return v.Style }).(TemplateSectionStylePtrOutput)
}

type TemplateBodySectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateBodySectionConfiguration)(nil)).Elem()
}

func (o TemplateBodySectionConfigurationArrayOutput) ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput {
	return o
}

func (o TemplateBodySectionConfigurationArrayOutput) ToTemplateBodySectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationArrayOutput {
	return o
}

func (o TemplateBodySectionConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateBodySectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateBodySectionConfiguration {
		return vs[0].([]TemplateBodySectionConfiguration)[vs[1].(int)]
	}).(TemplateBodySectionConfigurationOutput)
}

type TemplateBodySectionContent struct {
	Layout *TemplateSectionLayoutConfiguration `pulumi:"layout"`
}

// TemplateBodySectionContentInput is an input type that accepts TemplateBodySectionContentArgs and TemplateBodySectionContentOutput values.
// You can construct a concrete instance of `TemplateBodySectionContentInput` via:
//
//	TemplateBodySectionContentArgs{...}
type TemplateBodySectionContentInput interface {
	pulumi.Input

	ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput
	ToTemplateBodySectionContentOutputWithContext(context.Context) TemplateBodySectionContentOutput
}

type TemplateBodySectionContentArgs struct {
	Layout TemplateSectionLayoutConfigurationPtrInput `pulumi:"layout"`
}

func (TemplateBodySectionContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionContent)(nil)).Elem()
}

func (i TemplateBodySectionContentArgs) ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput {
	return i.ToTemplateBodySectionContentOutputWithContext(context.Background())
}

func (i TemplateBodySectionContentArgs) ToTemplateBodySectionContentOutputWithContext(ctx context.Context) TemplateBodySectionContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionContentOutput)
}

type TemplateBodySectionContentOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionContent)(nil)).Elem()
}

func (o TemplateBodySectionContentOutput) ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput {
	return o
}

func (o TemplateBodySectionContentOutput) ToTemplateBodySectionContentOutputWithContext(ctx context.Context) TemplateBodySectionContentOutput {
	return o
}

func (o TemplateBodySectionContentOutput) Layout() TemplateSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBodySectionContent) *TemplateSectionLayoutConfiguration { return v.Layout }).(TemplateSectionLayoutConfigurationPtrOutput)
}

type TemplateBoxPlotAggregatedFieldWells struct {
	GroupBy []TemplateDimensionField `pulumi:"groupBy"`
	Values  []TemplateMeasureField   `pulumi:"values"`
}

// TemplateBoxPlotAggregatedFieldWellsInput is an input type that accepts TemplateBoxPlotAggregatedFieldWellsArgs and TemplateBoxPlotAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotAggregatedFieldWellsInput` via:
//
//	TemplateBoxPlotAggregatedFieldWellsArgs{...}
type TemplateBoxPlotAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput
	ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(context.Context) TemplateBoxPlotAggregatedFieldWellsOutput
}

type TemplateBoxPlotAggregatedFieldWellsArgs struct {
	GroupBy TemplateDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateBoxPlotAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsOutput)
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsOutput).ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotAggregatedFieldWellsPtrInput is an input type that accepts TemplateBoxPlotAggregatedFieldWellsArgs, TemplateBoxPlotAggregatedFieldWellsPtr and TemplateBoxPlotAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotAggregatedFieldWellsPtrInput` via:
//
//	        TemplateBoxPlotAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput
	ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput
}

type templateBoxPlotAggregatedFieldWellsPtrType TemplateBoxPlotAggregatedFieldWellsArgs

func TemplateBoxPlotAggregatedFieldWellsPtr(v *TemplateBoxPlotAggregatedFieldWellsArgs) TemplateBoxPlotAggregatedFieldWellsPtrInput {
	return (*templateBoxPlotAggregatedFieldWellsPtrType)(v)
}

func (*templateBoxPlotAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i *templateBoxPlotAggregatedFieldWellsPtrType) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotAggregatedFieldWellsPtrType) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotAggregatedFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		return &v
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotAggregatedFieldWells) []TemplateDimensionField { return v.GroupBy }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateBoxPlotAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) Elem() TemplateBoxPlotAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) TemplateBoxPlotAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotAggregatedFieldWells
		return ret
	}).(TemplateBoxPlotAggregatedFieldWellsOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateBoxPlotChartConfiguration struct {
	BoxPlotOptions             *TemplateBoxPlotOptions           `pulumi:"boxPlotOptions"`
	CategoryAxis               *TemplateAxisDisplayOptions       `pulumi:"categoryAxis"`
	CategoryLabelOptions       *TemplateChartAxisLabelOptions    `pulumi:"categoryLabelOptions"`
	FieldWells                 *TemplateBoxPlotFieldWells        `pulumi:"fieldWells"`
	Legend                     *TemplateLegendOptions            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *TemplateAxisDisplayOptions       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *TemplateChartAxisLabelOptions    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             []TemplateReferenceLine           `pulumi:"referenceLines"`
	SortConfiguration          *TemplateBoxPlotSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                    *TemplateTooltipOptions           `pulumi:"tooltip"`
	VisualPalette              *TemplateVisualPalette            `pulumi:"visualPalette"`
}

// TemplateBoxPlotChartConfigurationInput is an input type that accepts TemplateBoxPlotChartConfigurationArgs and TemplateBoxPlotChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateBoxPlotChartConfigurationInput` via:
//
//	TemplateBoxPlotChartConfigurationArgs{...}
type TemplateBoxPlotChartConfigurationInput interface {
	pulumi.Input

	ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput
	ToTemplateBoxPlotChartConfigurationOutputWithContext(context.Context) TemplateBoxPlotChartConfigurationOutput
}

type TemplateBoxPlotChartConfigurationArgs struct {
	BoxPlotOptions             TemplateBoxPlotOptionsPtrInput           `pulumi:"boxPlotOptions"`
	CategoryAxis               TemplateAxisDisplayOptionsPtrInput       `pulumi:"categoryAxis"`
	CategoryLabelOptions       TemplateChartAxisLabelOptionsPtrInput    `pulumi:"categoryLabelOptions"`
	FieldWells                 TemplateBoxPlotFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     TemplateLegendOptionsPtrInput            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             TemplateReferenceLineArrayInput          `pulumi:"referenceLines"`
	SortConfiguration          TemplateBoxPlotSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                    TemplateTooltipOptionsPtrInput           `pulumi:"tooltip"`
	VisualPalette              TemplateVisualPalettePtrInput            `pulumi:"visualPalette"`
}

func (TemplateBoxPlotChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput {
	return i.ToTemplateBoxPlotChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationOutput)
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return i.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationOutput).ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateBoxPlotChartConfigurationPtrInput is an input type that accepts TemplateBoxPlotChartConfigurationArgs, TemplateBoxPlotChartConfigurationPtr and TemplateBoxPlotChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotChartConfigurationPtrInput` via:
//
//	        TemplateBoxPlotChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput
	ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Context) TemplateBoxPlotChartConfigurationPtrOutput
}

type templateBoxPlotChartConfigurationPtrType TemplateBoxPlotChartConfigurationArgs

func TemplateBoxPlotChartConfigurationPtr(v *TemplateBoxPlotChartConfigurationArgs) TemplateBoxPlotChartConfigurationPtrInput {
	return (*templateBoxPlotChartConfigurationPtrType)(v)
}

func (*templateBoxPlotChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (i *templateBoxPlotChartConfigurationPtrType) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return i.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotChartConfigurationPtrType) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationPtrOutput)
}

type TemplateBoxPlotChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotChartConfiguration {
		return &v
	}).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) BoxPlotOptions() TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotOptions { return v.BoxPlotOptions }).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) FieldWells() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotFieldWells { return v.FieldWells }).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) SortConfiguration() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotSortConfiguration {
		return v.SortConfiguration
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateBoxPlotChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Elem() TemplateBoxPlotChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) TemplateBoxPlotChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotChartConfiguration
		return ret
	}).(TemplateBoxPlotChartConfigurationOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) BoxPlotOptions() TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotOptions {
		if v == nil {
			return nil
		}
		return v.BoxPlotOptions
	}).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) FieldWells() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) SortConfiguration() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateBoxPlotFieldWells struct {
	BoxPlotAggregatedFieldWells *TemplateBoxPlotAggregatedFieldWells `pulumi:"boxPlotAggregatedFieldWells"`
}

// TemplateBoxPlotFieldWellsInput is an input type that accepts TemplateBoxPlotFieldWellsArgs and TemplateBoxPlotFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotFieldWellsInput` via:
//
//	TemplateBoxPlotFieldWellsArgs{...}
type TemplateBoxPlotFieldWellsInput interface {
	pulumi.Input

	ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput
	ToTemplateBoxPlotFieldWellsOutputWithContext(context.Context) TemplateBoxPlotFieldWellsOutput
}

type TemplateBoxPlotFieldWellsArgs struct {
	BoxPlotAggregatedFieldWells TemplateBoxPlotAggregatedFieldWellsPtrInput `pulumi:"boxPlotAggregatedFieldWells"`
}

func (TemplateBoxPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput {
	return i.ToTemplateBoxPlotFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsOutput)
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsOutput).ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotFieldWellsPtrInput is an input type that accepts TemplateBoxPlotFieldWellsArgs, TemplateBoxPlotFieldWellsPtr and TemplateBoxPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotFieldWellsPtrInput` via:
//
//	        TemplateBoxPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput
	ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Context) TemplateBoxPlotFieldWellsPtrOutput
}

type templateBoxPlotFieldWellsPtrType TemplateBoxPlotFieldWellsArgs

func TemplateBoxPlotFieldWellsPtr(v *TemplateBoxPlotFieldWellsArgs) TemplateBoxPlotFieldWellsPtrInput {
	return (*templateBoxPlotFieldWellsPtrType)(v)
}

func (*templateBoxPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (i *templateBoxPlotFieldWellsPtrType) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotFieldWellsPtrType) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsPtrOutput)
}

type TemplateBoxPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotFieldWells) *TemplateBoxPlotFieldWells {
		return &v
	}).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotFieldWellsOutput) BoxPlotAggregatedFieldWells() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		return v.BoxPlotAggregatedFieldWells
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotFieldWellsPtrOutput) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsPtrOutput) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsPtrOutput) Elem() TemplateBoxPlotFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotFieldWells) TemplateBoxPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotFieldWells
		return ret
	}).(TemplateBoxPlotFieldWellsOutput)
}

func (o TemplateBoxPlotFieldWellsPtrOutput) BoxPlotAggregatedFieldWells() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BoxPlotAggregatedFieldWells
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotOptions struct {
	AllDataPointsVisibility *TemplateVisibility          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       *TemplateVisibility          `pulumi:"outlierVisibility"`
	StyleOptions            *TemplateBoxPlotStyleOptions `pulumi:"styleOptions"`
}

// TemplateBoxPlotOptionsInput is an input type that accepts TemplateBoxPlotOptionsArgs and TemplateBoxPlotOptionsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotOptionsInput` via:
//
//	TemplateBoxPlotOptionsArgs{...}
type TemplateBoxPlotOptionsInput interface {
	pulumi.Input

	ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput
	ToTemplateBoxPlotOptionsOutputWithContext(context.Context) TemplateBoxPlotOptionsOutput
}

type TemplateBoxPlotOptionsArgs struct {
	AllDataPointsVisibility TemplateVisibilityPtrInput          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       TemplateVisibilityPtrInput          `pulumi:"outlierVisibility"`
	StyleOptions            TemplateBoxPlotStyleOptionsPtrInput `pulumi:"styleOptions"`
}

func (TemplateBoxPlotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotOptions)(nil)).Elem()
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput {
	return i.ToTemplateBoxPlotOptionsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsOutput)
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return i.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsOutput).ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotOptionsPtrInput is an input type that accepts TemplateBoxPlotOptionsArgs, TemplateBoxPlotOptionsPtr and TemplateBoxPlotOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotOptionsPtrInput` via:
//
//	        TemplateBoxPlotOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput
	ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Context) TemplateBoxPlotOptionsPtrOutput
}

type templateBoxPlotOptionsPtrType TemplateBoxPlotOptionsArgs

func TemplateBoxPlotOptionsPtr(v *TemplateBoxPlotOptionsArgs) TemplateBoxPlotOptionsPtrInput {
	return (*templateBoxPlotOptionsPtrType)(v)
}

func (*templateBoxPlotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotOptions)(nil)).Elem()
}

func (i *templateBoxPlotOptionsPtrType) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return i.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotOptionsPtrType) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsPtrOutput)
}

type TemplateBoxPlotOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotOptions)(nil)).Elem()
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput {
	return o
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsOutput {
	return o
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return o.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotOptions) *TemplateBoxPlotOptions {
		return &v
	}).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) AllDataPointsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateVisibility { return v.AllDataPointsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) OutlierVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateVisibility { return v.OutlierVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) StyleOptions() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateBoxPlotStyleOptions { return v.StyleOptions }).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotOptions)(nil)).Elem()
}

func (o TemplateBoxPlotOptionsPtrOutput) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotOptionsPtrOutput) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotOptionsPtrOutput) Elem() TemplateBoxPlotOptionsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) TemplateBoxPlotOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotOptions
		return ret
	}).(TemplateBoxPlotOptionsOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) AllDataPointsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AllDataPointsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) OutlierVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.OutlierVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) StyleOptions() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateBoxPlotStyleOptions {
		if v == nil {
			return nil
		}
		return v.StyleOptions
	}).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotSortConfiguration struct {
	CategorySort            []TemplateFieldSortOptions       `pulumi:"categorySort"`
	PaginationConfiguration *TemplatePaginationConfiguration `pulumi:"paginationConfiguration"`
}

// TemplateBoxPlotSortConfigurationInput is an input type that accepts TemplateBoxPlotSortConfigurationArgs and TemplateBoxPlotSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateBoxPlotSortConfigurationInput` via:
//
//	TemplateBoxPlotSortConfigurationArgs{...}
type TemplateBoxPlotSortConfigurationInput interface {
	pulumi.Input

	ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput
	ToTemplateBoxPlotSortConfigurationOutputWithContext(context.Context) TemplateBoxPlotSortConfigurationOutput
}

type TemplateBoxPlotSortConfigurationArgs struct {
	CategorySort            TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	PaginationConfiguration TemplatePaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
}

func (TemplateBoxPlotSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput {
	return i.ToTemplateBoxPlotSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationOutput)
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return i.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationOutput).ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateBoxPlotSortConfigurationPtrInput is an input type that accepts TemplateBoxPlotSortConfigurationArgs, TemplateBoxPlotSortConfigurationPtr and TemplateBoxPlotSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotSortConfigurationPtrInput` via:
//
//	        TemplateBoxPlotSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput
	ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Context) TemplateBoxPlotSortConfigurationPtrOutput
}

type templateBoxPlotSortConfigurationPtrType TemplateBoxPlotSortConfigurationArgs

func TemplateBoxPlotSortConfigurationPtr(v *TemplateBoxPlotSortConfigurationArgs) TemplateBoxPlotSortConfigurationPtrInput {
	return (*templateBoxPlotSortConfigurationPtrType)(v)
}

func (*templateBoxPlotSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (i *templateBoxPlotSortConfigurationPtrType) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return i.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotSortConfigurationPtrType) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationPtrOutput)
}

type TemplateBoxPlotSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotSortConfiguration) *TemplateBoxPlotSortConfiguration {
		return &v
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBoxPlotSortConfigurationOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotSortConfiguration) *TemplatePaginationConfiguration {
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

type TemplateBoxPlotSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) Elem() TemplateBoxPlotSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) TemplateBoxPlotSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotSortConfiguration
		return ret
	}).(TemplateBoxPlotSortConfigurationOutput)
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) *TemplatePaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

type TemplateBoxPlotStyleOptions struct {
	FillStyle *TemplateBoxPlotFillStyle `pulumi:"fillStyle"`
}

// TemplateBoxPlotStyleOptionsInput is an input type that accepts TemplateBoxPlotStyleOptionsArgs and TemplateBoxPlotStyleOptionsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotStyleOptionsInput` via:
//
//	TemplateBoxPlotStyleOptionsArgs{...}
type TemplateBoxPlotStyleOptionsInput interface {
	pulumi.Input

	ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput
	ToTemplateBoxPlotStyleOptionsOutputWithContext(context.Context) TemplateBoxPlotStyleOptionsOutput
}

type TemplateBoxPlotStyleOptionsArgs struct {
	FillStyle TemplateBoxPlotFillStylePtrInput `pulumi:"fillStyle"`
}

func (TemplateBoxPlotStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput {
	return i.ToTemplateBoxPlotStyleOptionsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsOutput)
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return i.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsOutput).ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotStyleOptionsPtrInput is an input type that accepts TemplateBoxPlotStyleOptionsArgs, TemplateBoxPlotStyleOptionsPtr and TemplateBoxPlotStyleOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotStyleOptionsPtrInput` via:
//
//	        TemplateBoxPlotStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotStyleOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput
	ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Context) TemplateBoxPlotStyleOptionsPtrOutput
}

type templateBoxPlotStyleOptionsPtrType TemplateBoxPlotStyleOptionsArgs

func TemplateBoxPlotStyleOptionsPtr(v *TemplateBoxPlotStyleOptionsArgs) TemplateBoxPlotStyleOptionsPtrInput {
	return (*templateBoxPlotStyleOptionsPtrType)(v)
}

func (*templateBoxPlotStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (i *templateBoxPlotStyleOptionsPtrType) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return i.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotStyleOptionsPtrType) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotStyleOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotStyleOptions) *TemplateBoxPlotStyleOptions {
		return &v
	}).(TemplateBoxPlotStyleOptionsPtrOutput)
}

func (o TemplateBoxPlotStyleOptionsOutput) FillStyle() TemplateBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotStyleOptions) *TemplateBoxPlotFillStyle { return v.FillStyle }).(TemplateBoxPlotFillStylePtrOutput)
}

type TemplateBoxPlotStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) Elem() TemplateBoxPlotStyleOptionsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotStyleOptions) TemplateBoxPlotStyleOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotStyleOptions
		return ret
	}).(TemplateBoxPlotStyleOptionsOutput)
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) FillStyle() TemplateBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotStyleOptions) *TemplateBoxPlotFillStyle {
		if v == nil {
			return nil
		}
		return v.FillStyle
	}).(TemplateBoxPlotFillStylePtrOutput)
}

type TemplateBoxPlotVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateBoxPlotChartConfiguration  `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateBoxPlotVisualInput is an input type that accepts TemplateBoxPlotVisualArgs and TemplateBoxPlotVisualOutput values.
// You can construct a concrete instance of `TemplateBoxPlotVisualInput` via:
//
//	TemplateBoxPlotVisualArgs{...}
type TemplateBoxPlotVisualInput interface {
	pulumi.Input

	ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput
	ToTemplateBoxPlotVisualOutputWithContext(context.Context) TemplateBoxPlotVisualOutput
}

type TemplateBoxPlotVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateBoxPlotChartConfigurationPtrInput  `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateBoxPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotVisual)(nil)).Elem()
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput {
	return i.ToTemplateBoxPlotVisualOutputWithContext(context.Background())
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualOutputWithContext(ctx context.Context) TemplateBoxPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualOutput)
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return i.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualOutput).ToTemplateBoxPlotVisualPtrOutputWithContext(ctx)
}

// TemplateBoxPlotVisualPtrInput is an input type that accepts TemplateBoxPlotVisualArgs, TemplateBoxPlotVisualPtr and TemplateBoxPlotVisualPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotVisualPtrInput` via:
//
//	        TemplateBoxPlotVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotVisualPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput
	ToTemplateBoxPlotVisualPtrOutputWithContext(context.Context) TemplateBoxPlotVisualPtrOutput
}

type templateBoxPlotVisualPtrType TemplateBoxPlotVisualArgs

func TemplateBoxPlotVisualPtr(v *TemplateBoxPlotVisualArgs) TemplateBoxPlotVisualPtrInput {
	return (*templateBoxPlotVisualPtrType)(v)
}

func (*templateBoxPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotVisual)(nil)).Elem()
}

func (i *templateBoxPlotVisualPtrType) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return i.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotVisualPtrType) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualPtrOutput)
}

type TemplateBoxPlotVisualOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotVisual)(nil)).Elem()
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput {
	return o
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualOutputWithContext(ctx context.Context) TemplateBoxPlotVisualOutput {
	return o
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return o.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotVisual) *TemplateBoxPlotVisual {
		return &v
	}).(TemplateBoxPlotVisualPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBoxPlotVisualOutput) ChartConfiguration() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateBoxPlotChartConfiguration { return v.ChartConfiguration }).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBoxPlotVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateBoxPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotVisual)(nil)).Elem()
}

func (o TemplateBoxPlotVisualPtrOutput) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return o
}

func (o TemplateBoxPlotVisualPtrOutput) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return o
}

func (o TemplateBoxPlotVisualPtrOutput) Elem() TemplateBoxPlotVisualOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) TemplateBoxPlotVisual {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotVisual
		return ret
	}).(TemplateBoxPlotVisualOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) ChartConfiguration() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateBoxPlotChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateCalculatedField struct {
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
	Expression        string `pulumi:"expression"`
	Name              string `pulumi:"name"`
}

// TemplateCalculatedFieldInput is an input type that accepts TemplateCalculatedFieldArgs and TemplateCalculatedFieldOutput values.
// You can construct a concrete instance of `TemplateCalculatedFieldInput` via:
//
//	TemplateCalculatedFieldArgs{...}
type TemplateCalculatedFieldInput interface {
	pulumi.Input

	ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput
	ToTemplateCalculatedFieldOutputWithContext(context.Context) TemplateCalculatedFieldOutput
}

type TemplateCalculatedFieldArgs struct {
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput `pulumi:"expression"`
	Name              pulumi.StringInput `pulumi:"name"`
}

func (TemplateCalculatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedField)(nil)).Elem()
}

func (i TemplateCalculatedFieldArgs) ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput {
	return i.ToTemplateCalculatedFieldOutputWithContext(context.Background())
}

func (i TemplateCalculatedFieldArgs) ToTemplateCalculatedFieldOutputWithContext(ctx context.Context) TemplateCalculatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedFieldOutput)
}

// TemplateCalculatedFieldArrayInput is an input type that accepts TemplateCalculatedFieldArray and TemplateCalculatedFieldArrayOutput values.
// You can construct a concrete instance of `TemplateCalculatedFieldArrayInput` via:
//
//	TemplateCalculatedFieldArray{ TemplateCalculatedFieldArgs{...} }
type TemplateCalculatedFieldArrayInput interface {
	pulumi.Input

	ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput
	ToTemplateCalculatedFieldArrayOutputWithContext(context.Context) TemplateCalculatedFieldArrayOutput
}

type TemplateCalculatedFieldArray []TemplateCalculatedFieldInput

func (TemplateCalculatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCalculatedField)(nil)).Elem()
}

func (i TemplateCalculatedFieldArray) ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput {
	return i.ToTemplateCalculatedFieldArrayOutputWithContext(context.Background())
}

func (i TemplateCalculatedFieldArray) ToTemplateCalculatedFieldArrayOutputWithContext(ctx context.Context) TemplateCalculatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedFieldArrayOutput)
}

type TemplateCalculatedFieldOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedField)(nil)).Elem()
}

func (o TemplateCalculatedFieldOutput) ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput {
	return o
}

func (o TemplateCalculatedFieldOutput) ToTemplateCalculatedFieldOutputWithContext(ctx context.Context) TemplateCalculatedFieldOutput {
	return o
}

func (o TemplateCalculatedFieldOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateCalculatedFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateCalculatedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.Name }).(pulumi.StringOutput)
}

type TemplateCalculatedFieldArrayOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCalculatedField)(nil)).Elem()
}

func (o TemplateCalculatedFieldArrayOutput) ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput {
	return o
}

func (o TemplateCalculatedFieldArrayOutput) ToTemplateCalculatedFieldArrayOutputWithContext(ctx context.Context) TemplateCalculatedFieldArrayOutput {
	return o
}

func (o TemplateCalculatedFieldArrayOutput) Index(i pulumi.IntInput) TemplateCalculatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateCalculatedField {
		return vs[0].([]TemplateCalculatedField)[vs[1].(int)]
	}).(TemplateCalculatedFieldOutput)
}

type TemplateCalculatedMeasureField struct {
	Expression string `pulumi:"expression"`
	FieldId    string `pulumi:"fieldId"`
}

// TemplateCalculatedMeasureFieldInput is an input type that accepts TemplateCalculatedMeasureFieldArgs and TemplateCalculatedMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateCalculatedMeasureFieldInput` via:
//
//	TemplateCalculatedMeasureFieldArgs{...}
type TemplateCalculatedMeasureFieldInput interface {
	pulumi.Input

	ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput
	ToTemplateCalculatedMeasureFieldOutputWithContext(context.Context) TemplateCalculatedMeasureFieldOutput
}

type TemplateCalculatedMeasureFieldArgs struct {
	Expression pulumi.StringInput `pulumi:"expression"`
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
}

func (TemplateCalculatedMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedMeasureField)(nil)).Elem()
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput {
	return i.ToTemplateCalculatedMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldOutput)
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return i.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldOutput).ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateCalculatedMeasureFieldPtrInput is an input type that accepts TemplateCalculatedMeasureFieldArgs, TemplateCalculatedMeasureFieldPtr and TemplateCalculatedMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCalculatedMeasureFieldPtrInput` via:
//
//	        TemplateCalculatedMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCalculatedMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput
	ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Context) TemplateCalculatedMeasureFieldPtrOutput
}

type templateCalculatedMeasureFieldPtrType TemplateCalculatedMeasureFieldArgs

func TemplateCalculatedMeasureFieldPtr(v *TemplateCalculatedMeasureFieldArgs) TemplateCalculatedMeasureFieldPtrInput {
	return (*templateCalculatedMeasureFieldPtrType)(v)
}

func (*templateCalculatedMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCalculatedMeasureField)(nil)).Elem()
}

func (i *templateCalculatedMeasureFieldPtrType) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return i.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateCalculatedMeasureFieldPtrType) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldPtrOutput)
}

type TemplateCalculatedMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedMeasureField)(nil)).Elem()
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return o.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCalculatedMeasureField) *TemplateCalculatedMeasureField {
		return &v
	}).(TemplateCalculatedMeasureFieldPtrOutput)
}

func (o TemplateCalculatedMeasureFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedMeasureField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateCalculatedMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

type TemplateCalculatedMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCalculatedMeasureField)(nil)).Elem()
}

func (o TemplateCalculatedMeasureFieldPtrOutput) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldPtrOutput) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldPtrOutput) Elem() TemplateCalculatedMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) TemplateCalculatedMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateCalculatedMeasureField
		return ret
	}).(TemplateCalculatedMeasureFieldOutput)
}

func (o TemplateCalculatedMeasureFieldPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCalculatedMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type TemplateCascadingControlConfiguration struct {
	SourceControls []TemplateCascadingControlSource `pulumi:"sourceControls"`
}

// TemplateCascadingControlConfigurationInput is an input type that accepts TemplateCascadingControlConfigurationArgs and TemplateCascadingControlConfigurationOutput values.
// You can construct a concrete instance of `TemplateCascadingControlConfigurationInput` via:
//
//	TemplateCascadingControlConfigurationArgs{...}
type TemplateCascadingControlConfigurationInput interface {
	pulumi.Input

	ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput
	ToTemplateCascadingControlConfigurationOutputWithContext(context.Context) TemplateCascadingControlConfigurationOutput
}

type TemplateCascadingControlConfigurationArgs struct {
	SourceControls TemplateCascadingControlSourceArrayInput `pulumi:"sourceControls"`
}

func (TemplateCascadingControlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput {
	return i.ToTemplateCascadingControlConfigurationOutputWithContext(context.Background())
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationOutput)
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return i.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationOutput).ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx)
}

// TemplateCascadingControlConfigurationPtrInput is an input type that accepts TemplateCascadingControlConfigurationArgs, TemplateCascadingControlConfigurationPtr and TemplateCascadingControlConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCascadingControlConfigurationPtrInput` via:
//
//	        TemplateCascadingControlConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCascadingControlConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput
	ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Context) TemplateCascadingControlConfigurationPtrOutput
}

type templateCascadingControlConfigurationPtrType TemplateCascadingControlConfigurationArgs

func TemplateCascadingControlConfigurationPtr(v *TemplateCascadingControlConfigurationArgs) TemplateCascadingControlConfigurationPtrInput {
	return (*templateCascadingControlConfigurationPtrType)(v)
}

func (*templateCascadingControlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (i *templateCascadingControlConfigurationPtrType) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return i.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCascadingControlConfigurationPtrType) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationPtrOutput)
}

type TemplateCascadingControlConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput {
	return o
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationOutput {
	return o
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return o.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCascadingControlConfiguration) *TemplateCascadingControlConfiguration {
		return &v
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateCascadingControlConfigurationOutput) SourceControls() TemplateCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v TemplateCascadingControlConfiguration) []TemplateCascadingControlSource {
		return v.SourceControls
	}).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (o TemplateCascadingControlConfigurationPtrOutput) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return o
}

func (o TemplateCascadingControlConfigurationPtrOutput) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return o
}

func (o TemplateCascadingControlConfigurationPtrOutput) Elem() TemplateCascadingControlConfigurationOutput {
	return o.ApplyT(func(v *TemplateCascadingControlConfiguration) TemplateCascadingControlConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCascadingControlConfiguration
		return ret
	}).(TemplateCascadingControlConfigurationOutput)
}

func (o TemplateCascadingControlConfigurationPtrOutput) SourceControls() TemplateCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v *TemplateCascadingControlConfiguration) []TemplateCascadingControlSource {
		if v == nil {
			return nil
		}
		return v.SourceControls
	}).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlSource struct {
	ColumnToMatch        *TemplateColumnIdentifier `pulumi:"columnToMatch"`
	SourceSheetControlId *string                   `pulumi:"sourceSheetControlId"`
}

// TemplateCascadingControlSourceInput is an input type that accepts TemplateCascadingControlSourceArgs and TemplateCascadingControlSourceOutput values.
// You can construct a concrete instance of `TemplateCascadingControlSourceInput` via:
//
//	TemplateCascadingControlSourceArgs{...}
type TemplateCascadingControlSourceInput interface {
	pulumi.Input

	ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput
	ToTemplateCascadingControlSourceOutputWithContext(context.Context) TemplateCascadingControlSourceOutput
}

type TemplateCascadingControlSourceArgs struct {
	ColumnToMatch        TemplateColumnIdentifierPtrInput `pulumi:"columnToMatch"`
	SourceSheetControlId pulumi.StringPtrInput            `pulumi:"sourceSheetControlId"`
}

func (TemplateCascadingControlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlSource)(nil)).Elem()
}

func (i TemplateCascadingControlSourceArgs) ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput {
	return i.ToTemplateCascadingControlSourceOutputWithContext(context.Background())
}

func (i TemplateCascadingControlSourceArgs) ToTemplateCascadingControlSourceOutputWithContext(ctx context.Context) TemplateCascadingControlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlSourceOutput)
}

// TemplateCascadingControlSourceArrayInput is an input type that accepts TemplateCascadingControlSourceArray and TemplateCascadingControlSourceArrayOutput values.
// You can construct a concrete instance of `TemplateCascadingControlSourceArrayInput` via:
//
//	TemplateCascadingControlSourceArray{ TemplateCascadingControlSourceArgs{...} }
type TemplateCascadingControlSourceArrayInput interface {
	pulumi.Input

	ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput
	ToTemplateCascadingControlSourceArrayOutputWithContext(context.Context) TemplateCascadingControlSourceArrayOutput
}

type TemplateCascadingControlSourceArray []TemplateCascadingControlSourceInput

func (TemplateCascadingControlSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCascadingControlSource)(nil)).Elem()
}

func (i TemplateCascadingControlSourceArray) ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput {
	return i.ToTemplateCascadingControlSourceArrayOutputWithContext(context.Background())
}

func (i TemplateCascadingControlSourceArray) ToTemplateCascadingControlSourceArrayOutputWithContext(ctx context.Context) TemplateCascadingControlSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlSourceOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlSource)(nil)).Elem()
}

func (o TemplateCascadingControlSourceOutput) ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput {
	return o
}

func (o TemplateCascadingControlSourceOutput) ToTemplateCascadingControlSourceOutputWithContext(ctx context.Context) TemplateCascadingControlSourceOutput {
	return o
}

func (o TemplateCascadingControlSourceOutput) ColumnToMatch() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateCascadingControlSource) *TemplateColumnIdentifier { return v.ColumnToMatch }).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCascadingControlSourceOutput) SourceSheetControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCascadingControlSource) *string { return v.SourceSheetControlId }).(pulumi.StringPtrOutput)
}

type TemplateCascadingControlSourceArrayOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCascadingControlSource)(nil)).Elem()
}

func (o TemplateCascadingControlSourceArrayOutput) ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput {
	return o
}

func (o TemplateCascadingControlSourceArrayOutput) ToTemplateCascadingControlSourceArrayOutputWithContext(ctx context.Context) TemplateCascadingControlSourceArrayOutput {
	return o
}

func (o TemplateCascadingControlSourceArrayOutput) Index(i pulumi.IntInput) TemplateCascadingControlSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateCascadingControlSource {
		return vs[0].([]TemplateCascadingControlSource)[vs[1].(int)]
	}).(TemplateCascadingControlSourceOutput)
}

type TemplateCategoricalDimensionField struct {
	Column              TemplateColumnIdentifier           `pulumi:"column"`
	FieldId             string                             `pulumi:"fieldId"`
	FormatConfiguration *TemplateStringFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                            `pulumi:"hierarchyId"`
}

// TemplateCategoricalDimensionFieldInput is an input type that accepts TemplateCategoricalDimensionFieldArgs and TemplateCategoricalDimensionFieldOutput values.
// You can construct a concrete instance of `TemplateCategoricalDimensionFieldInput` via:
//
//	TemplateCategoricalDimensionFieldArgs{...}
type TemplateCategoricalDimensionFieldInput interface {
	pulumi.Input

	ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput
	ToTemplateCategoricalDimensionFieldOutputWithContext(context.Context) TemplateCategoricalDimensionFieldOutput
}

type TemplateCategoricalDimensionFieldArgs struct {
	Column              TemplateColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                        `pulumi:"fieldId"`
	FormatConfiguration TemplateStringFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                     `pulumi:"hierarchyId"`
}

func (TemplateCategoricalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalDimensionField)(nil)).Elem()
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput {
	return i.ToTemplateCategoricalDimensionFieldOutputWithContext(context.Background())
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldOutput)
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return i.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldOutput).ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx)
}

// TemplateCategoricalDimensionFieldPtrInput is an input type that accepts TemplateCategoricalDimensionFieldArgs, TemplateCategoricalDimensionFieldPtr and TemplateCategoricalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCategoricalDimensionFieldPtrInput` via:
//
//	        TemplateCategoricalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoricalDimensionFieldPtrInput interface {
	pulumi.Input

	ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput
	ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Context) TemplateCategoricalDimensionFieldPtrOutput
}

type templateCategoricalDimensionFieldPtrType TemplateCategoricalDimensionFieldArgs

func TemplateCategoricalDimensionFieldPtr(v *TemplateCategoricalDimensionFieldArgs) TemplateCategoricalDimensionFieldPtrInput {
	return (*templateCategoricalDimensionFieldPtrType)(v)
}

func (*templateCategoricalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalDimensionField)(nil)).Elem()
}

func (i *templateCategoricalDimensionFieldPtrType) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return i.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *templateCategoricalDimensionFieldPtrType) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldPtrOutput)
}

type TemplateCategoricalDimensionFieldOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalDimensionField)(nil)).Elem()
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return o.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoricalDimensionField) *TemplateCategoricalDimensionField {
		return &v
	}).(TemplateCategoricalDimensionFieldPtrOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) *TemplateStringFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type TemplateCategoricalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalDimensionField)(nil)).Elem()
}

func (o TemplateCategoricalDimensionFieldPtrOutput) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldPtrOutput) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldPtrOutput) Elem() TemplateCategoricalDimensionFieldOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) TemplateCategoricalDimensionField {
		if v != nil {
			return *v
		}
		var ret TemplateCategoricalDimensionField
		return ret
	}).(TemplateCategoricalDimensionFieldOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *TemplateStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoricalMeasureField struct {
	AggregationFunction *TemplateCategoricalAggregationFunction `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier                `pulumi:"column"`
	FieldId             string                                  `pulumi:"fieldId"`
	FormatConfiguration *TemplateStringFormatConfiguration      `pulumi:"formatConfiguration"`
}

// TemplateCategoricalMeasureFieldInput is an input type that accepts TemplateCategoricalMeasureFieldArgs and TemplateCategoricalMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateCategoricalMeasureFieldInput` via:
//
//	TemplateCategoricalMeasureFieldArgs{...}
type TemplateCategoricalMeasureFieldInput interface {
	pulumi.Input

	ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput
	ToTemplateCategoricalMeasureFieldOutputWithContext(context.Context) TemplateCategoricalMeasureFieldOutput
}

type TemplateCategoricalMeasureFieldArgs struct {
	AggregationFunction TemplateCategoricalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput                  `pulumi:"column"`
	FieldId             pulumi.StringInput                             `pulumi:"fieldId"`
	FormatConfiguration TemplateStringFormatConfigurationPtrInput      `pulumi:"formatConfiguration"`
}

func (TemplateCategoricalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalMeasureField)(nil)).Elem()
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput {
	return i.ToTemplateCategoricalMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldOutput)
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return i.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldOutput).ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateCategoricalMeasureFieldPtrInput is an input type that accepts TemplateCategoricalMeasureFieldArgs, TemplateCategoricalMeasureFieldPtr and TemplateCategoricalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCategoricalMeasureFieldPtrInput` via:
//
//	        TemplateCategoricalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoricalMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput
	ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Context) TemplateCategoricalMeasureFieldPtrOutput
}

type templateCategoricalMeasureFieldPtrType TemplateCategoricalMeasureFieldArgs

func TemplateCategoricalMeasureFieldPtr(v *TemplateCategoricalMeasureFieldArgs) TemplateCategoricalMeasureFieldPtrInput {
	return (*templateCategoricalMeasureFieldPtrType)(v)
}

func (*templateCategoricalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalMeasureField)(nil)).Elem()
}

func (i *templateCategoricalMeasureFieldPtrType) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return i.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateCategoricalMeasureFieldPtrType) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldPtrOutput)
}

type TemplateCategoricalMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalMeasureField)(nil)).Elem()
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return o.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoricalMeasureField) *TemplateCategoricalMeasureField {
		return &v
	}).(TemplateCategoricalMeasureFieldPtrOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) AggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) *TemplateCategoricalAggregationFunction {
		return v.AggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) *TemplateStringFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateCategoricalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalMeasureField)(nil)).Elem()
}

func (o TemplateCategoricalMeasureFieldPtrOutput) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldPtrOutput) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldPtrOutput) Elem() TemplateCategoricalMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) TemplateCategoricalMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateCategoricalMeasureField
		return ret
	}).(TemplateCategoricalMeasureFieldOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) AggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateCategoryDrillDownFilter struct {
	CategoryValues []string                 `pulumi:"categoryValues"`
	Column         TemplateColumnIdentifier `pulumi:"column"`
}

// TemplateCategoryDrillDownFilterInput is an input type that accepts TemplateCategoryDrillDownFilterArgs and TemplateCategoryDrillDownFilterOutput values.
// You can construct a concrete instance of `TemplateCategoryDrillDownFilterInput` via:
//
//	TemplateCategoryDrillDownFilterArgs{...}
type TemplateCategoryDrillDownFilterInput interface {
	pulumi.Input

	ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput
	ToTemplateCategoryDrillDownFilterOutputWithContext(context.Context) TemplateCategoryDrillDownFilterOutput
}

type TemplateCategoryDrillDownFilterArgs struct {
	CategoryValues pulumi.StringArrayInput       `pulumi:"categoryValues"`
	Column         TemplateColumnIdentifierInput `pulumi:"column"`
}

func (TemplateCategoryDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput {
	return i.ToTemplateCategoryDrillDownFilterOutputWithContext(context.Background())
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterOutput)
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return i.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterOutput).ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx)
}

// TemplateCategoryDrillDownFilterPtrInput is an input type that accepts TemplateCategoryDrillDownFilterArgs, TemplateCategoryDrillDownFilterPtr and TemplateCategoryDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `TemplateCategoryDrillDownFilterPtrInput` via:
//
//	        TemplateCategoryDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoryDrillDownFilterPtrInput interface {
	pulumi.Input

	ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput
	ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Context) TemplateCategoryDrillDownFilterPtrOutput
}

type templateCategoryDrillDownFilterPtrType TemplateCategoryDrillDownFilterArgs

func TemplateCategoryDrillDownFilterPtr(v *TemplateCategoryDrillDownFilterArgs) TemplateCategoryDrillDownFilterPtrInput {
	return (*templateCategoryDrillDownFilterPtrType)(v)
}

func (*templateCategoryDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (i *templateCategoryDrillDownFilterPtrType) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return i.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *templateCategoryDrillDownFilterPtrType) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterPtrOutput)
}

type TemplateCategoryDrillDownFilterOutput struct{ *pulumi.OutputState }

func (TemplateCategoryDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return o.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryDrillDownFilter) *TemplateCategoryDrillDownFilter {
		return &v
	}).(TemplateCategoryDrillDownFilterPtrOutput)
}

func (o TemplateCategoryDrillDownFilterOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateCategoryDrillDownFilter) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o TemplateCategoryDrillDownFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoryDrillDownFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

type TemplateCategoryDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (o TemplateCategoryDrillDownFilterPtrOutput) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterPtrOutput) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterPtrOutput) Elem() TemplateCategoryDrillDownFilterOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) TemplateCategoryDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryDrillDownFilter
		return ret
	}).(TemplateCategoryDrillDownFilterOutput)
}

func (o TemplateCategoryDrillDownFilterPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o TemplateCategoryDrillDownFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

type TemplateCategoryFilter struct {
	Column        TemplateColumnIdentifier            `pulumi:"column"`
	Configuration TemplateCategoryFilterConfiguration `pulumi:"configuration"`
	FilterId      string                              `pulumi:"filterId"`
}

// TemplateCategoryFilterInput is an input type that accepts TemplateCategoryFilterArgs and TemplateCategoryFilterOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterInput` via:
//
//	TemplateCategoryFilterArgs{...}
type TemplateCategoryFilterInput interface {
	pulumi.Input

	ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput
	ToTemplateCategoryFilterOutputWithContext(context.Context) TemplateCategoryFilterOutput
}

type TemplateCategoryFilterArgs struct {
	Column        TemplateColumnIdentifierInput            `pulumi:"column"`
	Configuration TemplateCategoryFilterConfigurationInput `pulumi:"configuration"`
	FilterId      pulumi.StringInput                       `pulumi:"filterId"`
}

func (TemplateCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilter)(nil)).Elem()
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput {
	return i.ToTemplateCategoryFilterOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterOutputWithContext(ctx context.Context) TemplateCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterOutput)
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return i.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterOutput).ToTemplateCategoryFilterPtrOutputWithContext(ctx)
}

// TemplateCategoryFilterPtrInput is an input type that accepts TemplateCategoryFilterArgs, TemplateCategoryFilterPtr and TemplateCategoryFilterPtrOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterPtrInput` via:
//
//	        TemplateCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoryFilterPtrInput interface {
	pulumi.Input

	ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput
	ToTemplateCategoryFilterPtrOutputWithContext(context.Context) TemplateCategoryFilterPtrOutput
}

type templateCategoryFilterPtrType TemplateCategoryFilterArgs

func TemplateCategoryFilterPtr(v *TemplateCategoryFilterArgs) TemplateCategoryFilterPtrInput {
	return (*templateCategoryFilterPtrType)(v)
}

func (*templateCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilter)(nil)).Elem()
}

func (i *templateCategoryFilterPtrType) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return i.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *templateCategoryFilterPtrType) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterPtrOutput)
}

type TemplateCategoryFilterOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilter)(nil)).Elem()
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput {
	return o
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterOutputWithContext(ctx context.Context) TemplateCategoryFilterOutput {
	return o
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return o.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryFilter) *TemplateCategoryFilter {
		return &v
	}).(TemplateCategoryFilterPtrOutput)
}

func (o TemplateCategoryFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoryFilterOutput) Configuration() TemplateCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) TemplateCategoryFilterConfiguration { return v.Configuration }).(TemplateCategoryFilterConfigurationOutput)
}

func (o TemplateCategoryFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

type TemplateCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilter)(nil)).Elem()
}

func (o TemplateCategoryFilterPtrOutput) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return o
}

func (o TemplateCategoryFilterPtrOutput) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return o
}

func (o TemplateCategoryFilterPtrOutput) Elem() TemplateCategoryFilterOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) TemplateCategoryFilter {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryFilter
		return ret
	}).(TemplateCategoryFilterOutput)
}

func (o TemplateCategoryFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoryFilterPtrOutput) Configuration() TemplateCategoryFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *TemplateCategoryFilterConfiguration {
		if v == nil {
			return nil
		}
		return &v.Configuration
	}).(TemplateCategoryFilterConfigurationPtrOutput)
}

func (o TemplateCategoryFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorScaleInput)(nil)).Elem(), DashboardColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorScalePtrInput)(nil)).Elem(), DashboardColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorsConfigurationInput)(nil)).Elem(), DashboardColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColorsConfigurationPtrInput)(nil)).Elem(), DashboardColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnConfigurationInput)(nil)).Elem(), DashboardColumnConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnConfigurationArrayInput)(nil)).Elem(), DashboardColumnConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnHierarchyInput)(nil)).Elem(), DashboardColumnHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnHierarchyArrayInput)(nil)).Elem(), DashboardColumnHierarchyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnIdentifierInput)(nil)).Elem(), DashboardColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnIdentifierPtrInput)(nil)).Elem(), DashboardColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnIdentifierArrayInput)(nil)).Elem(), DashboardColumnIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnSortInput)(nil)).Elem(), DashboardColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnSortPtrInput)(nil)).Elem(), DashboardColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnTooltipItemInput)(nil)).Elem(), DashboardColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColumnTooltipItemPtrInput)(nil)).Elem(), DashboardColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartConfigurationInput)(nil)).Elem(), DashboardComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartConfigurationPtrInput)(nil)).Elem(), DashboardComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartFieldWellsInput)(nil)).Elem(), DashboardComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartFieldWellsPtrInput)(nil)).Elem(), DashboardComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartSortConfigurationInput)(nil)).Elem(), DashboardComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartSortConfigurationPtrInput)(nil)).Elem(), DashboardComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartVisualInput)(nil)).Elem(), DashboardComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComboChartVisualPtrInput)(nil)).Elem(), DashboardComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonConfigurationInput)(nil)).Elem(), DashboardComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonConfigurationPtrInput)(nil)).Elem(), DashboardComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonFormatConfigurationInput)(nil)).Elem(), DashboardComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComparisonFormatConfigurationPtrInput)(nil)).Elem(), DashboardComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComputationInput)(nil)).Elem(), DashboardComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardComputationArrayInput)(nil)).Elem(), DashboardComputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingColorInput)(nil)).Elem(), DashboardConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingColorPtrInput)(nil)).Elem(), DashboardConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingCustomIconConditionInput)(nil)).Elem(), DashboardConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingCustomIconConditionPtrInput)(nil)).Elem(), DashboardConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingCustomIconOptionsInput)(nil)).Elem(), DashboardConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingCustomIconOptionsPtrInput)(nil)).Elem(), DashboardConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingGradientColorInput)(nil)).Elem(), DashboardConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingGradientColorPtrInput)(nil)).Elem(), DashboardConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconInput)(nil)).Elem(), DashboardConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconPtrInput)(nil)).Elem(), DashboardConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconDisplayConfigurationInput)(nil)).Elem(), DashboardConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconDisplayConfigurationPtrInput)(nil)).Elem(), DashboardConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconSetInput)(nil)).Elem(), DashboardConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingIconSetPtrInput)(nil)).Elem(), DashboardConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingSolidColorInput)(nil)).Elem(), DashboardConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardConditionalFormattingSolidColorPtrInput)(nil)).Elem(), DashboardConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardContributionAnalysisDefaultInput)(nil)).Elem(), DashboardContributionAnalysisDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardContributionAnalysisDefaultArrayInput)(nil)).Elem(), DashboardContributionAnalysisDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCurrencyDisplayFormatConfigurationInput)(nil)).Elem(), DashboardCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCurrencyDisplayFormatConfigurationPtrInput)(nil)).Elem(), DashboardCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionFilterOperationInput)(nil)).Elem(), DashboardCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionFilterOperationPtrInput)(nil)).Elem(), DashboardCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionNavigationOperationInput)(nil)).Elem(), DashboardCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionNavigationOperationPtrInput)(nil)).Elem(), DashboardCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionSetParametersOperationInput)(nil)).Elem(), DashboardCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionSetParametersOperationPtrInput)(nil)).Elem(), DashboardCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionURLOperationInput)(nil)).Elem(), DashboardCustomActionURLOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomActionURLOperationPtrInput)(nil)).Elem(), DashboardCustomActionURLOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomColorInput)(nil)).Elem(), DashboardCustomColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomColorArrayInput)(nil)).Elem(), DashboardCustomColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentConfigurationInput)(nil)).Elem(), DashboardCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentConfigurationPtrInput)(nil)).Elem(), DashboardCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentVisualInput)(nil)).Elem(), DashboardCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomContentVisualPtrInput)(nil)).Elem(), DashboardCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomFilterConfigurationInput)(nil)).Elem(), DashboardCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomFilterConfigurationPtrInput)(nil)).Elem(), DashboardCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomFilterListConfigurationInput)(nil)).Elem(), DashboardCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomFilterListConfigurationPtrInput)(nil)).Elem(), DashboardCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomNarrativeOptionsInput)(nil)).Elem(), DashboardCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomNarrativeOptionsPtrInput)(nil)).Elem(), DashboardCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomParameterValuesInput)(nil)).Elem(), DashboardCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomParameterValuesPtrInput)(nil)).Elem(), DashboardCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomValuesConfigurationInput)(nil)).Elem(), DashboardCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardCustomValuesConfigurationPtrInput)(nil)).Elem(), DashboardCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataBarsOptionsInput)(nil)).Elem(), DashboardDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataBarsOptionsPtrInput)(nil)).Elem(), DashboardDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataColorInput)(nil)).Elem(), DashboardDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataColorPtrInput)(nil)).Elem(), DashboardDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataColorArrayInput)(nil)).Elem(), DashboardDataColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataFieldSeriesItemInput)(nil)).Elem(), DashboardDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataFieldSeriesItemPtrInput)(nil)).Elem(), DashboardDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelOptionsInput)(nil)).Elem(), DashboardDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelOptionsPtrInput)(nil)).Elem(), DashboardDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelTypeInput)(nil)).Elem(), DashboardDataLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataLabelTypeArrayInput)(nil)).Elem(), DashboardDataLabelTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathColorInput)(nil)).Elem(), DashboardDataPathColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathColorArrayInput)(nil)).Elem(), DashboardDataPathColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathLabelTypeInput)(nil)).Elem(), DashboardDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathLabelTypePtrInput)(nil)).Elem(), DashboardDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathSortInput)(nil)).Elem(), DashboardDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathSortPtrInput)(nil)).Elem(), DashboardDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathValueInput)(nil)).Elem(), DashboardDataPathValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPathValueArrayInput)(nil)).Elem(), DashboardDataPathValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointDrillUpDownOptionInput)(nil)).Elem(), DashboardDataPointDrillUpDownOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointDrillUpDownOptionPtrInput)(nil)).Elem(), DashboardDataPointDrillUpDownOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointMenuLabelOptionInput)(nil)).Elem(), DashboardDataPointMenuLabelOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointMenuLabelOptionPtrInput)(nil)).Elem(), DashboardDataPointMenuLabelOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointTooltipOptionInput)(nil)).Elem(), DashboardDataPointTooltipOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataPointTooltipOptionPtrInput)(nil)).Elem(), DashboardDataPointTooltipOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataSetIdentifierDeclarationInput)(nil)).Elem(), DashboardDataSetIdentifierDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataSetIdentifierDeclarationArrayInput)(nil)).Elem(), DashboardDataSetIdentifierDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataSetReferenceInput)(nil)).Elem(), DashboardDataSetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDataSetReferenceArrayInput)(nil)).Elem(), DashboardDataSetReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateAxisOptionsInput)(nil)).Elem(), DashboardDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateAxisOptionsPtrInput)(nil)).Elem(), DashboardDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateDimensionFieldInput)(nil)).Elem(), DashboardDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateDimensionFieldPtrInput)(nil)).Elem(), DashboardDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateMeasureFieldInput)(nil)).Elem(), DashboardDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateMeasureFieldPtrInput)(nil)).Elem(), DashboardDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeDefaultValuesInput)(nil)).Elem(), DashboardDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeDefaultValuesPtrInput)(nil)).Elem(), DashboardDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeFormatConfigurationInput)(nil)).Elem(), DashboardDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeFormatConfigurationPtrInput)(nil)).Elem(), DashboardDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeHierarchyInput)(nil)).Elem(), DashboardDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeHierarchyPtrInput)(nil)).Elem(), DashboardDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeParameterInput)(nil)).Elem(), DashboardDateTimeParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeParameterArrayInput)(nil)).Elem(), DashboardDateTimeParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeParameterDeclarationInput)(nil)).Elem(), DashboardDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeParameterDeclarationPtrInput)(nil)).Elem(), DashboardDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimePickerControlDisplayOptionsInput)(nil)).Elem(), DashboardDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimePickerControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeValueWhenUnsetConfigurationInput)(nil)).Elem(), DashboardDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDateTimeValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), DashboardDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalDefaultValuesInput)(nil)).Elem(), DashboardDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalDefaultValuesPtrInput)(nil)).Elem(), DashboardDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalParameterInput)(nil)).Elem(), DashboardDecimalParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalParameterArrayInput)(nil)).Elem(), DashboardDecimalParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalParameterDeclarationInput)(nil)).Elem(), DashboardDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalParameterDeclarationPtrInput)(nil)).Elem(), DashboardDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalPlacesConfigurationInput)(nil)).Elem(), DashboardDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalPlacesConfigurationPtrInput)(nil)).Elem(), DashboardDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalValueWhenUnsetConfigurationInput)(nil)).Elem(), DashboardDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDecimalValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), DashboardDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultFreeFormLayoutConfigurationInput)(nil)).Elem(), DashboardDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), DashboardDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultGridLayoutConfigurationInput)(nil)).Elem(), DashboardDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultGridLayoutConfigurationPtrInput)(nil)).Elem(), DashboardDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultInteractiveLayoutConfigurationInput)(nil)).Elem(), DashboardDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultInteractiveLayoutConfigurationPtrInput)(nil)).Elem(), DashboardDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultNewSheetConfigurationInput)(nil)).Elem(), DashboardDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultNewSheetConfigurationPtrInput)(nil)).Elem(), DashboardDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultPaginatedLayoutConfigurationInput)(nil)).Elem(), DashboardDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultPaginatedLayoutConfigurationPtrInput)(nil)).Elem(), DashboardDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultSectionBasedLayoutConfigurationInput)(nil)).Elem(), DashboardDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDefaultSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), DashboardDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDestinationParameterValueConfigurationInput)(nil)).Elem(), DashboardDestinationParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDimensionFieldInput)(nil)).Elem(), DashboardDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDimensionFieldPtrInput)(nil)).Elem(), DashboardDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDimensionFieldArrayInput)(nil)).Elem(), DashboardDimensionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDonutCenterOptionsInput)(nil)).Elem(), DashboardDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDonutCenterOptionsPtrInput)(nil)).Elem(), DashboardDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDonutOptionsInput)(nil)).Elem(), DashboardDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDonutOptionsPtrInput)(nil)).Elem(), DashboardDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDrillDownFilterInput)(nil)).Elem(), DashboardDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDrillDownFilterArrayInput)(nil)).Elem(), DashboardDrillDownFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDropDownControlDisplayOptionsInput)(nil)).Elem(), DashboardDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDropDownControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDynamicDefaultValueInput)(nil)).Elem(), DashboardDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardDynamicDefaultValuePtrInput)(nil)).Elem(), DashboardDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardEmptyVisualInput)(nil)).Elem(), DashboardEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardEmptyVisualPtrInput)(nil)).Elem(), DashboardEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExcludePeriodConfigurationInput)(nil)).Elem(), DashboardExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExcludePeriodConfigurationPtrInput)(nil)).Elem(), DashboardExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExplicitHierarchyInput)(nil)).Elem(), DashboardExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExplicitHierarchyPtrInput)(nil)).Elem(), DashboardExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportHiddenFieldsOptionInput)(nil)).Elem(), DashboardExportHiddenFieldsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportHiddenFieldsOptionPtrInput)(nil)).Elem(), DashboardExportHiddenFieldsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportToCSVOptionInput)(nil)).Elem(), DashboardExportToCSVOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportToCSVOptionPtrInput)(nil)).Elem(), DashboardExportToCSVOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportWithHiddenFieldsOptionInput)(nil)).Elem(), DashboardExportWithHiddenFieldsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardExportWithHiddenFieldsOptionPtrInput)(nil)).Elem(), DashboardExportWithHiddenFieldsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldBasedTooltipInput)(nil)).Elem(), DashboardFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldBasedTooltipPtrInput)(nil)).Elem(), DashboardFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldLabelTypeInput)(nil)).Elem(), DashboardFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldLabelTypePtrInput)(nil)).Elem(), DashboardFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSeriesItemInput)(nil)).Elem(), DashboardFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSeriesItemPtrInput)(nil)).Elem(), DashboardFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSortInput)(nil)).Elem(), DashboardFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSortPtrInput)(nil)).Elem(), DashboardFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSortOptionsInput)(nil)).Elem(), DashboardFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldSortOptionsArrayInput)(nil)).Elem(), DashboardFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldTooltipItemInput)(nil)).Elem(), DashboardFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFieldTooltipItemPtrInput)(nil)).Elem(), DashboardFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapAggregatedFieldWellsInput)(nil)).Elem(), DashboardFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConditionalFormattingInput)(nil)).Elem(), DashboardFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConditionalFormattingPtrInput)(nil)).Elem(), DashboardFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConditionalFormattingOptionInput)(nil)).Elem(), DashboardFilledMapConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConditionalFormattingOptionArrayInput)(nil)).Elem(), DashboardFilledMapConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConfigurationInput)(nil)).Elem(), DashboardFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapConfigurationPtrInput)(nil)).Elem(), DashboardFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapFieldWellsInput)(nil)).Elem(), DashboardFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapFieldWellsPtrInput)(nil)).Elem(), DashboardFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapShapeConditionalFormattingInput)(nil)).Elem(), DashboardFilledMapShapeConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapSortConfigurationInput)(nil)).Elem(), DashboardFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapSortConfigurationPtrInput)(nil)).Elem(), DashboardFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapVisualInput)(nil)).Elem(), DashboardFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilledMapVisualPtrInput)(nil)).Elem(), DashboardFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterInput)(nil)).Elem(), DashboardFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterArrayInput)(nil)).Elem(), DashboardFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterControlInput)(nil)).Elem(), DashboardFilterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterControlArrayInput)(nil)).Elem(), DashboardFilterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterDateTimePickerControlInput)(nil)).Elem(), DashboardFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterDateTimePickerControlPtrInput)(nil)).Elem(), DashboardFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterDropDownControlInput)(nil)).Elem(), DashboardFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterDropDownControlPtrInput)(nil)).Elem(), DashboardFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterGroupInput)(nil)).Elem(), DashboardFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterGroupArrayInput)(nil)).Elem(), DashboardFilterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterListConfigurationInput)(nil)).Elem(), DashboardFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterListConfigurationPtrInput)(nil)).Elem(), DashboardFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterListControlInput)(nil)).Elem(), DashboardFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterListControlPtrInput)(nil)).Elem(), DashboardFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterOperationSelectedFieldsConfigurationInput)(nil)).Elem(), DashboardFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterOperationSelectedFieldsConfigurationPtrInput)(nil)).Elem(), DashboardFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterOperationTargetVisualsConfigurationInput)(nil)).Elem(), DashboardFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterOperationTargetVisualsConfigurationPtrInput)(nil)).Elem(), DashboardFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterRelativeDateTimeControlInput)(nil)).Elem(), DashboardFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterRelativeDateTimeControlPtrInput)(nil)).Elem(), DashboardFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterScopeConfigurationInput)(nil)).Elem(), DashboardFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterSelectableValuesInput)(nil)).Elem(), DashboardFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterSelectableValuesPtrInput)(nil)).Elem(), DashboardFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterSliderControlInput)(nil)).Elem(), DashboardFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterSliderControlPtrInput)(nil)).Elem(), DashboardFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterTextAreaControlInput)(nil)).Elem(), DashboardFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterTextAreaControlPtrInput)(nil)).Elem(), DashboardFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterTextFieldControlInput)(nil)).Elem(), DashboardFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFilterTextFieldControlPtrInput)(nil)).Elem(), DashboardFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontConfigurationInput)(nil)).Elem(), DashboardFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontConfigurationPtrInput)(nil)).Elem(), DashboardFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontSizeInput)(nil)).Elem(), DashboardFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontSizePtrInput)(nil)).Elem(), DashboardFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontWeightInput)(nil)).Elem(), DashboardFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFontWeightPtrInput)(nil)).Elem(), DashboardFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastComputationInput)(nil)).Elem(), DashboardForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastComputationPtrInput)(nil)).Elem(), DashboardForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastConfigurationInput)(nil)).Elem(), DashboardForecastConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastConfigurationArrayInput)(nil)).Elem(), DashboardForecastConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastScenarioInput)(nil)).Elem(), DashboardForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardForecastScenarioPtrInput)(nil)).Elem(), DashboardForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFormatConfigurationInput)(nil)).Elem(), DashboardFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFormatConfigurationPtrInput)(nil)).Elem(), DashboardFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutCanvasSizeOptionsInput)(nil)).Elem(), DashboardFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutConfigurationInput)(nil)).Elem(), DashboardFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), DashboardFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementInput)(nil)).Elem(), DashboardFreeFormLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementArrayInput)(nil)).Elem(), DashboardFreeFormLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementBackgroundStyleInput)(nil)).Elem(), DashboardFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementBackgroundStylePtrInput)(nil)).Elem(), DashboardFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementBorderStyleInput)(nil)).Elem(), DashboardFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutElementBorderStylePtrInput)(nil)).Elem(), DashboardFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormSectionLayoutConfigurationInput)(nil)).Elem(), DashboardFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFreeFormSectionLayoutConfigurationPtrInput)(nil)).Elem(), DashboardFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartConfigurationInput)(nil)).Elem(), DashboardFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartConfigurationPtrInput)(nil)).Elem(), DashboardFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartDataLabelOptionsInput)(nil)).Elem(), DashboardFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartDataLabelOptionsPtrInput)(nil)).Elem(), DashboardFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartFieldWellsInput)(nil)).Elem(), DashboardFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartFieldWellsPtrInput)(nil)).Elem(), DashboardFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartSortConfigurationInput)(nil)).Elem(), DashboardFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartSortConfigurationPtrInput)(nil)).Elem(), DashboardFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartVisualInput)(nil)).Elem(), DashboardFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardFunnelChartVisualPtrInput)(nil)).Elem(), DashboardFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartArcConditionalFormattingInput)(nil)).Elem(), DashboardGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartArcConditionalFormattingPtrInput)(nil)).Elem(), DashboardGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConditionalFormattingInput)(nil)).Elem(), DashboardGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConditionalFormattingPtrInput)(nil)).Elem(), DashboardGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConditionalFormattingOptionInput)(nil)).Elem(), DashboardGaugeChartConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConditionalFormattingOptionArrayInput)(nil)).Elem(), DashboardGaugeChartConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConfigurationInput)(nil)).Elem(), DashboardGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartConfigurationPtrInput)(nil)).Elem(), DashboardGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartFieldWellsInput)(nil)).Elem(), DashboardGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartFieldWellsPtrInput)(nil)).Elem(), DashboardGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartOptionsInput)(nil)).Elem(), DashboardGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartOptionsPtrInput)(nil)).Elem(), DashboardGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartPrimaryValueConditionalFormattingInput)(nil)).Elem(), DashboardGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), DashboardGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartVisualInput)(nil)).Elem(), DashboardGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGaugeChartVisualPtrInput)(nil)).Elem(), DashboardGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialCoordinateBoundsInput)(nil)).Elem(), DashboardGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialCoordinateBoundsPtrInput)(nil)).Elem(), DashboardGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapAggregatedFieldWellsInput)(nil)).Elem(), DashboardGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapConfigurationInput)(nil)).Elem(), DashboardGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapConfigurationPtrInput)(nil)).Elem(), DashboardGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapFieldWellsInput)(nil)).Elem(), DashboardGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapFieldWellsPtrInput)(nil)).Elem(), DashboardGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapStyleOptionsInput)(nil)).Elem(), DashboardGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapStyleOptionsPtrInput)(nil)).Elem(), DashboardGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapVisualInput)(nil)).Elem(), DashboardGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialMapVisualPtrInput)(nil)).Elem(), DashboardGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialPointStyleOptionsInput)(nil)).Elem(), DashboardGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialPointStyleOptionsPtrInput)(nil)).Elem(), DashboardGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialWindowOptionsInput)(nil)).Elem(), DashboardGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGeospatialWindowOptionsPtrInput)(nil)).Elem(), DashboardGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGlobalTableBorderOptionsInput)(nil)).Elem(), DashboardGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGlobalTableBorderOptionsPtrInput)(nil)).Elem(), DashboardGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGradientColorInput)(nil)).Elem(), DashboardGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGradientColorPtrInput)(nil)).Elem(), DashboardGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGradientStopInput)(nil)).Elem(), DashboardGradientStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGradientStopArrayInput)(nil)).Elem(), DashboardGradientStopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutCanvasSizeOptionsInput)(nil)).Elem(), DashboardGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutConfigurationInput)(nil)).Elem(), DashboardGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutConfigurationPtrInput)(nil)).Elem(), DashboardGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutElementInput)(nil)).Elem(), DashboardGridLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutElementArrayInput)(nil)).Elem(), DashboardGridLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), DashboardGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGridLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGrowthRateComputationInput)(nil)).Elem(), DashboardGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardGrowthRateComputationPtrInput)(nil)).Elem(), DashboardGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeaderFooterSectionConfigurationInput)(nil)).Elem(), DashboardHeaderFooterSectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeaderFooterSectionConfigurationArrayInput)(nil)).Elem(), DashboardHeaderFooterSectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapAggregatedFieldWellsInput)(nil)).Elem(), DashboardHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapConfigurationInput)(nil)).Elem(), DashboardHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapConfigurationPtrInput)(nil)).Elem(), DashboardHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapFieldWellsInput)(nil)).Elem(), DashboardHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapFieldWellsPtrInput)(nil)).Elem(), DashboardHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapSortConfigurationInput)(nil)).Elem(), DashboardHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapSortConfigurationPtrInput)(nil)).Elem(), DashboardHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapVisualInput)(nil)).Elem(), DashboardHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHeatMapVisualPtrInput)(nil)).Elem(), DashboardHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramAggregatedFieldWellsInput)(nil)).Elem(), DashboardHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramBinOptionsInput)(nil)).Elem(), DashboardHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramBinOptionsPtrInput)(nil)).Elem(), DashboardHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramConfigurationInput)(nil)).Elem(), DashboardHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramConfigurationPtrInput)(nil)).Elem(), DashboardHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramFieldWellsInput)(nil)).Elem(), DashboardHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramFieldWellsPtrInput)(nil)).Elem(), DashboardHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramVisualInput)(nil)).Elem(), DashboardHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardHistogramVisualPtrInput)(nil)).Elem(), DashboardHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInsightConfigurationInput)(nil)).Elem(), DashboardInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInsightConfigurationPtrInput)(nil)).Elem(), DashboardInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInsightVisualInput)(nil)).Elem(), DashboardInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInsightVisualPtrInput)(nil)).Elem(), DashboardInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerDefaultValuesInput)(nil)).Elem(), DashboardIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerDefaultValuesPtrInput)(nil)).Elem(), DashboardIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerParameterInput)(nil)).Elem(), DashboardIntegerParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerParameterArrayInput)(nil)).Elem(), DashboardIntegerParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerParameterDeclarationInput)(nil)).Elem(), DashboardIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerParameterDeclarationPtrInput)(nil)).Elem(), DashboardIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerValueWhenUnsetConfigurationInput)(nil)).Elem(), DashboardIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardIntegerValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), DashboardIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardItemsLimitConfigurationInput)(nil)).Elem(), DashboardItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardItemsLimitConfigurationPtrInput)(nil)).Elem(), DashboardItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConditionalFormattingInput)(nil)).Elem(), DashboardKPIConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConditionalFormattingPtrInput)(nil)).Elem(), DashboardKPIConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConditionalFormattingOptionInput)(nil)).Elem(), DashboardKPIConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConditionalFormattingOptionArrayInput)(nil)).Elem(), DashboardKPIConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConfigurationInput)(nil)).Elem(), DashboardKPIConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIConfigurationPtrInput)(nil)).Elem(), DashboardKPIConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIFieldWellsInput)(nil)).Elem(), DashboardKPIFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIFieldWellsPtrInput)(nil)).Elem(), DashboardKPIFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIOptionsInput)(nil)).Elem(), DashboardKPIOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIOptionsPtrInput)(nil)).Elem(), DashboardKPIOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIPrimaryValueConditionalFormattingInput)(nil)).Elem(), DashboardKPIPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), DashboardKPIPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIProgressBarConditionalFormattingInput)(nil)).Elem(), DashboardKPIProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIProgressBarConditionalFormattingPtrInput)(nil)).Elem(), DashboardKPIProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPISortConfigurationInput)(nil)).Elem(), DashboardKPISortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPISortConfigurationPtrInput)(nil)).Elem(), DashboardKPISortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIVisualInput)(nil)).Elem(), DashboardKPIVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardKPIVisualPtrInput)(nil)).Elem(), DashboardKPIVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLabelOptionsInput)(nil)).Elem(), DashboardLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLabelOptionsPtrInput)(nil)).Elem(), DashboardLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutInput)(nil)).Elem(), DashboardLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutArrayInput)(nil)).Elem(), DashboardLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutConfigurationInput)(nil)).Elem(), DashboardLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLegendOptionsInput)(nil)).Elem(), DashboardLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLegendOptionsPtrInput)(nil)).Elem(), DashboardLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartConfigurationInput)(nil)).Elem(), DashboardLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartConfigurationPtrInput)(nil)).Elem(), DashboardLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartDefaultSeriesSettingsInput)(nil)).Elem(), DashboardLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartDefaultSeriesSettingsPtrInput)(nil)).Elem(), DashboardLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartFieldWellsInput)(nil)).Elem(), DashboardLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartFieldWellsPtrInput)(nil)).Elem(), DashboardLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartLineStyleSettingsInput)(nil)).Elem(), DashboardLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartLineStyleSettingsPtrInput)(nil)).Elem(), DashboardLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartMarkerStyleSettingsInput)(nil)).Elem(), DashboardLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartMarkerStyleSettingsPtrInput)(nil)).Elem(), DashboardLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartSeriesSettingsInput)(nil)).Elem(), DashboardLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartSeriesSettingsPtrInput)(nil)).Elem(), DashboardLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartSortConfigurationInput)(nil)).Elem(), DashboardLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartSortConfigurationPtrInput)(nil)).Elem(), DashboardLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartVisualInput)(nil)).Elem(), DashboardLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineChartVisualPtrInput)(nil)).Elem(), DashboardLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineSeriesAxisDisplayOptionsInput)(nil)).Elem(), DashboardLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLineSeriesAxisDisplayOptionsPtrInput)(nil)).Elem(), DashboardLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlDisplayOptionsInput)(nil)).Elem(), DashboardListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlSearchOptionsInput)(nil)).Elem(), DashboardListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlSearchOptionsPtrInput)(nil)).Elem(), DashboardListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlSelectAllOptionsInput)(nil)).Elem(), DashboardListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardListControlSelectAllOptionsPtrInput)(nil)).Elem(), DashboardListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLoadingAnimationInput)(nil)).Elem(), DashboardLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLoadingAnimationPtrInput)(nil)).Elem(), DashboardLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLocalNavigationConfigurationInput)(nil)).Elem(), DashboardLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLocalNavigationConfigurationPtrInput)(nil)).Elem(), DashboardLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLongFormatTextInput)(nil)).Elem(), DashboardLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLongFormatTextPtrInput)(nil)).Elem(), DashboardLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMappedDataSetParameterInput)(nil)).Elem(), DashboardMappedDataSetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMappedDataSetParameterArrayInput)(nil)).Elem(), DashboardMappedDataSetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumLabelTypeInput)(nil)).Elem(), DashboardMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumLabelTypePtrInput)(nil)).Elem(), DashboardMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumMinimumComputationInput)(nil)).Elem(), DashboardMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMaximumMinimumComputationPtrInput)(nil)).Elem(), DashboardMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMeasureFieldInput)(nil)).Elem(), DashboardMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMeasureFieldPtrInput)(nil)).Elem(), DashboardMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMeasureFieldArrayInput)(nil)).Elem(), DashboardMeasureFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMetricComparisonComputationInput)(nil)).Elem(), DashboardMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMetricComparisonComputationPtrInput)(nil)).Elem(), DashboardMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMinimumLabelTypeInput)(nil)).Elem(), DashboardMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMinimumLabelTypePtrInput)(nil)).Elem(), DashboardMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMissingDataConfigurationInput)(nil)).Elem(), DashboardMissingDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMissingDataConfigurationArrayInput)(nil)).Elem(), DashboardMissingDataConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNegativeValueConfigurationInput)(nil)).Elem(), DashboardNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNegativeValueConfigurationPtrInput)(nil)).Elem(), DashboardNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNullValueFormatConfigurationInput)(nil)).Elem(), DashboardNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNullValueFormatConfigurationPtrInput)(nil)).Elem(), DashboardNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberDisplayFormatConfigurationInput)(nil)).Elem(), DashboardNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberDisplayFormatConfigurationPtrInput)(nil)).Elem(), DashboardNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberFormatConfigurationInput)(nil)).Elem(), DashboardNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumberFormatConfigurationPtrInput)(nil)).Elem(), DashboardNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericAxisOptionsInput)(nil)).Elem(), DashboardNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericAxisOptionsPtrInput)(nil)).Elem(), DashboardNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityDrillDownFilterInput)(nil)).Elem(), DashboardNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityDrillDownFilterPtrInput)(nil)).Elem(), DashboardNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityFilterInput)(nil)).Elem(), DashboardNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericEqualityFilterPtrInput)(nil)).Elem(), DashboardNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericFormatConfigurationInput)(nil)).Elem(), DashboardNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericFormatConfigurationPtrInput)(nil)).Elem(), DashboardNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericRangeFilterInput)(nil)).Elem(), DashboardNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericRangeFilterPtrInput)(nil)).Elem(), DashboardNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericRangeFilterValueInput)(nil)).Elem(), DashboardNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericRangeFilterValuePtrInput)(nil)).Elem(), DashboardNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericSeparatorConfigurationInput)(nil)).Elem(), DashboardNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericSeparatorConfigurationPtrInput)(nil)).Elem(), DashboardNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalAggregationFunctionInput)(nil)).Elem(), DashboardNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalAggregationFunctionPtrInput)(nil)).Elem(), DashboardNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalDimensionFieldInput)(nil)).Elem(), DashboardNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalDimensionFieldPtrInput)(nil)).Elem(), DashboardNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalMeasureFieldInput)(nil)).Elem(), DashboardNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardNumericalMeasureFieldPtrInput)(nil)).Elem(), DashboardNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaginationConfigurationInput)(nil)).Elem(), DashboardPaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPaginationConfigurationPtrInput)(nil)).Elem(), DashboardPaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelConfigurationInput)(nil)).Elem(), DashboardPanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelConfigurationPtrInput)(nil)).Elem(), DashboardPanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelTitleOptionsInput)(nil)).Elem(), DashboardPanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelTitleOptionsPtrInput)(nil)).Elem(), DashboardPanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterControlInput)(nil)).Elem(), DashboardParameterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterControlArrayInput)(nil)).Elem(), DashboardParameterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDateTimePickerControlInput)(nil)).Elem(), DashboardParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDateTimePickerControlPtrInput)(nil)).Elem(), DashboardParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDeclarationInput)(nil)).Elem(), DashboardParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDeclarationArrayInput)(nil)).Elem(), DashboardParameterDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDropDownControlInput)(nil)).Elem(), DashboardParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterDropDownControlPtrInput)(nil)).Elem(), DashboardParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterListControlInput)(nil)).Elem(), DashboardParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterListControlPtrInput)(nil)).Elem(), DashboardParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterSelectableValuesInput)(nil)).Elem(), DashboardParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterSelectableValuesPtrInput)(nil)).Elem(), DashboardParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterSliderControlInput)(nil)).Elem(), DashboardParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterSliderControlPtrInput)(nil)).Elem(), DashboardParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterTextAreaControlInput)(nil)).Elem(), DashboardParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterTextAreaControlPtrInput)(nil)).Elem(), DashboardParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterTextFieldControlInput)(nil)).Elem(), DashboardParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParameterTextFieldControlPtrInput)(nil)).Elem(), DashboardParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParametersInput)(nil)).Elem(), DashboardParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardParametersPtrInput)(nil)).Elem(), DashboardParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentVisibleRangeInput)(nil)).Elem(), DashboardPercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentVisibleRangePtrInput)(nil)).Elem(), DashboardPercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentageDisplayFormatConfigurationInput)(nil)).Elem(), DashboardPercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentageDisplayFormatConfigurationPtrInput)(nil)).Elem(), DashboardPercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentileAggregationInput)(nil)).Elem(), DashboardPercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPercentileAggregationPtrInput)(nil)).Elem(), DashboardPercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPeriodOverPeriodComputationInput)(nil)).Elem(), DashboardPeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPeriodOverPeriodComputationPtrInput)(nil)).Elem(), DashboardPeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPeriodToDateComputationInput)(nil)).Elem(), DashboardPeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPeriodToDateComputationPtrInput)(nil)).Elem(), DashboardPeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardPieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardPieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartConfigurationInput)(nil)).Elem(), DashboardPieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartConfigurationPtrInput)(nil)).Elem(), DashboardPieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartFieldWellsInput)(nil)).Elem(), DashboardPieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartFieldWellsPtrInput)(nil)).Elem(), DashboardPieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartSortConfigurationInput)(nil)).Elem(), DashboardPieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartSortConfigurationPtrInput)(nil)).Elem(), DashboardPieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartVisualInput)(nil)).Elem(), DashboardPieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPieChartVisualPtrInput)(nil)).Elem(), DashboardPieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotFieldSortOptionsInput)(nil)).Elem(), DashboardPivotFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotFieldSortOptionsArrayInput)(nil)).Elem(), DashboardPivotFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableAggregatedFieldWellsInput)(nil)).Elem(), DashboardPivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardPivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableCellConditionalFormattingInput)(nil)).Elem(), DashboardPivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableCellConditionalFormattingPtrInput)(nil)).Elem(), DashboardPivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingPtrInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingOptionInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingOptionArrayInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopeInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConditionalFormattingScopePtrInput)(nil)).Elem(), DashboardPivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConfigurationInput)(nil)).Elem(), DashboardPivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableConfigurationPtrInput)(nil)).Elem(), DashboardPivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableDataPathOptionInput)(nil)).Elem(), DashboardPivotTableDataPathOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableDataPathOptionArrayInput)(nil)).Elem(), DashboardPivotTableDataPathOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldOptionInput)(nil)).Elem(), DashboardPivotTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldOptionArrayInput)(nil)).Elem(), DashboardPivotTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldOptionsInput)(nil)).Elem(), DashboardPivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldOptionsPtrInput)(nil)).Elem(), DashboardPivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldSubtotalOptionsInput)(nil)).Elem(), DashboardPivotTableFieldSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldSubtotalOptionsArrayInput)(nil)).Elem(), DashboardPivotTableFieldSubtotalOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldWellsInput)(nil)).Elem(), DashboardPivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableFieldWellsPtrInput)(nil)).Elem(), DashboardPivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableOptionsInput)(nil)).Elem(), DashboardPivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableOptionsPtrInput)(nil)).Elem(), DashboardPivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTablePaginatedReportOptionsInput)(nil)).Elem(), DashboardPivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTablePaginatedReportOptionsPtrInput)(nil)).Elem(), DashboardPivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableSortByInput)(nil)).Elem(), DashboardPivotTableSortByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableSortConfigurationInput)(nil)).Elem(), DashboardPivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableSortConfigurationPtrInput)(nil)).Elem(), DashboardPivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableTotalOptionsInput)(nil)).Elem(), DashboardPivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableTotalOptionsPtrInput)(nil)).Elem(), DashboardPivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableVisualInput)(nil)).Elem(), DashboardPivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTableVisualPtrInput)(nil)).Elem(), DashboardPivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTotalOptionsInput)(nil)).Elem(), DashboardPivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPivotTotalOptionsPtrInput)(nil)).Elem(), DashboardPivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPredefinedHierarchyInput)(nil)).Elem(), DashboardPredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPredefinedHierarchyPtrInput)(nil)).Elem(), DashboardPredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardProgressBarOptionsInput)(nil)).Elem(), DashboardProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardProgressBarOptionsPtrInput)(nil)).Elem(), DashboardProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPublishOptionsInput)(nil)).Elem(), DashboardPublishOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPublishOptionsPtrInput)(nil)).Elem(), DashboardPublishOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAreaStyleSettingsInput)(nil)).Elem(), DashboardRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartAreaStyleSettingsPtrInput)(nil)).Elem(), DashboardRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartConfigurationInput)(nil)).Elem(), DashboardRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartConfigurationPtrInput)(nil)).Elem(), DashboardRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartFieldWellsInput)(nil)).Elem(), DashboardRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartFieldWellsPtrInput)(nil)).Elem(), DashboardRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartSeriesSettingsInput)(nil)).Elem(), DashboardRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartSeriesSettingsPtrInput)(nil)).Elem(), DashboardRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartSortConfigurationInput)(nil)).Elem(), DashboardRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartSortConfigurationPtrInput)(nil)).Elem(), DashboardRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartVisualInput)(nil)).Elem(), DashboardRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRadarChartVisualPtrInput)(nil)).Elem(), DashboardRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRangeEndsLabelTypeInput)(nil)).Elem(), DashboardRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRangeEndsLabelTypePtrInput)(nil)).Elem(), DashboardRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineInput)(nil)).Elem(), DashboardReferenceLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineArrayInput)(nil)).Elem(), DashboardReferenceLineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineCustomLabelConfigurationInput)(nil)).Elem(), DashboardReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineCustomLabelConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineDataConfigurationInput)(nil)).Elem(), DashboardReferenceLineDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineDynamicDataConfigurationInput)(nil)).Elem(), DashboardReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineDynamicDataConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelConfigurationInput)(nil)).Elem(), DashboardReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineLabelConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineStaticDataConfigurationInput)(nil)).Elem(), DashboardReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineStaticDataConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineStyleConfigurationInput)(nil)).Elem(), DashboardReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineStyleConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineValueLabelConfigurationInput)(nil)).Elem(), DashboardReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardReferenceLineValueLabelConfigurationPtrInput)(nil)).Elem(), DashboardReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDateTimeControlDisplayOptionsInput)(nil)).Elem(), DashboardRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDateTimeControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDatesFilterInput)(nil)).Elem(), DashboardRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRelativeDatesFilterPtrInput)(nil)).Elem(), DashboardRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardResourcePermissionInput)(nil)).Elem(), DashboardResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardResourcePermissionArrayInput)(nil)).Elem(), DashboardResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRollingDateConfigurationInput)(nil)).Elem(), DashboardRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRollingDateConfigurationPtrInput)(nil)).Elem(), DashboardRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRowAlternateColorOptionsInput)(nil)).Elem(), DashboardRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardRowAlternateColorOptionsPtrInput)(nil)).Elem(), DashboardRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSameSheetTargetVisualConfigurationInput)(nil)).Elem(), DashboardSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSameSheetTargetVisualConfigurationPtrInput)(nil)).Elem(), DashboardSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramAggregatedFieldWellsInput)(nil)).Elem(), DashboardSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramChartConfigurationInput)(nil)).Elem(), DashboardSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramChartConfigurationPtrInput)(nil)).Elem(), DashboardSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramFieldWellsInput)(nil)).Elem(), DashboardSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramFieldWellsPtrInput)(nil)).Elem(), DashboardSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramSortConfigurationInput)(nil)).Elem(), DashboardSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramSortConfigurationPtrInput)(nil)).Elem(), DashboardSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramVisualInput)(nil)).Elem(), DashboardSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSankeyDiagramVisualPtrInput)(nil)).Elem(), DashboardSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotCategoricallyAggregatedFieldWellsInput)(nil)).Elem(), DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotConfigurationInput)(nil)).Elem(), DashboardScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotConfigurationPtrInput)(nil)).Elem(), DashboardScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotFieldWellsInput)(nil)).Elem(), DashboardScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotFieldWellsPtrInput)(nil)).Elem(), DashboardScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotUnaggregatedFieldWellsInput)(nil)).Elem(), DashboardScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotUnaggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotVisualInput)(nil)).Elem(), DashboardScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScatterPlotVisualPtrInput)(nil)).Elem(), DashboardScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScrollBarOptionsInput)(nil)).Elem(), DashboardScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardScrollBarOptionsPtrInput)(nil)).Elem(), DashboardScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSecondaryValueOptionsInput)(nil)).Elem(), DashboardSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSecondaryValueOptionsPtrInput)(nil)).Elem(), DashboardSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionAfterPageBreakInput)(nil)).Elem(), DashboardSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionAfterPageBreakPtrInput)(nil)).Elem(), DashboardSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutCanvasSizeOptionsInput)(nil)).Elem(), DashboardSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutConfigurationInput)(nil)).Elem(), DashboardSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), DashboardSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutPaperCanvasSizeOptionsInput)(nil)).Elem(), DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrInput)(nil)).Elem(), DashboardSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionLayoutConfigurationInput)(nil)).Elem(), DashboardSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionLayoutConfigurationPtrInput)(nil)).Elem(), DashboardSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionPageBreakConfigurationInput)(nil)).Elem(), DashboardSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionPageBreakConfigurationPtrInput)(nil)).Elem(), DashboardSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionStyleInput)(nil)).Elem(), DashboardSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSectionStylePtrInput)(nil)).Elem(), DashboardSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedSheetsFilterScopeConfigurationInput)(nil)).Elem(), DashboardSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSelectedSheetsFilterScopeConfigurationPtrInput)(nil)).Elem(), DashboardSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSeriesItemInput)(nil)).Elem(), DashboardSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSeriesItemArrayInput)(nil)).Elem(), DashboardSeriesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSetParameterValueConfigurationInput)(nil)).Elem(), DashboardSetParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSetParameterValueConfigurationArrayInput)(nil)).Elem(), DashboardSetParameterValueConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardShapeConditionalFormatInput)(nil)).Elem(), DashboardShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardShapeConditionalFormatPtrInput)(nil)).Elem(), DashboardShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlLayoutInput)(nil)).Elem(), DashboardSheetControlLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlLayoutArrayInput)(nil)).Elem(), DashboardSheetControlLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlLayoutConfigurationInput)(nil)).Elem(), DashboardSheetControlLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlsOptionInput)(nil)).Elem(), DashboardSheetControlsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetControlsOptionPtrInput)(nil)).Elem(), DashboardSheetControlsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetDefinitionInput)(nil)).Elem(), DashboardSheetDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetDefinitionArrayInput)(nil)).Elem(), DashboardSheetDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetElementConfigurationOverridesInput)(nil)).Elem(), DashboardSheetElementConfigurationOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetElementRenderingRuleInput)(nil)).Elem(), DashboardSheetElementRenderingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetElementRenderingRuleArrayInput)(nil)).Elem(), DashboardSheetElementRenderingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetLayoutElementMaximizationOptionInput)(nil)).Elem(), DashboardSheetLayoutElementMaximizationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetLayoutElementMaximizationOptionPtrInput)(nil)).Elem(), DashboardSheetLayoutElementMaximizationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetTextBoxInput)(nil)).Elem(), DashboardSheetTextBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetTextBoxArrayInput)(nil)).Elem(), DashboardSheetTextBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetVisualScopingConfigurationInput)(nil)).Elem(), DashboardSheetVisualScopingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSheetVisualScopingConfigurationArrayInput)(nil)).Elem(), DashboardSheetVisualScopingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardShortFormatTextInput)(nil)).Elem(), DashboardShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardShortFormatTextPtrInput)(nil)).Elem(), DashboardShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleClusterMarkerInput)(nil)).Elem(), DashboardSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSimpleClusterMarkerPtrInput)(nil)).Elem(), DashboardSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSliderControlDisplayOptionsInput)(nil)).Elem(), DashboardSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSliderControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesOptionsInput)(nil)).Elem(), DashboardSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSmallMultiplesOptionsPtrInput)(nil)).Elem(), DashboardSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSourceEntityInput)(nil)).Elem(), DashboardSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSourceEntityPtrInput)(nil)).Elem(), DashboardSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSourceTemplateInput)(nil)).Elem(), DashboardSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSourceTemplatePtrInput)(nil)).Elem(), DashboardSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSpacingInput)(nil)).Elem(), DashboardSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSpacingPtrInput)(nil)).Elem(), DashboardSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringDefaultValuesInput)(nil)).Elem(), DashboardStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringDefaultValuesPtrInput)(nil)).Elem(), DashboardStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringFormatConfigurationInput)(nil)).Elem(), DashboardStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringFormatConfigurationPtrInput)(nil)).Elem(), DashboardStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringParameterInput)(nil)).Elem(), DashboardStringParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringParameterArrayInput)(nil)).Elem(), DashboardStringParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringParameterDeclarationInput)(nil)).Elem(), DashboardStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringParameterDeclarationPtrInput)(nil)).Elem(), DashboardStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringValueWhenUnsetConfigurationInput)(nil)).Elem(), DashboardStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardStringValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), DashboardStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSubtotalOptionsInput)(nil)).Elem(), DashboardSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardSubtotalOptionsPtrInput)(nil)).Elem(), DashboardSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableAggregatedFieldWellsInput)(nil)).Elem(), DashboardTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableBorderOptionsInput)(nil)).Elem(), DashboardTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableBorderOptionsPtrInput)(nil)).Elem(), DashboardTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellConditionalFormattingInput)(nil)).Elem(), DashboardTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellConditionalFormattingPtrInput)(nil)).Elem(), DashboardTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellImageSizingConfigurationInput)(nil)).Elem(), DashboardTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellImageSizingConfigurationPtrInput)(nil)).Elem(), DashboardTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellStyleInput)(nil)).Elem(), DashboardTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableCellStylePtrInput)(nil)).Elem(), DashboardTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConditionalFormattingInput)(nil)).Elem(), DashboardTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConditionalFormattingPtrInput)(nil)).Elem(), DashboardTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConditionalFormattingOptionInput)(nil)).Elem(), DashboardTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConditionalFormattingOptionArrayInput)(nil)).Elem(), DashboardTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConfigurationInput)(nil)).Elem(), DashboardTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableConfigurationPtrInput)(nil)).Elem(), DashboardTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldCustomIconContentInput)(nil)).Elem(), DashboardTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldCustomIconContentPtrInput)(nil)).Elem(), DashboardTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldCustomTextContentInput)(nil)).Elem(), DashboardTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldCustomTextContentPtrInput)(nil)).Elem(), DashboardTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldImageConfigurationInput)(nil)).Elem(), DashboardTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldImageConfigurationPtrInput)(nil)).Elem(), DashboardTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldLinkConfigurationInput)(nil)).Elem(), DashboardTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldLinkConfigurationPtrInput)(nil)).Elem(), DashboardTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldLinkContentConfigurationInput)(nil)).Elem(), DashboardTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldLinkContentConfigurationPtrInput)(nil)).Elem(), DashboardTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldOptionInput)(nil)).Elem(), DashboardTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldOptionArrayInput)(nil)).Elem(), DashboardTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldOptionsInput)(nil)).Elem(), DashboardTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldOptionsPtrInput)(nil)).Elem(), DashboardTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldURLConfigurationInput)(nil)).Elem(), DashboardTableFieldURLConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldURLConfigurationPtrInput)(nil)).Elem(), DashboardTableFieldURLConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldWellsInput)(nil)).Elem(), DashboardTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableFieldWellsPtrInput)(nil)).Elem(), DashboardTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableInlineVisualizationInput)(nil)).Elem(), DashboardTableInlineVisualizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableInlineVisualizationArrayInput)(nil)).Elem(), DashboardTableInlineVisualizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableOptionsInput)(nil)).Elem(), DashboardTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableOptionsPtrInput)(nil)).Elem(), DashboardTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTablePaginatedReportOptionsInput)(nil)).Elem(), DashboardTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTablePaginatedReportOptionsPtrInput)(nil)).Elem(), DashboardTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableRowConditionalFormattingInput)(nil)).Elem(), DashboardTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableRowConditionalFormattingPtrInput)(nil)).Elem(), DashboardTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableSideBorderOptionsInput)(nil)).Elem(), DashboardTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableSideBorderOptionsPtrInput)(nil)).Elem(), DashboardTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableSortConfigurationInput)(nil)).Elem(), DashboardTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableSortConfigurationPtrInput)(nil)).Elem(), DashboardTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableUnaggregatedFieldWellsInput)(nil)).Elem(), DashboardTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableUnaggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableVisualInput)(nil)).Elem(), DashboardTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTableVisualPtrInput)(nil)).Elem(), DashboardTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTagInput)(nil)).Elem(), DashboardTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTagArrayInput)(nil)).Elem(), DashboardTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextAreaControlDisplayOptionsInput)(nil)).Elem(), DashboardTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextAreaControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextConditionalFormatInput)(nil)).Elem(), DashboardTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextConditionalFormatPtrInput)(nil)).Elem(), DashboardTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextControlPlaceholderOptionsInput)(nil)).Elem(), DashboardTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextControlPlaceholderOptionsPtrInput)(nil)).Elem(), DashboardTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextFieldControlDisplayOptionsInput)(nil)).Elem(), DashboardTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTextFieldControlDisplayOptionsPtrInput)(nil)).Elem(), DashboardTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardThousandSeparatorOptionsInput)(nil)).Elem(), DashboardThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardThousandSeparatorOptionsPtrInput)(nil)).Elem(), DashboardThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeBasedForecastPropertiesInput)(nil)).Elem(), DashboardTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeBasedForecastPropertiesPtrInput)(nil)).Elem(), DashboardTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeEqualityFilterInput)(nil)).Elem(), DashboardTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeEqualityFilterPtrInput)(nil)).Elem(), DashboardTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeDrillDownFilterInput)(nil)).Elem(), DashboardTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeDrillDownFilterPtrInput)(nil)).Elem(), DashboardTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeFilterInput)(nil)).Elem(), DashboardTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeFilterPtrInput)(nil)).Elem(), DashboardTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeFilterValueInput)(nil)).Elem(), DashboardTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeFilterValuePtrInput)(nil)).Elem(), DashboardTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipItemInput)(nil)).Elem(), DashboardTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipItemArrayInput)(nil)).Elem(), DashboardTooltipItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipOptionsInput)(nil)).Elem(), DashboardTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTooltipOptionsPtrInput)(nil)).Elem(), DashboardTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomFilterInput)(nil)).Elem(), DashboardTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomFilterPtrInput)(nil)).Elem(), DashboardTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomMoversComputationInput)(nil)).Elem(), DashboardTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomMoversComputationPtrInput)(nil)).Elem(), DashboardTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomRankedComputationInput)(nil)).Elem(), DashboardTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopBottomRankedComputationPtrInput)(nil)).Elem(), DashboardTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTotalAggregationComputationInput)(nil)).Elem(), DashboardTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTotalAggregationComputationPtrInput)(nil)).Elem(), DashboardTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTotalOptionsInput)(nil)).Elem(), DashboardTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTotalOptionsPtrInput)(nil)).Elem(), DashboardTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapAggregatedFieldWellsInput)(nil)).Elem(), DashboardTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapConfigurationInput)(nil)).Elem(), DashboardTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapConfigurationPtrInput)(nil)).Elem(), DashboardTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapFieldWellsInput)(nil)).Elem(), DashboardTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapFieldWellsPtrInput)(nil)).Elem(), DashboardTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapSortConfigurationInput)(nil)).Elem(), DashboardTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapSortConfigurationPtrInput)(nil)).Elem(), DashboardTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapVisualInput)(nil)).Elem(), DashboardTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTreeMapVisualPtrInput)(nil)).Elem(), DashboardTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTrendArrowOptionsInput)(nil)).Elem(), DashboardTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTrendArrowOptionsPtrInput)(nil)).Elem(), DashboardTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUnaggregatedFieldInput)(nil)).Elem(), DashboardUnaggregatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUnaggregatedFieldArrayInput)(nil)).Elem(), DashboardUnaggregatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUniqueValuesComputationInput)(nil)).Elem(), DashboardUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardUniqueValuesComputationPtrInput)(nil)).Elem(), DashboardUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVersionDefinitionInput)(nil)).Elem(), DashboardVersionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVersionDefinitionPtrInput)(nil)).Elem(), DashboardVersionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisibleRangeOptionsInput)(nil)).Elem(), DashboardVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisibleRangeOptionsPtrInput)(nil)).Elem(), DashboardVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualInput)(nil)).Elem(), DashboardVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualArrayInput)(nil)).Elem(), DashboardVisualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualAxisSortOptionInput)(nil)).Elem(), DashboardVisualAxisSortOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualAxisSortOptionPtrInput)(nil)).Elem(), DashboardVisualAxisSortOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionInput)(nil)).Elem(), DashboardVisualCustomActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionArrayInput)(nil)).Elem(), DashboardVisualCustomActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionOperationInput)(nil)).Elem(), DashboardVisualCustomActionOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualCustomActionOperationArrayInput)(nil)).Elem(), DashboardVisualCustomActionOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualMenuOptionInput)(nil)).Elem(), DashboardVisualMenuOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualMenuOptionPtrInput)(nil)).Elem(), DashboardVisualMenuOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualPaletteInput)(nil)).Elem(), DashboardVisualPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualPalettePtrInput)(nil)).Elem(), DashboardVisualPaletteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualPublishOptionsInput)(nil)).Elem(), DashboardVisualPublishOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualPublishOptionsPtrInput)(nil)).Elem(), DashboardVisualPublishOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualSubtitleLabelOptionsInput)(nil)).Elem(), DashboardVisualSubtitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualSubtitleLabelOptionsPtrInput)(nil)).Elem(), DashboardVisualSubtitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualTitleLabelOptionsInput)(nil)).Elem(), DashboardVisualTitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVisualTitleLabelOptionsPtrInput)(nil)).Elem(), DashboardVisualTitleLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartAggregatedFieldWellsInput)(nil)).Elem(), DashboardWaterfallChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardWaterfallChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartConfigurationInput)(nil)).Elem(), DashboardWaterfallChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartConfigurationPtrInput)(nil)).Elem(), DashboardWaterfallChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartFieldWellsInput)(nil)).Elem(), DashboardWaterfallChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartFieldWellsPtrInput)(nil)).Elem(), DashboardWaterfallChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartOptionsInput)(nil)).Elem(), DashboardWaterfallChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartOptionsPtrInput)(nil)).Elem(), DashboardWaterfallChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartSortConfigurationInput)(nil)).Elem(), DashboardWaterfallChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallChartSortConfigurationPtrInput)(nil)).Elem(), DashboardWaterfallChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallVisualInput)(nil)).Elem(), DashboardWaterfallVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWaterfallVisualPtrInput)(nil)).Elem(), DashboardWaterfallVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWhatIfPointScenarioInput)(nil)).Elem(), DashboardWhatIfPointScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWhatIfPointScenarioPtrInput)(nil)).Elem(), DashboardWhatIfPointScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWhatIfRangeScenarioInput)(nil)).Elem(), DashboardWhatIfRangeScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWhatIfRangeScenarioPtrInput)(nil)).Elem(), DashboardWhatIfRangeScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudAggregatedFieldWellsInput)(nil)).Elem(), DashboardWordCloudAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudAggregatedFieldWellsPtrInput)(nil)).Elem(), DashboardWordCloudAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudChartConfigurationInput)(nil)).Elem(), DashboardWordCloudChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudChartConfigurationPtrInput)(nil)).Elem(), DashboardWordCloudChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudFieldWellsInput)(nil)).Elem(), DashboardWordCloudFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudFieldWellsPtrInput)(nil)).Elem(), DashboardWordCloudFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudOptionsInput)(nil)).Elem(), DashboardWordCloudOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudOptionsPtrInput)(nil)).Elem(), DashboardWordCloudOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudSortConfigurationInput)(nil)).Elem(), DashboardWordCloudSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudSortConfigurationPtrInput)(nil)).Elem(), DashboardWordCloudSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudVisualInput)(nil)).Elem(), DashboardWordCloudVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardWordCloudVisualPtrInput)(nil)).Elem(), DashboardWordCloudVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnGroupInput)(nil)).Elem(), DataSetColumnGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnGroupArrayInput)(nil)).Elem(), DataSetColumnGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnLevelPermissionRuleInput)(nil)).Elem(), DataSetColumnLevelPermissionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetColumnLevelPermissionRuleArrayInput)(nil)).Elem(), DataSetColumnLevelPermissionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetFieldFolderMapInput)(nil)).Elem(), DataSetFieldFolderMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetFieldFolderMapPtrInput)(nil)).Elem(), DataSetFieldFolderMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialColumnGroupInput)(nil)).Elem(), DataSetGeoSpatialColumnGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetGeoSpatialColumnGroupPtrInput)(nil)).Elem(), DataSetGeoSpatialColumnGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetIngestionWaitPolicyInput)(nil)).Elem(), DataSetIngestionWaitPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetIngestionWaitPolicyPtrInput)(nil)).Elem(), DataSetIngestionWaitPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetLogicalTableMapInput)(nil)).Elem(), DataSetLogicalTableMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetLogicalTableMapPtrInput)(nil)).Elem(), DataSetLogicalTableMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetPhysicalTableMapInput)(nil)).Elem(), DataSetPhysicalTableMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetPhysicalTableMapPtrInput)(nil)).Elem(), DataSetPhysicalTableMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetResourcePermissionInput)(nil)).Elem(), DataSetResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetResourcePermissionArrayInput)(nil)).Elem(), DataSetResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionDataSetInput)(nil)).Elem(), DataSetRowLevelPermissionDataSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionDataSetPtrInput)(nil)).Elem(), DataSetRowLevelPermissionDataSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTagInput)(nil)).Elem(), DataSetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTagArrayInput)(nil)).Elem(), DataSetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUsageConfigurationInput)(nil)).Elem(), DataSetUsageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUsageConfigurationPtrInput)(nil)).Elem(), DataSetUsageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonElasticsearchParametersInput)(nil)).Elem(), DataSourceAmazonElasticsearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonElasticsearchParametersPtrInput)(nil)).Elem(), DataSourceAmazonElasticsearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonOpenSearchParametersInput)(nil)).Elem(), DataSourceAmazonOpenSearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonOpenSearchParametersPtrInput)(nil)).Elem(), DataSourceAmazonOpenSearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAthenaParametersInput)(nil)).Elem(), DataSourceAthenaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAthenaParametersPtrInput)(nil)).Elem(), DataSourceAthenaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraParametersInput)(nil)).Elem(), DataSourceAuroraParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraParametersPtrInput)(nil)).Elem(), DataSourceAuroraParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraPostgreSqlParametersInput)(nil)).Elem(), DataSourceAuroraPostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraPostgreSqlParametersPtrInput)(nil)).Elem(), DataSourceAuroraPostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialPairInput)(nil)).Elem(), DataSourceCredentialPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialPairPtrInput)(nil)).Elem(), DataSourceCredentialPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialsInput)(nil)).Elem(), DataSourceCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialsPtrInput)(nil)).Elem(), DataSourceCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabricksParametersInput)(nil)).Elem(), DataSourceDatabricksParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabricksParametersPtrInput)(nil)).Elem(), DataSourceDatabricksParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoInput)(nil)).Elem(), DataSourceErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoPtrInput)(nil)).Elem(), DataSourceErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceManifestFileLocationInput)(nil)).Elem(), DataSourceManifestFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceManifestFileLocationPtrInput)(nil)).Elem(), DataSourceManifestFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMariaDbParametersInput)(nil)).Elem(), DataSourceMariaDbParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMariaDbParametersPtrInput)(nil)).Elem(), DataSourceMariaDbParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMySqlParametersInput)(nil)).Elem(), DataSourceMySqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMySqlParametersPtrInput)(nil)).Elem(), DataSourceMySqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOracleParametersInput)(nil)).Elem(), DataSourceOracleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOracleParametersPtrInput)(nil)).Elem(), DataSourceOracleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersInput)(nil)).Elem(), DataSourceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersPtrInput)(nil)).Elem(), DataSourceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersArrayInput)(nil)).Elem(), DataSourceParametersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePostgreSqlParametersInput)(nil)).Elem(), DataSourcePostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePostgreSqlParametersPtrInput)(nil)).Elem(), DataSourcePostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePrestoParametersInput)(nil)).Elem(), DataSourcePrestoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePrestoParametersPtrInput)(nil)).Elem(), DataSourcePrestoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsParametersInput)(nil)).Elem(), DataSourceRdsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsParametersPtrInput)(nil)).Elem(), DataSourceRdsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRedshiftParametersInput)(nil)).Elem(), DataSourceRedshiftParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRedshiftParametersPtrInput)(nil)).Elem(), DataSourceRedshiftParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceResourcePermissionInput)(nil)).Elem(), DataSourceResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceResourcePermissionArrayInput)(nil)).Elem(), DataSourceResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3ParametersInput)(nil)).Elem(), DataSourceS3ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3ParametersPtrInput)(nil)).Elem(), DataSourceS3ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSnowflakeParametersInput)(nil)).Elem(), DataSourceSnowflakeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSnowflakeParametersPtrInput)(nil)).Elem(), DataSourceSnowflakeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSparkParametersInput)(nil)).Elem(), DataSourceSparkParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSparkParametersPtrInput)(nil)).Elem(), DataSourceSparkParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSqlServerParametersInput)(nil)).Elem(), DataSourceSqlServerParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSqlServerParametersPtrInput)(nil)).Elem(), DataSourceSqlServerParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSslPropertiesInput)(nil)).Elem(), DataSourceSslPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSslPropertiesPtrInput)(nil)).Elem(), DataSourceSslPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTagInput)(nil)).Elem(), DataSourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTagArrayInput)(nil)).Elem(), DataSourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTeradataParametersInput)(nil)).Elem(), DataSourceTeradataParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTeradataParametersPtrInput)(nil)).Elem(), DataSourceTeradataParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVpcConnectionPropertiesInput)(nil)).Elem(), DataSourceVpcConnectionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVpcConnectionPropertiesPtrInput)(nil)).Elem(), DataSourceVpcConnectionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationFunctionInput)(nil)).Elem(), TemplateAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationFunctionPtrInput)(nil)).Elem(), TemplateAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationSortConfigurationInput)(nil)).Elem(), TemplateAggregationSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationSortConfigurationArrayInput)(nil)).Elem(), TemplateAggregationSortConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnalysisDefaultsInput)(nil)).Elem(), TemplateAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnalysisDefaultsPtrInput)(nil)).Elem(), TemplateAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorDateConfigurationInput)(nil)).Elem(), TemplateAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorDateConfigurationPtrInput)(nil)).Elem(), TemplateAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisConfigurationInput)(nil)).Elem(), TemplateArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisConfigurationPtrInput)(nil)).Elem(), TemplateArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisDisplayRangeInput)(nil)).Elem(), TemplateArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisDisplayRangePtrInput)(nil)).Elem(), TemplateArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcConfigurationInput)(nil)).Elem(), TemplateArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcConfigurationPtrInput)(nil)).Elem(), TemplateArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcOptionsInput)(nil)).Elem(), TemplateArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcOptionsPtrInput)(nil)).Elem(), TemplateArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDataOptionsInput)(nil)).Elem(), TemplateAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDataOptionsPtrInput)(nil)).Elem(), TemplateAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayDataDrivenRangeInput)(nil)).Elem(), TemplateAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayDataDrivenRangePtrInput)(nil)).Elem(), TemplateAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayMinMaxRangeInput)(nil)).Elem(), TemplateAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayMinMaxRangePtrInput)(nil)).Elem(), TemplateAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayOptionsInput)(nil)).Elem(), TemplateAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayOptionsPtrInput)(nil)).Elem(), TemplateAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayRangeInput)(nil)).Elem(), TemplateAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayRangePtrInput)(nil)).Elem(), TemplateAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelOptionsInput)(nil)).Elem(), TemplateAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelOptionsArrayInput)(nil)).Elem(), TemplateAxisLabelOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelReferenceOptionsInput)(nil)).Elem(), TemplateAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelReferenceOptionsPtrInput)(nil)).Elem(), TemplateAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLinearScaleInput)(nil)).Elem(), TemplateAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLinearScalePtrInput)(nil)).Elem(), TemplateAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLogarithmicScaleInput)(nil)).Elem(), TemplateAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLogarithmicScalePtrInput)(nil)).Elem(), TemplateAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisScaleInput)(nil)).Elem(), TemplateAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisScalePtrInput)(nil)).Elem(), TemplateAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisTickLabelOptionsInput)(nil)).Elem(), TemplateAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisTickLabelOptionsPtrInput)(nil)).Elem(), TemplateAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartConfigurationInput)(nil)).Elem(), TemplateBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartConfigurationPtrInput)(nil)).Elem(), TemplateBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartFieldWellsInput)(nil)).Elem(), TemplateBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartFieldWellsPtrInput)(nil)).Elem(), TemplateBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartSortConfigurationInput)(nil)).Elem(), TemplateBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartSortConfigurationPtrInput)(nil)).Elem(), TemplateBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartVisualInput)(nil)).Elem(), TemplateBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartVisualPtrInput)(nil)).Elem(), TemplateBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinCountOptionsInput)(nil)).Elem(), TemplateBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinCountOptionsPtrInput)(nil)).Elem(), TemplateBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinWidthOptionsInput)(nil)).Elem(), TemplateBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinWidthOptionsPtrInput)(nil)).Elem(), TemplateBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionConfigurationInput)(nil)).Elem(), TemplateBodySectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionConfigurationArrayInput)(nil)).Elem(), TemplateBodySectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionContentInput)(nil)).Elem(), TemplateBodySectionContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWellsInput)(nil)).Elem(), TemplateBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotChartConfigurationInput)(nil)).Elem(), TemplateBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotChartConfigurationPtrInput)(nil)).Elem(), TemplateBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFieldWellsInput)(nil)).Elem(), TemplateBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFieldWellsPtrInput)(nil)).Elem(), TemplateBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotOptionsInput)(nil)).Elem(), TemplateBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotOptionsPtrInput)(nil)).Elem(), TemplateBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotSortConfigurationInput)(nil)).Elem(), TemplateBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotSortConfigurationPtrInput)(nil)).Elem(), TemplateBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotStyleOptionsInput)(nil)).Elem(), TemplateBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotStyleOptionsPtrInput)(nil)).Elem(), TemplateBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotVisualInput)(nil)).Elem(), TemplateBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotVisualPtrInput)(nil)).Elem(), TemplateBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedFieldInput)(nil)).Elem(), TemplateCalculatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedFieldArrayInput)(nil)).Elem(), TemplateCalculatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedMeasureFieldInput)(nil)).Elem(), TemplateCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedMeasureFieldPtrInput)(nil)).Elem(), TemplateCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlConfigurationInput)(nil)).Elem(), TemplateCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlConfigurationPtrInput)(nil)).Elem(), TemplateCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlSourceInput)(nil)).Elem(), TemplateCascadingControlSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlSourceArrayInput)(nil)).Elem(), TemplateCascadingControlSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalDimensionFieldInput)(nil)).Elem(), TemplateCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalDimensionFieldPtrInput)(nil)).Elem(), TemplateCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalMeasureFieldInput)(nil)).Elem(), TemplateCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalMeasureFieldPtrInput)(nil)).Elem(), TemplateCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryDrillDownFilterInput)(nil)).Elem(), TemplateCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryDrillDownFilterPtrInput)(nil)).Elem(), TemplateCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterInput)(nil)).Elem(), TemplateCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterPtrInput)(nil)).Elem(), TemplateCategoryFilterArgs{})
	pulumi.RegisterOutputType(DashboardColorScaleOutput{})
	pulumi.RegisterOutputType(DashboardColorScalePtrOutput{})
	pulumi.RegisterOutputType(DashboardColorsConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardColorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardColumnConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardColumnConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardColumnHierarchyOutput{})
	pulumi.RegisterOutputType(DashboardColumnHierarchyArrayOutput{})
	pulumi.RegisterOutputType(DashboardColumnIdentifierOutput{})
	pulumi.RegisterOutputType(DashboardColumnIdentifierPtrOutput{})
	pulumi.RegisterOutputType(DashboardColumnIdentifierArrayOutput{})
	pulumi.RegisterOutputType(DashboardColumnSortOutput{})
	pulumi.RegisterOutputType(DashboardColumnSortPtrOutput{})
	pulumi.RegisterOutputType(DashboardColumnTooltipItemOutput{})
	pulumi.RegisterOutputType(DashboardColumnTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(DashboardComboChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardComboChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardComboChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardComboChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardComboChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardComboChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardComboChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardComboChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardComboChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardComboChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardComparisonConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardComparisonConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardComparisonFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardComparisonFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardComputationOutput{})
	pulumi.RegisterOutputType(DashboardComputationArrayOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingColorOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingColorPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingCustomIconConditionOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingCustomIconConditionPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingCustomIconOptionsOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingCustomIconOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingGradientColorOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingGradientColorPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconDisplayConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconDisplayConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconSetOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingIconSetPtrOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingSolidColorOutput{})
	pulumi.RegisterOutputType(DashboardConditionalFormattingSolidColorPtrOutput{})
	pulumi.RegisterOutputType(DashboardContributionAnalysisDefaultOutput{})
	pulumi.RegisterOutputType(DashboardContributionAnalysisDefaultArrayOutput{})
	pulumi.RegisterOutputType(DashboardCurrencyDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCurrencyDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionFilterOperationOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionFilterOperationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionNavigationOperationOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionNavigationOperationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionSetParametersOperationOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionSetParametersOperationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionURLOperationOutput{})
	pulumi.RegisterOutputType(DashboardCustomActionURLOperationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomColorOutput{})
	pulumi.RegisterOutputType(DashboardCustomColorArrayOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentVisualOutput{})
	pulumi.RegisterOutputType(DashboardCustomContentVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomFilterConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCustomFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCustomFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomNarrativeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardCustomNarrativeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomParameterValuesOutput{})
	pulumi.RegisterOutputType(DashboardCustomParameterValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardCustomValuesConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardCustomValuesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataBarsOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDataBarsOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataColorOutput{})
	pulumi.RegisterOutputType(DashboardDataColorPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataColorArrayOutput{})
	pulumi.RegisterOutputType(DashboardDataFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(DashboardDataFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardDataLabelTypeArrayOutput{})
	pulumi.RegisterOutputType(DashboardDataPathColorOutput{})
	pulumi.RegisterOutputType(DashboardDataPathColorArrayOutput{})
	pulumi.RegisterOutputType(DashboardDataPathLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardDataPathLabelTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardDataPathSortOutput{})
	pulumi.RegisterOutputType(DashboardDataPathSortPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataPathValueOutput{})
	pulumi.RegisterOutputType(DashboardDataPathValueArrayOutput{})
	pulumi.RegisterOutputType(DashboardDataPointDrillUpDownOptionOutput{})
	pulumi.RegisterOutputType(DashboardDataPointDrillUpDownOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataPointMenuLabelOptionOutput{})
	pulumi.RegisterOutputType(DashboardDataPointMenuLabelOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataPointTooltipOptionOutput{})
	pulumi.RegisterOutputType(DashboardDataPointTooltipOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardDataSetIdentifierDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardDataSetIdentifierDeclarationArrayOutput{})
	pulumi.RegisterOutputType(DashboardDataSetReferenceOutput{})
	pulumi.RegisterOutputType(DashboardDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(DashboardDateAxisOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDateAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateDimensionFieldOutput{})
	pulumi.RegisterOutputType(DashboardDateDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateMeasureFieldOutput{})
	pulumi.RegisterOutputType(DashboardDateMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeDefaultValuesOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeHierarchyOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeHierarchyPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimePickerControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDateTimePickerControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDateTimeValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDecimalDefaultValuesOutput{})
	pulumi.RegisterOutputType(DashboardDecimalDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardDecimalParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDecimalPlacesConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDecimalPlacesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDecimalValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDecimalValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultInteractiveLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultInteractiveLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultNewSheetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultNewSheetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultPaginatedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultPaginatedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDefaultSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDefaultSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardDestinationParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardDimensionFieldOutput{})
	pulumi.RegisterOutputType(DashboardDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardDimensionFieldArrayOutput{})
	pulumi.RegisterOutputType(DashboardDonutCenterOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDonutCenterOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDonutOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDonutOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDrillDownFilterOutput{})
	pulumi.RegisterOutputType(DashboardDrillDownFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardDropDownControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardDropDownControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardDynamicDefaultValueOutput{})
	pulumi.RegisterOutputType(DashboardDynamicDefaultValuePtrOutput{})
	pulumi.RegisterOutputType(DashboardEmptyVisualOutput{})
	pulumi.RegisterOutputType(DashboardEmptyVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardEntityOutput{})
	pulumi.RegisterOutputType(DashboardEntityArrayOutput{})
	pulumi.RegisterOutputType(DashboardErrorOutput{})
	pulumi.RegisterOutputType(DashboardErrorArrayOutput{})
	pulumi.RegisterOutputType(DashboardExcludePeriodConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardExcludePeriodConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardExplicitHierarchyOutput{})
	pulumi.RegisterOutputType(DashboardExplicitHierarchyPtrOutput{})
	pulumi.RegisterOutputType(DashboardExportHiddenFieldsOptionOutput{})
	pulumi.RegisterOutputType(DashboardExportHiddenFieldsOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardExportToCSVOptionOutput{})
	pulumi.RegisterOutputType(DashboardExportToCSVOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardExportWithHiddenFieldsOptionOutput{})
	pulumi.RegisterOutputType(DashboardExportWithHiddenFieldsOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardFieldBasedTooltipOutput{})
	pulumi.RegisterOutputType(DashboardFieldBasedTooltipPtrOutput{})
	pulumi.RegisterOutputType(DashboardFieldLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardFieldLabelTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(DashboardFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(DashboardFieldSortOutput{})
	pulumi.RegisterOutputType(DashboardFieldSortPtrOutput{})
	pulumi.RegisterOutputType(DashboardFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(DashboardFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(DashboardFieldTooltipItemOutput{})
	pulumi.RegisterOutputType(DashboardFieldTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapShapeConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapVisualOutput{})
	pulumi.RegisterOutputType(DashboardFilledMapVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterOutput{})
	pulumi.RegisterOutputType(DashboardFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardFilterControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterControlArrayOutput{})
	pulumi.RegisterOutputType(DashboardFilterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterDropDownControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterGroupOutput{})
	pulumi.RegisterOutputType(DashboardFilterGroupArrayOutput{})
	pulumi.RegisterOutputType(DashboardFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterListControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterListControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterOperationSelectedFieldsConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilterOperationSelectedFieldsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterOperationTargetVisualsConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilterOperationTargetVisualsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterRelativeDateTimeControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterRelativeDateTimeControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFilterSelectableValuesOutput{})
	pulumi.RegisterOutputType(DashboardFilterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterSliderControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterTextAreaControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFilterTextFieldControlOutput{})
	pulumi.RegisterOutputType(DashboardFilterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardFontConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFontConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFontSizeOutput{})
	pulumi.RegisterOutputType(DashboardFontSizePtrOutput{})
	pulumi.RegisterOutputType(DashboardFontWeightOutput{})
	pulumi.RegisterOutputType(DashboardFontWeightPtrOutput{})
	pulumi.RegisterOutputType(DashboardForecastComputationOutput{})
	pulumi.RegisterOutputType(DashboardForecastComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardForecastConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardForecastConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardForecastScenarioOutput{})
	pulumi.RegisterOutputType(DashboardForecastScenarioPtrOutput{})
	pulumi.RegisterOutputType(DashboardFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementBackgroundStyleOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementBackgroundStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementBorderStyleOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutElementBorderStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFreeFormSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardFunnelChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartArcConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartArcConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardGaugeChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialCoordinateBoundsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialCoordinateBoundsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapStyleOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapVisualOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialMapVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialPointStyleOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialPointStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialWindowOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGeospatialWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGlobalTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGlobalTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGradientColorOutput{})
	pulumi.RegisterOutputType(DashboardGradientColorPtrOutput{})
	pulumi.RegisterOutputType(DashboardGradientStopOutput{})
	pulumi.RegisterOutputType(DashboardGradientStopArrayOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutElementOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardGridLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardGrowthRateComputationOutput{})
	pulumi.RegisterOutputType(DashboardGrowthRateComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardHeaderFooterSectionConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardHeaderFooterSectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapVisualOutput{})
	pulumi.RegisterOutputType(DashboardHeatMapVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardHistogramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramBinOptionsOutput{})
	pulumi.RegisterOutputType(DashboardHistogramBinOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardHistogramConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardHistogramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardHistogramVisualOutput{})
	pulumi.RegisterOutputType(DashboardHistogramVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardInsightConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardInsightConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardInsightVisualOutput{})
	pulumi.RegisterOutputType(DashboardInsightVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardIntegerDefaultValuesOutput{})
	pulumi.RegisterOutputType(DashboardIntegerDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardIntegerParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(DashboardIntegerValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardIntegerValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardItemsLimitConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardItemsLimitConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardKPIConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(DashboardKPIConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardKPIConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardKPIConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardKPIFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIOptionsOutput{})
	pulumi.RegisterOutputType(DashboardKPIOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardKPIPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIProgressBarConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardKPIProgressBarConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPISortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardKPISortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardKPIVisualOutput{})
	pulumi.RegisterOutputType(DashboardKPIVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutOutput{})
	pulumi.RegisterOutputType(DashboardLayoutArrayOutput{})
	pulumi.RegisterOutputType(DashboardLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardLegendOptionsOutput{})
	pulumi.RegisterOutputType(DashboardLegendOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardLineChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartDefaultSeriesSettingsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartDefaultSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartLineStyleSettingsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartLineStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartMarkerStyleSettingsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartMarkerStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(DashboardLineChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardLineChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardLineChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardLineSeriesAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardLineSeriesAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardListControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardListControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardListControlSearchOptionsOutput{})
	pulumi.RegisterOutputType(DashboardListControlSearchOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardListControlSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(DashboardListControlSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardLoadingAnimationOutput{})
	pulumi.RegisterOutputType(DashboardLoadingAnimationPtrOutput{})
	pulumi.RegisterOutputType(DashboardLocalNavigationConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardLocalNavigationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardLongFormatTextOutput{})
	pulumi.RegisterOutputType(DashboardLongFormatTextPtrOutput{})
	pulumi.RegisterOutputType(DashboardMappedDataSetParameterOutput{})
	pulumi.RegisterOutputType(DashboardMappedDataSetParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardMaximumLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardMaximumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardMaximumMinimumComputationOutput{})
	pulumi.RegisterOutputType(DashboardMaximumMinimumComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardMeasureFieldOutput{})
	pulumi.RegisterOutputType(DashboardMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardMeasureFieldArrayOutput{})
	pulumi.RegisterOutputType(DashboardMetricComparisonComputationOutput{})
	pulumi.RegisterOutputType(DashboardMetricComparisonComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardMinimumLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardMinimumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardMissingDataConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardMissingDataConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardNegativeValueConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNegativeValueConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNullValueFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNullValueFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumberDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNumberDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumberFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNumberFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericAxisOptionsOutput{})
	pulumi.RegisterOutputType(DashboardNumericAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityDrillDownFilterOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityFilterOutput{})
	pulumi.RegisterOutputType(DashboardNumericEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNumericFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericRangeFilterOutput{})
	pulumi.RegisterOutputType(DashboardNumericRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericRangeFilterValueOutput{})
	pulumi.RegisterOutputType(DashboardNumericRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericSeparatorConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardNumericSeparatorConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(DashboardNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericalDimensionFieldOutput{})
	pulumi.RegisterOutputType(DashboardNumericalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardNumericalMeasureFieldOutput{})
	pulumi.RegisterOutputType(DashboardNumericalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(DashboardPaginationConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPaginationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPanelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelTitleOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPanelTitleOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterControlArrayOutput{})
	pulumi.RegisterOutputType(DashboardParameterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardParameterDeclarationArrayOutput{})
	pulumi.RegisterOutputType(DashboardParameterDropDownControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterListControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterListControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterSelectableValuesOutput{})
	pulumi.RegisterOutputType(DashboardParameterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterSliderControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterTextAreaControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParameterTextFieldControlOutput{})
	pulumi.RegisterOutputType(DashboardParameterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(DashboardParametersOutput{})
	pulumi.RegisterOutputType(DashboardParametersPtrOutput{})
	pulumi.RegisterOutputType(DashboardPercentVisibleRangeOutput{})
	pulumi.RegisterOutputType(DashboardPercentVisibleRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPercentageDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPercentageDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPercentileAggregationOutput{})
	pulumi.RegisterOutputType(DashboardPercentileAggregationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPeriodOverPeriodComputationOutput{})
	pulumi.RegisterOutputType(DashboardPeriodOverPeriodComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPeriodToDateComputationOutput{})
	pulumi.RegisterOutputType(DashboardPeriodToDateComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPieChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardPieChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPieChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPieChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPieChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardPieChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPieChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPieChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPieChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardPieChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingScopeOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConditionalFormattingScopePtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableDataPathOptionOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableDataPathOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldOptionOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldSubtotalOptionsArrayOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableSortByOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableTotalOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableVisualOutput{})
	pulumi.RegisterOutputType(DashboardPivotTableVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardPivotTotalOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPivotTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPredefinedHierarchyOutput{})
	pulumi.RegisterOutputType(DashboardPredefinedHierarchyPtrOutput{})
	pulumi.RegisterOutputType(DashboardProgressBarOptionsOutput{})
	pulumi.RegisterOutputType(DashboardProgressBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardPublishOptionsOutput{})
	pulumi.RegisterOutputType(DashboardPublishOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAreaStyleSettingsOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartAreaStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartVisualOutput{})
	pulumi.RegisterOutputType(DashboardRadarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardRangeEndsLabelTypeOutput{})
	pulumi.RegisterOutputType(DashboardRangeEndsLabelTypePtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineArrayOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineCustomLabelConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineCustomLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineDataConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineDynamicDataConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineDynamicDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineStaticDataConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineStaticDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineStyleConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineStyleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineValueLabelConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardReferenceLineValueLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDateTimeControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDateTimeControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDatesFilterOutput{})
	pulumi.RegisterOutputType(DashboardRelativeDatesFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardResourcePermissionOutput{})
	pulumi.RegisterOutputType(DashboardResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DashboardRollingDateConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardRollingDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardRowAlternateColorOptionsOutput{})
	pulumi.RegisterOutputType(DashboardRowAlternateColorOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSameSheetTargetVisualConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSameSheetTargetVisualConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramVisualOutput{})
	pulumi.RegisterOutputType(DashboardSankeyDiagramVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotCategoricallyAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotCategoricallyAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotVisualOutput{})
	pulumi.RegisterOutputType(DashboardScatterPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardScrollBarOptionsOutput{})
	pulumi.RegisterOutputType(DashboardScrollBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSecondaryValueOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSecondaryValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionAfterPageBreakOutput{})
	pulumi.RegisterOutputType(DashboardSectionAfterPageBreakPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutPaperCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionPageBreakConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSectionPageBreakConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSectionStyleOutput{})
	pulumi.RegisterOutputType(DashboardSectionStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardSelectedSheetsFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSelectedSheetsFilterScopeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSeriesItemOutput{})
	pulumi.RegisterOutputType(DashboardSeriesItemArrayOutput{})
	pulumi.RegisterOutputType(DashboardSetParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSetParameterValueConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardShapeConditionalFormatOutput{})
	pulumi.RegisterOutputType(DashboardShapeConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetOutput{})
	pulumi.RegisterOutputType(DashboardSheetArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlLayoutOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlLayoutArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlsOptionOutput{})
	pulumi.RegisterOutputType(DashboardSheetControlsOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardSheetDefinitionArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetElementConfigurationOverridesOutput{})
	pulumi.RegisterOutputType(DashboardSheetElementRenderingRuleOutput{})
	pulumi.RegisterOutputType(DashboardSheetElementRenderingRuleArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetLayoutElementMaximizationOptionOutput{})
	pulumi.RegisterOutputType(DashboardSheetLayoutElementMaximizationOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardSheetTextBoxOutput{})
	pulumi.RegisterOutputType(DashboardSheetTextBoxArrayOutput{})
	pulumi.RegisterOutputType(DashboardSheetVisualScopingConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardSheetVisualScopingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DashboardShortFormatTextOutput{})
	pulumi.RegisterOutputType(DashboardShortFormatTextPtrOutput{})
	pulumi.RegisterOutputType(DashboardSimpleClusterMarkerOutput{})
	pulumi.RegisterOutputType(DashboardSimpleClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(DashboardSliderControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSliderControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSmallMultiplesOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardSourceEntityOutput{})
	pulumi.RegisterOutputType(DashboardSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(DashboardSourceTemplateOutput{})
	pulumi.RegisterOutputType(DashboardSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(DashboardSpacingOutput{})
	pulumi.RegisterOutputType(DashboardSpacingPtrOutput{})
	pulumi.RegisterOutputType(DashboardStringDefaultValuesOutput{})
	pulumi.RegisterOutputType(DashboardStringDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(DashboardStringFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardStringFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterDeclarationOutput{})
	pulumi.RegisterOutputType(DashboardStringParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(DashboardStringValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardStringValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(DashboardSubtotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableCellImageSizingConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableCellImageSizingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableCellStyleOutput{})
	pulumi.RegisterOutputType(DashboardTableCellStylePtrOutput{})
	pulumi.RegisterOutputType(DashboardTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(DashboardTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardTableConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldCustomIconContentOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldCustomIconContentPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldCustomTextContentOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldCustomTextContentPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldImageConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldImageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldLinkConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldLinkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldLinkContentConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldLinkContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldOptionOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldURLConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldURLConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableInlineVisualizationOutput{})
	pulumi.RegisterOutputType(DashboardTableInlineVisualizationArrayOutput{})
	pulumi.RegisterOutputType(DashboardTableOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableRowConditionalFormattingOutput{})
	pulumi.RegisterOutputType(DashboardTableRowConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableSideBorderOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTableSideBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardTableUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTableVisualOutput{})
	pulumi.RegisterOutputType(DashboardTableVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardTagOutput{})
	pulumi.RegisterOutputType(DashboardTagArrayOutput{})
	pulumi.RegisterOutputType(DashboardTextAreaControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTextAreaControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTextConditionalFormatOutput{})
	pulumi.RegisterOutputType(DashboardTextConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(DashboardTextControlPlaceholderOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTextControlPlaceholderOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTextFieldControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTextFieldControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardThousandSeparatorOptionsOutput{})
	pulumi.RegisterOutputType(DashboardThousandSeparatorOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeBasedForecastPropertiesOutput{})
	pulumi.RegisterOutputType(DashboardTimeBasedForecastPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeEqualityFilterOutput{})
	pulumi.RegisterOutputType(DashboardTimeEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeDrillDownFilterOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeFilterOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeFilterValueOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(DashboardTooltipItemOutput{})
	pulumi.RegisterOutputType(DashboardTooltipItemArrayOutput{})
	pulumi.RegisterOutputType(DashboardTooltipOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTooltipOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomFilterOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomFilterPtrOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomMoversComputationOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomMoversComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomRankedComputationOutput{})
	pulumi.RegisterOutputType(DashboardTopBottomRankedComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTotalAggregationComputationOutput{})
	pulumi.RegisterOutputType(DashboardTotalAggregationComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTotalOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapVisualOutput{})
	pulumi.RegisterOutputType(DashboardTreeMapVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardTrendArrowOptionsOutput{})
	pulumi.RegisterOutputType(DashboardTrendArrowOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardUnaggregatedFieldOutput{})
	pulumi.RegisterOutputType(DashboardUnaggregatedFieldArrayOutput{})
	pulumi.RegisterOutputType(DashboardUniqueValuesComputationOutput{})
	pulumi.RegisterOutputType(DashboardUniqueValuesComputationPtrOutput{})
	pulumi.RegisterOutputType(DashboardVersionOutput{})
	pulumi.RegisterOutputType(DashboardVersionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVersionDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVersionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisibleRangeOptionsOutput{})
	pulumi.RegisterOutputType(DashboardVisibleRangeOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualOutput{})
	pulumi.RegisterOutputType(DashboardVisualArrayOutput{})
	pulumi.RegisterOutputType(DashboardVisualAxisSortOptionOutput{})
	pulumi.RegisterOutputType(DashboardVisualAxisSortOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionArrayOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionOperationOutput{})
	pulumi.RegisterOutputType(DashboardVisualCustomActionOperationArrayOutput{})
	pulumi.RegisterOutputType(DashboardVisualMenuOptionOutput{})
	pulumi.RegisterOutputType(DashboardVisualMenuOptionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualPaletteOutput{})
	pulumi.RegisterOutputType(DashboardVisualPalettePtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualPublishOptionsOutput{})
	pulumi.RegisterOutputType(DashboardVisualPublishOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualSubtitleLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardVisualSubtitleLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardVisualTitleLabelOptionsOutput{})
	pulumi.RegisterOutputType(DashboardVisualTitleLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartOptionsOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallVisualOutput{})
	pulumi.RegisterOutputType(DashboardWaterfallVisualPtrOutput{})
	pulumi.RegisterOutputType(DashboardWhatIfPointScenarioOutput{})
	pulumi.RegisterOutputType(DashboardWhatIfPointScenarioPtrOutput{})
	pulumi.RegisterOutputType(DashboardWhatIfRangeScenarioOutput{})
	pulumi.RegisterOutputType(DashboardWhatIfRangeScenarioPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudChartConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudFieldWellsOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudOptionsOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudOptionsPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudSortConfigurationOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudVisualOutput{})
	pulumi.RegisterOutputType(DashboardWordCloudVisualPtrOutput{})
	pulumi.RegisterOutputType(DataSetColumnGroupOutput{})
	pulumi.RegisterOutputType(DataSetColumnGroupArrayOutput{})
	pulumi.RegisterOutputType(DataSetColumnLevelPermissionRuleOutput{})
	pulumi.RegisterOutputType(DataSetColumnLevelPermissionRuleArrayOutput{})
	pulumi.RegisterOutputType(DataSetFieldFolderMapOutput{})
	pulumi.RegisterOutputType(DataSetFieldFolderMapPtrOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialColumnGroupOutput{})
	pulumi.RegisterOutputType(DataSetGeoSpatialColumnGroupPtrOutput{})
	pulumi.RegisterOutputType(DataSetIngestionWaitPolicyOutput{})
	pulumi.RegisterOutputType(DataSetIngestionWaitPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataSetLogicalTableMapOutput{})
	pulumi.RegisterOutputType(DataSetLogicalTableMapPtrOutput{})
	pulumi.RegisterOutputType(DataSetOutputColumnOutput{})
	pulumi.RegisterOutputType(DataSetOutputColumnArrayOutput{})
	pulumi.RegisterOutputType(DataSetPhysicalTableMapOutput{})
	pulumi.RegisterOutputType(DataSetPhysicalTableMapPtrOutput{})
	pulumi.RegisterOutputType(DataSetResourcePermissionOutput{})
	pulumi.RegisterOutputType(DataSetResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionDataSetOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionDataSetPtrOutput{})
	pulumi.RegisterOutputType(DataSetTagOutput{})
	pulumi.RegisterOutputType(DataSetTagArrayOutput{})
	pulumi.RegisterOutputType(DataSetUsageConfigurationOutput{})
	pulumi.RegisterOutputType(DataSetUsageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonOpenSearchParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonOpenSearchParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialsOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialsPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDatabricksParametersOutput{})
	pulumi.RegisterOutputType(DataSourceDatabricksParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoPtrOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceParametersOutput{})
	pulumi.RegisterOutputType(DataSourceParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceParametersArrayOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTagOutput{})
	pulumi.RegisterOutputType(DataSourceTagArrayOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateAggregationSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateAggregationSortConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateAnalysisDefaultsOutput{})
	pulumi.RegisterOutputType(TemplateAnalysisDefaultsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAnchorDateConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateAnchorDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateArcConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateArcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcOptionsOutput{})
	pulumi.RegisterOutputType(TemplateArcOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDataOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayDataDrivenRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayDataDrivenRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayMinMaxRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayMinMaxRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelOptionsArrayOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelReferenceOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelReferenceOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLinearScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisLinearScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLogarithmicScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisLogarithmicScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisTickLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisTickLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateBarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateBinCountOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBinCountOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBinWidthOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBinWidthOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionContentOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotStyleOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotVisualOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedFieldOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedFieldArrayOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlSourceOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlSourceArrayOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalDimensionFieldOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryDrillDownFilterOutput{})
	pulumi.RegisterOutputType(TemplateCategoryDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterPtrOutput{})
}
