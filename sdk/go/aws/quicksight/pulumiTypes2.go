// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// <p>The configuration of tags on a dataset to set row-level security.</p>
type DataSetRowLevelPermissionTagConfiguration struct {
	Status *DataSetStatus `pulumi:"status"`
	// <p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>
	TagRuleConfigurations [][]string `pulumi:"tagRuleConfigurations"`
	// <p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>
	TagRules []DataSetRowLevelPermissionTagRule `pulumi:"tagRules"`
}

// DataSetRowLevelPermissionTagConfigurationInput is an input type that accepts DataSetRowLevelPermissionTagConfigurationArgs and DataSetRowLevelPermissionTagConfigurationOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionTagConfigurationInput` via:
//
//	DataSetRowLevelPermissionTagConfigurationArgs{...}
type DataSetRowLevelPermissionTagConfigurationInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionTagConfigurationOutput() DataSetRowLevelPermissionTagConfigurationOutput
	ToDataSetRowLevelPermissionTagConfigurationOutputWithContext(context.Context) DataSetRowLevelPermissionTagConfigurationOutput
}

// <p>The configuration of tags on a dataset to set row-level security.</p>
type DataSetRowLevelPermissionTagConfigurationArgs struct {
	Status DataSetStatusPtrInput `pulumi:"status"`
	// <p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>
	TagRuleConfigurations pulumi.StringArrayArrayInput `pulumi:"tagRuleConfigurations"`
	// <p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>
	TagRules DataSetRowLevelPermissionTagRuleArrayInput `pulumi:"tagRules"`
}

func (DataSetRowLevelPermissionTagConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionTagConfiguration)(nil)).Elem()
}

func (i DataSetRowLevelPermissionTagConfigurationArgs) ToDataSetRowLevelPermissionTagConfigurationOutput() DataSetRowLevelPermissionTagConfigurationOutput {
	return i.ToDataSetRowLevelPermissionTagConfigurationOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionTagConfigurationArgs) ToDataSetRowLevelPermissionTagConfigurationOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionTagConfigurationOutput)
}

func (i DataSetRowLevelPermissionTagConfigurationArgs) ToDataSetRowLevelPermissionTagConfigurationPtrOutput() DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return i.ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionTagConfigurationArgs) ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionTagConfigurationOutput).ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(ctx)
}

// DataSetRowLevelPermissionTagConfigurationPtrInput is an input type that accepts DataSetRowLevelPermissionTagConfigurationArgs, DataSetRowLevelPermissionTagConfigurationPtr and DataSetRowLevelPermissionTagConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionTagConfigurationPtrInput` via:
//
//	        DataSetRowLevelPermissionTagConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSetRowLevelPermissionTagConfigurationPtrInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionTagConfigurationPtrOutput() DataSetRowLevelPermissionTagConfigurationPtrOutput
	ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(context.Context) DataSetRowLevelPermissionTagConfigurationPtrOutput
}

type dataSetRowLevelPermissionTagConfigurationPtrType DataSetRowLevelPermissionTagConfigurationArgs

func DataSetRowLevelPermissionTagConfigurationPtr(v *DataSetRowLevelPermissionTagConfigurationArgs) DataSetRowLevelPermissionTagConfigurationPtrInput {
	return (*dataSetRowLevelPermissionTagConfigurationPtrType)(v)
}

func (*dataSetRowLevelPermissionTagConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionTagConfiguration)(nil)).Elem()
}

func (i *dataSetRowLevelPermissionTagConfigurationPtrType) ToDataSetRowLevelPermissionTagConfigurationPtrOutput() DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return i.ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSetRowLevelPermissionTagConfigurationPtrType) ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionTagConfigurationPtrOutput)
}

// <p>The configuration of tags on a dataset to set row-level security.</p>
type DataSetRowLevelPermissionTagConfigurationOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionTagConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionTagConfiguration)(nil)).Elem()
}

func (o DataSetRowLevelPermissionTagConfigurationOutput) ToDataSetRowLevelPermissionTagConfigurationOutput() DataSetRowLevelPermissionTagConfigurationOutput {
	return o
}

func (o DataSetRowLevelPermissionTagConfigurationOutput) ToDataSetRowLevelPermissionTagConfigurationOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationOutput {
	return o
}

func (o DataSetRowLevelPermissionTagConfigurationOutput) ToDataSetRowLevelPermissionTagConfigurationPtrOutput() DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return o.ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSetRowLevelPermissionTagConfigurationOutput) ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetRowLevelPermissionTagConfiguration) *DataSetRowLevelPermissionTagConfiguration {
		return &v
	}).(DataSetRowLevelPermissionTagConfigurationPtrOutput)
}

func (o DataSetRowLevelPermissionTagConfigurationOutput) Status() DataSetStatusPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagConfiguration) *DataSetStatus { return v.Status }).(DataSetStatusPtrOutput)
}

// <p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>
func (o DataSetRowLevelPermissionTagConfigurationOutput) TagRuleConfigurations() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagConfiguration) [][]string { return v.TagRuleConfigurations }).(pulumi.StringArrayArrayOutput)
}

// <p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>
func (o DataSetRowLevelPermissionTagConfigurationOutput) TagRules() DataSetRowLevelPermissionTagRuleArrayOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagConfiguration) []DataSetRowLevelPermissionTagRule {
		return v.TagRules
	}).(DataSetRowLevelPermissionTagRuleArrayOutput)
}

type DataSetRowLevelPermissionTagConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionTagConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetRowLevelPermissionTagConfiguration)(nil)).Elem()
}

func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) ToDataSetRowLevelPermissionTagConfigurationPtrOutput() DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) ToDataSetRowLevelPermissionTagConfigurationPtrOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagConfigurationPtrOutput {
	return o
}

func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) Elem() DataSetRowLevelPermissionTagConfigurationOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionTagConfiguration) DataSetRowLevelPermissionTagConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSetRowLevelPermissionTagConfiguration
		return ret
	}).(DataSetRowLevelPermissionTagConfigurationOutput)
}

func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) Status() DataSetStatusPtrOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionTagConfiguration) *DataSetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(DataSetStatusPtrOutput)
}

// <p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>
func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) TagRuleConfigurations() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionTagConfiguration) [][]string {
		if v == nil {
			return nil
		}
		return v.TagRuleConfigurations
	}).(pulumi.StringArrayArrayOutput)
}

// <p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>
func (o DataSetRowLevelPermissionTagConfigurationPtrOutput) TagRules() DataSetRowLevelPermissionTagRuleArrayOutput {
	return o.ApplyT(func(v *DataSetRowLevelPermissionTagConfiguration) []DataSetRowLevelPermissionTagRule {
		if v == nil {
			return nil
		}
		return v.TagRules
	}).(DataSetRowLevelPermissionTagRuleArrayOutput)
}

// <p>Permission for the resource.</p>
type DataSetRowLevelPermissionTagRule struct {
	// <p>The column name that a tag key is assigned to.</p>
	ColumnName string `pulumi:"columnName"`
	// <p>A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>
	MatchAllValue *string `pulumi:"matchAllValue"`
	// <p>The unique key for a tag.</p>
	TagKey string `pulumi:"tagKey"`
	// <p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>
	TagMultiValueDelimiter *string `pulumi:"tagMultiValueDelimiter"`
}

// DataSetRowLevelPermissionTagRuleInput is an input type that accepts DataSetRowLevelPermissionTagRuleArgs and DataSetRowLevelPermissionTagRuleOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionTagRuleInput` via:
//
//	DataSetRowLevelPermissionTagRuleArgs{...}
type DataSetRowLevelPermissionTagRuleInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionTagRuleOutput() DataSetRowLevelPermissionTagRuleOutput
	ToDataSetRowLevelPermissionTagRuleOutputWithContext(context.Context) DataSetRowLevelPermissionTagRuleOutput
}

// <p>Permission for the resource.</p>
type DataSetRowLevelPermissionTagRuleArgs struct {
	// <p>The column name that a tag key is assigned to.</p>
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// <p>A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>
	MatchAllValue pulumi.StringPtrInput `pulumi:"matchAllValue"`
	// <p>The unique key for a tag.</p>
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// <p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>
	TagMultiValueDelimiter pulumi.StringPtrInput `pulumi:"tagMultiValueDelimiter"`
}

func (DataSetRowLevelPermissionTagRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionTagRule)(nil)).Elem()
}

func (i DataSetRowLevelPermissionTagRuleArgs) ToDataSetRowLevelPermissionTagRuleOutput() DataSetRowLevelPermissionTagRuleOutput {
	return i.ToDataSetRowLevelPermissionTagRuleOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionTagRuleArgs) ToDataSetRowLevelPermissionTagRuleOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionTagRuleOutput)
}

// DataSetRowLevelPermissionTagRuleArrayInput is an input type that accepts DataSetRowLevelPermissionTagRuleArray and DataSetRowLevelPermissionTagRuleArrayOutput values.
// You can construct a concrete instance of `DataSetRowLevelPermissionTagRuleArrayInput` via:
//
//	DataSetRowLevelPermissionTagRuleArray{ DataSetRowLevelPermissionTagRuleArgs{...} }
type DataSetRowLevelPermissionTagRuleArrayInput interface {
	pulumi.Input

	ToDataSetRowLevelPermissionTagRuleArrayOutput() DataSetRowLevelPermissionTagRuleArrayOutput
	ToDataSetRowLevelPermissionTagRuleArrayOutputWithContext(context.Context) DataSetRowLevelPermissionTagRuleArrayOutput
}

type DataSetRowLevelPermissionTagRuleArray []DataSetRowLevelPermissionTagRuleInput

func (DataSetRowLevelPermissionTagRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetRowLevelPermissionTagRule)(nil)).Elem()
}

func (i DataSetRowLevelPermissionTagRuleArray) ToDataSetRowLevelPermissionTagRuleArrayOutput() DataSetRowLevelPermissionTagRuleArrayOutput {
	return i.ToDataSetRowLevelPermissionTagRuleArrayOutputWithContext(context.Background())
}

func (i DataSetRowLevelPermissionTagRuleArray) ToDataSetRowLevelPermissionTagRuleArrayOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetRowLevelPermissionTagRuleArrayOutput)
}

// <p>Permission for the resource.</p>
type DataSetRowLevelPermissionTagRuleOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionTagRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetRowLevelPermissionTagRule)(nil)).Elem()
}

func (o DataSetRowLevelPermissionTagRuleOutput) ToDataSetRowLevelPermissionTagRuleOutput() DataSetRowLevelPermissionTagRuleOutput {
	return o
}

func (o DataSetRowLevelPermissionTagRuleOutput) ToDataSetRowLevelPermissionTagRuleOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagRuleOutput {
	return o
}

// <p>The column name that a tag key is assigned to.</p>
func (o DataSetRowLevelPermissionTagRuleOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagRule) string { return v.ColumnName }).(pulumi.StringOutput)
}

// <p>A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>
func (o DataSetRowLevelPermissionTagRuleOutput) MatchAllValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagRule) *string { return v.MatchAllValue }).(pulumi.StringPtrOutput)
}

// <p>The unique key for a tag.</p>
func (o DataSetRowLevelPermissionTagRuleOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagRule) string { return v.TagKey }).(pulumi.StringOutput)
}

// <p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>
func (o DataSetRowLevelPermissionTagRuleOutput) TagMultiValueDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetRowLevelPermissionTagRule) *string { return v.TagMultiValueDelimiter }).(pulumi.StringPtrOutput)
}

type DataSetRowLevelPermissionTagRuleArrayOutput struct{ *pulumi.OutputState }

func (DataSetRowLevelPermissionTagRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetRowLevelPermissionTagRule)(nil)).Elem()
}

func (o DataSetRowLevelPermissionTagRuleArrayOutput) ToDataSetRowLevelPermissionTagRuleArrayOutput() DataSetRowLevelPermissionTagRuleArrayOutput {
	return o
}

func (o DataSetRowLevelPermissionTagRuleArrayOutput) ToDataSetRowLevelPermissionTagRuleArrayOutputWithContext(ctx context.Context) DataSetRowLevelPermissionTagRuleArrayOutput {
	return o
}

func (o DataSetRowLevelPermissionTagRuleArrayOutput) Index(i pulumi.IntInput) DataSetRowLevelPermissionTagRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetRowLevelPermissionTagRule {
		return vs[0].([]DataSetRowLevelPermissionTagRule)[vs[1].(int)]
	}).(DataSetRowLevelPermissionTagRuleOutput)
}

// <p>A physical table type for as S3 data source.</p>
type DataSetS3Source struct {
	// <p>The amazon Resource Name (ARN) for the data source.</p>
	DataSourceArn string `pulumi:"dataSourceArn"`
	// <p>A physical table type for as S3 data source.</p>
	InputColumns   []DataSetInputColumn   `pulumi:"inputColumns"`
	UploadSettings *DataSetUploadSettings `pulumi:"uploadSettings"`
}

// DataSetS3SourceInput is an input type that accepts DataSetS3SourceArgs and DataSetS3SourceOutput values.
// You can construct a concrete instance of `DataSetS3SourceInput` via:
//
//	DataSetS3SourceArgs{...}
type DataSetS3SourceInput interface {
	pulumi.Input

	ToDataSetS3SourceOutput() DataSetS3SourceOutput
	ToDataSetS3SourceOutputWithContext(context.Context) DataSetS3SourceOutput
}

// <p>A physical table type for as S3 data source.</p>
type DataSetS3SourceArgs struct {
	// <p>The amazon Resource Name (ARN) for the data source.</p>
	DataSourceArn pulumi.StringInput `pulumi:"dataSourceArn"`
	// <p>A physical table type for as S3 data source.</p>
	InputColumns   DataSetInputColumnArrayInput  `pulumi:"inputColumns"`
	UploadSettings DataSetUploadSettingsPtrInput `pulumi:"uploadSettings"`
}

func (DataSetS3SourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetS3Source)(nil)).Elem()
}

func (i DataSetS3SourceArgs) ToDataSetS3SourceOutput() DataSetS3SourceOutput {
	return i.ToDataSetS3SourceOutputWithContext(context.Background())
}

func (i DataSetS3SourceArgs) ToDataSetS3SourceOutputWithContext(ctx context.Context) DataSetS3SourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourceOutput)
}

func (i DataSetS3SourceArgs) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return i.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (i DataSetS3SourceArgs) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourceOutput).ToDataSetS3SourcePtrOutputWithContext(ctx)
}

// DataSetS3SourcePtrInput is an input type that accepts DataSetS3SourceArgs, DataSetS3SourcePtr and DataSetS3SourcePtrOutput values.
// You can construct a concrete instance of `DataSetS3SourcePtrInput` via:
//
//	        DataSetS3SourceArgs{...}
//
//	or:
//
//	        nil
type DataSetS3SourcePtrInput interface {
	pulumi.Input

	ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput
	ToDataSetS3SourcePtrOutputWithContext(context.Context) DataSetS3SourcePtrOutput
}

type dataSetS3SourcePtrType DataSetS3SourceArgs

func DataSetS3SourcePtr(v *DataSetS3SourceArgs) DataSetS3SourcePtrInput {
	return (*dataSetS3SourcePtrType)(v)
}

func (*dataSetS3SourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetS3Source)(nil)).Elem()
}

func (i *dataSetS3SourcePtrType) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return i.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (i *dataSetS3SourcePtrType) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetS3SourcePtrOutput)
}

// <p>A physical table type for as S3 data source.</p>
type DataSetS3SourceOutput struct{ *pulumi.OutputState }

func (DataSetS3SourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetS3Source)(nil)).Elem()
}

func (o DataSetS3SourceOutput) ToDataSetS3SourceOutput() DataSetS3SourceOutput {
	return o
}

func (o DataSetS3SourceOutput) ToDataSetS3SourceOutputWithContext(ctx context.Context) DataSetS3SourceOutput {
	return o
}

func (o DataSetS3SourceOutput) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return o.ToDataSetS3SourcePtrOutputWithContext(context.Background())
}

func (o DataSetS3SourceOutput) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetS3Source) *DataSetS3Source {
		return &v
	}).(DataSetS3SourcePtrOutput)
}

// <p>The amazon Resource Name (ARN) for the data source.</p>
func (o DataSetS3SourceOutput) DataSourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetS3Source) string { return v.DataSourceArn }).(pulumi.StringOutput)
}

// <p>A physical table type for as S3 data source.</p>
func (o DataSetS3SourceOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v DataSetS3Source) []DataSetInputColumn { return v.InputColumns }).(DataSetInputColumnArrayOutput)
}

func (o DataSetS3SourceOutput) UploadSettings() DataSetUploadSettingsPtrOutput {
	return o.ApplyT(func(v DataSetS3Source) *DataSetUploadSettings { return v.UploadSettings }).(DataSetUploadSettingsPtrOutput)
}

type DataSetS3SourcePtrOutput struct{ *pulumi.OutputState }

func (DataSetS3SourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetS3Source)(nil)).Elem()
}

func (o DataSetS3SourcePtrOutput) ToDataSetS3SourcePtrOutput() DataSetS3SourcePtrOutput {
	return o
}

func (o DataSetS3SourcePtrOutput) ToDataSetS3SourcePtrOutputWithContext(ctx context.Context) DataSetS3SourcePtrOutput {
	return o
}

func (o DataSetS3SourcePtrOutput) Elem() DataSetS3SourceOutput {
	return o.ApplyT(func(v *DataSetS3Source) DataSetS3Source {
		if v != nil {
			return *v
		}
		var ret DataSetS3Source
		return ret
	}).(DataSetS3SourceOutput)
}

// <p>The amazon Resource Name (ARN) for the data source.</p>
func (o DataSetS3SourcePtrOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetS3Source) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceArn
	}).(pulumi.StringPtrOutput)
}

// <p>A physical table type for as S3 data source.</p>
func (o DataSetS3SourcePtrOutput) InputColumns() DataSetInputColumnArrayOutput {
	return o.ApplyT(func(v *DataSetS3Source) []DataSetInputColumn {
		if v == nil {
			return nil
		}
		return v.InputColumns
	}).(DataSetInputColumnArrayOutput)
}

func (o DataSetS3SourcePtrOutput) UploadSettings() DataSetUploadSettingsPtrOutput {
	return o.ApplyT(func(v *DataSetS3Source) *DataSetUploadSettings {
		if v == nil {
			return nil
		}
		return v.UploadSettings
	}).(DataSetUploadSettingsPtrOutput)
}

// <p>A parameter created in the dataset of string data type.</p>
type DataSetStringDatasetParameter struct {
	DefaultValues *DataSetStringDatasetParameterDefaultValues `pulumi:"defaultValues"`
	Id            string                                      `pulumi:"id"`
	Name          string                                      `pulumi:"name"`
	ValueType     DataSetDatasetParameterValueType            `pulumi:"valueType"`
}

// DataSetStringDatasetParameterInput is an input type that accepts DataSetStringDatasetParameterArgs and DataSetStringDatasetParameterOutput values.
// You can construct a concrete instance of `DataSetStringDatasetParameterInput` via:
//
//	DataSetStringDatasetParameterArgs{...}
type DataSetStringDatasetParameterInput interface {
	pulumi.Input

	ToDataSetStringDatasetParameterOutput() DataSetStringDatasetParameterOutput
	ToDataSetStringDatasetParameterOutputWithContext(context.Context) DataSetStringDatasetParameterOutput
}

// <p>A parameter created in the dataset of string data type.</p>
type DataSetStringDatasetParameterArgs struct {
	DefaultValues DataSetStringDatasetParameterDefaultValuesPtrInput `pulumi:"defaultValues"`
	Id            pulumi.StringInput                                 `pulumi:"id"`
	Name          pulumi.StringInput                                 `pulumi:"name"`
	ValueType     DataSetDatasetParameterValueTypeInput              `pulumi:"valueType"`
}

func (DataSetStringDatasetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStringDatasetParameter)(nil)).Elem()
}

func (i DataSetStringDatasetParameterArgs) ToDataSetStringDatasetParameterOutput() DataSetStringDatasetParameterOutput {
	return i.ToDataSetStringDatasetParameterOutputWithContext(context.Background())
}

func (i DataSetStringDatasetParameterArgs) ToDataSetStringDatasetParameterOutputWithContext(ctx context.Context) DataSetStringDatasetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterOutput)
}

func (i DataSetStringDatasetParameterArgs) ToDataSetStringDatasetParameterPtrOutput() DataSetStringDatasetParameterPtrOutput {
	return i.ToDataSetStringDatasetParameterPtrOutputWithContext(context.Background())
}

func (i DataSetStringDatasetParameterArgs) ToDataSetStringDatasetParameterPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterOutput).ToDataSetStringDatasetParameterPtrOutputWithContext(ctx)
}

// DataSetStringDatasetParameterPtrInput is an input type that accepts DataSetStringDatasetParameterArgs, DataSetStringDatasetParameterPtr and DataSetStringDatasetParameterPtrOutput values.
// You can construct a concrete instance of `DataSetStringDatasetParameterPtrInput` via:
//
//	        DataSetStringDatasetParameterArgs{...}
//
//	or:
//
//	        nil
type DataSetStringDatasetParameterPtrInput interface {
	pulumi.Input

	ToDataSetStringDatasetParameterPtrOutput() DataSetStringDatasetParameterPtrOutput
	ToDataSetStringDatasetParameterPtrOutputWithContext(context.Context) DataSetStringDatasetParameterPtrOutput
}

type dataSetStringDatasetParameterPtrType DataSetStringDatasetParameterArgs

func DataSetStringDatasetParameterPtr(v *DataSetStringDatasetParameterArgs) DataSetStringDatasetParameterPtrInput {
	return (*dataSetStringDatasetParameterPtrType)(v)
}

func (*dataSetStringDatasetParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetStringDatasetParameter)(nil)).Elem()
}

func (i *dataSetStringDatasetParameterPtrType) ToDataSetStringDatasetParameterPtrOutput() DataSetStringDatasetParameterPtrOutput {
	return i.ToDataSetStringDatasetParameterPtrOutputWithContext(context.Background())
}

func (i *dataSetStringDatasetParameterPtrType) ToDataSetStringDatasetParameterPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterPtrOutput)
}

// <p>A parameter created in the dataset of string data type.</p>
type DataSetStringDatasetParameterOutput struct{ *pulumi.OutputState }

func (DataSetStringDatasetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStringDatasetParameter)(nil)).Elem()
}

func (o DataSetStringDatasetParameterOutput) ToDataSetStringDatasetParameterOutput() DataSetStringDatasetParameterOutput {
	return o
}

func (o DataSetStringDatasetParameterOutput) ToDataSetStringDatasetParameterOutputWithContext(ctx context.Context) DataSetStringDatasetParameterOutput {
	return o
}

func (o DataSetStringDatasetParameterOutput) ToDataSetStringDatasetParameterPtrOutput() DataSetStringDatasetParameterPtrOutput {
	return o.ToDataSetStringDatasetParameterPtrOutputWithContext(context.Background())
}

func (o DataSetStringDatasetParameterOutput) ToDataSetStringDatasetParameterPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetStringDatasetParameter) *DataSetStringDatasetParameter {
		return &v
	}).(DataSetStringDatasetParameterPtrOutput)
}

func (o DataSetStringDatasetParameterOutput) DefaultValues() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o.ApplyT(func(v DataSetStringDatasetParameter) *DataSetStringDatasetParameterDefaultValues {
		return v.DefaultValues
	}).(DataSetStringDatasetParameterDefaultValuesPtrOutput)
}

func (o DataSetStringDatasetParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetStringDatasetParameter) string { return v.Id }).(pulumi.StringOutput)
}

func (o DataSetStringDatasetParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetStringDatasetParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DataSetStringDatasetParameterOutput) ValueType() DataSetDatasetParameterValueTypeOutput {
	return o.ApplyT(func(v DataSetStringDatasetParameter) DataSetDatasetParameterValueType { return v.ValueType }).(DataSetDatasetParameterValueTypeOutput)
}

type DataSetStringDatasetParameterPtrOutput struct{ *pulumi.OutputState }

func (DataSetStringDatasetParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetStringDatasetParameter)(nil)).Elem()
}

func (o DataSetStringDatasetParameterPtrOutput) ToDataSetStringDatasetParameterPtrOutput() DataSetStringDatasetParameterPtrOutput {
	return o
}

func (o DataSetStringDatasetParameterPtrOutput) ToDataSetStringDatasetParameterPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterPtrOutput {
	return o
}

func (o DataSetStringDatasetParameterPtrOutput) Elem() DataSetStringDatasetParameterOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameter) DataSetStringDatasetParameter {
		if v != nil {
			return *v
		}
		var ret DataSetStringDatasetParameter
		return ret
	}).(DataSetStringDatasetParameterOutput)
}

func (o DataSetStringDatasetParameterPtrOutput) DefaultValues() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameter) *DataSetStringDatasetParameterDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(DataSetStringDatasetParameterDefaultValuesPtrOutput)
}

func (o DataSetStringDatasetParameterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameter) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DataSetStringDatasetParameterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameter) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DataSetStringDatasetParameterPtrOutput) ValueType() DataSetDatasetParameterValueTypePtrOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameter) *DataSetDatasetParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ValueType
	}).(DataSetDatasetParameterValueTypePtrOutput)
}

// <p>List of default values defined for a given string dataset parameter type. Currently only static values are supported.</p>
type DataSetStringDatasetParameterDefaultValues struct {
	// <p>List of static default values defined for a given string dataset parameter type.</p>
	StaticValues []string `pulumi:"staticValues"`
}

// DataSetStringDatasetParameterDefaultValuesInput is an input type that accepts DataSetStringDatasetParameterDefaultValuesArgs and DataSetStringDatasetParameterDefaultValuesOutput values.
// You can construct a concrete instance of `DataSetStringDatasetParameterDefaultValuesInput` via:
//
//	DataSetStringDatasetParameterDefaultValuesArgs{...}
type DataSetStringDatasetParameterDefaultValuesInput interface {
	pulumi.Input

	ToDataSetStringDatasetParameterDefaultValuesOutput() DataSetStringDatasetParameterDefaultValuesOutput
	ToDataSetStringDatasetParameterDefaultValuesOutputWithContext(context.Context) DataSetStringDatasetParameterDefaultValuesOutput
}

// <p>List of default values defined for a given string dataset parameter type. Currently only static values are supported.</p>
type DataSetStringDatasetParameterDefaultValuesArgs struct {
	// <p>List of static default values defined for a given string dataset parameter type.</p>
	StaticValues pulumi.StringArrayInput `pulumi:"staticValues"`
}

func (DataSetStringDatasetParameterDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStringDatasetParameterDefaultValues)(nil)).Elem()
}

func (i DataSetStringDatasetParameterDefaultValuesArgs) ToDataSetStringDatasetParameterDefaultValuesOutput() DataSetStringDatasetParameterDefaultValuesOutput {
	return i.ToDataSetStringDatasetParameterDefaultValuesOutputWithContext(context.Background())
}

func (i DataSetStringDatasetParameterDefaultValuesArgs) ToDataSetStringDatasetParameterDefaultValuesOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterDefaultValuesOutput)
}

func (i DataSetStringDatasetParameterDefaultValuesArgs) ToDataSetStringDatasetParameterDefaultValuesPtrOutput() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return i.ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(context.Background())
}

func (i DataSetStringDatasetParameterDefaultValuesArgs) ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterDefaultValuesOutput).ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(ctx)
}

// DataSetStringDatasetParameterDefaultValuesPtrInput is an input type that accepts DataSetStringDatasetParameterDefaultValuesArgs, DataSetStringDatasetParameterDefaultValuesPtr and DataSetStringDatasetParameterDefaultValuesPtrOutput values.
// You can construct a concrete instance of `DataSetStringDatasetParameterDefaultValuesPtrInput` via:
//
//	        DataSetStringDatasetParameterDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type DataSetStringDatasetParameterDefaultValuesPtrInput interface {
	pulumi.Input

	ToDataSetStringDatasetParameterDefaultValuesPtrOutput() DataSetStringDatasetParameterDefaultValuesPtrOutput
	ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(context.Context) DataSetStringDatasetParameterDefaultValuesPtrOutput
}

type dataSetStringDatasetParameterDefaultValuesPtrType DataSetStringDatasetParameterDefaultValuesArgs

func DataSetStringDatasetParameterDefaultValuesPtr(v *DataSetStringDatasetParameterDefaultValuesArgs) DataSetStringDatasetParameterDefaultValuesPtrInput {
	return (*dataSetStringDatasetParameterDefaultValuesPtrType)(v)
}

func (*dataSetStringDatasetParameterDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetStringDatasetParameterDefaultValues)(nil)).Elem()
}

func (i *dataSetStringDatasetParameterDefaultValuesPtrType) ToDataSetStringDatasetParameterDefaultValuesPtrOutput() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return i.ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *dataSetStringDatasetParameterDefaultValuesPtrType) ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetStringDatasetParameterDefaultValuesPtrOutput)
}

// <p>List of default values defined for a given string dataset parameter type. Currently only static values are supported.</p>
type DataSetStringDatasetParameterDefaultValuesOutput struct{ *pulumi.OutputState }

func (DataSetStringDatasetParameterDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetStringDatasetParameterDefaultValues)(nil)).Elem()
}

func (o DataSetStringDatasetParameterDefaultValuesOutput) ToDataSetStringDatasetParameterDefaultValuesOutput() DataSetStringDatasetParameterDefaultValuesOutput {
	return o
}

func (o DataSetStringDatasetParameterDefaultValuesOutput) ToDataSetStringDatasetParameterDefaultValuesOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesOutput {
	return o
}

func (o DataSetStringDatasetParameterDefaultValuesOutput) ToDataSetStringDatasetParameterDefaultValuesPtrOutput() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o.ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(context.Background())
}

func (o DataSetStringDatasetParameterDefaultValuesOutput) ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetStringDatasetParameterDefaultValues) *DataSetStringDatasetParameterDefaultValues {
		return &v
	}).(DataSetStringDatasetParameterDefaultValuesPtrOutput)
}

// <p>List of static default values defined for a given string dataset parameter type.</p>
func (o DataSetStringDatasetParameterDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSetStringDatasetParameterDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type DataSetStringDatasetParameterDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (DataSetStringDatasetParameterDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetStringDatasetParameterDefaultValues)(nil)).Elem()
}

func (o DataSetStringDatasetParameterDefaultValuesPtrOutput) ToDataSetStringDatasetParameterDefaultValuesPtrOutput() DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o
}

func (o DataSetStringDatasetParameterDefaultValuesPtrOutput) ToDataSetStringDatasetParameterDefaultValuesPtrOutputWithContext(ctx context.Context) DataSetStringDatasetParameterDefaultValuesPtrOutput {
	return o
}

func (o DataSetStringDatasetParameterDefaultValuesPtrOutput) Elem() DataSetStringDatasetParameterDefaultValuesOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameterDefaultValues) DataSetStringDatasetParameterDefaultValues {
		if v != nil {
			return *v
		}
		var ret DataSetStringDatasetParameterDefaultValues
		return ret
	}).(DataSetStringDatasetParameterDefaultValuesOutput)
}

// <p>List of static default values defined for a given string dataset parameter type.</p>
func (o DataSetStringDatasetParameterDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSetStringDatasetParameterDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSetTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// <p>A transform operation that tags a column with additional information.</p>
type DataSetTagColumnOperation struct {
	// <p>The column that this operation acts on.</p>
	ColumnName string `pulumi:"columnName"`
	// <p>The dataset column tag, currently only used for geospatial type tagging. .</p>
	//         <note>
	//             <p>This is not tags for the AWS tagging feature. .</p>
	//         </note>
	Tags []DataSetColumnTag `pulumi:"tags"`
}

// DataSetTagColumnOperationInput is an input type that accepts DataSetTagColumnOperationArgs and DataSetTagColumnOperationOutput values.
// You can construct a concrete instance of `DataSetTagColumnOperationInput` via:
//
//	DataSetTagColumnOperationArgs{...}
type DataSetTagColumnOperationInput interface {
	pulumi.Input

	ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput
	ToDataSetTagColumnOperationOutputWithContext(context.Context) DataSetTagColumnOperationOutput
}

// <p>A transform operation that tags a column with additional information.</p>
type DataSetTagColumnOperationArgs struct {
	// <p>The column that this operation acts on.</p>
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// <p>The dataset column tag, currently only used for geospatial type tagging. .</p>
	//         <note>
	//             <p>This is not tags for the AWS tagging feature. .</p>
	//         </note>
	Tags DataSetColumnTagArrayInput `pulumi:"tags"`
}

func (DataSetTagColumnOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTagColumnOperation)(nil)).Elem()
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput {
	return i.ToDataSetTagColumnOperationOutputWithContext(context.Background())
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationOutputWithContext(ctx context.Context) DataSetTagColumnOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationOutput)
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return i.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (i DataSetTagColumnOperationArgs) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationOutput).ToDataSetTagColumnOperationPtrOutputWithContext(ctx)
}

// DataSetTagColumnOperationPtrInput is an input type that accepts DataSetTagColumnOperationArgs, DataSetTagColumnOperationPtr and DataSetTagColumnOperationPtrOutput values.
// You can construct a concrete instance of `DataSetTagColumnOperationPtrInput` via:
//
//	        DataSetTagColumnOperationArgs{...}
//
//	or:
//
//	        nil
type DataSetTagColumnOperationPtrInput interface {
	pulumi.Input

	ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput
	ToDataSetTagColumnOperationPtrOutputWithContext(context.Context) DataSetTagColumnOperationPtrOutput
}

type dataSetTagColumnOperationPtrType DataSetTagColumnOperationArgs

func DataSetTagColumnOperationPtr(v *DataSetTagColumnOperationArgs) DataSetTagColumnOperationPtrInput {
	return (*dataSetTagColumnOperationPtrType)(v)
}

func (*dataSetTagColumnOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTagColumnOperation)(nil)).Elem()
}

func (i *dataSetTagColumnOperationPtrType) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return i.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (i *dataSetTagColumnOperationPtrType) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTagColumnOperationPtrOutput)
}

// <p>A transform operation that tags a column with additional information.</p>
type DataSetTagColumnOperationOutput struct{ *pulumi.OutputState }

func (DataSetTagColumnOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTagColumnOperation)(nil)).Elem()
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationOutput() DataSetTagColumnOperationOutput {
	return o
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationOutputWithContext(ctx context.Context) DataSetTagColumnOperationOutput {
	return o
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return o.ToDataSetTagColumnOperationPtrOutputWithContext(context.Background())
}

func (o DataSetTagColumnOperationOutput) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetTagColumnOperation) *DataSetTagColumnOperation {
		return &v
	}).(DataSetTagColumnOperationPtrOutput)
}

// <p>The column that this operation acts on.</p>
func (o DataSetTagColumnOperationOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSetTagColumnOperation) string { return v.ColumnName }).(pulumi.StringOutput)
}

// <p>The dataset column tag, currently only used for geospatial type tagging. .</p>
//
//	<note>
//	    <p>This is not tags for the AWS tagging feature. .</p>
//	</note>
func (o DataSetTagColumnOperationOutput) Tags() DataSetColumnTagArrayOutput {
	return o.ApplyT(func(v DataSetTagColumnOperation) []DataSetColumnTag { return v.Tags }).(DataSetColumnTagArrayOutput)
}

type DataSetTagColumnOperationPtrOutput struct{ *pulumi.OutputState }

func (DataSetTagColumnOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetTagColumnOperation)(nil)).Elem()
}

func (o DataSetTagColumnOperationPtrOutput) ToDataSetTagColumnOperationPtrOutput() DataSetTagColumnOperationPtrOutput {
	return o
}

func (o DataSetTagColumnOperationPtrOutput) ToDataSetTagColumnOperationPtrOutputWithContext(ctx context.Context) DataSetTagColumnOperationPtrOutput {
	return o
}

func (o DataSetTagColumnOperationPtrOutput) Elem() DataSetTagColumnOperationOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) DataSetTagColumnOperation {
		if v != nil {
			return *v
		}
		var ret DataSetTagColumnOperation
		return ret
	}).(DataSetTagColumnOperationOutput)
}

// <p>The column that this operation acts on.</p>
func (o DataSetTagColumnOperationPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

// <p>The dataset column tag, currently only used for geospatial type tagging. .</p>
//
//	<note>
//	    <p>This is not tags for the AWS tagging feature. .</p>
//	</note>
func (o DataSetTagColumnOperationPtrOutput) Tags() DataSetColumnTagArrayOutput {
	return o.ApplyT(func(v *DataSetTagColumnOperation) []DataSetColumnTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DataSetColumnTagArrayOutput)
}

// <p>A data transformation on a logical table. This is a variant type structure. For this
//
//	structure to be valid, only one of the attributes can be non-null.</p>
type DataSetTransformOperation struct {
	CastColumnTypeOperation           *DataSetCastColumnTypeOperation           `pulumi:"castColumnTypeOperation"`
	CreateColumnsOperation            *DataSetCreateColumnsOperation            `pulumi:"createColumnsOperation"`
	FilterOperation                   *DataSetFilterOperation                   `pulumi:"filterOperation"`
	OverrideDatasetParameterOperation *DataSetOverrideDatasetParameterOperation `pulumi:"overrideDatasetParameterOperation"`
	ProjectOperation                  *DataSetProjectOperation                  `pulumi:"projectOperation"`
	RenameColumnOperation             *DataSetRenameColumnOperation             `pulumi:"renameColumnOperation"`
	TagColumnOperation                *DataSetTagColumnOperation                `pulumi:"tagColumnOperation"`
}

// DataSetTransformOperationInput is an input type that accepts DataSetTransformOperationArgs and DataSetTransformOperationOutput values.
// You can construct a concrete instance of `DataSetTransformOperationInput` via:
//
//	DataSetTransformOperationArgs{...}
type DataSetTransformOperationInput interface {
	pulumi.Input

	ToDataSetTransformOperationOutput() DataSetTransformOperationOutput
	ToDataSetTransformOperationOutputWithContext(context.Context) DataSetTransformOperationOutput
}

// <p>A data transformation on a logical table. This is a variant type structure. For this
//
//	structure to be valid, only one of the attributes can be non-null.</p>
type DataSetTransformOperationArgs struct {
	CastColumnTypeOperation           DataSetCastColumnTypeOperationPtrInput           `pulumi:"castColumnTypeOperation"`
	CreateColumnsOperation            DataSetCreateColumnsOperationPtrInput            `pulumi:"createColumnsOperation"`
	FilterOperation                   DataSetFilterOperationPtrInput                   `pulumi:"filterOperation"`
	OverrideDatasetParameterOperation DataSetOverrideDatasetParameterOperationPtrInput `pulumi:"overrideDatasetParameterOperation"`
	ProjectOperation                  DataSetProjectOperationPtrInput                  `pulumi:"projectOperation"`
	RenameColumnOperation             DataSetRenameColumnOperationPtrInput             `pulumi:"renameColumnOperation"`
	TagColumnOperation                DataSetTagColumnOperationPtrInput                `pulumi:"tagColumnOperation"`
}

func (DataSetTransformOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTransformOperation)(nil)).Elem()
}

func (i DataSetTransformOperationArgs) ToDataSetTransformOperationOutput() DataSetTransformOperationOutput {
	return i.ToDataSetTransformOperationOutputWithContext(context.Background())
}

func (i DataSetTransformOperationArgs) ToDataSetTransformOperationOutputWithContext(ctx context.Context) DataSetTransformOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTransformOperationOutput)
}

// DataSetTransformOperationArrayInput is an input type that accepts DataSetTransformOperationArray and DataSetTransformOperationArrayOutput values.
// You can construct a concrete instance of `DataSetTransformOperationArrayInput` via:
//
//	DataSetTransformOperationArray{ DataSetTransformOperationArgs{...} }
type DataSetTransformOperationArrayInput interface {
	pulumi.Input

	ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput
	ToDataSetTransformOperationArrayOutputWithContext(context.Context) DataSetTransformOperationArrayOutput
}

type DataSetTransformOperationArray []DataSetTransformOperationInput

func (DataSetTransformOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTransformOperation)(nil)).Elem()
}

func (i DataSetTransformOperationArray) ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput {
	return i.ToDataSetTransformOperationArrayOutputWithContext(context.Background())
}

func (i DataSetTransformOperationArray) ToDataSetTransformOperationArrayOutputWithContext(ctx context.Context) DataSetTransformOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetTransformOperationArrayOutput)
}

// <p>A data transformation on a logical table. This is a variant type structure. For this
//
//	structure to be valid, only one of the attributes can be non-null.</p>
type DataSetTransformOperationOutput struct{ *pulumi.OutputState }

func (DataSetTransformOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetTransformOperation)(nil)).Elem()
}

func (o DataSetTransformOperationOutput) ToDataSetTransformOperationOutput() DataSetTransformOperationOutput {
	return o
}

func (o DataSetTransformOperationOutput) ToDataSetTransformOperationOutputWithContext(ctx context.Context) DataSetTransformOperationOutput {
	return o
}

func (o DataSetTransformOperationOutput) CastColumnTypeOperation() DataSetCastColumnTypeOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetCastColumnTypeOperation { return v.CastColumnTypeOperation }).(DataSetCastColumnTypeOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) CreateColumnsOperation() DataSetCreateColumnsOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetCreateColumnsOperation { return v.CreateColumnsOperation }).(DataSetCreateColumnsOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) FilterOperation() DataSetFilterOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetFilterOperation { return v.FilterOperation }).(DataSetFilterOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) OverrideDatasetParameterOperation() DataSetOverrideDatasetParameterOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetOverrideDatasetParameterOperation {
		return v.OverrideDatasetParameterOperation
	}).(DataSetOverrideDatasetParameterOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) ProjectOperation() DataSetProjectOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetProjectOperation { return v.ProjectOperation }).(DataSetProjectOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) RenameColumnOperation() DataSetRenameColumnOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetRenameColumnOperation { return v.RenameColumnOperation }).(DataSetRenameColumnOperationPtrOutput)
}

func (o DataSetTransformOperationOutput) TagColumnOperation() DataSetTagColumnOperationPtrOutput {
	return o.ApplyT(func(v DataSetTransformOperation) *DataSetTagColumnOperation { return v.TagColumnOperation }).(DataSetTagColumnOperationPtrOutput)
}

type DataSetTransformOperationArrayOutput struct{ *pulumi.OutputState }

func (DataSetTransformOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSetTransformOperation)(nil)).Elem()
}

func (o DataSetTransformOperationArrayOutput) ToDataSetTransformOperationArrayOutput() DataSetTransformOperationArrayOutput {
	return o
}

func (o DataSetTransformOperationArrayOutput) ToDataSetTransformOperationArrayOutputWithContext(ctx context.Context) DataSetTransformOperationArrayOutput {
	return o
}

func (o DataSetTransformOperationArrayOutput) Index(i pulumi.IntInput) DataSetTransformOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSetTransformOperation {
		return vs[0].([]DataSetTransformOperation)[vs[1].(int)]
	}).(DataSetTransformOperationOutput)
}

// <p>Information about the format for a source file or files.</p>
type DataSetUploadSettings struct {
	// <p>Whether the file has a header row, or the files each have a header row.</p>
	ContainsHeader *bool `pulumi:"containsHeader"`
	// <p>The delimiter between values in the file.</p>
	Delimiter *string            `pulumi:"delimiter"`
	Format    *DataSetFileFormat `pulumi:"format"`
	// <p>A row number to start reading data from.</p>
	StartFromRow  *float64              `pulumi:"startFromRow"`
	TextQualifier *DataSetTextQualifier `pulumi:"textQualifier"`
}

// DataSetUploadSettingsInput is an input type that accepts DataSetUploadSettingsArgs and DataSetUploadSettingsOutput values.
// You can construct a concrete instance of `DataSetUploadSettingsInput` via:
//
//	DataSetUploadSettingsArgs{...}
type DataSetUploadSettingsInput interface {
	pulumi.Input

	ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput
	ToDataSetUploadSettingsOutputWithContext(context.Context) DataSetUploadSettingsOutput
}

// <p>Information about the format for a source file or files.</p>
type DataSetUploadSettingsArgs struct {
	// <p>Whether the file has a header row, or the files each have a header row.</p>
	ContainsHeader pulumi.BoolPtrInput `pulumi:"containsHeader"`
	// <p>The delimiter between values in the file.</p>
	Delimiter pulumi.StringPtrInput     `pulumi:"delimiter"`
	Format    DataSetFileFormatPtrInput `pulumi:"format"`
	// <p>A row number to start reading data from.</p>
	StartFromRow  pulumi.Float64PtrInput       `pulumi:"startFromRow"`
	TextQualifier DataSetTextQualifierPtrInput `pulumi:"textQualifier"`
}

func (DataSetUploadSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUploadSettings)(nil)).Elem()
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput {
	return i.ToDataSetUploadSettingsOutputWithContext(context.Background())
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsOutputWithContext(ctx context.Context) DataSetUploadSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsOutput)
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return i.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (i DataSetUploadSettingsArgs) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsOutput).ToDataSetUploadSettingsPtrOutputWithContext(ctx)
}

// DataSetUploadSettingsPtrInput is an input type that accepts DataSetUploadSettingsArgs, DataSetUploadSettingsPtr and DataSetUploadSettingsPtrOutput values.
// You can construct a concrete instance of `DataSetUploadSettingsPtrInput` via:
//
//	        DataSetUploadSettingsArgs{...}
//
//	or:
//
//	        nil
type DataSetUploadSettingsPtrInput interface {
	pulumi.Input

	ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput
	ToDataSetUploadSettingsPtrOutputWithContext(context.Context) DataSetUploadSettingsPtrOutput
}

type dataSetUploadSettingsPtrType DataSetUploadSettingsArgs

func DataSetUploadSettingsPtr(v *DataSetUploadSettingsArgs) DataSetUploadSettingsPtrInput {
	return (*dataSetUploadSettingsPtrType)(v)
}

func (*dataSetUploadSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUploadSettings)(nil)).Elem()
}

func (i *dataSetUploadSettingsPtrType) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return i.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (i *dataSetUploadSettingsPtrType) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUploadSettingsPtrOutput)
}

// <p>Information about the format for a source file or files.</p>
type DataSetUploadSettingsOutput struct{ *pulumi.OutputState }

func (DataSetUploadSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUploadSettings)(nil)).Elem()
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsOutput() DataSetUploadSettingsOutput {
	return o
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsOutputWithContext(ctx context.Context) DataSetUploadSettingsOutput {
	return o
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return o.ToDataSetUploadSettingsPtrOutputWithContext(context.Background())
}

func (o DataSetUploadSettingsOutput) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetUploadSettings) *DataSetUploadSettings {
		return &v
	}).(DataSetUploadSettingsPtrOutput)
}

// <p>Whether the file has a header row, or the files each have a header row.</p>
func (o DataSetUploadSettingsOutput) ContainsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *bool { return v.ContainsHeader }).(pulumi.BoolPtrOutput)
}

// <p>The delimiter between values in the file.</p>
func (o DataSetUploadSettingsOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DataSetUploadSettingsOutput) Format() DataSetFileFormatPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *DataSetFileFormat { return v.Format }).(DataSetFileFormatPtrOutput)
}

// <p>A row number to start reading data from.</p>
func (o DataSetUploadSettingsOutput) StartFromRow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *float64 { return v.StartFromRow }).(pulumi.Float64PtrOutput)
}

func (o DataSetUploadSettingsOutput) TextQualifier() DataSetTextQualifierPtrOutput {
	return o.ApplyT(func(v DataSetUploadSettings) *DataSetTextQualifier { return v.TextQualifier }).(DataSetTextQualifierPtrOutput)
}

type DataSetUploadSettingsPtrOutput struct{ *pulumi.OutputState }

func (DataSetUploadSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUploadSettings)(nil)).Elem()
}

func (o DataSetUploadSettingsPtrOutput) ToDataSetUploadSettingsPtrOutput() DataSetUploadSettingsPtrOutput {
	return o
}

func (o DataSetUploadSettingsPtrOutput) ToDataSetUploadSettingsPtrOutputWithContext(ctx context.Context) DataSetUploadSettingsPtrOutput {
	return o
}

func (o DataSetUploadSettingsPtrOutput) Elem() DataSetUploadSettingsOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) DataSetUploadSettings {
		if v != nil {
			return *v
		}
		var ret DataSetUploadSettings
		return ret
	}).(DataSetUploadSettingsOutput)
}

// <p>Whether the file has a header row, or the files each have a header row.</p>
func (o DataSetUploadSettingsPtrOutput) ContainsHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ContainsHeader
	}).(pulumi.BoolPtrOutput)
}

// <p>The delimiter between values in the file.</p>
func (o DataSetUploadSettingsPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o DataSetUploadSettingsPtrOutput) Format() DataSetFileFormatPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *DataSetFileFormat {
		if v == nil {
			return nil
		}
		return v.Format
	}).(DataSetFileFormatPtrOutput)
}

// <p>A row number to start reading data from.</p>
func (o DataSetUploadSettingsPtrOutput) StartFromRow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.StartFromRow
	}).(pulumi.Float64PtrOutput)
}

func (o DataSetUploadSettingsPtrOutput) TextQualifier() DataSetTextQualifierPtrOutput {
	return o.ApplyT(func(v *DataSetUploadSettings) *DataSetTextQualifier {
		if v == nil {
			return nil
		}
		return v.TextQualifier
	}).(DataSetTextQualifierPtrOutput)
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfiguration struct {
	DisableUseAsDirectQuerySource *bool `pulumi:"disableUseAsDirectQuerySource"`
	DisableUseAsImportedSource    *bool `pulumi:"disableUseAsImportedSource"`
}

// DataSetUsageConfigurationInput is an input type that accepts DataSetUsageConfigurationArgs and DataSetUsageConfigurationOutput values.
// You can construct a concrete instance of `DataSetUsageConfigurationInput` via:
//
//	DataSetUsageConfigurationArgs{...}
type DataSetUsageConfigurationInput interface {
	pulumi.Input

	ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput
	ToDataSetUsageConfigurationOutputWithContext(context.Context) DataSetUsageConfigurationOutput
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfigurationArgs struct {
	DisableUseAsDirectQuerySource pulumi.BoolPtrInput `pulumi:"disableUseAsDirectQuerySource"`
	DisableUseAsImportedSource    pulumi.BoolPtrInput `pulumi:"disableUseAsImportedSource"`
}

func (DataSetUsageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUsageConfiguration)(nil)).Elem()
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput {
	return i.ToDataSetUsageConfigurationOutputWithContext(context.Background())
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationOutputWithContext(ctx context.Context) DataSetUsageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationOutput)
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return i.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSetUsageConfigurationArgs) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationOutput).ToDataSetUsageConfigurationPtrOutputWithContext(ctx)
}

// DataSetUsageConfigurationPtrInput is an input type that accepts DataSetUsageConfigurationArgs, DataSetUsageConfigurationPtr and DataSetUsageConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSetUsageConfigurationPtrInput` via:
//
//	        DataSetUsageConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSetUsageConfigurationPtrInput interface {
	pulumi.Input

	ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput
	ToDataSetUsageConfigurationPtrOutputWithContext(context.Context) DataSetUsageConfigurationPtrOutput
}

type dataSetUsageConfigurationPtrType DataSetUsageConfigurationArgs

func DataSetUsageConfigurationPtr(v *DataSetUsageConfigurationArgs) DataSetUsageConfigurationPtrInput {
	return (*dataSetUsageConfigurationPtrType)(v)
}

func (*dataSetUsageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUsageConfiguration)(nil)).Elem()
}

func (i *dataSetUsageConfigurationPtrType) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return i.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSetUsageConfigurationPtrType) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSetUsageConfigurationPtrOutput)
}

// <p>The dataset usage configuration for the dataset.</p>
type DataSetUsageConfigurationOutput struct{ *pulumi.OutputState }

func (DataSetUsageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSetUsageConfiguration)(nil)).Elem()
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationOutput() DataSetUsageConfigurationOutput {
	return o
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationOutputWithContext(ctx context.Context) DataSetUsageConfigurationOutput {
	return o
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return o.ToDataSetUsageConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSetUsageConfigurationOutput) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSetUsageConfiguration) *DataSetUsageConfiguration {
		return &v
	}).(DataSetUsageConfigurationPtrOutput)
}

func (o DataSetUsageConfigurationOutput) DisableUseAsDirectQuerySource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUsageConfiguration) *bool { return v.DisableUseAsDirectQuerySource }).(pulumi.BoolPtrOutput)
}

func (o DataSetUsageConfigurationOutput) DisableUseAsImportedSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSetUsageConfiguration) *bool { return v.DisableUseAsImportedSource }).(pulumi.BoolPtrOutput)
}

type DataSetUsageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSetUsageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSetUsageConfiguration)(nil)).Elem()
}

func (o DataSetUsageConfigurationPtrOutput) ToDataSetUsageConfigurationPtrOutput() DataSetUsageConfigurationPtrOutput {
	return o
}

func (o DataSetUsageConfigurationPtrOutput) ToDataSetUsageConfigurationPtrOutputWithContext(ctx context.Context) DataSetUsageConfigurationPtrOutput {
	return o
}

func (o DataSetUsageConfigurationPtrOutput) Elem() DataSetUsageConfigurationOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) DataSetUsageConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSetUsageConfiguration
		return ret
	}).(DataSetUsageConfigurationOutput)
}

func (o DataSetUsageConfigurationPtrOutput) DisableUseAsDirectQuerySource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableUseAsDirectQuerySource
	}).(pulumi.BoolPtrOutput)
}

func (o DataSetUsageConfigurationPtrOutput) DisableUseAsImportedSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSetUsageConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableUseAsImportedSource
	}).(pulumi.BoolPtrOutput)
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParameters struct {
	// <p>The Amazon Elasticsearch Service domain.</p>
	Domain string `pulumi:"domain"`
}

// DataSourceAmazonElasticsearchParametersInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs and DataSourceAmazonElasticsearchParametersOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersInput` via:
//
//	DataSourceAmazonElasticsearchParametersArgs{...}
type DataSourceAmazonElasticsearchParametersInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput
	ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersOutput
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParametersArgs struct {
	// <p>The Amazon Elasticsearch Service domain.</p>
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (DataSourceAmazonElasticsearchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return i.ToDataSourceAmazonElasticsearchParametersOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput)
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAmazonElasticsearchParametersArgs) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersOutput).ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx)
}

// DataSourceAmazonElasticsearchParametersPtrInput is an input type that accepts DataSourceAmazonElasticsearchParametersArgs, DataSourceAmazonElasticsearchParametersPtr and DataSourceAmazonElasticsearchParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAmazonElasticsearchParametersPtrInput` via:
//
//	        DataSourceAmazonElasticsearchParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAmazonElasticsearchParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput
	ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Context) DataSourceAmazonElasticsearchParametersPtrOutput
}

type dataSourceAmazonElasticsearchParametersPtrType DataSourceAmazonElasticsearchParametersArgs

func DataSourceAmazonElasticsearchParametersPtr(v *DataSourceAmazonElasticsearchParametersArgs) DataSourceAmazonElasticsearchParametersPtrInput {
	return (*dataSourceAmazonElasticsearchParametersPtrType)(v)
}

func (*dataSourceAmazonElasticsearchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return i.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAmazonElasticsearchParametersPtrType) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// <p>Amazon Elasticsearch Service parameters.</p>
type DataSourceAmazonElasticsearchParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutput() DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAmazonElasticsearchParametersOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAmazonElasticsearchParameters) *DataSourceAmazonElasticsearchParameters {
		return &v
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

// <p>The Amazon Elasticsearch Service domain.</p>
func (o DataSourceAmazonElasticsearchParametersOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAmazonElasticsearchParameters) string { return v.Domain }).(pulumi.StringOutput)
}

type DataSourceAmazonElasticsearchParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonElasticsearchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonElasticsearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutput() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) ToDataSourceAmazonElasticsearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonElasticsearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonElasticsearchParametersPtrOutput) Elem() DataSourceAmazonElasticsearchParametersOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) DataSourceAmazonElasticsearchParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAmazonElasticsearchParameters
		return ret
	}).(DataSourceAmazonElasticsearchParametersOutput)
}

// <p>The Amazon Elasticsearch Service domain.</p>
func (o DataSourceAmazonElasticsearchParametersPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAmazonElasticsearchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParameters struct {
	// <p>The Amazon OpenSearch Service domain.</p>
	Domain string `pulumi:"domain"`
}

// DataSourceAmazonOpenSearchParametersInput is an input type that accepts DataSourceAmazonOpenSearchParametersArgs and DataSourceAmazonOpenSearchParametersOutput values.
// You can construct a concrete instance of `DataSourceAmazonOpenSearchParametersInput` via:
//
//	DataSourceAmazonOpenSearchParametersArgs{...}
type DataSourceAmazonOpenSearchParametersInput interface {
	pulumi.Input

	ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput
	ToDataSourceAmazonOpenSearchParametersOutputWithContext(context.Context) DataSourceAmazonOpenSearchParametersOutput
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParametersArgs struct {
	// <p>The Amazon OpenSearch Service domain.</p>
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (DataSourceAmazonOpenSearchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput {
	return i.ToDataSourceAmazonOpenSearchParametersOutputWithContext(context.Background())
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersOutput)
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return i.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAmazonOpenSearchParametersArgs) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersOutput).ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx)
}

// DataSourceAmazonOpenSearchParametersPtrInput is an input type that accepts DataSourceAmazonOpenSearchParametersArgs, DataSourceAmazonOpenSearchParametersPtr and DataSourceAmazonOpenSearchParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAmazonOpenSearchParametersPtrInput` via:
//
//	        DataSourceAmazonOpenSearchParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAmazonOpenSearchParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput
	ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Context) DataSourceAmazonOpenSearchParametersPtrOutput
}

type dataSourceAmazonOpenSearchParametersPtrType DataSourceAmazonOpenSearchParametersArgs

func DataSourceAmazonOpenSearchParametersPtr(v *DataSourceAmazonOpenSearchParametersArgs) DataSourceAmazonOpenSearchParametersPtrInput {
	return (*dataSourceAmazonOpenSearchParametersPtrType)(v)
}

func (*dataSourceAmazonOpenSearchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (i *dataSourceAmazonOpenSearchParametersPtrType) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return i.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAmazonOpenSearchParametersPtrType) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

// <p>Amazon OpenSearch Service parameters.</p>
type DataSourceAmazonOpenSearchParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonOpenSearchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersOutput() DataSourceAmazonOpenSearchParametersOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAmazonOpenSearchParametersOutput) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAmazonOpenSearchParameters) *DataSourceAmazonOpenSearchParameters {
		return &v
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

// <p>The Amazon OpenSearch Service domain.</p>
func (o DataSourceAmazonOpenSearchParametersOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAmazonOpenSearchParameters) string { return v.Domain }).(pulumi.StringOutput)
}

type DataSourceAmazonOpenSearchParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAmazonOpenSearchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAmazonOpenSearchParameters)(nil)).Elem()
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) ToDataSourceAmazonOpenSearchParametersPtrOutput() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) ToDataSourceAmazonOpenSearchParametersPtrOutputWithContext(ctx context.Context) DataSourceAmazonOpenSearchParametersPtrOutput {
	return o
}

func (o DataSourceAmazonOpenSearchParametersPtrOutput) Elem() DataSourceAmazonOpenSearchParametersOutput {
	return o.ApplyT(func(v *DataSourceAmazonOpenSearchParameters) DataSourceAmazonOpenSearchParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAmazonOpenSearchParameters
		return ret
	}).(DataSourceAmazonOpenSearchParametersOutput)
}

// <p>The Amazon OpenSearch Service domain.</p>
func (o DataSourceAmazonOpenSearchParametersPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAmazonOpenSearchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParameters struct {
	// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>
	RoleArn *string `pulumi:"roleArn"`
	// <p>The workgroup that Amazon Athena uses.</p>
	WorkGroup *string `pulumi:"workGroup"`
}

// DataSourceAthenaParametersInput is an input type that accepts DataSourceAthenaParametersArgs and DataSourceAthenaParametersOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersInput` via:
//
//	DataSourceAthenaParametersArgs{...}
type DataSourceAthenaParametersInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput
	ToDataSourceAthenaParametersOutputWithContext(context.Context) DataSourceAthenaParametersOutput
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParametersArgs struct {
	// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// <p>The workgroup that Amazon Athena uses.</p>
	WorkGroup pulumi.StringPtrInput `pulumi:"workGroup"`
}

func (DataSourceAthenaParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return i.ToDataSourceAthenaParametersOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput)
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAthenaParametersArgs) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersOutput).ToDataSourceAthenaParametersPtrOutputWithContext(ctx)
}

// DataSourceAthenaParametersPtrInput is an input type that accepts DataSourceAthenaParametersArgs, DataSourceAthenaParametersPtr and DataSourceAthenaParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAthenaParametersPtrInput` via:
//
//	        DataSourceAthenaParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAthenaParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput
	ToDataSourceAthenaParametersPtrOutputWithContext(context.Context) DataSourceAthenaParametersPtrOutput
}

type dataSourceAthenaParametersPtrType DataSourceAthenaParametersArgs

func DataSourceAthenaParametersPtr(v *DataSourceAthenaParametersArgs) DataSourceAthenaParametersPtrInput {
	return (*dataSourceAthenaParametersPtrType)(v)
}

func (*dataSourceAthenaParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return i.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAthenaParametersPtrType) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAthenaParametersPtrOutput)
}

// <p>Amazon Athena parameters.</p>
type DataSourceAthenaParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutput() DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersOutputWithContext(ctx context.Context) DataSourceAthenaParametersOutput {
	return o
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o.ToDataSourceAthenaParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAthenaParametersOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAthenaParameters) *DataSourceAthenaParameters {
		return &v
	}).(DataSourceAthenaParametersPtrOutput)
}

// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>
func (o DataSourceAthenaParametersOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAthenaParameters) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// <p>The workgroup that Amazon Athena uses.</p>
func (o DataSourceAthenaParametersOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceAthenaParameters) *string { return v.WorkGroup }).(pulumi.StringPtrOutput)
}

type DataSourceAthenaParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAthenaParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAthenaParameters)(nil)).Elem()
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutput() DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) ToDataSourceAthenaParametersPtrOutputWithContext(ctx context.Context) DataSourceAthenaParametersPtrOutput {
	return o
}

func (o DataSourceAthenaParametersPtrOutput) Elem() DataSourceAthenaParametersOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) DataSourceAthenaParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAthenaParameters
		return ret
	}).(DataSourceAthenaParametersOutput)
}

// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>
func (o DataSourceAthenaParametersPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// <p>The workgroup that Amazon Athena uses.</p>
func (o DataSourceAthenaParametersPtrOutput) WorkGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAthenaParameters) *string {
		if v == nil {
			return nil
		}
		return v.WorkGroup
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraParametersInput is an input type that accepts DataSourceAuroraParametersArgs and DataSourceAuroraParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersInput` via:
//
//	DataSourceAuroraParametersArgs{...}
type DataSourceAuroraParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput
	ToDataSourceAuroraParametersOutputWithContext(context.Context) DataSourceAuroraParametersOutput
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return i.ToDataSourceAuroraParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput)
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraParametersArgs) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersOutput).ToDataSourceAuroraParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraParametersPtrInput is an input type that accepts DataSourceAuroraParametersArgs, DataSourceAuroraParametersPtr and DataSourceAuroraParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraParametersPtrInput` via:
//
//	        DataSourceAuroraParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAuroraParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput
	ToDataSourceAuroraParametersPtrOutputWithContext(context.Context) DataSourceAuroraParametersPtrOutput
}

type dataSourceAuroraParametersPtrType DataSourceAuroraParametersArgs

func DataSourceAuroraParametersPtr(v *DataSourceAuroraParametersArgs) DataSourceAuroraParametersPtrInput {
	return (*dataSourceAuroraParametersPtrType)(v)
}

func (*dataSourceAuroraParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return i.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraParametersPtrType) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraParametersPtrOutput)
}

// <p>Amazon Aurora parameters.</p>
type DataSourceAuroraParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutput() DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersOutputWithContext(ctx context.Context) DataSourceAuroraParametersOutput {
	return o
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o.ToDataSourceAuroraParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraParametersOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraParameters) *DataSourceAuroraParameters {
		return &v
	}).(DataSourceAuroraParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraParameters)(nil)).Elem()
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutput() DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) ToDataSourceAuroraParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraParametersPtrOutput {
	return o
}

func (o DataSourceAuroraParametersPtrOutput) Elem() DataSourceAuroraParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) DataSourceAuroraParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraParameters
		return ret
	}).(DataSourceAuroraParametersOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceAuroraPostgreSqlParametersInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs and DataSourceAuroraPostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersInput` via:
//
//	DataSourceAuroraPostgreSqlParametersArgs{...}
type DataSourceAuroraPostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput
	ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersOutput
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceAuroraPostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput)
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceAuroraPostgreSqlParametersArgs) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersOutput).ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourceAuroraPostgreSqlParametersPtrInput is an input type that accepts DataSourceAuroraPostgreSqlParametersArgs, DataSourceAuroraPostgreSqlParametersPtr and DataSourceAuroraPostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceAuroraPostgreSqlParametersPtrInput` via:
//
//	        DataSourceAuroraPostgreSqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceAuroraPostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput
	ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput
}

type dataSourceAuroraPostgreSqlParametersPtrType DataSourceAuroraPostgreSqlParametersArgs

func DataSourceAuroraPostgreSqlParametersPtr(v *DataSourceAuroraPostgreSqlParametersArgs) DataSourceAuroraPostgreSqlParametersPtrInput {
	return (*dataSourceAuroraPostgreSqlParametersPtrType)(v)
}

func (*dataSourceAuroraPostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return i.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceAuroraPostgreSqlParametersPtrType) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
type DataSourceAuroraPostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutput() DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceAuroraPostgreSqlParametersOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceAuroraPostgreSqlParameters) *DataSourceAuroraPostgreSqlParameters {
		return &v
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraPostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceAuroraPostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceAuroraPostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceAuroraPostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceAuroraPostgreSqlParameters)(nil)).Elem()
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutput() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) ToDataSourceAuroraPostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Elem() DataSourceAuroraPostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) DataSourceAuroraPostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceAuroraPostgreSqlParameters
		return ret
	}).(DataSourceAuroraPostgreSqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceAuroraPostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceAuroraPostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPair struct {
	// <p>A set of alternate data source parameters that you want to share for these
	//             credentials. The credentials are applied in tandem with the data source parameters when
	//             you copy a data source by using a create or update request. The API operation compares
	//             the <code>DataSourceParameters</code> structure that's in the request with the
	//             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
	//             structures are an exact match, the request is allowed to use the new data source with
	//             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
	//             null, the <code>DataSourceParameters</code> originally used with these
	//                 <code>Credentials</code> is automatically allowed.</p>
	AlternateDataSourceParameters []DataSourceParameters `pulumi:"alternateDataSourceParameters"`
	// <p>Password.</p>
	Password string `pulumi:"password"`
	// <p>User name.</p>
	Username string `pulumi:"username"`
}

// DataSourceCredentialPairInput is an input type that accepts DataSourceCredentialPairArgs and DataSourceCredentialPairOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairInput` via:
//
//	DataSourceCredentialPairArgs{...}
type DataSourceCredentialPairInput interface {
	pulumi.Input

	ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput
	ToDataSourceCredentialPairOutputWithContext(context.Context) DataSourceCredentialPairOutput
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPairArgs struct {
	// <p>A set of alternate data source parameters that you want to share for these
	//             credentials. The credentials are applied in tandem with the data source parameters when
	//             you copy a data source by using a create or update request. The API operation compares
	//             the <code>DataSourceParameters</code> structure that's in the request with the
	//             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
	//             structures are an exact match, the request is allowed to use the new data source with
	//             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
	//             null, the <code>DataSourceParameters</code> originally used with these
	//                 <code>Credentials</code> is automatically allowed.</p>
	AlternateDataSourceParameters DataSourceParametersArrayInput `pulumi:"alternateDataSourceParameters"`
	// <p>Password.</p>
	Password pulumi.StringInput `pulumi:"password"`
	// <p>User name.</p>
	Username pulumi.StringInput `pulumi:"username"`
}

func (DataSourceCredentialPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return i.ToDataSourceCredentialPairOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput)
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i DataSourceCredentialPairArgs) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairOutput).ToDataSourceCredentialPairPtrOutputWithContext(ctx)
}

// DataSourceCredentialPairPtrInput is an input type that accepts DataSourceCredentialPairArgs, DataSourceCredentialPairPtr and DataSourceCredentialPairPtrOutput values.
// You can construct a concrete instance of `DataSourceCredentialPairPtrInput` via:
//
//	        DataSourceCredentialPairArgs{...}
//
//	or:
//
//	        nil
type DataSourceCredentialPairPtrInput interface {
	pulumi.Input

	ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput
	ToDataSourceCredentialPairPtrOutputWithContext(context.Context) DataSourceCredentialPairPtrOutput
}

type dataSourceCredentialPairPtrType DataSourceCredentialPairArgs

func DataSourceCredentialPairPtr(v *DataSourceCredentialPairArgs) DataSourceCredentialPairPtrInput {
	return (*dataSourceCredentialPairPtrType)(v)
}

func (*dataSourceCredentialPairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return i.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (i *dataSourceCredentialPairPtrType) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialPairPtrOutput)
}

// <p>The combination of user name and password that are used as credentials.</p>
type DataSourceCredentialPairOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutput() DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairOutputWithContext(ctx context.Context) DataSourceCredentialPairOutput {
	return o
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o.ToDataSourceCredentialPairPtrOutputWithContext(context.Background())
}

func (o DataSourceCredentialPairOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCredentialPair) *DataSourceCredentialPair {
		return &v
	}).(DataSourceCredentialPairPtrOutput)
}

// <p>A set of alternate data source parameters that you want to share for these
//
//	credentials. The credentials are applied in tandem with the data source parameters when
//	you copy a data source by using a create or update request. The API operation compares
//	the <code>DataSourceParameters</code> structure that's in the request with the
//	structures in the <code>AlternateDataSourceParameters</code> allow list. If the
//	structures are an exact match, the request is allowed to use the new data source with
//	the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
//	null, the <code>DataSourceParameters</code> originally used with these
//	    <code>Credentials</code> is automatically allowed.</p>
func (o DataSourceCredentialPairOutput) AlternateDataSourceParameters() DataSourceParametersArrayOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) []DataSourceParameters { return v.AlternateDataSourceParameters }).(DataSourceParametersArrayOutput)
}

// <p>Password.</p>
func (o DataSourceCredentialPairOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Password }).(pulumi.StringOutput)
}

// <p>User name.</p>
func (o DataSourceCredentialPairOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceCredentialPair) string { return v.Username }).(pulumi.StringOutput)
}

type DataSourceCredentialPairPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialPairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentialPair)(nil)).Elem()
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutput() DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) ToDataSourceCredentialPairPtrOutputWithContext(ctx context.Context) DataSourceCredentialPairPtrOutput {
	return o
}

func (o DataSourceCredentialPairPtrOutput) Elem() DataSourceCredentialPairOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) DataSourceCredentialPair {
		if v != nil {
			return *v
		}
		var ret DataSourceCredentialPair
		return ret
	}).(DataSourceCredentialPairOutput)
}

// <p>A set of alternate data source parameters that you want to share for these
//
//	credentials. The credentials are applied in tandem with the data source parameters when
//	you copy a data source by using a create or update request. The API operation compares
//	the <code>DataSourceParameters</code> structure that's in the request with the
//	structures in the <code>AlternateDataSourceParameters</code> allow list. If the
//	structures are an exact match, the request is allowed to use the new data source with
//	the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
//	null, the <code>DataSourceParameters</code> originally used with these
//	    <code>Credentials</code> is automatically allowed.</p>
func (o DataSourceCredentialPairPtrOutput) AlternateDataSourceParameters() DataSourceParametersArrayOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) []DataSourceParameters {
		if v == nil {
			return nil
		}
		return v.AlternateDataSourceParameters
	}).(DataSourceParametersArrayOutput)
}

// <p>Password.</p>
func (o DataSourceCredentialPairPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// <p>User name.</p>
func (o DataSourceCredentialPairPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentialPair) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentials struct {
	// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
	//             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
	//             data source in the ARN is used as the credentials for the
	//             <code>DataSourceCredentials</code> structure.</p>
	CopySourceArn  *string                   `pulumi:"copySourceArn"`
	CredentialPair *DataSourceCredentialPair `pulumi:"credentialPair"`
	// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
	SecretArn *string `pulumi:"secretArn"`
}

// DataSourceCredentialsInput is an input type that accepts DataSourceCredentialsArgs and DataSourceCredentialsOutput values.
// You can construct a concrete instance of `DataSourceCredentialsInput` via:
//
//	DataSourceCredentialsArgs{...}
type DataSourceCredentialsInput interface {
	pulumi.Input

	ToDataSourceCredentialsOutput() DataSourceCredentialsOutput
	ToDataSourceCredentialsOutputWithContext(context.Context) DataSourceCredentialsOutput
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentialsArgs struct {
	// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
	//             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
	//             data source in the ARN is used as the credentials for the
	//             <code>DataSourceCredentials</code> structure.</p>
	CopySourceArn  pulumi.StringPtrInput            `pulumi:"copySourceArn"`
	CredentialPair DataSourceCredentialPairPtrInput `pulumi:"credentialPair"`
	// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DataSourceCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentials)(nil)).Elem()
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsOutput() DataSourceCredentialsOutput {
	return i.ToDataSourceCredentialsOutputWithContext(context.Background())
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsOutput)
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return i.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i DataSourceCredentialsArgs) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsOutput).ToDataSourceCredentialsPtrOutputWithContext(ctx)
}

// DataSourceCredentialsPtrInput is an input type that accepts DataSourceCredentialsArgs, DataSourceCredentialsPtr and DataSourceCredentialsPtrOutput values.
// You can construct a concrete instance of `DataSourceCredentialsPtrInput` via:
//
//	        DataSourceCredentialsArgs{...}
//
//	or:
//
//	        nil
type DataSourceCredentialsPtrInput interface {
	pulumi.Input

	ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput
	ToDataSourceCredentialsPtrOutputWithContext(context.Context) DataSourceCredentialsPtrOutput
}

type dataSourceCredentialsPtrType DataSourceCredentialsArgs

func DataSourceCredentialsPtr(v *DataSourceCredentialsArgs) DataSourceCredentialsPtrInput {
	return (*dataSourceCredentialsPtrType)(v)
}

func (*dataSourceCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentials)(nil)).Elem()
}

func (i *dataSourceCredentialsPtrType) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return i.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (i *dataSourceCredentialsPtrType) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCredentialsPtrOutput)
}

// <p>Data source credentials. This is a variant type structure. For this structure to be
//
//	valid, only one of the attributes can be non-null.</p>
type DataSourceCredentialsOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCredentials)(nil)).Elem()
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsOutput() DataSourceCredentialsOutput {
	return o
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsOutputWithContext(ctx context.Context) DataSourceCredentialsOutput {
	return o
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return o.ToDataSourceCredentialsPtrOutputWithContext(context.Background())
}

func (o DataSourceCredentialsOutput) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCredentials) *DataSourceCredentials {
		return &v
	}).(DataSourceCredentialsPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
//
//	want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
//	data source in the ARN is used as the credentials for the
//	<code>DataSourceCredentials</code> structure.</p>
func (o DataSourceCredentialsOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *string { return v.CopySourceArn }).(pulumi.StringPtrOutput)
}

func (o DataSourceCredentialsOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *DataSourceCredentialPair { return v.CredentialPair }).(DataSourceCredentialPairPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
func (o DataSourceCredentialsOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceCredentials) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DataSourceCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCredentials)(nil)).Elem()
}

func (o DataSourceCredentialsPtrOutput) ToDataSourceCredentialsPtrOutput() DataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceCredentialsPtrOutput) ToDataSourceCredentialsPtrOutputWithContext(ctx context.Context) DataSourceCredentialsPtrOutput {
	return o
}

func (o DataSourceCredentialsPtrOutput) Elem() DataSourceCredentialsOutput {
	return o.ApplyT(func(v *DataSourceCredentials) DataSourceCredentials {
		if v != nil {
			return *v
		}
		var ret DataSourceCredentials
		return ret
	}).(DataSourceCredentialsOutput)
}

// <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
//
//	want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
//	data source in the ARN is used as the credentials for the
//	<code>DataSourceCredentials</code> structure.</p>
func (o DataSourceCredentialsPtrOutput) CopySourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.CopySourceArn
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceCredentialsPtrOutput) CredentialPair() DataSourceCredentialPairPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *DataSourceCredentialPair {
		if v == nil {
			return nil
		}
		return v.CredentialPair
	}).(DataSourceCredentialPairPtrOutput)
}

// <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
func (o DataSourceCredentialsPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParameters struct {
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
	// <p>The HTTP Path of the Databricks data source.</p>
	SqlEndpointPath string `pulumi:"sqlEndpointPath"`
}

// DataSourceDatabricksParametersInput is an input type that accepts DataSourceDatabricksParametersArgs and DataSourceDatabricksParametersOutput values.
// You can construct a concrete instance of `DataSourceDatabricksParametersInput` via:
//
//	DataSourceDatabricksParametersArgs{...}
type DataSourceDatabricksParametersInput interface {
	pulumi.Input

	ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput
	ToDataSourceDatabricksParametersOutputWithContext(context.Context) DataSourceDatabricksParametersOutput
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParametersArgs struct {
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
	// <p>The HTTP Path of the Databricks data source.</p>
	SqlEndpointPath pulumi.StringInput `pulumi:"sqlEndpointPath"`
}

func (DataSourceDatabricksParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabricksParameters)(nil)).Elem()
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput {
	return i.ToDataSourceDatabricksParametersOutputWithContext(context.Background())
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersOutputWithContext(ctx context.Context) DataSourceDatabricksParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersOutput)
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return i.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceDatabricksParametersArgs) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersOutput).ToDataSourceDatabricksParametersPtrOutputWithContext(ctx)
}

// DataSourceDatabricksParametersPtrInput is an input type that accepts DataSourceDatabricksParametersArgs, DataSourceDatabricksParametersPtr and DataSourceDatabricksParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceDatabricksParametersPtrInput` via:
//
//	        DataSourceDatabricksParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceDatabricksParametersPtrInput interface {
	pulumi.Input

	ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput
	ToDataSourceDatabricksParametersPtrOutputWithContext(context.Context) DataSourceDatabricksParametersPtrOutput
}

type dataSourceDatabricksParametersPtrType DataSourceDatabricksParametersArgs

func DataSourceDatabricksParametersPtr(v *DataSourceDatabricksParametersArgs) DataSourceDatabricksParametersPtrInput {
	return (*dataSourceDatabricksParametersPtrType)(v)
}

func (*dataSourceDatabricksParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDatabricksParameters)(nil)).Elem()
}

func (i *dataSourceDatabricksParametersPtrType) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return i.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceDatabricksParametersPtrType) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDatabricksParametersPtrOutput)
}

// <p>Databricks parameters.</p>
type DataSourceDatabricksParametersOutput struct{ *pulumi.OutputState }

func (DataSourceDatabricksParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabricksParameters)(nil)).Elem()
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersOutput() DataSourceDatabricksParametersOutput {
	return o
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersOutputWithContext(ctx context.Context) DataSourceDatabricksParametersOutput {
	return o
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return o.ToDataSourceDatabricksParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceDatabricksParametersOutput) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDatabricksParameters) *DataSourceDatabricksParameters {
		return &v
	}).(DataSourceDatabricksParametersPtrOutput)
}

// <p>Host.</p>
func (o DataSourceDatabricksParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDatabricksParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceDatabricksParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceDatabricksParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

// <p>The HTTP Path of the Databricks data source.</p>
func (o DataSourceDatabricksParametersOutput) SqlEndpointPath() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDatabricksParameters) string { return v.SqlEndpointPath }).(pulumi.StringOutput)
}

type DataSourceDatabricksParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDatabricksParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDatabricksParameters)(nil)).Elem()
}

func (o DataSourceDatabricksParametersPtrOutput) ToDataSourceDatabricksParametersPtrOutput() DataSourceDatabricksParametersPtrOutput {
	return o
}

func (o DataSourceDatabricksParametersPtrOutput) ToDataSourceDatabricksParametersPtrOutputWithContext(ctx context.Context) DataSourceDatabricksParametersPtrOutput {
	return o
}

func (o DataSourceDatabricksParametersPtrOutput) Elem() DataSourceDatabricksParametersOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) DataSourceDatabricksParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceDatabricksParameters
		return ret
	}).(DataSourceDatabricksParametersOutput)
}

// <p>Host.</p>
func (o DataSourceDatabricksParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceDatabricksParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The HTTP Path of the Databricks data source.</p>
func (o DataSourceDatabricksParametersPtrOutput) SqlEndpointPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDatabricksParameters) *string {
		if v == nil {
			return nil
		}
		return &v.SqlEndpointPath
	}).(pulumi.StringPtrOutput)
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfo struct {
	// <p>Error message.</p>
	Message *string                  `pulumi:"message"`
	Type    *DataSourceErrorInfoType `pulumi:"type"`
}

// DataSourceErrorInfoInput is an input type that accepts DataSourceErrorInfoArgs and DataSourceErrorInfoOutput values.
// You can construct a concrete instance of `DataSourceErrorInfoInput` via:
//
//	DataSourceErrorInfoArgs{...}
type DataSourceErrorInfoInput interface {
	pulumi.Input

	ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput
	ToDataSourceErrorInfoOutputWithContext(context.Context) DataSourceErrorInfoOutput
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfoArgs struct {
	// <p>Error message.</p>
	Message pulumi.StringPtrInput           `pulumi:"message"`
	Type    DataSourceErrorInfoTypePtrInput `pulumi:"type"`
}

func (DataSourceErrorInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfo)(nil)).Elem()
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput {
	return i.ToDataSourceErrorInfoOutputWithContext(context.Background())
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceErrorInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoOutput)
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return i.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i DataSourceErrorInfoArgs) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoOutput).ToDataSourceErrorInfoPtrOutputWithContext(ctx)
}

// DataSourceErrorInfoPtrInput is an input type that accepts DataSourceErrorInfoArgs, DataSourceErrorInfoPtr and DataSourceErrorInfoPtrOutput values.
// You can construct a concrete instance of `DataSourceErrorInfoPtrInput` via:
//
//	        DataSourceErrorInfoArgs{...}
//
//	or:
//
//	        nil
type DataSourceErrorInfoPtrInput interface {
	pulumi.Input

	ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput
	ToDataSourceErrorInfoPtrOutputWithContext(context.Context) DataSourceErrorInfoPtrOutput
}

type dataSourceErrorInfoPtrType DataSourceErrorInfoArgs

func DataSourceErrorInfoPtr(v *DataSourceErrorInfoArgs) DataSourceErrorInfoPtrInput {
	return (*dataSourceErrorInfoPtrType)(v)
}

func (*dataSourceErrorInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfo)(nil)).Elem()
}

func (i *dataSourceErrorInfoPtrType) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return i.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (i *dataSourceErrorInfoPtrType) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceErrorInfoPtrOutput)
}

// <p>Error information for the data source creation or update.</p>
type DataSourceErrorInfoOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoOutput() DataSourceErrorInfoOutput {
	return o
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoOutputWithContext(ctx context.Context) DataSourceErrorInfoOutput {
	return o
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return o.ToDataSourceErrorInfoPtrOutputWithContext(context.Background())
}

func (o DataSourceErrorInfoOutput) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceErrorInfo) *DataSourceErrorInfo {
		return &v
	}).(DataSourceErrorInfoPtrOutput)
}

// <p>Error message.</p>
func (o DataSourceErrorInfoOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceErrorInfo) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o DataSourceErrorInfoOutput) Type() DataSourceErrorInfoTypePtrOutput {
	return o.ApplyT(func(v DataSourceErrorInfo) *DataSourceErrorInfoType { return v.Type }).(DataSourceErrorInfoTypePtrOutput)
}

type DataSourceErrorInfoPtrOutput struct{ *pulumi.OutputState }

func (DataSourceErrorInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceErrorInfo)(nil)).Elem()
}

func (o DataSourceErrorInfoPtrOutput) ToDataSourceErrorInfoPtrOutput() DataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceErrorInfoPtrOutput) ToDataSourceErrorInfoPtrOutputWithContext(ctx context.Context) DataSourceErrorInfoPtrOutput {
	return o
}

func (o DataSourceErrorInfoPtrOutput) Elem() DataSourceErrorInfoOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) DataSourceErrorInfo {
		if v != nil {
			return *v
		}
		var ret DataSourceErrorInfo
		return ret
	}).(DataSourceErrorInfoOutput)
}

// <p>Error message.</p>
func (o DataSourceErrorInfoPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceErrorInfoPtrOutput) Type() DataSourceErrorInfoTypePtrOutput {
	return o.ApplyT(func(v *DataSourceErrorInfo) *DataSourceErrorInfoType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(DataSourceErrorInfoTypePtrOutput)
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocation struct {
	// <p>Amazon S3 bucket.</p>
	Bucket string `pulumi:"bucket"`
	// <p>Amazon S3 key that identifies an object.</p>
	Key string `pulumi:"key"`
}

// DataSourceManifestFileLocationInput is an input type that accepts DataSourceManifestFileLocationArgs and DataSourceManifestFileLocationOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationInput` via:
//
//	DataSourceManifestFileLocationArgs{...}
type DataSourceManifestFileLocationInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput
	ToDataSourceManifestFileLocationOutputWithContext(context.Context) DataSourceManifestFileLocationOutput
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocationArgs struct {
	// <p>Amazon S3 bucket.</p>
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// <p>Amazon S3 key that identifies an object.</p>
	Key pulumi.StringInput `pulumi:"key"`
}

func (DataSourceManifestFileLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return i.ToDataSourceManifestFileLocationOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput)
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i DataSourceManifestFileLocationArgs) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationOutput).ToDataSourceManifestFileLocationPtrOutputWithContext(ctx)
}

// DataSourceManifestFileLocationPtrInput is an input type that accepts DataSourceManifestFileLocationArgs, DataSourceManifestFileLocationPtr and DataSourceManifestFileLocationPtrOutput values.
// You can construct a concrete instance of `DataSourceManifestFileLocationPtrInput` via:
//
//	        DataSourceManifestFileLocationArgs{...}
//
//	or:
//
//	        nil
type DataSourceManifestFileLocationPtrInput interface {
	pulumi.Input

	ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput
	ToDataSourceManifestFileLocationPtrOutputWithContext(context.Context) DataSourceManifestFileLocationPtrOutput
}

type dataSourceManifestFileLocationPtrType DataSourceManifestFileLocationArgs

func DataSourceManifestFileLocationPtr(v *DataSourceManifestFileLocationArgs) DataSourceManifestFileLocationPtrInput {
	return (*dataSourceManifestFileLocationPtrType)(v)
}

func (*dataSourceManifestFileLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return i.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (i *dataSourceManifestFileLocationPtrType) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Amazon S3 manifest file location.</p>
type DataSourceManifestFileLocationOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutput() DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationOutputWithContext(ctx context.Context) DataSourceManifestFileLocationOutput {
	return o
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o.ToDataSourceManifestFileLocationPtrOutputWithContext(context.Background())
}

func (o DataSourceManifestFileLocationOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceManifestFileLocation) *DataSourceManifestFileLocation {
		return &v
	}).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Amazon S3 bucket.</p>
func (o DataSourceManifestFileLocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Bucket }).(pulumi.StringOutput)
}

// <p>Amazon S3 key that identifies an object.</p>
func (o DataSourceManifestFileLocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceManifestFileLocation) string { return v.Key }).(pulumi.StringOutput)
}

type DataSourceManifestFileLocationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceManifestFileLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceManifestFileLocation)(nil)).Elem()
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutput() DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) ToDataSourceManifestFileLocationPtrOutputWithContext(ctx context.Context) DataSourceManifestFileLocationPtrOutput {
	return o
}

func (o DataSourceManifestFileLocationPtrOutput) Elem() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) DataSourceManifestFileLocation {
		if v != nil {
			return *v
		}
		var ret DataSourceManifestFileLocation
		return ret
	}).(DataSourceManifestFileLocationOutput)
}

// <p>Amazon S3 bucket.</p>
func (o DataSourceManifestFileLocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon S3 key that identifies an object.</p>
func (o DataSourceManifestFileLocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceManifestFileLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceMariaDbParametersInput is an input type that accepts DataSourceMariaDbParametersArgs and DataSourceMariaDbParametersOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersInput` via:
//
//	DataSourceMariaDbParametersArgs{...}
type DataSourceMariaDbParametersInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput
	ToDataSourceMariaDbParametersOutputWithContext(context.Context) DataSourceMariaDbParametersOutput
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMariaDbParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return i.ToDataSourceMariaDbParametersOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput)
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMariaDbParametersArgs) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersOutput).ToDataSourceMariaDbParametersPtrOutputWithContext(ctx)
}

// DataSourceMariaDbParametersPtrInput is an input type that accepts DataSourceMariaDbParametersArgs, DataSourceMariaDbParametersPtr and DataSourceMariaDbParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMariaDbParametersPtrInput` via:
//
//	        DataSourceMariaDbParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceMariaDbParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput
	ToDataSourceMariaDbParametersPtrOutputWithContext(context.Context) DataSourceMariaDbParametersPtrOutput
}

type dataSourceMariaDbParametersPtrType DataSourceMariaDbParametersArgs

func DataSourceMariaDbParametersPtr(v *DataSourceMariaDbParametersArgs) DataSourceMariaDbParametersPtrInput {
	return (*dataSourceMariaDbParametersPtrType)(v)
}

func (*dataSourceMariaDbParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return i.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMariaDbParametersPtrType) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMariaDbParametersPtrOutput)
}

// <p>MariaDB parameters.</p>
type DataSourceMariaDbParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutput() DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersOutputWithContext(ctx context.Context) DataSourceMariaDbParametersOutput {
	return o
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o.ToDataSourceMariaDbParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMariaDbParametersOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMariaDbParameters) *DataSourceMariaDbParameters {
		return &v
	}).(DataSourceMariaDbParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceMariaDbParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceMariaDbParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMariaDbParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceMariaDbParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMariaDbParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMariaDbParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMariaDbParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMariaDbParameters)(nil)).Elem()
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutput() DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) ToDataSourceMariaDbParametersPtrOutputWithContext(ctx context.Context) DataSourceMariaDbParametersPtrOutput {
	return o
}

func (o DataSourceMariaDbParametersPtrOutput) Elem() DataSourceMariaDbParametersOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) DataSourceMariaDbParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMariaDbParameters
		return ret
	}).(DataSourceMariaDbParametersOutput)
}

// <p>Database.</p>
func (o DataSourceMariaDbParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceMariaDbParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceMariaDbParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMariaDbParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceMySqlParametersInput is an input type that accepts DataSourceMySqlParametersArgs and DataSourceMySqlParametersOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersInput` via:
//
//	DataSourceMySqlParametersArgs{...}
type DataSourceMySqlParametersInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput
	ToDataSourceMySqlParametersOutputWithContext(context.Context) DataSourceMySqlParametersOutput
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceMySqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return i.ToDataSourceMySqlParametersOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput)
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceMySqlParametersArgs) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersOutput).ToDataSourceMySqlParametersPtrOutputWithContext(ctx)
}

// DataSourceMySqlParametersPtrInput is an input type that accepts DataSourceMySqlParametersArgs, DataSourceMySqlParametersPtr and DataSourceMySqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceMySqlParametersPtrInput` via:
//
//	        DataSourceMySqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceMySqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput
	ToDataSourceMySqlParametersPtrOutputWithContext(context.Context) DataSourceMySqlParametersPtrOutput
}

type dataSourceMySqlParametersPtrType DataSourceMySqlParametersArgs

func DataSourceMySqlParametersPtr(v *DataSourceMySqlParametersArgs) DataSourceMySqlParametersPtrInput {
	return (*dataSourceMySqlParametersPtrType)(v)
}

func (*dataSourceMySqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return i.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceMySqlParametersPtrType) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMySqlParametersPtrOutput)
}

// <p>MySQL parameters.</p>
type DataSourceMySqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutput() DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersOutputWithContext(ctx context.Context) DataSourceMySqlParametersOutput {
	return o
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o.ToDataSourceMySqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceMySqlParametersOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceMySqlParameters) *DataSourceMySqlParameters {
		return &v
	}).(DataSourceMySqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceMySqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceMySqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceMySqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceMySqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceMySqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceMySqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceMySqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceMySqlParameters)(nil)).Elem()
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutput() DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) ToDataSourceMySqlParametersPtrOutputWithContext(ctx context.Context) DataSourceMySqlParametersPtrOutput {
	return o
}

func (o DataSourceMySqlParametersPtrOutput) Elem() DataSourceMySqlParametersOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) DataSourceMySqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceMySqlParameters
		return ret
	}).(DataSourceMySqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourceMySqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceMySqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceMySqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceMySqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

type DataSourceOracleParameters struct {
	Database string  `pulumi:"database"`
	Host     string  `pulumi:"host"`
	Port     float64 `pulumi:"port"`
}

// DataSourceOracleParametersInput is an input type that accepts DataSourceOracleParametersArgs and DataSourceOracleParametersOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersInput` via:
//
//	DataSourceOracleParametersArgs{...}
type DataSourceOracleParametersInput interface {
	pulumi.Input

	ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput
	ToDataSourceOracleParametersOutputWithContext(context.Context) DataSourceOracleParametersOutput
}

type DataSourceOracleParametersArgs struct {
	Database pulumi.StringInput  `pulumi:"database"`
	Host     pulumi.StringInput  `pulumi:"host"`
	Port     pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceOracleParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return i.ToDataSourceOracleParametersOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput)
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceOracleParametersArgs) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersOutput).ToDataSourceOracleParametersPtrOutputWithContext(ctx)
}

// DataSourceOracleParametersPtrInput is an input type that accepts DataSourceOracleParametersArgs, DataSourceOracleParametersPtr and DataSourceOracleParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceOracleParametersPtrInput` via:
//
//	        DataSourceOracleParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceOracleParametersPtrInput interface {
	pulumi.Input

	ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput
	ToDataSourceOracleParametersPtrOutputWithContext(context.Context) DataSourceOracleParametersPtrOutput
}

type dataSourceOracleParametersPtrType DataSourceOracleParametersArgs

func DataSourceOracleParametersPtr(v *DataSourceOracleParametersArgs) DataSourceOracleParametersPtrInput {
	return (*dataSourceOracleParametersPtrType)(v)
}

func (*dataSourceOracleParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return i.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceOracleParametersPtrType) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOracleParametersPtrOutput)
}

type DataSourceOracleParametersOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutput() DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersOutputWithContext(ctx context.Context) DataSourceOracleParametersOutput {
	return o
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o.ToDataSourceOracleParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceOracleParametersOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceOracleParameters) *DataSourceOracleParameters {
		return &v
	}).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceOracleParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Database }).(pulumi.StringOutput)
}

func (o DataSourceOracleParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOracleParameters) string { return v.Host }).(pulumi.StringOutput)
}

func (o DataSourceOracleParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceOracleParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceOracleParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceOracleParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOracleParameters)(nil)).Elem()
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutput() DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) ToDataSourceOracleParametersPtrOutputWithContext(ctx context.Context) DataSourceOracleParametersPtrOutput {
	return o
}

func (o DataSourceOracleParametersPtrOutput) Elem() DataSourceOracleParametersOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) DataSourceOracleParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceOracleParameters
		return ret
	}).(DataSourceOracleParametersOutput)
}

func (o DataSourceOracleParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceOracleParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceOracleParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceOracleParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParameters struct {
	AmazonElasticsearchParameters *DataSourceAmazonElasticsearchParameters `pulumi:"amazonElasticsearchParameters"`
	AmazonOpenSearchParameters    *DataSourceAmazonOpenSearchParameters    `pulumi:"amazonOpenSearchParameters"`
	AthenaParameters              *DataSourceAthenaParameters              `pulumi:"athenaParameters"`
	AuroraParameters              *DataSourceAuroraParameters              `pulumi:"auroraParameters"`
	AuroraPostgreSqlParameters    *DataSourceAuroraPostgreSqlParameters    `pulumi:"auroraPostgreSqlParameters"`
	DatabricksParameters          *DataSourceDatabricksParameters          `pulumi:"databricksParameters"`
	MariaDbParameters             *DataSourceMariaDbParameters             `pulumi:"mariaDbParameters"`
	MySqlParameters               *DataSourceMySqlParameters               `pulumi:"mySqlParameters"`
	OracleParameters              *DataSourceOracleParameters              `pulumi:"oracleParameters"`
	PostgreSqlParameters          *DataSourcePostgreSqlParameters          `pulumi:"postgreSqlParameters"`
	PrestoParameters              *DataSourcePrestoParameters              `pulumi:"prestoParameters"`
	RdsParameters                 *DataSourceRdsParameters                 `pulumi:"rdsParameters"`
	RedshiftParameters            *DataSourceRedshiftParameters            `pulumi:"redshiftParameters"`
	S3Parameters                  *DataSourceS3Parameters                  `pulumi:"s3Parameters"`
	SnowflakeParameters           *DataSourceSnowflakeParameters           `pulumi:"snowflakeParameters"`
	SparkParameters               *DataSourceSparkParameters               `pulumi:"sparkParameters"`
	SqlServerParameters           *DataSourceSqlServerParameters           `pulumi:"sqlServerParameters"`
	StarburstParameters           *DataSourceStarburstParameters           `pulumi:"starburstParameters"`
	TeradataParameters            *DataSourceTeradataParameters            `pulumi:"teradataParameters"`
	TrinoParameters               *DataSourceTrinoParameters               `pulumi:"trinoParameters"`
}

// DataSourceParametersInput is an input type that accepts DataSourceParametersArgs and DataSourceParametersOutput values.
// You can construct a concrete instance of `DataSourceParametersInput` via:
//
//	DataSourceParametersArgs{...}
type DataSourceParametersInput interface {
	pulumi.Input

	ToDataSourceParametersOutput() DataSourceParametersOutput
	ToDataSourceParametersOutputWithContext(context.Context) DataSourceParametersOutput
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParametersArgs struct {
	AmazonElasticsearchParameters DataSourceAmazonElasticsearchParametersPtrInput `pulumi:"amazonElasticsearchParameters"`
	AmazonOpenSearchParameters    DataSourceAmazonOpenSearchParametersPtrInput    `pulumi:"amazonOpenSearchParameters"`
	AthenaParameters              DataSourceAthenaParametersPtrInput              `pulumi:"athenaParameters"`
	AuroraParameters              DataSourceAuroraParametersPtrInput              `pulumi:"auroraParameters"`
	AuroraPostgreSqlParameters    DataSourceAuroraPostgreSqlParametersPtrInput    `pulumi:"auroraPostgreSqlParameters"`
	DatabricksParameters          DataSourceDatabricksParametersPtrInput          `pulumi:"databricksParameters"`
	MariaDbParameters             DataSourceMariaDbParametersPtrInput             `pulumi:"mariaDbParameters"`
	MySqlParameters               DataSourceMySqlParametersPtrInput               `pulumi:"mySqlParameters"`
	OracleParameters              DataSourceOracleParametersPtrInput              `pulumi:"oracleParameters"`
	PostgreSqlParameters          DataSourcePostgreSqlParametersPtrInput          `pulumi:"postgreSqlParameters"`
	PrestoParameters              DataSourcePrestoParametersPtrInput              `pulumi:"prestoParameters"`
	RdsParameters                 DataSourceRdsParametersPtrInput                 `pulumi:"rdsParameters"`
	RedshiftParameters            DataSourceRedshiftParametersPtrInput            `pulumi:"redshiftParameters"`
	S3Parameters                  DataSourceS3ParametersPtrInput                  `pulumi:"s3Parameters"`
	SnowflakeParameters           DataSourceSnowflakeParametersPtrInput           `pulumi:"snowflakeParameters"`
	SparkParameters               DataSourceSparkParametersPtrInput               `pulumi:"sparkParameters"`
	SqlServerParameters           DataSourceSqlServerParametersPtrInput           `pulumi:"sqlServerParameters"`
	StarburstParameters           DataSourceStarburstParametersPtrInput           `pulumi:"starburstParameters"`
	TeradataParameters            DataSourceTeradataParametersPtrInput            `pulumi:"teradataParameters"`
	TrinoParameters               DataSourceTrinoParametersPtrInput               `pulumi:"trinoParameters"`
}

func (DataSourceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParameters)(nil)).Elem()
}

func (i DataSourceParametersArgs) ToDataSourceParametersOutput() DataSourceParametersOutput {
	return i.ToDataSourceParametersOutputWithContext(context.Background())
}

func (i DataSourceParametersArgs) ToDataSourceParametersOutputWithContext(ctx context.Context) DataSourceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersOutput)
}

func (i DataSourceParametersArgs) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return i.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceParametersArgs) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersOutput).ToDataSourceParametersPtrOutputWithContext(ctx)
}

// DataSourceParametersPtrInput is an input type that accepts DataSourceParametersArgs, DataSourceParametersPtr and DataSourceParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceParametersPtrInput` via:
//
//	        DataSourceParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceParametersPtrInput interface {
	pulumi.Input

	ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput
	ToDataSourceParametersPtrOutputWithContext(context.Context) DataSourceParametersPtrOutput
}

type dataSourceParametersPtrType DataSourceParametersArgs

func DataSourceParametersPtr(v *DataSourceParametersArgs) DataSourceParametersPtrInput {
	return (*dataSourceParametersPtrType)(v)
}

func (*dataSourceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParameters)(nil)).Elem()
}

func (i *dataSourceParametersPtrType) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return i.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceParametersPtrType) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersPtrOutput)
}

// DataSourceParametersArrayInput is an input type that accepts DataSourceParametersArray and DataSourceParametersArrayOutput values.
// You can construct a concrete instance of `DataSourceParametersArrayInput` via:
//
//	DataSourceParametersArray{ DataSourceParametersArgs{...} }
type DataSourceParametersArrayInput interface {
	pulumi.Input

	ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput
	ToDataSourceParametersArrayOutputWithContext(context.Context) DataSourceParametersArrayOutput
}

type DataSourceParametersArray []DataSourceParametersInput

func (DataSourceParametersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceParameters)(nil)).Elem()
}

func (i DataSourceParametersArray) ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput {
	return i.ToDataSourceParametersArrayOutputWithContext(context.Background())
}

func (i DataSourceParametersArray) ToDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceParametersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParametersArrayOutput)
}

// <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
//
//	This is a variant type structure. For this structure to be valid, only one of the
//	attributes can be non-null.</p>
type DataSourceParametersOutput struct{ *pulumi.OutputState }

func (DataSourceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersOutput) ToDataSourceParametersOutput() DataSourceParametersOutput {
	return o
}

func (o DataSourceParametersOutput) ToDataSourceParametersOutputWithContext(ctx context.Context) DataSourceParametersOutput {
	return o
}

func (o DataSourceParametersOutput) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return o.ToDataSourceParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceParametersOutput) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceParameters) *DataSourceParameters {
		return &v
	}).(DataSourceParametersPtrOutput)
}

func (o DataSourceParametersOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

func (o DataSourceParametersOutput) AmazonOpenSearchParameters() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAmazonOpenSearchParameters {
		return v.AmazonOpenSearchParameters
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

func (o DataSourceParametersOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAthenaParameters { return v.AthenaParameters }).(DataSourceAthenaParametersPtrOutput)
}

func (o DataSourceParametersOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAuroraParameters { return v.AuroraParameters }).(DataSourceAuroraParametersPtrOutput)
}

func (o DataSourceParametersOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) DatabricksParameters() DataSourceDatabricksParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceDatabricksParameters { return v.DatabricksParameters }).(DataSourceDatabricksParametersPtrOutput)
}

func (o DataSourceParametersOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceMariaDbParameters { return v.MariaDbParameters }).(DataSourceMariaDbParametersPtrOutput)
}

func (o DataSourceParametersOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceMySqlParameters { return v.MySqlParameters }).(DataSourceMySqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceOracleParameters { return v.OracleParameters }).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceParametersOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourcePostgreSqlParameters { return v.PostgreSqlParameters }).(DataSourcePostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourcePrestoParameters { return v.PrestoParameters }).(DataSourcePrestoParametersPtrOutput)
}

func (o DataSourceParametersOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceRdsParameters { return v.RdsParameters }).(DataSourceRdsParametersPtrOutput)
}

func (o DataSourceParametersOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceRedshiftParameters { return v.RedshiftParameters }).(DataSourceRedshiftParametersPtrOutput)
}

func (o DataSourceParametersOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceS3Parameters { return v.S3Parameters }).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceParametersOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSnowflakeParameters { return v.SnowflakeParameters }).(DataSourceSnowflakeParametersPtrOutput)
}

func (o DataSourceParametersOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSparkParameters { return v.SparkParameters }).(DataSourceSparkParametersPtrOutput)
}

func (o DataSourceParametersOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceSqlServerParameters { return v.SqlServerParameters }).(DataSourceSqlServerParametersPtrOutput)
}

func (o DataSourceParametersOutput) StarburstParameters() DataSourceStarburstParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceStarburstParameters { return v.StarburstParameters }).(DataSourceStarburstParametersPtrOutput)
}

func (o DataSourceParametersOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceTeradataParameters { return v.TeradataParameters }).(DataSourceTeradataParametersPtrOutput)
}

func (o DataSourceParametersOutput) TrinoParameters() DataSourceTrinoParametersPtrOutput {
	return o.ApplyT(func(v DataSourceParameters) *DataSourceTrinoParameters { return v.TrinoParameters }).(DataSourceTrinoParametersPtrOutput)
}

type DataSourceParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersPtrOutput) ToDataSourceParametersPtrOutput() DataSourceParametersPtrOutput {
	return o
}

func (o DataSourceParametersPtrOutput) ToDataSourceParametersPtrOutputWithContext(ctx context.Context) DataSourceParametersPtrOutput {
	return o
}

func (o DataSourceParametersPtrOutput) Elem() DataSourceParametersOutput {
	return o.ApplyT(func(v *DataSourceParameters) DataSourceParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceParameters
		return ret
	}).(DataSourceParametersOutput)
}

func (o DataSourceParametersPtrOutput) AmazonElasticsearchParameters() DataSourceAmazonElasticsearchParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAmazonElasticsearchParameters {
		if v == nil {
			return nil
		}
		return v.AmazonElasticsearchParameters
	}).(DataSourceAmazonElasticsearchParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AmazonOpenSearchParameters() DataSourceAmazonOpenSearchParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAmazonOpenSearchParameters {
		if v == nil {
			return nil
		}
		return v.AmazonOpenSearchParameters
	}).(DataSourceAmazonOpenSearchParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AthenaParameters() DataSourceAthenaParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAthenaParameters {
		if v == nil {
			return nil
		}
		return v.AthenaParameters
	}).(DataSourceAthenaParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AuroraParameters() DataSourceAuroraParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAuroraParameters {
		if v == nil {
			return nil
		}
		return v.AuroraParameters
	}).(DataSourceAuroraParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) AuroraPostgreSqlParameters() DataSourceAuroraPostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceAuroraPostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.AuroraPostgreSqlParameters
	}).(DataSourceAuroraPostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) DatabricksParameters() DataSourceDatabricksParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceDatabricksParameters {
		if v == nil {
			return nil
		}
		return v.DatabricksParameters
	}).(DataSourceDatabricksParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) MariaDbParameters() DataSourceMariaDbParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceMariaDbParameters {
		if v == nil {
			return nil
		}
		return v.MariaDbParameters
	}).(DataSourceMariaDbParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) MySqlParameters() DataSourceMySqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceMySqlParameters {
		if v == nil {
			return nil
		}
		return v.MySqlParameters
	}).(DataSourceMySqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) OracleParameters() DataSourceOracleParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceOracleParameters {
		if v == nil {
			return nil
		}
		return v.OracleParameters
	}).(DataSourceOracleParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) PostgreSqlParameters() DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourcePostgreSqlParameters {
		if v == nil {
			return nil
		}
		return v.PostgreSqlParameters
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) PrestoParameters() DataSourcePrestoParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourcePrestoParameters {
		if v == nil {
			return nil
		}
		return v.PrestoParameters
	}).(DataSourcePrestoParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) RdsParameters() DataSourceRdsParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceRdsParameters {
		if v == nil {
			return nil
		}
		return v.RdsParameters
	}).(DataSourceRdsParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) RedshiftParameters() DataSourceRedshiftParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceRedshiftParameters {
		if v == nil {
			return nil
		}
		return v.RedshiftParameters
	}).(DataSourceRedshiftParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) S3Parameters() DataSourceS3ParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceS3Parameters {
		if v == nil {
			return nil
		}
		return v.S3Parameters
	}).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SnowflakeParameters() DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSnowflakeParameters {
		if v == nil {
			return nil
		}
		return v.SnowflakeParameters
	}).(DataSourceSnowflakeParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SparkParameters() DataSourceSparkParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSparkParameters {
		if v == nil {
			return nil
		}
		return v.SparkParameters
	}).(DataSourceSparkParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) SqlServerParameters() DataSourceSqlServerParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceSqlServerParameters {
		if v == nil {
			return nil
		}
		return v.SqlServerParameters
	}).(DataSourceSqlServerParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) StarburstParameters() DataSourceStarburstParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceStarburstParameters {
		if v == nil {
			return nil
		}
		return v.StarburstParameters
	}).(DataSourceStarburstParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) TeradataParameters() DataSourceTeradataParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceTeradataParameters {
		if v == nil {
			return nil
		}
		return v.TeradataParameters
	}).(DataSourceTeradataParametersPtrOutput)
}

func (o DataSourceParametersPtrOutput) TrinoParameters() DataSourceTrinoParametersPtrOutput {
	return o.ApplyT(func(v *DataSourceParameters) *DataSourceTrinoParameters {
		if v == nil {
			return nil
		}
		return v.TrinoParameters
	}).(DataSourceTrinoParametersPtrOutput)
}

type DataSourceParametersArrayOutput struct{ *pulumi.OutputState }

func (DataSourceParametersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceParameters)(nil)).Elem()
}

func (o DataSourceParametersArrayOutput) ToDataSourceParametersArrayOutput() DataSourceParametersArrayOutput {
	return o
}

func (o DataSourceParametersArrayOutput) ToDataSourceParametersArrayOutputWithContext(ctx context.Context) DataSourceParametersArrayOutput {
	return o
}

func (o DataSourceParametersArrayOutput) Index(i pulumi.IntInput) DataSourceParametersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceParameters {
		return vs[0].([]DataSourceParameters)[vs[1].(int)]
	}).(DataSourceParametersOutput)
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourcePostgreSqlParametersInput is an input type that accepts DataSourcePostgreSqlParametersArgs and DataSourcePostgreSqlParametersOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersInput` via:
//
//	DataSourcePostgreSqlParametersArgs{...}
type DataSourcePostgreSqlParametersInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput
	ToDataSourcePostgreSqlParametersOutputWithContext(context.Context) DataSourcePostgreSqlParametersOutput
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePostgreSqlParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return i.ToDataSourcePostgreSqlParametersOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput)
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePostgreSqlParametersArgs) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersOutput).ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx)
}

// DataSourcePostgreSqlParametersPtrInput is an input type that accepts DataSourcePostgreSqlParametersArgs, DataSourcePostgreSqlParametersPtr and DataSourcePostgreSqlParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePostgreSqlParametersPtrInput` via:
//
//	        DataSourcePostgreSqlParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourcePostgreSqlParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput
	ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Context) DataSourcePostgreSqlParametersPtrOutput
}

type dataSourcePostgreSqlParametersPtrType DataSourcePostgreSqlParametersArgs

func DataSourcePostgreSqlParametersPtr(v *DataSourcePostgreSqlParametersArgs) DataSourcePostgreSqlParametersPtrInput {
	return (*dataSourcePostgreSqlParametersPtrType)(v)
}

func (*dataSourcePostgreSqlParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return i.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePostgreSqlParametersPtrType) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePostgreSqlParametersPtrOutput)
}

// <p>PostgreSQL parameters.</p>
type DataSourcePostgreSqlParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutput() DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersOutput {
	return o
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o.ToDataSourcePostgreSqlParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePostgreSqlParametersOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePostgreSqlParameters) *DataSourcePostgreSqlParameters {
		return &v
	}).(DataSourcePostgreSqlParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourcePostgreSqlParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourcePostgreSqlParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourcePostgreSqlParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePostgreSqlParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePostgreSqlParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePostgreSqlParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePostgreSqlParameters)(nil)).Elem()
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutput() DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) ToDataSourcePostgreSqlParametersPtrOutputWithContext(ctx context.Context) DataSourcePostgreSqlParametersPtrOutput {
	return o
}

func (o DataSourcePostgreSqlParametersPtrOutput) Elem() DataSourcePostgreSqlParametersOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) DataSourcePostgreSqlParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePostgreSqlParameters
		return ret
	}).(DataSourcePostgreSqlParametersOutput)
}

// <p>Database.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourcePostgreSqlParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePostgreSqlParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Presto parameters.</p>
type DataSourcePrestoParameters struct {
	// <p>Catalog.</p>
	Catalog string `pulumi:"catalog"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourcePrestoParametersInput is an input type that accepts DataSourcePrestoParametersArgs and DataSourcePrestoParametersOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersInput` via:
//
//	DataSourcePrestoParametersArgs{...}
type DataSourcePrestoParametersInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput
	ToDataSourcePrestoParametersOutputWithContext(context.Context) DataSourcePrestoParametersOutput
}

// <p>Presto parameters.</p>
type DataSourcePrestoParametersArgs struct {
	// <p>Catalog.</p>
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourcePrestoParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return i.ToDataSourcePrestoParametersOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput)
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i DataSourcePrestoParametersArgs) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersOutput).ToDataSourcePrestoParametersPtrOutputWithContext(ctx)
}

// DataSourcePrestoParametersPtrInput is an input type that accepts DataSourcePrestoParametersArgs, DataSourcePrestoParametersPtr and DataSourcePrestoParametersPtrOutput values.
// You can construct a concrete instance of `DataSourcePrestoParametersPtrInput` via:
//
//	        DataSourcePrestoParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourcePrestoParametersPtrInput interface {
	pulumi.Input

	ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput
	ToDataSourcePrestoParametersPtrOutputWithContext(context.Context) DataSourcePrestoParametersPtrOutput
}

type dataSourcePrestoParametersPtrType DataSourcePrestoParametersArgs

func DataSourcePrestoParametersPtr(v *DataSourcePrestoParametersArgs) DataSourcePrestoParametersPtrInput {
	return (*dataSourcePrestoParametersPtrType)(v)
}

func (*dataSourcePrestoParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return i.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourcePrestoParametersPtrType) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePrestoParametersPtrOutput)
}

// <p>Presto parameters.</p>
type DataSourcePrestoParametersOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutput() DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersOutputWithContext(ctx context.Context) DataSourcePrestoParametersOutput {
	return o
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o.ToDataSourcePrestoParametersPtrOutputWithContext(context.Background())
}

func (o DataSourcePrestoParametersOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePrestoParameters) *DataSourcePrestoParameters {
		return &v
	}).(DataSourcePrestoParametersPtrOutput)
}

// <p>Catalog.</p>
func (o DataSourcePrestoParametersOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Catalog }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourcePrestoParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePrestoParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourcePrestoParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourcePrestoParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourcePrestoParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePrestoParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePrestoParameters)(nil)).Elem()
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutput() DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) ToDataSourcePrestoParametersPtrOutputWithContext(ctx context.Context) DataSourcePrestoParametersPtrOutput {
	return o
}

func (o DataSourcePrestoParametersPtrOutput) Elem() DataSourcePrestoParametersOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) DataSourcePrestoParameters {
		if v != nil {
			return *v
		}
		var ret DataSourcePrestoParameters
		return ret
	}).(DataSourcePrestoParametersOutput)
}

// <p>Catalog.</p>
func (o DataSourcePrestoParametersPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourcePrestoParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourcePrestoParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourcePrestoParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Instance ID.</p>
	InstanceId string `pulumi:"instanceId"`
}

// DataSourceRdsParametersInput is an input type that accepts DataSourceRdsParametersArgs and DataSourceRdsParametersOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersInput` via:
//
//	DataSourceRdsParametersArgs{...}
type DataSourceRdsParametersInput interface {
	pulumi.Input

	ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput
	ToDataSourceRdsParametersOutputWithContext(context.Context) DataSourceRdsParametersOutput
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Instance ID.</p>
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (DataSourceRdsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return i.ToDataSourceRdsParametersOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput)
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRdsParametersArgs) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersOutput).ToDataSourceRdsParametersPtrOutputWithContext(ctx)
}

// DataSourceRdsParametersPtrInput is an input type that accepts DataSourceRdsParametersArgs, DataSourceRdsParametersPtr and DataSourceRdsParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRdsParametersPtrInput` via:
//
//	        DataSourceRdsParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceRdsParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput
	ToDataSourceRdsParametersPtrOutputWithContext(context.Context) DataSourceRdsParametersPtrOutput
}

type dataSourceRdsParametersPtrType DataSourceRdsParametersArgs

func DataSourceRdsParametersPtr(v *DataSourceRdsParametersArgs) DataSourceRdsParametersPtrInput {
	return (*dataSourceRdsParametersPtrType)(v)
}

func (*dataSourceRdsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return i.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRdsParametersPtrType) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRdsParametersPtrOutput)
}

// <p>Amazon RDS parameters.</p>
type DataSourceRdsParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutput() DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersOutputWithContext(ctx context.Context) DataSourceRdsParametersOutput {
	return o
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o.ToDataSourceRdsParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRdsParametersOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRdsParameters) *DataSourceRdsParameters {
		return &v
	}).(DataSourceRdsParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRdsParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Instance ID.</p>
func (o DataSourceRdsParametersOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRdsParameters) string { return v.InstanceId }).(pulumi.StringOutput)
}

type DataSourceRdsParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRdsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRdsParameters)(nil)).Elem()
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutput() DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) ToDataSourceRdsParametersPtrOutputWithContext(ctx context.Context) DataSourceRdsParametersPtrOutput {
	return o
}

func (o DataSourceRdsParametersPtrOutput) Elem() DataSourceRdsParametersOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) DataSourceRdsParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRdsParameters
		return ret
	}).(DataSourceRdsParametersOutput)
}

// <p>Database.</p>
func (o DataSourceRdsParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Instance ID.</p>
func (o DataSourceRdsParametersPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRdsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParameters struct {
	// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
	//             provided.</p>
	ClusterId *string `pulumi:"clusterId"`
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
	Host *string `pulumi:"host"`
	// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
	Port *float64 `pulumi:"port"`
}

// DataSourceRedshiftParametersInput is an input type that accepts DataSourceRedshiftParametersArgs and DataSourceRedshiftParametersOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersInput` via:
//
//	DataSourceRedshiftParametersArgs{...}
type DataSourceRedshiftParametersInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput
	ToDataSourceRedshiftParametersOutputWithContext(context.Context) DataSourceRedshiftParametersOutput
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParametersArgs struct {
	// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
	//             provided.</p>
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
	Host pulumi.StringPtrInput `pulumi:"host"`
	// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
	Port pulumi.Float64PtrInput `pulumi:"port"`
}

func (DataSourceRedshiftParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return i.ToDataSourceRedshiftParametersOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput)
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceRedshiftParametersArgs) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersOutput).ToDataSourceRedshiftParametersPtrOutputWithContext(ctx)
}

// DataSourceRedshiftParametersPtrInput is an input type that accepts DataSourceRedshiftParametersArgs, DataSourceRedshiftParametersPtr and DataSourceRedshiftParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceRedshiftParametersPtrInput` via:
//
//	        DataSourceRedshiftParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceRedshiftParametersPtrInput interface {
	pulumi.Input

	ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput
	ToDataSourceRedshiftParametersPtrOutputWithContext(context.Context) DataSourceRedshiftParametersPtrOutput
}

type dataSourceRedshiftParametersPtrType DataSourceRedshiftParametersArgs

func DataSourceRedshiftParametersPtr(v *DataSourceRedshiftParametersArgs) DataSourceRedshiftParametersPtrInput {
	return (*dataSourceRedshiftParametersPtrType)(v)
}

func (*dataSourceRedshiftParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return i.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceRedshiftParametersPtrType) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRedshiftParametersPtrOutput)
}

// <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
//
//	<code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
//	<code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
type DataSourceRedshiftParametersOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutput() DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersOutputWithContext(ctx context.Context) DataSourceRedshiftParametersOutput {
	return o
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o.ToDataSourceRedshiftParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceRedshiftParametersOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRedshiftParameters) *DataSourceRedshiftParameters {
		return &v
	}).(DataSourceRedshiftParametersPtrOutput)
}

// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
//
//	provided.</p>
func (o DataSourceRedshiftParametersOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRedshiftParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DataSourceRedshiftParameters) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

type DataSourceRedshiftParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRedshiftParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRedshiftParameters)(nil)).Elem()
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutput() DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) ToDataSourceRedshiftParametersPtrOutputWithContext(ctx context.Context) DataSourceRedshiftParametersPtrOutput {
	return o
}

func (o DataSourceRedshiftParametersPtrOutput) Elem() DataSourceRedshiftParametersOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) DataSourceRedshiftParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceRedshiftParameters
		return ret
	}).(DataSourceRedshiftParametersOutput)
}

// <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
//
//	provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// <p>Database.</p>
func (o DataSourceRedshiftParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
func (o DataSourceRedshiftParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceRedshiftParameters) *float64 {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermission struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions []string `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal string `pulumi:"principal"`
}

// DataSourceResourcePermissionInput is an input type that accepts DataSourceResourcePermissionArgs and DataSourceResourcePermissionOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionInput` via:
//
//	DataSourceResourcePermissionArgs{...}
type DataSourceResourcePermissionInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput
	ToDataSourceResourcePermissionOutputWithContext(context.Context) DataSourceResourcePermissionOutput
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermissionArgs struct {
	// <p>The IAM action to grant or revoke permissions on.</p>
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
	//             following:</p>
	//         <ul>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
	//             </li>
	//             <li>
	//                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
	//                     ARN. Use this option only to share resources (templates) across AWS accounts.
	//                     (This is less common.) </p>
	//             </li>
	//          </ul>
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (DataSourceResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return i.ToDataSourceResourcePermissionOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArgs) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionOutput)
}

// DataSourceResourcePermissionArrayInput is an input type that accepts DataSourceResourcePermissionArray and DataSourceResourcePermissionArrayOutput values.
// You can construct a concrete instance of `DataSourceResourcePermissionArrayInput` via:
//
//	DataSourceResourcePermissionArray{ DataSourceResourcePermissionArgs{...} }
type DataSourceResourcePermissionArrayInput interface {
	pulumi.Input

	ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput
	ToDataSourceResourcePermissionArrayOutputWithContext(context.Context) DataSourceResourcePermissionArrayOutput
}

type DataSourceResourcePermissionArray []DataSourceResourcePermissionInput

func (DataSourceResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return i.ToDataSourceResourcePermissionArrayOutputWithContext(context.Background())
}

func (i DataSourceResourcePermissionArray) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceResourcePermissionArrayOutput)
}

// <p>Permission for the resource.</p>
type DataSourceResourcePermissionOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutput() DataSourceResourcePermissionOutput {
	return o
}

func (o DataSourceResourcePermissionOutput) ToDataSourceResourcePermissionOutputWithContext(ctx context.Context) DataSourceResourcePermissionOutput {
	return o
}

// <p>The IAM action to grant or revoke permissions on.</p>
func (o DataSourceResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
//
//	    following:</p>
//	<ul>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
//	    </li>
//	    <li>
//	        <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
//	            ARN. Use this option only to share resources (templates) across AWS accounts.
//	            (This is less common.) </p>
//	    </li>
//	 </ul>
func (o DataSourceResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type DataSourceResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (DataSourceResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceResourcePermission)(nil)).Elem()
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutput() DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) ToDataSourceResourcePermissionArrayOutputWithContext(ctx context.Context) DataSourceResourcePermissionArrayOutput {
	return o
}

func (o DataSourceResourcePermissionArrayOutput) Index(i pulumi.IntInput) DataSourceResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceResourcePermission {
		return vs[0].([]DataSourceResourcePermission)[vs[1].(int)]
	}).(DataSourceResourcePermissionOutput)
}

// <p>S3 parameters.</p>
type DataSourceS3Parameters struct {
	ManifestFileLocation DataSourceManifestFileLocation `pulumi:"manifestFileLocation"`
	// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>
	RoleArn *string `pulumi:"roleArn"`
}

// DataSourceS3ParametersInput is an input type that accepts DataSourceS3ParametersArgs and DataSourceS3ParametersOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersInput` via:
//
//	DataSourceS3ParametersArgs{...}
type DataSourceS3ParametersInput interface {
	pulumi.Input

	ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput
	ToDataSourceS3ParametersOutputWithContext(context.Context) DataSourceS3ParametersOutput
}

// <p>S3 parameters.</p>
type DataSourceS3ParametersArgs struct {
	ManifestFileLocation DataSourceManifestFileLocationInput `pulumi:"manifestFileLocation"`
	// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (DataSourceS3ParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return i.ToDataSourceS3ParametersOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput)
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceS3ParametersArgs) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersOutput).ToDataSourceS3ParametersPtrOutputWithContext(ctx)
}

// DataSourceS3ParametersPtrInput is an input type that accepts DataSourceS3ParametersArgs, DataSourceS3ParametersPtr and DataSourceS3ParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceS3ParametersPtrInput` via:
//
//	        DataSourceS3ParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceS3ParametersPtrInput interface {
	pulumi.Input

	ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput
	ToDataSourceS3ParametersPtrOutputWithContext(context.Context) DataSourceS3ParametersPtrOutput
}

type dataSourceS3ParametersPtrType DataSourceS3ParametersArgs

func DataSourceS3ParametersPtr(v *DataSourceS3ParametersArgs) DataSourceS3ParametersPtrInput {
	return (*dataSourceS3ParametersPtrType)(v)
}

func (*dataSourceS3ParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return i.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceS3ParametersPtrType) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3ParametersPtrOutput)
}

// <p>S3 parameters.</p>
type DataSourceS3ParametersOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutput() DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersOutputWithContext(ctx context.Context) DataSourceS3ParametersOutput {
	return o
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o.ToDataSourceS3ParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceS3ParametersOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceS3Parameters) *DataSourceS3Parameters {
		return &v
	}).(DataSourceS3ParametersPtrOutput)
}

func (o DataSourceS3ParametersOutput) ManifestFileLocation() DataSourceManifestFileLocationOutput {
	return o.ApplyT(func(v DataSourceS3Parameters) DataSourceManifestFileLocation { return v.ManifestFileLocation }).(DataSourceManifestFileLocationOutput)
}

// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>
func (o DataSourceS3ParametersOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceS3Parameters) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type DataSourceS3ParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3ParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Parameters)(nil)).Elem()
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutput() DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) ToDataSourceS3ParametersPtrOutputWithContext(ctx context.Context) DataSourceS3ParametersPtrOutput {
	return o
}

func (o DataSourceS3ParametersPtrOutput) Elem() DataSourceS3ParametersOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) DataSourceS3Parameters {
		if v != nil {
			return *v
		}
		var ret DataSourceS3Parameters
		return ret
	}).(DataSourceS3ParametersOutput)
}

func (o DataSourceS3ParametersPtrOutput) ManifestFileLocation() DataSourceManifestFileLocationPtrOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) *DataSourceManifestFileLocation {
		if v == nil {
			return nil
		}
		return &v.ManifestFileLocation
	}).(DataSourceManifestFileLocationPtrOutput)
}

// <p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>
func (o DataSourceS3ParametersPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3Parameters) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Warehouse.</p>
	Warehouse string `pulumi:"warehouse"`
}

// DataSourceSnowflakeParametersInput is an input type that accepts DataSourceSnowflakeParametersArgs and DataSourceSnowflakeParametersOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersInput` via:
//
//	DataSourceSnowflakeParametersArgs{...}
type DataSourceSnowflakeParametersInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput
	ToDataSourceSnowflakeParametersOutputWithContext(context.Context) DataSourceSnowflakeParametersOutput
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Warehouse.</p>
	Warehouse pulumi.StringInput `pulumi:"warehouse"`
}

func (DataSourceSnowflakeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return i.ToDataSourceSnowflakeParametersOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput)
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSnowflakeParametersArgs) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersOutput).ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx)
}

// DataSourceSnowflakeParametersPtrInput is an input type that accepts DataSourceSnowflakeParametersArgs, DataSourceSnowflakeParametersPtr and DataSourceSnowflakeParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSnowflakeParametersPtrInput` via:
//
//	        DataSourceSnowflakeParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSnowflakeParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput
	ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Context) DataSourceSnowflakeParametersPtrOutput
}

type dataSourceSnowflakeParametersPtrType DataSourceSnowflakeParametersArgs

func DataSourceSnowflakeParametersPtr(v *DataSourceSnowflakeParametersArgs) DataSourceSnowflakeParametersPtrInput {
	return (*dataSourceSnowflakeParametersPtrType)(v)
}

func (*dataSourceSnowflakeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return i.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSnowflakeParametersPtrType) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSnowflakeParametersPtrOutput)
}

// <p>Snowflake parameters.</p>
type DataSourceSnowflakeParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutput() DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersOutput {
	return o
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o.ToDataSourceSnowflakeParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSnowflakeParametersOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSnowflakeParameters) *DataSourceSnowflakeParameters {
		return &v
	}).(DataSourceSnowflakeParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceSnowflakeParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceSnowflakeParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Warehouse.</p>
func (o DataSourceSnowflakeParametersOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSnowflakeParameters) string { return v.Warehouse }).(pulumi.StringOutput)
}

type DataSourceSnowflakeParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSnowflakeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSnowflakeParameters)(nil)).Elem()
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutput() DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) ToDataSourceSnowflakeParametersPtrOutputWithContext(ctx context.Context) DataSourceSnowflakeParametersPtrOutput {
	return o
}

func (o DataSourceSnowflakeParametersPtrOutput) Elem() DataSourceSnowflakeParametersOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) DataSourceSnowflakeParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSnowflakeParameters
		return ret
	}).(DataSourceSnowflakeParametersOutput)
}

// <p>Database.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Warehouse.</p>
func (o DataSourceSnowflakeParametersPtrOutput) Warehouse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSnowflakeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Warehouse
	}).(pulumi.StringPtrOutput)
}

// <p>Spark parameters.</p>
type DataSourceSparkParameters struct {
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceSparkParametersInput is an input type that accepts DataSourceSparkParametersArgs and DataSourceSparkParametersOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersInput` via:
//
//	DataSourceSparkParametersArgs{...}
type DataSourceSparkParametersInput interface {
	pulumi.Input

	ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput
	ToDataSourceSparkParametersOutputWithContext(context.Context) DataSourceSparkParametersOutput
}

// <p>Spark parameters.</p>
type DataSourceSparkParametersArgs struct {
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSparkParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return i.ToDataSourceSparkParametersOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput)
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSparkParametersArgs) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersOutput).ToDataSourceSparkParametersPtrOutputWithContext(ctx)
}

// DataSourceSparkParametersPtrInput is an input type that accepts DataSourceSparkParametersArgs, DataSourceSparkParametersPtr and DataSourceSparkParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSparkParametersPtrInput` via:
//
//	        DataSourceSparkParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSparkParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput
	ToDataSourceSparkParametersPtrOutputWithContext(context.Context) DataSourceSparkParametersPtrOutput
}

type dataSourceSparkParametersPtrType DataSourceSparkParametersArgs

func DataSourceSparkParametersPtr(v *DataSourceSparkParametersArgs) DataSourceSparkParametersPtrInput {
	return (*dataSourceSparkParametersPtrType)(v)
}

func (*dataSourceSparkParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return i.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSparkParametersPtrType) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSparkParametersPtrOutput)
}

// <p>Spark parameters.</p>
type DataSourceSparkParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutput() DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersOutputWithContext(ctx context.Context) DataSourceSparkParametersOutput {
	return o
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o.ToDataSourceSparkParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSparkParametersOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSparkParameters) *DataSourceSparkParameters {
		return &v
	}).(DataSourceSparkParametersPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSparkParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSparkParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceSparkParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSparkParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSparkParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSparkParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSparkParameters)(nil)).Elem()
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutput() DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) ToDataSourceSparkParametersPtrOutputWithContext(ctx context.Context) DataSourceSparkParametersPtrOutput {
	return o
}

func (o DataSourceSparkParametersPtrOutput) Elem() DataSourceSparkParametersOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) DataSourceSparkParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSparkParameters
		return ret
	}).(DataSourceSparkParametersOutput)
}

// <p>Host.</p>
func (o DataSourceSparkParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceSparkParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSparkParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceSqlServerParametersInput is an input type that accepts DataSourceSqlServerParametersArgs and DataSourceSqlServerParametersOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersInput` via:
//
//	DataSourceSqlServerParametersArgs{...}
type DataSourceSqlServerParametersInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput
	ToDataSourceSqlServerParametersOutputWithContext(context.Context) DataSourceSqlServerParametersOutput
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceSqlServerParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return i.ToDataSourceSqlServerParametersOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput)
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceSqlServerParametersArgs) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersOutput).ToDataSourceSqlServerParametersPtrOutputWithContext(ctx)
}

// DataSourceSqlServerParametersPtrInput is an input type that accepts DataSourceSqlServerParametersArgs, DataSourceSqlServerParametersPtr and DataSourceSqlServerParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceSqlServerParametersPtrInput` via:
//
//	        DataSourceSqlServerParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceSqlServerParametersPtrInput interface {
	pulumi.Input

	ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput
	ToDataSourceSqlServerParametersPtrOutputWithContext(context.Context) DataSourceSqlServerParametersPtrOutput
}

type dataSourceSqlServerParametersPtrType DataSourceSqlServerParametersArgs

func DataSourceSqlServerParametersPtr(v *DataSourceSqlServerParametersArgs) DataSourceSqlServerParametersPtrInput {
	return (*dataSourceSqlServerParametersPtrType)(v)
}

func (*dataSourceSqlServerParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return i.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceSqlServerParametersPtrType) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSqlServerParametersPtrOutput)
}

// <p>SQL Server parameters.</p>
type DataSourceSqlServerParametersOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutput() DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersOutputWithContext(ctx context.Context) DataSourceSqlServerParametersOutput {
	return o
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o.ToDataSourceSqlServerParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceSqlServerParametersOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSqlServerParameters) *DataSourceSqlServerParameters {
		return &v
	}).(DataSourceSqlServerParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceSqlServerParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceSqlServerParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSqlServerParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceSqlServerParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceSqlServerParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceSqlServerParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSqlServerParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSqlServerParameters)(nil)).Elem()
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutput() DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) ToDataSourceSqlServerParametersPtrOutputWithContext(ctx context.Context) DataSourceSqlServerParametersPtrOutput {
	return o
}

func (o DataSourceSqlServerParametersPtrOutput) Elem() DataSourceSqlServerParametersOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) DataSourceSqlServerParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceSqlServerParameters
		return ret
	}).(DataSourceSqlServerParametersOutput)
}

// <p>Database.</p>
func (o DataSourceSqlServerParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceSqlServerParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceSqlServerParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceSqlServerParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslProperties struct {
	// <p>A Boolean option to control whether SSL should be disabled.</p>
	DisableSsl *bool `pulumi:"disableSsl"`
}

// DataSourceSslPropertiesInput is an input type that accepts DataSourceSslPropertiesArgs and DataSourceSslPropertiesOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesInput` via:
//
//	DataSourceSslPropertiesArgs{...}
type DataSourceSslPropertiesInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput
	ToDataSourceSslPropertiesOutputWithContext(context.Context) DataSourceSslPropertiesOutput
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslPropertiesArgs struct {
	// <p>A Boolean option to control whether SSL should be disabled.</p>
	DisableSsl pulumi.BoolPtrInput `pulumi:"disableSsl"`
}

func (DataSourceSslPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return i.ToDataSourceSslPropertiesOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput)
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceSslPropertiesArgs) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesOutput).ToDataSourceSslPropertiesPtrOutputWithContext(ctx)
}

// DataSourceSslPropertiesPtrInput is an input type that accepts DataSourceSslPropertiesArgs, DataSourceSslPropertiesPtr and DataSourceSslPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceSslPropertiesPtrInput` via:
//
//	        DataSourceSslPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataSourceSslPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput
	ToDataSourceSslPropertiesPtrOutputWithContext(context.Context) DataSourceSslPropertiesPtrOutput
}

type dataSourceSslPropertiesPtrType DataSourceSslPropertiesArgs

func DataSourceSslPropertiesPtr(v *DataSourceSslPropertiesArgs) DataSourceSslPropertiesPtrInput {
	return (*dataSourceSslPropertiesPtrType)(v)
}

func (*dataSourceSslPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return i.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceSslPropertiesPtrType) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSslPropertiesPtrOutput)
}

// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
//
//	underlying data source.</p>
type DataSourceSslPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutput() DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesOutputWithContext(ctx context.Context) DataSourceSslPropertiesOutput {
	return o
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o.ToDataSourceSslPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceSslPropertiesOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSslProperties) *DataSourceSslProperties {
		return &v
	}).(DataSourceSslPropertiesPtrOutput)
}

// <p>A Boolean option to control whether SSL should be disabled.</p>
func (o DataSourceSslPropertiesOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceSslProperties) *bool { return v.DisableSsl }).(pulumi.BoolPtrOutput)
}

type DataSourceSslPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSslPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSslProperties)(nil)).Elem()
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutput() DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) ToDataSourceSslPropertiesPtrOutputWithContext(ctx context.Context) DataSourceSslPropertiesPtrOutput {
	return o
}

func (o DataSourceSslPropertiesPtrOutput) Elem() DataSourceSslPropertiesOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) DataSourceSslProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceSslProperties
		return ret
	}).(DataSourceSslPropertiesOutput)
}

// <p>A Boolean option to control whether SSL should be disabled.</p>
func (o DataSourceSslPropertiesPtrOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceSslProperties) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSsl
	}).(pulumi.BoolPtrOutput)
}

// <p>Starburst parameters.</p>
type DataSourceStarburstParameters struct {
	// <p>Catalog.</p>
	Catalog string `pulumi:"catalog"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port        float64                         `pulumi:"port"`
	ProductType *DataSourceStarburstProductType `pulumi:"productType"`
}

// DataSourceStarburstParametersInput is an input type that accepts DataSourceStarburstParametersArgs and DataSourceStarburstParametersOutput values.
// You can construct a concrete instance of `DataSourceStarburstParametersInput` via:
//
//	DataSourceStarburstParametersArgs{...}
type DataSourceStarburstParametersInput interface {
	pulumi.Input

	ToDataSourceStarburstParametersOutput() DataSourceStarburstParametersOutput
	ToDataSourceStarburstParametersOutputWithContext(context.Context) DataSourceStarburstParametersOutput
}

// <p>Starburst parameters.</p>
type DataSourceStarburstParametersArgs struct {
	// <p>Catalog.</p>
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port        pulumi.Float64Input                    `pulumi:"port"`
	ProductType DataSourceStarburstProductTypePtrInput `pulumi:"productType"`
}

func (DataSourceStarburstParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceStarburstParameters)(nil)).Elem()
}

func (i DataSourceStarburstParametersArgs) ToDataSourceStarburstParametersOutput() DataSourceStarburstParametersOutput {
	return i.ToDataSourceStarburstParametersOutputWithContext(context.Background())
}

func (i DataSourceStarburstParametersArgs) ToDataSourceStarburstParametersOutputWithContext(ctx context.Context) DataSourceStarburstParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceStarburstParametersOutput)
}

func (i DataSourceStarburstParametersArgs) ToDataSourceStarburstParametersPtrOutput() DataSourceStarburstParametersPtrOutput {
	return i.ToDataSourceStarburstParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceStarburstParametersArgs) ToDataSourceStarburstParametersPtrOutputWithContext(ctx context.Context) DataSourceStarburstParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceStarburstParametersOutput).ToDataSourceStarburstParametersPtrOutputWithContext(ctx)
}

// DataSourceStarburstParametersPtrInput is an input type that accepts DataSourceStarburstParametersArgs, DataSourceStarburstParametersPtr and DataSourceStarburstParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceStarburstParametersPtrInput` via:
//
//	        DataSourceStarburstParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceStarburstParametersPtrInput interface {
	pulumi.Input

	ToDataSourceStarburstParametersPtrOutput() DataSourceStarburstParametersPtrOutput
	ToDataSourceStarburstParametersPtrOutputWithContext(context.Context) DataSourceStarburstParametersPtrOutput
}

type dataSourceStarburstParametersPtrType DataSourceStarburstParametersArgs

func DataSourceStarburstParametersPtr(v *DataSourceStarburstParametersArgs) DataSourceStarburstParametersPtrInput {
	return (*dataSourceStarburstParametersPtrType)(v)
}

func (*dataSourceStarburstParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceStarburstParameters)(nil)).Elem()
}

func (i *dataSourceStarburstParametersPtrType) ToDataSourceStarburstParametersPtrOutput() DataSourceStarburstParametersPtrOutput {
	return i.ToDataSourceStarburstParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceStarburstParametersPtrType) ToDataSourceStarburstParametersPtrOutputWithContext(ctx context.Context) DataSourceStarburstParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceStarburstParametersPtrOutput)
}

// <p>Starburst parameters.</p>
type DataSourceStarburstParametersOutput struct{ *pulumi.OutputState }

func (DataSourceStarburstParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceStarburstParameters)(nil)).Elem()
}

func (o DataSourceStarburstParametersOutput) ToDataSourceStarburstParametersOutput() DataSourceStarburstParametersOutput {
	return o
}

func (o DataSourceStarburstParametersOutput) ToDataSourceStarburstParametersOutputWithContext(ctx context.Context) DataSourceStarburstParametersOutput {
	return o
}

func (o DataSourceStarburstParametersOutput) ToDataSourceStarburstParametersPtrOutput() DataSourceStarburstParametersPtrOutput {
	return o.ToDataSourceStarburstParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceStarburstParametersOutput) ToDataSourceStarburstParametersPtrOutputWithContext(ctx context.Context) DataSourceStarburstParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceStarburstParameters) *DataSourceStarburstParameters {
		return &v
	}).(DataSourceStarburstParametersPtrOutput)
}

// <p>Catalog.</p>
func (o DataSourceStarburstParametersOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceStarburstParameters) string { return v.Catalog }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceStarburstParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceStarburstParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceStarburstParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceStarburstParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

func (o DataSourceStarburstParametersOutput) ProductType() DataSourceStarburstProductTypePtrOutput {
	return o.ApplyT(func(v DataSourceStarburstParameters) *DataSourceStarburstProductType { return v.ProductType }).(DataSourceStarburstProductTypePtrOutput)
}

type DataSourceStarburstParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceStarburstParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceStarburstParameters)(nil)).Elem()
}

func (o DataSourceStarburstParametersPtrOutput) ToDataSourceStarburstParametersPtrOutput() DataSourceStarburstParametersPtrOutput {
	return o
}

func (o DataSourceStarburstParametersPtrOutput) ToDataSourceStarburstParametersPtrOutputWithContext(ctx context.Context) DataSourceStarburstParametersPtrOutput {
	return o
}

func (o DataSourceStarburstParametersPtrOutput) Elem() DataSourceStarburstParametersOutput {
	return o.ApplyT(func(v *DataSourceStarburstParameters) DataSourceStarburstParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceStarburstParameters
		return ret
	}).(DataSourceStarburstParametersOutput)
}

// <p>Catalog.</p>
func (o DataSourceStarburstParametersPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceStarburstParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceStarburstParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceStarburstParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceStarburstParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceStarburstParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

func (o DataSourceStarburstParametersPtrOutput) ProductType() DataSourceStarburstProductTypePtrOutput {
	return o.ApplyT(func(v *DataSourceStarburstParameters) *DataSourceStarburstProductType {
		if v == nil {
			return nil
		}
		return v.ProductType
	}).(DataSourceStarburstProductTypePtrOutput)
}

// <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
//
//	resource.</p>
type DataSourceTag struct {
	// <p>Tag key.</p>
	Key string `pulumi:"key"`
	// <p>Tag value.</p>
	Value string `pulumi:"value"`
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParameters struct {
	// <p>Database.</p>
	Database string `pulumi:"database"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceTeradataParametersInput is an input type that accepts DataSourceTeradataParametersArgs and DataSourceTeradataParametersOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersInput` via:
//
//	DataSourceTeradataParametersArgs{...}
type DataSourceTeradataParametersInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput
	ToDataSourceTeradataParametersOutputWithContext(context.Context) DataSourceTeradataParametersOutput
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParametersArgs struct {
	// <p>Database.</p>
	Database pulumi.StringInput `pulumi:"database"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceTeradataParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return i.ToDataSourceTeradataParametersOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput)
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceTeradataParametersArgs) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersOutput).ToDataSourceTeradataParametersPtrOutputWithContext(ctx)
}

// DataSourceTeradataParametersPtrInput is an input type that accepts DataSourceTeradataParametersArgs, DataSourceTeradataParametersPtr and DataSourceTeradataParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceTeradataParametersPtrInput` via:
//
//	        DataSourceTeradataParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceTeradataParametersPtrInput interface {
	pulumi.Input

	ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput
	ToDataSourceTeradataParametersPtrOutputWithContext(context.Context) DataSourceTeradataParametersPtrOutput
}

type dataSourceTeradataParametersPtrType DataSourceTeradataParametersArgs

func DataSourceTeradataParametersPtr(v *DataSourceTeradataParametersArgs) DataSourceTeradataParametersPtrInput {
	return (*dataSourceTeradataParametersPtrType)(v)
}

func (*dataSourceTeradataParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return i.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceTeradataParametersPtrType) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTeradataParametersPtrOutput)
}

// <p>Teradata parameters.</p>
type DataSourceTeradataParametersOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutput() DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersOutputWithContext(ctx context.Context) DataSourceTeradataParametersOutput {
	return o
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o.ToDataSourceTeradataParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceTeradataParametersOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceTeradataParameters) *DataSourceTeradataParameters {
		return &v
	}).(DataSourceTeradataParametersPtrOutput)
}

// <p>Database.</p>
func (o DataSourceTeradataParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Database }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceTeradataParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTeradataParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceTeradataParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceTeradataParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceTeradataParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceTeradataParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTeradataParameters)(nil)).Elem()
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutput() DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) ToDataSourceTeradataParametersPtrOutputWithContext(ctx context.Context) DataSourceTeradataParametersPtrOutput {
	return o
}

func (o DataSourceTeradataParametersPtrOutput) Elem() DataSourceTeradataParametersOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) DataSourceTeradataParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceTeradataParameters
		return ret
	}).(DataSourceTeradataParametersOutput)
}

// <p>Database.</p>
func (o DataSourceTeradataParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceTeradataParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceTeradataParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceTeradataParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>Trino parameters.</p>
type DataSourceTrinoParameters struct {
	// <p>Catalog.</p>
	Catalog string `pulumi:"catalog"`
	// <p>Host.</p>
	Host string `pulumi:"host"`
	// <p>Port.</p>
	Port float64 `pulumi:"port"`
}

// DataSourceTrinoParametersInput is an input type that accepts DataSourceTrinoParametersArgs and DataSourceTrinoParametersOutput values.
// You can construct a concrete instance of `DataSourceTrinoParametersInput` via:
//
//	DataSourceTrinoParametersArgs{...}
type DataSourceTrinoParametersInput interface {
	pulumi.Input

	ToDataSourceTrinoParametersOutput() DataSourceTrinoParametersOutput
	ToDataSourceTrinoParametersOutputWithContext(context.Context) DataSourceTrinoParametersOutput
}

// <p>Trino parameters.</p>
type DataSourceTrinoParametersArgs struct {
	// <p>Catalog.</p>
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// <p>Host.</p>
	Host pulumi.StringInput `pulumi:"host"`
	// <p>Port.</p>
	Port pulumi.Float64Input `pulumi:"port"`
}

func (DataSourceTrinoParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTrinoParameters)(nil)).Elem()
}

func (i DataSourceTrinoParametersArgs) ToDataSourceTrinoParametersOutput() DataSourceTrinoParametersOutput {
	return i.ToDataSourceTrinoParametersOutputWithContext(context.Background())
}

func (i DataSourceTrinoParametersArgs) ToDataSourceTrinoParametersOutputWithContext(ctx context.Context) DataSourceTrinoParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTrinoParametersOutput)
}

func (i DataSourceTrinoParametersArgs) ToDataSourceTrinoParametersPtrOutput() DataSourceTrinoParametersPtrOutput {
	return i.ToDataSourceTrinoParametersPtrOutputWithContext(context.Background())
}

func (i DataSourceTrinoParametersArgs) ToDataSourceTrinoParametersPtrOutputWithContext(ctx context.Context) DataSourceTrinoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTrinoParametersOutput).ToDataSourceTrinoParametersPtrOutputWithContext(ctx)
}

// DataSourceTrinoParametersPtrInput is an input type that accepts DataSourceTrinoParametersArgs, DataSourceTrinoParametersPtr and DataSourceTrinoParametersPtrOutput values.
// You can construct a concrete instance of `DataSourceTrinoParametersPtrInput` via:
//
//	        DataSourceTrinoParametersArgs{...}
//
//	or:
//
//	        nil
type DataSourceTrinoParametersPtrInput interface {
	pulumi.Input

	ToDataSourceTrinoParametersPtrOutput() DataSourceTrinoParametersPtrOutput
	ToDataSourceTrinoParametersPtrOutputWithContext(context.Context) DataSourceTrinoParametersPtrOutput
}

type dataSourceTrinoParametersPtrType DataSourceTrinoParametersArgs

func DataSourceTrinoParametersPtr(v *DataSourceTrinoParametersArgs) DataSourceTrinoParametersPtrInput {
	return (*dataSourceTrinoParametersPtrType)(v)
}

func (*dataSourceTrinoParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTrinoParameters)(nil)).Elem()
}

func (i *dataSourceTrinoParametersPtrType) ToDataSourceTrinoParametersPtrOutput() DataSourceTrinoParametersPtrOutput {
	return i.ToDataSourceTrinoParametersPtrOutputWithContext(context.Background())
}

func (i *dataSourceTrinoParametersPtrType) ToDataSourceTrinoParametersPtrOutputWithContext(ctx context.Context) DataSourceTrinoParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTrinoParametersPtrOutput)
}

// <p>Trino parameters.</p>
type DataSourceTrinoParametersOutput struct{ *pulumi.OutputState }

func (DataSourceTrinoParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTrinoParameters)(nil)).Elem()
}

func (o DataSourceTrinoParametersOutput) ToDataSourceTrinoParametersOutput() DataSourceTrinoParametersOutput {
	return o
}

func (o DataSourceTrinoParametersOutput) ToDataSourceTrinoParametersOutputWithContext(ctx context.Context) DataSourceTrinoParametersOutput {
	return o
}

func (o DataSourceTrinoParametersOutput) ToDataSourceTrinoParametersPtrOutput() DataSourceTrinoParametersPtrOutput {
	return o.ToDataSourceTrinoParametersPtrOutputWithContext(context.Background())
}

func (o DataSourceTrinoParametersOutput) ToDataSourceTrinoParametersPtrOutputWithContext(ctx context.Context) DataSourceTrinoParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceTrinoParameters) *DataSourceTrinoParameters {
		return &v
	}).(DataSourceTrinoParametersPtrOutput)
}

// <p>Catalog.</p>
func (o DataSourceTrinoParametersOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTrinoParameters) string { return v.Catalog }).(pulumi.StringOutput)
}

// <p>Host.</p>
func (o DataSourceTrinoParametersOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTrinoParameters) string { return v.Host }).(pulumi.StringOutput)
}

// <p>Port.</p>
func (o DataSourceTrinoParametersOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v DataSourceTrinoParameters) float64 { return v.Port }).(pulumi.Float64Output)
}

type DataSourceTrinoParametersPtrOutput struct{ *pulumi.OutputState }

func (DataSourceTrinoParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceTrinoParameters)(nil)).Elem()
}

func (o DataSourceTrinoParametersPtrOutput) ToDataSourceTrinoParametersPtrOutput() DataSourceTrinoParametersPtrOutput {
	return o
}

func (o DataSourceTrinoParametersPtrOutput) ToDataSourceTrinoParametersPtrOutputWithContext(ctx context.Context) DataSourceTrinoParametersPtrOutput {
	return o
}

func (o DataSourceTrinoParametersPtrOutput) Elem() DataSourceTrinoParametersOutput {
	return o.ApplyT(func(v *DataSourceTrinoParameters) DataSourceTrinoParameters {
		if v != nil {
			return *v
		}
		var ret DataSourceTrinoParameters
		return ret
	}).(DataSourceTrinoParametersOutput)
}

// <p>Catalog.</p>
func (o DataSourceTrinoParametersPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTrinoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// <p>Host.</p>
func (o DataSourceTrinoParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceTrinoParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// <p>Port.</p>
func (o DataSourceTrinoParametersPtrOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DataSourceTrinoParameters) *float64 {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.Float64PtrOutput)
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionProperties struct {
	// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
	VpcConnectionArn string `pulumi:"vpcConnectionArn"`
}

// DataSourceVpcConnectionPropertiesInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs and DataSourceVpcConnectionPropertiesOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesInput` via:
//
//	DataSourceVpcConnectionPropertiesArgs{...}
type DataSourceVpcConnectionPropertiesInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput
	ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesOutput
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionPropertiesArgs struct {
	// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
	VpcConnectionArn pulumi.StringInput `pulumi:"vpcConnectionArn"`
}

func (DataSourceVpcConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return i.ToDataSourceVpcConnectionPropertiesOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput)
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i DataSourceVpcConnectionPropertiesArgs) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesOutput).ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx)
}

// DataSourceVpcConnectionPropertiesPtrInput is an input type that accepts DataSourceVpcConnectionPropertiesArgs, DataSourceVpcConnectionPropertiesPtr and DataSourceVpcConnectionPropertiesPtrOutput values.
// You can construct a concrete instance of `DataSourceVpcConnectionPropertiesPtrInput` via:
//
//	        DataSourceVpcConnectionPropertiesArgs{...}
//
//	or:
//
//	        nil
type DataSourceVpcConnectionPropertiesPtrInput interface {
	pulumi.Input

	ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput
	ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Context) DataSourceVpcConnectionPropertiesPtrOutput
}

type dataSourceVpcConnectionPropertiesPtrType DataSourceVpcConnectionPropertiesArgs

func DataSourceVpcConnectionPropertiesPtr(v *DataSourceVpcConnectionPropertiesArgs) DataSourceVpcConnectionPropertiesPtrInput {
	return (*dataSourceVpcConnectionPropertiesPtrType)(v)
}

func (*dataSourceVpcConnectionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return i.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (i *dataSourceVpcConnectionPropertiesPtrType) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// <p>VPC connection properties.</p>
type DataSourceVpcConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutput() DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(context.Background())
}

func (o DataSourceVpcConnectionPropertiesOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceVpcConnectionProperties) *DataSourceVpcConnectionProperties {
		return &v
	}).(DataSourceVpcConnectionPropertiesPtrOutput)
}

// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
func (o DataSourceVpcConnectionPropertiesOutput) VpcConnectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceVpcConnectionProperties) string { return v.VpcConnectionArn }).(pulumi.StringOutput)
}

type DataSourceVpcConnectionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataSourceVpcConnectionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVpcConnectionProperties)(nil)).Elem()
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutput() DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) ToDataSourceVpcConnectionPropertiesPtrOutputWithContext(ctx context.Context) DataSourceVpcConnectionPropertiesPtrOutput {
	return o
}

func (o DataSourceVpcConnectionPropertiesPtrOutput) Elem() DataSourceVpcConnectionPropertiesOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) DataSourceVpcConnectionProperties {
		if v != nil {
			return *v
		}
		var ret DataSourceVpcConnectionProperties
		return ret
	}).(DataSourceVpcConnectionPropertiesOutput)
}

// <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
func (o DataSourceVpcConnectionPropertiesPtrOutput) VpcConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceVpcConnectionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VpcConnectionArn
	}).(pulumi.StringPtrOutput)
}

type RefreshScheduleMap struct {
	RefreshType *RefreshScheduleMapRefreshType `pulumi:"refreshType"`
	// <p>Information about the schedule frequency.</p>
	ScheduleFrequency *RefreshScheduleMapScheduleFrequencyProperties `pulumi:"scheduleFrequency"`
	// <p>An unique identifier for the refresh schedule.</p>
	ScheduleId *string `pulumi:"scheduleId"`
	// <p>The date time after which refresh is to be scheduled</p>
	StartAfterDateTime *string `pulumi:"startAfterDateTime"`
}

// RefreshScheduleMapInput is an input type that accepts RefreshScheduleMap and RefreshScheduleMapOutput values.
// You can construct a concrete instance of `RefreshScheduleMapInput` via:
//
//	RefreshScheduleMap{ "key": RefreshScheduleArgs{...} }
type RefreshScheduleMapInput interface {
	pulumi.Input

	ToRefreshScheduleMapOutput() RefreshScheduleMapOutput
	ToRefreshScheduleMapOutputWithContext(context.Context) RefreshScheduleMapOutput
}

type RefreshScheduleMapArgs struct {
	RefreshType RefreshScheduleMapRefreshTypePtrInput `pulumi:"refreshType"`
	// <p>Information about the schedule frequency.</p>
	ScheduleFrequency RefreshScheduleMapScheduleFrequencyPropertiesPtrInput `pulumi:"scheduleFrequency"`
	// <p>An unique identifier for the refresh schedule.</p>
	ScheduleId pulumi.StringPtrInput `pulumi:"scheduleId"`
	// <p>The date time after which refresh is to be scheduled</p>
	StartAfterDateTime pulumi.StringPtrInput `pulumi:"startAfterDateTime"`
}

func (RefreshScheduleMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMap)(nil)).Elem()
}

func (i RefreshScheduleMapArgs) ToRefreshScheduleMapOutput() RefreshScheduleMapOutput {
	return i.ToRefreshScheduleMapOutputWithContext(context.Background())
}

func (i RefreshScheduleMapArgs) ToRefreshScheduleMapOutputWithContext(ctx context.Context) RefreshScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapOutput)
}

func (i RefreshScheduleMapArgs) ToRefreshScheduleMapPtrOutput() RefreshScheduleMapPtrOutput {
	return i.ToRefreshScheduleMapPtrOutputWithContext(context.Background())
}

func (i RefreshScheduleMapArgs) ToRefreshScheduleMapPtrOutputWithContext(ctx context.Context) RefreshScheduleMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapOutput).ToRefreshScheduleMapPtrOutputWithContext(ctx)
}

// RefreshScheduleMapPtrInput is an input type that accepts RefreshScheduleMapArgs, RefreshScheduleMapPtr and RefreshScheduleMapPtrOutput values.
// You can construct a concrete instance of `RefreshScheduleMapPtrInput` via:
//
//	        RefreshScheduleMapArgs{...}
//
//	or:
//
//	        nil
type RefreshScheduleMapPtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapPtrOutput() RefreshScheduleMapPtrOutput
	ToRefreshScheduleMapPtrOutputWithContext(context.Context) RefreshScheduleMapPtrOutput
}

type refreshScheduleMapPtrType RefreshScheduleMapArgs

func RefreshScheduleMapPtr(v *RefreshScheduleMapArgs) RefreshScheduleMapPtrInput {
	return (*refreshScheduleMapPtrType)(v)
}

func (*refreshScheduleMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMap)(nil)).Elem()
}

func (i *refreshScheduleMapPtrType) ToRefreshScheduleMapPtrOutput() RefreshScheduleMapPtrOutput {
	return i.ToRefreshScheduleMapPtrOutputWithContext(context.Background())
}

func (i *refreshScheduleMapPtrType) ToRefreshScheduleMapPtrOutputWithContext(ctx context.Context) RefreshScheduleMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapPtrOutput)
}

type RefreshScheduleMapOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMap)(nil)).Elem()
}

func (o RefreshScheduleMapOutput) ToRefreshScheduleMapOutput() RefreshScheduleMapOutput {
	return o
}

func (o RefreshScheduleMapOutput) ToRefreshScheduleMapOutputWithContext(ctx context.Context) RefreshScheduleMapOutput {
	return o
}

func (o RefreshScheduleMapOutput) ToRefreshScheduleMapPtrOutput() RefreshScheduleMapPtrOutput {
	return o.ToRefreshScheduleMapPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapOutput) ToRefreshScheduleMapPtrOutputWithContext(ctx context.Context) RefreshScheduleMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMap) *RefreshScheduleMap {
		return &v
	}).(RefreshScheduleMapPtrOutput)
}

func (o RefreshScheduleMapOutput) RefreshType() RefreshScheduleMapRefreshTypePtrOutput {
	return o.ApplyT(func(v RefreshScheduleMap) *RefreshScheduleMapRefreshType { return v.RefreshType }).(RefreshScheduleMapRefreshTypePtrOutput)
}

// <p>Information about the schedule frequency.</p>
func (o RefreshScheduleMapOutput) ScheduleFrequency() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMap) *RefreshScheduleMapScheduleFrequencyProperties { return v.ScheduleFrequency }).(RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput)
}

// <p>An unique identifier for the refresh schedule.</p>
func (o RefreshScheduleMapOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMap) *string { return v.ScheduleId }).(pulumi.StringPtrOutput)
}

// <p>The date time after which refresh is to be scheduled</p>
func (o RefreshScheduleMapOutput) StartAfterDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMap) *string { return v.StartAfterDateTime }).(pulumi.StringPtrOutput)
}

type RefreshScheduleMapPtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMap)(nil)).Elem()
}

func (o RefreshScheduleMapPtrOutput) ToRefreshScheduleMapPtrOutput() RefreshScheduleMapPtrOutput {
	return o
}

func (o RefreshScheduleMapPtrOutput) ToRefreshScheduleMapPtrOutputWithContext(ctx context.Context) RefreshScheduleMapPtrOutput {
	return o
}

func (o RefreshScheduleMapPtrOutput) Elem() RefreshScheduleMapOutput {
	return o.ApplyT(func(v *RefreshScheduleMap) RefreshScheduleMap {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMap
		return ret
	}).(RefreshScheduleMapOutput)
}

func (o RefreshScheduleMapPtrOutput) RefreshType() RefreshScheduleMapRefreshTypePtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMap) *RefreshScheduleMapRefreshType {
		if v == nil {
			return nil
		}
		return v.RefreshType
	}).(RefreshScheduleMapRefreshTypePtrOutput)
}

// <p>Information about the schedule frequency.</p>
func (o RefreshScheduleMapPtrOutput) ScheduleFrequency() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMap) *RefreshScheduleMapScheduleFrequencyProperties {
		if v == nil {
			return nil
		}
		return v.ScheduleFrequency
	}).(RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput)
}

// <p>An unique identifier for the refresh schedule.</p>
func (o RefreshScheduleMapPtrOutput) ScheduleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMap) *string {
		if v == nil {
			return nil
		}
		return v.ScheduleId
	}).(pulumi.StringPtrOutput)
}

// <p>The date time after which refresh is to be scheduled</p>
func (o RefreshScheduleMapPtrOutput) StartAfterDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMap) *string {
		if v == nil {
			return nil
		}
		return v.StartAfterDateTime
	}).(pulumi.StringPtrOutput)
}

// <p>Information about the schedule frequency.</p>
type RefreshScheduleMapScheduleFrequencyProperties struct {
	Interval *RefreshScheduleMapScheduleFrequencyPropertiesInterval `pulumi:"interval"`
	// <p>The day scheduled for refresh.</p>
	RefreshOnDay *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties `pulumi:"refreshOnDay"`
	// <p>The time of the day for scheduled refresh.</p>
	TimeOfTheDay *string `pulumi:"timeOfTheDay"`
	// <p>The timezone for scheduled refresh.</p>
	TimeZone *string `pulumi:"timeZone"`
}

// RefreshScheduleMapScheduleFrequencyPropertiesInput is an input type that accepts RefreshScheduleMapScheduleFrequencyPropertiesArgs and RefreshScheduleMapScheduleFrequencyPropertiesOutput values.
// You can construct a concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesInput` via:
//
//	RefreshScheduleMapScheduleFrequencyPropertiesArgs{...}
type RefreshScheduleMapScheduleFrequencyPropertiesInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesOutput
}

// <p>Information about the schedule frequency.</p>
type RefreshScheduleMapScheduleFrequencyPropertiesArgs struct {
	Interval RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrInput `pulumi:"interval"`
	// <p>The day scheduled for refresh.</p>
	RefreshOnDay RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput `pulumi:"refreshOnDay"`
	// <p>The time of the day for scheduled refresh.</p>
	TimeOfTheDay pulumi.StringPtrInput `pulumi:"timeOfTheDay"`
	// <p>The timezone for scheduled refresh.</p>
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (RefreshScheduleMapScheduleFrequencyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyProperties)(nil)).Elem()
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesOutputWithContext(context.Background())
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesOutput)
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(context.Background())
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesOutput).ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(ctx)
}

// RefreshScheduleMapScheduleFrequencyPropertiesPtrInput is an input type that accepts RefreshScheduleMapScheduleFrequencyPropertiesArgs, RefreshScheduleMapScheduleFrequencyPropertiesPtr and RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput values.
// You can construct a concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesPtrInput` via:
//
//	        RefreshScheduleMapScheduleFrequencyPropertiesArgs{...}
//
//	or:
//
//	        nil
type RefreshScheduleMapScheduleFrequencyPropertiesPtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput
}

type refreshScheduleMapScheduleFrequencyPropertiesPtrType RefreshScheduleMapScheduleFrequencyPropertiesArgs

func RefreshScheduleMapScheduleFrequencyPropertiesPtr(v *RefreshScheduleMapScheduleFrequencyPropertiesArgs) RefreshScheduleMapScheduleFrequencyPropertiesPtrInput {
	return (*refreshScheduleMapScheduleFrequencyPropertiesPtrType)(v)
}

func (*refreshScheduleMapScheduleFrequencyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyProperties)(nil)).Elem()
}

func (i *refreshScheduleMapScheduleFrequencyPropertiesPtrType) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(context.Background())
}

func (i *refreshScheduleMapScheduleFrequencyPropertiesPtrType) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput)
}

// <p>Information about the schedule frequency.</p>
type RefreshScheduleMapScheduleFrequencyPropertiesOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyProperties)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o.ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMapScheduleFrequencyProperties) *RefreshScheduleMapScheduleFrequencyProperties {
		return &v
	}).(RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) Interval() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyProperties) *RefreshScheduleMapScheduleFrequencyPropertiesInterval {
		return v.Interval
	}).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput)
}

// <p>The day scheduled for refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) RefreshOnDay() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyProperties) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties {
		return v.RefreshOnDay
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput)
}

// <p>The time of the day for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) TimeOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyProperties) *string { return v.TimeOfTheDay }).(pulumi.StringPtrOutput)
}

// <p>The timezone for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyProperties) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyProperties)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) Elem() RefreshScheduleMapScheduleFrequencyPropertiesOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyProperties) RefreshScheduleMapScheduleFrequencyProperties {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMapScheduleFrequencyProperties
		return ret
	}).(RefreshScheduleMapScheduleFrequencyPropertiesOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) Interval() RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyProperties) *RefreshScheduleMapScheduleFrequencyPropertiesInterval {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(RefreshScheduleMapScheduleFrequencyPropertiesIntervalPtrOutput)
}

// <p>The day scheduled for refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) RefreshOnDay() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyProperties) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties {
		if v == nil {
			return nil
		}
		return v.RefreshOnDay
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput)
}

// <p>The time of the day for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) TimeOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeOfTheDay
	}).(pulumi.StringPtrOutput)
}

// <p>The timezone for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// <p>The day scheduled for refresh.</p>
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties struct {
	// <p>The Day Of Month for scheduled refresh.</p>
	DayOfMonth *string                                                                       `pulumi:"dayOfMonth"`
	DayOfWeek  *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek `pulumi:"dayOfWeek"`
}

// RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesInput is an input type that accepts RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs and RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput values.
// You can construct a concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesInput` via:
//
//	RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs{...}
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput
}

// <p>The day scheduled for refresh.</p>
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs struct {
	// <p>The Day Of Month for scheduled refresh.</p>
	DayOfMonth pulumi.StringPtrInput                                                                `pulumi:"dayOfMonth"`
	DayOfWeek  RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrInput `pulumi:"dayOfWeek"`
}

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties)(nil)).Elem()
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutputWithContext(context.Background())
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput)
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(context.Background())
}

func (i RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput).ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(ctx)
}

// RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput is an input type that accepts RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs, RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtr and RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput values.
// You can construct a concrete instance of `RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput` via:
//
//	        RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs{...}
//
//	or:
//
//	        nil
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput interface {
	pulumi.Input

	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput
	ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput
}

type refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrType RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs

func RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtr(v *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput {
	return (*refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrType)(v)
}

func (*refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties)(nil)).Elem()
}

func (i *refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrType) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return i.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(context.Background())
}

func (i *refreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrType) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput)
}

// <p>The day scheduled for refresh.</p>
type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o.ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(context.Background())
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties {
		return &v
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput)
}

// <p>The Day Of Month for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) DayOfMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) *string {
		return v.DayOfMonth
	}).(pulumi.StringPtrOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput) DayOfWeek() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o.ApplyT(func(v RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek {
		return v.DayOfWeek
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput)
}

type RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties)(nil)).Elem()
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) ToRefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutputWithContext(ctx context.Context) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput {
	return o
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) Elem() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties {
		if v != nil {
			return *v
		}
		var ret RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties
		return ret
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput)
}

// <p>The Day Of Month for scheduled refresh.</p>
func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) DayOfMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) *string {
		if v == nil {
			return nil
		}
		return v.DayOfMonth
	}).(pulumi.StringPtrOutput)
}

func (o RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput) DayOfWeek() RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput {
	return o.ApplyT(func(v *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayProperties) *RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeek {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesDayOfWeekPtrOutput)
}

type TemplateAggregationFunction struct {
	AttributeAggregationFunction   *TemplateAttributeAggregationFunction   `pulumi:"attributeAggregationFunction"`
	CategoricalAggregationFunction *TemplateCategoricalAggregationFunction `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        *TemplateDateAggregationFunction        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   *TemplateNumericalAggregationFunction   `pulumi:"numericalAggregationFunction"`
}

// TemplateAggregationFunctionInput is an input type that accepts TemplateAggregationFunctionArgs and TemplateAggregationFunctionOutput values.
// You can construct a concrete instance of `TemplateAggregationFunctionInput` via:
//
//	TemplateAggregationFunctionArgs{...}
type TemplateAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput
	ToTemplateAggregationFunctionOutputWithContext(context.Context) TemplateAggregationFunctionOutput
}

type TemplateAggregationFunctionArgs struct {
	AttributeAggregationFunction   TemplateAttributeAggregationFunctionPtrInput   `pulumi:"attributeAggregationFunction"`
	CategoricalAggregationFunction TemplateCategoricalAggregationFunctionPtrInput `pulumi:"categoricalAggregationFunction"`
	DateAggregationFunction        TemplateDateAggregationFunctionPtrInput        `pulumi:"dateAggregationFunction"`
	NumericalAggregationFunction   TemplateNumericalAggregationFunctionPtrInput   `pulumi:"numericalAggregationFunction"`
}

func (TemplateAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationFunction)(nil)).Elem()
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput {
	return i.ToTemplateAggregationFunctionOutputWithContext(context.Background())
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionOutputWithContext(ctx context.Context) TemplateAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionOutput)
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return i.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i TemplateAggregationFunctionArgs) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionOutput).ToTemplateAggregationFunctionPtrOutputWithContext(ctx)
}

// TemplateAggregationFunctionPtrInput is an input type that accepts TemplateAggregationFunctionArgs, TemplateAggregationFunctionPtr and TemplateAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `TemplateAggregationFunctionPtrInput` via:
//
//	        TemplateAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type TemplateAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput
	ToTemplateAggregationFunctionPtrOutputWithContext(context.Context) TemplateAggregationFunctionPtrOutput
}

type templateAggregationFunctionPtrType TemplateAggregationFunctionArgs

func TemplateAggregationFunctionPtr(v *TemplateAggregationFunctionArgs) TemplateAggregationFunctionPtrInput {
	return (*templateAggregationFunctionPtrType)(v)
}

func (*templateAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAggregationFunction)(nil)).Elem()
}

func (i *templateAggregationFunctionPtrType) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return i.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *templateAggregationFunctionPtrType) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationFunctionPtrOutput)
}

type TemplateAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationFunction)(nil)).Elem()
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionOutput() TemplateAggregationFunctionOutput {
	return o
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionOutputWithContext(ctx context.Context) TemplateAggregationFunctionOutput {
	return o
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return o.ToTemplateAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateAggregationFunctionOutput) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAggregationFunction) *TemplateAggregationFunction {
		return &v
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) AttributeAggregationFunction() TemplateAttributeAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateAttributeAggregationFunction {
		return v.AttributeAggregationFunction
	}).(TemplateAttributeAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) CategoricalAggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateCategoricalAggregationFunction {
		return v.CategoricalAggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) DateAggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateDateAggregationFunction { return v.DateAggregationFunction }).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionOutput) NumericalAggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationFunction) *TemplateNumericalAggregationFunction {
		return v.NumericalAggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

type TemplateAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAggregationFunction)(nil)).Elem()
}

func (o TemplateAggregationFunctionPtrOutput) ToTemplateAggregationFunctionPtrOutput() TemplateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAggregationFunctionPtrOutput) ToTemplateAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAggregationFunctionPtrOutput) Elem() TemplateAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) TemplateAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateAggregationFunction
		return ret
	}).(TemplateAggregationFunctionOutput)
}

func (o TemplateAggregationFunctionPtrOutput) AttributeAggregationFunction() TemplateAttributeAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateAttributeAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AttributeAggregationFunction
	}).(TemplateAttributeAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionPtrOutput) CategoricalAggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.CategoricalAggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionPtrOutput) DateAggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.DateAggregationFunction
	}).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationFunctionPtrOutput) NumericalAggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAggregationFunction) *TemplateNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.NumericalAggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

type TemplateAggregationSortConfiguration struct {
	AggregationFunction *TemplateAggregationFunction `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier     `pulumi:"column"`
	SortDirection       TemplateSortDirection        `pulumi:"sortDirection"`
}

// TemplateAggregationSortConfigurationInput is an input type that accepts TemplateAggregationSortConfigurationArgs and TemplateAggregationSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateAggregationSortConfigurationInput` via:
//
//	TemplateAggregationSortConfigurationArgs{...}
type TemplateAggregationSortConfigurationInput interface {
	pulumi.Input

	ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput
	ToTemplateAggregationSortConfigurationOutputWithContext(context.Context) TemplateAggregationSortConfigurationOutput
}

type TemplateAggregationSortConfigurationArgs struct {
	AggregationFunction TemplateAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput       `pulumi:"column"`
	SortDirection       TemplateSortDirectionInput          `pulumi:"sortDirection"`
}

func (TemplateAggregationSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (i TemplateAggregationSortConfigurationArgs) ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput {
	return i.ToTemplateAggregationSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateAggregationSortConfigurationArgs) ToTemplateAggregationSortConfigurationOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationSortConfigurationOutput)
}

// TemplateAggregationSortConfigurationArrayInput is an input type that accepts TemplateAggregationSortConfigurationArray and TemplateAggregationSortConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateAggregationSortConfigurationArrayInput` via:
//
//	TemplateAggregationSortConfigurationArray{ TemplateAggregationSortConfigurationArgs{...} }
type TemplateAggregationSortConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput
	ToTemplateAggregationSortConfigurationArrayOutputWithContext(context.Context) TemplateAggregationSortConfigurationArrayOutput
}

type TemplateAggregationSortConfigurationArray []TemplateAggregationSortConfigurationInput

func (TemplateAggregationSortConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (i TemplateAggregationSortConfigurationArray) ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput {
	return i.ToTemplateAggregationSortConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateAggregationSortConfigurationArray) ToTemplateAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAggregationSortConfigurationArrayOutput)
}

type TemplateAggregationSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateAggregationSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (o TemplateAggregationSortConfigurationOutput) ToTemplateAggregationSortConfigurationOutput() TemplateAggregationSortConfigurationOutput {
	return o
}

func (o TemplateAggregationSortConfigurationOutput) ToTemplateAggregationSortConfigurationOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationOutput {
	return o
}

func (o TemplateAggregationSortConfigurationOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) *TemplateAggregationFunction {
		return v.AggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateAggregationSortConfigurationOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateAggregationSortConfigurationOutput) SortDirection() TemplateSortDirectionOutput {
	return o.ApplyT(func(v TemplateAggregationSortConfiguration) TemplateSortDirection { return v.SortDirection }).(TemplateSortDirectionOutput)
}

type TemplateAggregationSortConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateAggregationSortConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAggregationSortConfiguration)(nil)).Elem()
}

func (o TemplateAggregationSortConfigurationArrayOutput) ToTemplateAggregationSortConfigurationArrayOutput() TemplateAggregationSortConfigurationArrayOutput {
	return o
}

func (o TemplateAggregationSortConfigurationArrayOutput) ToTemplateAggregationSortConfigurationArrayOutputWithContext(ctx context.Context) TemplateAggregationSortConfigurationArrayOutput {
	return o
}

func (o TemplateAggregationSortConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateAggregationSortConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateAggregationSortConfiguration {
		return vs[0].([]TemplateAggregationSortConfiguration)[vs[1].(int)]
	}).(TemplateAggregationSortConfigurationOutput)
}

type TemplateAllSheetsFilterScopeConfiguration struct {
}

// TemplateAllSheetsFilterScopeConfigurationInput is an input type that accepts TemplateAllSheetsFilterScopeConfigurationArgs and TemplateAllSheetsFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `TemplateAllSheetsFilterScopeConfigurationInput` via:
//
//	TemplateAllSheetsFilterScopeConfigurationArgs{...}
type TemplateAllSheetsFilterScopeConfigurationInput interface {
	pulumi.Input

	ToTemplateAllSheetsFilterScopeConfigurationOutput() TemplateAllSheetsFilterScopeConfigurationOutput
	ToTemplateAllSheetsFilterScopeConfigurationOutputWithContext(context.Context) TemplateAllSheetsFilterScopeConfigurationOutput
}

type TemplateAllSheetsFilterScopeConfigurationArgs struct {
}

func (TemplateAllSheetsFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAllSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i TemplateAllSheetsFilterScopeConfigurationArgs) ToTemplateAllSheetsFilterScopeConfigurationOutput() TemplateAllSheetsFilterScopeConfigurationOutput {
	return i.ToTemplateAllSheetsFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i TemplateAllSheetsFilterScopeConfigurationArgs) ToTemplateAllSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAllSheetsFilterScopeConfigurationOutput)
}

func (i TemplateAllSheetsFilterScopeConfigurationArgs) ToTemplateAllSheetsFilterScopeConfigurationPtrOutput() TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return i.ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateAllSheetsFilterScopeConfigurationArgs) ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAllSheetsFilterScopeConfigurationOutput).ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(ctx)
}

// TemplateAllSheetsFilterScopeConfigurationPtrInput is an input type that accepts TemplateAllSheetsFilterScopeConfigurationArgs, TemplateAllSheetsFilterScopeConfigurationPtr and TemplateAllSheetsFilterScopeConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateAllSheetsFilterScopeConfigurationPtrInput` via:
//
//	        TemplateAllSheetsFilterScopeConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateAllSheetsFilterScopeConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateAllSheetsFilterScopeConfigurationPtrOutput() TemplateAllSheetsFilterScopeConfigurationPtrOutput
	ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(context.Context) TemplateAllSheetsFilterScopeConfigurationPtrOutput
}

type templateAllSheetsFilterScopeConfigurationPtrType TemplateAllSheetsFilterScopeConfigurationArgs

func TemplateAllSheetsFilterScopeConfigurationPtr(v *TemplateAllSheetsFilterScopeConfigurationArgs) TemplateAllSheetsFilterScopeConfigurationPtrInput {
	return (*templateAllSheetsFilterScopeConfigurationPtrType)(v)
}

func (*templateAllSheetsFilterScopeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAllSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i *templateAllSheetsFilterScopeConfigurationPtrType) ToTemplateAllSheetsFilterScopeConfigurationPtrOutput() TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return i.ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateAllSheetsFilterScopeConfigurationPtrType) ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAllSheetsFilterScopeConfigurationPtrOutput)
}

type TemplateAllSheetsFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateAllSheetsFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAllSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o TemplateAllSheetsFilterScopeConfigurationOutput) ToTemplateAllSheetsFilterScopeConfigurationOutput() TemplateAllSheetsFilterScopeConfigurationOutput {
	return o
}

func (o TemplateAllSheetsFilterScopeConfigurationOutput) ToTemplateAllSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationOutput {
	return o
}

func (o TemplateAllSheetsFilterScopeConfigurationOutput) ToTemplateAllSheetsFilterScopeConfigurationPtrOutput() TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return o.ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateAllSheetsFilterScopeConfigurationOutput) ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAllSheetsFilterScopeConfiguration) *TemplateAllSheetsFilterScopeConfiguration {
		return &v
	}).(TemplateAllSheetsFilterScopeConfigurationPtrOutput)
}

type TemplateAllSheetsFilterScopeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateAllSheetsFilterScopeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAllSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o TemplateAllSheetsFilterScopeConfigurationPtrOutput) ToTemplateAllSheetsFilterScopeConfigurationPtrOutput() TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o TemplateAllSheetsFilterScopeConfigurationPtrOutput) ToTemplateAllSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o TemplateAllSheetsFilterScopeConfigurationPtrOutput) Elem() TemplateAllSheetsFilterScopeConfigurationOutput {
	return o.ApplyT(func(v *TemplateAllSheetsFilterScopeConfiguration) TemplateAllSheetsFilterScopeConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateAllSheetsFilterScopeConfiguration
		return ret
	}).(TemplateAllSheetsFilterScopeConfigurationOutput)
}

type TemplateAnalysisDefaults struct {
	DefaultNewSheetConfiguration TemplateDefaultNewSheetConfiguration `pulumi:"defaultNewSheetConfiguration"`
}

// TemplateAnalysisDefaultsInput is an input type that accepts TemplateAnalysisDefaultsArgs and TemplateAnalysisDefaultsOutput values.
// You can construct a concrete instance of `TemplateAnalysisDefaultsInput` via:
//
//	TemplateAnalysisDefaultsArgs{...}
type TemplateAnalysisDefaultsInput interface {
	pulumi.Input

	ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput
	ToTemplateAnalysisDefaultsOutputWithContext(context.Context) TemplateAnalysisDefaultsOutput
}

type TemplateAnalysisDefaultsArgs struct {
	DefaultNewSheetConfiguration TemplateDefaultNewSheetConfigurationInput `pulumi:"defaultNewSheetConfiguration"`
}

func (TemplateAnalysisDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnalysisDefaults)(nil)).Elem()
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput {
	return i.ToTemplateAnalysisDefaultsOutputWithContext(context.Background())
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsOutput)
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return i.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i TemplateAnalysisDefaultsArgs) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsOutput).ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx)
}

// TemplateAnalysisDefaultsPtrInput is an input type that accepts TemplateAnalysisDefaultsArgs, TemplateAnalysisDefaultsPtr and TemplateAnalysisDefaultsPtrOutput values.
// You can construct a concrete instance of `TemplateAnalysisDefaultsPtrInput` via:
//
//	        TemplateAnalysisDefaultsArgs{...}
//
//	or:
//
//	        nil
type TemplateAnalysisDefaultsPtrInput interface {
	pulumi.Input

	ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput
	ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Context) TemplateAnalysisDefaultsPtrOutput
}

type templateAnalysisDefaultsPtrType TemplateAnalysisDefaultsArgs

func TemplateAnalysisDefaultsPtr(v *TemplateAnalysisDefaultsArgs) TemplateAnalysisDefaultsPtrInput {
	return (*templateAnalysisDefaultsPtrType)(v)
}

func (*templateAnalysisDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnalysisDefaults)(nil)).Elem()
}

func (i *templateAnalysisDefaultsPtrType) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return i.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (i *templateAnalysisDefaultsPtrType) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnalysisDefaultsPtrOutput)
}

type TemplateAnalysisDefaultsOutput struct{ *pulumi.OutputState }

func (TemplateAnalysisDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnalysisDefaults)(nil)).Elem()
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsOutput() TemplateAnalysisDefaultsOutput {
	return o
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsOutput {
	return o
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return o.ToTemplateAnalysisDefaultsPtrOutputWithContext(context.Background())
}

func (o TemplateAnalysisDefaultsOutput) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAnalysisDefaults) *TemplateAnalysisDefaults {
		return &v
	}).(TemplateAnalysisDefaultsPtrOutput)
}

func (o TemplateAnalysisDefaultsOutput) DefaultNewSheetConfiguration() TemplateDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v TemplateAnalysisDefaults) TemplateDefaultNewSheetConfiguration {
		return v.DefaultNewSheetConfiguration
	}).(TemplateDefaultNewSheetConfigurationOutput)
}

type TemplateAnalysisDefaultsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAnalysisDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnalysisDefaults)(nil)).Elem()
}

func (o TemplateAnalysisDefaultsPtrOutput) ToTemplateAnalysisDefaultsPtrOutput() TemplateAnalysisDefaultsPtrOutput {
	return o
}

func (o TemplateAnalysisDefaultsPtrOutput) ToTemplateAnalysisDefaultsPtrOutputWithContext(ctx context.Context) TemplateAnalysisDefaultsPtrOutput {
	return o
}

func (o TemplateAnalysisDefaultsPtrOutput) Elem() TemplateAnalysisDefaultsOutput {
	return o.ApplyT(func(v *TemplateAnalysisDefaults) TemplateAnalysisDefaults {
		if v != nil {
			return *v
		}
		var ret TemplateAnalysisDefaults
		return ret
	}).(TemplateAnalysisDefaultsOutput)
}

func (o TemplateAnalysisDefaultsPtrOutput) DefaultNewSheetConfiguration() TemplateDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateAnalysisDefaults) *TemplateDefaultNewSheetConfiguration {
		if v == nil {
			return nil
		}
		return &v.DefaultNewSheetConfiguration
	}).(TemplateDefaultNewSheetConfigurationPtrOutput)
}

type TemplateAnchorDateConfiguration struct {
	AnchorOption  *TemplateAnchorOption `pulumi:"anchorOption"`
	ParameterName *string               `pulumi:"parameterName"`
}

// TemplateAnchorDateConfigurationInput is an input type that accepts TemplateAnchorDateConfigurationArgs and TemplateAnchorDateConfigurationOutput values.
// You can construct a concrete instance of `TemplateAnchorDateConfigurationInput` via:
//
//	TemplateAnchorDateConfigurationArgs{...}
type TemplateAnchorDateConfigurationInput interface {
	pulumi.Input

	ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput
	ToTemplateAnchorDateConfigurationOutputWithContext(context.Context) TemplateAnchorDateConfigurationOutput
}

type TemplateAnchorDateConfigurationArgs struct {
	AnchorOption  TemplateAnchorOptionPtrInput `pulumi:"anchorOption"`
	ParameterName pulumi.StringPtrInput        `pulumi:"parameterName"`
}

func (TemplateAnchorDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput {
	return i.ToTemplateAnchorDateConfigurationOutputWithContext(context.Background())
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationOutput)
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return i.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateAnchorDateConfigurationArgs) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationOutput).ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx)
}

// TemplateAnchorDateConfigurationPtrInput is an input type that accepts TemplateAnchorDateConfigurationArgs, TemplateAnchorDateConfigurationPtr and TemplateAnchorDateConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateAnchorDateConfigurationPtrInput` via:
//
//	        TemplateAnchorDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateAnchorDateConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput
	ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Context) TemplateAnchorDateConfigurationPtrOutput
}

type templateAnchorDateConfigurationPtrType TemplateAnchorDateConfigurationArgs

func TemplateAnchorDateConfigurationPtr(v *TemplateAnchorDateConfigurationArgs) TemplateAnchorDateConfigurationPtrInput {
	return (*templateAnchorDateConfigurationPtrType)(v)
}

func (*templateAnchorDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (i *templateAnchorDateConfigurationPtrType) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return i.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateAnchorDateConfigurationPtrType) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAnchorDateConfigurationPtrOutput)
}

type TemplateAnchorDateConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateAnchorDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationOutput() TemplateAnchorDateConfigurationOutput {
	return o
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationOutput {
	return o
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return o.ToTemplateAnchorDateConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateAnchorDateConfigurationOutput) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAnchorDateConfiguration) *TemplateAnchorDateConfiguration {
		return &v
	}).(TemplateAnchorDateConfigurationPtrOutput)
}

func (o TemplateAnchorDateConfigurationOutput) AnchorOption() TemplateAnchorOptionPtrOutput {
	return o.ApplyT(func(v TemplateAnchorDateConfiguration) *TemplateAnchorOption { return v.AnchorOption }).(TemplateAnchorOptionPtrOutput)
}

func (o TemplateAnchorDateConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAnchorDateConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

type TemplateAnchorDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateAnchorDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAnchorDateConfiguration)(nil)).Elem()
}

func (o TemplateAnchorDateConfigurationPtrOutput) ToTemplateAnchorDateConfigurationPtrOutput() TemplateAnchorDateConfigurationPtrOutput {
	return o
}

func (o TemplateAnchorDateConfigurationPtrOutput) ToTemplateAnchorDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateAnchorDateConfigurationPtrOutput {
	return o
}

func (o TemplateAnchorDateConfigurationPtrOutput) Elem() TemplateAnchorDateConfigurationOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) TemplateAnchorDateConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateAnchorDateConfiguration
		return ret
	}).(TemplateAnchorDateConfigurationOutput)
}

func (o TemplateAnchorDateConfigurationPtrOutput) AnchorOption() TemplateAnchorOptionPtrOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) *TemplateAnchorOption {
		if v == nil {
			return nil
		}
		return v.AnchorOption
	}).(TemplateAnchorOptionPtrOutput)
}

func (o TemplateAnchorDateConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAnchorDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

type TemplateArcAxisConfiguration struct {
	Range        *TemplateArcAxisDisplayRange `pulumi:"range"`
	ReserveRange *float64                     `pulumi:"reserveRange"`
}

// TemplateArcAxisConfigurationInput is an input type that accepts TemplateArcAxisConfigurationArgs and TemplateArcAxisConfigurationOutput values.
// You can construct a concrete instance of `TemplateArcAxisConfigurationInput` via:
//
//	TemplateArcAxisConfigurationArgs{...}
type TemplateArcAxisConfigurationInput interface {
	pulumi.Input

	ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput
	ToTemplateArcAxisConfigurationOutputWithContext(context.Context) TemplateArcAxisConfigurationOutput
}

type TemplateArcAxisConfigurationArgs struct {
	Range        TemplateArcAxisDisplayRangePtrInput `pulumi:"range"`
	ReserveRange pulumi.Float64PtrInput              `pulumi:"reserveRange"`
}

func (TemplateArcAxisConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisConfiguration)(nil)).Elem()
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput {
	return i.ToTemplateArcAxisConfigurationOutputWithContext(context.Background())
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationOutput)
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return i.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateArcAxisConfigurationArgs) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationOutput).ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx)
}

// TemplateArcAxisConfigurationPtrInput is an input type that accepts TemplateArcAxisConfigurationArgs, TemplateArcAxisConfigurationPtr and TemplateArcAxisConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateArcAxisConfigurationPtrInput` via:
//
//	        TemplateArcAxisConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateArcAxisConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput
	ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Context) TemplateArcAxisConfigurationPtrOutput
}

type templateArcAxisConfigurationPtrType TemplateArcAxisConfigurationArgs

func TemplateArcAxisConfigurationPtr(v *TemplateArcAxisConfigurationArgs) TemplateArcAxisConfigurationPtrInput {
	return (*templateArcAxisConfigurationPtrType)(v)
}

func (*templateArcAxisConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisConfiguration)(nil)).Elem()
}

func (i *templateArcAxisConfigurationPtrType) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return i.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateArcAxisConfigurationPtrType) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisConfigurationPtrOutput)
}

type TemplateArcAxisConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisConfiguration)(nil)).Elem()
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationOutput() TemplateArcAxisConfigurationOutput {
	return o
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationOutput {
	return o
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return o.ToTemplateArcAxisConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateArcAxisConfigurationOutput) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcAxisConfiguration) *TemplateArcAxisConfiguration {
		return &v
	}).(TemplateArcAxisConfigurationPtrOutput)
}

func (o TemplateArcAxisConfigurationOutput) Range() TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v TemplateArcAxisConfiguration) *TemplateArcAxisDisplayRange { return v.Range }).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisConfigurationOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisConfiguration) *float64 { return v.ReserveRange }).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisConfiguration)(nil)).Elem()
}

func (o TemplateArcAxisConfigurationPtrOutput) ToTemplateArcAxisConfigurationPtrOutput() TemplateArcAxisConfigurationPtrOutput {
	return o
}

func (o TemplateArcAxisConfigurationPtrOutput) ToTemplateArcAxisConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcAxisConfigurationPtrOutput {
	return o
}

func (o TemplateArcAxisConfigurationPtrOutput) Elem() TemplateArcAxisConfigurationOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) TemplateArcAxisConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateArcAxisConfiguration
		return ret
	}).(TemplateArcAxisConfigurationOutput)
}

func (o TemplateArcAxisConfigurationPtrOutput) Range() TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) *TemplateArcAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisConfigurationPtrOutput) ReserveRange() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ReserveRange
	}).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisDisplayRange struct {
	Max *float64 `pulumi:"max"`
	Min *float64 `pulumi:"min"`
}

// TemplateArcAxisDisplayRangeInput is an input type that accepts TemplateArcAxisDisplayRangeArgs and TemplateArcAxisDisplayRangeOutput values.
// You can construct a concrete instance of `TemplateArcAxisDisplayRangeInput` via:
//
//	TemplateArcAxisDisplayRangeArgs{...}
type TemplateArcAxisDisplayRangeInput interface {
	pulumi.Input

	ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput
	ToTemplateArcAxisDisplayRangeOutputWithContext(context.Context) TemplateArcAxisDisplayRangeOutput
}

type TemplateArcAxisDisplayRangeArgs struct {
	Max pulumi.Float64PtrInput `pulumi:"max"`
	Min pulumi.Float64PtrInput `pulumi:"min"`
}

func (TemplateArcAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput {
	return i.ToTemplateArcAxisDisplayRangeOutputWithContext(context.Background())
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangeOutput)
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return i.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i TemplateArcAxisDisplayRangeArgs) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangeOutput).ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx)
}

// TemplateArcAxisDisplayRangePtrInput is an input type that accepts TemplateArcAxisDisplayRangeArgs, TemplateArcAxisDisplayRangePtr and TemplateArcAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `TemplateArcAxisDisplayRangePtrInput` via:
//
//	        TemplateArcAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateArcAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput
	ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Context) TemplateArcAxisDisplayRangePtrOutput
}

type templateArcAxisDisplayRangePtrType TemplateArcAxisDisplayRangeArgs

func TemplateArcAxisDisplayRangePtr(v *TemplateArcAxisDisplayRangeArgs) TemplateArcAxisDisplayRangePtrInput {
	return (*templateArcAxisDisplayRangePtrType)(v)
}

func (*templateArcAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (i *templateArcAxisDisplayRangePtrType) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return i.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *templateArcAxisDisplayRangePtrType) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcAxisDisplayRangePtrOutput)
}

type TemplateArcAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangeOutput() TemplateArcAxisDisplayRangeOutput {
	return o
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangeOutput {
	return o
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return o.ToTemplateArcAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o TemplateArcAxisDisplayRangeOutput) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcAxisDisplayRange) *TemplateArcAxisDisplayRange {
		return &v
	}).(TemplateArcAxisDisplayRangePtrOutput)
}

func (o TemplateArcAxisDisplayRangeOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisDisplayRange) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o TemplateArcAxisDisplayRangeOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcAxisDisplayRange) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type TemplateArcAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateArcAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcAxisDisplayRange)(nil)).Elem()
}

func (o TemplateArcAxisDisplayRangePtrOutput) ToTemplateArcAxisDisplayRangePtrOutput() TemplateArcAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateArcAxisDisplayRangePtrOutput) ToTemplateArcAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateArcAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateArcAxisDisplayRangePtrOutput) Elem() TemplateArcAxisDisplayRangeOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) TemplateArcAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret TemplateArcAxisDisplayRange
		return ret
	}).(TemplateArcAxisDisplayRangeOutput)
}

func (o TemplateArcAxisDisplayRangePtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateArcAxisDisplayRangePtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcAxisDisplayRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

type TemplateArcConfiguration struct {
	ArcAngle     *float64                     `pulumi:"arcAngle"`
	ArcThickness *TemplateArcThicknessOptions `pulumi:"arcThickness"`
}

// TemplateArcConfigurationInput is an input type that accepts TemplateArcConfigurationArgs and TemplateArcConfigurationOutput values.
// You can construct a concrete instance of `TemplateArcConfigurationInput` via:
//
//	TemplateArcConfigurationArgs{...}
type TemplateArcConfigurationInput interface {
	pulumi.Input

	ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput
	ToTemplateArcConfigurationOutputWithContext(context.Context) TemplateArcConfigurationOutput
}

type TemplateArcConfigurationArgs struct {
	ArcAngle     pulumi.Float64PtrInput              `pulumi:"arcAngle"`
	ArcThickness TemplateArcThicknessOptionsPtrInput `pulumi:"arcThickness"`
}

func (TemplateArcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcConfiguration)(nil)).Elem()
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput {
	return i.ToTemplateArcConfigurationOutputWithContext(context.Background())
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationOutputWithContext(ctx context.Context) TemplateArcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationOutput)
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return i.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateArcConfigurationArgs) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationOutput).ToTemplateArcConfigurationPtrOutputWithContext(ctx)
}

// TemplateArcConfigurationPtrInput is an input type that accepts TemplateArcConfigurationArgs, TemplateArcConfigurationPtr and TemplateArcConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateArcConfigurationPtrInput` via:
//
//	        TemplateArcConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateArcConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput
	ToTemplateArcConfigurationPtrOutputWithContext(context.Context) TemplateArcConfigurationPtrOutput
}

type templateArcConfigurationPtrType TemplateArcConfigurationArgs

func TemplateArcConfigurationPtr(v *TemplateArcConfigurationArgs) TemplateArcConfigurationPtrInput {
	return (*templateArcConfigurationPtrType)(v)
}

func (*templateArcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcConfiguration)(nil)).Elem()
}

func (i *templateArcConfigurationPtrType) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return i.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateArcConfigurationPtrType) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcConfigurationPtrOutput)
}

type TemplateArcConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateArcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcConfiguration)(nil)).Elem()
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationOutput() TemplateArcConfigurationOutput {
	return o
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationOutputWithContext(ctx context.Context) TemplateArcConfigurationOutput {
	return o
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return o.ToTemplateArcConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateArcConfigurationOutput) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcConfiguration) *TemplateArcConfiguration {
		return &v
	}).(TemplateArcConfigurationPtrOutput)
}

func (o TemplateArcConfigurationOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateArcConfiguration) *float64 { return v.ArcAngle }).(pulumi.Float64PtrOutput)
}

func (o TemplateArcConfigurationOutput) ArcThickness() TemplateArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v TemplateArcConfiguration) *TemplateArcThicknessOptions { return v.ArcThickness }).(TemplateArcThicknessOptionsPtrOutput)
}

type TemplateArcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcConfiguration)(nil)).Elem()
}

func (o TemplateArcConfigurationPtrOutput) ToTemplateArcConfigurationPtrOutput() TemplateArcConfigurationPtrOutput {
	return o
}

func (o TemplateArcConfigurationPtrOutput) ToTemplateArcConfigurationPtrOutputWithContext(ctx context.Context) TemplateArcConfigurationPtrOutput {
	return o
}

func (o TemplateArcConfigurationPtrOutput) Elem() TemplateArcConfigurationOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) TemplateArcConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateArcConfiguration
		return ret
	}).(TemplateArcConfigurationOutput)
}

func (o TemplateArcConfigurationPtrOutput) ArcAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ArcAngle
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateArcConfigurationPtrOutput) ArcThickness() TemplateArcThicknessOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateArcConfiguration) *TemplateArcThicknessOptions {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(TemplateArcThicknessOptionsPtrOutput)
}

type TemplateArcOptions struct {
	ArcThickness *TemplateArcThickness `pulumi:"arcThickness"`
}

// TemplateArcOptionsInput is an input type that accepts TemplateArcOptionsArgs and TemplateArcOptionsOutput values.
// You can construct a concrete instance of `TemplateArcOptionsInput` via:
//
//	TemplateArcOptionsArgs{...}
type TemplateArcOptionsInput interface {
	pulumi.Input

	ToTemplateArcOptionsOutput() TemplateArcOptionsOutput
	ToTemplateArcOptionsOutputWithContext(context.Context) TemplateArcOptionsOutput
}

type TemplateArcOptionsArgs struct {
	ArcThickness TemplateArcThicknessPtrInput `pulumi:"arcThickness"`
}

func (TemplateArcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcOptions)(nil)).Elem()
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsOutput() TemplateArcOptionsOutput {
	return i.ToTemplateArcOptionsOutputWithContext(context.Background())
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsOutputWithContext(ctx context.Context) TemplateArcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsOutput)
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return i.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateArcOptionsArgs) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsOutput).ToTemplateArcOptionsPtrOutputWithContext(ctx)
}

// TemplateArcOptionsPtrInput is an input type that accepts TemplateArcOptionsArgs, TemplateArcOptionsPtr and TemplateArcOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateArcOptionsPtrInput` via:
//
//	        TemplateArcOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateArcOptionsPtrInput interface {
	pulumi.Input

	ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput
	ToTemplateArcOptionsPtrOutputWithContext(context.Context) TemplateArcOptionsPtrOutput
}

type templateArcOptionsPtrType TemplateArcOptionsArgs

func TemplateArcOptionsPtr(v *TemplateArcOptionsArgs) TemplateArcOptionsPtrInput {
	return (*templateArcOptionsPtrType)(v)
}

func (*templateArcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcOptions)(nil)).Elem()
}

func (i *templateArcOptionsPtrType) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return i.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (i *templateArcOptionsPtrType) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateArcOptionsPtrOutput)
}

type TemplateArcOptionsOutput struct{ *pulumi.OutputState }

func (TemplateArcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateArcOptions)(nil)).Elem()
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsOutput() TemplateArcOptionsOutput {
	return o
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsOutputWithContext(ctx context.Context) TemplateArcOptionsOutput {
	return o
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return o.ToTemplateArcOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateArcOptionsOutput) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateArcOptions) *TemplateArcOptions {
		return &v
	}).(TemplateArcOptionsPtrOutput)
}

func (o TemplateArcOptionsOutput) ArcThickness() TemplateArcThicknessPtrOutput {
	return o.ApplyT(func(v TemplateArcOptions) *TemplateArcThickness { return v.ArcThickness }).(TemplateArcThicknessPtrOutput)
}

type TemplateArcOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateArcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateArcOptions)(nil)).Elem()
}

func (o TemplateArcOptionsPtrOutput) ToTemplateArcOptionsPtrOutput() TemplateArcOptionsPtrOutput {
	return o
}

func (o TemplateArcOptionsPtrOutput) ToTemplateArcOptionsPtrOutputWithContext(ctx context.Context) TemplateArcOptionsPtrOutput {
	return o
}

func (o TemplateArcOptionsPtrOutput) Elem() TemplateArcOptionsOutput {
	return o.ApplyT(func(v *TemplateArcOptions) TemplateArcOptions {
		if v != nil {
			return *v
		}
		var ret TemplateArcOptions
		return ret
	}).(TemplateArcOptionsOutput)
}

func (o TemplateArcOptionsPtrOutput) ArcThickness() TemplateArcThicknessPtrOutput {
	return o.ApplyT(func(v *TemplateArcOptions) *TemplateArcThickness {
		if v == nil {
			return nil
		}
		return v.ArcThickness
	}).(TemplateArcThicknessPtrOutput)
}

type TemplateAssetOptions struct {
	Timezone  *string               `pulumi:"timezone"`
	WeekStart *TemplateDayOfTheWeek `pulumi:"weekStart"`
}

// TemplateAssetOptionsInput is an input type that accepts TemplateAssetOptionsArgs and TemplateAssetOptionsOutput values.
// You can construct a concrete instance of `TemplateAssetOptionsInput` via:
//
//	TemplateAssetOptionsArgs{...}
type TemplateAssetOptionsInput interface {
	pulumi.Input

	ToTemplateAssetOptionsOutput() TemplateAssetOptionsOutput
	ToTemplateAssetOptionsOutputWithContext(context.Context) TemplateAssetOptionsOutput
}

type TemplateAssetOptionsArgs struct {
	Timezone  pulumi.StringPtrInput        `pulumi:"timezone"`
	WeekStart TemplateDayOfTheWeekPtrInput `pulumi:"weekStart"`
}

func (TemplateAssetOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAssetOptions)(nil)).Elem()
}

func (i TemplateAssetOptionsArgs) ToTemplateAssetOptionsOutput() TemplateAssetOptionsOutput {
	return i.ToTemplateAssetOptionsOutputWithContext(context.Background())
}

func (i TemplateAssetOptionsArgs) ToTemplateAssetOptionsOutputWithContext(ctx context.Context) TemplateAssetOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAssetOptionsOutput)
}

func (i TemplateAssetOptionsArgs) ToTemplateAssetOptionsPtrOutput() TemplateAssetOptionsPtrOutput {
	return i.ToTemplateAssetOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAssetOptionsArgs) ToTemplateAssetOptionsPtrOutputWithContext(ctx context.Context) TemplateAssetOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAssetOptionsOutput).ToTemplateAssetOptionsPtrOutputWithContext(ctx)
}

// TemplateAssetOptionsPtrInput is an input type that accepts TemplateAssetOptionsArgs, TemplateAssetOptionsPtr and TemplateAssetOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAssetOptionsPtrInput` via:
//
//	        TemplateAssetOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAssetOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAssetOptionsPtrOutput() TemplateAssetOptionsPtrOutput
	ToTemplateAssetOptionsPtrOutputWithContext(context.Context) TemplateAssetOptionsPtrOutput
}

type templateAssetOptionsPtrType TemplateAssetOptionsArgs

func TemplateAssetOptionsPtr(v *TemplateAssetOptionsArgs) TemplateAssetOptionsPtrInput {
	return (*templateAssetOptionsPtrType)(v)
}

func (*templateAssetOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAssetOptions)(nil)).Elem()
}

func (i *templateAssetOptionsPtrType) ToTemplateAssetOptionsPtrOutput() TemplateAssetOptionsPtrOutput {
	return i.ToTemplateAssetOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAssetOptionsPtrType) ToTemplateAssetOptionsPtrOutputWithContext(ctx context.Context) TemplateAssetOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAssetOptionsPtrOutput)
}

type TemplateAssetOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAssetOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAssetOptions)(nil)).Elem()
}

func (o TemplateAssetOptionsOutput) ToTemplateAssetOptionsOutput() TemplateAssetOptionsOutput {
	return o
}

func (o TemplateAssetOptionsOutput) ToTemplateAssetOptionsOutputWithContext(ctx context.Context) TemplateAssetOptionsOutput {
	return o
}

func (o TemplateAssetOptionsOutput) ToTemplateAssetOptionsPtrOutput() TemplateAssetOptionsPtrOutput {
	return o.ToTemplateAssetOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAssetOptionsOutput) ToTemplateAssetOptionsPtrOutputWithContext(ctx context.Context) TemplateAssetOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAssetOptions) *TemplateAssetOptions {
		return &v
	}).(TemplateAssetOptionsPtrOutput)
}

func (o TemplateAssetOptionsOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAssetOptions) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o TemplateAssetOptionsOutput) WeekStart() TemplateDayOfTheWeekPtrOutput {
	return o.ApplyT(func(v TemplateAssetOptions) *TemplateDayOfTheWeek { return v.WeekStart }).(TemplateDayOfTheWeekPtrOutput)
}

type TemplateAssetOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAssetOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAssetOptions)(nil)).Elem()
}

func (o TemplateAssetOptionsPtrOutput) ToTemplateAssetOptionsPtrOutput() TemplateAssetOptionsPtrOutput {
	return o
}

func (o TemplateAssetOptionsPtrOutput) ToTemplateAssetOptionsPtrOutputWithContext(ctx context.Context) TemplateAssetOptionsPtrOutput {
	return o
}

func (o TemplateAssetOptionsPtrOutput) Elem() TemplateAssetOptionsOutput {
	return o.ApplyT(func(v *TemplateAssetOptions) TemplateAssetOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAssetOptions
		return ret
	}).(TemplateAssetOptionsOutput)
}

func (o TemplateAssetOptionsPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAssetOptions) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

func (o TemplateAssetOptionsPtrOutput) WeekStart() TemplateDayOfTheWeekPtrOutput {
	return o.ApplyT(func(v *TemplateAssetOptions) *TemplateDayOfTheWeek {
		if v == nil {
			return nil
		}
		return v.WeekStart
	}).(TemplateDayOfTheWeekPtrOutput)
}

type TemplateAttributeAggregationFunction struct {
	SimpleAttributeAggregation *TemplateSimpleAttributeAggregationFunction `pulumi:"simpleAttributeAggregation"`
	ValueForMultipleValues     *string                                     `pulumi:"valueForMultipleValues"`
}

// TemplateAttributeAggregationFunctionInput is an input type that accepts TemplateAttributeAggregationFunctionArgs and TemplateAttributeAggregationFunctionOutput values.
// You can construct a concrete instance of `TemplateAttributeAggregationFunctionInput` via:
//
//	TemplateAttributeAggregationFunctionArgs{...}
type TemplateAttributeAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateAttributeAggregationFunctionOutput() TemplateAttributeAggregationFunctionOutput
	ToTemplateAttributeAggregationFunctionOutputWithContext(context.Context) TemplateAttributeAggregationFunctionOutput
}

type TemplateAttributeAggregationFunctionArgs struct {
	SimpleAttributeAggregation TemplateSimpleAttributeAggregationFunctionPtrInput `pulumi:"simpleAttributeAggregation"`
	ValueForMultipleValues     pulumi.StringPtrInput                              `pulumi:"valueForMultipleValues"`
}

func (TemplateAttributeAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAttributeAggregationFunction)(nil)).Elem()
}

func (i TemplateAttributeAggregationFunctionArgs) ToTemplateAttributeAggregationFunctionOutput() TemplateAttributeAggregationFunctionOutput {
	return i.ToTemplateAttributeAggregationFunctionOutputWithContext(context.Background())
}

func (i TemplateAttributeAggregationFunctionArgs) ToTemplateAttributeAggregationFunctionOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAttributeAggregationFunctionOutput)
}

func (i TemplateAttributeAggregationFunctionArgs) ToTemplateAttributeAggregationFunctionPtrOutput() TemplateAttributeAggregationFunctionPtrOutput {
	return i.ToTemplateAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i TemplateAttributeAggregationFunctionArgs) ToTemplateAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAttributeAggregationFunctionOutput).ToTemplateAttributeAggregationFunctionPtrOutputWithContext(ctx)
}

// TemplateAttributeAggregationFunctionPtrInput is an input type that accepts TemplateAttributeAggregationFunctionArgs, TemplateAttributeAggregationFunctionPtr and TemplateAttributeAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `TemplateAttributeAggregationFunctionPtrInput` via:
//
//	        TemplateAttributeAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type TemplateAttributeAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateAttributeAggregationFunctionPtrOutput() TemplateAttributeAggregationFunctionPtrOutput
	ToTemplateAttributeAggregationFunctionPtrOutputWithContext(context.Context) TemplateAttributeAggregationFunctionPtrOutput
}

type templateAttributeAggregationFunctionPtrType TemplateAttributeAggregationFunctionArgs

func TemplateAttributeAggregationFunctionPtr(v *TemplateAttributeAggregationFunctionArgs) TemplateAttributeAggregationFunctionPtrInput {
	return (*templateAttributeAggregationFunctionPtrType)(v)
}

func (*templateAttributeAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAttributeAggregationFunction)(nil)).Elem()
}

func (i *templateAttributeAggregationFunctionPtrType) ToTemplateAttributeAggregationFunctionPtrOutput() TemplateAttributeAggregationFunctionPtrOutput {
	return i.ToTemplateAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *templateAttributeAggregationFunctionPtrType) ToTemplateAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAttributeAggregationFunctionPtrOutput)
}

type TemplateAttributeAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateAttributeAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAttributeAggregationFunction)(nil)).Elem()
}

func (o TemplateAttributeAggregationFunctionOutput) ToTemplateAttributeAggregationFunctionOutput() TemplateAttributeAggregationFunctionOutput {
	return o
}

func (o TemplateAttributeAggregationFunctionOutput) ToTemplateAttributeAggregationFunctionOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionOutput {
	return o
}

func (o TemplateAttributeAggregationFunctionOutput) ToTemplateAttributeAggregationFunctionPtrOutput() TemplateAttributeAggregationFunctionPtrOutput {
	return o.ToTemplateAttributeAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateAttributeAggregationFunctionOutput) ToTemplateAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAttributeAggregationFunction) *TemplateAttributeAggregationFunction {
		return &v
	}).(TemplateAttributeAggregationFunctionPtrOutput)
}

func (o TemplateAttributeAggregationFunctionOutput) SimpleAttributeAggregation() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateAttributeAggregationFunction) *TemplateSimpleAttributeAggregationFunction {
		return v.SimpleAttributeAggregation
	}).(TemplateSimpleAttributeAggregationFunctionPtrOutput)
}

func (o TemplateAttributeAggregationFunctionOutput) ValueForMultipleValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAttributeAggregationFunction) *string { return v.ValueForMultipleValues }).(pulumi.StringPtrOutput)
}

type TemplateAttributeAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateAttributeAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAttributeAggregationFunction)(nil)).Elem()
}

func (o TemplateAttributeAggregationFunctionPtrOutput) ToTemplateAttributeAggregationFunctionPtrOutput() TemplateAttributeAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAttributeAggregationFunctionPtrOutput) ToTemplateAttributeAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateAttributeAggregationFunctionPtrOutput {
	return o
}

func (o TemplateAttributeAggregationFunctionPtrOutput) Elem() TemplateAttributeAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateAttributeAggregationFunction) TemplateAttributeAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateAttributeAggregationFunction
		return ret
	}).(TemplateAttributeAggregationFunctionOutput)
}

func (o TemplateAttributeAggregationFunctionPtrOutput) SimpleAttributeAggregation() TemplateSimpleAttributeAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateAttributeAggregationFunction) *TemplateSimpleAttributeAggregationFunction {
		if v == nil {
			return nil
		}
		return v.SimpleAttributeAggregation
	}).(TemplateSimpleAttributeAggregationFunctionPtrOutput)
}

func (o TemplateAttributeAggregationFunctionPtrOutput) ValueForMultipleValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAttributeAggregationFunction) *string {
		if v == nil {
			return nil
		}
		return v.ValueForMultipleValues
	}).(pulumi.StringPtrOutput)
}

type TemplateAxisDataOptions struct {
	DateAxisOptions    *TemplateDateAxisOptions    `pulumi:"dateAxisOptions"`
	NumericAxisOptions *TemplateNumericAxisOptions `pulumi:"numericAxisOptions"`
}

// TemplateAxisDataOptionsInput is an input type that accepts TemplateAxisDataOptionsArgs and TemplateAxisDataOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisDataOptionsInput` via:
//
//	TemplateAxisDataOptionsArgs{...}
type TemplateAxisDataOptionsInput interface {
	pulumi.Input

	ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput
	ToTemplateAxisDataOptionsOutputWithContext(context.Context) TemplateAxisDataOptionsOutput
}

type TemplateAxisDataOptionsArgs struct {
	DateAxisOptions    TemplateDateAxisOptionsPtrInput    `pulumi:"dateAxisOptions"`
	NumericAxisOptions TemplateNumericAxisOptionsPtrInput `pulumi:"numericAxisOptions"`
}

func (TemplateAxisDataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDataOptions)(nil)).Elem()
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput {
	return i.ToTemplateAxisDataOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsOutputWithContext(ctx context.Context) TemplateAxisDataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsOutput)
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return i.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisDataOptionsArgs) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsOutput).ToTemplateAxisDataOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisDataOptionsPtrInput is an input type that accepts TemplateAxisDataOptionsArgs, TemplateAxisDataOptionsPtr and TemplateAxisDataOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisDataOptionsPtrInput` via:
//
//	        TemplateAxisDataOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDataOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput
	ToTemplateAxisDataOptionsPtrOutputWithContext(context.Context) TemplateAxisDataOptionsPtrOutput
}

type templateAxisDataOptionsPtrType TemplateAxisDataOptionsArgs

func TemplateAxisDataOptionsPtr(v *TemplateAxisDataOptionsArgs) TemplateAxisDataOptionsPtrInput {
	return (*templateAxisDataOptionsPtrType)(v)
}

func (*templateAxisDataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDataOptions)(nil)).Elem()
}

func (i *templateAxisDataOptionsPtrType) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return i.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisDataOptionsPtrType) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDataOptionsPtrOutput)
}

type TemplateAxisDataOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisDataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDataOptions)(nil)).Elem()
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsOutput() TemplateAxisDataOptionsOutput {
	return o
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsOutputWithContext(ctx context.Context) TemplateAxisDataOptionsOutput {
	return o
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return o.ToTemplateAxisDataOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisDataOptionsOutput) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDataOptions) *TemplateAxisDataOptions {
		return &v
	}).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsOutput) DateAxisOptions() TemplateDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDataOptions) *TemplateDateAxisOptions { return v.DateAxisOptions }).(TemplateDateAxisOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsOutput) NumericAxisOptions() TemplateNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDataOptions) *TemplateNumericAxisOptions { return v.NumericAxisOptions }).(TemplateNumericAxisOptionsPtrOutput)
}

type TemplateAxisDataOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDataOptions)(nil)).Elem()
}

func (o TemplateAxisDataOptionsPtrOutput) ToTemplateAxisDataOptionsPtrOutput() TemplateAxisDataOptionsPtrOutput {
	return o
}

func (o TemplateAxisDataOptionsPtrOutput) ToTemplateAxisDataOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDataOptionsPtrOutput {
	return o
}

func (o TemplateAxisDataOptionsPtrOutput) Elem() TemplateAxisDataOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) TemplateAxisDataOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDataOptions
		return ret
	}).(TemplateAxisDataOptionsOutput)
}

func (o TemplateAxisDataOptionsPtrOutput) DateAxisOptions() TemplateDateAxisOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) *TemplateDateAxisOptions {
		if v == nil {
			return nil
		}
		return v.DateAxisOptions
	}).(TemplateDateAxisOptionsPtrOutput)
}

func (o TemplateAxisDataOptionsPtrOutput) NumericAxisOptions() TemplateNumericAxisOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDataOptions) *TemplateNumericAxisOptions {
		if v == nil {
			return nil
		}
		return v.NumericAxisOptions
	}).(TemplateNumericAxisOptionsPtrOutput)
}

type TemplateAxisDisplayDataDrivenRange struct {
}

// TemplateAxisDisplayDataDrivenRangeInput is an input type that accepts TemplateAxisDisplayDataDrivenRangeArgs and TemplateAxisDisplayDataDrivenRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayDataDrivenRangeInput` via:
//
//	TemplateAxisDisplayDataDrivenRangeArgs{...}
type TemplateAxisDisplayDataDrivenRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput
	ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(context.Context) TemplateAxisDisplayDataDrivenRangeOutput
}

type TemplateAxisDisplayDataDrivenRangeArgs struct {
}

func (TemplateAxisDisplayDataDrivenRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangeOutput)
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayDataDrivenRangeArgs) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangeOutput).ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayDataDrivenRangePtrInput is an input type that accepts TemplateAxisDisplayDataDrivenRangeArgs, TemplateAxisDisplayDataDrivenRangePtr and TemplateAxisDisplayDataDrivenRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayDataDrivenRangePtrInput` via:
//
//	        TemplateAxisDisplayDataDrivenRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayDataDrivenRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput
	ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput
}

type templateAxisDisplayDataDrivenRangePtrType TemplateAxisDisplayDataDrivenRangeArgs

func TemplateAxisDisplayDataDrivenRangePtr(v *TemplateAxisDisplayDataDrivenRangeArgs) TemplateAxisDisplayDataDrivenRangePtrInput {
	return (*templateAxisDisplayDataDrivenRangePtrType)(v)
}

func (*templateAxisDisplayDataDrivenRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (i *templateAxisDisplayDataDrivenRangePtrType) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return i.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayDataDrivenRangePtrType) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

type TemplateAxisDisplayDataDrivenRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayDataDrivenRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangeOutput() TemplateAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangeOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayDataDrivenRangeOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayDataDrivenRange) *TemplateAxisDisplayDataDrivenRange {
		return &v
	}).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

type TemplateAxisDisplayDataDrivenRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayDataDrivenRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayDataDrivenRange)(nil)).Elem()
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutput() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) ToTemplateAxisDisplayDataDrivenRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayDataDrivenRangePtrOutput) Elem() TemplateAxisDisplayDataDrivenRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayDataDrivenRange) TemplateAxisDisplayDataDrivenRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayDataDrivenRange
		return ret
	}).(TemplateAxisDisplayDataDrivenRangeOutput)
}

type TemplateAxisDisplayMinMaxRange struct {
	Maximum *float64 `pulumi:"maximum"`
	Minimum *float64 `pulumi:"minimum"`
}

// TemplateAxisDisplayMinMaxRangeInput is an input type that accepts TemplateAxisDisplayMinMaxRangeArgs and TemplateAxisDisplayMinMaxRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayMinMaxRangeInput` via:
//
//	TemplateAxisDisplayMinMaxRangeArgs{...}
type TemplateAxisDisplayMinMaxRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput
	ToTemplateAxisDisplayMinMaxRangeOutputWithContext(context.Context) TemplateAxisDisplayMinMaxRangeOutput
}

type TemplateAxisDisplayMinMaxRangeArgs struct {
	Maximum pulumi.Float64PtrInput `pulumi:"maximum"`
	Minimum pulumi.Float64PtrInput `pulumi:"minimum"`
}

func (TemplateAxisDisplayMinMaxRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput {
	return i.ToTemplateAxisDisplayMinMaxRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangeOutput)
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return i.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayMinMaxRangeArgs) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangeOutput).ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayMinMaxRangePtrInput is an input type that accepts TemplateAxisDisplayMinMaxRangeArgs, TemplateAxisDisplayMinMaxRangePtr and TemplateAxisDisplayMinMaxRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayMinMaxRangePtrInput` via:
//
//	        TemplateAxisDisplayMinMaxRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayMinMaxRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput
	ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Context) TemplateAxisDisplayMinMaxRangePtrOutput
}

type templateAxisDisplayMinMaxRangePtrType TemplateAxisDisplayMinMaxRangeArgs

func TemplateAxisDisplayMinMaxRangePtr(v *TemplateAxisDisplayMinMaxRangeArgs) TemplateAxisDisplayMinMaxRangePtrInput {
	return (*templateAxisDisplayMinMaxRangePtrType)(v)
}

func (*templateAxisDisplayMinMaxRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (i *templateAxisDisplayMinMaxRangePtrType) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return i.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayMinMaxRangePtrType) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisDisplayMinMaxRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayMinMaxRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangeOutput() TemplateAxisDisplayMinMaxRangeOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangeOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayMinMaxRangeOutput) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayMinMaxRange) *TemplateAxisDisplayMinMaxRange {
		return &v
	}).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangeOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayMinMaxRange) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangeOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayMinMaxRange) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

type TemplateAxisDisplayMinMaxRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayMinMaxRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayMinMaxRange)(nil)).Elem()
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) ToTemplateAxisDisplayMinMaxRangePtrOutput() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) ToTemplateAxisDisplayMinMaxRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayMinMaxRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Elem() TemplateAxisDisplayMinMaxRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) TemplateAxisDisplayMinMaxRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayMinMaxRange
		return ret
	}).(TemplateAxisDisplayMinMaxRangeOutput)
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisDisplayMinMaxRangePtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayMinMaxRange) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisDisplayOptions struct {
	AxisLineVisibility *TemplateVisibility `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         *string                       `pulumi:"axisOffset"`
	DataOptions        *TemplateAxisDataOptions      `pulumi:"dataOptions"`
	GridLineVisibility *TemplateVisibility           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   *TemplateScrollBarOptions     `pulumi:"scrollbarOptions"`
	TickLabelOptions   *TemplateAxisTickLabelOptions `pulumi:"tickLabelOptions"`
}

// TemplateAxisDisplayOptionsInput is an input type that accepts TemplateAxisDisplayOptionsArgs and TemplateAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayOptionsInput` via:
//
//	TemplateAxisDisplayOptionsArgs{...}
type TemplateAxisDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput
	ToTemplateAxisDisplayOptionsOutputWithContext(context.Context) TemplateAxisDisplayOptionsOutput
}

type TemplateAxisDisplayOptionsArgs struct {
	AxisLineVisibility TemplateVisibilityPtrInput `pulumi:"axisLineVisibility"`
	// String based length that is composed of value and unit in px
	AxisOffset         pulumi.StringPtrInput                `pulumi:"axisOffset"`
	DataOptions        TemplateAxisDataOptionsPtrInput      `pulumi:"dataOptions"`
	GridLineVisibility TemplateVisibilityPtrInput           `pulumi:"gridLineVisibility"`
	ScrollbarOptions   TemplateScrollBarOptionsPtrInput     `pulumi:"scrollbarOptions"`
	TickLabelOptions   TemplateAxisTickLabelOptionsPtrInput `pulumi:"tickLabelOptions"`
}

func (TemplateAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayOptions)(nil)).Elem()
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput {
	return i.ToTemplateAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsOutput)
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return i.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayOptionsArgs) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsOutput).ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisDisplayOptionsPtrInput is an input type that accepts TemplateAxisDisplayOptionsArgs, TemplateAxisDisplayOptionsPtr and TemplateAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayOptionsPtrInput` via:
//
//	        TemplateAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput
	ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Context) TemplateAxisDisplayOptionsPtrOutput
}

type templateAxisDisplayOptionsPtrType TemplateAxisDisplayOptionsArgs

func TemplateAxisDisplayOptionsPtr(v *TemplateAxisDisplayOptionsArgs) TemplateAxisDisplayOptionsPtrInput {
	return (*templateAxisDisplayOptionsPtrType)(v)
}

func (*templateAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayOptions)(nil)).Elem()
}

func (i *templateAxisDisplayOptionsPtrType) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return i.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayOptionsPtrType) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayOptionsPtrOutput)
}

type TemplateAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsOutput() TemplateAxisDisplayOptionsOutput {
	return o
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsOutput {
	return o
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return o.ToTemplateAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayOptionsOutput) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayOptions) *TemplateAxisDisplayOptions {
		return &v
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) AxisLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateVisibility { return v.AxisLineVisibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateAxisDisplayOptionsOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *string { return v.AxisOffset }).(pulumi.StringPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) DataOptions() TemplateAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateAxisDataOptions { return v.DataOptions }).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) GridLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateVisibility { return v.GridLineVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) ScrollbarOptions() TemplateScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateScrollBarOptions { return v.ScrollbarOptions }).(TemplateScrollBarOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsOutput) TickLabelOptions() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayOptions) *TemplateAxisTickLabelOptions { return v.TickLabelOptions }).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateAxisDisplayOptionsPtrOutput) ToTemplateAxisDisplayOptionsPtrOutput() TemplateAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateAxisDisplayOptionsPtrOutput) ToTemplateAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateAxisDisplayOptionsPtrOutput) Elem() TemplateAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) TemplateAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayOptions
		return ret
	}).(TemplateAxisDisplayOptionsOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) AxisLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AxisLineVisibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateAxisDisplayOptionsPtrOutput) AxisOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.AxisOffset
	}).(pulumi.StringPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) DataOptions() TemplateAxisDataOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateAxisDataOptions {
		if v == nil {
			return nil
		}
		return v.DataOptions
	}).(TemplateAxisDataOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) GridLineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.GridLineVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) ScrollbarOptions() TemplateScrollBarOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateScrollBarOptions {
		if v == nil {
			return nil
		}
		return v.ScrollbarOptions
	}).(TemplateScrollBarOptionsPtrOutput)
}

func (o TemplateAxisDisplayOptionsPtrOutput) TickLabelOptions() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayOptions) *TemplateAxisTickLabelOptions {
		if v == nil {
			return nil
		}
		return v.TickLabelOptions
	}).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisDisplayRange struct {
	DataDriven *TemplateAxisDisplayDataDrivenRange `pulumi:"dataDriven"`
	MinMax     *TemplateAxisDisplayMinMaxRange     `pulumi:"minMax"`
}

// TemplateAxisDisplayRangeInput is an input type that accepts TemplateAxisDisplayRangeArgs and TemplateAxisDisplayRangeOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayRangeInput` via:
//
//	TemplateAxisDisplayRangeArgs{...}
type TemplateAxisDisplayRangeInput interface {
	pulumi.Input

	ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput
	ToTemplateAxisDisplayRangeOutputWithContext(context.Context) TemplateAxisDisplayRangeOutput
}

type TemplateAxisDisplayRangeArgs struct {
	DataDriven TemplateAxisDisplayDataDrivenRangePtrInput `pulumi:"dataDriven"`
	MinMax     TemplateAxisDisplayMinMaxRangePtrInput     `pulumi:"minMax"`
}

func (TemplateAxisDisplayRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayRange)(nil)).Elem()
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput {
	return i.ToTemplateAxisDisplayRangeOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangeOutput)
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return i.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i TemplateAxisDisplayRangeArgs) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangeOutput).ToTemplateAxisDisplayRangePtrOutputWithContext(ctx)
}

// TemplateAxisDisplayRangePtrInput is an input type that accepts TemplateAxisDisplayRangeArgs, TemplateAxisDisplayRangePtr and TemplateAxisDisplayRangePtrOutput values.
// You can construct a concrete instance of `TemplateAxisDisplayRangePtrInput` via:
//
//	        TemplateAxisDisplayRangeArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisDisplayRangePtrInput interface {
	pulumi.Input

	ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput
	ToTemplateAxisDisplayRangePtrOutputWithContext(context.Context) TemplateAxisDisplayRangePtrOutput
}

type templateAxisDisplayRangePtrType TemplateAxisDisplayRangeArgs

func TemplateAxisDisplayRangePtr(v *TemplateAxisDisplayRangeArgs) TemplateAxisDisplayRangePtrInput {
	return (*templateAxisDisplayRangePtrType)(v)
}

func (*templateAxisDisplayRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayRange)(nil)).Elem()
}

func (i *templateAxisDisplayRangePtrType) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return i.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (i *templateAxisDisplayRangePtrType) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisDisplayRangePtrOutput)
}

type TemplateAxisDisplayRangeOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisDisplayRange)(nil)).Elem()
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangeOutput() TemplateAxisDisplayRangeOutput {
	return o
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangeOutputWithContext(ctx context.Context) TemplateAxisDisplayRangeOutput {
	return o
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return o.ToTemplateAxisDisplayRangePtrOutputWithContext(context.Background())
}

func (o TemplateAxisDisplayRangeOutput) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisDisplayRange) *TemplateAxisDisplayRange {
		return &v
	}).(TemplateAxisDisplayRangePtrOutput)
}

func (o TemplateAxisDisplayRangeOutput) DataDriven() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayRange) *TemplateAxisDisplayDataDrivenRange { return v.DataDriven }).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

func (o TemplateAxisDisplayRangeOutput) MinMax() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v TemplateAxisDisplayRange) *TemplateAxisDisplayMinMaxRange { return v.MinMax }).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisDisplayRangePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisDisplayRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisDisplayRange)(nil)).Elem()
}

func (o TemplateAxisDisplayRangePtrOutput) ToTemplateAxisDisplayRangePtrOutput() TemplateAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayRangePtrOutput) ToTemplateAxisDisplayRangePtrOutputWithContext(ctx context.Context) TemplateAxisDisplayRangePtrOutput {
	return o
}

func (o TemplateAxisDisplayRangePtrOutput) Elem() TemplateAxisDisplayRangeOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) TemplateAxisDisplayRange {
		if v != nil {
			return *v
		}
		var ret TemplateAxisDisplayRange
		return ret
	}).(TemplateAxisDisplayRangeOutput)
}

func (o TemplateAxisDisplayRangePtrOutput) DataDriven() TemplateAxisDisplayDataDrivenRangePtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) *TemplateAxisDisplayDataDrivenRange {
		if v == nil {
			return nil
		}
		return v.DataDriven
	}).(TemplateAxisDisplayDataDrivenRangePtrOutput)
}

func (o TemplateAxisDisplayRangePtrOutput) MinMax() TemplateAxisDisplayMinMaxRangePtrOutput {
	return o.ApplyT(func(v *TemplateAxisDisplayRange) *TemplateAxisDisplayMinMaxRange {
		if v == nil {
			return nil
		}
		return v.MinMax
	}).(TemplateAxisDisplayMinMaxRangePtrOutput)
}

type TemplateAxisLabelOptions struct {
	ApplyTo           *TemplateAxisLabelReferenceOptions `pulumi:"applyTo"`
	CustomLabel       *string                            `pulumi:"customLabel"`
	FontConfiguration *TemplateFontConfiguration         `pulumi:"fontConfiguration"`
}

// TemplateAxisLabelOptionsInput is an input type that accepts TemplateAxisLabelOptionsArgs and TemplateAxisLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisLabelOptionsInput` via:
//
//	TemplateAxisLabelOptionsArgs{...}
type TemplateAxisLabelOptionsInput interface {
	pulumi.Input

	ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput
	ToTemplateAxisLabelOptionsOutputWithContext(context.Context) TemplateAxisLabelOptionsOutput
}

type TemplateAxisLabelOptionsArgs struct {
	ApplyTo           TemplateAxisLabelReferenceOptionsPtrInput `pulumi:"applyTo"`
	CustomLabel       pulumi.StringPtrInput                     `pulumi:"customLabel"`
	FontConfiguration TemplateFontConfigurationPtrInput         `pulumi:"fontConfiguration"`
}

func (TemplateAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelOptions)(nil)).Elem()
}

func (i TemplateAxisLabelOptionsArgs) ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput {
	return i.ToTemplateAxisLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisLabelOptionsArgs) ToTemplateAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelOptionsOutput)
}

// TemplateAxisLabelOptionsArrayInput is an input type that accepts TemplateAxisLabelOptionsArray and TemplateAxisLabelOptionsArrayOutput values.
// You can construct a concrete instance of `TemplateAxisLabelOptionsArrayInput` via:
//
//	TemplateAxisLabelOptionsArray{ TemplateAxisLabelOptionsArgs{...} }
type TemplateAxisLabelOptionsArrayInput interface {
	pulumi.Input

	ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput
	ToTemplateAxisLabelOptionsArrayOutputWithContext(context.Context) TemplateAxisLabelOptionsArrayOutput
}

type TemplateAxisLabelOptionsArray []TemplateAxisLabelOptionsInput

func (TemplateAxisLabelOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAxisLabelOptions)(nil)).Elem()
}

func (i TemplateAxisLabelOptionsArray) ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput {
	return i.ToTemplateAxisLabelOptionsArrayOutputWithContext(context.Background())
}

func (i TemplateAxisLabelOptionsArray) ToTemplateAxisLabelOptionsArrayOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelOptionsArrayOutput)
}

type TemplateAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelOptions)(nil)).Elem()
}

func (o TemplateAxisLabelOptionsOutput) ToTemplateAxisLabelOptionsOutput() TemplateAxisLabelOptionsOutput {
	return o
}

func (o TemplateAxisLabelOptionsOutput) ToTemplateAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsOutput {
	return o
}

func (o TemplateAxisLabelOptionsOutput) ApplyTo() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *TemplateAxisLabelReferenceOptions { return v.ApplyTo }).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

func (o TemplateAxisLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateAxisLabelOptionsOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateAxisLabelOptions) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

type TemplateAxisLabelOptionsArrayOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateAxisLabelOptions)(nil)).Elem()
}

func (o TemplateAxisLabelOptionsArrayOutput) ToTemplateAxisLabelOptionsArrayOutput() TemplateAxisLabelOptionsArrayOutput {
	return o
}

func (o TemplateAxisLabelOptionsArrayOutput) ToTemplateAxisLabelOptionsArrayOutputWithContext(ctx context.Context) TemplateAxisLabelOptionsArrayOutput {
	return o
}

func (o TemplateAxisLabelOptionsArrayOutput) Index(i pulumi.IntInput) TemplateAxisLabelOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateAxisLabelOptions {
		return vs[0].([]TemplateAxisLabelOptions)[vs[1].(int)]
	}).(TemplateAxisLabelOptionsOutput)
}

type TemplateAxisLabelReferenceOptions struct {
	Column  TemplateColumnIdentifier `pulumi:"column"`
	FieldId string                   `pulumi:"fieldId"`
}

// TemplateAxisLabelReferenceOptionsInput is an input type that accepts TemplateAxisLabelReferenceOptionsArgs and TemplateAxisLabelReferenceOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisLabelReferenceOptionsInput` via:
//
//	TemplateAxisLabelReferenceOptionsArgs{...}
type TemplateAxisLabelReferenceOptionsInput interface {
	pulumi.Input

	ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput
	ToTemplateAxisLabelReferenceOptionsOutputWithContext(context.Context) TemplateAxisLabelReferenceOptionsOutput
}

type TemplateAxisLabelReferenceOptionsArgs struct {
	Column  TemplateColumnIdentifierInput `pulumi:"column"`
	FieldId pulumi.StringInput            `pulumi:"fieldId"`
}

func (TemplateAxisLabelReferenceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput {
	return i.ToTemplateAxisLabelReferenceOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsOutput)
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return i.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisLabelReferenceOptionsArgs) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsOutput).ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisLabelReferenceOptionsPtrInput is an input type that accepts TemplateAxisLabelReferenceOptionsArgs, TemplateAxisLabelReferenceOptionsPtr and TemplateAxisLabelReferenceOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisLabelReferenceOptionsPtrInput` via:
//
//	        TemplateAxisLabelReferenceOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLabelReferenceOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput
	ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Context) TemplateAxisLabelReferenceOptionsPtrOutput
}

type templateAxisLabelReferenceOptionsPtrType TemplateAxisLabelReferenceOptionsArgs

func TemplateAxisLabelReferenceOptionsPtr(v *TemplateAxisLabelReferenceOptionsArgs) TemplateAxisLabelReferenceOptionsPtrInput {
	return (*templateAxisLabelReferenceOptionsPtrType)(v)
}

func (*templateAxisLabelReferenceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (i *templateAxisLabelReferenceOptionsPtrType) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return i.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisLabelReferenceOptionsPtrType) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

type TemplateAxisLabelReferenceOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelReferenceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsOutput() TemplateAxisLabelReferenceOptionsOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisLabelReferenceOptionsOutput) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLabelReferenceOptions) *TemplateAxisLabelReferenceOptions {
		return &v
	}).(TemplateAxisLabelReferenceOptionsPtrOutput)
}

func (o TemplateAxisLabelReferenceOptionsOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateAxisLabelReferenceOptions) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateAxisLabelReferenceOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateAxisLabelReferenceOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

type TemplateAxisLabelReferenceOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLabelReferenceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLabelReferenceOptions)(nil)).Elem()
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) ToTemplateAxisLabelReferenceOptionsPtrOutput() TemplateAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) ToTemplateAxisLabelReferenceOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisLabelReferenceOptionsPtrOutput {
	return o
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) Elem() TemplateAxisLabelReferenceOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) TemplateAxisLabelReferenceOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLabelReferenceOptions
		return ret
	}).(TemplateAxisLabelReferenceOptionsOutput)
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateAxisLabelReferenceOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateAxisLabelReferenceOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type TemplateAxisLinearScale struct {
	StepCount *float64 `pulumi:"stepCount"`
	StepSize  *float64 `pulumi:"stepSize"`
}

// TemplateAxisLinearScaleInput is an input type that accepts TemplateAxisLinearScaleArgs and TemplateAxisLinearScaleOutput values.
// You can construct a concrete instance of `TemplateAxisLinearScaleInput` via:
//
//	TemplateAxisLinearScaleArgs{...}
type TemplateAxisLinearScaleInput interface {
	pulumi.Input

	ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput
	ToTemplateAxisLinearScaleOutputWithContext(context.Context) TemplateAxisLinearScaleOutput
}

type TemplateAxisLinearScaleArgs struct {
	StepCount pulumi.Float64PtrInput `pulumi:"stepCount"`
	StepSize  pulumi.Float64PtrInput `pulumi:"stepSize"`
}

func (TemplateAxisLinearScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLinearScale)(nil)).Elem()
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput {
	return i.ToTemplateAxisLinearScaleOutputWithContext(context.Background())
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScaleOutputWithContext(ctx context.Context) TemplateAxisLinearScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScaleOutput)
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return i.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisLinearScaleArgs) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScaleOutput).ToTemplateAxisLinearScalePtrOutputWithContext(ctx)
}

// TemplateAxisLinearScalePtrInput is an input type that accepts TemplateAxisLinearScaleArgs, TemplateAxisLinearScalePtr and TemplateAxisLinearScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisLinearScalePtrInput` via:
//
//	        TemplateAxisLinearScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLinearScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput
	ToTemplateAxisLinearScalePtrOutputWithContext(context.Context) TemplateAxisLinearScalePtrOutput
}

type templateAxisLinearScalePtrType TemplateAxisLinearScaleArgs

func TemplateAxisLinearScalePtr(v *TemplateAxisLinearScaleArgs) TemplateAxisLinearScalePtrInput {
	return (*templateAxisLinearScalePtrType)(v)
}

func (*templateAxisLinearScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLinearScale)(nil)).Elem()
}

func (i *templateAxisLinearScalePtrType) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return i.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisLinearScalePtrType) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLinearScalePtrOutput)
}

type TemplateAxisLinearScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisLinearScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLinearScale)(nil)).Elem()
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScaleOutput() TemplateAxisLinearScaleOutput {
	return o
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScaleOutputWithContext(ctx context.Context) TemplateAxisLinearScaleOutput {
	return o
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return o.ToTemplateAxisLinearScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisLinearScaleOutput) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLinearScale) *TemplateAxisLinearScale {
		return &v
	}).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisLinearScaleOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLinearScale) *float64 { return v.StepCount }).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisLinearScaleOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLinearScale) *float64 { return v.StepSize }).(pulumi.Float64PtrOutput)
}

type TemplateAxisLinearScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLinearScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLinearScale)(nil)).Elem()
}

func (o TemplateAxisLinearScalePtrOutput) ToTemplateAxisLinearScalePtrOutput() TemplateAxisLinearScalePtrOutput {
	return o
}

func (o TemplateAxisLinearScalePtrOutput) ToTemplateAxisLinearScalePtrOutputWithContext(ctx context.Context) TemplateAxisLinearScalePtrOutput {
	return o
}

func (o TemplateAxisLinearScalePtrOutput) Elem() TemplateAxisLinearScaleOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) TemplateAxisLinearScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLinearScale
		return ret
	}).(TemplateAxisLinearScaleOutput)
}

func (o TemplateAxisLinearScalePtrOutput) StepCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepCount
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateAxisLinearScalePtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLinearScale) *float64 {
		if v == nil {
			return nil
		}
		return v.StepSize
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisLogarithmicScale struct {
	Base *float64 `pulumi:"base"`
}

// TemplateAxisLogarithmicScaleInput is an input type that accepts TemplateAxisLogarithmicScaleArgs and TemplateAxisLogarithmicScaleOutput values.
// You can construct a concrete instance of `TemplateAxisLogarithmicScaleInput` via:
//
//	TemplateAxisLogarithmicScaleArgs{...}
type TemplateAxisLogarithmicScaleInput interface {
	pulumi.Input

	ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput
	ToTemplateAxisLogarithmicScaleOutputWithContext(context.Context) TemplateAxisLogarithmicScaleOutput
}

type TemplateAxisLogarithmicScaleArgs struct {
	Base pulumi.Float64PtrInput `pulumi:"base"`
}

func (TemplateAxisLogarithmicScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput {
	return i.ToTemplateAxisLogarithmicScaleOutputWithContext(context.Background())
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScaleOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScaleOutput)
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return i.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisLogarithmicScaleArgs) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScaleOutput).ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx)
}

// TemplateAxisLogarithmicScalePtrInput is an input type that accepts TemplateAxisLogarithmicScaleArgs, TemplateAxisLogarithmicScalePtr and TemplateAxisLogarithmicScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisLogarithmicScalePtrInput` via:
//
//	        TemplateAxisLogarithmicScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisLogarithmicScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput
	ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Context) TemplateAxisLogarithmicScalePtrOutput
}

type templateAxisLogarithmicScalePtrType TemplateAxisLogarithmicScaleArgs

func TemplateAxisLogarithmicScalePtr(v *TemplateAxisLogarithmicScaleArgs) TemplateAxisLogarithmicScalePtrInput {
	return (*templateAxisLogarithmicScalePtrType)(v)
}

func (*templateAxisLogarithmicScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (i *templateAxisLogarithmicScalePtrType) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return i.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisLogarithmicScalePtrType) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisLogarithmicScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisLogarithmicScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScaleOutput() TemplateAxisLogarithmicScaleOutput {
	return o
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScaleOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScaleOutput {
	return o
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return o.ToTemplateAxisLogarithmicScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisLogarithmicScaleOutput) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisLogarithmicScale) *TemplateAxisLogarithmicScale {
		return &v
	}).(TemplateAxisLogarithmicScalePtrOutput)
}

func (o TemplateAxisLogarithmicScaleOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisLogarithmicScale) *float64 { return v.Base }).(pulumi.Float64PtrOutput)
}

type TemplateAxisLogarithmicScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisLogarithmicScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisLogarithmicScale)(nil)).Elem()
}

func (o TemplateAxisLogarithmicScalePtrOutput) ToTemplateAxisLogarithmicScalePtrOutput() TemplateAxisLogarithmicScalePtrOutput {
	return o
}

func (o TemplateAxisLogarithmicScalePtrOutput) ToTemplateAxisLogarithmicScalePtrOutputWithContext(ctx context.Context) TemplateAxisLogarithmicScalePtrOutput {
	return o
}

func (o TemplateAxisLogarithmicScalePtrOutput) Elem() TemplateAxisLogarithmicScaleOutput {
	return o.ApplyT(func(v *TemplateAxisLogarithmicScale) TemplateAxisLogarithmicScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisLogarithmicScale
		return ret
	}).(TemplateAxisLogarithmicScaleOutput)
}

func (o TemplateAxisLogarithmicScalePtrOutput) Base() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisLogarithmicScale) *float64 {
		if v == nil {
			return nil
		}
		return v.Base
	}).(pulumi.Float64PtrOutput)
}

type TemplateAxisScale struct {
	Linear      *TemplateAxisLinearScale      `pulumi:"linear"`
	Logarithmic *TemplateAxisLogarithmicScale `pulumi:"logarithmic"`
}

// TemplateAxisScaleInput is an input type that accepts TemplateAxisScaleArgs and TemplateAxisScaleOutput values.
// You can construct a concrete instance of `TemplateAxisScaleInput` via:
//
//	TemplateAxisScaleArgs{...}
type TemplateAxisScaleInput interface {
	pulumi.Input

	ToTemplateAxisScaleOutput() TemplateAxisScaleOutput
	ToTemplateAxisScaleOutputWithContext(context.Context) TemplateAxisScaleOutput
}

type TemplateAxisScaleArgs struct {
	Linear      TemplateAxisLinearScalePtrInput      `pulumi:"linear"`
	Logarithmic TemplateAxisLogarithmicScalePtrInput `pulumi:"logarithmic"`
}

func (TemplateAxisScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisScale)(nil)).Elem()
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScaleOutput() TemplateAxisScaleOutput {
	return i.ToTemplateAxisScaleOutputWithContext(context.Background())
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScaleOutputWithContext(ctx context.Context) TemplateAxisScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScaleOutput)
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return i.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (i TemplateAxisScaleArgs) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScaleOutput).ToTemplateAxisScalePtrOutputWithContext(ctx)
}

// TemplateAxisScalePtrInput is an input type that accepts TemplateAxisScaleArgs, TemplateAxisScalePtr and TemplateAxisScalePtrOutput values.
// You can construct a concrete instance of `TemplateAxisScalePtrInput` via:
//
//	        TemplateAxisScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisScalePtrInput interface {
	pulumi.Input

	ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput
	ToTemplateAxisScalePtrOutputWithContext(context.Context) TemplateAxisScalePtrOutput
}

type templateAxisScalePtrType TemplateAxisScaleArgs

func TemplateAxisScalePtr(v *TemplateAxisScaleArgs) TemplateAxisScalePtrInput {
	return (*templateAxisScalePtrType)(v)
}

func (*templateAxisScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisScale)(nil)).Elem()
}

func (i *templateAxisScalePtrType) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return i.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (i *templateAxisScalePtrType) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisScalePtrOutput)
}

type TemplateAxisScaleOutput struct{ *pulumi.OutputState }

func (TemplateAxisScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisScale)(nil)).Elem()
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScaleOutput() TemplateAxisScaleOutput {
	return o
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScaleOutputWithContext(ctx context.Context) TemplateAxisScaleOutput {
	return o
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return o.ToTemplateAxisScalePtrOutputWithContext(context.Background())
}

func (o TemplateAxisScaleOutput) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisScale) *TemplateAxisScale {
		return &v
	}).(TemplateAxisScalePtrOutput)
}

func (o TemplateAxisScaleOutput) Linear() TemplateAxisLinearScalePtrOutput {
	return o.ApplyT(func(v TemplateAxisScale) *TemplateAxisLinearScale { return v.Linear }).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisScaleOutput) Logarithmic() TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v TemplateAxisScale) *TemplateAxisLogarithmicScale { return v.Logarithmic }).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisScale)(nil)).Elem()
}

func (o TemplateAxisScalePtrOutput) ToTemplateAxisScalePtrOutput() TemplateAxisScalePtrOutput {
	return o
}

func (o TemplateAxisScalePtrOutput) ToTemplateAxisScalePtrOutputWithContext(ctx context.Context) TemplateAxisScalePtrOutput {
	return o
}

func (o TemplateAxisScalePtrOutput) Elem() TemplateAxisScaleOutput {
	return o.ApplyT(func(v *TemplateAxisScale) TemplateAxisScale {
		if v != nil {
			return *v
		}
		var ret TemplateAxisScale
		return ret
	}).(TemplateAxisScaleOutput)
}

func (o TemplateAxisScalePtrOutput) Linear() TemplateAxisLinearScalePtrOutput {
	return o.ApplyT(func(v *TemplateAxisScale) *TemplateAxisLinearScale {
		if v == nil {
			return nil
		}
		return v.Linear
	}).(TemplateAxisLinearScalePtrOutput)
}

func (o TemplateAxisScalePtrOutput) Logarithmic() TemplateAxisLogarithmicScalePtrOutput {
	return o.ApplyT(func(v *TemplateAxisScale) *TemplateAxisLogarithmicScale {
		if v == nil {
			return nil
		}
		return v.Logarithmic
	}).(TemplateAxisLogarithmicScalePtrOutput)
}

type TemplateAxisTickLabelOptions struct {
	LabelOptions  *TemplateLabelOptions `pulumi:"labelOptions"`
	RotationAngle *float64              `pulumi:"rotationAngle"`
}

// TemplateAxisTickLabelOptionsInput is an input type that accepts TemplateAxisTickLabelOptionsArgs and TemplateAxisTickLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateAxisTickLabelOptionsInput` via:
//
//	TemplateAxisTickLabelOptionsArgs{...}
type TemplateAxisTickLabelOptionsInput interface {
	pulumi.Input

	ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput
	ToTemplateAxisTickLabelOptionsOutputWithContext(context.Context) TemplateAxisTickLabelOptionsOutput
}

type TemplateAxisTickLabelOptionsArgs struct {
	LabelOptions  TemplateLabelOptionsPtrInput `pulumi:"labelOptions"`
	RotationAngle pulumi.Float64PtrInput       `pulumi:"rotationAngle"`
}

func (TemplateAxisTickLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput {
	return i.ToTemplateAxisTickLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsOutput)
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return i.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateAxisTickLabelOptionsArgs) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsOutput).ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateAxisTickLabelOptionsPtrInput is an input type that accepts TemplateAxisTickLabelOptionsArgs, TemplateAxisTickLabelOptionsPtr and TemplateAxisTickLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateAxisTickLabelOptionsPtrInput` via:
//
//	        TemplateAxisTickLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateAxisTickLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput
	ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Context) TemplateAxisTickLabelOptionsPtrOutput
}

type templateAxisTickLabelOptionsPtrType TemplateAxisTickLabelOptionsArgs

func TemplateAxisTickLabelOptionsPtr(v *TemplateAxisTickLabelOptionsArgs) TemplateAxisTickLabelOptionsPtrInput {
	return (*templateAxisTickLabelOptionsPtrType)(v)
}

func (*templateAxisTickLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (i *templateAxisTickLabelOptionsPtrType) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return i.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateAxisTickLabelOptionsPtrType) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateAxisTickLabelOptionsPtrOutput)
}

type TemplateAxisTickLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateAxisTickLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsOutput() TemplateAxisTickLabelOptionsOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return o.ToTemplateAxisTickLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateAxisTickLabelOptionsOutput) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateAxisTickLabelOptions) *TemplateAxisTickLabelOptions {
		return &v
	}).(TemplateAxisTickLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsOutput) LabelOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateAxisTickLabelOptions) *TemplateLabelOptions { return v.LabelOptions }).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateAxisTickLabelOptions) *float64 { return v.RotationAngle }).(pulumi.Float64PtrOutput)
}

type TemplateAxisTickLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateAxisTickLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateAxisTickLabelOptions)(nil)).Elem()
}

func (o TemplateAxisTickLabelOptionsPtrOutput) ToTemplateAxisTickLabelOptionsPtrOutput() TemplateAxisTickLabelOptionsPtrOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsPtrOutput) ToTemplateAxisTickLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateAxisTickLabelOptionsPtrOutput {
	return o
}

func (o TemplateAxisTickLabelOptionsPtrOutput) Elem() TemplateAxisTickLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) TemplateAxisTickLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateAxisTickLabelOptions
		return ret
	}).(TemplateAxisTickLabelOptionsOutput)
}

func (o TemplateAxisTickLabelOptionsPtrOutput) LabelOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.LabelOptions
	}).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateAxisTickLabelOptionsPtrOutput) RotationAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateAxisTickLabelOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.RotationAngle
	}).(pulumi.Float64PtrOutput)
}

type TemplateBarChartAggregatedFieldWells struct {
	Category       []TemplateDimensionField `pulumi:"category"`
	Colors         []TemplateDimensionField `pulumi:"colors"`
	SmallMultiples []TemplateDimensionField `pulumi:"smallMultiples"`
	Values         []TemplateMeasureField   `pulumi:"values"`
}

// TemplateBarChartAggregatedFieldWellsInput is an input type that accepts TemplateBarChartAggregatedFieldWellsArgs and TemplateBarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBarChartAggregatedFieldWellsInput` via:
//
//	TemplateBarChartAggregatedFieldWellsArgs{...}
type TemplateBarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput
	ToTemplateBarChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateBarChartAggregatedFieldWellsOutput
}

type TemplateBarChartAggregatedFieldWellsArgs struct {
	Category       TemplateDimensionFieldArrayInput `pulumi:"category"`
	Colors         TemplateDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples TemplateDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateBarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsOutput)
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartAggregatedFieldWellsArgs) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsOutput).ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBarChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateBarChartAggregatedFieldWellsArgs, TemplateBarChartAggregatedFieldWellsPtr and TemplateBarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateBarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput
	ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput
}

type templateBarChartAggregatedFieldWellsPtrType TemplateBarChartAggregatedFieldWellsArgs

func TemplateBarChartAggregatedFieldWellsPtr(v *TemplateBarChartAggregatedFieldWellsArgs) TemplateBarChartAggregatedFieldWellsPtrInput {
	return (*templateBarChartAggregatedFieldWellsPtrType)(v)
}

func (*templateBarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateBarChartAggregatedFieldWellsPtrType) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBarChartAggregatedFieldWellsPtrType) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsOutput() TemplateBarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartAggregatedFieldWellsOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartAggregatedFieldWells) *TemplateBarChartAggregatedFieldWells {
		return &v
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.Colors }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateDimensionField { return v.SmallMultiples }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateBarChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateBarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutput() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) ToTemplateBarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Elem() TemplateBarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) TemplateBarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartAggregatedFieldWells
		return ret
	}).(TemplateBarChartAggregatedFieldWellsOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBarChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateBarChartConfiguration struct {
	BarsArrangement              *TemplateBarsArrangement              `pulumi:"barsArrangement"`
	CategoryAxis                 *TemplateAxisDisplayOptions           `pulumi:"categoryAxis"`
	CategoryLabelOptions         *TemplateChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *TemplateChartAxisLabelOptions        `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults []TemplateContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *TemplateDataLabelOptions             `pulumi:"dataLabels"`
	FieldWells                   *TemplateBarChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *TemplateLegendOptions                `pulumi:"legend"`
	Orientation                  *TemplateBarChartOrientation          `pulumi:"orientation"`
	ReferenceLines               []TemplateReferenceLine               `pulumi:"referenceLines"`
	SmallMultiplesOptions        *TemplateSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *TemplateBarChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *TemplateTooltipOptions               `pulumi:"tooltip"`
	ValueAxis                    *TemplateAxisDisplayOptions           `pulumi:"valueAxis"`
	ValueLabelOptions            *TemplateChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *TemplateVisualPalette                `pulumi:"visualPalette"`
}

// TemplateBarChartConfigurationInput is an input type that accepts TemplateBarChartConfigurationArgs and TemplateBarChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateBarChartConfigurationInput` via:
//
//	TemplateBarChartConfigurationArgs{...}
type TemplateBarChartConfigurationInput interface {
	pulumi.Input

	ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput
	ToTemplateBarChartConfigurationOutputWithContext(context.Context) TemplateBarChartConfigurationOutput
}

type TemplateBarChartConfigurationArgs struct {
	BarsArrangement              TemplateBarsArrangementPtrInput               `pulumi:"barsArrangement"`
	CategoryAxis                 TemplateAxisDisplayOptionsPtrInput            `pulumi:"categoryAxis"`
	CategoryLabelOptions         TemplateChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            TemplateChartAxisLabelOptionsPtrInput         `pulumi:"colorLabelOptions"`
	ContributionAnalysisDefaults TemplateContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   TemplateDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	FieldWells                   TemplateBarChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       TemplateLegendOptionsPtrInput                 `pulumi:"legend"`
	Orientation                  TemplateBarChartOrientationPtrInput           `pulumi:"orientation"`
	ReferenceLines               TemplateReferenceLineArrayInput               `pulumi:"referenceLines"`
	SmallMultiplesOptions        TemplateSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            TemplateBarChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      TemplateTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueAxis                    TemplateAxisDisplayOptionsPtrInput            `pulumi:"valueAxis"`
	ValueLabelOptions            TemplateChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                TemplateVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (TemplateBarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartConfiguration)(nil)).Elem()
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput {
	return i.ToTemplateBarChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationOutputWithContext(ctx context.Context) TemplateBarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationOutput)
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return i.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartConfigurationArgs) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationOutput).ToTemplateBarChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateBarChartConfigurationPtrInput is an input type that accepts TemplateBarChartConfigurationArgs, TemplateBarChartConfigurationPtr and TemplateBarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartConfigurationPtrInput` via:
//
//	        TemplateBarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput
	ToTemplateBarChartConfigurationPtrOutputWithContext(context.Context) TemplateBarChartConfigurationPtrOutput
}

type templateBarChartConfigurationPtrType TemplateBarChartConfigurationArgs

func TemplateBarChartConfigurationPtr(v *TemplateBarChartConfigurationArgs) TemplateBarChartConfigurationPtrInput {
	return (*templateBarChartConfigurationPtrType)(v)
}

func (*templateBarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartConfiguration)(nil)).Elem()
}

func (i *templateBarChartConfigurationPtrType) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return i.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBarChartConfigurationPtrType) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartConfigurationPtrOutput)
}

type TemplateBarChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartConfiguration)(nil)).Elem()
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationOutput() TemplateBarChartConfigurationOutput {
	return o
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationOutputWithContext(ctx context.Context) TemplateBarChartConfigurationOutput {
	return o
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return o.ToTemplateBarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartConfigurationOutput) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartConfiguration) *TemplateBarChartConfiguration {
		return &v
	}).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarsArrangement { return v.BarsArrangement }).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.ColorLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) []TemplateContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateBarChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) FieldWells() TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartFieldWells { return v.FieldWells }).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Orientation() TemplateBarChartOrientationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartOrientation { return v.Orientation }).(TemplateBarChartOrientationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBarChartConfigurationOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateSmallMultiplesOptions { return v.SmallMultiplesOptions }).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) SortConfiguration() TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateBarChartSortConfiguration { return v.SortConfiguration }).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ValueAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateAxisDisplayOptions { return v.ValueAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions { return v.ValueLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateBarChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateBarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartConfiguration)(nil)).Elem()
}

func (o TemplateBarChartConfigurationPtrOutput) ToTemplateBarChartConfigurationPtrOutput() TemplateBarChartConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartConfigurationPtrOutput) ToTemplateBarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartConfigurationPtrOutput) Elem() TemplateBarChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) TemplateBarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartConfiguration
		return ret
	}).(TemplateBarChartConfigurationOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) []TemplateContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) FieldWells() TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Orientation() TemplateBarChartOrientationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(TemplateBarChartOrientationPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) SortConfiguration() TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateBarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ValueAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ValueAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBarChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateBarChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateBarChartFieldWells struct {
	BarChartAggregatedFieldWells *TemplateBarChartAggregatedFieldWells `pulumi:"barChartAggregatedFieldWells"`
}

// TemplateBarChartFieldWellsInput is an input type that accepts TemplateBarChartFieldWellsArgs and TemplateBarChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBarChartFieldWellsInput` via:
//
//	TemplateBarChartFieldWellsArgs{...}
type TemplateBarChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput
	ToTemplateBarChartFieldWellsOutputWithContext(context.Context) TemplateBarChartFieldWellsOutput
}

type TemplateBarChartFieldWellsArgs struct {
	BarChartAggregatedFieldWells TemplateBarChartAggregatedFieldWellsPtrInput `pulumi:"barChartAggregatedFieldWells"`
}

func (TemplateBarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartFieldWells)(nil)).Elem()
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput {
	return i.ToTemplateBarChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsOutput)
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return i.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartFieldWellsArgs) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsOutput).ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBarChartFieldWellsPtrInput is an input type that accepts TemplateBarChartFieldWellsArgs, TemplateBarChartFieldWellsPtr and TemplateBarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartFieldWellsPtrInput` via:
//
//	        TemplateBarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput
	ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Context) TemplateBarChartFieldWellsPtrOutput
}

type templateBarChartFieldWellsPtrType TemplateBarChartFieldWellsArgs

func TemplateBarChartFieldWellsPtr(v *TemplateBarChartFieldWellsArgs) TemplateBarChartFieldWellsPtrInput {
	return (*templateBarChartFieldWellsPtrType)(v)
}

func (*templateBarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartFieldWells)(nil)).Elem()
}

func (i *templateBarChartFieldWellsPtrType) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return i.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBarChartFieldWellsPtrType) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartFieldWellsPtrOutput)
}

type TemplateBarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartFieldWells)(nil)).Elem()
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsOutput() TemplateBarChartFieldWellsOutput {
	return o
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsOutput {
	return o
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return o.ToTemplateBarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartFieldWellsOutput) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartFieldWells) *TemplateBarChartFieldWells {
		return &v
	}).(TemplateBarChartFieldWellsPtrOutput)
}

func (o TemplateBarChartFieldWellsOutput) BarChartAggregatedFieldWells() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartFieldWells) *TemplateBarChartAggregatedFieldWells {
		return v.BarChartAggregatedFieldWells
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartFieldWells)(nil)).Elem()
}

func (o TemplateBarChartFieldWellsPtrOutput) ToTemplateBarChartFieldWellsPtrOutput() TemplateBarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartFieldWellsPtrOutput) ToTemplateBarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateBarChartFieldWellsPtrOutput) Elem() TemplateBarChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBarChartFieldWells) TemplateBarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartFieldWells
		return ret
	}).(TemplateBarChartFieldWellsOutput)
}

func (o TemplateBarChartFieldWellsPtrOutput) BarChartAggregatedFieldWells() TemplateBarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartFieldWells) *TemplateBarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BarChartAggregatedFieldWells
	}).(TemplateBarChartAggregatedFieldWellsPtrOutput)
}

type TemplateBarChartSortConfiguration struct {
	CategoryItemsLimit               *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []TemplateFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit                  *TemplateItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort                        []TemplateFieldSortOptions       `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []TemplateFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// TemplateBarChartSortConfigurationInput is an input type that accepts TemplateBarChartSortConfigurationArgs and TemplateBarChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateBarChartSortConfigurationInput` via:
//
//	TemplateBarChartSortConfigurationArgs{...}
type TemplateBarChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput
	ToTemplateBarChartSortConfigurationOutputWithContext(context.Context) TemplateBarChartSortConfigurationOutput
}

type TemplateBarChartSortConfigurationArgs struct {
	CategoryItemsLimit               TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit                  TemplateItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort                        TemplateFieldSortOptionsArrayInput      `pulumi:"colorSort"`
	SmallMultiplesLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               TemplateFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (TemplateBarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput {
	return i.ToTemplateBarChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationOutput)
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return i.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartSortConfigurationArgs) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationOutput).ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateBarChartSortConfigurationPtrInput is an input type that accepts TemplateBarChartSortConfigurationArgs, TemplateBarChartSortConfigurationPtr and TemplateBarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartSortConfigurationPtrInput` via:
//
//	        TemplateBarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput
	ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Context) TemplateBarChartSortConfigurationPtrOutput
}

type templateBarChartSortConfigurationPtrType TemplateBarChartSortConfigurationArgs

func TemplateBarChartSortConfigurationPtr(v *TemplateBarChartSortConfigurationArgs) TemplateBarChartSortConfigurationPtrInput {
	return (*templateBarChartSortConfigurationPtrType)(v)
}

func (*templateBarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (i *templateBarChartSortConfigurationPtrType) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return i.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBarChartSortConfigurationPtrType) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartSortConfigurationPtrOutput)
}

type TemplateBarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationOutput() TemplateBarChartSortConfigurationOutput {
	return o
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationOutput {
	return o
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return o.ToTemplateBarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartSortConfigurationOutput) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartSortConfiguration) *TemplateBarChartSortConfiguration {
		return &v
	}).(TemplateBarChartSortConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration { return v.ColorItemsLimit }).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.ColorSort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBarChartSortConfiguration) []TemplateFieldSortOptions { return v.SmallMultiplesSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateBarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateBarChartSortConfigurationPtrOutput) ToTemplateBarChartSortConfigurationPtrOutput() TemplateBarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartSortConfigurationPtrOutput) ToTemplateBarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateBarChartSortConfigurationPtrOutput) Elem() TemplateBarChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) TemplateBarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartSortConfiguration
		return ret
	}).(TemplateBarChartSortConfigurationOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateBarChartSortConfigurationPtrOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateBarChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateBarChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateBarChartVisualInput is an input type that accepts TemplateBarChartVisualArgs and TemplateBarChartVisualOutput values.
// You can construct a concrete instance of `TemplateBarChartVisualInput` via:
//
//	TemplateBarChartVisualArgs{...}
type TemplateBarChartVisualInput interface {
	pulumi.Input

	ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput
	ToTemplateBarChartVisualOutputWithContext(context.Context) TemplateBarChartVisualOutput
}

type TemplateBarChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateBarChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateBarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartVisual)(nil)).Elem()
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput {
	return i.ToTemplateBarChartVisualOutputWithContext(context.Background())
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualOutputWithContext(ctx context.Context) TemplateBarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualOutput)
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return i.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateBarChartVisualArgs) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualOutput).ToTemplateBarChartVisualPtrOutputWithContext(ctx)
}

// TemplateBarChartVisualPtrInput is an input type that accepts TemplateBarChartVisualArgs, TemplateBarChartVisualPtr and TemplateBarChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateBarChartVisualPtrInput` via:
//
//	        TemplateBarChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateBarChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput
	ToTemplateBarChartVisualPtrOutputWithContext(context.Context) TemplateBarChartVisualPtrOutput
}

type templateBarChartVisualPtrType TemplateBarChartVisualArgs

func TemplateBarChartVisualPtr(v *TemplateBarChartVisualArgs) TemplateBarChartVisualPtrInput {
	return (*templateBarChartVisualPtrType)(v)
}

func (*templateBarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartVisual)(nil)).Elem()
}

func (i *templateBarChartVisualPtrType) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return i.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateBarChartVisualPtrType) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBarChartVisualPtrOutput)
}

type TemplateBarChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateBarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBarChartVisual)(nil)).Elem()
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualOutput() TemplateBarChartVisualOutput {
	return o
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualOutputWithContext(ctx context.Context) TemplateBarChartVisualOutput {
	return o
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return o.ToTemplateBarChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateBarChartVisualOutput) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBarChartVisual) *TemplateBarChartVisual {
		return &v
	}).(TemplateBarChartVisualPtrOutput)
}

func (o TemplateBarChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBarChartVisualOutput) ChartConfiguration() TemplateBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateBarChartConfiguration { return v.ChartConfiguration }).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBarChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateBarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateBarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBarChartVisual)(nil)).Elem()
}

func (o TemplateBarChartVisualPtrOutput) ToTemplateBarChartVisualPtrOutput() TemplateBarChartVisualPtrOutput {
	return o
}

func (o TemplateBarChartVisualPtrOutput) ToTemplateBarChartVisualPtrOutputWithContext(ctx context.Context) TemplateBarChartVisualPtrOutput {
	return o
}

func (o TemplateBarChartVisualPtrOutput) Elem() TemplateBarChartVisualOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) TemplateBarChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateBarChartVisual
		return ret
	}).(TemplateBarChartVisualOutput)
}

func (o TemplateBarChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBarChartVisualPtrOutput) ChartConfiguration() TemplateBarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateBarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateBarChartConfigurationPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBarChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateBarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateBinCountOptions struct {
	Value *float64 `pulumi:"value"`
}

// TemplateBinCountOptionsInput is an input type that accepts TemplateBinCountOptionsArgs and TemplateBinCountOptionsOutput values.
// You can construct a concrete instance of `TemplateBinCountOptionsInput` via:
//
//	TemplateBinCountOptionsArgs{...}
type TemplateBinCountOptionsInput interface {
	pulumi.Input

	ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput
	ToTemplateBinCountOptionsOutputWithContext(context.Context) TemplateBinCountOptionsOutput
}

type TemplateBinCountOptionsArgs struct {
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (TemplateBinCountOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinCountOptions)(nil)).Elem()
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput {
	return i.ToTemplateBinCountOptionsOutputWithContext(context.Background())
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsOutputWithContext(ctx context.Context) TemplateBinCountOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsOutput)
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return i.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBinCountOptionsArgs) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsOutput).ToTemplateBinCountOptionsPtrOutputWithContext(ctx)
}

// TemplateBinCountOptionsPtrInput is an input type that accepts TemplateBinCountOptionsArgs, TemplateBinCountOptionsPtr and TemplateBinCountOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBinCountOptionsPtrInput` via:
//
//	        TemplateBinCountOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBinCountOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput
	ToTemplateBinCountOptionsPtrOutputWithContext(context.Context) TemplateBinCountOptionsPtrOutput
}

type templateBinCountOptionsPtrType TemplateBinCountOptionsArgs

func TemplateBinCountOptionsPtr(v *TemplateBinCountOptionsArgs) TemplateBinCountOptionsPtrInput {
	return (*templateBinCountOptionsPtrType)(v)
}

func (*templateBinCountOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinCountOptions)(nil)).Elem()
}

func (i *templateBinCountOptionsPtrType) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return i.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBinCountOptionsPtrType) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinCountOptionsPtrOutput)
}

type TemplateBinCountOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBinCountOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinCountOptions)(nil)).Elem()
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsOutput() TemplateBinCountOptionsOutput {
	return o
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsOutputWithContext(ctx context.Context) TemplateBinCountOptionsOutput {
	return o
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return o.ToTemplateBinCountOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBinCountOptionsOutput) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBinCountOptions) *TemplateBinCountOptions {
		return &v
	}).(TemplateBinCountOptionsPtrOutput)
}

func (o TemplateBinCountOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinCountOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TemplateBinCountOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBinCountOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinCountOptions)(nil)).Elem()
}

func (o TemplateBinCountOptionsPtrOutput) ToTemplateBinCountOptionsPtrOutput() TemplateBinCountOptionsPtrOutput {
	return o
}

func (o TemplateBinCountOptionsPtrOutput) ToTemplateBinCountOptionsPtrOutputWithContext(ctx context.Context) TemplateBinCountOptionsPtrOutput {
	return o
}

func (o TemplateBinCountOptionsPtrOutput) Elem() TemplateBinCountOptionsOutput {
	return o.ApplyT(func(v *TemplateBinCountOptions) TemplateBinCountOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBinCountOptions
		return ret
	}).(TemplateBinCountOptionsOutput)
}

func (o TemplateBinCountOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinCountOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateBinWidthOptions struct {
	BinCountLimit *float64 `pulumi:"binCountLimit"`
	Value         *float64 `pulumi:"value"`
}

// TemplateBinWidthOptionsInput is an input type that accepts TemplateBinWidthOptionsArgs and TemplateBinWidthOptionsOutput values.
// You can construct a concrete instance of `TemplateBinWidthOptionsInput` via:
//
//	TemplateBinWidthOptionsArgs{...}
type TemplateBinWidthOptionsInput interface {
	pulumi.Input

	ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput
	ToTemplateBinWidthOptionsOutputWithContext(context.Context) TemplateBinWidthOptionsOutput
}

type TemplateBinWidthOptionsArgs struct {
	BinCountLimit pulumi.Float64PtrInput `pulumi:"binCountLimit"`
	Value         pulumi.Float64PtrInput `pulumi:"value"`
}

func (TemplateBinWidthOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinWidthOptions)(nil)).Elem()
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput {
	return i.ToTemplateBinWidthOptionsOutputWithContext(context.Background())
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsOutputWithContext(ctx context.Context) TemplateBinWidthOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsOutput)
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return i.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBinWidthOptionsArgs) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsOutput).ToTemplateBinWidthOptionsPtrOutputWithContext(ctx)
}

// TemplateBinWidthOptionsPtrInput is an input type that accepts TemplateBinWidthOptionsArgs, TemplateBinWidthOptionsPtr and TemplateBinWidthOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBinWidthOptionsPtrInput` via:
//
//	        TemplateBinWidthOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBinWidthOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput
	ToTemplateBinWidthOptionsPtrOutputWithContext(context.Context) TemplateBinWidthOptionsPtrOutput
}

type templateBinWidthOptionsPtrType TemplateBinWidthOptionsArgs

func TemplateBinWidthOptionsPtr(v *TemplateBinWidthOptionsArgs) TemplateBinWidthOptionsPtrInput {
	return (*templateBinWidthOptionsPtrType)(v)
}

func (*templateBinWidthOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinWidthOptions)(nil)).Elem()
}

func (i *templateBinWidthOptionsPtrType) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return i.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBinWidthOptionsPtrType) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBinWidthOptionsPtrOutput)
}

type TemplateBinWidthOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBinWidthOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBinWidthOptions)(nil)).Elem()
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsOutput() TemplateBinWidthOptionsOutput {
	return o
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsOutputWithContext(ctx context.Context) TemplateBinWidthOptionsOutput {
	return o
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return o.ToTemplateBinWidthOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBinWidthOptionsOutput) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBinWidthOptions) *TemplateBinWidthOptions {
		return &v
	}).(TemplateBinWidthOptionsPtrOutput)
}

func (o TemplateBinWidthOptionsOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinWidthOptions) *float64 { return v.BinCountLimit }).(pulumi.Float64PtrOutput)
}

func (o TemplateBinWidthOptionsOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateBinWidthOptions) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TemplateBinWidthOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBinWidthOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBinWidthOptions)(nil)).Elem()
}

func (o TemplateBinWidthOptionsPtrOutput) ToTemplateBinWidthOptionsPtrOutput() TemplateBinWidthOptionsPtrOutput {
	return o
}

func (o TemplateBinWidthOptionsPtrOutput) ToTemplateBinWidthOptionsPtrOutputWithContext(ctx context.Context) TemplateBinWidthOptionsPtrOutput {
	return o
}

func (o TemplateBinWidthOptionsPtrOutput) Elem() TemplateBinWidthOptionsOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) TemplateBinWidthOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBinWidthOptions
		return ret
	}).(TemplateBinWidthOptionsOutput)
}

func (o TemplateBinWidthOptionsPtrOutput) BinCountLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.BinCountLimit
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateBinWidthOptionsPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateBinWidthOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateBodySectionConfiguration struct {
	Content                TemplateBodySectionContent             `pulumi:"content"`
	PageBreakConfiguration *TemplateSectionPageBreakConfiguration `pulumi:"pageBreakConfiguration"`
	SectionId              string                                 `pulumi:"sectionId"`
	Style                  *TemplateSectionStyle                  `pulumi:"style"`
}

// TemplateBodySectionConfigurationInput is an input type that accepts TemplateBodySectionConfigurationArgs and TemplateBodySectionConfigurationOutput values.
// You can construct a concrete instance of `TemplateBodySectionConfigurationInput` via:
//
//	TemplateBodySectionConfigurationArgs{...}
type TemplateBodySectionConfigurationInput interface {
	pulumi.Input

	ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput
	ToTemplateBodySectionConfigurationOutputWithContext(context.Context) TemplateBodySectionConfigurationOutput
}

type TemplateBodySectionConfigurationArgs struct {
	Content                TemplateBodySectionContentInput               `pulumi:"content"`
	PageBreakConfiguration TemplateSectionPageBreakConfigurationPtrInput `pulumi:"pageBreakConfiguration"`
	SectionId              pulumi.StringInput                            `pulumi:"sectionId"`
	Style                  TemplateSectionStylePtrInput                  `pulumi:"style"`
}

func (TemplateBodySectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionConfiguration)(nil)).Elem()
}

func (i TemplateBodySectionConfigurationArgs) ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput {
	return i.ToTemplateBodySectionConfigurationOutputWithContext(context.Background())
}

func (i TemplateBodySectionConfigurationArgs) ToTemplateBodySectionConfigurationOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionConfigurationOutput)
}

// TemplateBodySectionConfigurationArrayInput is an input type that accepts TemplateBodySectionConfigurationArray and TemplateBodySectionConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateBodySectionConfigurationArrayInput` via:
//
//	TemplateBodySectionConfigurationArray{ TemplateBodySectionConfigurationArgs{...} }
type TemplateBodySectionConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput
	ToTemplateBodySectionConfigurationArrayOutputWithContext(context.Context) TemplateBodySectionConfigurationArrayOutput
}

type TemplateBodySectionConfigurationArray []TemplateBodySectionConfigurationInput

func (TemplateBodySectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateBodySectionConfiguration)(nil)).Elem()
}

func (i TemplateBodySectionConfigurationArray) ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput {
	return i.ToTemplateBodySectionConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateBodySectionConfigurationArray) ToTemplateBodySectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionConfigurationArrayOutput)
}

type TemplateBodySectionConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionConfiguration)(nil)).Elem()
}

func (o TemplateBodySectionConfigurationOutput) ToTemplateBodySectionConfigurationOutput() TemplateBodySectionConfigurationOutput {
	return o
}

func (o TemplateBodySectionConfigurationOutput) ToTemplateBodySectionConfigurationOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationOutput {
	return o
}

func (o TemplateBodySectionConfigurationOutput) Content() TemplateBodySectionContentOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) TemplateBodySectionContent { return v.Content }).(TemplateBodySectionContentOutput)
}

func (o TemplateBodySectionConfigurationOutput) PageBreakConfiguration() TemplateSectionPageBreakConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) *TemplateSectionPageBreakConfiguration {
		return v.PageBreakConfiguration
	}).(TemplateSectionPageBreakConfigurationPtrOutput)
}

func (o TemplateBodySectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o TemplateBodySectionConfigurationOutput) Style() TemplateSectionStylePtrOutput {
	return o.ApplyT(func(v TemplateBodySectionConfiguration) *TemplateSectionStyle { return v.Style }).(TemplateSectionStylePtrOutput)
}

type TemplateBodySectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateBodySectionConfiguration)(nil)).Elem()
}

func (o TemplateBodySectionConfigurationArrayOutput) ToTemplateBodySectionConfigurationArrayOutput() TemplateBodySectionConfigurationArrayOutput {
	return o
}

func (o TemplateBodySectionConfigurationArrayOutput) ToTemplateBodySectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateBodySectionConfigurationArrayOutput {
	return o
}

func (o TemplateBodySectionConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateBodySectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateBodySectionConfiguration {
		return vs[0].([]TemplateBodySectionConfiguration)[vs[1].(int)]
	}).(TemplateBodySectionConfigurationOutput)
}

type TemplateBodySectionContent struct {
	Layout *TemplateSectionLayoutConfiguration `pulumi:"layout"`
}

// TemplateBodySectionContentInput is an input type that accepts TemplateBodySectionContentArgs and TemplateBodySectionContentOutput values.
// You can construct a concrete instance of `TemplateBodySectionContentInput` via:
//
//	TemplateBodySectionContentArgs{...}
type TemplateBodySectionContentInput interface {
	pulumi.Input

	ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput
	ToTemplateBodySectionContentOutputWithContext(context.Context) TemplateBodySectionContentOutput
}

type TemplateBodySectionContentArgs struct {
	Layout TemplateSectionLayoutConfigurationPtrInput `pulumi:"layout"`
}

func (TemplateBodySectionContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionContent)(nil)).Elem()
}

func (i TemplateBodySectionContentArgs) ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput {
	return i.ToTemplateBodySectionContentOutputWithContext(context.Background())
}

func (i TemplateBodySectionContentArgs) ToTemplateBodySectionContentOutputWithContext(ctx context.Context) TemplateBodySectionContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBodySectionContentOutput)
}

type TemplateBodySectionContentOutput struct{ *pulumi.OutputState }

func (TemplateBodySectionContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBodySectionContent)(nil)).Elem()
}

func (o TemplateBodySectionContentOutput) ToTemplateBodySectionContentOutput() TemplateBodySectionContentOutput {
	return o
}

func (o TemplateBodySectionContentOutput) ToTemplateBodySectionContentOutputWithContext(ctx context.Context) TemplateBodySectionContentOutput {
	return o
}

func (o TemplateBodySectionContentOutput) Layout() TemplateSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBodySectionContent) *TemplateSectionLayoutConfiguration { return v.Layout }).(TemplateSectionLayoutConfigurationPtrOutput)
}

type TemplateBoxPlotAggregatedFieldWells struct {
	GroupBy []TemplateDimensionField `pulumi:"groupBy"`
	Values  []TemplateMeasureField   `pulumi:"values"`
}

// TemplateBoxPlotAggregatedFieldWellsInput is an input type that accepts TemplateBoxPlotAggregatedFieldWellsArgs and TemplateBoxPlotAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotAggregatedFieldWellsInput` via:
//
//	TemplateBoxPlotAggregatedFieldWellsArgs{...}
type TemplateBoxPlotAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput
	ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(context.Context) TemplateBoxPlotAggregatedFieldWellsOutput
}

type TemplateBoxPlotAggregatedFieldWellsArgs struct {
	GroupBy TemplateDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateBoxPlotAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsOutput)
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotAggregatedFieldWellsArgs) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsOutput).ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotAggregatedFieldWellsPtrInput is an input type that accepts TemplateBoxPlotAggregatedFieldWellsArgs, TemplateBoxPlotAggregatedFieldWellsPtr and TemplateBoxPlotAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotAggregatedFieldWellsPtrInput` via:
//
//	        TemplateBoxPlotAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput
	ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput
}

type templateBoxPlotAggregatedFieldWellsPtrType TemplateBoxPlotAggregatedFieldWellsArgs

func TemplateBoxPlotAggregatedFieldWellsPtr(v *TemplateBoxPlotAggregatedFieldWellsArgs) TemplateBoxPlotAggregatedFieldWellsPtrInput {
	return (*templateBoxPlotAggregatedFieldWellsPtrType)(v)
}

func (*templateBoxPlotAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (i *templateBoxPlotAggregatedFieldWellsPtrType) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotAggregatedFieldWellsPtrType) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsOutput() TemplateBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotAggregatedFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		return &v
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotAggregatedFieldWells) []TemplateDimensionField { return v.GroupBy }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateBoxPlotAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutput() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) ToTemplateBoxPlotAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) Elem() TemplateBoxPlotAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) TemplateBoxPlotAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotAggregatedFieldWells
		return ret
	}).(TemplateBoxPlotAggregatedFieldWellsOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateBoxPlotAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateBoxPlotChartConfiguration struct {
	BoxPlotOptions             *TemplateBoxPlotOptions           `pulumi:"boxPlotOptions"`
	CategoryAxis               *TemplateAxisDisplayOptions       `pulumi:"categoryAxis"`
	CategoryLabelOptions       *TemplateChartAxisLabelOptions    `pulumi:"categoryLabelOptions"`
	FieldWells                 *TemplateBoxPlotFieldWells        `pulumi:"fieldWells"`
	Legend                     *TemplateLegendOptions            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions *TemplateAxisDisplayOptions       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   *TemplateChartAxisLabelOptions    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             []TemplateReferenceLine           `pulumi:"referenceLines"`
	SortConfiguration          *TemplateBoxPlotSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                    *TemplateTooltipOptions           `pulumi:"tooltip"`
	VisualPalette              *TemplateVisualPalette            `pulumi:"visualPalette"`
}

// TemplateBoxPlotChartConfigurationInput is an input type that accepts TemplateBoxPlotChartConfigurationArgs and TemplateBoxPlotChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateBoxPlotChartConfigurationInput` via:
//
//	TemplateBoxPlotChartConfigurationArgs{...}
type TemplateBoxPlotChartConfigurationInput interface {
	pulumi.Input

	ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput
	ToTemplateBoxPlotChartConfigurationOutputWithContext(context.Context) TemplateBoxPlotChartConfigurationOutput
}

type TemplateBoxPlotChartConfigurationArgs struct {
	BoxPlotOptions             TemplateBoxPlotOptionsPtrInput           `pulumi:"boxPlotOptions"`
	CategoryAxis               TemplateAxisDisplayOptionsPtrInput       `pulumi:"categoryAxis"`
	CategoryLabelOptions       TemplateChartAxisLabelOptionsPtrInput    `pulumi:"categoryLabelOptions"`
	FieldWells                 TemplateBoxPlotFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                     TemplateLegendOptionsPtrInput            `pulumi:"legend"`
	PrimaryYAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput       `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput    `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines             TemplateReferenceLineArrayInput          `pulumi:"referenceLines"`
	SortConfiguration          TemplateBoxPlotSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                    TemplateTooltipOptionsPtrInput           `pulumi:"tooltip"`
	VisualPalette              TemplateVisualPalettePtrInput            `pulumi:"visualPalette"`
}

func (TemplateBoxPlotChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput {
	return i.ToTemplateBoxPlotChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationOutput)
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return i.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotChartConfigurationArgs) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationOutput).ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateBoxPlotChartConfigurationPtrInput is an input type that accepts TemplateBoxPlotChartConfigurationArgs, TemplateBoxPlotChartConfigurationPtr and TemplateBoxPlotChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotChartConfigurationPtrInput` via:
//
//	        TemplateBoxPlotChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput
	ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Context) TemplateBoxPlotChartConfigurationPtrOutput
}

type templateBoxPlotChartConfigurationPtrType TemplateBoxPlotChartConfigurationArgs

func TemplateBoxPlotChartConfigurationPtr(v *TemplateBoxPlotChartConfigurationArgs) TemplateBoxPlotChartConfigurationPtrInput {
	return (*templateBoxPlotChartConfigurationPtrType)(v)
}

func (*templateBoxPlotChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (i *templateBoxPlotChartConfigurationPtrType) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return i.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotChartConfigurationPtrType) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotChartConfigurationPtrOutput)
}

type TemplateBoxPlotChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationOutput() TemplateBoxPlotChartConfigurationOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotChartConfigurationOutput) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotChartConfiguration {
		return &v
	}).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) BoxPlotOptions() TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotOptions { return v.BoxPlotOptions }).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) FieldWells() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotFieldWells { return v.FieldWells }).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) SortConfiguration() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateBoxPlotSortConfiguration {
		return v.SortConfiguration
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateBoxPlotChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotChartConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ToTemplateBoxPlotChartConfigurationPtrOutput() TemplateBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ToTemplateBoxPlotChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotChartConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Elem() TemplateBoxPlotChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) TemplateBoxPlotChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotChartConfiguration
		return ret
	}).(TemplateBoxPlotChartConfigurationOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) BoxPlotOptions() TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotOptions {
		if v == nil {
			return nil
		}
		return v.BoxPlotOptions
	}).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) FieldWells() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) SortConfiguration() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateBoxPlotSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateBoxPlotChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateBoxPlotFieldWells struct {
	BoxPlotAggregatedFieldWells *TemplateBoxPlotAggregatedFieldWells `pulumi:"boxPlotAggregatedFieldWells"`
}

// TemplateBoxPlotFieldWellsInput is an input type that accepts TemplateBoxPlotFieldWellsArgs and TemplateBoxPlotFieldWellsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotFieldWellsInput` via:
//
//	TemplateBoxPlotFieldWellsArgs{...}
type TemplateBoxPlotFieldWellsInput interface {
	pulumi.Input

	ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput
	ToTemplateBoxPlotFieldWellsOutputWithContext(context.Context) TemplateBoxPlotFieldWellsOutput
}

type TemplateBoxPlotFieldWellsArgs struct {
	BoxPlotAggregatedFieldWells TemplateBoxPlotAggregatedFieldWellsPtrInput `pulumi:"boxPlotAggregatedFieldWells"`
}

func (TemplateBoxPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput {
	return i.ToTemplateBoxPlotFieldWellsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsOutput)
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotFieldWellsArgs) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsOutput).ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotFieldWellsPtrInput is an input type that accepts TemplateBoxPlotFieldWellsArgs, TemplateBoxPlotFieldWellsPtr and TemplateBoxPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotFieldWellsPtrInput` via:
//
//	        TemplateBoxPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput
	ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Context) TemplateBoxPlotFieldWellsPtrOutput
}

type templateBoxPlotFieldWellsPtrType TemplateBoxPlotFieldWellsArgs

func TemplateBoxPlotFieldWellsPtr(v *TemplateBoxPlotFieldWellsArgs) TemplateBoxPlotFieldWellsPtrInput {
	return (*templateBoxPlotFieldWellsPtrType)(v)
}

func (*templateBoxPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (i *templateBoxPlotFieldWellsPtrType) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return i.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotFieldWellsPtrType) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotFieldWellsPtrOutput)
}

type TemplateBoxPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsOutput() TemplateBoxPlotFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return o.ToTemplateBoxPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotFieldWellsOutput) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotFieldWells) *TemplateBoxPlotFieldWells {
		return &v
	}).(TemplateBoxPlotFieldWellsPtrOutput)
}

func (o TemplateBoxPlotFieldWellsOutput) BoxPlotAggregatedFieldWells() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		return v.BoxPlotAggregatedFieldWells
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotFieldWells)(nil)).Elem()
}

func (o TemplateBoxPlotFieldWellsPtrOutput) ToTemplateBoxPlotFieldWellsPtrOutput() TemplateBoxPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsPtrOutput) ToTemplateBoxPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateBoxPlotFieldWellsPtrOutput) Elem() TemplateBoxPlotFieldWellsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotFieldWells) TemplateBoxPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotFieldWells
		return ret
	}).(TemplateBoxPlotFieldWellsOutput)
}

func (o TemplateBoxPlotFieldWellsPtrOutput) BoxPlotAggregatedFieldWells() TemplateBoxPlotAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotFieldWells) *TemplateBoxPlotAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.BoxPlotAggregatedFieldWells
	}).(TemplateBoxPlotAggregatedFieldWellsPtrOutput)
}

type TemplateBoxPlotOptions struct {
	AllDataPointsVisibility *TemplateVisibility          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       *TemplateVisibility          `pulumi:"outlierVisibility"`
	StyleOptions            *TemplateBoxPlotStyleOptions `pulumi:"styleOptions"`
}

// TemplateBoxPlotOptionsInput is an input type that accepts TemplateBoxPlotOptionsArgs and TemplateBoxPlotOptionsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotOptionsInput` via:
//
//	TemplateBoxPlotOptionsArgs{...}
type TemplateBoxPlotOptionsInput interface {
	pulumi.Input

	ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput
	ToTemplateBoxPlotOptionsOutputWithContext(context.Context) TemplateBoxPlotOptionsOutput
}

type TemplateBoxPlotOptionsArgs struct {
	AllDataPointsVisibility TemplateVisibilityPtrInput          `pulumi:"allDataPointsVisibility"`
	OutlierVisibility       TemplateVisibilityPtrInput          `pulumi:"outlierVisibility"`
	StyleOptions            TemplateBoxPlotStyleOptionsPtrInput `pulumi:"styleOptions"`
}

func (TemplateBoxPlotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotOptions)(nil)).Elem()
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput {
	return i.ToTemplateBoxPlotOptionsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsOutput)
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return i.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotOptionsArgs) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsOutput).ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotOptionsPtrInput is an input type that accepts TemplateBoxPlotOptionsArgs, TemplateBoxPlotOptionsPtr and TemplateBoxPlotOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotOptionsPtrInput` via:
//
//	        TemplateBoxPlotOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput
	ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Context) TemplateBoxPlotOptionsPtrOutput
}

type templateBoxPlotOptionsPtrType TemplateBoxPlotOptionsArgs

func TemplateBoxPlotOptionsPtr(v *TemplateBoxPlotOptionsArgs) TemplateBoxPlotOptionsPtrInput {
	return (*templateBoxPlotOptionsPtrType)(v)
}

func (*templateBoxPlotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotOptions)(nil)).Elem()
}

func (i *templateBoxPlotOptionsPtrType) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return i.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotOptionsPtrType) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotOptionsPtrOutput)
}

type TemplateBoxPlotOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotOptions)(nil)).Elem()
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsOutput() TemplateBoxPlotOptionsOutput {
	return o
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsOutput {
	return o
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return o.ToTemplateBoxPlotOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotOptionsOutput) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotOptions) *TemplateBoxPlotOptions {
		return &v
	}).(TemplateBoxPlotOptionsPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) AllDataPointsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateVisibility { return v.AllDataPointsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) OutlierVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateVisibility { return v.OutlierVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsOutput) StyleOptions() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotOptions) *TemplateBoxPlotStyleOptions { return v.StyleOptions }).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotOptions)(nil)).Elem()
}

func (o TemplateBoxPlotOptionsPtrOutput) ToTemplateBoxPlotOptionsPtrOutput() TemplateBoxPlotOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotOptionsPtrOutput) ToTemplateBoxPlotOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotOptionsPtrOutput) Elem() TemplateBoxPlotOptionsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) TemplateBoxPlotOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotOptions
		return ret
	}).(TemplateBoxPlotOptionsOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) AllDataPointsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AllDataPointsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) OutlierVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.OutlierVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateBoxPlotOptionsPtrOutput) StyleOptions() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotOptions) *TemplateBoxPlotStyleOptions {
		if v == nil {
			return nil
		}
		return v.StyleOptions
	}).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotSortConfiguration struct {
	CategorySort            []TemplateFieldSortOptions       `pulumi:"categorySort"`
	PaginationConfiguration *TemplatePaginationConfiguration `pulumi:"paginationConfiguration"`
}

// TemplateBoxPlotSortConfigurationInput is an input type that accepts TemplateBoxPlotSortConfigurationArgs and TemplateBoxPlotSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateBoxPlotSortConfigurationInput` via:
//
//	TemplateBoxPlotSortConfigurationArgs{...}
type TemplateBoxPlotSortConfigurationInput interface {
	pulumi.Input

	ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput
	ToTemplateBoxPlotSortConfigurationOutputWithContext(context.Context) TemplateBoxPlotSortConfigurationOutput
}

type TemplateBoxPlotSortConfigurationArgs struct {
	CategorySort            TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	PaginationConfiguration TemplatePaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
}

func (TemplateBoxPlotSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput {
	return i.ToTemplateBoxPlotSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationOutput)
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return i.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotSortConfigurationArgs) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationOutput).ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateBoxPlotSortConfigurationPtrInput is an input type that accepts TemplateBoxPlotSortConfigurationArgs, TemplateBoxPlotSortConfigurationPtr and TemplateBoxPlotSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotSortConfigurationPtrInput` via:
//
//	        TemplateBoxPlotSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput
	ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Context) TemplateBoxPlotSortConfigurationPtrOutput
}

type templateBoxPlotSortConfigurationPtrType TemplateBoxPlotSortConfigurationArgs

func TemplateBoxPlotSortConfigurationPtr(v *TemplateBoxPlotSortConfigurationArgs) TemplateBoxPlotSortConfigurationPtrInput {
	return (*templateBoxPlotSortConfigurationPtrType)(v)
}

func (*templateBoxPlotSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (i *templateBoxPlotSortConfigurationPtrType) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return i.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotSortConfigurationPtrType) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotSortConfigurationPtrOutput)
}

type TemplateBoxPlotSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationOutput() TemplateBoxPlotSortConfigurationOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotSortConfigurationOutput) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotSortConfiguration) *TemplateBoxPlotSortConfiguration {
		return &v
	}).(TemplateBoxPlotSortConfigurationPtrOutput)
}

func (o TemplateBoxPlotSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBoxPlotSortConfigurationOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotSortConfiguration) *TemplatePaginationConfiguration {
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

type TemplateBoxPlotSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotSortConfiguration)(nil)).Elem()
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) ToTemplateBoxPlotSortConfigurationPtrOutput() TemplateBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) ToTemplateBoxPlotSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateBoxPlotSortConfigurationPtrOutput {
	return o
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) Elem() TemplateBoxPlotSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) TemplateBoxPlotSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotSortConfiguration
		return ret
	}).(TemplateBoxPlotSortConfigurationOutput)
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateBoxPlotSortConfigurationPtrOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotSortConfiguration) *TemplatePaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

type TemplateBoxPlotStyleOptions struct {
	FillStyle *TemplateBoxPlotFillStyle `pulumi:"fillStyle"`
}

// TemplateBoxPlotStyleOptionsInput is an input type that accepts TemplateBoxPlotStyleOptionsArgs and TemplateBoxPlotStyleOptionsOutput values.
// You can construct a concrete instance of `TemplateBoxPlotStyleOptionsInput` via:
//
//	TemplateBoxPlotStyleOptionsArgs{...}
type TemplateBoxPlotStyleOptionsInput interface {
	pulumi.Input

	ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput
	ToTemplateBoxPlotStyleOptionsOutputWithContext(context.Context) TemplateBoxPlotStyleOptionsOutput
}

type TemplateBoxPlotStyleOptionsArgs struct {
	FillStyle TemplateBoxPlotFillStylePtrInput `pulumi:"fillStyle"`
}

func (TemplateBoxPlotStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput {
	return i.ToTemplateBoxPlotStyleOptionsOutputWithContext(context.Background())
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsOutput)
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return i.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotStyleOptionsArgs) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsOutput).ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx)
}

// TemplateBoxPlotStyleOptionsPtrInput is an input type that accepts TemplateBoxPlotStyleOptionsArgs, TemplateBoxPlotStyleOptionsPtr and TemplateBoxPlotStyleOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotStyleOptionsPtrInput` via:
//
//	        TemplateBoxPlotStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotStyleOptionsPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput
	ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Context) TemplateBoxPlotStyleOptionsPtrOutput
}

type templateBoxPlotStyleOptionsPtrType TemplateBoxPlotStyleOptionsArgs

func TemplateBoxPlotStyleOptionsPtr(v *TemplateBoxPlotStyleOptionsArgs) TemplateBoxPlotStyleOptionsPtrInput {
	return (*templateBoxPlotStyleOptionsPtrType)(v)
}

func (*templateBoxPlotStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (i *templateBoxPlotStyleOptionsPtrType) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return i.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotStyleOptionsPtrType) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotStyleOptionsPtrOutput)
}

type TemplateBoxPlotStyleOptionsOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsOutput() TemplateBoxPlotStyleOptionsOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotStyleOptionsOutput) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotStyleOptions) *TemplateBoxPlotStyleOptions {
		return &v
	}).(TemplateBoxPlotStyleOptionsPtrOutput)
}

func (o TemplateBoxPlotStyleOptionsOutput) FillStyle() TemplateBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotStyleOptions) *TemplateBoxPlotFillStyle { return v.FillStyle }).(TemplateBoxPlotFillStylePtrOutput)
}

type TemplateBoxPlotStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotStyleOptions)(nil)).Elem()
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) ToTemplateBoxPlotStyleOptionsPtrOutput() TemplateBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) ToTemplateBoxPlotStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateBoxPlotStyleOptionsPtrOutput {
	return o
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) Elem() TemplateBoxPlotStyleOptionsOutput {
	return o.ApplyT(func(v *TemplateBoxPlotStyleOptions) TemplateBoxPlotStyleOptions {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotStyleOptions
		return ret
	}).(TemplateBoxPlotStyleOptionsOutput)
}

func (o TemplateBoxPlotStyleOptionsPtrOutput) FillStyle() TemplateBoxPlotFillStylePtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotStyleOptions) *TemplateBoxPlotFillStyle {
		if v == nil {
			return nil
		}
		return v.FillStyle
	}).(TemplateBoxPlotFillStylePtrOutput)
}

type TemplateBoxPlotVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateBoxPlotChartConfiguration  `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateBoxPlotVisualInput is an input type that accepts TemplateBoxPlotVisualArgs and TemplateBoxPlotVisualOutput values.
// You can construct a concrete instance of `TemplateBoxPlotVisualInput` via:
//
//	TemplateBoxPlotVisualArgs{...}
type TemplateBoxPlotVisualInput interface {
	pulumi.Input

	ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput
	ToTemplateBoxPlotVisualOutputWithContext(context.Context) TemplateBoxPlotVisualOutput
}

type TemplateBoxPlotVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateBoxPlotChartConfigurationPtrInput  `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateBoxPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotVisual)(nil)).Elem()
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput {
	return i.ToTemplateBoxPlotVisualOutputWithContext(context.Background())
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualOutputWithContext(ctx context.Context) TemplateBoxPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualOutput)
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return i.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i TemplateBoxPlotVisualArgs) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualOutput).ToTemplateBoxPlotVisualPtrOutputWithContext(ctx)
}

// TemplateBoxPlotVisualPtrInput is an input type that accepts TemplateBoxPlotVisualArgs, TemplateBoxPlotVisualPtr and TemplateBoxPlotVisualPtrOutput values.
// You can construct a concrete instance of `TemplateBoxPlotVisualPtrInput` via:
//
//	        TemplateBoxPlotVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateBoxPlotVisualPtrInput interface {
	pulumi.Input

	ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput
	ToTemplateBoxPlotVisualPtrOutputWithContext(context.Context) TemplateBoxPlotVisualPtrOutput
}

type templateBoxPlotVisualPtrType TemplateBoxPlotVisualArgs

func TemplateBoxPlotVisualPtr(v *TemplateBoxPlotVisualArgs) TemplateBoxPlotVisualPtrInput {
	return (*templateBoxPlotVisualPtrType)(v)
}

func (*templateBoxPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotVisual)(nil)).Elem()
}

func (i *templateBoxPlotVisualPtrType) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return i.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (i *templateBoxPlotVisualPtrType) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateBoxPlotVisualPtrOutput)
}

type TemplateBoxPlotVisualOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateBoxPlotVisual)(nil)).Elem()
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualOutput() TemplateBoxPlotVisualOutput {
	return o
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualOutputWithContext(ctx context.Context) TemplateBoxPlotVisualOutput {
	return o
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return o.ToTemplateBoxPlotVisualPtrOutputWithContext(context.Background())
}

func (o TemplateBoxPlotVisualOutput) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateBoxPlotVisual) *TemplateBoxPlotVisual {
		return &v
	}).(TemplateBoxPlotVisualPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBoxPlotVisualOutput) ChartConfiguration() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateBoxPlotChartConfiguration { return v.ChartConfiguration }).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBoxPlotVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateBoxPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateBoxPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateBoxPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateBoxPlotVisual)(nil)).Elem()
}

func (o TemplateBoxPlotVisualPtrOutput) ToTemplateBoxPlotVisualPtrOutput() TemplateBoxPlotVisualPtrOutput {
	return o
}

func (o TemplateBoxPlotVisualPtrOutput) ToTemplateBoxPlotVisualPtrOutputWithContext(ctx context.Context) TemplateBoxPlotVisualPtrOutput {
	return o
}

func (o TemplateBoxPlotVisualPtrOutput) Elem() TemplateBoxPlotVisualOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) TemplateBoxPlotVisual {
		if v != nil {
			return *v
		}
		var ret TemplateBoxPlotVisual
		return ret
	}).(TemplateBoxPlotVisualOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) ChartConfiguration() TemplateBoxPlotChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateBoxPlotChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateBoxPlotChartConfigurationPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateBoxPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateBoxPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateCalculatedField struct {
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
	Expression        string `pulumi:"expression"`
	Name              string `pulumi:"name"`
}

// TemplateCalculatedFieldInput is an input type that accepts TemplateCalculatedFieldArgs and TemplateCalculatedFieldOutput values.
// You can construct a concrete instance of `TemplateCalculatedFieldInput` via:
//
//	TemplateCalculatedFieldArgs{...}
type TemplateCalculatedFieldInput interface {
	pulumi.Input

	ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput
	ToTemplateCalculatedFieldOutputWithContext(context.Context) TemplateCalculatedFieldOutput
}

type TemplateCalculatedFieldArgs struct {
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput `pulumi:"expression"`
	Name              pulumi.StringInput `pulumi:"name"`
}

func (TemplateCalculatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedField)(nil)).Elem()
}

func (i TemplateCalculatedFieldArgs) ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput {
	return i.ToTemplateCalculatedFieldOutputWithContext(context.Background())
}

func (i TemplateCalculatedFieldArgs) ToTemplateCalculatedFieldOutputWithContext(ctx context.Context) TemplateCalculatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedFieldOutput)
}

// TemplateCalculatedFieldArrayInput is an input type that accepts TemplateCalculatedFieldArray and TemplateCalculatedFieldArrayOutput values.
// You can construct a concrete instance of `TemplateCalculatedFieldArrayInput` via:
//
//	TemplateCalculatedFieldArray{ TemplateCalculatedFieldArgs{...} }
type TemplateCalculatedFieldArrayInput interface {
	pulumi.Input

	ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput
	ToTemplateCalculatedFieldArrayOutputWithContext(context.Context) TemplateCalculatedFieldArrayOutput
}

type TemplateCalculatedFieldArray []TemplateCalculatedFieldInput

func (TemplateCalculatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCalculatedField)(nil)).Elem()
}

func (i TemplateCalculatedFieldArray) ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput {
	return i.ToTemplateCalculatedFieldArrayOutputWithContext(context.Background())
}

func (i TemplateCalculatedFieldArray) ToTemplateCalculatedFieldArrayOutputWithContext(ctx context.Context) TemplateCalculatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedFieldArrayOutput)
}

type TemplateCalculatedFieldOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedField)(nil)).Elem()
}

func (o TemplateCalculatedFieldOutput) ToTemplateCalculatedFieldOutput() TemplateCalculatedFieldOutput {
	return o
}

func (o TemplateCalculatedFieldOutput) ToTemplateCalculatedFieldOutputWithContext(ctx context.Context) TemplateCalculatedFieldOutput {
	return o
}

func (o TemplateCalculatedFieldOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateCalculatedFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateCalculatedFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedField) string { return v.Name }).(pulumi.StringOutput)
}

type TemplateCalculatedFieldArrayOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCalculatedField)(nil)).Elem()
}

func (o TemplateCalculatedFieldArrayOutput) ToTemplateCalculatedFieldArrayOutput() TemplateCalculatedFieldArrayOutput {
	return o
}

func (o TemplateCalculatedFieldArrayOutput) ToTemplateCalculatedFieldArrayOutputWithContext(ctx context.Context) TemplateCalculatedFieldArrayOutput {
	return o
}

func (o TemplateCalculatedFieldArrayOutput) Index(i pulumi.IntInput) TemplateCalculatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateCalculatedField {
		return vs[0].([]TemplateCalculatedField)[vs[1].(int)]
	}).(TemplateCalculatedFieldOutput)
}

type TemplateCalculatedMeasureField struct {
	Expression string `pulumi:"expression"`
	FieldId    string `pulumi:"fieldId"`
}

// TemplateCalculatedMeasureFieldInput is an input type that accepts TemplateCalculatedMeasureFieldArgs and TemplateCalculatedMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateCalculatedMeasureFieldInput` via:
//
//	TemplateCalculatedMeasureFieldArgs{...}
type TemplateCalculatedMeasureFieldInput interface {
	pulumi.Input

	ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput
	ToTemplateCalculatedMeasureFieldOutputWithContext(context.Context) TemplateCalculatedMeasureFieldOutput
}

type TemplateCalculatedMeasureFieldArgs struct {
	Expression pulumi.StringInput `pulumi:"expression"`
	FieldId    pulumi.StringInput `pulumi:"fieldId"`
}

func (TemplateCalculatedMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedMeasureField)(nil)).Elem()
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput {
	return i.ToTemplateCalculatedMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldOutput)
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return i.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCalculatedMeasureFieldArgs) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldOutput).ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateCalculatedMeasureFieldPtrInput is an input type that accepts TemplateCalculatedMeasureFieldArgs, TemplateCalculatedMeasureFieldPtr and TemplateCalculatedMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCalculatedMeasureFieldPtrInput` via:
//
//	        TemplateCalculatedMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCalculatedMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput
	ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Context) TemplateCalculatedMeasureFieldPtrOutput
}

type templateCalculatedMeasureFieldPtrType TemplateCalculatedMeasureFieldArgs

func TemplateCalculatedMeasureFieldPtr(v *TemplateCalculatedMeasureFieldArgs) TemplateCalculatedMeasureFieldPtrInput {
	return (*templateCalculatedMeasureFieldPtrType)(v)
}

func (*templateCalculatedMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCalculatedMeasureField)(nil)).Elem()
}

func (i *templateCalculatedMeasureFieldPtrType) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return i.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateCalculatedMeasureFieldPtrType) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCalculatedMeasureFieldPtrOutput)
}

type TemplateCalculatedMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCalculatedMeasureField)(nil)).Elem()
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldOutput() TemplateCalculatedMeasureFieldOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return o.ToTemplateCalculatedMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCalculatedMeasureFieldOutput) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCalculatedMeasureField) *TemplateCalculatedMeasureField {
		return &v
	}).(TemplateCalculatedMeasureFieldPtrOutput)
}

func (o TemplateCalculatedMeasureFieldOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedMeasureField) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateCalculatedMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCalculatedMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

type TemplateCalculatedMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCalculatedMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCalculatedMeasureField)(nil)).Elem()
}

func (o TemplateCalculatedMeasureFieldPtrOutput) ToTemplateCalculatedMeasureFieldPtrOutput() TemplateCalculatedMeasureFieldPtrOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldPtrOutput) ToTemplateCalculatedMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCalculatedMeasureFieldPtrOutput {
	return o
}

func (o TemplateCalculatedMeasureFieldPtrOutput) Elem() TemplateCalculatedMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) TemplateCalculatedMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateCalculatedMeasureField
		return ret
	}).(TemplateCalculatedMeasureFieldOutput)
}

func (o TemplateCalculatedMeasureFieldPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCalculatedMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCalculatedMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type TemplateCascadingControlConfiguration struct {
	SourceControls []TemplateCascadingControlSource `pulumi:"sourceControls"`
}

// TemplateCascadingControlConfigurationInput is an input type that accepts TemplateCascadingControlConfigurationArgs and TemplateCascadingControlConfigurationOutput values.
// You can construct a concrete instance of `TemplateCascadingControlConfigurationInput` via:
//
//	TemplateCascadingControlConfigurationArgs{...}
type TemplateCascadingControlConfigurationInput interface {
	pulumi.Input

	ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput
	ToTemplateCascadingControlConfigurationOutputWithContext(context.Context) TemplateCascadingControlConfigurationOutput
}

type TemplateCascadingControlConfigurationArgs struct {
	SourceControls TemplateCascadingControlSourceArrayInput `pulumi:"sourceControls"`
}

func (TemplateCascadingControlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput {
	return i.ToTemplateCascadingControlConfigurationOutputWithContext(context.Background())
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationOutput)
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return i.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCascadingControlConfigurationArgs) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationOutput).ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx)
}

// TemplateCascadingControlConfigurationPtrInput is an input type that accepts TemplateCascadingControlConfigurationArgs, TemplateCascadingControlConfigurationPtr and TemplateCascadingControlConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCascadingControlConfigurationPtrInput` via:
//
//	        TemplateCascadingControlConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCascadingControlConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput
	ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Context) TemplateCascadingControlConfigurationPtrOutput
}

type templateCascadingControlConfigurationPtrType TemplateCascadingControlConfigurationArgs

func TemplateCascadingControlConfigurationPtr(v *TemplateCascadingControlConfigurationArgs) TemplateCascadingControlConfigurationPtrInput {
	return (*templateCascadingControlConfigurationPtrType)(v)
}

func (*templateCascadingControlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (i *templateCascadingControlConfigurationPtrType) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return i.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCascadingControlConfigurationPtrType) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlConfigurationPtrOutput)
}

type TemplateCascadingControlConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationOutput() TemplateCascadingControlConfigurationOutput {
	return o
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationOutput {
	return o
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return o.ToTemplateCascadingControlConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCascadingControlConfigurationOutput) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCascadingControlConfiguration) *TemplateCascadingControlConfiguration {
		return &v
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateCascadingControlConfigurationOutput) SourceControls() TemplateCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v TemplateCascadingControlConfiguration) []TemplateCascadingControlSource {
		return v.SourceControls
	}).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCascadingControlConfiguration)(nil)).Elem()
}

func (o TemplateCascadingControlConfigurationPtrOutput) ToTemplateCascadingControlConfigurationPtrOutput() TemplateCascadingControlConfigurationPtrOutput {
	return o
}

func (o TemplateCascadingControlConfigurationPtrOutput) ToTemplateCascadingControlConfigurationPtrOutputWithContext(ctx context.Context) TemplateCascadingControlConfigurationPtrOutput {
	return o
}

func (o TemplateCascadingControlConfigurationPtrOutput) Elem() TemplateCascadingControlConfigurationOutput {
	return o.ApplyT(func(v *TemplateCascadingControlConfiguration) TemplateCascadingControlConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCascadingControlConfiguration
		return ret
	}).(TemplateCascadingControlConfigurationOutput)
}

func (o TemplateCascadingControlConfigurationPtrOutput) SourceControls() TemplateCascadingControlSourceArrayOutput {
	return o.ApplyT(func(v *TemplateCascadingControlConfiguration) []TemplateCascadingControlSource {
		if v == nil {
			return nil
		}
		return v.SourceControls
	}).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlSource struct {
	ColumnToMatch        *TemplateColumnIdentifier `pulumi:"columnToMatch"`
	SourceSheetControlId *string                   `pulumi:"sourceSheetControlId"`
}

// TemplateCascadingControlSourceInput is an input type that accepts TemplateCascadingControlSourceArgs and TemplateCascadingControlSourceOutput values.
// You can construct a concrete instance of `TemplateCascadingControlSourceInput` via:
//
//	TemplateCascadingControlSourceArgs{...}
type TemplateCascadingControlSourceInput interface {
	pulumi.Input

	ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput
	ToTemplateCascadingControlSourceOutputWithContext(context.Context) TemplateCascadingControlSourceOutput
}

type TemplateCascadingControlSourceArgs struct {
	ColumnToMatch        TemplateColumnIdentifierPtrInput `pulumi:"columnToMatch"`
	SourceSheetControlId pulumi.StringPtrInput            `pulumi:"sourceSheetControlId"`
}

func (TemplateCascadingControlSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlSource)(nil)).Elem()
}

func (i TemplateCascadingControlSourceArgs) ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput {
	return i.ToTemplateCascadingControlSourceOutputWithContext(context.Background())
}

func (i TemplateCascadingControlSourceArgs) ToTemplateCascadingControlSourceOutputWithContext(ctx context.Context) TemplateCascadingControlSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlSourceOutput)
}

// TemplateCascadingControlSourceArrayInput is an input type that accepts TemplateCascadingControlSourceArray and TemplateCascadingControlSourceArrayOutput values.
// You can construct a concrete instance of `TemplateCascadingControlSourceArrayInput` via:
//
//	TemplateCascadingControlSourceArray{ TemplateCascadingControlSourceArgs{...} }
type TemplateCascadingControlSourceArrayInput interface {
	pulumi.Input

	ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput
	ToTemplateCascadingControlSourceArrayOutputWithContext(context.Context) TemplateCascadingControlSourceArrayOutput
}

type TemplateCascadingControlSourceArray []TemplateCascadingControlSourceInput

func (TemplateCascadingControlSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCascadingControlSource)(nil)).Elem()
}

func (i TemplateCascadingControlSourceArray) ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput {
	return i.ToTemplateCascadingControlSourceArrayOutputWithContext(context.Background())
}

func (i TemplateCascadingControlSourceArray) ToTemplateCascadingControlSourceArrayOutputWithContext(ctx context.Context) TemplateCascadingControlSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCascadingControlSourceArrayOutput)
}

type TemplateCascadingControlSourceOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCascadingControlSource)(nil)).Elem()
}

func (o TemplateCascadingControlSourceOutput) ToTemplateCascadingControlSourceOutput() TemplateCascadingControlSourceOutput {
	return o
}

func (o TemplateCascadingControlSourceOutput) ToTemplateCascadingControlSourceOutputWithContext(ctx context.Context) TemplateCascadingControlSourceOutput {
	return o
}

func (o TemplateCascadingControlSourceOutput) ColumnToMatch() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateCascadingControlSource) *TemplateColumnIdentifier { return v.ColumnToMatch }).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCascadingControlSourceOutput) SourceSheetControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCascadingControlSource) *string { return v.SourceSheetControlId }).(pulumi.StringPtrOutput)
}

type TemplateCascadingControlSourceArrayOutput struct{ *pulumi.OutputState }

func (TemplateCascadingControlSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCascadingControlSource)(nil)).Elem()
}

func (o TemplateCascadingControlSourceArrayOutput) ToTemplateCascadingControlSourceArrayOutput() TemplateCascadingControlSourceArrayOutput {
	return o
}

func (o TemplateCascadingControlSourceArrayOutput) ToTemplateCascadingControlSourceArrayOutputWithContext(ctx context.Context) TemplateCascadingControlSourceArrayOutput {
	return o
}

func (o TemplateCascadingControlSourceArrayOutput) Index(i pulumi.IntInput) TemplateCascadingControlSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateCascadingControlSource {
		return vs[0].([]TemplateCascadingControlSource)[vs[1].(int)]
	}).(TemplateCascadingControlSourceOutput)
}

type TemplateCategoricalDimensionField struct {
	Column              TemplateColumnIdentifier           `pulumi:"column"`
	FieldId             string                             `pulumi:"fieldId"`
	FormatConfiguration *TemplateStringFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                            `pulumi:"hierarchyId"`
}

// TemplateCategoricalDimensionFieldInput is an input type that accepts TemplateCategoricalDimensionFieldArgs and TemplateCategoricalDimensionFieldOutput values.
// You can construct a concrete instance of `TemplateCategoricalDimensionFieldInput` via:
//
//	TemplateCategoricalDimensionFieldArgs{...}
type TemplateCategoricalDimensionFieldInput interface {
	pulumi.Input

	ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput
	ToTemplateCategoricalDimensionFieldOutputWithContext(context.Context) TemplateCategoricalDimensionFieldOutput
}

type TemplateCategoricalDimensionFieldArgs struct {
	Column              TemplateColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                        `pulumi:"fieldId"`
	FormatConfiguration TemplateStringFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                     `pulumi:"hierarchyId"`
}

func (TemplateCategoricalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalDimensionField)(nil)).Elem()
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput {
	return i.ToTemplateCategoricalDimensionFieldOutputWithContext(context.Background())
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldOutput)
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return i.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCategoricalDimensionFieldArgs) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldOutput).ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx)
}

// TemplateCategoricalDimensionFieldPtrInput is an input type that accepts TemplateCategoricalDimensionFieldArgs, TemplateCategoricalDimensionFieldPtr and TemplateCategoricalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCategoricalDimensionFieldPtrInput` via:
//
//	        TemplateCategoricalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoricalDimensionFieldPtrInput interface {
	pulumi.Input

	ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput
	ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Context) TemplateCategoricalDimensionFieldPtrOutput
}

type templateCategoricalDimensionFieldPtrType TemplateCategoricalDimensionFieldArgs

func TemplateCategoricalDimensionFieldPtr(v *TemplateCategoricalDimensionFieldArgs) TemplateCategoricalDimensionFieldPtrInput {
	return (*templateCategoricalDimensionFieldPtrType)(v)
}

func (*templateCategoricalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalDimensionField)(nil)).Elem()
}

func (i *templateCategoricalDimensionFieldPtrType) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return i.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *templateCategoricalDimensionFieldPtrType) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalDimensionFieldPtrOutput)
}

type TemplateCategoricalDimensionFieldOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalDimensionField)(nil)).Elem()
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldOutput() TemplateCategoricalDimensionFieldOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return o.ToTemplateCategoricalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalDimensionFieldOutput) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoricalDimensionField) *TemplateCategoricalDimensionField {
		return &v
	}).(TemplateCategoricalDimensionFieldPtrOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) *TemplateStringFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

func (o TemplateCategoricalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type TemplateCategoricalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalDimensionField)(nil)).Elem()
}

func (o TemplateCategoricalDimensionFieldPtrOutput) ToTemplateCategoricalDimensionFieldPtrOutput() TemplateCategoricalDimensionFieldPtrOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldPtrOutput) ToTemplateCategoricalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalDimensionFieldPtrOutput {
	return o
}

func (o TemplateCategoricalDimensionFieldPtrOutput) Elem() TemplateCategoricalDimensionFieldOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) TemplateCategoricalDimensionField {
		if v != nil {
			return *v
		}
		var ret TemplateCategoricalDimensionField
		return ret
	}).(TemplateCategoricalDimensionFieldOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *TemplateStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

func (o TemplateCategoricalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoricalMeasureField struct {
	AggregationFunction *TemplateCategoricalAggregationFunction `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier                `pulumi:"column"`
	FieldId             string                                  `pulumi:"fieldId"`
	FormatConfiguration *TemplateStringFormatConfiguration      `pulumi:"formatConfiguration"`
}

// TemplateCategoricalMeasureFieldInput is an input type that accepts TemplateCategoricalMeasureFieldArgs and TemplateCategoricalMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateCategoricalMeasureFieldInput` via:
//
//	TemplateCategoricalMeasureFieldArgs{...}
type TemplateCategoricalMeasureFieldInput interface {
	pulumi.Input

	ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput
	ToTemplateCategoricalMeasureFieldOutputWithContext(context.Context) TemplateCategoricalMeasureFieldOutput
}

type TemplateCategoricalMeasureFieldArgs struct {
	AggregationFunction TemplateCategoricalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput                  `pulumi:"column"`
	FieldId             pulumi.StringInput                             `pulumi:"fieldId"`
	FormatConfiguration TemplateStringFormatConfigurationPtrInput      `pulumi:"formatConfiguration"`
}

func (TemplateCategoricalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalMeasureField)(nil)).Elem()
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput {
	return i.ToTemplateCategoricalMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldOutput)
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return i.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateCategoricalMeasureFieldArgs) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldOutput).ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateCategoricalMeasureFieldPtrInput is an input type that accepts TemplateCategoricalMeasureFieldArgs, TemplateCategoricalMeasureFieldPtr and TemplateCategoricalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateCategoricalMeasureFieldPtrInput` via:
//
//	        TemplateCategoricalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoricalMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput
	ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Context) TemplateCategoricalMeasureFieldPtrOutput
}

type templateCategoricalMeasureFieldPtrType TemplateCategoricalMeasureFieldArgs

func TemplateCategoricalMeasureFieldPtr(v *TemplateCategoricalMeasureFieldArgs) TemplateCategoricalMeasureFieldPtrInput {
	return (*templateCategoricalMeasureFieldPtrType)(v)
}

func (*templateCategoricalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalMeasureField)(nil)).Elem()
}

func (i *templateCategoricalMeasureFieldPtrType) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return i.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateCategoricalMeasureFieldPtrType) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoricalMeasureFieldPtrOutput)
}

type TemplateCategoricalMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoricalMeasureField)(nil)).Elem()
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldOutput() TemplateCategoricalMeasureFieldOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return o.ToTemplateCategoricalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateCategoricalMeasureFieldOutput) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoricalMeasureField) *TemplateCategoricalMeasureField {
		return &v
	}).(TemplateCategoricalMeasureFieldPtrOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) AggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) *TemplateCategoricalAggregationFunction {
		return v.AggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateCategoricalMeasureFieldOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoricalMeasureField) *TemplateStringFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateCategoricalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoricalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoricalMeasureField)(nil)).Elem()
}

func (o TemplateCategoricalMeasureFieldPtrOutput) ToTemplateCategoricalMeasureFieldPtrOutput() TemplateCategoricalMeasureFieldPtrOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldPtrOutput) ToTemplateCategoricalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateCategoricalMeasureFieldPtrOutput {
	return o
}

func (o TemplateCategoricalMeasureFieldPtrOutput) Elem() TemplateCategoricalMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) TemplateCategoricalMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateCategoricalMeasureField
		return ret
	}).(TemplateCategoricalMeasureFieldOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) AggregationFunction() TemplateCategoricalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateCategoricalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateCategoricalAggregationFunctionPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCategoricalMeasureFieldPtrOutput) FormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoricalMeasureField) *TemplateStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateCategoryDrillDownFilter struct {
	CategoryValues []string                 `pulumi:"categoryValues"`
	Column         TemplateColumnIdentifier `pulumi:"column"`
}

// TemplateCategoryDrillDownFilterInput is an input type that accepts TemplateCategoryDrillDownFilterArgs and TemplateCategoryDrillDownFilterOutput values.
// You can construct a concrete instance of `TemplateCategoryDrillDownFilterInput` via:
//
//	TemplateCategoryDrillDownFilterArgs{...}
type TemplateCategoryDrillDownFilterInput interface {
	pulumi.Input

	ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput
	ToTemplateCategoryDrillDownFilterOutputWithContext(context.Context) TemplateCategoryDrillDownFilterOutput
}

type TemplateCategoryDrillDownFilterArgs struct {
	CategoryValues pulumi.StringArrayInput       `pulumi:"categoryValues"`
	Column         TemplateColumnIdentifierInput `pulumi:"column"`
}

func (TemplateCategoryDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput {
	return i.ToTemplateCategoryDrillDownFilterOutputWithContext(context.Background())
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterOutput)
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return i.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i TemplateCategoryDrillDownFilterArgs) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterOutput).ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx)
}

// TemplateCategoryDrillDownFilterPtrInput is an input type that accepts TemplateCategoryDrillDownFilterArgs, TemplateCategoryDrillDownFilterPtr and TemplateCategoryDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `TemplateCategoryDrillDownFilterPtrInput` via:
//
//	        TemplateCategoryDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoryDrillDownFilterPtrInput interface {
	pulumi.Input

	ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput
	ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Context) TemplateCategoryDrillDownFilterPtrOutput
}

type templateCategoryDrillDownFilterPtrType TemplateCategoryDrillDownFilterArgs

func TemplateCategoryDrillDownFilterPtr(v *TemplateCategoryDrillDownFilterArgs) TemplateCategoryDrillDownFilterPtrInput {
	return (*templateCategoryDrillDownFilterPtrType)(v)
}

func (*templateCategoryDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (i *templateCategoryDrillDownFilterPtrType) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return i.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *templateCategoryDrillDownFilterPtrType) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryDrillDownFilterPtrOutput)
}

type TemplateCategoryDrillDownFilterOutput struct{ *pulumi.OutputState }

func (TemplateCategoryDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterOutput() TemplateCategoryDrillDownFilterOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return o.ToTemplateCategoryDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryDrillDownFilterOutput) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryDrillDownFilter) *TemplateCategoryDrillDownFilter {
		return &v
	}).(TemplateCategoryDrillDownFilterPtrOutput)
}

func (o TemplateCategoryDrillDownFilterOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateCategoryDrillDownFilter) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o TemplateCategoryDrillDownFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoryDrillDownFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

type TemplateCategoryDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryDrillDownFilter)(nil)).Elem()
}

func (o TemplateCategoryDrillDownFilterPtrOutput) ToTemplateCategoryDrillDownFilterPtrOutput() TemplateCategoryDrillDownFilterPtrOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterPtrOutput) ToTemplateCategoryDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryDrillDownFilterPtrOutput {
	return o
}

func (o TemplateCategoryDrillDownFilterPtrOutput) Elem() TemplateCategoryDrillDownFilterOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) TemplateCategoryDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryDrillDownFilter
		return ret
	}).(TemplateCategoryDrillDownFilterOutput)
}

func (o TemplateCategoryDrillDownFilterPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o TemplateCategoryDrillDownFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryDrillDownFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

type TemplateCategoryFilter struct {
	Column        TemplateColumnIdentifier            `pulumi:"column"`
	Configuration TemplateCategoryFilterConfiguration `pulumi:"configuration"`
	FilterId      string                              `pulumi:"filterId"`
}

// TemplateCategoryFilterInput is an input type that accepts TemplateCategoryFilterArgs and TemplateCategoryFilterOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterInput` via:
//
//	TemplateCategoryFilterArgs{...}
type TemplateCategoryFilterInput interface {
	pulumi.Input

	ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput
	ToTemplateCategoryFilterOutputWithContext(context.Context) TemplateCategoryFilterOutput
}

type TemplateCategoryFilterArgs struct {
	Column        TemplateColumnIdentifierInput            `pulumi:"column"`
	Configuration TemplateCategoryFilterConfigurationInput `pulumi:"configuration"`
	FilterId      pulumi.StringInput                       `pulumi:"filterId"`
}

func (TemplateCategoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilter)(nil)).Elem()
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput {
	return i.ToTemplateCategoryFilterOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterOutputWithContext(ctx context.Context) TemplateCategoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterOutput)
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return i.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterArgs) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterOutput).ToTemplateCategoryFilterPtrOutputWithContext(ctx)
}

// TemplateCategoryFilterPtrInput is an input type that accepts TemplateCategoryFilterArgs, TemplateCategoryFilterPtr and TemplateCategoryFilterPtrOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterPtrInput` via:
//
//	        TemplateCategoryFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoryFilterPtrInput interface {
	pulumi.Input

	ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput
	ToTemplateCategoryFilterPtrOutputWithContext(context.Context) TemplateCategoryFilterPtrOutput
}

type templateCategoryFilterPtrType TemplateCategoryFilterArgs

func TemplateCategoryFilterPtr(v *TemplateCategoryFilterArgs) TemplateCategoryFilterPtrInput {
	return (*templateCategoryFilterPtrType)(v)
}

func (*templateCategoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilter)(nil)).Elem()
}

func (i *templateCategoryFilterPtrType) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return i.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (i *templateCategoryFilterPtrType) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterPtrOutput)
}

type TemplateCategoryFilterOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilter)(nil)).Elem()
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterOutput() TemplateCategoryFilterOutput {
	return o
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterOutputWithContext(ctx context.Context) TemplateCategoryFilterOutput {
	return o
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return o.ToTemplateCategoryFilterPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterOutput) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryFilter) *TemplateCategoryFilter {
		return &v
	}).(TemplateCategoryFilterPtrOutput)
}

func (o TemplateCategoryFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateCategoryFilterOutput) Configuration() TemplateCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) TemplateCategoryFilterConfiguration { return v.Configuration }).(TemplateCategoryFilterConfigurationOutput)
}

func (o TemplateCategoryFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCategoryFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

type TemplateCategoryFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilter)(nil)).Elem()
}

func (o TemplateCategoryFilterPtrOutput) ToTemplateCategoryFilterPtrOutput() TemplateCategoryFilterPtrOutput {
	return o
}

func (o TemplateCategoryFilterPtrOutput) ToTemplateCategoryFilterPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterPtrOutput {
	return o
}

func (o TemplateCategoryFilterPtrOutput) Elem() TemplateCategoryFilterOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) TemplateCategoryFilter {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryFilter
		return ret
	}).(TemplateCategoryFilterOutput)
}

func (o TemplateCategoryFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateCategoryFilterPtrOutput) Configuration() TemplateCategoryFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *TemplateCategoryFilterConfiguration {
		if v == nil {
			return nil
		}
		return &v.Configuration
	}).(TemplateCategoryFilterConfigurationPtrOutput)
}

func (o TemplateCategoryFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

type TemplateCategoryFilterConfiguration struct {
	CustomFilterConfiguration     *TemplateCustomFilterConfiguration     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration *TemplateCustomFilterListConfiguration `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       *TemplateFilterListConfiguration       `pulumi:"filterListConfiguration"`
}

// TemplateCategoryFilterConfigurationInput is an input type that accepts TemplateCategoryFilterConfigurationArgs and TemplateCategoryFilterConfigurationOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterConfigurationInput` via:
//
//	TemplateCategoryFilterConfigurationArgs{...}
type TemplateCategoryFilterConfigurationInput interface {
	pulumi.Input

	ToTemplateCategoryFilterConfigurationOutput() TemplateCategoryFilterConfigurationOutput
	ToTemplateCategoryFilterConfigurationOutputWithContext(context.Context) TemplateCategoryFilterConfigurationOutput
}

type TemplateCategoryFilterConfigurationArgs struct {
	CustomFilterConfiguration     TemplateCustomFilterConfigurationPtrInput     `pulumi:"customFilterConfiguration"`
	CustomFilterListConfiguration TemplateCustomFilterListConfigurationPtrInput `pulumi:"customFilterListConfiguration"`
	FilterListConfiguration       TemplateFilterListConfigurationPtrInput       `pulumi:"filterListConfiguration"`
}

func (TemplateCategoryFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterConfiguration)(nil)).Elem()
}

func (i TemplateCategoryFilterConfigurationArgs) ToTemplateCategoryFilterConfigurationOutput() TemplateCategoryFilterConfigurationOutput {
	return i.ToTemplateCategoryFilterConfigurationOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterConfigurationArgs) ToTemplateCategoryFilterConfigurationOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterConfigurationOutput)
}

func (i TemplateCategoryFilterConfigurationArgs) ToTemplateCategoryFilterConfigurationPtrOutput() TemplateCategoryFilterConfigurationPtrOutput {
	return i.ToTemplateCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCategoryFilterConfigurationArgs) ToTemplateCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterConfigurationOutput).ToTemplateCategoryFilterConfigurationPtrOutputWithContext(ctx)
}

// TemplateCategoryFilterConfigurationPtrInput is an input type that accepts TemplateCategoryFilterConfigurationArgs, TemplateCategoryFilterConfigurationPtr and TemplateCategoryFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCategoryFilterConfigurationPtrInput` via:
//
//	        TemplateCategoryFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCategoryFilterConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCategoryFilterConfigurationPtrOutput() TemplateCategoryFilterConfigurationPtrOutput
	ToTemplateCategoryFilterConfigurationPtrOutputWithContext(context.Context) TemplateCategoryFilterConfigurationPtrOutput
}

type templateCategoryFilterConfigurationPtrType TemplateCategoryFilterConfigurationArgs

func TemplateCategoryFilterConfigurationPtr(v *TemplateCategoryFilterConfigurationArgs) TemplateCategoryFilterConfigurationPtrInput {
	return (*templateCategoryFilterConfigurationPtrType)(v)
}

func (*templateCategoryFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilterConfiguration)(nil)).Elem()
}

func (i *templateCategoryFilterConfigurationPtrType) ToTemplateCategoryFilterConfigurationPtrOutput() TemplateCategoryFilterConfigurationPtrOutput {
	return i.ToTemplateCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCategoryFilterConfigurationPtrType) ToTemplateCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCategoryFilterConfigurationPtrOutput)
}

type TemplateCategoryFilterConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCategoryFilterConfiguration)(nil)).Elem()
}

func (o TemplateCategoryFilterConfigurationOutput) ToTemplateCategoryFilterConfigurationOutput() TemplateCategoryFilterConfigurationOutput {
	return o
}

func (o TemplateCategoryFilterConfigurationOutput) ToTemplateCategoryFilterConfigurationOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationOutput {
	return o
}

func (o TemplateCategoryFilterConfigurationOutput) ToTemplateCategoryFilterConfigurationPtrOutput() TemplateCategoryFilterConfigurationPtrOutput {
	return o.ToTemplateCategoryFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCategoryFilterConfigurationOutput) ToTemplateCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCategoryFilterConfiguration) *TemplateCategoryFilterConfiguration {
		return &v
	}).(TemplateCategoryFilterConfigurationPtrOutput)
}

func (o TemplateCategoryFilterConfigurationOutput) CustomFilterConfiguration() TemplateCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoryFilterConfiguration) *TemplateCustomFilterConfiguration {
		return v.CustomFilterConfiguration
	}).(TemplateCustomFilterConfigurationPtrOutput)
}

func (o TemplateCategoryFilterConfigurationOutput) CustomFilterListConfiguration() TemplateCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoryFilterConfiguration) *TemplateCustomFilterListConfiguration {
		return v.CustomFilterListConfiguration
	}).(TemplateCustomFilterListConfigurationPtrOutput)
}

func (o TemplateCategoryFilterConfigurationOutput) FilterListConfiguration() TemplateFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCategoryFilterConfiguration) *TemplateFilterListConfiguration {
		return v.FilterListConfiguration
	}).(TemplateFilterListConfigurationPtrOutput)
}

type TemplateCategoryFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCategoryFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCategoryFilterConfiguration)(nil)).Elem()
}

func (o TemplateCategoryFilterConfigurationPtrOutput) ToTemplateCategoryFilterConfigurationPtrOutput() TemplateCategoryFilterConfigurationPtrOutput {
	return o
}

func (o TemplateCategoryFilterConfigurationPtrOutput) ToTemplateCategoryFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCategoryFilterConfigurationPtrOutput {
	return o
}

func (o TemplateCategoryFilterConfigurationPtrOutput) Elem() TemplateCategoryFilterConfigurationOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterConfiguration) TemplateCategoryFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCategoryFilterConfiguration
		return ret
	}).(TemplateCategoryFilterConfigurationOutput)
}

func (o TemplateCategoryFilterConfigurationPtrOutput) CustomFilterConfiguration() TemplateCustomFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterConfiguration) *TemplateCustomFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterConfiguration
	}).(TemplateCustomFilterConfigurationPtrOutput)
}

func (o TemplateCategoryFilterConfigurationPtrOutput) CustomFilterListConfiguration() TemplateCustomFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterConfiguration) *TemplateCustomFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomFilterListConfiguration
	}).(TemplateCustomFilterListConfigurationPtrOutput)
}

func (o TemplateCategoryFilterConfigurationPtrOutput) FilterListConfiguration() TemplateFilterListConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCategoryFilterConfiguration) *TemplateFilterListConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterListConfiguration
	}).(TemplateFilterListConfigurationPtrOutput)
}

type TemplateChartAxisLabelOptions struct {
	AxisLabelOptions   []TemplateAxisLabelOptions `pulumi:"axisLabelOptions"`
	SortIconVisibility *TemplateVisibility        `pulumi:"sortIconVisibility"`
	Visibility         *TemplateVisibility        `pulumi:"visibility"`
}

// TemplateChartAxisLabelOptionsInput is an input type that accepts TemplateChartAxisLabelOptionsArgs and TemplateChartAxisLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateChartAxisLabelOptionsInput` via:
//
//	TemplateChartAxisLabelOptionsArgs{...}
type TemplateChartAxisLabelOptionsInput interface {
	pulumi.Input

	ToTemplateChartAxisLabelOptionsOutput() TemplateChartAxisLabelOptionsOutput
	ToTemplateChartAxisLabelOptionsOutputWithContext(context.Context) TemplateChartAxisLabelOptionsOutput
}

type TemplateChartAxisLabelOptionsArgs struct {
	AxisLabelOptions   TemplateAxisLabelOptionsArrayInput `pulumi:"axisLabelOptions"`
	SortIconVisibility TemplateVisibilityPtrInput         `pulumi:"sortIconVisibility"`
	Visibility         TemplateVisibilityPtrInput         `pulumi:"visibility"`
}

func (TemplateChartAxisLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateChartAxisLabelOptions)(nil)).Elem()
}

func (i TemplateChartAxisLabelOptionsArgs) ToTemplateChartAxisLabelOptionsOutput() TemplateChartAxisLabelOptionsOutput {
	return i.ToTemplateChartAxisLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateChartAxisLabelOptionsArgs) ToTemplateChartAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateChartAxisLabelOptionsOutput)
}

func (i TemplateChartAxisLabelOptionsArgs) ToTemplateChartAxisLabelOptionsPtrOutput() TemplateChartAxisLabelOptionsPtrOutput {
	return i.ToTemplateChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateChartAxisLabelOptionsArgs) ToTemplateChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateChartAxisLabelOptionsOutput).ToTemplateChartAxisLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateChartAxisLabelOptionsPtrInput is an input type that accepts TemplateChartAxisLabelOptionsArgs, TemplateChartAxisLabelOptionsPtr and TemplateChartAxisLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateChartAxisLabelOptionsPtrInput` via:
//
//	        TemplateChartAxisLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateChartAxisLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateChartAxisLabelOptionsPtrOutput() TemplateChartAxisLabelOptionsPtrOutput
	ToTemplateChartAxisLabelOptionsPtrOutputWithContext(context.Context) TemplateChartAxisLabelOptionsPtrOutput
}

type templateChartAxisLabelOptionsPtrType TemplateChartAxisLabelOptionsArgs

func TemplateChartAxisLabelOptionsPtr(v *TemplateChartAxisLabelOptionsArgs) TemplateChartAxisLabelOptionsPtrInput {
	return (*templateChartAxisLabelOptionsPtrType)(v)
}

func (*templateChartAxisLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateChartAxisLabelOptions)(nil)).Elem()
}

func (i *templateChartAxisLabelOptionsPtrType) ToTemplateChartAxisLabelOptionsPtrOutput() TemplateChartAxisLabelOptionsPtrOutput {
	return i.ToTemplateChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateChartAxisLabelOptionsPtrType) ToTemplateChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateChartAxisLabelOptionsPtrOutput)
}

type TemplateChartAxisLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateChartAxisLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateChartAxisLabelOptions)(nil)).Elem()
}

func (o TemplateChartAxisLabelOptionsOutput) ToTemplateChartAxisLabelOptionsOutput() TemplateChartAxisLabelOptionsOutput {
	return o
}

func (o TemplateChartAxisLabelOptionsOutput) ToTemplateChartAxisLabelOptionsOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsOutput {
	return o
}

func (o TemplateChartAxisLabelOptionsOutput) ToTemplateChartAxisLabelOptionsPtrOutput() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ToTemplateChartAxisLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateChartAxisLabelOptionsOutput) ToTemplateChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateChartAxisLabelOptions) *TemplateChartAxisLabelOptions {
		return &v
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateChartAxisLabelOptionsOutput) AxisLabelOptions() TemplateAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v TemplateChartAxisLabelOptions) []TemplateAxisLabelOptions { return v.AxisLabelOptions }).(TemplateAxisLabelOptionsArrayOutput)
}

func (o TemplateChartAxisLabelOptionsOutput) SortIconVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateChartAxisLabelOptions) *TemplateVisibility { return v.SortIconVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateChartAxisLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateChartAxisLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateChartAxisLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateChartAxisLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateChartAxisLabelOptions)(nil)).Elem()
}

func (o TemplateChartAxisLabelOptionsPtrOutput) ToTemplateChartAxisLabelOptionsPtrOutput() TemplateChartAxisLabelOptionsPtrOutput {
	return o
}

func (o TemplateChartAxisLabelOptionsPtrOutput) ToTemplateChartAxisLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateChartAxisLabelOptionsPtrOutput {
	return o
}

func (o TemplateChartAxisLabelOptionsPtrOutput) Elem() TemplateChartAxisLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateChartAxisLabelOptions) TemplateChartAxisLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateChartAxisLabelOptions
		return ret
	}).(TemplateChartAxisLabelOptionsOutput)
}

func (o TemplateChartAxisLabelOptionsPtrOutput) AxisLabelOptions() TemplateAxisLabelOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateChartAxisLabelOptions) []TemplateAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.AxisLabelOptions
	}).(TemplateAxisLabelOptionsArrayOutput)
}

func (o TemplateChartAxisLabelOptionsPtrOutput) SortIconVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateChartAxisLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.SortIconVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateChartAxisLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateChartAxisLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateClusterMarker struct {
	SimpleClusterMarker *TemplateSimpleClusterMarker `pulumi:"simpleClusterMarker"`
}

// TemplateClusterMarkerInput is an input type that accepts TemplateClusterMarkerArgs and TemplateClusterMarkerOutput values.
// You can construct a concrete instance of `TemplateClusterMarkerInput` via:
//
//	TemplateClusterMarkerArgs{...}
type TemplateClusterMarkerInput interface {
	pulumi.Input

	ToTemplateClusterMarkerOutput() TemplateClusterMarkerOutput
	ToTemplateClusterMarkerOutputWithContext(context.Context) TemplateClusterMarkerOutput
}

type TemplateClusterMarkerArgs struct {
	SimpleClusterMarker TemplateSimpleClusterMarkerPtrInput `pulumi:"simpleClusterMarker"`
}

func (TemplateClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateClusterMarker)(nil)).Elem()
}

func (i TemplateClusterMarkerArgs) ToTemplateClusterMarkerOutput() TemplateClusterMarkerOutput {
	return i.ToTemplateClusterMarkerOutputWithContext(context.Background())
}

func (i TemplateClusterMarkerArgs) ToTemplateClusterMarkerOutputWithContext(ctx context.Context) TemplateClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerOutput)
}

func (i TemplateClusterMarkerArgs) ToTemplateClusterMarkerPtrOutput() TemplateClusterMarkerPtrOutput {
	return i.ToTemplateClusterMarkerPtrOutputWithContext(context.Background())
}

func (i TemplateClusterMarkerArgs) ToTemplateClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerOutput).ToTemplateClusterMarkerPtrOutputWithContext(ctx)
}

// TemplateClusterMarkerPtrInput is an input type that accepts TemplateClusterMarkerArgs, TemplateClusterMarkerPtr and TemplateClusterMarkerPtrOutput values.
// You can construct a concrete instance of `TemplateClusterMarkerPtrInput` via:
//
//	        TemplateClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type TemplateClusterMarkerPtrInput interface {
	pulumi.Input

	ToTemplateClusterMarkerPtrOutput() TemplateClusterMarkerPtrOutput
	ToTemplateClusterMarkerPtrOutputWithContext(context.Context) TemplateClusterMarkerPtrOutput
}

type templateClusterMarkerPtrType TemplateClusterMarkerArgs

func TemplateClusterMarkerPtr(v *TemplateClusterMarkerArgs) TemplateClusterMarkerPtrInput {
	return (*templateClusterMarkerPtrType)(v)
}

func (*templateClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateClusterMarker)(nil)).Elem()
}

func (i *templateClusterMarkerPtrType) ToTemplateClusterMarkerPtrOutput() TemplateClusterMarkerPtrOutput {
	return i.ToTemplateClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *templateClusterMarkerPtrType) ToTemplateClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerPtrOutput)
}

type TemplateClusterMarkerOutput struct{ *pulumi.OutputState }

func (TemplateClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateClusterMarker)(nil)).Elem()
}

func (o TemplateClusterMarkerOutput) ToTemplateClusterMarkerOutput() TemplateClusterMarkerOutput {
	return o
}

func (o TemplateClusterMarkerOutput) ToTemplateClusterMarkerOutputWithContext(ctx context.Context) TemplateClusterMarkerOutput {
	return o
}

func (o TemplateClusterMarkerOutput) ToTemplateClusterMarkerPtrOutput() TemplateClusterMarkerPtrOutput {
	return o.ToTemplateClusterMarkerPtrOutputWithContext(context.Background())
}

func (o TemplateClusterMarkerOutput) ToTemplateClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateClusterMarker) *TemplateClusterMarker {
		return &v
	}).(TemplateClusterMarkerPtrOutput)
}

func (o TemplateClusterMarkerOutput) SimpleClusterMarker() TemplateSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v TemplateClusterMarker) *TemplateSimpleClusterMarker { return v.SimpleClusterMarker }).(TemplateSimpleClusterMarkerPtrOutput)
}

type TemplateClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (TemplateClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateClusterMarker)(nil)).Elem()
}

func (o TemplateClusterMarkerPtrOutput) ToTemplateClusterMarkerPtrOutput() TemplateClusterMarkerPtrOutput {
	return o
}

func (o TemplateClusterMarkerPtrOutput) ToTemplateClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerPtrOutput {
	return o
}

func (o TemplateClusterMarkerPtrOutput) Elem() TemplateClusterMarkerOutput {
	return o.ApplyT(func(v *TemplateClusterMarker) TemplateClusterMarker {
		if v != nil {
			return *v
		}
		var ret TemplateClusterMarker
		return ret
	}).(TemplateClusterMarkerOutput)
}

func (o TemplateClusterMarkerPtrOutput) SimpleClusterMarker() TemplateSimpleClusterMarkerPtrOutput {
	return o.ApplyT(func(v *TemplateClusterMarker) *TemplateSimpleClusterMarker {
		if v == nil {
			return nil
		}
		return v.SimpleClusterMarker
	}).(TemplateSimpleClusterMarkerPtrOutput)
}

type TemplateClusterMarkerConfiguration struct {
	ClusterMarker *TemplateClusterMarker `pulumi:"clusterMarker"`
}

// TemplateClusterMarkerConfigurationInput is an input type that accepts TemplateClusterMarkerConfigurationArgs and TemplateClusterMarkerConfigurationOutput values.
// You can construct a concrete instance of `TemplateClusterMarkerConfigurationInput` via:
//
//	TemplateClusterMarkerConfigurationArgs{...}
type TemplateClusterMarkerConfigurationInput interface {
	pulumi.Input

	ToTemplateClusterMarkerConfigurationOutput() TemplateClusterMarkerConfigurationOutput
	ToTemplateClusterMarkerConfigurationOutputWithContext(context.Context) TemplateClusterMarkerConfigurationOutput
}

type TemplateClusterMarkerConfigurationArgs struct {
	ClusterMarker TemplateClusterMarkerPtrInput `pulumi:"clusterMarker"`
}

func (TemplateClusterMarkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateClusterMarkerConfiguration)(nil)).Elem()
}

func (i TemplateClusterMarkerConfigurationArgs) ToTemplateClusterMarkerConfigurationOutput() TemplateClusterMarkerConfigurationOutput {
	return i.ToTemplateClusterMarkerConfigurationOutputWithContext(context.Background())
}

func (i TemplateClusterMarkerConfigurationArgs) ToTemplateClusterMarkerConfigurationOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerConfigurationOutput)
}

func (i TemplateClusterMarkerConfigurationArgs) ToTemplateClusterMarkerConfigurationPtrOutput() TemplateClusterMarkerConfigurationPtrOutput {
	return i.ToTemplateClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateClusterMarkerConfigurationArgs) ToTemplateClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerConfigurationOutput).ToTemplateClusterMarkerConfigurationPtrOutputWithContext(ctx)
}

// TemplateClusterMarkerConfigurationPtrInput is an input type that accepts TemplateClusterMarkerConfigurationArgs, TemplateClusterMarkerConfigurationPtr and TemplateClusterMarkerConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateClusterMarkerConfigurationPtrInput` via:
//
//	        TemplateClusterMarkerConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateClusterMarkerConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateClusterMarkerConfigurationPtrOutput() TemplateClusterMarkerConfigurationPtrOutput
	ToTemplateClusterMarkerConfigurationPtrOutputWithContext(context.Context) TemplateClusterMarkerConfigurationPtrOutput
}

type templateClusterMarkerConfigurationPtrType TemplateClusterMarkerConfigurationArgs

func TemplateClusterMarkerConfigurationPtr(v *TemplateClusterMarkerConfigurationArgs) TemplateClusterMarkerConfigurationPtrInput {
	return (*templateClusterMarkerConfigurationPtrType)(v)
}

func (*templateClusterMarkerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateClusterMarkerConfiguration)(nil)).Elem()
}

func (i *templateClusterMarkerConfigurationPtrType) ToTemplateClusterMarkerConfigurationPtrOutput() TemplateClusterMarkerConfigurationPtrOutput {
	return i.ToTemplateClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateClusterMarkerConfigurationPtrType) ToTemplateClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateClusterMarkerConfigurationPtrOutput)
}

type TemplateClusterMarkerConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateClusterMarkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateClusterMarkerConfiguration)(nil)).Elem()
}

func (o TemplateClusterMarkerConfigurationOutput) ToTemplateClusterMarkerConfigurationOutput() TemplateClusterMarkerConfigurationOutput {
	return o
}

func (o TemplateClusterMarkerConfigurationOutput) ToTemplateClusterMarkerConfigurationOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationOutput {
	return o
}

func (o TemplateClusterMarkerConfigurationOutput) ToTemplateClusterMarkerConfigurationPtrOutput() TemplateClusterMarkerConfigurationPtrOutput {
	return o.ToTemplateClusterMarkerConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateClusterMarkerConfigurationOutput) ToTemplateClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateClusterMarkerConfiguration) *TemplateClusterMarkerConfiguration {
		return &v
	}).(TemplateClusterMarkerConfigurationPtrOutput)
}

func (o TemplateClusterMarkerConfigurationOutput) ClusterMarker() TemplateClusterMarkerPtrOutput {
	return o.ApplyT(func(v TemplateClusterMarkerConfiguration) *TemplateClusterMarker { return v.ClusterMarker }).(TemplateClusterMarkerPtrOutput)
}

type TemplateClusterMarkerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateClusterMarkerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateClusterMarkerConfiguration)(nil)).Elem()
}

func (o TemplateClusterMarkerConfigurationPtrOutput) ToTemplateClusterMarkerConfigurationPtrOutput() TemplateClusterMarkerConfigurationPtrOutput {
	return o
}

func (o TemplateClusterMarkerConfigurationPtrOutput) ToTemplateClusterMarkerConfigurationPtrOutputWithContext(ctx context.Context) TemplateClusterMarkerConfigurationPtrOutput {
	return o
}

func (o TemplateClusterMarkerConfigurationPtrOutput) Elem() TemplateClusterMarkerConfigurationOutput {
	return o.ApplyT(func(v *TemplateClusterMarkerConfiguration) TemplateClusterMarkerConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateClusterMarkerConfiguration
		return ret
	}).(TemplateClusterMarkerConfigurationOutput)
}

func (o TemplateClusterMarkerConfigurationPtrOutput) ClusterMarker() TemplateClusterMarkerPtrOutput {
	return o.ApplyT(func(v *TemplateClusterMarkerConfiguration) *TemplateClusterMarker {
		if v == nil {
			return nil
		}
		return v.ClusterMarker
	}).(TemplateClusterMarkerPtrOutput)
}

type TemplateColorScale struct {
	ColorFillType  TemplateColorFillType `pulumi:"colorFillType"`
	Colors         []TemplateDataColor   `pulumi:"colors"`
	NullValueColor *TemplateDataColor    `pulumi:"nullValueColor"`
}

// TemplateColorScaleInput is an input type that accepts TemplateColorScaleArgs and TemplateColorScaleOutput values.
// You can construct a concrete instance of `TemplateColorScaleInput` via:
//
//	TemplateColorScaleArgs{...}
type TemplateColorScaleInput interface {
	pulumi.Input

	ToTemplateColorScaleOutput() TemplateColorScaleOutput
	ToTemplateColorScaleOutputWithContext(context.Context) TemplateColorScaleOutput
}

type TemplateColorScaleArgs struct {
	ColorFillType  TemplateColorFillTypeInput  `pulumi:"colorFillType"`
	Colors         TemplateDataColorArrayInput `pulumi:"colors"`
	NullValueColor TemplateDataColorPtrInput   `pulumi:"nullValueColor"`
}

func (TemplateColorScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorScale)(nil)).Elem()
}

func (i TemplateColorScaleArgs) ToTemplateColorScaleOutput() TemplateColorScaleOutput {
	return i.ToTemplateColorScaleOutputWithContext(context.Background())
}

func (i TemplateColorScaleArgs) ToTemplateColorScaleOutputWithContext(ctx context.Context) TemplateColorScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorScaleOutput)
}

func (i TemplateColorScaleArgs) ToTemplateColorScalePtrOutput() TemplateColorScalePtrOutput {
	return i.ToTemplateColorScalePtrOutputWithContext(context.Background())
}

func (i TemplateColorScaleArgs) ToTemplateColorScalePtrOutputWithContext(ctx context.Context) TemplateColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorScaleOutput).ToTemplateColorScalePtrOutputWithContext(ctx)
}

// TemplateColorScalePtrInput is an input type that accepts TemplateColorScaleArgs, TemplateColorScalePtr and TemplateColorScalePtrOutput values.
// You can construct a concrete instance of `TemplateColorScalePtrInput` via:
//
//	        TemplateColorScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateColorScalePtrInput interface {
	pulumi.Input

	ToTemplateColorScalePtrOutput() TemplateColorScalePtrOutput
	ToTemplateColorScalePtrOutputWithContext(context.Context) TemplateColorScalePtrOutput
}

type templateColorScalePtrType TemplateColorScaleArgs

func TemplateColorScalePtr(v *TemplateColorScaleArgs) TemplateColorScalePtrInput {
	return (*templateColorScalePtrType)(v)
}

func (*templateColorScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColorScale)(nil)).Elem()
}

func (i *templateColorScalePtrType) ToTemplateColorScalePtrOutput() TemplateColorScalePtrOutput {
	return i.ToTemplateColorScalePtrOutputWithContext(context.Background())
}

func (i *templateColorScalePtrType) ToTemplateColorScalePtrOutputWithContext(ctx context.Context) TemplateColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorScalePtrOutput)
}

type TemplateColorScaleOutput struct{ *pulumi.OutputState }

func (TemplateColorScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorScale)(nil)).Elem()
}

func (o TemplateColorScaleOutput) ToTemplateColorScaleOutput() TemplateColorScaleOutput {
	return o
}

func (o TemplateColorScaleOutput) ToTemplateColorScaleOutputWithContext(ctx context.Context) TemplateColorScaleOutput {
	return o
}

func (o TemplateColorScaleOutput) ToTemplateColorScalePtrOutput() TemplateColorScalePtrOutput {
	return o.ToTemplateColorScalePtrOutputWithContext(context.Background())
}

func (o TemplateColorScaleOutput) ToTemplateColorScalePtrOutputWithContext(ctx context.Context) TemplateColorScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColorScale) *TemplateColorScale {
		return &v
	}).(TemplateColorScalePtrOutput)
}

func (o TemplateColorScaleOutput) ColorFillType() TemplateColorFillTypeOutput {
	return o.ApplyT(func(v TemplateColorScale) TemplateColorFillType { return v.ColorFillType }).(TemplateColorFillTypeOutput)
}

func (o TemplateColorScaleOutput) Colors() TemplateDataColorArrayOutput {
	return o.ApplyT(func(v TemplateColorScale) []TemplateDataColor { return v.Colors }).(TemplateDataColorArrayOutput)
}

func (o TemplateColorScaleOutput) NullValueColor() TemplateDataColorPtrOutput {
	return o.ApplyT(func(v TemplateColorScale) *TemplateDataColor { return v.NullValueColor }).(TemplateDataColorPtrOutput)
}

type TemplateColorScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateColorScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColorScale)(nil)).Elem()
}

func (o TemplateColorScalePtrOutput) ToTemplateColorScalePtrOutput() TemplateColorScalePtrOutput {
	return o
}

func (o TemplateColorScalePtrOutput) ToTemplateColorScalePtrOutputWithContext(ctx context.Context) TemplateColorScalePtrOutput {
	return o
}

func (o TemplateColorScalePtrOutput) Elem() TemplateColorScaleOutput {
	return o.ApplyT(func(v *TemplateColorScale) TemplateColorScale {
		if v != nil {
			return *v
		}
		var ret TemplateColorScale
		return ret
	}).(TemplateColorScaleOutput)
}

func (o TemplateColorScalePtrOutput) ColorFillType() TemplateColorFillTypePtrOutput {
	return o.ApplyT(func(v *TemplateColorScale) *TemplateColorFillType {
		if v == nil {
			return nil
		}
		return &v.ColorFillType
	}).(TemplateColorFillTypePtrOutput)
}

func (o TemplateColorScalePtrOutput) Colors() TemplateDataColorArrayOutput {
	return o.ApplyT(func(v *TemplateColorScale) []TemplateDataColor {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDataColorArrayOutput)
}

func (o TemplateColorScalePtrOutput) NullValueColor() TemplateDataColorPtrOutput {
	return o.ApplyT(func(v *TemplateColorScale) *TemplateDataColor {
		if v == nil {
			return nil
		}
		return v.NullValueColor
	}).(TemplateDataColorPtrOutput)
}

type TemplateColorsConfiguration struct {
	CustomColors []TemplateCustomColor `pulumi:"customColors"`
}

// TemplateColorsConfigurationInput is an input type that accepts TemplateColorsConfigurationArgs and TemplateColorsConfigurationOutput values.
// You can construct a concrete instance of `TemplateColorsConfigurationInput` via:
//
//	TemplateColorsConfigurationArgs{...}
type TemplateColorsConfigurationInput interface {
	pulumi.Input

	ToTemplateColorsConfigurationOutput() TemplateColorsConfigurationOutput
	ToTemplateColorsConfigurationOutputWithContext(context.Context) TemplateColorsConfigurationOutput
}

type TemplateColorsConfigurationArgs struct {
	CustomColors TemplateCustomColorArrayInput `pulumi:"customColors"`
}

func (TemplateColorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorsConfiguration)(nil)).Elem()
}

func (i TemplateColorsConfigurationArgs) ToTemplateColorsConfigurationOutput() TemplateColorsConfigurationOutput {
	return i.ToTemplateColorsConfigurationOutputWithContext(context.Background())
}

func (i TemplateColorsConfigurationArgs) ToTemplateColorsConfigurationOutputWithContext(ctx context.Context) TemplateColorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorsConfigurationOutput)
}

func (i TemplateColorsConfigurationArgs) ToTemplateColorsConfigurationPtrOutput() TemplateColorsConfigurationPtrOutput {
	return i.ToTemplateColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateColorsConfigurationArgs) ToTemplateColorsConfigurationPtrOutputWithContext(ctx context.Context) TemplateColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorsConfigurationOutput).ToTemplateColorsConfigurationPtrOutputWithContext(ctx)
}

// TemplateColorsConfigurationPtrInput is an input type that accepts TemplateColorsConfigurationArgs, TemplateColorsConfigurationPtr and TemplateColorsConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateColorsConfigurationPtrInput` via:
//
//	        TemplateColorsConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateColorsConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateColorsConfigurationPtrOutput() TemplateColorsConfigurationPtrOutput
	ToTemplateColorsConfigurationPtrOutputWithContext(context.Context) TemplateColorsConfigurationPtrOutput
}

type templateColorsConfigurationPtrType TemplateColorsConfigurationArgs

func TemplateColorsConfigurationPtr(v *TemplateColorsConfigurationArgs) TemplateColorsConfigurationPtrInput {
	return (*templateColorsConfigurationPtrType)(v)
}

func (*templateColorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColorsConfiguration)(nil)).Elem()
}

func (i *templateColorsConfigurationPtrType) ToTemplateColorsConfigurationPtrOutput() TemplateColorsConfigurationPtrOutput {
	return i.ToTemplateColorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateColorsConfigurationPtrType) ToTemplateColorsConfigurationPtrOutputWithContext(ctx context.Context) TemplateColorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColorsConfigurationPtrOutput)
}

type TemplateColorsConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateColorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColorsConfiguration)(nil)).Elem()
}

func (o TemplateColorsConfigurationOutput) ToTemplateColorsConfigurationOutput() TemplateColorsConfigurationOutput {
	return o
}

func (o TemplateColorsConfigurationOutput) ToTemplateColorsConfigurationOutputWithContext(ctx context.Context) TemplateColorsConfigurationOutput {
	return o
}

func (o TemplateColorsConfigurationOutput) ToTemplateColorsConfigurationPtrOutput() TemplateColorsConfigurationPtrOutput {
	return o.ToTemplateColorsConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateColorsConfigurationOutput) ToTemplateColorsConfigurationPtrOutputWithContext(ctx context.Context) TemplateColorsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColorsConfiguration) *TemplateColorsConfiguration {
		return &v
	}).(TemplateColorsConfigurationPtrOutput)
}

func (o TemplateColorsConfigurationOutput) CustomColors() TemplateCustomColorArrayOutput {
	return o.ApplyT(func(v TemplateColorsConfiguration) []TemplateCustomColor { return v.CustomColors }).(TemplateCustomColorArrayOutput)
}

type TemplateColorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateColorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColorsConfiguration)(nil)).Elem()
}

func (o TemplateColorsConfigurationPtrOutput) ToTemplateColorsConfigurationPtrOutput() TemplateColorsConfigurationPtrOutput {
	return o
}

func (o TemplateColorsConfigurationPtrOutput) ToTemplateColorsConfigurationPtrOutputWithContext(ctx context.Context) TemplateColorsConfigurationPtrOutput {
	return o
}

func (o TemplateColorsConfigurationPtrOutput) Elem() TemplateColorsConfigurationOutput {
	return o.ApplyT(func(v *TemplateColorsConfiguration) TemplateColorsConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateColorsConfiguration
		return ret
	}).(TemplateColorsConfigurationOutput)
}

func (o TemplateColorsConfigurationPtrOutput) CustomColors() TemplateCustomColorArrayOutput {
	return o.ApplyT(func(v *TemplateColorsConfiguration) []TemplateCustomColor {
		if v == nil {
			return nil
		}
		return v.CustomColors
	}).(TemplateCustomColorArrayOutput)
}

type TemplateColumnConfiguration struct {
	ColorsConfiguration *TemplateColorsConfiguration `pulumi:"colorsConfiguration"`
	Column              TemplateColumnIdentifier     `pulumi:"column"`
	FormatConfiguration *TemplateFormatConfiguration `pulumi:"formatConfiguration"`
	Role                *TemplateColumnRole          `pulumi:"role"`
}

// TemplateColumnConfigurationInput is an input type that accepts TemplateColumnConfigurationArgs and TemplateColumnConfigurationOutput values.
// You can construct a concrete instance of `TemplateColumnConfigurationInput` via:
//
//	TemplateColumnConfigurationArgs{...}
type TemplateColumnConfigurationInput interface {
	pulumi.Input

	ToTemplateColumnConfigurationOutput() TemplateColumnConfigurationOutput
	ToTemplateColumnConfigurationOutputWithContext(context.Context) TemplateColumnConfigurationOutput
}

type TemplateColumnConfigurationArgs struct {
	ColorsConfiguration TemplateColorsConfigurationPtrInput `pulumi:"colorsConfiguration"`
	Column              TemplateColumnIdentifierInput       `pulumi:"column"`
	FormatConfiguration TemplateFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	Role                TemplateColumnRolePtrInput          `pulumi:"role"`
}

func (TemplateColumnConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnConfiguration)(nil)).Elem()
}

func (i TemplateColumnConfigurationArgs) ToTemplateColumnConfigurationOutput() TemplateColumnConfigurationOutput {
	return i.ToTemplateColumnConfigurationOutputWithContext(context.Background())
}

func (i TemplateColumnConfigurationArgs) ToTemplateColumnConfigurationOutputWithContext(ctx context.Context) TemplateColumnConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnConfigurationOutput)
}

// TemplateColumnConfigurationArrayInput is an input type that accepts TemplateColumnConfigurationArray and TemplateColumnConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateColumnConfigurationArrayInput` via:
//
//	TemplateColumnConfigurationArray{ TemplateColumnConfigurationArgs{...} }
type TemplateColumnConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateColumnConfigurationArrayOutput() TemplateColumnConfigurationArrayOutput
	ToTemplateColumnConfigurationArrayOutputWithContext(context.Context) TemplateColumnConfigurationArrayOutput
}

type TemplateColumnConfigurationArray []TemplateColumnConfigurationInput

func (TemplateColumnConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnConfiguration)(nil)).Elem()
}

func (i TemplateColumnConfigurationArray) ToTemplateColumnConfigurationArrayOutput() TemplateColumnConfigurationArrayOutput {
	return i.ToTemplateColumnConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateColumnConfigurationArray) ToTemplateColumnConfigurationArrayOutputWithContext(ctx context.Context) TemplateColumnConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnConfigurationArrayOutput)
}

type TemplateColumnConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateColumnConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnConfiguration)(nil)).Elem()
}

func (o TemplateColumnConfigurationOutput) ToTemplateColumnConfigurationOutput() TemplateColumnConfigurationOutput {
	return o
}

func (o TemplateColumnConfigurationOutput) ToTemplateColumnConfigurationOutputWithContext(ctx context.Context) TemplateColumnConfigurationOutput {
	return o
}

func (o TemplateColumnConfigurationOutput) ColorsConfiguration() TemplateColorsConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateColumnConfiguration) *TemplateColorsConfiguration { return v.ColorsConfiguration }).(TemplateColorsConfigurationPtrOutput)
}

func (o TemplateColumnConfigurationOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateColumnConfiguration) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateColumnConfigurationOutput) FormatConfiguration() TemplateFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateColumnConfiguration) *TemplateFormatConfiguration { return v.FormatConfiguration }).(TemplateFormatConfigurationPtrOutput)
}

func (o TemplateColumnConfigurationOutput) Role() TemplateColumnRolePtrOutput {
	return o.ApplyT(func(v TemplateColumnConfiguration) *TemplateColumnRole { return v.Role }).(TemplateColumnRolePtrOutput)
}

type TemplateColumnConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnConfiguration)(nil)).Elem()
}

func (o TemplateColumnConfigurationArrayOutput) ToTemplateColumnConfigurationArrayOutput() TemplateColumnConfigurationArrayOutput {
	return o
}

func (o TemplateColumnConfigurationArrayOutput) ToTemplateColumnConfigurationArrayOutputWithContext(ctx context.Context) TemplateColumnConfigurationArrayOutput {
	return o
}

func (o TemplateColumnConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateColumnConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnConfiguration {
		return vs[0].([]TemplateColumnConfiguration)[vs[1].(int)]
	}).(TemplateColumnConfigurationOutput)
}

type TemplateColumnGroupColumnSchema struct {
	Name *string `pulumi:"name"`
}

// TemplateColumnGroupColumnSchemaInput is an input type that accepts TemplateColumnGroupColumnSchemaArgs and TemplateColumnGroupColumnSchemaOutput values.
// You can construct a concrete instance of `TemplateColumnGroupColumnSchemaInput` via:
//
//	TemplateColumnGroupColumnSchemaArgs{...}
type TemplateColumnGroupColumnSchemaInput interface {
	pulumi.Input

	ToTemplateColumnGroupColumnSchemaOutput() TemplateColumnGroupColumnSchemaOutput
	ToTemplateColumnGroupColumnSchemaOutputWithContext(context.Context) TemplateColumnGroupColumnSchemaOutput
}

type TemplateColumnGroupColumnSchemaArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (TemplateColumnGroupColumnSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnGroupColumnSchema)(nil)).Elem()
}

func (i TemplateColumnGroupColumnSchemaArgs) ToTemplateColumnGroupColumnSchemaOutput() TemplateColumnGroupColumnSchemaOutput {
	return i.ToTemplateColumnGroupColumnSchemaOutputWithContext(context.Background())
}

func (i TemplateColumnGroupColumnSchemaArgs) ToTemplateColumnGroupColumnSchemaOutputWithContext(ctx context.Context) TemplateColumnGroupColumnSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnGroupColumnSchemaOutput)
}

// TemplateColumnGroupColumnSchemaArrayInput is an input type that accepts TemplateColumnGroupColumnSchemaArray and TemplateColumnGroupColumnSchemaArrayOutput values.
// You can construct a concrete instance of `TemplateColumnGroupColumnSchemaArrayInput` via:
//
//	TemplateColumnGroupColumnSchemaArray{ TemplateColumnGroupColumnSchemaArgs{...} }
type TemplateColumnGroupColumnSchemaArrayInput interface {
	pulumi.Input

	ToTemplateColumnGroupColumnSchemaArrayOutput() TemplateColumnGroupColumnSchemaArrayOutput
	ToTemplateColumnGroupColumnSchemaArrayOutputWithContext(context.Context) TemplateColumnGroupColumnSchemaArrayOutput
}

type TemplateColumnGroupColumnSchemaArray []TemplateColumnGroupColumnSchemaInput

func (TemplateColumnGroupColumnSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnGroupColumnSchema)(nil)).Elem()
}

func (i TemplateColumnGroupColumnSchemaArray) ToTemplateColumnGroupColumnSchemaArrayOutput() TemplateColumnGroupColumnSchemaArrayOutput {
	return i.ToTemplateColumnGroupColumnSchemaArrayOutputWithContext(context.Background())
}

func (i TemplateColumnGroupColumnSchemaArray) ToTemplateColumnGroupColumnSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnGroupColumnSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnGroupColumnSchemaArrayOutput)
}

type TemplateColumnGroupColumnSchemaOutput struct{ *pulumi.OutputState }

func (TemplateColumnGroupColumnSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnGroupColumnSchema)(nil)).Elem()
}

func (o TemplateColumnGroupColumnSchemaOutput) ToTemplateColumnGroupColumnSchemaOutput() TemplateColumnGroupColumnSchemaOutput {
	return o
}

func (o TemplateColumnGroupColumnSchemaOutput) ToTemplateColumnGroupColumnSchemaOutputWithContext(ctx context.Context) TemplateColumnGroupColumnSchemaOutput {
	return o
}

func (o TemplateColumnGroupColumnSchemaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnGroupColumnSchema) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TemplateColumnGroupColumnSchemaArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnGroupColumnSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnGroupColumnSchema)(nil)).Elem()
}

func (o TemplateColumnGroupColumnSchemaArrayOutput) ToTemplateColumnGroupColumnSchemaArrayOutput() TemplateColumnGroupColumnSchemaArrayOutput {
	return o
}

func (o TemplateColumnGroupColumnSchemaArrayOutput) ToTemplateColumnGroupColumnSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnGroupColumnSchemaArrayOutput {
	return o
}

func (o TemplateColumnGroupColumnSchemaArrayOutput) Index(i pulumi.IntInput) TemplateColumnGroupColumnSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnGroupColumnSchema {
		return vs[0].([]TemplateColumnGroupColumnSchema)[vs[1].(int)]
	}).(TemplateColumnGroupColumnSchemaOutput)
}

type TemplateColumnGroupSchema struct {
	ColumnGroupColumnSchemaList []TemplateColumnGroupColumnSchema `pulumi:"columnGroupColumnSchemaList"`
	Name                        *string                           `pulumi:"name"`
}

// TemplateColumnGroupSchemaInput is an input type that accepts TemplateColumnGroupSchemaArgs and TemplateColumnGroupSchemaOutput values.
// You can construct a concrete instance of `TemplateColumnGroupSchemaInput` via:
//
//	TemplateColumnGroupSchemaArgs{...}
type TemplateColumnGroupSchemaInput interface {
	pulumi.Input

	ToTemplateColumnGroupSchemaOutput() TemplateColumnGroupSchemaOutput
	ToTemplateColumnGroupSchemaOutputWithContext(context.Context) TemplateColumnGroupSchemaOutput
}

type TemplateColumnGroupSchemaArgs struct {
	ColumnGroupColumnSchemaList TemplateColumnGroupColumnSchemaArrayInput `pulumi:"columnGroupColumnSchemaList"`
	Name                        pulumi.StringPtrInput                     `pulumi:"name"`
}

func (TemplateColumnGroupSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnGroupSchema)(nil)).Elem()
}

func (i TemplateColumnGroupSchemaArgs) ToTemplateColumnGroupSchemaOutput() TemplateColumnGroupSchemaOutput {
	return i.ToTemplateColumnGroupSchemaOutputWithContext(context.Background())
}

func (i TemplateColumnGroupSchemaArgs) ToTemplateColumnGroupSchemaOutputWithContext(ctx context.Context) TemplateColumnGroupSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnGroupSchemaOutput)
}

// TemplateColumnGroupSchemaArrayInput is an input type that accepts TemplateColumnGroupSchemaArray and TemplateColumnGroupSchemaArrayOutput values.
// You can construct a concrete instance of `TemplateColumnGroupSchemaArrayInput` via:
//
//	TemplateColumnGroupSchemaArray{ TemplateColumnGroupSchemaArgs{...} }
type TemplateColumnGroupSchemaArrayInput interface {
	pulumi.Input

	ToTemplateColumnGroupSchemaArrayOutput() TemplateColumnGroupSchemaArrayOutput
	ToTemplateColumnGroupSchemaArrayOutputWithContext(context.Context) TemplateColumnGroupSchemaArrayOutput
}

type TemplateColumnGroupSchemaArray []TemplateColumnGroupSchemaInput

func (TemplateColumnGroupSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnGroupSchema)(nil)).Elem()
}

func (i TemplateColumnGroupSchemaArray) ToTemplateColumnGroupSchemaArrayOutput() TemplateColumnGroupSchemaArrayOutput {
	return i.ToTemplateColumnGroupSchemaArrayOutputWithContext(context.Background())
}

func (i TemplateColumnGroupSchemaArray) ToTemplateColumnGroupSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnGroupSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnGroupSchemaArrayOutput)
}

type TemplateColumnGroupSchemaOutput struct{ *pulumi.OutputState }

func (TemplateColumnGroupSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnGroupSchema)(nil)).Elem()
}

func (o TemplateColumnGroupSchemaOutput) ToTemplateColumnGroupSchemaOutput() TemplateColumnGroupSchemaOutput {
	return o
}

func (o TemplateColumnGroupSchemaOutput) ToTemplateColumnGroupSchemaOutputWithContext(ctx context.Context) TemplateColumnGroupSchemaOutput {
	return o
}

func (o TemplateColumnGroupSchemaOutput) ColumnGroupColumnSchemaList() TemplateColumnGroupColumnSchemaArrayOutput {
	return o.ApplyT(func(v TemplateColumnGroupSchema) []TemplateColumnGroupColumnSchema {
		return v.ColumnGroupColumnSchemaList
	}).(TemplateColumnGroupColumnSchemaArrayOutput)
}

func (o TemplateColumnGroupSchemaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnGroupSchema) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TemplateColumnGroupSchemaArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnGroupSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnGroupSchema)(nil)).Elem()
}

func (o TemplateColumnGroupSchemaArrayOutput) ToTemplateColumnGroupSchemaArrayOutput() TemplateColumnGroupSchemaArrayOutput {
	return o
}

func (o TemplateColumnGroupSchemaArrayOutput) ToTemplateColumnGroupSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnGroupSchemaArrayOutput {
	return o
}

func (o TemplateColumnGroupSchemaArrayOutput) Index(i pulumi.IntInput) TemplateColumnGroupSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnGroupSchema {
		return vs[0].([]TemplateColumnGroupSchema)[vs[1].(int)]
	}).(TemplateColumnGroupSchemaOutput)
}

type TemplateColumnHierarchy struct {
	DateTimeHierarchy   *TemplateDateTimeHierarchy   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   *TemplateExplicitHierarchy   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy *TemplatePredefinedHierarchy `pulumi:"predefinedHierarchy"`
}

// TemplateColumnHierarchyInput is an input type that accepts TemplateColumnHierarchyArgs and TemplateColumnHierarchyOutput values.
// You can construct a concrete instance of `TemplateColumnHierarchyInput` via:
//
//	TemplateColumnHierarchyArgs{...}
type TemplateColumnHierarchyInput interface {
	pulumi.Input

	ToTemplateColumnHierarchyOutput() TemplateColumnHierarchyOutput
	ToTemplateColumnHierarchyOutputWithContext(context.Context) TemplateColumnHierarchyOutput
}

type TemplateColumnHierarchyArgs struct {
	DateTimeHierarchy   TemplateDateTimeHierarchyPtrInput   `pulumi:"dateTimeHierarchy"`
	ExplicitHierarchy   TemplateExplicitHierarchyPtrInput   `pulumi:"explicitHierarchy"`
	PredefinedHierarchy TemplatePredefinedHierarchyPtrInput `pulumi:"predefinedHierarchy"`
}

func (TemplateColumnHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnHierarchy)(nil)).Elem()
}

func (i TemplateColumnHierarchyArgs) ToTemplateColumnHierarchyOutput() TemplateColumnHierarchyOutput {
	return i.ToTemplateColumnHierarchyOutputWithContext(context.Background())
}

func (i TemplateColumnHierarchyArgs) ToTemplateColumnHierarchyOutputWithContext(ctx context.Context) TemplateColumnHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnHierarchyOutput)
}

// TemplateColumnHierarchyArrayInput is an input type that accepts TemplateColumnHierarchyArray and TemplateColumnHierarchyArrayOutput values.
// You can construct a concrete instance of `TemplateColumnHierarchyArrayInput` via:
//
//	TemplateColumnHierarchyArray{ TemplateColumnHierarchyArgs{...} }
type TemplateColumnHierarchyArrayInput interface {
	pulumi.Input

	ToTemplateColumnHierarchyArrayOutput() TemplateColumnHierarchyArrayOutput
	ToTemplateColumnHierarchyArrayOutputWithContext(context.Context) TemplateColumnHierarchyArrayOutput
}

type TemplateColumnHierarchyArray []TemplateColumnHierarchyInput

func (TemplateColumnHierarchyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnHierarchy)(nil)).Elem()
}

func (i TemplateColumnHierarchyArray) ToTemplateColumnHierarchyArrayOutput() TemplateColumnHierarchyArrayOutput {
	return i.ToTemplateColumnHierarchyArrayOutputWithContext(context.Background())
}

func (i TemplateColumnHierarchyArray) ToTemplateColumnHierarchyArrayOutputWithContext(ctx context.Context) TemplateColumnHierarchyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnHierarchyArrayOutput)
}

type TemplateColumnHierarchyOutput struct{ *pulumi.OutputState }

func (TemplateColumnHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnHierarchy)(nil)).Elem()
}

func (o TemplateColumnHierarchyOutput) ToTemplateColumnHierarchyOutput() TemplateColumnHierarchyOutput {
	return o
}

func (o TemplateColumnHierarchyOutput) ToTemplateColumnHierarchyOutputWithContext(ctx context.Context) TemplateColumnHierarchyOutput {
	return o
}

func (o TemplateColumnHierarchyOutput) DateTimeHierarchy() TemplateDateTimeHierarchyPtrOutput {
	return o.ApplyT(func(v TemplateColumnHierarchy) *TemplateDateTimeHierarchy { return v.DateTimeHierarchy }).(TemplateDateTimeHierarchyPtrOutput)
}

func (o TemplateColumnHierarchyOutput) ExplicitHierarchy() TemplateExplicitHierarchyPtrOutput {
	return o.ApplyT(func(v TemplateColumnHierarchy) *TemplateExplicitHierarchy { return v.ExplicitHierarchy }).(TemplateExplicitHierarchyPtrOutput)
}

func (o TemplateColumnHierarchyOutput) PredefinedHierarchy() TemplatePredefinedHierarchyPtrOutput {
	return o.ApplyT(func(v TemplateColumnHierarchy) *TemplatePredefinedHierarchy { return v.PredefinedHierarchy }).(TemplatePredefinedHierarchyPtrOutput)
}

type TemplateColumnHierarchyArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnHierarchyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnHierarchy)(nil)).Elem()
}

func (o TemplateColumnHierarchyArrayOutput) ToTemplateColumnHierarchyArrayOutput() TemplateColumnHierarchyArrayOutput {
	return o
}

func (o TemplateColumnHierarchyArrayOutput) ToTemplateColumnHierarchyArrayOutputWithContext(ctx context.Context) TemplateColumnHierarchyArrayOutput {
	return o
}

func (o TemplateColumnHierarchyArrayOutput) Index(i pulumi.IntInput) TemplateColumnHierarchyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnHierarchy {
		return vs[0].([]TemplateColumnHierarchy)[vs[1].(int)]
	}).(TemplateColumnHierarchyOutput)
}

type TemplateColumnIdentifier struct {
	ColumnName        string `pulumi:"columnName"`
	DataSetIdentifier string `pulumi:"dataSetIdentifier"`
}

// TemplateColumnIdentifierInput is an input type that accepts TemplateColumnIdentifierArgs and TemplateColumnIdentifierOutput values.
// You can construct a concrete instance of `TemplateColumnIdentifierInput` via:
//
//	TemplateColumnIdentifierArgs{...}
type TemplateColumnIdentifierInput interface {
	pulumi.Input

	ToTemplateColumnIdentifierOutput() TemplateColumnIdentifierOutput
	ToTemplateColumnIdentifierOutputWithContext(context.Context) TemplateColumnIdentifierOutput
}

type TemplateColumnIdentifierArgs struct {
	ColumnName        pulumi.StringInput `pulumi:"columnName"`
	DataSetIdentifier pulumi.StringInput `pulumi:"dataSetIdentifier"`
}

func (TemplateColumnIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnIdentifier)(nil)).Elem()
}

func (i TemplateColumnIdentifierArgs) ToTemplateColumnIdentifierOutput() TemplateColumnIdentifierOutput {
	return i.ToTemplateColumnIdentifierOutputWithContext(context.Background())
}

func (i TemplateColumnIdentifierArgs) ToTemplateColumnIdentifierOutputWithContext(ctx context.Context) TemplateColumnIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnIdentifierOutput)
}

func (i TemplateColumnIdentifierArgs) ToTemplateColumnIdentifierPtrOutput() TemplateColumnIdentifierPtrOutput {
	return i.ToTemplateColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i TemplateColumnIdentifierArgs) ToTemplateColumnIdentifierPtrOutputWithContext(ctx context.Context) TemplateColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnIdentifierOutput).ToTemplateColumnIdentifierPtrOutputWithContext(ctx)
}

// TemplateColumnIdentifierPtrInput is an input type that accepts TemplateColumnIdentifierArgs, TemplateColumnIdentifierPtr and TemplateColumnIdentifierPtrOutput values.
// You can construct a concrete instance of `TemplateColumnIdentifierPtrInput` via:
//
//	        TemplateColumnIdentifierArgs{...}
//
//	or:
//
//	        nil
type TemplateColumnIdentifierPtrInput interface {
	pulumi.Input

	ToTemplateColumnIdentifierPtrOutput() TemplateColumnIdentifierPtrOutput
	ToTemplateColumnIdentifierPtrOutputWithContext(context.Context) TemplateColumnIdentifierPtrOutput
}

type templateColumnIdentifierPtrType TemplateColumnIdentifierArgs

func TemplateColumnIdentifierPtr(v *TemplateColumnIdentifierArgs) TemplateColumnIdentifierPtrInput {
	return (*templateColumnIdentifierPtrType)(v)
}

func (*templateColumnIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnIdentifier)(nil)).Elem()
}

func (i *templateColumnIdentifierPtrType) ToTemplateColumnIdentifierPtrOutput() TemplateColumnIdentifierPtrOutput {
	return i.ToTemplateColumnIdentifierPtrOutputWithContext(context.Background())
}

func (i *templateColumnIdentifierPtrType) ToTemplateColumnIdentifierPtrOutputWithContext(ctx context.Context) TemplateColumnIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnIdentifierPtrOutput)
}

// TemplateColumnIdentifierArrayInput is an input type that accepts TemplateColumnIdentifierArray and TemplateColumnIdentifierArrayOutput values.
// You can construct a concrete instance of `TemplateColumnIdentifierArrayInput` via:
//
//	TemplateColumnIdentifierArray{ TemplateColumnIdentifierArgs{...} }
type TemplateColumnIdentifierArrayInput interface {
	pulumi.Input

	ToTemplateColumnIdentifierArrayOutput() TemplateColumnIdentifierArrayOutput
	ToTemplateColumnIdentifierArrayOutputWithContext(context.Context) TemplateColumnIdentifierArrayOutput
}

type TemplateColumnIdentifierArray []TemplateColumnIdentifierInput

func (TemplateColumnIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnIdentifier)(nil)).Elem()
}

func (i TemplateColumnIdentifierArray) ToTemplateColumnIdentifierArrayOutput() TemplateColumnIdentifierArrayOutput {
	return i.ToTemplateColumnIdentifierArrayOutputWithContext(context.Background())
}

func (i TemplateColumnIdentifierArray) ToTemplateColumnIdentifierArrayOutputWithContext(ctx context.Context) TemplateColumnIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnIdentifierArrayOutput)
}

type TemplateColumnIdentifierOutput struct{ *pulumi.OutputState }

func (TemplateColumnIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnIdentifier)(nil)).Elem()
}

func (o TemplateColumnIdentifierOutput) ToTemplateColumnIdentifierOutput() TemplateColumnIdentifierOutput {
	return o
}

func (o TemplateColumnIdentifierOutput) ToTemplateColumnIdentifierOutputWithContext(ctx context.Context) TemplateColumnIdentifierOutput {
	return o
}

func (o TemplateColumnIdentifierOutput) ToTemplateColumnIdentifierPtrOutput() TemplateColumnIdentifierPtrOutput {
	return o.ToTemplateColumnIdentifierPtrOutputWithContext(context.Background())
}

func (o TemplateColumnIdentifierOutput) ToTemplateColumnIdentifierPtrOutputWithContext(ctx context.Context) TemplateColumnIdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColumnIdentifier) *TemplateColumnIdentifier {
		return &v
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateColumnIdentifierOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateColumnIdentifier) string { return v.ColumnName }).(pulumi.StringOutput)
}

func (o TemplateColumnIdentifierOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateColumnIdentifier) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

type TemplateColumnIdentifierPtrOutput struct{ *pulumi.OutputState }

func (TemplateColumnIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnIdentifier)(nil)).Elem()
}

func (o TemplateColumnIdentifierPtrOutput) ToTemplateColumnIdentifierPtrOutput() TemplateColumnIdentifierPtrOutput {
	return o
}

func (o TemplateColumnIdentifierPtrOutput) ToTemplateColumnIdentifierPtrOutputWithContext(ctx context.Context) TemplateColumnIdentifierPtrOutput {
	return o
}

func (o TemplateColumnIdentifierPtrOutput) Elem() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v *TemplateColumnIdentifier) TemplateColumnIdentifier {
		if v != nil {
			return *v
		}
		var ret TemplateColumnIdentifier
		return ret
	}).(TemplateColumnIdentifierOutput)
}

func (o TemplateColumnIdentifierPtrOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.ColumnName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateColumnIdentifierPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateColumnIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

type TemplateColumnIdentifierArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnIdentifier)(nil)).Elem()
}

func (o TemplateColumnIdentifierArrayOutput) ToTemplateColumnIdentifierArrayOutput() TemplateColumnIdentifierArrayOutput {
	return o
}

func (o TemplateColumnIdentifierArrayOutput) ToTemplateColumnIdentifierArrayOutputWithContext(ctx context.Context) TemplateColumnIdentifierArrayOutput {
	return o
}

func (o TemplateColumnIdentifierArrayOutput) Index(i pulumi.IntInput) TemplateColumnIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnIdentifier {
		return vs[0].([]TemplateColumnIdentifier)[vs[1].(int)]
	}).(TemplateColumnIdentifierOutput)
}

type TemplateColumnSchema struct {
	DataType       *string `pulumi:"dataType"`
	GeographicRole *string `pulumi:"geographicRole"`
	Name           *string `pulumi:"name"`
}

// TemplateColumnSchemaInput is an input type that accepts TemplateColumnSchemaArgs and TemplateColumnSchemaOutput values.
// You can construct a concrete instance of `TemplateColumnSchemaInput` via:
//
//	TemplateColumnSchemaArgs{...}
type TemplateColumnSchemaInput interface {
	pulumi.Input

	ToTemplateColumnSchemaOutput() TemplateColumnSchemaOutput
	ToTemplateColumnSchemaOutputWithContext(context.Context) TemplateColumnSchemaOutput
}

type TemplateColumnSchemaArgs struct {
	DataType       pulumi.StringPtrInput `pulumi:"dataType"`
	GeographicRole pulumi.StringPtrInput `pulumi:"geographicRole"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
}

func (TemplateColumnSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnSchema)(nil)).Elem()
}

func (i TemplateColumnSchemaArgs) ToTemplateColumnSchemaOutput() TemplateColumnSchemaOutput {
	return i.ToTemplateColumnSchemaOutputWithContext(context.Background())
}

func (i TemplateColumnSchemaArgs) ToTemplateColumnSchemaOutputWithContext(ctx context.Context) TemplateColumnSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnSchemaOutput)
}

// TemplateColumnSchemaArrayInput is an input type that accepts TemplateColumnSchemaArray and TemplateColumnSchemaArrayOutput values.
// You can construct a concrete instance of `TemplateColumnSchemaArrayInput` via:
//
//	TemplateColumnSchemaArray{ TemplateColumnSchemaArgs{...} }
type TemplateColumnSchemaArrayInput interface {
	pulumi.Input

	ToTemplateColumnSchemaArrayOutput() TemplateColumnSchemaArrayOutput
	ToTemplateColumnSchemaArrayOutputWithContext(context.Context) TemplateColumnSchemaArrayOutput
}

type TemplateColumnSchemaArray []TemplateColumnSchemaInput

func (TemplateColumnSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnSchema)(nil)).Elem()
}

func (i TemplateColumnSchemaArray) ToTemplateColumnSchemaArrayOutput() TemplateColumnSchemaArrayOutput {
	return i.ToTemplateColumnSchemaArrayOutputWithContext(context.Background())
}

func (i TemplateColumnSchemaArray) ToTemplateColumnSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnSchemaArrayOutput)
}

type TemplateColumnSchemaOutput struct{ *pulumi.OutputState }

func (TemplateColumnSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnSchema)(nil)).Elem()
}

func (o TemplateColumnSchemaOutput) ToTemplateColumnSchemaOutput() TemplateColumnSchemaOutput {
	return o
}

func (o TemplateColumnSchemaOutput) ToTemplateColumnSchemaOutputWithContext(ctx context.Context) TemplateColumnSchemaOutput {
	return o
}

func (o TemplateColumnSchemaOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnSchema) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

func (o TemplateColumnSchemaOutput) GeographicRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnSchema) *string { return v.GeographicRole }).(pulumi.StringPtrOutput)
}

func (o TemplateColumnSchemaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnSchema) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TemplateColumnSchemaArrayOutput struct{ *pulumi.OutputState }

func (TemplateColumnSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateColumnSchema)(nil)).Elem()
}

func (o TemplateColumnSchemaArrayOutput) ToTemplateColumnSchemaArrayOutput() TemplateColumnSchemaArrayOutput {
	return o
}

func (o TemplateColumnSchemaArrayOutput) ToTemplateColumnSchemaArrayOutputWithContext(ctx context.Context) TemplateColumnSchemaArrayOutput {
	return o
}

func (o TemplateColumnSchemaArrayOutput) Index(i pulumi.IntInput) TemplateColumnSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateColumnSchema {
		return vs[0].([]TemplateColumnSchema)[vs[1].(int)]
	}).(TemplateColumnSchemaOutput)
}

type TemplateColumnSort struct {
	AggregationFunction *TemplateAggregationFunction `pulumi:"aggregationFunction"`
	Direction           TemplateSortDirection        `pulumi:"direction"`
	SortBy              TemplateColumnIdentifier     `pulumi:"sortBy"`
}

// TemplateColumnSortInput is an input type that accepts TemplateColumnSortArgs and TemplateColumnSortOutput values.
// You can construct a concrete instance of `TemplateColumnSortInput` via:
//
//	TemplateColumnSortArgs{...}
type TemplateColumnSortInput interface {
	pulumi.Input

	ToTemplateColumnSortOutput() TemplateColumnSortOutput
	ToTemplateColumnSortOutputWithContext(context.Context) TemplateColumnSortOutput
}

type TemplateColumnSortArgs struct {
	AggregationFunction TemplateAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Direction           TemplateSortDirectionInput          `pulumi:"direction"`
	SortBy              TemplateColumnIdentifierInput       `pulumi:"sortBy"`
}

func (TemplateColumnSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnSort)(nil)).Elem()
}

func (i TemplateColumnSortArgs) ToTemplateColumnSortOutput() TemplateColumnSortOutput {
	return i.ToTemplateColumnSortOutputWithContext(context.Background())
}

func (i TemplateColumnSortArgs) ToTemplateColumnSortOutputWithContext(ctx context.Context) TemplateColumnSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnSortOutput)
}

func (i TemplateColumnSortArgs) ToTemplateColumnSortPtrOutput() TemplateColumnSortPtrOutput {
	return i.ToTemplateColumnSortPtrOutputWithContext(context.Background())
}

func (i TemplateColumnSortArgs) ToTemplateColumnSortPtrOutputWithContext(ctx context.Context) TemplateColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnSortOutput).ToTemplateColumnSortPtrOutputWithContext(ctx)
}

// TemplateColumnSortPtrInput is an input type that accepts TemplateColumnSortArgs, TemplateColumnSortPtr and TemplateColumnSortPtrOutput values.
// You can construct a concrete instance of `TemplateColumnSortPtrInput` via:
//
//	        TemplateColumnSortArgs{...}
//
//	or:
//
//	        nil
type TemplateColumnSortPtrInput interface {
	pulumi.Input

	ToTemplateColumnSortPtrOutput() TemplateColumnSortPtrOutput
	ToTemplateColumnSortPtrOutputWithContext(context.Context) TemplateColumnSortPtrOutput
}

type templateColumnSortPtrType TemplateColumnSortArgs

func TemplateColumnSortPtr(v *TemplateColumnSortArgs) TemplateColumnSortPtrInput {
	return (*templateColumnSortPtrType)(v)
}

func (*templateColumnSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnSort)(nil)).Elem()
}

func (i *templateColumnSortPtrType) ToTemplateColumnSortPtrOutput() TemplateColumnSortPtrOutput {
	return i.ToTemplateColumnSortPtrOutputWithContext(context.Background())
}

func (i *templateColumnSortPtrType) ToTemplateColumnSortPtrOutputWithContext(ctx context.Context) TemplateColumnSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnSortPtrOutput)
}

type TemplateColumnSortOutput struct{ *pulumi.OutputState }

func (TemplateColumnSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnSort)(nil)).Elem()
}

func (o TemplateColumnSortOutput) ToTemplateColumnSortOutput() TemplateColumnSortOutput {
	return o
}

func (o TemplateColumnSortOutput) ToTemplateColumnSortOutputWithContext(ctx context.Context) TemplateColumnSortOutput {
	return o
}

func (o TemplateColumnSortOutput) ToTemplateColumnSortPtrOutput() TemplateColumnSortPtrOutput {
	return o.ToTemplateColumnSortPtrOutputWithContext(context.Background())
}

func (o TemplateColumnSortOutput) ToTemplateColumnSortPtrOutputWithContext(ctx context.Context) TemplateColumnSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColumnSort) *TemplateColumnSort {
		return &v
	}).(TemplateColumnSortPtrOutput)
}

func (o TemplateColumnSortOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateColumnSort) *TemplateAggregationFunction { return v.AggregationFunction }).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateColumnSortOutput) Direction() TemplateSortDirectionOutput {
	return o.ApplyT(func(v TemplateColumnSort) TemplateSortDirection { return v.Direction }).(TemplateSortDirectionOutput)
}

func (o TemplateColumnSortOutput) SortBy() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateColumnSort) TemplateColumnIdentifier { return v.SortBy }).(TemplateColumnIdentifierOutput)
}

type TemplateColumnSortPtrOutput struct{ *pulumi.OutputState }

func (TemplateColumnSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnSort)(nil)).Elem()
}

func (o TemplateColumnSortPtrOutput) ToTemplateColumnSortPtrOutput() TemplateColumnSortPtrOutput {
	return o
}

func (o TemplateColumnSortPtrOutput) ToTemplateColumnSortPtrOutputWithContext(ctx context.Context) TemplateColumnSortPtrOutput {
	return o
}

func (o TemplateColumnSortPtrOutput) Elem() TemplateColumnSortOutput {
	return o.ApplyT(func(v *TemplateColumnSort) TemplateColumnSort {
		if v != nil {
			return *v
		}
		var ret TemplateColumnSort
		return ret
	}).(TemplateColumnSortOutput)
}

func (o TemplateColumnSortPtrOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateColumnSort) *TemplateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateColumnSortPtrOutput) Direction() TemplateSortDirectionPtrOutput {
	return o.ApplyT(func(v *TemplateColumnSort) *TemplateSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(TemplateSortDirectionPtrOutput)
}

func (o TemplateColumnSortPtrOutput) SortBy() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateColumnSort) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.SortBy
	}).(TemplateColumnIdentifierPtrOutput)
}

type TemplateColumnTooltipItem struct {
	Aggregation *TemplateAggregationFunction `pulumi:"aggregation"`
	Column      TemplateColumnIdentifier     `pulumi:"column"`
	Label       *string                      `pulumi:"label"`
	Visibility  *TemplateVisibility          `pulumi:"visibility"`
}

// TemplateColumnTooltipItemInput is an input type that accepts TemplateColumnTooltipItemArgs and TemplateColumnTooltipItemOutput values.
// You can construct a concrete instance of `TemplateColumnTooltipItemInput` via:
//
//	TemplateColumnTooltipItemArgs{...}
type TemplateColumnTooltipItemInput interface {
	pulumi.Input

	ToTemplateColumnTooltipItemOutput() TemplateColumnTooltipItemOutput
	ToTemplateColumnTooltipItemOutputWithContext(context.Context) TemplateColumnTooltipItemOutput
}

type TemplateColumnTooltipItemArgs struct {
	Aggregation TemplateAggregationFunctionPtrInput `pulumi:"aggregation"`
	Column      TemplateColumnIdentifierInput       `pulumi:"column"`
	Label       pulumi.StringPtrInput               `pulumi:"label"`
	Visibility  TemplateVisibilityPtrInput          `pulumi:"visibility"`
}

func (TemplateColumnTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnTooltipItem)(nil)).Elem()
}

func (i TemplateColumnTooltipItemArgs) ToTemplateColumnTooltipItemOutput() TemplateColumnTooltipItemOutput {
	return i.ToTemplateColumnTooltipItemOutputWithContext(context.Background())
}

func (i TemplateColumnTooltipItemArgs) ToTemplateColumnTooltipItemOutputWithContext(ctx context.Context) TemplateColumnTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnTooltipItemOutput)
}

func (i TemplateColumnTooltipItemArgs) ToTemplateColumnTooltipItemPtrOutput() TemplateColumnTooltipItemPtrOutput {
	return i.ToTemplateColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i TemplateColumnTooltipItemArgs) ToTemplateColumnTooltipItemPtrOutputWithContext(ctx context.Context) TemplateColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnTooltipItemOutput).ToTemplateColumnTooltipItemPtrOutputWithContext(ctx)
}

// TemplateColumnTooltipItemPtrInput is an input type that accepts TemplateColumnTooltipItemArgs, TemplateColumnTooltipItemPtr and TemplateColumnTooltipItemPtrOutput values.
// You can construct a concrete instance of `TemplateColumnTooltipItemPtrInput` via:
//
//	        TemplateColumnTooltipItemArgs{...}
//
//	or:
//
//	        nil
type TemplateColumnTooltipItemPtrInput interface {
	pulumi.Input

	ToTemplateColumnTooltipItemPtrOutput() TemplateColumnTooltipItemPtrOutput
	ToTemplateColumnTooltipItemPtrOutputWithContext(context.Context) TemplateColumnTooltipItemPtrOutput
}

type templateColumnTooltipItemPtrType TemplateColumnTooltipItemArgs

func TemplateColumnTooltipItemPtr(v *TemplateColumnTooltipItemArgs) TemplateColumnTooltipItemPtrInput {
	return (*templateColumnTooltipItemPtrType)(v)
}

func (*templateColumnTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnTooltipItem)(nil)).Elem()
}

func (i *templateColumnTooltipItemPtrType) ToTemplateColumnTooltipItemPtrOutput() TemplateColumnTooltipItemPtrOutput {
	return i.ToTemplateColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (i *templateColumnTooltipItemPtrType) ToTemplateColumnTooltipItemPtrOutputWithContext(ctx context.Context) TemplateColumnTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateColumnTooltipItemPtrOutput)
}

type TemplateColumnTooltipItemOutput struct{ *pulumi.OutputState }

func (TemplateColumnTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateColumnTooltipItem)(nil)).Elem()
}

func (o TemplateColumnTooltipItemOutput) ToTemplateColumnTooltipItemOutput() TemplateColumnTooltipItemOutput {
	return o
}

func (o TemplateColumnTooltipItemOutput) ToTemplateColumnTooltipItemOutputWithContext(ctx context.Context) TemplateColumnTooltipItemOutput {
	return o
}

func (o TemplateColumnTooltipItemOutput) ToTemplateColumnTooltipItemPtrOutput() TemplateColumnTooltipItemPtrOutput {
	return o.ToTemplateColumnTooltipItemPtrOutputWithContext(context.Background())
}

func (o TemplateColumnTooltipItemOutput) ToTemplateColumnTooltipItemPtrOutputWithContext(ctx context.Context) TemplateColumnTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateColumnTooltipItem) *TemplateColumnTooltipItem {
		return &v
	}).(TemplateColumnTooltipItemPtrOutput)
}

func (o TemplateColumnTooltipItemOutput) Aggregation() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateColumnTooltipItem) *TemplateAggregationFunction { return v.Aggregation }).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateColumnTooltipItemOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateColumnTooltipItem) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateColumnTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateColumnTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o TemplateColumnTooltipItemOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateColumnTooltipItem) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateColumnTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (TemplateColumnTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateColumnTooltipItem)(nil)).Elem()
}

func (o TemplateColumnTooltipItemPtrOutput) ToTemplateColumnTooltipItemPtrOutput() TemplateColumnTooltipItemPtrOutput {
	return o
}

func (o TemplateColumnTooltipItemPtrOutput) ToTemplateColumnTooltipItemPtrOutputWithContext(ctx context.Context) TemplateColumnTooltipItemPtrOutput {
	return o
}

func (o TemplateColumnTooltipItemPtrOutput) Elem() TemplateColumnTooltipItemOutput {
	return o.ApplyT(func(v *TemplateColumnTooltipItem) TemplateColumnTooltipItem {
		if v != nil {
			return *v
		}
		var ret TemplateColumnTooltipItem
		return ret
	}).(TemplateColumnTooltipItemOutput)
}

func (o TemplateColumnTooltipItemPtrOutput) Aggregation() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateColumnTooltipItem) *TemplateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.Aggregation
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateColumnTooltipItemPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateColumnTooltipItem) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateColumnTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateColumnTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o TemplateColumnTooltipItemPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateColumnTooltipItem) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateComboChartAggregatedFieldWells struct {
	BarValues  []TemplateMeasureField   `pulumi:"barValues"`
	Category   []TemplateDimensionField `pulumi:"category"`
	Colors     []TemplateDimensionField `pulumi:"colors"`
	LineValues []TemplateMeasureField   `pulumi:"lineValues"`
}

// TemplateComboChartAggregatedFieldWellsInput is an input type that accepts TemplateComboChartAggregatedFieldWellsArgs and TemplateComboChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateComboChartAggregatedFieldWellsInput` via:
//
//	TemplateComboChartAggregatedFieldWellsArgs{...}
type TemplateComboChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateComboChartAggregatedFieldWellsOutput() TemplateComboChartAggregatedFieldWellsOutput
	ToTemplateComboChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateComboChartAggregatedFieldWellsOutput
}

type TemplateComboChartAggregatedFieldWellsArgs struct {
	BarValues  TemplateMeasureFieldArrayInput   `pulumi:"barValues"`
	Category   TemplateDimensionFieldArrayInput `pulumi:"category"`
	Colors     TemplateDimensionFieldArrayInput `pulumi:"colors"`
	LineValues TemplateMeasureFieldArrayInput   `pulumi:"lineValues"`
}

func (TemplateComboChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateComboChartAggregatedFieldWellsArgs) ToTemplateComboChartAggregatedFieldWellsOutput() TemplateComboChartAggregatedFieldWellsOutput {
	return i.ToTemplateComboChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateComboChartAggregatedFieldWellsArgs) ToTemplateComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartAggregatedFieldWellsOutput)
}

func (i TemplateComboChartAggregatedFieldWellsArgs) ToTemplateComboChartAggregatedFieldWellsPtrOutput() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateComboChartAggregatedFieldWellsArgs) ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartAggregatedFieldWellsOutput).ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateComboChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateComboChartAggregatedFieldWellsArgs, TemplateComboChartAggregatedFieldWellsPtr and TemplateComboChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateComboChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateComboChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateComboChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateComboChartAggregatedFieldWellsPtrOutput() TemplateComboChartAggregatedFieldWellsPtrOutput
	ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateComboChartAggregatedFieldWellsPtrOutput
}

type templateComboChartAggregatedFieldWellsPtrType TemplateComboChartAggregatedFieldWellsArgs

func TemplateComboChartAggregatedFieldWellsPtr(v *TemplateComboChartAggregatedFieldWellsArgs) TemplateComboChartAggregatedFieldWellsPtrInput {
	return (*templateComboChartAggregatedFieldWellsPtrType)(v)
}

func (*templateComboChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateComboChartAggregatedFieldWellsPtrType) ToTemplateComboChartAggregatedFieldWellsPtrOutput() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateComboChartAggregatedFieldWellsPtrType) ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartAggregatedFieldWellsPtrOutput)
}

type TemplateComboChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateComboChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateComboChartAggregatedFieldWellsOutput) ToTemplateComboChartAggregatedFieldWellsOutput() TemplateComboChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateComboChartAggregatedFieldWellsOutput) ToTemplateComboChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateComboChartAggregatedFieldWellsOutput) ToTemplateComboChartAggregatedFieldWellsPtrOutput() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateComboChartAggregatedFieldWellsOutput) ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComboChartAggregatedFieldWells) *TemplateComboChartAggregatedFieldWells {
		return &v
	}).(TemplateComboChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateComboChartAggregatedFieldWellsOutput) BarValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateComboChartAggregatedFieldWells) []TemplateMeasureField { return v.BarValues }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateComboChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateComboChartAggregatedFieldWells) []TemplateDimensionField { return v.Colors }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsOutput) LineValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateComboChartAggregatedFieldWells) []TemplateMeasureField { return v.LineValues }).(TemplateMeasureFieldArrayOutput)
}

type TemplateComboChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateComboChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) ToTemplateComboChartAggregatedFieldWellsPtrOutput() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) ToTemplateComboChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) Elem() TemplateComboChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateComboChartAggregatedFieldWells) TemplateComboChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateComboChartAggregatedFieldWells
		return ret
	}).(TemplateComboChartAggregatedFieldWellsOutput)
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) BarValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.BarValues
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateComboChartAggregatedFieldWellsPtrOutput) LineValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.LineValues
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateComboChartConfiguration struct {
	BarDataLabels                *TemplateDataLabelOptions            `pulumi:"barDataLabels"`
	BarsArrangement              *TemplateBarsArrangement             `pulumi:"barsArrangement"`
	CategoryAxis                 *TemplateAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions         *TemplateChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            *TemplateChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                   *TemplateComboChartFieldWells        `pulumi:"fieldWells"`
	Legend                       *TemplateLegendOptions               `pulumi:"legend"`
	LineDataLabels               *TemplateDataLabelOptions            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   *TemplateAxisDisplayOptions          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *TemplateChartAxisLabelOptions       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []TemplateReferenceLine              `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *TemplateAxisDisplayOptions          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *TemplateChartAxisLabelOptions       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            *TemplateComboChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip                      *TemplateTooltipOptions              `pulumi:"tooltip"`
	VisualPalette                *TemplateVisualPalette               `pulumi:"visualPalette"`
}

// TemplateComboChartConfigurationInput is an input type that accepts TemplateComboChartConfigurationArgs and TemplateComboChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateComboChartConfigurationInput` via:
//
//	TemplateComboChartConfigurationArgs{...}
type TemplateComboChartConfigurationInput interface {
	pulumi.Input

	ToTemplateComboChartConfigurationOutput() TemplateComboChartConfigurationOutput
	ToTemplateComboChartConfigurationOutputWithContext(context.Context) TemplateComboChartConfigurationOutput
}

type TemplateComboChartConfigurationArgs struct {
	BarDataLabels                TemplateDataLabelOptionsPtrInput            `pulumi:"barDataLabels"`
	BarsArrangement              TemplateBarsArrangementPtrInput             `pulumi:"barsArrangement"`
	CategoryAxis                 TemplateAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions         TemplateChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorLabelOptions            TemplateChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                   TemplateComboChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                       TemplateLegendOptionsPtrInput               `pulumi:"legend"`
	LineDataLabels               TemplateDataLabelOptionsPtrInput            `pulumi:"lineDataLabels"`
	PrimaryYAxisDisplayOptions   TemplateAxisDisplayOptionsPtrInput          `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     TemplateChartAxisLabelOptionsPtrInput       `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               TemplateReferenceLineArrayInput             `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput          `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput       `pulumi:"secondaryYAxisLabelOptions"`
	SortConfiguration            TemplateComboChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip                      TemplateTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette                TemplateVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (TemplateComboChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartConfiguration)(nil)).Elem()
}

func (i TemplateComboChartConfigurationArgs) ToTemplateComboChartConfigurationOutput() TemplateComboChartConfigurationOutput {
	return i.ToTemplateComboChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateComboChartConfigurationArgs) ToTemplateComboChartConfigurationOutputWithContext(ctx context.Context) TemplateComboChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartConfigurationOutput)
}

func (i TemplateComboChartConfigurationArgs) ToTemplateComboChartConfigurationPtrOutput() TemplateComboChartConfigurationPtrOutput {
	return i.ToTemplateComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateComboChartConfigurationArgs) ToTemplateComboChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartConfigurationOutput).ToTemplateComboChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateComboChartConfigurationPtrInput is an input type that accepts TemplateComboChartConfigurationArgs, TemplateComboChartConfigurationPtr and TemplateComboChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateComboChartConfigurationPtrInput` via:
//
//	        TemplateComboChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateComboChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateComboChartConfigurationPtrOutput() TemplateComboChartConfigurationPtrOutput
	ToTemplateComboChartConfigurationPtrOutputWithContext(context.Context) TemplateComboChartConfigurationPtrOutput
}

type templateComboChartConfigurationPtrType TemplateComboChartConfigurationArgs

func TemplateComboChartConfigurationPtr(v *TemplateComboChartConfigurationArgs) TemplateComboChartConfigurationPtrInput {
	return (*templateComboChartConfigurationPtrType)(v)
}

func (*templateComboChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartConfiguration)(nil)).Elem()
}

func (i *templateComboChartConfigurationPtrType) ToTemplateComboChartConfigurationPtrOutput() TemplateComboChartConfigurationPtrOutput {
	return i.ToTemplateComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateComboChartConfigurationPtrType) ToTemplateComboChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartConfigurationPtrOutput)
}

type TemplateComboChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateComboChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartConfiguration)(nil)).Elem()
}

func (o TemplateComboChartConfigurationOutput) ToTemplateComboChartConfigurationOutput() TemplateComboChartConfigurationOutput {
	return o
}

func (o TemplateComboChartConfigurationOutput) ToTemplateComboChartConfigurationOutputWithContext(ctx context.Context) TemplateComboChartConfigurationOutput {
	return o
}

func (o TemplateComboChartConfigurationOutput) ToTemplateComboChartConfigurationPtrOutput() TemplateComboChartConfigurationPtrOutput {
	return o.ToTemplateComboChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateComboChartConfigurationOutput) ToTemplateComboChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComboChartConfiguration) *TemplateComboChartConfiguration {
		return &v
	}).(TemplateComboChartConfigurationPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) BarDataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateDataLabelOptions { return v.BarDataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateBarsArrangement { return v.BarsArrangement }).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions { return v.ColorLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) FieldWells() TemplateComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateComboChartFieldWells { return v.FieldWells }).(TemplateComboChartFieldWellsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) LineDataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateDataLabelOptions { return v.LineDataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateComboChartConfigurationOutput) SecondaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) SecondaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) SortConfiguration() TemplateComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateComboChartSortConfiguration {
		return v.SortConfiguration
	}).(TemplateComboChartSortConfigurationPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateComboChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateComboChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateComboChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartConfiguration)(nil)).Elem()
}

func (o TemplateComboChartConfigurationPtrOutput) ToTemplateComboChartConfigurationPtrOutput() TemplateComboChartConfigurationPtrOutput {
	return o
}

func (o TemplateComboChartConfigurationPtrOutput) ToTemplateComboChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartConfigurationPtrOutput {
	return o
}

func (o TemplateComboChartConfigurationPtrOutput) Elem() TemplateComboChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) TemplateComboChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateComboChartConfiguration
		return ret
	}).(TemplateComboChartConfigurationOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) BarDataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.BarDataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) BarsArrangement() TemplateBarsArrangementPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateBarsArrangement {
		if v == nil {
			return nil
		}
		return v.BarsArrangement
	}).(TemplateBarsArrangementPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) FieldWells() TemplateComboChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateComboChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateComboChartFieldWellsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) LineDataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.LineDataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) SortConfiguration() TemplateComboChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateComboChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateComboChartSortConfigurationPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateComboChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateComboChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateComboChartFieldWells struct {
	ComboChartAggregatedFieldWells *TemplateComboChartAggregatedFieldWells `pulumi:"comboChartAggregatedFieldWells"`
}

// TemplateComboChartFieldWellsInput is an input type that accepts TemplateComboChartFieldWellsArgs and TemplateComboChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateComboChartFieldWellsInput` via:
//
//	TemplateComboChartFieldWellsArgs{...}
type TemplateComboChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateComboChartFieldWellsOutput() TemplateComboChartFieldWellsOutput
	ToTemplateComboChartFieldWellsOutputWithContext(context.Context) TemplateComboChartFieldWellsOutput
}

type TemplateComboChartFieldWellsArgs struct {
	ComboChartAggregatedFieldWells TemplateComboChartAggregatedFieldWellsPtrInput `pulumi:"comboChartAggregatedFieldWells"`
}

func (TemplateComboChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartFieldWells)(nil)).Elem()
}

func (i TemplateComboChartFieldWellsArgs) ToTemplateComboChartFieldWellsOutput() TemplateComboChartFieldWellsOutput {
	return i.ToTemplateComboChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateComboChartFieldWellsArgs) ToTemplateComboChartFieldWellsOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartFieldWellsOutput)
}

func (i TemplateComboChartFieldWellsArgs) ToTemplateComboChartFieldWellsPtrOutput() TemplateComboChartFieldWellsPtrOutput {
	return i.ToTemplateComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateComboChartFieldWellsArgs) ToTemplateComboChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartFieldWellsOutput).ToTemplateComboChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateComboChartFieldWellsPtrInput is an input type that accepts TemplateComboChartFieldWellsArgs, TemplateComboChartFieldWellsPtr and TemplateComboChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateComboChartFieldWellsPtrInput` via:
//
//	        TemplateComboChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateComboChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateComboChartFieldWellsPtrOutput() TemplateComboChartFieldWellsPtrOutput
	ToTemplateComboChartFieldWellsPtrOutputWithContext(context.Context) TemplateComboChartFieldWellsPtrOutput
}

type templateComboChartFieldWellsPtrType TemplateComboChartFieldWellsArgs

func TemplateComboChartFieldWellsPtr(v *TemplateComboChartFieldWellsArgs) TemplateComboChartFieldWellsPtrInput {
	return (*templateComboChartFieldWellsPtrType)(v)
}

func (*templateComboChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartFieldWells)(nil)).Elem()
}

func (i *templateComboChartFieldWellsPtrType) ToTemplateComboChartFieldWellsPtrOutput() TemplateComboChartFieldWellsPtrOutput {
	return i.ToTemplateComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateComboChartFieldWellsPtrType) ToTemplateComboChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartFieldWellsPtrOutput)
}

type TemplateComboChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateComboChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartFieldWells)(nil)).Elem()
}

func (o TemplateComboChartFieldWellsOutput) ToTemplateComboChartFieldWellsOutput() TemplateComboChartFieldWellsOutput {
	return o
}

func (o TemplateComboChartFieldWellsOutput) ToTemplateComboChartFieldWellsOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsOutput {
	return o
}

func (o TemplateComboChartFieldWellsOutput) ToTemplateComboChartFieldWellsPtrOutput() TemplateComboChartFieldWellsPtrOutput {
	return o.ToTemplateComboChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateComboChartFieldWellsOutput) ToTemplateComboChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComboChartFieldWells) *TemplateComboChartFieldWells {
		return &v
	}).(TemplateComboChartFieldWellsPtrOutput)
}

func (o TemplateComboChartFieldWellsOutput) ComboChartAggregatedFieldWells() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartFieldWells) *TemplateComboChartAggregatedFieldWells {
		return v.ComboChartAggregatedFieldWells
	}).(TemplateComboChartAggregatedFieldWellsPtrOutput)
}

type TemplateComboChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateComboChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartFieldWells)(nil)).Elem()
}

func (o TemplateComboChartFieldWellsPtrOutput) ToTemplateComboChartFieldWellsPtrOutput() TemplateComboChartFieldWellsPtrOutput {
	return o
}

func (o TemplateComboChartFieldWellsPtrOutput) ToTemplateComboChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateComboChartFieldWellsPtrOutput {
	return o
}

func (o TemplateComboChartFieldWellsPtrOutput) Elem() TemplateComboChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateComboChartFieldWells) TemplateComboChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateComboChartFieldWells
		return ret
	}).(TemplateComboChartFieldWellsOutput)
}

func (o TemplateComboChartFieldWellsPtrOutput) ComboChartAggregatedFieldWells() TemplateComboChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartFieldWells) *TemplateComboChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ComboChartAggregatedFieldWells
	}).(TemplateComboChartAggregatedFieldWellsPtrOutput)
}

type TemplateComboChartSortConfiguration struct {
	CategoryItemsLimit *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []TemplateFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *TemplateItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []TemplateFieldSortOptions       `pulumi:"colorSort"`
}

// TemplateComboChartSortConfigurationInput is an input type that accepts TemplateComboChartSortConfigurationArgs and TemplateComboChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateComboChartSortConfigurationInput` via:
//
//	TemplateComboChartSortConfigurationArgs{...}
type TemplateComboChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateComboChartSortConfigurationOutput() TemplateComboChartSortConfigurationOutput
	ToTemplateComboChartSortConfigurationOutputWithContext(context.Context) TemplateComboChartSortConfigurationOutput
}

type TemplateComboChartSortConfigurationArgs struct {
	CategoryItemsLimit TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    TemplateItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          TemplateFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (TemplateComboChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartSortConfiguration)(nil)).Elem()
}

func (i TemplateComboChartSortConfigurationArgs) ToTemplateComboChartSortConfigurationOutput() TemplateComboChartSortConfigurationOutput {
	return i.ToTemplateComboChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateComboChartSortConfigurationArgs) ToTemplateComboChartSortConfigurationOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartSortConfigurationOutput)
}

func (i TemplateComboChartSortConfigurationArgs) ToTemplateComboChartSortConfigurationPtrOutput() TemplateComboChartSortConfigurationPtrOutput {
	return i.ToTemplateComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateComboChartSortConfigurationArgs) ToTemplateComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartSortConfigurationOutput).ToTemplateComboChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateComboChartSortConfigurationPtrInput is an input type that accepts TemplateComboChartSortConfigurationArgs, TemplateComboChartSortConfigurationPtr and TemplateComboChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateComboChartSortConfigurationPtrInput` via:
//
//	        TemplateComboChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateComboChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateComboChartSortConfigurationPtrOutput() TemplateComboChartSortConfigurationPtrOutput
	ToTemplateComboChartSortConfigurationPtrOutputWithContext(context.Context) TemplateComboChartSortConfigurationPtrOutput
}

type templateComboChartSortConfigurationPtrType TemplateComboChartSortConfigurationArgs

func TemplateComboChartSortConfigurationPtr(v *TemplateComboChartSortConfigurationArgs) TemplateComboChartSortConfigurationPtrInput {
	return (*templateComboChartSortConfigurationPtrType)(v)
}

func (*templateComboChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartSortConfiguration)(nil)).Elem()
}

func (i *templateComboChartSortConfigurationPtrType) ToTemplateComboChartSortConfigurationPtrOutput() TemplateComboChartSortConfigurationPtrOutput {
	return i.ToTemplateComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateComboChartSortConfigurationPtrType) ToTemplateComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartSortConfigurationPtrOutput)
}

type TemplateComboChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateComboChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartSortConfiguration)(nil)).Elem()
}

func (o TemplateComboChartSortConfigurationOutput) ToTemplateComboChartSortConfigurationOutput() TemplateComboChartSortConfigurationOutput {
	return o
}

func (o TemplateComboChartSortConfigurationOutput) ToTemplateComboChartSortConfigurationOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationOutput {
	return o
}

func (o TemplateComboChartSortConfigurationOutput) ToTemplateComboChartSortConfigurationPtrOutput() TemplateComboChartSortConfigurationPtrOutput {
	return o.ToTemplateComboChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateComboChartSortConfigurationOutput) ToTemplateComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComboChartSortConfiguration) *TemplateComboChartSortConfiguration {
		return &v
	}).(TemplateComboChartSortConfigurationPtrOutput)
}

func (o TemplateComboChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComboChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateComboChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateComboChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateComboChartSortConfigurationOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComboChartSortConfiguration) *TemplateItemsLimitConfiguration { return v.ColorItemsLimit }).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateComboChartSortConfigurationOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateComboChartSortConfiguration) []TemplateFieldSortOptions { return v.ColorSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateComboChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateComboChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartSortConfiguration)(nil)).Elem()
}

func (o TemplateComboChartSortConfigurationPtrOutput) ToTemplateComboChartSortConfigurationPtrOutput() TemplateComboChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateComboChartSortConfigurationPtrOutput) ToTemplateComboChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateComboChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateComboChartSortConfigurationPtrOutput) Elem() TemplateComboChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateComboChartSortConfiguration) TemplateComboChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateComboChartSortConfiguration
		return ret
	}).(TemplateComboChartSortConfigurationOutput)
}

func (o TemplateComboChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateComboChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateComboChartSortConfigurationPtrOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateComboChartSortConfigurationPtrOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateComboChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateComboChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateComboChartVisualInput is an input type that accepts TemplateComboChartVisualArgs and TemplateComboChartVisualOutput values.
// You can construct a concrete instance of `TemplateComboChartVisualInput` via:
//
//	TemplateComboChartVisualArgs{...}
type TemplateComboChartVisualInput interface {
	pulumi.Input

	ToTemplateComboChartVisualOutput() TemplateComboChartVisualOutput
	ToTemplateComboChartVisualOutputWithContext(context.Context) TemplateComboChartVisualOutput
}

type TemplateComboChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateComboChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateComboChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartVisual)(nil)).Elem()
}

func (i TemplateComboChartVisualArgs) ToTemplateComboChartVisualOutput() TemplateComboChartVisualOutput {
	return i.ToTemplateComboChartVisualOutputWithContext(context.Background())
}

func (i TemplateComboChartVisualArgs) ToTemplateComboChartVisualOutputWithContext(ctx context.Context) TemplateComboChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartVisualOutput)
}

func (i TemplateComboChartVisualArgs) ToTemplateComboChartVisualPtrOutput() TemplateComboChartVisualPtrOutput {
	return i.ToTemplateComboChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateComboChartVisualArgs) ToTemplateComboChartVisualPtrOutputWithContext(ctx context.Context) TemplateComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartVisualOutput).ToTemplateComboChartVisualPtrOutputWithContext(ctx)
}

// TemplateComboChartVisualPtrInput is an input type that accepts TemplateComboChartVisualArgs, TemplateComboChartVisualPtr and TemplateComboChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateComboChartVisualPtrInput` via:
//
//	        TemplateComboChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateComboChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateComboChartVisualPtrOutput() TemplateComboChartVisualPtrOutput
	ToTemplateComboChartVisualPtrOutputWithContext(context.Context) TemplateComboChartVisualPtrOutput
}

type templateComboChartVisualPtrType TemplateComboChartVisualArgs

func TemplateComboChartVisualPtr(v *TemplateComboChartVisualArgs) TemplateComboChartVisualPtrInput {
	return (*templateComboChartVisualPtrType)(v)
}

func (*templateComboChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartVisual)(nil)).Elem()
}

func (i *templateComboChartVisualPtrType) ToTemplateComboChartVisualPtrOutput() TemplateComboChartVisualPtrOutput {
	return i.ToTemplateComboChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateComboChartVisualPtrType) ToTemplateComboChartVisualPtrOutputWithContext(ctx context.Context) TemplateComboChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComboChartVisualPtrOutput)
}

type TemplateComboChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateComboChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComboChartVisual)(nil)).Elem()
}

func (o TemplateComboChartVisualOutput) ToTemplateComboChartVisualOutput() TemplateComboChartVisualOutput {
	return o
}

func (o TemplateComboChartVisualOutput) ToTemplateComboChartVisualOutputWithContext(ctx context.Context) TemplateComboChartVisualOutput {
	return o
}

func (o TemplateComboChartVisualOutput) ToTemplateComboChartVisualPtrOutput() TemplateComboChartVisualPtrOutput {
	return o.ToTemplateComboChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateComboChartVisualOutput) ToTemplateComboChartVisualPtrOutputWithContext(ctx context.Context) TemplateComboChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComboChartVisual) *TemplateComboChartVisual {
		return &v
	}).(TemplateComboChartVisualPtrOutput)
}

func (o TemplateComboChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateComboChartVisualOutput) ChartConfiguration() TemplateComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) *TemplateComboChartConfiguration { return v.ChartConfiguration }).(TemplateComboChartConfigurationPtrOutput)
}

func (o TemplateComboChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateComboChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateComboChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateComboChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateComboChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateComboChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateComboChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComboChartVisual)(nil)).Elem()
}

func (o TemplateComboChartVisualPtrOutput) ToTemplateComboChartVisualPtrOutput() TemplateComboChartVisualPtrOutput {
	return o
}

func (o TemplateComboChartVisualPtrOutput) ToTemplateComboChartVisualPtrOutputWithContext(ctx context.Context) TemplateComboChartVisualPtrOutput {
	return o
}

func (o TemplateComboChartVisualPtrOutput) Elem() TemplateComboChartVisualOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) TemplateComboChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateComboChartVisual
		return ret
	}).(TemplateComboChartVisualOutput)
}

func (o TemplateComboChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateComboChartVisualPtrOutput) ChartConfiguration() TemplateComboChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) *TemplateComboChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateComboChartConfigurationPtrOutput)
}

func (o TemplateComboChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateComboChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateComboChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateComboChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateComboChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateComparisonConfiguration struct {
	ComparisonFormat *TemplateComparisonFormatConfiguration `pulumi:"comparisonFormat"`
	ComparisonMethod *TemplateComparisonMethod              `pulumi:"comparisonMethod"`
}

// TemplateComparisonConfigurationInput is an input type that accepts TemplateComparisonConfigurationArgs and TemplateComparisonConfigurationOutput values.
// You can construct a concrete instance of `TemplateComparisonConfigurationInput` via:
//
//	TemplateComparisonConfigurationArgs{...}
type TemplateComparisonConfigurationInput interface {
	pulumi.Input

	ToTemplateComparisonConfigurationOutput() TemplateComparisonConfigurationOutput
	ToTemplateComparisonConfigurationOutputWithContext(context.Context) TemplateComparisonConfigurationOutput
}

type TemplateComparisonConfigurationArgs struct {
	ComparisonFormat TemplateComparisonFormatConfigurationPtrInput `pulumi:"comparisonFormat"`
	ComparisonMethod TemplateComparisonMethodPtrInput              `pulumi:"comparisonMethod"`
}

func (TemplateComparisonConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonConfiguration)(nil)).Elem()
}

func (i TemplateComparisonConfigurationArgs) ToTemplateComparisonConfigurationOutput() TemplateComparisonConfigurationOutput {
	return i.ToTemplateComparisonConfigurationOutputWithContext(context.Background())
}

func (i TemplateComparisonConfigurationArgs) ToTemplateComparisonConfigurationOutputWithContext(ctx context.Context) TemplateComparisonConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonConfigurationOutput)
}

func (i TemplateComparisonConfigurationArgs) ToTemplateComparisonConfigurationPtrOutput() TemplateComparisonConfigurationPtrOutput {
	return i.ToTemplateComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateComparisonConfigurationArgs) ToTemplateComparisonConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonConfigurationOutput).ToTemplateComparisonConfigurationPtrOutputWithContext(ctx)
}

// TemplateComparisonConfigurationPtrInput is an input type that accepts TemplateComparisonConfigurationArgs, TemplateComparisonConfigurationPtr and TemplateComparisonConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateComparisonConfigurationPtrInput` via:
//
//	        TemplateComparisonConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateComparisonConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateComparisonConfigurationPtrOutput() TemplateComparisonConfigurationPtrOutput
	ToTemplateComparisonConfigurationPtrOutputWithContext(context.Context) TemplateComparisonConfigurationPtrOutput
}

type templateComparisonConfigurationPtrType TemplateComparisonConfigurationArgs

func TemplateComparisonConfigurationPtr(v *TemplateComparisonConfigurationArgs) TemplateComparisonConfigurationPtrInput {
	return (*templateComparisonConfigurationPtrType)(v)
}

func (*templateComparisonConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComparisonConfiguration)(nil)).Elem()
}

func (i *templateComparisonConfigurationPtrType) ToTemplateComparisonConfigurationPtrOutput() TemplateComparisonConfigurationPtrOutput {
	return i.ToTemplateComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateComparisonConfigurationPtrType) ToTemplateComparisonConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonConfigurationPtrOutput)
}

type TemplateComparisonConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateComparisonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonConfiguration)(nil)).Elem()
}

func (o TemplateComparisonConfigurationOutput) ToTemplateComparisonConfigurationOutput() TemplateComparisonConfigurationOutput {
	return o
}

func (o TemplateComparisonConfigurationOutput) ToTemplateComparisonConfigurationOutputWithContext(ctx context.Context) TemplateComparisonConfigurationOutput {
	return o
}

func (o TemplateComparisonConfigurationOutput) ToTemplateComparisonConfigurationPtrOutput() TemplateComparisonConfigurationPtrOutput {
	return o.ToTemplateComparisonConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateComparisonConfigurationOutput) ToTemplateComparisonConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComparisonConfiguration) *TemplateComparisonConfiguration {
		return &v
	}).(TemplateComparisonConfigurationPtrOutput)
}

func (o TemplateComparisonConfigurationOutput) ComparisonFormat() TemplateComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComparisonConfiguration) *TemplateComparisonFormatConfiguration {
		return v.ComparisonFormat
	}).(TemplateComparisonFormatConfigurationPtrOutput)
}

func (o TemplateComparisonConfigurationOutput) ComparisonMethod() TemplateComparisonMethodPtrOutput {
	return o.ApplyT(func(v TemplateComparisonConfiguration) *TemplateComparisonMethod { return v.ComparisonMethod }).(TemplateComparisonMethodPtrOutput)
}

type TemplateComparisonConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateComparisonConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComparisonConfiguration)(nil)).Elem()
}

func (o TemplateComparisonConfigurationPtrOutput) ToTemplateComparisonConfigurationPtrOutput() TemplateComparisonConfigurationPtrOutput {
	return o
}

func (o TemplateComparisonConfigurationPtrOutput) ToTemplateComparisonConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonConfigurationPtrOutput {
	return o
}

func (o TemplateComparisonConfigurationPtrOutput) Elem() TemplateComparisonConfigurationOutput {
	return o.ApplyT(func(v *TemplateComparisonConfiguration) TemplateComparisonConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateComparisonConfiguration
		return ret
	}).(TemplateComparisonConfigurationOutput)
}

func (o TemplateComparisonConfigurationPtrOutput) ComparisonFormat() TemplateComparisonFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComparisonConfiguration) *TemplateComparisonFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.ComparisonFormat
	}).(TemplateComparisonFormatConfigurationPtrOutput)
}

func (o TemplateComparisonConfigurationPtrOutput) ComparisonMethod() TemplateComparisonMethodPtrOutput {
	return o.ApplyT(func(v *TemplateComparisonConfiguration) *TemplateComparisonMethod {
		if v == nil {
			return nil
		}
		return v.ComparisonMethod
	}).(TemplateComparisonMethodPtrOutput)
}

type TemplateComparisonFormatConfiguration struct {
	NumberDisplayFormatConfiguration     *TemplateNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *TemplatePercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// TemplateComparisonFormatConfigurationInput is an input type that accepts TemplateComparisonFormatConfigurationArgs and TemplateComparisonFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateComparisonFormatConfigurationInput` via:
//
//	TemplateComparisonFormatConfigurationArgs{...}
type TemplateComparisonFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateComparisonFormatConfigurationOutput() TemplateComparisonFormatConfigurationOutput
	ToTemplateComparisonFormatConfigurationOutputWithContext(context.Context) TemplateComparisonFormatConfigurationOutput
}

type TemplateComparisonFormatConfigurationArgs struct {
	NumberDisplayFormatConfiguration     TemplateNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration TemplatePercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (TemplateComparisonFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonFormatConfiguration)(nil)).Elem()
}

func (i TemplateComparisonFormatConfigurationArgs) ToTemplateComparisonFormatConfigurationOutput() TemplateComparisonFormatConfigurationOutput {
	return i.ToTemplateComparisonFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateComparisonFormatConfigurationArgs) ToTemplateComparisonFormatConfigurationOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonFormatConfigurationOutput)
}

func (i TemplateComparisonFormatConfigurationArgs) ToTemplateComparisonFormatConfigurationPtrOutput() TemplateComparisonFormatConfigurationPtrOutput {
	return i.ToTemplateComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateComparisonFormatConfigurationArgs) ToTemplateComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonFormatConfigurationOutput).ToTemplateComparisonFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateComparisonFormatConfigurationPtrInput is an input type that accepts TemplateComparisonFormatConfigurationArgs, TemplateComparisonFormatConfigurationPtr and TemplateComparisonFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateComparisonFormatConfigurationPtrInput` via:
//
//	        TemplateComparisonFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateComparisonFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateComparisonFormatConfigurationPtrOutput() TemplateComparisonFormatConfigurationPtrOutput
	ToTemplateComparisonFormatConfigurationPtrOutputWithContext(context.Context) TemplateComparisonFormatConfigurationPtrOutput
}

type templateComparisonFormatConfigurationPtrType TemplateComparisonFormatConfigurationArgs

func TemplateComparisonFormatConfigurationPtr(v *TemplateComparisonFormatConfigurationArgs) TemplateComparisonFormatConfigurationPtrInput {
	return (*templateComparisonFormatConfigurationPtrType)(v)
}

func (*templateComparisonFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComparisonFormatConfiguration)(nil)).Elem()
}

func (i *templateComparisonFormatConfigurationPtrType) ToTemplateComparisonFormatConfigurationPtrOutput() TemplateComparisonFormatConfigurationPtrOutput {
	return i.ToTemplateComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateComparisonFormatConfigurationPtrType) ToTemplateComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComparisonFormatConfigurationPtrOutput)
}

type TemplateComparisonFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateComparisonFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComparisonFormatConfiguration)(nil)).Elem()
}

func (o TemplateComparisonFormatConfigurationOutput) ToTemplateComparisonFormatConfigurationOutput() TemplateComparisonFormatConfigurationOutput {
	return o
}

func (o TemplateComparisonFormatConfigurationOutput) ToTemplateComparisonFormatConfigurationOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationOutput {
	return o
}

func (o TemplateComparisonFormatConfigurationOutput) ToTemplateComparisonFormatConfigurationPtrOutput() TemplateComparisonFormatConfigurationPtrOutput {
	return o.ToTemplateComparisonFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateComparisonFormatConfigurationOutput) ToTemplateComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateComparisonFormatConfiguration) *TemplateComparisonFormatConfiguration {
		return &v
	}).(TemplateComparisonFormatConfigurationPtrOutput)
}

func (o TemplateComparisonFormatConfigurationOutput) NumberDisplayFormatConfiguration() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComparisonFormatConfiguration) *TemplateNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

func (o TemplateComparisonFormatConfigurationOutput) PercentageDisplayFormatConfiguration() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateComparisonFormatConfiguration) *TemplatePercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

type TemplateComparisonFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateComparisonFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateComparisonFormatConfiguration)(nil)).Elem()
}

func (o TemplateComparisonFormatConfigurationPtrOutput) ToTemplateComparisonFormatConfigurationPtrOutput() TemplateComparisonFormatConfigurationPtrOutput {
	return o
}

func (o TemplateComparisonFormatConfigurationPtrOutput) ToTemplateComparisonFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateComparisonFormatConfigurationPtrOutput {
	return o
}

func (o TemplateComparisonFormatConfigurationPtrOutput) Elem() TemplateComparisonFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateComparisonFormatConfiguration) TemplateComparisonFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateComparisonFormatConfiguration
		return ret
	}).(TemplateComparisonFormatConfigurationOutput)
}

func (o TemplateComparisonFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComparisonFormatConfiguration) *TemplateNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

func (o TemplateComparisonFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateComparisonFormatConfiguration) *TemplatePercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

type TemplateComputation struct {
	Forecast         *TemplateForecastComputation         `pulumi:"forecast"`
	GrowthRate       *TemplateGrowthRateComputation       `pulumi:"growthRate"`
	MaximumMinimum   *TemplateMaximumMinimumComputation   `pulumi:"maximumMinimum"`
	MetricComparison *TemplateMetricComparisonComputation `pulumi:"metricComparison"`
	PeriodOverPeriod *TemplatePeriodOverPeriodComputation `pulumi:"periodOverPeriod"`
	PeriodToDate     *TemplatePeriodToDateComputation     `pulumi:"periodToDate"`
	TopBottomMovers  *TemplateTopBottomMoversComputation  `pulumi:"topBottomMovers"`
	TopBottomRanked  *TemplateTopBottomRankedComputation  `pulumi:"topBottomRanked"`
	TotalAggregation *TemplateTotalAggregationComputation `pulumi:"totalAggregation"`
	UniqueValues     *TemplateUniqueValuesComputation     `pulumi:"uniqueValues"`
}

// TemplateComputationInput is an input type that accepts TemplateComputationArgs and TemplateComputationOutput values.
// You can construct a concrete instance of `TemplateComputationInput` via:
//
//	TemplateComputationArgs{...}
type TemplateComputationInput interface {
	pulumi.Input

	ToTemplateComputationOutput() TemplateComputationOutput
	ToTemplateComputationOutputWithContext(context.Context) TemplateComputationOutput
}

type TemplateComputationArgs struct {
	Forecast         TemplateForecastComputationPtrInput         `pulumi:"forecast"`
	GrowthRate       TemplateGrowthRateComputationPtrInput       `pulumi:"growthRate"`
	MaximumMinimum   TemplateMaximumMinimumComputationPtrInput   `pulumi:"maximumMinimum"`
	MetricComparison TemplateMetricComparisonComputationPtrInput `pulumi:"metricComparison"`
	PeriodOverPeriod TemplatePeriodOverPeriodComputationPtrInput `pulumi:"periodOverPeriod"`
	PeriodToDate     TemplatePeriodToDateComputationPtrInput     `pulumi:"periodToDate"`
	TopBottomMovers  TemplateTopBottomMoversComputationPtrInput  `pulumi:"topBottomMovers"`
	TopBottomRanked  TemplateTopBottomRankedComputationPtrInput  `pulumi:"topBottomRanked"`
	TotalAggregation TemplateTotalAggregationComputationPtrInput `pulumi:"totalAggregation"`
	UniqueValues     TemplateUniqueValuesComputationPtrInput     `pulumi:"uniqueValues"`
}

func (TemplateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComputation)(nil)).Elem()
}

func (i TemplateComputationArgs) ToTemplateComputationOutput() TemplateComputationOutput {
	return i.ToTemplateComputationOutputWithContext(context.Background())
}

func (i TemplateComputationArgs) ToTemplateComputationOutputWithContext(ctx context.Context) TemplateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComputationOutput)
}

// TemplateComputationArrayInput is an input type that accepts TemplateComputationArray and TemplateComputationArrayOutput values.
// You can construct a concrete instance of `TemplateComputationArrayInput` via:
//
//	TemplateComputationArray{ TemplateComputationArgs{...} }
type TemplateComputationArrayInput interface {
	pulumi.Input

	ToTemplateComputationArrayOutput() TemplateComputationArrayOutput
	ToTemplateComputationArrayOutputWithContext(context.Context) TemplateComputationArrayOutput
}

type TemplateComputationArray []TemplateComputationInput

func (TemplateComputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateComputation)(nil)).Elem()
}

func (i TemplateComputationArray) ToTemplateComputationArrayOutput() TemplateComputationArrayOutput {
	return i.ToTemplateComputationArrayOutputWithContext(context.Background())
}

func (i TemplateComputationArray) ToTemplateComputationArrayOutputWithContext(ctx context.Context) TemplateComputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateComputationArrayOutput)
}

type TemplateComputationOutput struct{ *pulumi.OutputState }

func (TemplateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateComputation)(nil)).Elem()
}

func (o TemplateComputationOutput) ToTemplateComputationOutput() TemplateComputationOutput {
	return o
}

func (o TemplateComputationOutput) ToTemplateComputationOutputWithContext(ctx context.Context) TemplateComputationOutput {
	return o
}

func (o TemplateComputationOutput) Forecast() TemplateForecastComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateForecastComputation { return v.Forecast }).(TemplateForecastComputationPtrOutput)
}

func (o TemplateComputationOutput) GrowthRate() TemplateGrowthRateComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateGrowthRateComputation { return v.GrowthRate }).(TemplateGrowthRateComputationPtrOutput)
}

func (o TemplateComputationOutput) MaximumMinimum() TemplateMaximumMinimumComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateMaximumMinimumComputation { return v.MaximumMinimum }).(TemplateMaximumMinimumComputationPtrOutput)
}

func (o TemplateComputationOutput) MetricComparison() TemplateMetricComparisonComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateMetricComparisonComputation { return v.MetricComparison }).(TemplateMetricComparisonComputationPtrOutput)
}

func (o TemplateComputationOutput) PeriodOverPeriod() TemplatePeriodOverPeriodComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplatePeriodOverPeriodComputation { return v.PeriodOverPeriod }).(TemplatePeriodOverPeriodComputationPtrOutput)
}

func (o TemplateComputationOutput) PeriodToDate() TemplatePeriodToDateComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplatePeriodToDateComputation { return v.PeriodToDate }).(TemplatePeriodToDateComputationPtrOutput)
}

func (o TemplateComputationOutput) TopBottomMovers() TemplateTopBottomMoversComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateTopBottomMoversComputation { return v.TopBottomMovers }).(TemplateTopBottomMoversComputationPtrOutput)
}

func (o TemplateComputationOutput) TopBottomRanked() TemplateTopBottomRankedComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateTopBottomRankedComputation { return v.TopBottomRanked }).(TemplateTopBottomRankedComputationPtrOutput)
}

func (o TemplateComputationOutput) TotalAggregation() TemplateTotalAggregationComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateTotalAggregationComputation { return v.TotalAggregation }).(TemplateTotalAggregationComputationPtrOutput)
}

func (o TemplateComputationOutput) UniqueValues() TemplateUniqueValuesComputationPtrOutput {
	return o.ApplyT(func(v TemplateComputation) *TemplateUniqueValuesComputation { return v.UniqueValues }).(TemplateUniqueValuesComputationPtrOutput)
}

type TemplateComputationArrayOutput struct{ *pulumi.OutputState }

func (TemplateComputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateComputation)(nil)).Elem()
}

func (o TemplateComputationArrayOutput) ToTemplateComputationArrayOutput() TemplateComputationArrayOutput {
	return o
}

func (o TemplateComputationArrayOutput) ToTemplateComputationArrayOutputWithContext(ctx context.Context) TemplateComputationArrayOutput {
	return o
}

func (o TemplateComputationArrayOutput) Index(i pulumi.IntInput) TemplateComputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateComputation {
		return vs[0].([]TemplateComputation)[vs[1].(int)]
	}).(TemplateComputationOutput)
}

type TemplateConditionalFormattingColor struct {
	Gradient *TemplateConditionalFormattingGradientColor `pulumi:"gradient"`
	Solid    *TemplateConditionalFormattingSolidColor    `pulumi:"solid"`
}

// TemplateConditionalFormattingColorInput is an input type that accepts TemplateConditionalFormattingColorArgs and TemplateConditionalFormattingColorOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingColorInput` via:
//
//	TemplateConditionalFormattingColorArgs{...}
type TemplateConditionalFormattingColorInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingColorOutput() TemplateConditionalFormattingColorOutput
	ToTemplateConditionalFormattingColorOutputWithContext(context.Context) TemplateConditionalFormattingColorOutput
}

type TemplateConditionalFormattingColorArgs struct {
	Gradient TemplateConditionalFormattingGradientColorPtrInput `pulumi:"gradient"`
	Solid    TemplateConditionalFormattingSolidColorPtrInput    `pulumi:"solid"`
}

func (TemplateConditionalFormattingColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingColor)(nil)).Elem()
}

func (i TemplateConditionalFormattingColorArgs) ToTemplateConditionalFormattingColorOutput() TemplateConditionalFormattingColorOutput {
	return i.ToTemplateConditionalFormattingColorOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingColorArgs) ToTemplateConditionalFormattingColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingColorOutput)
}

func (i TemplateConditionalFormattingColorArgs) ToTemplateConditionalFormattingColorPtrOutput() TemplateConditionalFormattingColorPtrOutput {
	return i.ToTemplateConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingColorArgs) ToTemplateConditionalFormattingColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingColorOutput).ToTemplateConditionalFormattingColorPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingColorPtrInput is an input type that accepts TemplateConditionalFormattingColorArgs, TemplateConditionalFormattingColorPtr and TemplateConditionalFormattingColorPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingColorPtrInput` via:
//
//	        TemplateConditionalFormattingColorArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingColorPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingColorPtrOutput() TemplateConditionalFormattingColorPtrOutput
	ToTemplateConditionalFormattingColorPtrOutputWithContext(context.Context) TemplateConditionalFormattingColorPtrOutput
}

type templateConditionalFormattingColorPtrType TemplateConditionalFormattingColorArgs

func TemplateConditionalFormattingColorPtr(v *TemplateConditionalFormattingColorArgs) TemplateConditionalFormattingColorPtrInput {
	return (*templateConditionalFormattingColorPtrType)(v)
}

func (*templateConditionalFormattingColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingColor)(nil)).Elem()
}

func (i *templateConditionalFormattingColorPtrType) ToTemplateConditionalFormattingColorPtrOutput() TemplateConditionalFormattingColorPtrOutput {
	return i.ToTemplateConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingColorPtrType) ToTemplateConditionalFormattingColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateConditionalFormattingColorOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingColorOutput) ToTemplateConditionalFormattingColorOutput() TemplateConditionalFormattingColorOutput {
	return o
}

func (o TemplateConditionalFormattingColorOutput) ToTemplateConditionalFormattingColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorOutput {
	return o
}

func (o TemplateConditionalFormattingColorOutput) ToTemplateConditionalFormattingColorPtrOutput() TemplateConditionalFormattingColorPtrOutput {
	return o.ToTemplateConditionalFormattingColorPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingColorOutput) ToTemplateConditionalFormattingColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingColor) *TemplateConditionalFormattingColor {
		return &v
	}).(TemplateConditionalFormattingColorPtrOutput)
}

func (o TemplateConditionalFormattingColorOutput) Gradient() TemplateConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingColor) *TemplateConditionalFormattingGradientColor {
		return v.Gradient
	}).(TemplateConditionalFormattingGradientColorPtrOutput)
}

func (o TemplateConditionalFormattingColorOutput) Solid() TemplateConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingColor) *TemplateConditionalFormattingSolidColor { return v.Solid }).(TemplateConditionalFormattingSolidColorPtrOutput)
}

type TemplateConditionalFormattingColorPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingColorPtrOutput) ToTemplateConditionalFormattingColorPtrOutput() TemplateConditionalFormattingColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingColorPtrOutput) ToTemplateConditionalFormattingColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingColorPtrOutput) Elem() TemplateConditionalFormattingColorOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingColor) TemplateConditionalFormattingColor {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingColor
		return ret
	}).(TemplateConditionalFormattingColorOutput)
}

func (o TemplateConditionalFormattingColorPtrOutput) Gradient() TemplateConditionalFormattingGradientColorPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingColor) *TemplateConditionalFormattingGradientColor {
		if v == nil {
			return nil
		}
		return v.Gradient
	}).(TemplateConditionalFormattingGradientColorPtrOutput)
}

func (o TemplateConditionalFormattingColorPtrOutput) Solid() TemplateConditionalFormattingSolidColorPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingColor) *TemplateConditionalFormattingSolidColor {
		if v == nil {
			return nil
		}
		return v.Solid
	}).(TemplateConditionalFormattingSolidColorPtrOutput)
}

type TemplateConditionalFormattingCustomIconCondition struct {
	Color                *string                                                `pulumi:"color"`
	DisplayConfiguration *TemplateConditionalFormattingIconDisplayConfiguration `pulumi:"displayConfiguration"`
	Expression           string                                                 `pulumi:"expression"`
	IconOptions          TemplateConditionalFormattingCustomIconOptions         `pulumi:"iconOptions"`
}

// TemplateConditionalFormattingCustomIconConditionInput is an input type that accepts TemplateConditionalFormattingCustomIconConditionArgs and TemplateConditionalFormattingCustomIconConditionOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingCustomIconConditionInput` via:
//
//	TemplateConditionalFormattingCustomIconConditionArgs{...}
type TemplateConditionalFormattingCustomIconConditionInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingCustomIconConditionOutput() TemplateConditionalFormattingCustomIconConditionOutput
	ToTemplateConditionalFormattingCustomIconConditionOutputWithContext(context.Context) TemplateConditionalFormattingCustomIconConditionOutput
}

type TemplateConditionalFormattingCustomIconConditionArgs struct {
	Color                pulumi.StringPtrInput                                         `pulumi:"color"`
	DisplayConfiguration TemplateConditionalFormattingIconDisplayConfigurationPtrInput `pulumi:"displayConfiguration"`
	Expression           pulumi.StringInput                                            `pulumi:"expression"`
	IconOptions          TemplateConditionalFormattingCustomIconOptionsInput           `pulumi:"iconOptions"`
}

func (TemplateConditionalFormattingCustomIconConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i TemplateConditionalFormattingCustomIconConditionArgs) ToTemplateConditionalFormattingCustomIconConditionOutput() TemplateConditionalFormattingCustomIconConditionOutput {
	return i.ToTemplateConditionalFormattingCustomIconConditionOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingCustomIconConditionArgs) ToTemplateConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconConditionOutput)
}

func (i TemplateConditionalFormattingCustomIconConditionArgs) ToTemplateConditionalFormattingCustomIconConditionPtrOutput() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingCustomIconConditionArgs) ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconConditionOutput).ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingCustomIconConditionPtrInput is an input type that accepts TemplateConditionalFormattingCustomIconConditionArgs, TemplateConditionalFormattingCustomIconConditionPtr and TemplateConditionalFormattingCustomIconConditionPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingCustomIconConditionPtrInput` via:
//
//	        TemplateConditionalFormattingCustomIconConditionArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingCustomIconConditionPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingCustomIconConditionPtrOutput() TemplateConditionalFormattingCustomIconConditionPtrOutput
	ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Context) TemplateConditionalFormattingCustomIconConditionPtrOutput
}

type templateConditionalFormattingCustomIconConditionPtrType TemplateConditionalFormattingCustomIconConditionArgs

func TemplateConditionalFormattingCustomIconConditionPtr(v *TemplateConditionalFormattingCustomIconConditionArgs) TemplateConditionalFormattingCustomIconConditionPtrInput {
	return (*templateConditionalFormattingCustomIconConditionPtrType)(v)
}

func (*templateConditionalFormattingCustomIconConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (i *templateConditionalFormattingCustomIconConditionPtrType) ToTemplateConditionalFormattingCustomIconConditionPtrOutput() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return i.ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingCustomIconConditionPtrType) ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconConditionPtrOutput)
}

type TemplateConditionalFormattingCustomIconConditionOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingCustomIconConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) ToTemplateConditionalFormattingCustomIconConditionOutput() TemplateConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) ToTemplateConditionalFormattingCustomIconConditionOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) ToTemplateConditionalFormattingCustomIconConditionPtrOutput() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o.ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingCustomIconCondition) *TemplateConditionalFormattingCustomIconCondition {
		return &v
	}).(TemplateConditionalFormattingCustomIconConditionPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconCondition) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) DisplayConfiguration() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconCondition) *TemplateConditionalFormattingIconDisplayConfiguration {
		return v.DisplayConfiguration
	}).(TemplateConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionOutput) IconOptions() TemplateConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconCondition) TemplateConditionalFormattingCustomIconOptions {
		return v.IconOptions
	}).(TemplateConditionalFormattingCustomIconOptionsOutput)
}

type TemplateConditionalFormattingCustomIconConditionPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingCustomIconConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingCustomIconCondition)(nil)).Elem()
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) ToTemplateConditionalFormattingCustomIconConditionPtrOutput() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) ToTemplateConditionalFormattingCustomIconConditionPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) Elem() TemplateConditionalFormattingCustomIconConditionOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconCondition) TemplateConditionalFormattingCustomIconCondition {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingCustomIconCondition
		return ret
	}).(TemplateConditionalFormattingCustomIconConditionOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) DisplayConfiguration() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconCondition) *TemplateConditionalFormattingIconDisplayConfiguration {
		if v == nil {
			return nil
		}
		return v.DisplayConfiguration
	}).(TemplateConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconConditionPtrOutput) IconOptions() TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconCondition) *TemplateConditionalFormattingCustomIconOptions {
		if v == nil {
			return nil
		}
		return &v.IconOptions
	}).(TemplateConditionalFormattingCustomIconOptionsPtrOutput)
}

type TemplateConditionalFormattingCustomIconOptions struct {
	Icon        *TemplateIcon `pulumi:"icon"`
	UnicodeIcon *string       `pulumi:"unicodeIcon"`
}

// TemplateConditionalFormattingCustomIconOptionsInput is an input type that accepts TemplateConditionalFormattingCustomIconOptionsArgs and TemplateConditionalFormattingCustomIconOptionsOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingCustomIconOptionsInput` via:
//
//	TemplateConditionalFormattingCustomIconOptionsArgs{...}
type TemplateConditionalFormattingCustomIconOptionsInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingCustomIconOptionsOutput() TemplateConditionalFormattingCustomIconOptionsOutput
	ToTemplateConditionalFormattingCustomIconOptionsOutputWithContext(context.Context) TemplateConditionalFormattingCustomIconOptionsOutput
}

type TemplateConditionalFormattingCustomIconOptionsArgs struct {
	Icon        TemplateIconPtrInput  `pulumi:"icon"`
	UnicodeIcon pulumi.StringPtrInput `pulumi:"unicodeIcon"`
}

func (TemplateConditionalFormattingCustomIconOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i TemplateConditionalFormattingCustomIconOptionsArgs) ToTemplateConditionalFormattingCustomIconOptionsOutput() TemplateConditionalFormattingCustomIconOptionsOutput {
	return i.ToTemplateConditionalFormattingCustomIconOptionsOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingCustomIconOptionsArgs) ToTemplateConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconOptionsOutput)
}

func (i TemplateConditionalFormattingCustomIconOptionsArgs) ToTemplateConditionalFormattingCustomIconOptionsPtrOutput() TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingCustomIconOptionsArgs) ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconOptionsOutput).ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingCustomIconOptionsPtrInput is an input type that accepts TemplateConditionalFormattingCustomIconOptionsArgs, TemplateConditionalFormattingCustomIconOptionsPtr and TemplateConditionalFormattingCustomIconOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingCustomIconOptionsPtrInput` via:
//
//	        TemplateConditionalFormattingCustomIconOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingCustomIconOptionsPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingCustomIconOptionsPtrOutput() TemplateConditionalFormattingCustomIconOptionsPtrOutput
	ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Context) TemplateConditionalFormattingCustomIconOptionsPtrOutput
}

type templateConditionalFormattingCustomIconOptionsPtrType TemplateConditionalFormattingCustomIconOptionsArgs

func TemplateConditionalFormattingCustomIconOptionsPtr(v *TemplateConditionalFormattingCustomIconOptionsArgs) TemplateConditionalFormattingCustomIconOptionsPtrInput {
	return (*templateConditionalFormattingCustomIconOptionsPtrType)(v)
}

func (*templateConditionalFormattingCustomIconOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (i *templateConditionalFormattingCustomIconOptionsPtrType) ToTemplateConditionalFormattingCustomIconOptionsPtrOutput() TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return i.ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingCustomIconOptionsPtrType) ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingCustomIconOptionsPtrOutput)
}

type TemplateConditionalFormattingCustomIconOptionsOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingCustomIconOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) ToTemplateConditionalFormattingCustomIconOptionsOutput() TemplateConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) ToTemplateConditionalFormattingCustomIconOptionsOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) ToTemplateConditionalFormattingCustomIconOptionsPtrOutput() TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingCustomIconOptions) *TemplateConditionalFormattingCustomIconOptions {
		return &v
	}).(TemplateConditionalFormattingCustomIconOptionsPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) Icon() TemplateIconPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconOptions) *TemplateIcon { return v.Icon }).(TemplateIconPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconOptionsOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingCustomIconOptions) *string { return v.UnicodeIcon }).(pulumi.StringPtrOutput)
}

type TemplateConditionalFormattingCustomIconOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingCustomIconOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingCustomIconOptions)(nil)).Elem()
}

func (o TemplateConditionalFormattingCustomIconOptionsPtrOutput) ToTemplateConditionalFormattingCustomIconOptionsPtrOutput() TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconOptionsPtrOutput) ToTemplateConditionalFormattingCustomIconOptionsPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingCustomIconOptionsPtrOutput {
	return o
}

func (o TemplateConditionalFormattingCustomIconOptionsPtrOutput) Elem() TemplateConditionalFormattingCustomIconOptionsOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconOptions) TemplateConditionalFormattingCustomIconOptions {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingCustomIconOptions
		return ret
	}).(TemplateConditionalFormattingCustomIconOptionsOutput)
}

func (o TemplateConditionalFormattingCustomIconOptionsPtrOutput) Icon() TemplateIconPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconOptions) *TemplateIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateIconPtrOutput)
}

func (o TemplateConditionalFormattingCustomIconOptionsPtrOutput) UnicodeIcon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingCustomIconOptions) *string {
		if v == nil {
			return nil
		}
		return v.UnicodeIcon
	}).(pulumi.StringPtrOutput)
}

type TemplateConditionalFormattingGradientColor struct {
	Color      TemplateGradientColor `pulumi:"color"`
	Expression string                `pulumi:"expression"`
}

// TemplateConditionalFormattingGradientColorInput is an input type that accepts TemplateConditionalFormattingGradientColorArgs and TemplateConditionalFormattingGradientColorOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingGradientColorInput` via:
//
//	TemplateConditionalFormattingGradientColorArgs{...}
type TemplateConditionalFormattingGradientColorInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingGradientColorOutput() TemplateConditionalFormattingGradientColorOutput
	ToTemplateConditionalFormattingGradientColorOutputWithContext(context.Context) TemplateConditionalFormattingGradientColorOutput
}

type TemplateConditionalFormattingGradientColorArgs struct {
	Color      TemplateGradientColorInput `pulumi:"color"`
	Expression pulumi.StringInput         `pulumi:"expression"`
}

func (TemplateConditionalFormattingGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingGradientColor)(nil)).Elem()
}

func (i TemplateConditionalFormattingGradientColorArgs) ToTemplateConditionalFormattingGradientColorOutput() TemplateConditionalFormattingGradientColorOutput {
	return i.ToTemplateConditionalFormattingGradientColorOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingGradientColorArgs) ToTemplateConditionalFormattingGradientColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingGradientColorOutput)
}

func (i TemplateConditionalFormattingGradientColorArgs) ToTemplateConditionalFormattingGradientColorPtrOutput() TemplateConditionalFormattingGradientColorPtrOutput {
	return i.ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingGradientColorArgs) ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingGradientColorOutput).ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingGradientColorPtrInput is an input type that accepts TemplateConditionalFormattingGradientColorArgs, TemplateConditionalFormattingGradientColorPtr and TemplateConditionalFormattingGradientColorPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingGradientColorPtrInput` via:
//
//	        TemplateConditionalFormattingGradientColorArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingGradientColorPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingGradientColorPtrOutput() TemplateConditionalFormattingGradientColorPtrOutput
	ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(context.Context) TemplateConditionalFormattingGradientColorPtrOutput
}

type templateConditionalFormattingGradientColorPtrType TemplateConditionalFormattingGradientColorArgs

func TemplateConditionalFormattingGradientColorPtr(v *TemplateConditionalFormattingGradientColorArgs) TemplateConditionalFormattingGradientColorPtrInput {
	return (*templateConditionalFormattingGradientColorPtrType)(v)
}

func (*templateConditionalFormattingGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingGradientColor)(nil)).Elem()
}

func (i *templateConditionalFormattingGradientColorPtrType) ToTemplateConditionalFormattingGradientColorPtrOutput() TemplateConditionalFormattingGradientColorPtrOutput {
	return i.ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingGradientColorPtrType) ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingGradientColorPtrOutput)
}

type TemplateConditionalFormattingGradientColorOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingGradientColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingGradientColorOutput) ToTemplateConditionalFormattingGradientColorOutput() TemplateConditionalFormattingGradientColorOutput {
	return o
}

func (o TemplateConditionalFormattingGradientColorOutput) ToTemplateConditionalFormattingGradientColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorOutput {
	return o
}

func (o TemplateConditionalFormattingGradientColorOutput) ToTemplateConditionalFormattingGradientColorPtrOutput() TemplateConditionalFormattingGradientColorPtrOutput {
	return o.ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingGradientColorOutput) ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingGradientColor) *TemplateConditionalFormattingGradientColor {
		return &v
	}).(TemplateConditionalFormattingGradientColorPtrOutput)
}

func (o TemplateConditionalFormattingGradientColorOutput) Color() TemplateGradientColorOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingGradientColor) TemplateGradientColor { return v.Color }).(TemplateGradientColorOutput)
}

func (o TemplateConditionalFormattingGradientColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingGradientColor) string { return v.Expression }).(pulumi.StringOutput)
}

type TemplateConditionalFormattingGradientColorPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingGradientColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingGradientColorPtrOutput) ToTemplateConditionalFormattingGradientColorPtrOutput() TemplateConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingGradientColorPtrOutput) ToTemplateConditionalFormattingGradientColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingGradientColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingGradientColorPtrOutput) Elem() TemplateConditionalFormattingGradientColorOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingGradientColor) TemplateConditionalFormattingGradientColor {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingGradientColor
		return ret
	}).(TemplateConditionalFormattingGradientColorOutput)
}

func (o TemplateConditionalFormattingGradientColorPtrOutput) Color() TemplateGradientColorPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingGradientColor) *TemplateGradientColor {
		if v == nil {
			return nil
		}
		return &v.Color
	}).(TemplateGradientColorPtrOutput)
}

func (o TemplateConditionalFormattingGradientColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingGradientColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type TemplateConditionalFormattingIcon struct {
	CustomCondition *TemplateConditionalFormattingCustomIconCondition `pulumi:"customCondition"`
	IconSet         *TemplateConditionalFormattingIconSet             `pulumi:"iconSet"`
}

// TemplateConditionalFormattingIconInput is an input type that accepts TemplateConditionalFormattingIconArgs and TemplateConditionalFormattingIconOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconInput` via:
//
//	TemplateConditionalFormattingIconArgs{...}
type TemplateConditionalFormattingIconInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconOutput() TemplateConditionalFormattingIconOutput
	ToTemplateConditionalFormattingIconOutputWithContext(context.Context) TemplateConditionalFormattingIconOutput
}

type TemplateConditionalFormattingIconArgs struct {
	CustomCondition TemplateConditionalFormattingCustomIconConditionPtrInput `pulumi:"customCondition"`
	IconSet         TemplateConditionalFormattingIconSetPtrInput             `pulumi:"iconSet"`
}

func (TemplateConditionalFormattingIconArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIcon)(nil)).Elem()
}

func (i TemplateConditionalFormattingIconArgs) ToTemplateConditionalFormattingIconOutput() TemplateConditionalFormattingIconOutput {
	return i.ToTemplateConditionalFormattingIconOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconArgs) ToTemplateConditionalFormattingIconOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconOutput)
}

func (i TemplateConditionalFormattingIconArgs) ToTemplateConditionalFormattingIconPtrOutput() TemplateConditionalFormattingIconPtrOutput {
	return i.ToTemplateConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconArgs) ToTemplateConditionalFormattingIconPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconOutput).ToTemplateConditionalFormattingIconPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingIconPtrInput is an input type that accepts TemplateConditionalFormattingIconArgs, TemplateConditionalFormattingIconPtr and TemplateConditionalFormattingIconPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconPtrInput` via:
//
//	        TemplateConditionalFormattingIconArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingIconPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconPtrOutput() TemplateConditionalFormattingIconPtrOutput
	ToTemplateConditionalFormattingIconPtrOutputWithContext(context.Context) TemplateConditionalFormattingIconPtrOutput
}

type templateConditionalFormattingIconPtrType TemplateConditionalFormattingIconArgs

func TemplateConditionalFormattingIconPtr(v *TemplateConditionalFormattingIconArgs) TemplateConditionalFormattingIconPtrInput {
	return (*templateConditionalFormattingIconPtrType)(v)
}

func (*templateConditionalFormattingIconPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIcon)(nil)).Elem()
}

func (i *templateConditionalFormattingIconPtrType) ToTemplateConditionalFormattingIconPtrOutput() TemplateConditionalFormattingIconPtrOutput {
	return i.ToTemplateConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingIconPtrType) ToTemplateConditionalFormattingIconPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconPtrOutput)
}

type TemplateConditionalFormattingIconOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIcon)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconOutput) ToTemplateConditionalFormattingIconOutput() TemplateConditionalFormattingIconOutput {
	return o
}

func (o TemplateConditionalFormattingIconOutput) ToTemplateConditionalFormattingIconOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconOutput {
	return o
}

func (o TemplateConditionalFormattingIconOutput) ToTemplateConditionalFormattingIconPtrOutput() TemplateConditionalFormattingIconPtrOutput {
	return o.ToTemplateConditionalFormattingIconPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconOutput) ToTemplateConditionalFormattingIconPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingIcon) *TemplateConditionalFormattingIcon {
		return &v
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateConditionalFormattingIconOutput) CustomCondition() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingIcon) *TemplateConditionalFormattingCustomIconCondition {
		return v.CustomCondition
	}).(TemplateConditionalFormattingCustomIconConditionPtrOutput)
}

func (o TemplateConditionalFormattingIconOutput) IconSet() TemplateConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingIcon) *TemplateConditionalFormattingIconSet { return v.IconSet }).(TemplateConditionalFormattingIconSetPtrOutput)
}

type TemplateConditionalFormattingIconPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIcon)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconPtrOutput) ToTemplateConditionalFormattingIconPtrOutput() TemplateConditionalFormattingIconPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconPtrOutput) ToTemplateConditionalFormattingIconPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconPtrOutput) Elem() TemplateConditionalFormattingIconOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIcon) TemplateConditionalFormattingIcon {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingIcon
		return ret
	}).(TemplateConditionalFormattingIconOutput)
}

func (o TemplateConditionalFormattingIconPtrOutput) CustomCondition() TemplateConditionalFormattingCustomIconConditionPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIcon) *TemplateConditionalFormattingCustomIconCondition {
		if v == nil {
			return nil
		}
		return v.CustomCondition
	}).(TemplateConditionalFormattingCustomIconConditionPtrOutput)
}

func (o TemplateConditionalFormattingIconPtrOutput) IconSet() TemplateConditionalFormattingIconSetPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIcon) *TemplateConditionalFormattingIconSet {
		if v == nil {
			return nil
		}
		return v.IconSet
	}).(TemplateConditionalFormattingIconSetPtrOutput)
}

type TemplateConditionalFormattingIconDisplayConfiguration struct {
	IconDisplayOption *TemplateConditionalFormattingIconDisplayOption `pulumi:"iconDisplayOption"`
}

// TemplateConditionalFormattingIconDisplayConfigurationInput is an input type that accepts TemplateConditionalFormattingIconDisplayConfigurationArgs and TemplateConditionalFormattingIconDisplayConfigurationOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconDisplayConfigurationInput` via:
//
//	TemplateConditionalFormattingIconDisplayConfigurationArgs{...}
type TemplateConditionalFormattingIconDisplayConfigurationInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconDisplayConfigurationOutput() TemplateConditionalFormattingIconDisplayConfigurationOutput
	ToTemplateConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Context) TemplateConditionalFormattingIconDisplayConfigurationOutput
}

type TemplateConditionalFormattingIconDisplayConfigurationArgs struct {
	IconDisplayOption TemplateConditionalFormattingIconDisplayOptionPtrInput `pulumi:"iconDisplayOption"`
}

func (TemplateConditionalFormattingIconDisplayConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i TemplateConditionalFormattingIconDisplayConfigurationArgs) ToTemplateConditionalFormattingIconDisplayConfigurationOutput() TemplateConditionalFormattingIconDisplayConfigurationOutput {
	return i.ToTemplateConditionalFormattingIconDisplayConfigurationOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconDisplayConfigurationArgs) ToTemplateConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconDisplayConfigurationOutput)
}

func (i TemplateConditionalFormattingIconDisplayConfigurationArgs) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutput() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconDisplayConfigurationArgs) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconDisplayConfigurationOutput).ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingIconDisplayConfigurationPtrInput is an input type that accepts TemplateConditionalFormattingIconDisplayConfigurationArgs, TemplateConditionalFormattingIconDisplayConfigurationPtr and TemplateConditionalFormattingIconDisplayConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconDisplayConfigurationPtrInput` via:
//
//	        TemplateConditionalFormattingIconDisplayConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingIconDisplayConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutput() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput
	ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Context) TemplateConditionalFormattingIconDisplayConfigurationPtrOutput
}

type templateConditionalFormattingIconDisplayConfigurationPtrType TemplateConditionalFormattingIconDisplayConfigurationArgs

func TemplateConditionalFormattingIconDisplayConfigurationPtr(v *TemplateConditionalFormattingIconDisplayConfigurationArgs) TemplateConditionalFormattingIconDisplayConfigurationPtrInput {
	return (*templateConditionalFormattingIconDisplayConfigurationPtrType)(v)
}

func (*templateConditionalFormattingIconDisplayConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (i *templateConditionalFormattingIconDisplayConfigurationPtrType) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutput() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return i.ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingIconDisplayConfigurationPtrType) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconDisplayConfigurationPtrOutput)
}

type TemplateConditionalFormattingIconDisplayConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconDisplayConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconDisplayConfigurationOutput) ToTemplateConditionalFormattingIconDisplayConfigurationOutput() TemplateConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayConfigurationOutput) ToTemplateConditionalFormattingIconDisplayConfigurationOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayConfigurationOutput) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutput() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconDisplayConfigurationOutput) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingIconDisplayConfiguration) *TemplateConditionalFormattingIconDisplayConfiguration {
		return &v
	}).(TemplateConditionalFormattingIconDisplayConfigurationPtrOutput)
}

func (o TemplateConditionalFormattingIconDisplayConfigurationOutput) IconDisplayOption() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingIconDisplayConfiguration) *TemplateConditionalFormattingIconDisplayOption {
		return v.IconDisplayOption
	}).(TemplateConditionalFormattingIconDisplayOptionPtrOutput)
}

type TemplateConditionalFormattingIconDisplayConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconDisplayConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconDisplayConfiguration)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconDisplayConfigurationPtrOutput) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutput() TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayConfigurationPtrOutput) ToTemplateConditionalFormattingIconDisplayConfigurationPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconDisplayConfigurationPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconDisplayConfigurationPtrOutput) Elem() TemplateConditionalFormattingIconDisplayConfigurationOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconDisplayConfiguration) TemplateConditionalFormattingIconDisplayConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingIconDisplayConfiguration
		return ret
	}).(TemplateConditionalFormattingIconDisplayConfigurationOutput)
}

func (o TemplateConditionalFormattingIconDisplayConfigurationPtrOutput) IconDisplayOption() TemplateConditionalFormattingIconDisplayOptionPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconDisplayConfiguration) *TemplateConditionalFormattingIconDisplayOption {
		if v == nil {
			return nil
		}
		return v.IconDisplayOption
	}).(TemplateConditionalFormattingIconDisplayOptionPtrOutput)
}

type TemplateConditionalFormattingIconSet struct {
	Expression  string                                    `pulumi:"expression"`
	IconSetType *TemplateConditionalFormattingIconSetType `pulumi:"iconSetType"`
}

// TemplateConditionalFormattingIconSetInput is an input type that accepts TemplateConditionalFormattingIconSetArgs and TemplateConditionalFormattingIconSetOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconSetInput` via:
//
//	TemplateConditionalFormattingIconSetArgs{...}
type TemplateConditionalFormattingIconSetInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconSetOutput() TemplateConditionalFormattingIconSetOutput
	ToTemplateConditionalFormattingIconSetOutputWithContext(context.Context) TemplateConditionalFormattingIconSetOutput
}

type TemplateConditionalFormattingIconSetArgs struct {
	Expression  pulumi.StringInput                               `pulumi:"expression"`
	IconSetType TemplateConditionalFormattingIconSetTypePtrInput `pulumi:"iconSetType"`
}

func (TemplateConditionalFormattingIconSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconSet)(nil)).Elem()
}

func (i TemplateConditionalFormattingIconSetArgs) ToTemplateConditionalFormattingIconSetOutput() TemplateConditionalFormattingIconSetOutput {
	return i.ToTemplateConditionalFormattingIconSetOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconSetArgs) ToTemplateConditionalFormattingIconSetOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconSetOutput)
}

func (i TemplateConditionalFormattingIconSetArgs) ToTemplateConditionalFormattingIconSetPtrOutput() TemplateConditionalFormattingIconSetPtrOutput {
	return i.ToTemplateConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingIconSetArgs) ToTemplateConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconSetOutput).ToTemplateConditionalFormattingIconSetPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingIconSetPtrInput is an input type that accepts TemplateConditionalFormattingIconSetArgs, TemplateConditionalFormattingIconSetPtr and TemplateConditionalFormattingIconSetPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingIconSetPtrInput` via:
//
//	        TemplateConditionalFormattingIconSetArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingIconSetPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingIconSetPtrOutput() TemplateConditionalFormattingIconSetPtrOutput
	ToTemplateConditionalFormattingIconSetPtrOutputWithContext(context.Context) TemplateConditionalFormattingIconSetPtrOutput
}

type templateConditionalFormattingIconSetPtrType TemplateConditionalFormattingIconSetArgs

func TemplateConditionalFormattingIconSetPtr(v *TemplateConditionalFormattingIconSetArgs) TemplateConditionalFormattingIconSetPtrInput {
	return (*templateConditionalFormattingIconSetPtrType)(v)
}

func (*templateConditionalFormattingIconSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconSet)(nil)).Elem()
}

func (i *templateConditionalFormattingIconSetPtrType) ToTemplateConditionalFormattingIconSetPtrOutput() TemplateConditionalFormattingIconSetPtrOutput {
	return i.ToTemplateConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingIconSetPtrType) ToTemplateConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingIconSetPtrOutput)
}

type TemplateConditionalFormattingIconSetOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingIconSet)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconSetOutput) ToTemplateConditionalFormattingIconSetOutput() TemplateConditionalFormattingIconSetOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetOutput) ToTemplateConditionalFormattingIconSetOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetOutput) ToTemplateConditionalFormattingIconSetPtrOutput() TemplateConditionalFormattingIconSetPtrOutput {
	return o.ToTemplateConditionalFormattingIconSetPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingIconSetOutput) ToTemplateConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingIconSet) *TemplateConditionalFormattingIconSet {
		return &v
	}).(TemplateConditionalFormattingIconSetPtrOutput)
}

func (o TemplateConditionalFormattingIconSetOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingIconSet) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TemplateConditionalFormattingIconSetOutput) IconSetType() TemplateConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingIconSet) *TemplateConditionalFormattingIconSetType {
		return v.IconSetType
	}).(TemplateConditionalFormattingIconSetTypePtrOutput)
}

type TemplateConditionalFormattingIconSetPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingIconSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingIconSet)(nil)).Elem()
}

func (o TemplateConditionalFormattingIconSetPtrOutput) ToTemplateConditionalFormattingIconSetPtrOutput() TemplateConditionalFormattingIconSetPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetPtrOutput) ToTemplateConditionalFormattingIconSetPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingIconSetPtrOutput {
	return o
}

func (o TemplateConditionalFormattingIconSetPtrOutput) Elem() TemplateConditionalFormattingIconSetOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconSet) TemplateConditionalFormattingIconSet {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingIconSet
		return ret
	}).(TemplateConditionalFormattingIconSetOutput)
}

func (o TemplateConditionalFormattingIconSetPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconSet) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingIconSetPtrOutput) IconSetType() TemplateConditionalFormattingIconSetTypePtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingIconSet) *TemplateConditionalFormattingIconSetType {
		if v == nil {
			return nil
		}
		return v.IconSetType
	}).(TemplateConditionalFormattingIconSetTypePtrOutput)
}

type TemplateConditionalFormattingSolidColor struct {
	Color      *string `pulumi:"color"`
	Expression string  `pulumi:"expression"`
}

// TemplateConditionalFormattingSolidColorInput is an input type that accepts TemplateConditionalFormattingSolidColorArgs and TemplateConditionalFormattingSolidColorOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingSolidColorInput` via:
//
//	TemplateConditionalFormattingSolidColorArgs{...}
type TemplateConditionalFormattingSolidColorInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingSolidColorOutput() TemplateConditionalFormattingSolidColorOutput
	ToTemplateConditionalFormattingSolidColorOutputWithContext(context.Context) TemplateConditionalFormattingSolidColorOutput
}

type TemplateConditionalFormattingSolidColorArgs struct {
	Color      pulumi.StringPtrInput `pulumi:"color"`
	Expression pulumi.StringInput    `pulumi:"expression"`
}

func (TemplateConditionalFormattingSolidColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingSolidColor)(nil)).Elem()
}

func (i TemplateConditionalFormattingSolidColorArgs) ToTemplateConditionalFormattingSolidColorOutput() TemplateConditionalFormattingSolidColorOutput {
	return i.ToTemplateConditionalFormattingSolidColorOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingSolidColorArgs) ToTemplateConditionalFormattingSolidColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingSolidColorOutput)
}

func (i TemplateConditionalFormattingSolidColorArgs) ToTemplateConditionalFormattingSolidColorPtrOutput() TemplateConditionalFormattingSolidColorPtrOutput {
	return i.ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i TemplateConditionalFormattingSolidColorArgs) ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingSolidColorOutput).ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(ctx)
}

// TemplateConditionalFormattingSolidColorPtrInput is an input type that accepts TemplateConditionalFormattingSolidColorArgs, TemplateConditionalFormattingSolidColorPtr and TemplateConditionalFormattingSolidColorPtrOutput values.
// You can construct a concrete instance of `TemplateConditionalFormattingSolidColorPtrInput` via:
//
//	        TemplateConditionalFormattingSolidColorArgs{...}
//
//	or:
//
//	        nil
type TemplateConditionalFormattingSolidColorPtrInput interface {
	pulumi.Input

	ToTemplateConditionalFormattingSolidColorPtrOutput() TemplateConditionalFormattingSolidColorPtrOutput
	ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(context.Context) TemplateConditionalFormattingSolidColorPtrOutput
}

type templateConditionalFormattingSolidColorPtrType TemplateConditionalFormattingSolidColorArgs

func TemplateConditionalFormattingSolidColorPtr(v *TemplateConditionalFormattingSolidColorArgs) TemplateConditionalFormattingSolidColorPtrInput {
	return (*templateConditionalFormattingSolidColorPtrType)(v)
}

func (*templateConditionalFormattingSolidColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingSolidColor)(nil)).Elem()
}

func (i *templateConditionalFormattingSolidColorPtrType) ToTemplateConditionalFormattingSolidColorPtrOutput() TemplateConditionalFormattingSolidColorPtrOutput {
	return i.ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (i *templateConditionalFormattingSolidColorPtrType) ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateConditionalFormattingSolidColorPtrOutput)
}

type TemplateConditionalFormattingSolidColorOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingSolidColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateConditionalFormattingSolidColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingSolidColorOutput) ToTemplateConditionalFormattingSolidColorOutput() TemplateConditionalFormattingSolidColorOutput {
	return o
}

func (o TemplateConditionalFormattingSolidColorOutput) ToTemplateConditionalFormattingSolidColorOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorOutput {
	return o
}

func (o TemplateConditionalFormattingSolidColorOutput) ToTemplateConditionalFormattingSolidColorPtrOutput() TemplateConditionalFormattingSolidColorPtrOutput {
	return o.ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(context.Background())
}

func (o TemplateConditionalFormattingSolidColorOutput) ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateConditionalFormattingSolidColor) *TemplateConditionalFormattingSolidColor {
		return &v
	}).(TemplateConditionalFormattingSolidColorPtrOutput)
}

func (o TemplateConditionalFormattingSolidColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingSolidColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingSolidColorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateConditionalFormattingSolidColor) string { return v.Expression }).(pulumi.StringOutput)
}

type TemplateConditionalFormattingSolidColorPtrOutput struct{ *pulumi.OutputState }

func (TemplateConditionalFormattingSolidColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateConditionalFormattingSolidColor)(nil)).Elem()
}

func (o TemplateConditionalFormattingSolidColorPtrOutput) ToTemplateConditionalFormattingSolidColorPtrOutput() TemplateConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingSolidColorPtrOutput) ToTemplateConditionalFormattingSolidColorPtrOutputWithContext(ctx context.Context) TemplateConditionalFormattingSolidColorPtrOutput {
	return o
}

func (o TemplateConditionalFormattingSolidColorPtrOutput) Elem() TemplateConditionalFormattingSolidColorOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingSolidColor) TemplateConditionalFormattingSolidColor {
		if v != nil {
			return *v
		}
		var ret TemplateConditionalFormattingSolidColor
		return ret
	}).(TemplateConditionalFormattingSolidColorOutput)
}

func (o TemplateConditionalFormattingSolidColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateConditionalFormattingSolidColorPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateConditionalFormattingSolidColor) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type TemplateContributionAnalysisDefault struct {
	ContributorDimensions []TemplateColumnIdentifier `pulumi:"contributorDimensions"`
	MeasureFieldId        string                     `pulumi:"measureFieldId"`
}

// TemplateContributionAnalysisDefaultInput is an input type that accepts TemplateContributionAnalysisDefaultArgs and TemplateContributionAnalysisDefaultOutput values.
// You can construct a concrete instance of `TemplateContributionAnalysisDefaultInput` via:
//
//	TemplateContributionAnalysisDefaultArgs{...}
type TemplateContributionAnalysisDefaultInput interface {
	pulumi.Input

	ToTemplateContributionAnalysisDefaultOutput() TemplateContributionAnalysisDefaultOutput
	ToTemplateContributionAnalysisDefaultOutputWithContext(context.Context) TemplateContributionAnalysisDefaultOutput
}

type TemplateContributionAnalysisDefaultArgs struct {
	ContributorDimensions TemplateColumnIdentifierArrayInput `pulumi:"contributorDimensions"`
	MeasureFieldId        pulumi.StringInput                 `pulumi:"measureFieldId"`
}

func (TemplateContributionAnalysisDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateContributionAnalysisDefault)(nil)).Elem()
}

func (i TemplateContributionAnalysisDefaultArgs) ToTemplateContributionAnalysisDefaultOutput() TemplateContributionAnalysisDefaultOutput {
	return i.ToTemplateContributionAnalysisDefaultOutputWithContext(context.Background())
}

func (i TemplateContributionAnalysisDefaultArgs) ToTemplateContributionAnalysisDefaultOutputWithContext(ctx context.Context) TemplateContributionAnalysisDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateContributionAnalysisDefaultOutput)
}

// TemplateContributionAnalysisDefaultArrayInput is an input type that accepts TemplateContributionAnalysisDefaultArray and TemplateContributionAnalysisDefaultArrayOutput values.
// You can construct a concrete instance of `TemplateContributionAnalysisDefaultArrayInput` via:
//
//	TemplateContributionAnalysisDefaultArray{ TemplateContributionAnalysisDefaultArgs{...} }
type TemplateContributionAnalysisDefaultArrayInput interface {
	pulumi.Input

	ToTemplateContributionAnalysisDefaultArrayOutput() TemplateContributionAnalysisDefaultArrayOutput
	ToTemplateContributionAnalysisDefaultArrayOutputWithContext(context.Context) TemplateContributionAnalysisDefaultArrayOutput
}

type TemplateContributionAnalysisDefaultArray []TemplateContributionAnalysisDefaultInput

func (TemplateContributionAnalysisDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateContributionAnalysisDefault)(nil)).Elem()
}

func (i TemplateContributionAnalysisDefaultArray) ToTemplateContributionAnalysisDefaultArrayOutput() TemplateContributionAnalysisDefaultArrayOutput {
	return i.ToTemplateContributionAnalysisDefaultArrayOutputWithContext(context.Background())
}

func (i TemplateContributionAnalysisDefaultArray) ToTemplateContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) TemplateContributionAnalysisDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateContributionAnalysisDefaultArrayOutput)
}

type TemplateContributionAnalysisDefaultOutput struct{ *pulumi.OutputState }

func (TemplateContributionAnalysisDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateContributionAnalysisDefault)(nil)).Elem()
}

func (o TemplateContributionAnalysisDefaultOutput) ToTemplateContributionAnalysisDefaultOutput() TemplateContributionAnalysisDefaultOutput {
	return o
}

func (o TemplateContributionAnalysisDefaultOutput) ToTemplateContributionAnalysisDefaultOutputWithContext(ctx context.Context) TemplateContributionAnalysisDefaultOutput {
	return o
}

func (o TemplateContributionAnalysisDefaultOutput) ContributorDimensions() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v TemplateContributionAnalysisDefault) []TemplateColumnIdentifier { return v.ContributorDimensions }).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplateContributionAnalysisDefaultOutput) MeasureFieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateContributionAnalysisDefault) string { return v.MeasureFieldId }).(pulumi.StringOutput)
}

type TemplateContributionAnalysisDefaultArrayOutput struct{ *pulumi.OutputState }

func (TemplateContributionAnalysisDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateContributionAnalysisDefault)(nil)).Elem()
}

func (o TemplateContributionAnalysisDefaultArrayOutput) ToTemplateContributionAnalysisDefaultArrayOutput() TemplateContributionAnalysisDefaultArrayOutput {
	return o
}

func (o TemplateContributionAnalysisDefaultArrayOutput) ToTemplateContributionAnalysisDefaultArrayOutputWithContext(ctx context.Context) TemplateContributionAnalysisDefaultArrayOutput {
	return o
}

func (o TemplateContributionAnalysisDefaultArrayOutput) Index(i pulumi.IntInput) TemplateContributionAnalysisDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateContributionAnalysisDefault {
		return vs[0].([]TemplateContributionAnalysisDefault)[vs[1].(int)]
	}).(TemplateContributionAnalysisDefaultOutput)
}

type TemplateCurrencyDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *TemplateDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *TemplateNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *TemplateNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *TemplateNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *TemplateNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
	Symbol                       *string                                `pulumi:"symbol"`
}

// TemplateCurrencyDisplayFormatConfigurationInput is an input type that accepts TemplateCurrencyDisplayFormatConfigurationArgs and TemplateCurrencyDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateCurrencyDisplayFormatConfigurationInput` via:
//
//	TemplateCurrencyDisplayFormatConfigurationArgs{...}
type TemplateCurrencyDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateCurrencyDisplayFormatConfigurationOutput() TemplateCurrencyDisplayFormatConfigurationOutput
	ToTemplateCurrencyDisplayFormatConfigurationOutputWithContext(context.Context) TemplateCurrencyDisplayFormatConfigurationOutput
}

type TemplateCurrencyDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   TemplateDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   TemplateNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration TemplateNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  TemplateNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       TemplateNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
	Symbol                       pulumi.StringPtrInput                         `pulumi:"symbol"`
}

func (TemplateCurrencyDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i TemplateCurrencyDisplayFormatConfigurationArgs) ToTemplateCurrencyDisplayFormatConfigurationOutput() TemplateCurrencyDisplayFormatConfigurationOutput {
	return i.ToTemplateCurrencyDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateCurrencyDisplayFormatConfigurationArgs) ToTemplateCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCurrencyDisplayFormatConfigurationOutput)
}

func (i TemplateCurrencyDisplayFormatConfigurationArgs) ToTemplateCurrencyDisplayFormatConfigurationPtrOutput() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCurrencyDisplayFormatConfigurationArgs) ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCurrencyDisplayFormatConfigurationOutput).ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateCurrencyDisplayFormatConfigurationPtrInput is an input type that accepts TemplateCurrencyDisplayFormatConfigurationArgs, TemplateCurrencyDisplayFormatConfigurationPtr and TemplateCurrencyDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCurrencyDisplayFormatConfigurationPtrInput` via:
//
//	        TemplateCurrencyDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCurrencyDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCurrencyDisplayFormatConfigurationPtrOutput() TemplateCurrencyDisplayFormatConfigurationPtrOutput
	ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Context) TemplateCurrencyDisplayFormatConfigurationPtrOutput
}

type templateCurrencyDisplayFormatConfigurationPtrType TemplateCurrencyDisplayFormatConfigurationArgs

func TemplateCurrencyDisplayFormatConfigurationPtr(v *TemplateCurrencyDisplayFormatConfigurationArgs) TemplateCurrencyDisplayFormatConfigurationPtrInput {
	return (*templateCurrencyDisplayFormatConfigurationPtrType)(v)
}

func (*templateCurrencyDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (i *templateCurrencyDisplayFormatConfigurationPtrType) ToTemplateCurrencyDisplayFormatConfigurationPtrOutput() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return i.ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCurrencyDisplayFormatConfigurationPtrType) ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCurrencyDisplayFormatConfigurationPtrOutput)
}

type TemplateCurrencyDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCurrencyDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) ToTemplateCurrencyDisplayFormatConfigurationOutput() TemplateCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) ToTemplateCurrencyDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationOutput {
	return o
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) ToTemplateCurrencyDisplayFormatConfigurationPtrOutput() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCurrencyDisplayFormatConfiguration) *TemplateCurrencyDisplayFormatConfiguration {
		return &v
	}).(TemplateCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) NumberScale() TemplateNumberScalePtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *TemplateNumberScale { return v.NumberScale }).(TemplateNumberScalePtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCurrencyDisplayFormatConfiguration) *string { return v.Symbol }).(pulumi.StringPtrOutput)
}

type TemplateCurrencyDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCurrencyDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCurrencyDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) ToTemplateCurrencyDisplayFormatConfigurationPtrOutput() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) ToTemplateCurrencyDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) Elem() TemplateCurrencyDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) TemplateCurrencyDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCurrencyDisplayFormatConfiguration
		return ret
	}).(TemplateCurrencyDisplayFormatConfigurationOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) NumberScale() TemplateNumberScalePtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *TemplateNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(TemplateNumberScalePtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCurrencyDisplayFormatConfigurationPtrOutput) Symbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCurrencyDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomActionFilterOperation struct {
	SelectedFieldsConfiguration TemplateFilterOperationSelectedFieldsConfiguration `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  TemplateFilterOperationTargetVisualsConfiguration  `pulumi:"targetVisualsConfiguration"`
}

// TemplateCustomActionFilterOperationInput is an input type that accepts TemplateCustomActionFilterOperationArgs and TemplateCustomActionFilterOperationOutput values.
// You can construct a concrete instance of `TemplateCustomActionFilterOperationInput` via:
//
//	TemplateCustomActionFilterOperationArgs{...}
type TemplateCustomActionFilterOperationInput interface {
	pulumi.Input

	ToTemplateCustomActionFilterOperationOutput() TemplateCustomActionFilterOperationOutput
	ToTemplateCustomActionFilterOperationOutputWithContext(context.Context) TemplateCustomActionFilterOperationOutput
}

type TemplateCustomActionFilterOperationArgs struct {
	SelectedFieldsConfiguration TemplateFilterOperationSelectedFieldsConfigurationInput `pulumi:"selectedFieldsConfiguration"`
	TargetVisualsConfiguration  TemplateFilterOperationTargetVisualsConfigurationInput  `pulumi:"targetVisualsConfiguration"`
}

func (TemplateCustomActionFilterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionFilterOperation)(nil)).Elem()
}

func (i TemplateCustomActionFilterOperationArgs) ToTemplateCustomActionFilterOperationOutput() TemplateCustomActionFilterOperationOutput {
	return i.ToTemplateCustomActionFilterOperationOutputWithContext(context.Background())
}

func (i TemplateCustomActionFilterOperationArgs) ToTemplateCustomActionFilterOperationOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionFilterOperationOutput)
}

func (i TemplateCustomActionFilterOperationArgs) ToTemplateCustomActionFilterOperationPtrOutput() TemplateCustomActionFilterOperationPtrOutput {
	return i.ToTemplateCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomActionFilterOperationArgs) ToTemplateCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionFilterOperationOutput).ToTemplateCustomActionFilterOperationPtrOutputWithContext(ctx)
}

// TemplateCustomActionFilterOperationPtrInput is an input type that accepts TemplateCustomActionFilterOperationArgs, TemplateCustomActionFilterOperationPtr and TemplateCustomActionFilterOperationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomActionFilterOperationPtrInput` via:
//
//	        TemplateCustomActionFilterOperationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomActionFilterOperationPtrInput interface {
	pulumi.Input

	ToTemplateCustomActionFilterOperationPtrOutput() TemplateCustomActionFilterOperationPtrOutput
	ToTemplateCustomActionFilterOperationPtrOutputWithContext(context.Context) TemplateCustomActionFilterOperationPtrOutput
}

type templateCustomActionFilterOperationPtrType TemplateCustomActionFilterOperationArgs

func TemplateCustomActionFilterOperationPtr(v *TemplateCustomActionFilterOperationArgs) TemplateCustomActionFilterOperationPtrInput {
	return (*templateCustomActionFilterOperationPtrType)(v)
}

func (*templateCustomActionFilterOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionFilterOperation)(nil)).Elem()
}

func (i *templateCustomActionFilterOperationPtrType) ToTemplateCustomActionFilterOperationPtrOutput() TemplateCustomActionFilterOperationPtrOutput {
	return i.ToTemplateCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (i *templateCustomActionFilterOperationPtrType) ToTemplateCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionFilterOperationPtrOutput)
}

type TemplateCustomActionFilterOperationOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionFilterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionFilterOperation)(nil)).Elem()
}

func (o TemplateCustomActionFilterOperationOutput) ToTemplateCustomActionFilterOperationOutput() TemplateCustomActionFilterOperationOutput {
	return o
}

func (o TemplateCustomActionFilterOperationOutput) ToTemplateCustomActionFilterOperationOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationOutput {
	return o
}

func (o TemplateCustomActionFilterOperationOutput) ToTemplateCustomActionFilterOperationPtrOutput() TemplateCustomActionFilterOperationPtrOutput {
	return o.ToTemplateCustomActionFilterOperationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomActionFilterOperationOutput) ToTemplateCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomActionFilterOperation) *TemplateCustomActionFilterOperation {
		return &v
	}).(TemplateCustomActionFilterOperationPtrOutput)
}

func (o TemplateCustomActionFilterOperationOutput) SelectedFieldsConfiguration() TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v TemplateCustomActionFilterOperation) TemplateFilterOperationSelectedFieldsConfiguration {
		return v.SelectedFieldsConfiguration
	}).(TemplateFilterOperationSelectedFieldsConfigurationOutput)
}

func (o TemplateCustomActionFilterOperationOutput) TargetVisualsConfiguration() TemplateFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v TemplateCustomActionFilterOperation) TemplateFilterOperationTargetVisualsConfiguration {
		return v.TargetVisualsConfiguration
	}).(TemplateFilterOperationTargetVisualsConfigurationOutput)
}

type TemplateCustomActionFilterOperationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionFilterOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionFilterOperation)(nil)).Elem()
}

func (o TemplateCustomActionFilterOperationPtrOutput) ToTemplateCustomActionFilterOperationPtrOutput() TemplateCustomActionFilterOperationPtrOutput {
	return o
}

func (o TemplateCustomActionFilterOperationPtrOutput) ToTemplateCustomActionFilterOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionFilterOperationPtrOutput {
	return o
}

func (o TemplateCustomActionFilterOperationPtrOutput) Elem() TemplateCustomActionFilterOperationOutput {
	return o.ApplyT(func(v *TemplateCustomActionFilterOperation) TemplateCustomActionFilterOperation {
		if v != nil {
			return *v
		}
		var ret TemplateCustomActionFilterOperation
		return ret
	}).(TemplateCustomActionFilterOperationOutput)
}

func (o TemplateCustomActionFilterOperationPtrOutput) SelectedFieldsConfiguration() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomActionFilterOperation) *TemplateFilterOperationSelectedFieldsConfiguration {
		if v == nil {
			return nil
		}
		return &v.SelectedFieldsConfiguration
	}).(TemplateFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o TemplateCustomActionFilterOperationPtrOutput) TargetVisualsConfiguration() TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomActionFilterOperation) *TemplateFilterOperationTargetVisualsConfiguration {
		if v == nil {
			return nil
		}
		return &v.TargetVisualsConfiguration
	}).(TemplateFilterOperationTargetVisualsConfigurationPtrOutput)
}

type TemplateCustomActionNavigationOperation struct {
	LocalNavigationConfiguration *TemplateLocalNavigationConfiguration `pulumi:"localNavigationConfiguration"`
}

// TemplateCustomActionNavigationOperationInput is an input type that accepts TemplateCustomActionNavigationOperationArgs and TemplateCustomActionNavigationOperationOutput values.
// You can construct a concrete instance of `TemplateCustomActionNavigationOperationInput` via:
//
//	TemplateCustomActionNavigationOperationArgs{...}
type TemplateCustomActionNavigationOperationInput interface {
	pulumi.Input

	ToTemplateCustomActionNavigationOperationOutput() TemplateCustomActionNavigationOperationOutput
	ToTemplateCustomActionNavigationOperationOutputWithContext(context.Context) TemplateCustomActionNavigationOperationOutput
}

type TemplateCustomActionNavigationOperationArgs struct {
	LocalNavigationConfiguration TemplateLocalNavigationConfigurationPtrInput `pulumi:"localNavigationConfiguration"`
}

func (TemplateCustomActionNavigationOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionNavigationOperation)(nil)).Elem()
}

func (i TemplateCustomActionNavigationOperationArgs) ToTemplateCustomActionNavigationOperationOutput() TemplateCustomActionNavigationOperationOutput {
	return i.ToTemplateCustomActionNavigationOperationOutputWithContext(context.Background())
}

func (i TemplateCustomActionNavigationOperationArgs) ToTemplateCustomActionNavigationOperationOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionNavigationOperationOutput)
}

func (i TemplateCustomActionNavigationOperationArgs) ToTemplateCustomActionNavigationOperationPtrOutput() TemplateCustomActionNavigationOperationPtrOutput {
	return i.ToTemplateCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomActionNavigationOperationArgs) ToTemplateCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionNavigationOperationOutput).ToTemplateCustomActionNavigationOperationPtrOutputWithContext(ctx)
}

// TemplateCustomActionNavigationOperationPtrInput is an input type that accepts TemplateCustomActionNavigationOperationArgs, TemplateCustomActionNavigationOperationPtr and TemplateCustomActionNavigationOperationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomActionNavigationOperationPtrInput` via:
//
//	        TemplateCustomActionNavigationOperationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomActionNavigationOperationPtrInput interface {
	pulumi.Input

	ToTemplateCustomActionNavigationOperationPtrOutput() TemplateCustomActionNavigationOperationPtrOutput
	ToTemplateCustomActionNavigationOperationPtrOutputWithContext(context.Context) TemplateCustomActionNavigationOperationPtrOutput
}

type templateCustomActionNavigationOperationPtrType TemplateCustomActionNavigationOperationArgs

func TemplateCustomActionNavigationOperationPtr(v *TemplateCustomActionNavigationOperationArgs) TemplateCustomActionNavigationOperationPtrInput {
	return (*templateCustomActionNavigationOperationPtrType)(v)
}

func (*templateCustomActionNavigationOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionNavigationOperation)(nil)).Elem()
}

func (i *templateCustomActionNavigationOperationPtrType) ToTemplateCustomActionNavigationOperationPtrOutput() TemplateCustomActionNavigationOperationPtrOutput {
	return i.ToTemplateCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (i *templateCustomActionNavigationOperationPtrType) ToTemplateCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionNavigationOperationPtrOutput)
}

type TemplateCustomActionNavigationOperationOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionNavigationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionNavigationOperation)(nil)).Elem()
}

func (o TemplateCustomActionNavigationOperationOutput) ToTemplateCustomActionNavigationOperationOutput() TemplateCustomActionNavigationOperationOutput {
	return o
}

func (o TemplateCustomActionNavigationOperationOutput) ToTemplateCustomActionNavigationOperationOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationOutput {
	return o
}

func (o TemplateCustomActionNavigationOperationOutput) ToTemplateCustomActionNavigationOperationPtrOutput() TemplateCustomActionNavigationOperationPtrOutput {
	return o.ToTemplateCustomActionNavigationOperationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomActionNavigationOperationOutput) ToTemplateCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomActionNavigationOperation) *TemplateCustomActionNavigationOperation {
		return &v
	}).(TemplateCustomActionNavigationOperationPtrOutput)
}

func (o TemplateCustomActionNavigationOperationOutput) LocalNavigationConfiguration() TemplateLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCustomActionNavigationOperation) *TemplateLocalNavigationConfiguration {
		return v.LocalNavigationConfiguration
	}).(TemplateLocalNavigationConfigurationPtrOutput)
}

type TemplateCustomActionNavigationOperationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionNavigationOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionNavigationOperation)(nil)).Elem()
}

func (o TemplateCustomActionNavigationOperationPtrOutput) ToTemplateCustomActionNavigationOperationPtrOutput() TemplateCustomActionNavigationOperationPtrOutput {
	return o
}

func (o TemplateCustomActionNavigationOperationPtrOutput) ToTemplateCustomActionNavigationOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionNavigationOperationPtrOutput {
	return o
}

func (o TemplateCustomActionNavigationOperationPtrOutput) Elem() TemplateCustomActionNavigationOperationOutput {
	return o.ApplyT(func(v *TemplateCustomActionNavigationOperation) TemplateCustomActionNavigationOperation {
		if v != nil {
			return *v
		}
		var ret TemplateCustomActionNavigationOperation
		return ret
	}).(TemplateCustomActionNavigationOperationOutput)
}

func (o TemplateCustomActionNavigationOperationPtrOutput) LocalNavigationConfiguration() TemplateLocalNavigationConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomActionNavigationOperation) *TemplateLocalNavigationConfiguration {
		if v == nil {
			return nil
		}
		return v.LocalNavigationConfiguration
	}).(TemplateLocalNavigationConfigurationPtrOutput)
}

type TemplateCustomActionSetParametersOperation struct {
	ParameterValueConfigurations []TemplateSetParameterValueConfiguration `pulumi:"parameterValueConfigurations"`
}

// TemplateCustomActionSetParametersOperationInput is an input type that accepts TemplateCustomActionSetParametersOperationArgs and TemplateCustomActionSetParametersOperationOutput values.
// You can construct a concrete instance of `TemplateCustomActionSetParametersOperationInput` via:
//
//	TemplateCustomActionSetParametersOperationArgs{...}
type TemplateCustomActionSetParametersOperationInput interface {
	pulumi.Input

	ToTemplateCustomActionSetParametersOperationOutput() TemplateCustomActionSetParametersOperationOutput
	ToTemplateCustomActionSetParametersOperationOutputWithContext(context.Context) TemplateCustomActionSetParametersOperationOutput
}

type TemplateCustomActionSetParametersOperationArgs struct {
	ParameterValueConfigurations TemplateSetParameterValueConfigurationArrayInput `pulumi:"parameterValueConfigurations"`
}

func (TemplateCustomActionSetParametersOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionSetParametersOperation)(nil)).Elem()
}

func (i TemplateCustomActionSetParametersOperationArgs) ToTemplateCustomActionSetParametersOperationOutput() TemplateCustomActionSetParametersOperationOutput {
	return i.ToTemplateCustomActionSetParametersOperationOutputWithContext(context.Background())
}

func (i TemplateCustomActionSetParametersOperationArgs) ToTemplateCustomActionSetParametersOperationOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionSetParametersOperationOutput)
}

func (i TemplateCustomActionSetParametersOperationArgs) ToTemplateCustomActionSetParametersOperationPtrOutput() TemplateCustomActionSetParametersOperationPtrOutput {
	return i.ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomActionSetParametersOperationArgs) ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionSetParametersOperationOutput).ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(ctx)
}

// TemplateCustomActionSetParametersOperationPtrInput is an input type that accepts TemplateCustomActionSetParametersOperationArgs, TemplateCustomActionSetParametersOperationPtr and TemplateCustomActionSetParametersOperationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomActionSetParametersOperationPtrInput` via:
//
//	        TemplateCustomActionSetParametersOperationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomActionSetParametersOperationPtrInput interface {
	pulumi.Input

	ToTemplateCustomActionSetParametersOperationPtrOutput() TemplateCustomActionSetParametersOperationPtrOutput
	ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(context.Context) TemplateCustomActionSetParametersOperationPtrOutput
}

type templateCustomActionSetParametersOperationPtrType TemplateCustomActionSetParametersOperationArgs

func TemplateCustomActionSetParametersOperationPtr(v *TemplateCustomActionSetParametersOperationArgs) TemplateCustomActionSetParametersOperationPtrInput {
	return (*templateCustomActionSetParametersOperationPtrType)(v)
}

func (*templateCustomActionSetParametersOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionSetParametersOperation)(nil)).Elem()
}

func (i *templateCustomActionSetParametersOperationPtrType) ToTemplateCustomActionSetParametersOperationPtrOutput() TemplateCustomActionSetParametersOperationPtrOutput {
	return i.ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (i *templateCustomActionSetParametersOperationPtrType) ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionSetParametersOperationPtrOutput)
}

type TemplateCustomActionSetParametersOperationOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionSetParametersOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionSetParametersOperation)(nil)).Elem()
}

func (o TemplateCustomActionSetParametersOperationOutput) ToTemplateCustomActionSetParametersOperationOutput() TemplateCustomActionSetParametersOperationOutput {
	return o
}

func (o TemplateCustomActionSetParametersOperationOutput) ToTemplateCustomActionSetParametersOperationOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationOutput {
	return o
}

func (o TemplateCustomActionSetParametersOperationOutput) ToTemplateCustomActionSetParametersOperationPtrOutput() TemplateCustomActionSetParametersOperationPtrOutput {
	return o.ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomActionSetParametersOperationOutput) ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomActionSetParametersOperation) *TemplateCustomActionSetParametersOperation {
		return &v
	}).(TemplateCustomActionSetParametersOperationPtrOutput)
}

func (o TemplateCustomActionSetParametersOperationOutput) ParameterValueConfigurations() TemplateSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateCustomActionSetParametersOperation) []TemplateSetParameterValueConfiguration {
		return v.ParameterValueConfigurations
	}).(TemplateSetParameterValueConfigurationArrayOutput)
}

type TemplateCustomActionSetParametersOperationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionSetParametersOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionSetParametersOperation)(nil)).Elem()
}

func (o TemplateCustomActionSetParametersOperationPtrOutput) ToTemplateCustomActionSetParametersOperationPtrOutput() TemplateCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o TemplateCustomActionSetParametersOperationPtrOutput) ToTemplateCustomActionSetParametersOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionSetParametersOperationPtrOutput {
	return o
}

func (o TemplateCustomActionSetParametersOperationPtrOutput) Elem() TemplateCustomActionSetParametersOperationOutput {
	return o.ApplyT(func(v *TemplateCustomActionSetParametersOperation) TemplateCustomActionSetParametersOperation {
		if v != nil {
			return *v
		}
		var ret TemplateCustomActionSetParametersOperation
		return ret
	}).(TemplateCustomActionSetParametersOperationOutput)
}

func (o TemplateCustomActionSetParametersOperationPtrOutput) ParameterValueConfigurations() TemplateSetParameterValueConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateCustomActionSetParametersOperation) []TemplateSetParameterValueConfiguration {
		if v == nil {
			return nil
		}
		return v.ParameterValueConfigurations
	}).(TemplateSetParameterValueConfigurationArrayOutput)
}

type TemplateCustomActionUrlOperation struct {
	UrlTarget   TemplateUrlTargetConfiguration `pulumi:"urlTarget"`
	UrlTemplate string                         `pulumi:"urlTemplate"`
}

// TemplateCustomActionUrlOperationInput is an input type that accepts TemplateCustomActionUrlOperationArgs and TemplateCustomActionUrlOperationOutput values.
// You can construct a concrete instance of `TemplateCustomActionUrlOperationInput` via:
//
//	TemplateCustomActionUrlOperationArgs{...}
type TemplateCustomActionUrlOperationInput interface {
	pulumi.Input

	ToTemplateCustomActionUrlOperationOutput() TemplateCustomActionUrlOperationOutput
	ToTemplateCustomActionUrlOperationOutputWithContext(context.Context) TemplateCustomActionUrlOperationOutput
}

type TemplateCustomActionUrlOperationArgs struct {
	UrlTarget   TemplateUrlTargetConfigurationInput `pulumi:"urlTarget"`
	UrlTemplate pulumi.StringInput                  `pulumi:"urlTemplate"`
}

func (TemplateCustomActionUrlOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionUrlOperation)(nil)).Elem()
}

func (i TemplateCustomActionUrlOperationArgs) ToTemplateCustomActionUrlOperationOutput() TemplateCustomActionUrlOperationOutput {
	return i.ToTemplateCustomActionUrlOperationOutputWithContext(context.Background())
}

func (i TemplateCustomActionUrlOperationArgs) ToTemplateCustomActionUrlOperationOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionUrlOperationOutput)
}

func (i TemplateCustomActionUrlOperationArgs) ToTemplateCustomActionUrlOperationPtrOutput() TemplateCustomActionUrlOperationPtrOutput {
	return i.ToTemplateCustomActionUrlOperationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomActionUrlOperationArgs) ToTemplateCustomActionUrlOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionUrlOperationOutput).ToTemplateCustomActionUrlOperationPtrOutputWithContext(ctx)
}

// TemplateCustomActionUrlOperationPtrInput is an input type that accepts TemplateCustomActionUrlOperationArgs, TemplateCustomActionUrlOperationPtr and TemplateCustomActionUrlOperationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomActionUrlOperationPtrInput` via:
//
//	        TemplateCustomActionUrlOperationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomActionUrlOperationPtrInput interface {
	pulumi.Input

	ToTemplateCustomActionUrlOperationPtrOutput() TemplateCustomActionUrlOperationPtrOutput
	ToTemplateCustomActionUrlOperationPtrOutputWithContext(context.Context) TemplateCustomActionUrlOperationPtrOutput
}

type templateCustomActionUrlOperationPtrType TemplateCustomActionUrlOperationArgs

func TemplateCustomActionUrlOperationPtr(v *TemplateCustomActionUrlOperationArgs) TemplateCustomActionUrlOperationPtrInput {
	return (*templateCustomActionUrlOperationPtrType)(v)
}

func (*templateCustomActionUrlOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionUrlOperation)(nil)).Elem()
}

func (i *templateCustomActionUrlOperationPtrType) ToTemplateCustomActionUrlOperationPtrOutput() TemplateCustomActionUrlOperationPtrOutput {
	return i.ToTemplateCustomActionUrlOperationPtrOutputWithContext(context.Background())
}

func (i *templateCustomActionUrlOperationPtrType) ToTemplateCustomActionUrlOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomActionUrlOperationPtrOutput)
}

type TemplateCustomActionUrlOperationOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionUrlOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomActionUrlOperation)(nil)).Elem()
}

func (o TemplateCustomActionUrlOperationOutput) ToTemplateCustomActionUrlOperationOutput() TemplateCustomActionUrlOperationOutput {
	return o
}

func (o TemplateCustomActionUrlOperationOutput) ToTemplateCustomActionUrlOperationOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationOutput {
	return o
}

func (o TemplateCustomActionUrlOperationOutput) ToTemplateCustomActionUrlOperationPtrOutput() TemplateCustomActionUrlOperationPtrOutput {
	return o.ToTemplateCustomActionUrlOperationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomActionUrlOperationOutput) ToTemplateCustomActionUrlOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomActionUrlOperation) *TemplateCustomActionUrlOperation {
		return &v
	}).(TemplateCustomActionUrlOperationPtrOutput)
}

func (o TemplateCustomActionUrlOperationOutput) UrlTarget() TemplateUrlTargetConfigurationOutput {
	return o.ApplyT(func(v TemplateCustomActionUrlOperation) TemplateUrlTargetConfiguration { return v.UrlTarget }).(TemplateUrlTargetConfigurationOutput)
}

func (o TemplateCustomActionUrlOperationOutput) UrlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCustomActionUrlOperation) string { return v.UrlTemplate }).(pulumi.StringOutput)
}

type TemplateCustomActionUrlOperationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomActionUrlOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomActionUrlOperation)(nil)).Elem()
}

func (o TemplateCustomActionUrlOperationPtrOutput) ToTemplateCustomActionUrlOperationPtrOutput() TemplateCustomActionUrlOperationPtrOutput {
	return o
}

func (o TemplateCustomActionUrlOperationPtrOutput) ToTemplateCustomActionUrlOperationPtrOutputWithContext(ctx context.Context) TemplateCustomActionUrlOperationPtrOutput {
	return o
}

func (o TemplateCustomActionUrlOperationPtrOutput) Elem() TemplateCustomActionUrlOperationOutput {
	return o.ApplyT(func(v *TemplateCustomActionUrlOperation) TemplateCustomActionUrlOperation {
		if v != nil {
			return *v
		}
		var ret TemplateCustomActionUrlOperation
		return ret
	}).(TemplateCustomActionUrlOperationOutput)
}

func (o TemplateCustomActionUrlOperationPtrOutput) UrlTarget() TemplateUrlTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomActionUrlOperation) *TemplateUrlTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.UrlTarget
	}).(TemplateUrlTargetConfigurationPtrOutput)
}

func (o TemplateCustomActionUrlOperationPtrOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomActionUrlOperation) *string {
		if v == nil {
			return nil
		}
		return &v.UrlTemplate
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomColor struct {
	Color        string                `pulumi:"color"`
	FieldValue   *string               `pulumi:"fieldValue"`
	SpecialValue *TemplateSpecialValue `pulumi:"specialValue"`
}

// TemplateCustomColorInput is an input type that accepts TemplateCustomColorArgs and TemplateCustomColorOutput values.
// You can construct a concrete instance of `TemplateCustomColorInput` via:
//
//	TemplateCustomColorArgs{...}
type TemplateCustomColorInput interface {
	pulumi.Input

	ToTemplateCustomColorOutput() TemplateCustomColorOutput
	ToTemplateCustomColorOutputWithContext(context.Context) TemplateCustomColorOutput
}

type TemplateCustomColorArgs struct {
	Color        pulumi.StringInput           `pulumi:"color"`
	FieldValue   pulumi.StringPtrInput        `pulumi:"fieldValue"`
	SpecialValue TemplateSpecialValuePtrInput `pulumi:"specialValue"`
}

func (TemplateCustomColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomColor)(nil)).Elem()
}

func (i TemplateCustomColorArgs) ToTemplateCustomColorOutput() TemplateCustomColorOutput {
	return i.ToTemplateCustomColorOutputWithContext(context.Background())
}

func (i TemplateCustomColorArgs) ToTemplateCustomColorOutputWithContext(ctx context.Context) TemplateCustomColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomColorOutput)
}

// TemplateCustomColorArrayInput is an input type that accepts TemplateCustomColorArray and TemplateCustomColorArrayOutput values.
// You can construct a concrete instance of `TemplateCustomColorArrayInput` via:
//
//	TemplateCustomColorArray{ TemplateCustomColorArgs{...} }
type TemplateCustomColorArrayInput interface {
	pulumi.Input

	ToTemplateCustomColorArrayOutput() TemplateCustomColorArrayOutput
	ToTemplateCustomColorArrayOutputWithContext(context.Context) TemplateCustomColorArrayOutput
}

type TemplateCustomColorArray []TemplateCustomColorInput

func (TemplateCustomColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCustomColor)(nil)).Elem()
}

func (i TemplateCustomColorArray) ToTemplateCustomColorArrayOutput() TemplateCustomColorArrayOutput {
	return i.ToTemplateCustomColorArrayOutputWithContext(context.Background())
}

func (i TemplateCustomColorArray) ToTemplateCustomColorArrayOutputWithContext(ctx context.Context) TemplateCustomColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomColorArrayOutput)
}

type TemplateCustomColorOutput struct{ *pulumi.OutputState }

func (TemplateCustomColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomColor)(nil)).Elem()
}

func (o TemplateCustomColorOutput) ToTemplateCustomColorOutput() TemplateCustomColorOutput {
	return o
}

func (o TemplateCustomColorOutput) ToTemplateCustomColorOutputWithContext(ctx context.Context) TemplateCustomColorOutput {
	return o
}

func (o TemplateCustomColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCustomColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o TemplateCustomColorOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCustomColor) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o TemplateCustomColorOutput) SpecialValue() TemplateSpecialValuePtrOutput {
	return o.ApplyT(func(v TemplateCustomColor) *TemplateSpecialValue { return v.SpecialValue }).(TemplateSpecialValuePtrOutput)
}

type TemplateCustomColorArrayOutput struct{ *pulumi.OutputState }

func (TemplateCustomColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateCustomColor)(nil)).Elem()
}

func (o TemplateCustomColorArrayOutput) ToTemplateCustomColorArrayOutput() TemplateCustomColorArrayOutput {
	return o
}

func (o TemplateCustomColorArrayOutput) ToTemplateCustomColorArrayOutputWithContext(ctx context.Context) TemplateCustomColorArrayOutput {
	return o
}

func (o TemplateCustomColorArrayOutput) Index(i pulumi.IntInput) TemplateCustomColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateCustomColor {
		return vs[0].([]TemplateCustomColor)[vs[1].(int)]
	}).(TemplateCustomColorOutput)
}

type TemplateCustomContentConfiguration struct {
	ContentType  *TemplateCustomContentType                      `pulumi:"contentType"`
	ContentUrl   *string                                         `pulumi:"contentUrl"`
	ImageScaling *TemplateCustomContentImageScalingConfiguration `pulumi:"imageScaling"`
}

// TemplateCustomContentConfigurationInput is an input type that accepts TemplateCustomContentConfigurationArgs and TemplateCustomContentConfigurationOutput values.
// You can construct a concrete instance of `TemplateCustomContentConfigurationInput` via:
//
//	TemplateCustomContentConfigurationArgs{...}
type TemplateCustomContentConfigurationInput interface {
	pulumi.Input

	ToTemplateCustomContentConfigurationOutput() TemplateCustomContentConfigurationOutput
	ToTemplateCustomContentConfigurationOutputWithContext(context.Context) TemplateCustomContentConfigurationOutput
}

type TemplateCustomContentConfigurationArgs struct {
	ContentType  TemplateCustomContentTypePtrInput                      `pulumi:"contentType"`
	ContentUrl   pulumi.StringPtrInput                                  `pulumi:"contentUrl"`
	ImageScaling TemplateCustomContentImageScalingConfigurationPtrInput `pulumi:"imageScaling"`
}

func (TemplateCustomContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentConfiguration)(nil)).Elem()
}

func (i TemplateCustomContentConfigurationArgs) ToTemplateCustomContentConfigurationOutput() TemplateCustomContentConfigurationOutput {
	return i.ToTemplateCustomContentConfigurationOutputWithContext(context.Background())
}

func (i TemplateCustomContentConfigurationArgs) ToTemplateCustomContentConfigurationOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentConfigurationOutput)
}

func (i TemplateCustomContentConfigurationArgs) ToTemplateCustomContentConfigurationPtrOutput() TemplateCustomContentConfigurationPtrOutput {
	return i.ToTemplateCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomContentConfigurationArgs) ToTemplateCustomContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentConfigurationOutput).ToTemplateCustomContentConfigurationPtrOutputWithContext(ctx)
}

// TemplateCustomContentConfigurationPtrInput is an input type that accepts TemplateCustomContentConfigurationArgs, TemplateCustomContentConfigurationPtr and TemplateCustomContentConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomContentConfigurationPtrInput` via:
//
//	        TemplateCustomContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomContentConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCustomContentConfigurationPtrOutput() TemplateCustomContentConfigurationPtrOutput
	ToTemplateCustomContentConfigurationPtrOutputWithContext(context.Context) TemplateCustomContentConfigurationPtrOutput
}

type templateCustomContentConfigurationPtrType TemplateCustomContentConfigurationArgs

func TemplateCustomContentConfigurationPtr(v *TemplateCustomContentConfigurationArgs) TemplateCustomContentConfigurationPtrInput {
	return (*templateCustomContentConfigurationPtrType)(v)
}

func (*templateCustomContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentConfiguration)(nil)).Elem()
}

func (i *templateCustomContentConfigurationPtrType) ToTemplateCustomContentConfigurationPtrOutput() TemplateCustomContentConfigurationPtrOutput {
	return i.ToTemplateCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCustomContentConfigurationPtrType) ToTemplateCustomContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentConfigurationPtrOutput)
}

type TemplateCustomContentConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentConfiguration)(nil)).Elem()
}

func (o TemplateCustomContentConfigurationOutput) ToTemplateCustomContentConfigurationOutput() TemplateCustomContentConfigurationOutput {
	return o
}

func (o TemplateCustomContentConfigurationOutput) ToTemplateCustomContentConfigurationOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationOutput {
	return o
}

func (o TemplateCustomContentConfigurationOutput) ToTemplateCustomContentConfigurationPtrOutput() TemplateCustomContentConfigurationPtrOutput {
	return o.ToTemplateCustomContentConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentConfigurationOutput) ToTemplateCustomContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomContentConfiguration) *TemplateCustomContentConfiguration {
		return &v
	}).(TemplateCustomContentConfigurationPtrOutput)
}

func (o TemplateCustomContentConfigurationOutput) ContentType() TemplateCustomContentTypePtrOutput {
	return o.ApplyT(func(v TemplateCustomContentConfiguration) *TemplateCustomContentType { return v.ContentType }).(TemplateCustomContentTypePtrOutput)
}

func (o TemplateCustomContentConfigurationOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCustomContentConfiguration) *string { return v.ContentUrl }).(pulumi.StringPtrOutput)
}

func (o TemplateCustomContentConfigurationOutput) ImageScaling() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCustomContentConfiguration) *TemplateCustomContentImageScalingConfiguration {
		return v.ImageScaling
	}).(TemplateCustomContentImageScalingConfigurationPtrOutput)
}

type TemplateCustomContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentConfiguration)(nil)).Elem()
}

func (o TemplateCustomContentConfigurationPtrOutput) ToTemplateCustomContentConfigurationPtrOutput() TemplateCustomContentConfigurationPtrOutput {
	return o
}

func (o TemplateCustomContentConfigurationPtrOutput) ToTemplateCustomContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomContentConfigurationPtrOutput {
	return o
}

func (o TemplateCustomContentConfigurationPtrOutput) Elem() TemplateCustomContentConfigurationOutput {
	return o.ApplyT(func(v *TemplateCustomContentConfiguration) TemplateCustomContentConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCustomContentConfiguration
		return ret
	}).(TemplateCustomContentConfigurationOutput)
}

func (o TemplateCustomContentConfigurationPtrOutput) ContentType() TemplateCustomContentTypePtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentConfiguration) *TemplateCustomContentType {
		if v == nil {
			return nil
		}
		return v.ContentType
	}).(TemplateCustomContentTypePtrOutput)
}

func (o TemplateCustomContentConfigurationPtrOutput) ContentUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentUrl
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCustomContentConfigurationPtrOutput) ImageScaling() TemplateCustomContentImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentConfiguration) *TemplateCustomContentImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageScaling
	}).(TemplateCustomContentImageScalingConfigurationPtrOutput)
}

type TemplateCustomContentVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateCustomContentConfiguration `pulumi:"chartConfiguration"`
	DataSetIdentifier  string                              `pulumi:"dataSetIdentifier"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateCustomContentVisualInput is an input type that accepts TemplateCustomContentVisualArgs and TemplateCustomContentVisualOutput values.
// You can construct a concrete instance of `TemplateCustomContentVisualInput` via:
//
//	TemplateCustomContentVisualArgs{...}
type TemplateCustomContentVisualInput interface {
	pulumi.Input

	ToTemplateCustomContentVisualOutput() TemplateCustomContentVisualOutput
	ToTemplateCustomContentVisualOutputWithContext(context.Context) TemplateCustomContentVisualOutput
}

type TemplateCustomContentVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateCustomContentConfigurationPtrInput `pulumi:"chartConfiguration"`
	DataSetIdentifier  pulumi.StringInput                         `pulumi:"dataSetIdentifier"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateCustomContentVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentVisual)(nil)).Elem()
}

func (i TemplateCustomContentVisualArgs) ToTemplateCustomContentVisualOutput() TemplateCustomContentVisualOutput {
	return i.ToTemplateCustomContentVisualOutputWithContext(context.Background())
}

func (i TemplateCustomContentVisualArgs) ToTemplateCustomContentVisualOutputWithContext(ctx context.Context) TemplateCustomContentVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentVisualOutput)
}

func (i TemplateCustomContentVisualArgs) ToTemplateCustomContentVisualPtrOutput() TemplateCustomContentVisualPtrOutput {
	return i.ToTemplateCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i TemplateCustomContentVisualArgs) ToTemplateCustomContentVisualPtrOutputWithContext(ctx context.Context) TemplateCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentVisualOutput).ToTemplateCustomContentVisualPtrOutputWithContext(ctx)
}

// TemplateCustomContentVisualPtrInput is an input type that accepts TemplateCustomContentVisualArgs, TemplateCustomContentVisualPtr and TemplateCustomContentVisualPtrOutput values.
// You can construct a concrete instance of `TemplateCustomContentVisualPtrInput` via:
//
//	        TemplateCustomContentVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomContentVisualPtrInput interface {
	pulumi.Input

	ToTemplateCustomContentVisualPtrOutput() TemplateCustomContentVisualPtrOutput
	ToTemplateCustomContentVisualPtrOutputWithContext(context.Context) TemplateCustomContentVisualPtrOutput
}

type templateCustomContentVisualPtrType TemplateCustomContentVisualArgs

func TemplateCustomContentVisualPtr(v *TemplateCustomContentVisualArgs) TemplateCustomContentVisualPtrInput {
	return (*templateCustomContentVisualPtrType)(v)
}

func (*templateCustomContentVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentVisual)(nil)).Elem()
}

func (i *templateCustomContentVisualPtrType) ToTemplateCustomContentVisualPtrOutput() TemplateCustomContentVisualPtrOutput {
	return i.ToTemplateCustomContentVisualPtrOutputWithContext(context.Background())
}

func (i *templateCustomContentVisualPtrType) ToTemplateCustomContentVisualPtrOutputWithContext(ctx context.Context) TemplateCustomContentVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomContentVisualPtrOutput)
}

type TemplateCustomContentVisualOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomContentVisual)(nil)).Elem()
}

func (o TemplateCustomContentVisualOutput) ToTemplateCustomContentVisualOutput() TemplateCustomContentVisualOutput {
	return o
}

func (o TemplateCustomContentVisualOutput) ToTemplateCustomContentVisualOutputWithContext(ctx context.Context) TemplateCustomContentVisualOutput {
	return o
}

func (o TemplateCustomContentVisualOutput) ToTemplateCustomContentVisualPtrOutput() TemplateCustomContentVisualPtrOutput {
	return o.ToTemplateCustomContentVisualPtrOutputWithContext(context.Background())
}

func (o TemplateCustomContentVisualOutput) ToTemplateCustomContentVisualPtrOutputWithContext(ctx context.Context) TemplateCustomContentVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomContentVisual) *TemplateCustomContentVisual {
		return &v
	}).(TemplateCustomContentVisualPtrOutput)
}

func (o TemplateCustomContentVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateCustomContentVisualOutput) ChartConfiguration() TemplateCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) *TemplateCustomContentConfiguration { return v.ChartConfiguration }).(TemplateCustomContentConfigurationPtrOutput)
}

func (o TemplateCustomContentVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateCustomContentVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateCustomContentVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateCustomContentVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCustomContentVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateCustomContentVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomContentVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomContentVisual)(nil)).Elem()
}

func (o TemplateCustomContentVisualPtrOutput) ToTemplateCustomContentVisualPtrOutput() TemplateCustomContentVisualPtrOutput {
	return o
}

func (o TemplateCustomContentVisualPtrOutput) ToTemplateCustomContentVisualPtrOutputWithContext(ctx context.Context) TemplateCustomContentVisualPtrOutput {
	return o
}

func (o TemplateCustomContentVisualPtrOutput) Elem() TemplateCustomContentVisualOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) TemplateCustomContentVisual {
		if v != nil {
			return *v
		}
		var ret TemplateCustomContentVisual
		return ret
	}).(TemplateCustomContentVisualOutput)
}

func (o TemplateCustomContentVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateCustomContentVisualPtrOutput) ChartConfiguration() TemplateCustomContentConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) *TemplateCustomContentConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateCustomContentConfigurationPtrOutput)
}

func (o TemplateCustomContentVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCustomContentVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateCustomContentVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateCustomContentVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomContentVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomFilterConfiguration struct {
	CategoryValue    *string                                 `pulumi:"categoryValue"`
	MatchOperator    TemplateCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       TemplateFilterNullOption                `pulumi:"nullOption"`
	ParameterName    *string                                 `pulumi:"parameterName"`
	SelectAllOptions *TemplateCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// TemplateCustomFilterConfigurationInput is an input type that accepts TemplateCustomFilterConfigurationArgs and TemplateCustomFilterConfigurationOutput values.
// You can construct a concrete instance of `TemplateCustomFilterConfigurationInput` via:
//
//	TemplateCustomFilterConfigurationArgs{...}
type TemplateCustomFilterConfigurationInput interface {
	pulumi.Input

	ToTemplateCustomFilterConfigurationOutput() TemplateCustomFilterConfigurationOutput
	ToTemplateCustomFilterConfigurationOutputWithContext(context.Context) TemplateCustomFilterConfigurationOutput
}

type TemplateCustomFilterConfigurationArgs struct {
	CategoryValue    pulumi.StringPtrInput                          `pulumi:"categoryValue"`
	MatchOperator    TemplateCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       TemplateFilterNullOptionInput                  `pulumi:"nullOption"`
	ParameterName    pulumi.StringPtrInput                          `pulumi:"parameterName"`
	SelectAllOptions TemplateCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (TemplateCustomFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomFilterConfiguration)(nil)).Elem()
}

func (i TemplateCustomFilterConfigurationArgs) ToTemplateCustomFilterConfigurationOutput() TemplateCustomFilterConfigurationOutput {
	return i.ToTemplateCustomFilterConfigurationOutputWithContext(context.Background())
}

func (i TemplateCustomFilterConfigurationArgs) ToTemplateCustomFilterConfigurationOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterConfigurationOutput)
}

func (i TemplateCustomFilterConfigurationArgs) ToTemplateCustomFilterConfigurationPtrOutput() TemplateCustomFilterConfigurationPtrOutput {
	return i.ToTemplateCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomFilterConfigurationArgs) ToTemplateCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterConfigurationOutput).ToTemplateCustomFilterConfigurationPtrOutputWithContext(ctx)
}

// TemplateCustomFilterConfigurationPtrInput is an input type that accepts TemplateCustomFilterConfigurationArgs, TemplateCustomFilterConfigurationPtr and TemplateCustomFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomFilterConfigurationPtrInput` via:
//
//	        TemplateCustomFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomFilterConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCustomFilterConfigurationPtrOutput() TemplateCustomFilterConfigurationPtrOutput
	ToTemplateCustomFilterConfigurationPtrOutputWithContext(context.Context) TemplateCustomFilterConfigurationPtrOutput
}

type templateCustomFilterConfigurationPtrType TemplateCustomFilterConfigurationArgs

func TemplateCustomFilterConfigurationPtr(v *TemplateCustomFilterConfigurationArgs) TemplateCustomFilterConfigurationPtrInput {
	return (*templateCustomFilterConfigurationPtrType)(v)
}

func (*templateCustomFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomFilterConfiguration)(nil)).Elem()
}

func (i *templateCustomFilterConfigurationPtrType) ToTemplateCustomFilterConfigurationPtrOutput() TemplateCustomFilterConfigurationPtrOutput {
	return i.ToTemplateCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCustomFilterConfigurationPtrType) ToTemplateCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterConfigurationPtrOutput)
}

type TemplateCustomFilterConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCustomFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomFilterConfiguration)(nil)).Elem()
}

func (o TemplateCustomFilterConfigurationOutput) ToTemplateCustomFilterConfigurationOutput() TemplateCustomFilterConfigurationOutput {
	return o
}

func (o TemplateCustomFilterConfigurationOutput) ToTemplateCustomFilterConfigurationOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationOutput {
	return o
}

func (o TemplateCustomFilterConfigurationOutput) ToTemplateCustomFilterConfigurationPtrOutput() TemplateCustomFilterConfigurationPtrOutput {
	return o.ToTemplateCustomFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomFilterConfigurationOutput) ToTemplateCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomFilterConfiguration) *TemplateCustomFilterConfiguration {
		return &v
	}).(TemplateCustomFilterConfigurationPtrOutput)
}

func (o TemplateCustomFilterConfigurationOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCustomFilterConfiguration) *string { return v.CategoryValue }).(pulumi.StringPtrOutput)
}

func (o TemplateCustomFilterConfigurationOutput) MatchOperator() TemplateCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v TemplateCustomFilterConfiguration) TemplateCategoryFilterMatchOperator { return v.MatchOperator }).(TemplateCategoryFilterMatchOperatorOutput)
}

func (o TemplateCustomFilterConfigurationOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateCustomFilterConfiguration) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateCustomFilterConfigurationOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateCustomFilterConfiguration) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o TemplateCustomFilterConfigurationOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateCustomFilterConfiguration) *TemplateCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateCustomFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomFilterConfiguration)(nil)).Elem()
}

func (o TemplateCustomFilterConfigurationPtrOutput) ToTemplateCustomFilterConfigurationPtrOutput() TemplateCustomFilterConfigurationPtrOutput {
	return o
}

func (o TemplateCustomFilterConfigurationPtrOutput) ToTemplateCustomFilterConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterConfigurationPtrOutput {
	return o
}

func (o TemplateCustomFilterConfigurationPtrOutput) Elem() TemplateCustomFilterConfigurationOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) TemplateCustomFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCustomFilterConfiguration
		return ret
	}).(TemplateCustomFilterConfigurationOutput)
}

func (o TemplateCustomFilterConfigurationPtrOutput) CategoryValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CategoryValue
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCustomFilterConfigurationPtrOutput) MatchOperator() TemplateCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) *TemplateCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

func (o TemplateCustomFilterConfigurationPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateCustomFilterConfigurationPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateCustomFilterConfigurationPtrOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterConfiguration) *TemplateCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateCustomFilterListConfiguration struct {
	CategoryValues   []string                                `pulumi:"categoryValues"`
	MatchOperator    TemplateCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       TemplateFilterNullOption                `pulumi:"nullOption"`
	SelectAllOptions *TemplateCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// TemplateCustomFilterListConfigurationInput is an input type that accepts TemplateCustomFilterListConfigurationArgs and TemplateCustomFilterListConfigurationOutput values.
// You can construct a concrete instance of `TemplateCustomFilterListConfigurationInput` via:
//
//	TemplateCustomFilterListConfigurationArgs{...}
type TemplateCustomFilterListConfigurationInput interface {
	pulumi.Input

	ToTemplateCustomFilterListConfigurationOutput() TemplateCustomFilterListConfigurationOutput
	ToTemplateCustomFilterListConfigurationOutputWithContext(context.Context) TemplateCustomFilterListConfigurationOutput
}

type TemplateCustomFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                        `pulumi:"categoryValues"`
	MatchOperator    TemplateCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       TemplateFilterNullOptionInput                  `pulumi:"nullOption"`
	SelectAllOptions TemplateCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (TemplateCustomFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomFilterListConfiguration)(nil)).Elem()
}

func (i TemplateCustomFilterListConfigurationArgs) ToTemplateCustomFilterListConfigurationOutput() TemplateCustomFilterListConfigurationOutput {
	return i.ToTemplateCustomFilterListConfigurationOutputWithContext(context.Background())
}

func (i TemplateCustomFilterListConfigurationArgs) ToTemplateCustomFilterListConfigurationOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterListConfigurationOutput)
}

func (i TemplateCustomFilterListConfigurationArgs) ToTemplateCustomFilterListConfigurationPtrOutput() TemplateCustomFilterListConfigurationPtrOutput {
	return i.ToTemplateCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomFilterListConfigurationArgs) ToTemplateCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterListConfigurationOutput).ToTemplateCustomFilterListConfigurationPtrOutputWithContext(ctx)
}

// TemplateCustomFilterListConfigurationPtrInput is an input type that accepts TemplateCustomFilterListConfigurationArgs, TemplateCustomFilterListConfigurationPtr and TemplateCustomFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomFilterListConfigurationPtrInput` via:
//
//	        TemplateCustomFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCustomFilterListConfigurationPtrOutput() TemplateCustomFilterListConfigurationPtrOutput
	ToTemplateCustomFilterListConfigurationPtrOutputWithContext(context.Context) TemplateCustomFilterListConfigurationPtrOutput
}

type templateCustomFilterListConfigurationPtrType TemplateCustomFilterListConfigurationArgs

func TemplateCustomFilterListConfigurationPtr(v *TemplateCustomFilterListConfigurationArgs) TemplateCustomFilterListConfigurationPtrInput {
	return (*templateCustomFilterListConfigurationPtrType)(v)
}

func (*templateCustomFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomFilterListConfiguration)(nil)).Elem()
}

func (i *templateCustomFilterListConfigurationPtrType) ToTemplateCustomFilterListConfigurationPtrOutput() TemplateCustomFilterListConfigurationPtrOutput {
	return i.ToTemplateCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCustomFilterListConfigurationPtrType) ToTemplateCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomFilterListConfigurationPtrOutput)
}

type TemplateCustomFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCustomFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomFilterListConfiguration)(nil)).Elem()
}

func (o TemplateCustomFilterListConfigurationOutput) ToTemplateCustomFilterListConfigurationOutput() TemplateCustomFilterListConfigurationOutput {
	return o
}

func (o TemplateCustomFilterListConfigurationOutput) ToTemplateCustomFilterListConfigurationOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationOutput {
	return o
}

func (o TemplateCustomFilterListConfigurationOutput) ToTemplateCustomFilterListConfigurationPtrOutput() TemplateCustomFilterListConfigurationPtrOutput {
	return o.ToTemplateCustomFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomFilterListConfigurationOutput) ToTemplateCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomFilterListConfiguration) *TemplateCustomFilterListConfiguration {
		return &v
	}).(TemplateCustomFilterListConfigurationPtrOutput)
}

func (o TemplateCustomFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateCustomFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o TemplateCustomFilterListConfigurationOutput) MatchOperator() TemplateCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v TemplateCustomFilterListConfiguration) TemplateCategoryFilterMatchOperator {
		return v.MatchOperator
	}).(TemplateCategoryFilterMatchOperatorOutput)
}

func (o TemplateCustomFilterListConfigurationOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateCustomFilterListConfiguration) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateCustomFilterListConfigurationOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateCustomFilterListConfiguration) *TemplateCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateCustomFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomFilterListConfiguration)(nil)).Elem()
}

func (o TemplateCustomFilterListConfigurationPtrOutput) ToTemplateCustomFilterListConfigurationPtrOutput() TemplateCustomFilterListConfigurationPtrOutput {
	return o
}

func (o TemplateCustomFilterListConfigurationPtrOutput) ToTemplateCustomFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomFilterListConfigurationPtrOutput {
	return o
}

func (o TemplateCustomFilterListConfigurationPtrOutput) Elem() TemplateCustomFilterListConfigurationOutput {
	return o.ApplyT(func(v *TemplateCustomFilterListConfiguration) TemplateCustomFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCustomFilterListConfiguration
		return ret
	}).(TemplateCustomFilterListConfigurationOutput)
}

func (o TemplateCustomFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateCustomFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o TemplateCustomFilterListConfigurationPtrOutput) MatchOperator() TemplateCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterListConfiguration) *TemplateCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

func (o TemplateCustomFilterListConfigurationPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterListConfiguration) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateCustomFilterListConfigurationPtrOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateCustomFilterListConfiguration) *TemplateCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateCustomNarrativeOptions struct {
	Narrative string `pulumi:"narrative"`
}

// TemplateCustomNarrativeOptionsInput is an input type that accepts TemplateCustomNarrativeOptionsArgs and TemplateCustomNarrativeOptionsOutput values.
// You can construct a concrete instance of `TemplateCustomNarrativeOptionsInput` via:
//
//	TemplateCustomNarrativeOptionsArgs{...}
type TemplateCustomNarrativeOptionsInput interface {
	pulumi.Input

	ToTemplateCustomNarrativeOptionsOutput() TemplateCustomNarrativeOptionsOutput
	ToTemplateCustomNarrativeOptionsOutputWithContext(context.Context) TemplateCustomNarrativeOptionsOutput
}

type TemplateCustomNarrativeOptionsArgs struct {
	Narrative pulumi.StringInput `pulumi:"narrative"`
}

func (TemplateCustomNarrativeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomNarrativeOptions)(nil)).Elem()
}

func (i TemplateCustomNarrativeOptionsArgs) ToTemplateCustomNarrativeOptionsOutput() TemplateCustomNarrativeOptionsOutput {
	return i.ToTemplateCustomNarrativeOptionsOutputWithContext(context.Background())
}

func (i TemplateCustomNarrativeOptionsArgs) ToTemplateCustomNarrativeOptionsOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomNarrativeOptionsOutput)
}

func (i TemplateCustomNarrativeOptionsArgs) ToTemplateCustomNarrativeOptionsPtrOutput() TemplateCustomNarrativeOptionsPtrOutput {
	return i.ToTemplateCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateCustomNarrativeOptionsArgs) ToTemplateCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomNarrativeOptionsOutput).ToTemplateCustomNarrativeOptionsPtrOutputWithContext(ctx)
}

// TemplateCustomNarrativeOptionsPtrInput is an input type that accepts TemplateCustomNarrativeOptionsArgs, TemplateCustomNarrativeOptionsPtr and TemplateCustomNarrativeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateCustomNarrativeOptionsPtrInput` via:
//
//	        TemplateCustomNarrativeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomNarrativeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateCustomNarrativeOptionsPtrOutput() TemplateCustomNarrativeOptionsPtrOutput
	ToTemplateCustomNarrativeOptionsPtrOutputWithContext(context.Context) TemplateCustomNarrativeOptionsPtrOutput
}

type templateCustomNarrativeOptionsPtrType TemplateCustomNarrativeOptionsArgs

func TemplateCustomNarrativeOptionsPtr(v *TemplateCustomNarrativeOptionsArgs) TemplateCustomNarrativeOptionsPtrInput {
	return (*templateCustomNarrativeOptionsPtrType)(v)
}

func (*templateCustomNarrativeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomNarrativeOptions)(nil)).Elem()
}

func (i *templateCustomNarrativeOptionsPtrType) ToTemplateCustomNarrativeOptionsPtrOutput() TemplateCustomNarrativeOptionsPtrOutput {
	return i.ToTemplateCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateCustomNarrativeOptionsPtrType) ToTemplateCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomNarrativeOptionsPtrOutput)
}

type TemplateCustomNarrativeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateCustomNarrativeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomNarrativeOptions)(nil)).Elem()
}

func (o TemplateCustomNarrativeOptionsOutput) ToTemplateCustomNarrativeOptionsOutput() TemplateCustomNarrativeOptionsOutput {
	return o
}

func (o TemplateCustomNarrativeOptionsOutput) ToTemplateCustomNarrativeOptionsOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsOutput {
	return o
}

func (o TemplateCustomNarrativeOptionsOutput) ToTemplateCustomNarrativeOptionsPtrOutput() TemplateCustomNarrativeOptionsPtrOutput {
	return o.ToTemplateCustomNarrativeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateCustomNarrativeOptionsOutput) ToTemplateCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomNarrativeOptions) *TemplateCustomNarrativeOptions {
		return &v
	}).(TemplateCustomNarrativeOptionsPtrOutput)
}

func (o TemplateCustomNarrativeOptionsOutput) Narrative() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateCustomNarrativeOptions) string { return v.Narrative }).(pulumi.StringOutput)
}

type TemplateCustomNarrativeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomNarrativeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomNarrativeOptions)(nil)).Elem()
}

func (o TemplateCustomNarrativeOptionsPtrOutput) ToTemplateCustomNarrativeOptionsPtrOutput() TemplateCustomNarrativeOptionsPtrOutput {
	return o
}

func (o TemplateCustomNarrativeOptionsPtrOutput) ToTemplateCustomNarrativeOptionsPtrOutputWithContext(ctx context.Context) TemplateCustomNarrativeOptionsPtrOutput {
	return o
}

func (o TemplateCustomNarrativeOptionsPtrOutput) Elem() TemplateCustomNarrativeOptionsOutput {
	return o.ApplyT(func(v *TemplateCustomNarrativeOptions) TemplateCustomNarrativeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateCustomNarrativeOptions
		return ret
	}).(TemplateCustomNarrativeOptionsOutput)
}

func (o TemplateCustomNarrativeOptionsPtrOutput) Narrative() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateCustomNarrativeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Narrative
	}).(pulumi.StringPtrOutput)
}

type TemplateCustomParameterValues struct {
	DateTimeValues []string  `pulumi:"dateTimeValues"`
	DecimalValues  []float64 `pulumi:"decimalValues"`
	IntegerValues  []float64 `pulumi:"integerValues"`
	StringValues   []string  `pulumi:"stringValues"`
}

// TemplateCustomParameterValuesInput is an input type that accepts TemplateCustomParameterValuesArgs and TemplateCustomParameterValuesOutput values.
// You can construct a concrete instance of `TemplateCustomParameterValuesInput` via:
//
//	TemplateCustomParameterValuesArgs{...}
type TemplateCustomParameterValuesInput interface {
	pulumi.Input

	ToTemplateCustomParameterValuesOutput() TemplateCustomParameterValuesOutput
	ToTemplateCustomParameterValuesOutputWithContext(context.Context) TemplateCustomParameterValuesOutput
}

type TemplateCustomParameterValuesArgs struct {
	DateTimeValues pulumi.StringArrayInput  `pulumi:"dateTimeValues"`
	DecimalValues  pulumi.Float64ArrayInput `pulumi:"decimalValues"`
	IntegerValues  pulumi.Float64ArrayInput `pulumi:"integerValues"`
	StringValues   pulumi.StringArrayInput  `pulumi:"stringValues"`
}

func (TemplateCustomParameterValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomParameterValues)(nil)).Elem()
}

func (i TemplateCustomParameterValuesArgs) ToTemplateCustomParameterValuesOutput() TemplateCustomParameterValuesOutput {
	return i.ToTemplateCustomParameterValuesOutputWithContext(context.Background())
}

func (i TemplateCustomParameterValuesArgs) ToTemplateCustomParameterValuesOutputWithContext(ctx context.Context) TemplateCustomParameterValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomParameterValuesOutput)
}

func (i TemplateCustomParameterValuesArgs) ToTemplateCustomParameterValuesPtrOutput() TemplateCustomParameterValuesPtrOutput {
	return i.ToTemplateCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i TemplateCustomParameterValuesArgs) ToTemplateCustomParameterValuesPtrOutputWithContext(ctx context.Context) TemplateCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomParameterValuesOutput).ToTemplateCustomParameterValuesPtrOutputWithContext(ctx)
}

// TemplateCustomParameterValuesPtrInput is an input type that accepts TemplateCustomParameterValuesArgs, TemplateCustomParameterValuesPtr and TemplateCustomParameterValuesPtrOutput values.
// You can construct a concrete instance of `TemplateCustomParameterValuesPtrInput` via:
//
//	        TemplateCustomParameterValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomParameterValuesPtrInput interface {
	pulumi.Input

	ToTemplateCustomParameterValuesPtrOutput() TemplateCustomParameterValuesPtrOutput
	ToTemplateCustomParameterValuesPtrOutputWithContext(context.Context) TemplateCustomParameterValuesPtrOutput
}

type templateCustomParameterValuesPtrType TemplateCustomParameterValuesArgs

func TemplateCustomParameterValuesPtr(v *TemplateCustomParameterValuesArgs) TemplateCustomParameterValuesPtrInput {
	return (*templateCustomParameterValuesPtrType)(v)
}

func (*templateCustomParameterValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomParameterValues)(nil)).Elem()
}

func (i *templateCustomParameterValuesPtrType) ToTemplateCustomParameterValuesPtrOutput() TemplateCustomParameterValuesPtrOutput {
	return i.ToTemplateCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (i *templateCustomParameterValuesPtrType) ToTemplateCustomParameterValuesPtrOutputWithContext(ctx context.Context) TemplateCustomParameterValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomParameterValuesPtrOutput)
}

type TemplateCustomParameterValuesOutput struct{ *pulumi.OutputState }

func (TemplateCustomParameterValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomParameterValues)(nil)).Elem()
}

func (o TemplateCustomParameterValuesOutput) ToTemplateCustomParameterValuesOutput() TemplateCustomParameterValuesOutput {
	return o
}

func (o TemplateCustomParameterValuesOutput) ToTemplateCustomParameterValuesOutputWithContext(ctx context.Context) TemplateCustomParameterValuesOutput {
	return o
}

func (o TemplateCustomParameterValuesOutput) ToTemplateCustomParameterValuesPtrOutput() TemplateCustomParameterValuesPtrOutput {
	return o.ToTemplateCustomParameterValuesPtrOutputWithContext(context.Background())
}

func (o TemplateCustomParameterValuesOutput) ToTemplateCustomParameterValuesPtrOutputWithContext(ctx context.Context) TemplateCustomParameterValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomParameterValues) *TemplateCustomParameterValues {
		return &v
	}).(TemplateCustomParameterValuesPtrOutput)
}

func (o TemplateCustomParameterValuesOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateCustomParameterValues) []string { return v.DateTimeValues }).(pulumi.StringArrayOutput)
}

func (o TemplateCustomParameterValuesOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v TemplateCustomParameterValues) []float64 { return v.DecimalValues }).(pulumi.Float64ArrayOutput)
}

func (o TemplateCustomParameterValuesOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v TemplateCustomParameterValues) []float64 { return v.IntegerValues }).(pulumi.Float64ArrayOutput)
}

func (o TemplateCustomParameterValuesOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateCustomParameterValues) []string { return v.StringValues }).(pulumi.StringArrayOutput)
}

type TemplateCustomParameterValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomParameterValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomParameterValues)(nil)).Elem()
}

func (o TemplateCustomParameterValuesPtrOutput) ToTemplateCustomParameterValuesPtrOutput() TemplateCustomParameterValuesPtrOutput {
	return o
}

func (o TemplateCustomParameterValuesPtrOutput) ToTemplateCustomParameterValuesPtrOutputWithContext(ctx context.Context) TemplateCustomParameterValuesPtrOutput {
	return o
}

func (o TemplateCustomParameterValuesPtrOutput) Elem() TemplateCustomParameterValuesOutput {
	return o.ApplyT(func(v *TemplateCustomParameterValues) TemplateCustomParameterValues {
		if v != nil {
			return *v
		}
		var ret TemplateCustomParameterValues
		return ret
	}).(TemplateCustomParameterValuesOutput)
}

func (o TemplateCustomParameterValuesPtrOutput) DateTimeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.DateTimeValues
	}).(pulumi.StringArrayOutput)
}

func (o TemplateCustomParameterValuesPtrOutput) DecimalValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *TemplateCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.DecimalValues
	}).(pulumi.Float64ArrayOutput)
}

func (o TemplateCustomParameterValuesPtrOutput) IntegerValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *TemplateCustomParameterValues) []float64 {
		if v == nil {
			return nil
		}
		return v.IntegerValues
	}).(pulumi.Float64ArrayOutput)
}

func (o TemplateCustomParameterValuesPtrOutput) StringValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateCustomParameterValues) []string {
		if v == nil {
			return nil
		}
		return v.StringValues
	}).(pulumi.StringArrayOutput)
}

type TemplateCustomValuesConfiguration struct {
	CustomValues     TemplateCustomParameterValues `pulumi:"customValues"`
	IncludeNullValue *bool                         `pulumi:"includeNullValue"`
}

// TemplateCustomValuesConfigurationInput is an input type that accepts TemplateCustomValuesConfigurationArgs and TemplateCustomValuesConfigurationOutput values.
// You can construct a concrete instance of `TemplateCustomValuesConfigurationInput` via:
//
//	TemplateCustomValuesConfigurationArgs{...}
type TemplateCustomValuesConfigurationInput interface {
	pulumi.Input

	ToTemplateCustomValuesConfigurationOutput() TemplateCustomValuesConfigurationOutput
	ToTemplateCustomValuesConfigurationOutputWithContext(context.Context) TemplateCustomValuesConfigurationOutput
}

type TemplateCustomValuesConfigurationArgs struct {
	CustomValues     TemplateCustomParameterValuesInput `pulumi:"customValues"`
	IncludeNullValue pulumi.BoolPtrInput                `pulumi:"includeNullValue"`
}

func (TemplateCustomValuesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomValuesConfiguration)(nil)).Elem()
}

func (i TemplateCustomValuesConfigurationArgs) ToTemplateCustomValuesConfigurationOutput() TemplateCustomValuesConfigurationOutput {
	return i.ToTemplateCustomValuesConfigurationOutputWithContext(context.Background())
}

func (i TemplateCustomValuesConfigurationArgs) ToTemplateCustomValuesConfigurationOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomValuesConfigurationOutput)
}

func (i TemplateCustomValuesConfigurationArgs) ToTemplateCustomValuesConfigurationPtrOutput() TemplateCustomValuesConfigurationPtrOutput {
	return i.ToTemplateCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateCustomValuesConfigurationArgs) ToTemplateCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomValuesConfigurationOutput).ToTemplateCustomValuesConfigurationPtrOutputWithContext(ctx)
}

// TemplateCustomValuesConfigurationPtrInput is an input type that accepts TemplateCustomValuesConfigurationArgs, TemplateCustomValuesConfigurationPtr and TemplateCustomValuesConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateCustomValuesConfigurationPtrInput` via:
//
//	        TemplateCustomValuesConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateCustomValuesConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateCustomValuesConfigurationPtrOutput() TemplateCustomValuesConfigurationPtrOutput
	ToTemplateCustomValuesConfigurationPtrOutputWithContext(context.Context) TemplateCustomValuesConfigurationPtrOutput
}

type templateCustomValuesConfigurationPtrType TemplateCustomValuesConfigurationArgs

func TemplateCustomValuesConfigurationPtr(v *TemplateCustomValuesConfigurationArgs) TemplateCustomValuesConfigurationPtrInput {
	return (*templateCustomValuesConfigurationPtrType)(v)
}

func (*templateCustomValuesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomValuesConfiguration)(nil)).Elem()
}

func (i *templateCustomValuesConfigurationPtrType) ToTemplateCustomValuesConfigurationPtrOutput() TemplateCustomValuesConfigurationPtrOutput {
	return i.ToTemplateCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateCustomValuesConfigurationPtrType) ToTemplateCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCustomValuesConfigurationPtrOutput)
}

type TemplateCustomValuesConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateCustomValuesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCustomValuesConfiguration)(nil)).Elem()
}

func (o TemplateCustomValuesConfigurationOutput) ToTemplateCustomValuesConfigurationOutput() TemplateCustomValuesConfigurationOutput {
	return o
}

func (o TemplateCustomValuesConfigurationOutput) ToTemplateCustomValuesConfigurationOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationOutput {
	return o
}

func (o TemplateCustomValuesConfigurationOutput) ToTemplateCustomValuesConfigurationPtrOutput() TemplateCustomValuesConfigurationPtrOutput {
	return o.ToTemplateCustomValuesConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateCustomValuesConfigurationOutput) ToTemplateCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateCustomValuesConfiguration) *TemplateCustomValuesConfiguration {
		return &v
	}).(TemplateCustomValuesConfigurationPtrOutput)
}

func (o TemplateCustomValuesConfigurationOutput) CustomValues() TemplateCustomParameterValuesOutput {
	return o.ApplyT(func(v TemplateCustomValuesConfiguration) TemplateCustomParameterValues { return v.CustomValues }).(TemplateCustomParameterValuesOutput)
}

func (o TemplateCustomValuesConfigurationOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateCustomValuesConfiguration) *bool { return v.IncludeNullValue }).(pulumi.BoolPtrOutput)
}

type TemplateCustomValuesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateCustomValuesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateCustomValuesConfiguration)(nil)).Elem()
}

func (o TemplateCustomValuesConfigurationPtrOutput) ToTemplateCustomValuesConfigurationPtrOutput() TemplateCustomValuesConfigurationPtrOutput {
	return o
}

func (o TemplateCustomValuesConfigurationPtrOutput) ToTemplateCustomValuesConfigurationPtrOutputWithContext(ctx context.Context) TemplateCustomValuesConfigurationPtrOutput {
	return o
}

func (o TemplateCustomValuesConfigurationPtrOutput) Elem() TemplateCustomValuesConfigurationOutput {
	return o.ApplyT(func(v *TemplateCustomValuesConfiguration) TemplateCustomValuesConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateCustomValuesConfiguration
		return ret
	}).(TemplateCustomValuesConfigurationOutput)
}

func (o TemplateCustomValuesConfigurationPtrOutput) CustomValues() TemplateCustomParameterValuesPtrOutput {
	return o.ApplyT(func(v *TemplateCustomValuesConfiguration) *TemplateCustomParameterValues {
		if v == nil {
			return nil
		}
		return &v.CustomValues
	}).(TemplateCustomParameterValuesPtrOutput)
}

func (o TemplateCustomValuesConfigurationPtrOutput) IncludeNullValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateCustomValuesConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeNullValue
	}).(pulumi.BoolPtrOutput)
}

type TemplateDataBarsOptions struct {
	FieldId       string  `pulumi:"fieldId"`
	NegativeColor *string `pulumi:"negativeColor"`
	PositiveColor *string `pulumi:"positiveColor"`
}

// TemplateDataBarsOptionsInput is an input type that accepts TemplateDataBarsOptionsArgs and TemplateDataBarsOptionsOutput values.
// You can construct a concrete instance of `TemplateDataBarsOptionsInput` via:
//
//	TemplateDataBarsOptionsArgs{...}
type TemplateDataBarsOptionsInput interface {
	pulumi.Input

	ToTemplateDataBarsOptionsOutput() TemplateDataBarsOptionsOutput
	ToTemplateDataBarsOptionsOutputWithContext(context.Context) TemplateDataBarsOptionsOutput
}

type TemplateDataBarsOptionsArgs struct {
	FieldId       pulumi.StringInput    `pulumi:"fieldId"`
	NegativeColor pulumi.StringPtrInput `pulumi:"negativeColor"`
	PositiveColor pulumi.StringPtrInput `pulumi:"positiveColor"`
}

func (TemplateDataBarsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataBarsOptions)(nil)).Elem()
}

func (i TemplateDataBarsOptionsArgs) ToTemplateDataBarsOptionsOutput() TemplateDataBarsOptionsOutput {
	return i.ToTemplateDataBarsOptionsOutputWithContext(context.Background())
}

func (i TemplateDataBarsOptionsArgs) ToTemplateDataBarsOptionsOutputWithContext(ctx context.Context) TemplateDataBarsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataBarsOptionsOutput)
}

func (i TemplateDataBarsOptionsArgs) ToTemplateDataBarsOptionsPtrOutput() TemplateDataBarsOptionsPtrOutput {
	return i.ToTemplateDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDataBarsOptionsArgs) ToTemplateDataBarsOptionsPtrOutputWithContext(ctx context.Context) TemplateDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataBarsOptionsOutput).ToTemplateDataBarsOptionsPtrOutputWithContext(ctx)
}

// TemplateDataBarsOptionsPtrInput is an input type that accepts TemplateDataBarsOptionsArgs, TemplateDataBarsOptionsPtr and TemplateDataBarsOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDataBarsOptionsPtrInput` via:
//
//	        TemplateDataBarsOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDataBarsOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDataBarsOptionsPtrOutput() TemplateDataBarsOptionsPtrOutput
	ToTemplateDataBarsOptionsPtrOutputWithContext(context.Context) TemplateDataBarsOptionsPtrOutput
}

type templateDataBarsOptionsPtrType TemplateDataBarsOptionsArgs

func TemplateDataBarsOptionsPtr(v *TemplateDataBarsOptionsArgs) TemplateDataBarsOptionsPtrInput {
	return (*templateDataBarsOptionsPtrType)(v)
}

func (*templateDataBarsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataBarsOptions)(nil)).Elem()
}

func (i *templateDataBarsOptionsPtrType) ToTemplateDataBarsOptionsPtrOutput() TemplateDataBarsOptionsPtrOutput {
	return i.ToTemplateDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDataBarsOptionsPtrType) ToTemplateDataBarsOptionsPtrOutputWithContext(ctx context.Context) TemplateDataBarsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataBarsOptionsPtrOutput)
}

type TemplateDataBarsOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDataBarsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataBarsOptions)(nil)).Elem()
}

func (o TemplateDataBarsOptionsOutput) ToTemplateDataBarsOptionsOutput() TemplateDataBarsOptionsOutput {
	return o
}

func (o TemplateDataBarsOptionsOutput) ToTemplateDataBarsOptionsOutputWithContext(ctx context.Context) TemplateDataBarsOptionsOutput {
	return o
}

func (o TemplateDataBarsOptionsOutput) ToTemplateDataBarsOptionsPtrOutput() TemplateDataBarsOptionsPtrOutput {
	return o.ToTemplateDataBarsOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDataBarsOptionsOutput) ToTemplateDataBarsOptionsPtrOutputWithContext(ctx context.Context) TemplateDataBarsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataBarsOptions) *TemplateDataBarsOptions {
		return &v
	}).(TemplateDataBarsOptionsPtrOutput)
}

func (o TemplateDataBarsOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataBarsOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateDataBarsOptionsOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataBarsOptions) *string { return v.NegativeColor }).(pulumi.StringPtrOutput)
}

func (o TemplateDataBarsOptionsOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataBarsOptions) *string { return v.PositiveColor }).(pulumi.StringPtrOutput)
}

type TemplateDataBarsOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataBarsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataBarsOptions)(nil)).Elem()
}

func (o TemplateDataBarsOptionsPtrOutput) ToTemplateDataBarsOptionsPtrOutput() TemplateDataBarsOptionsPtrOutput {
	return o
}

func (o TemplateDataBarsOptionsPtrOutput) ToTemplateDataBarsOptionsPtrOutputWithContext(ctx context.Context) TemplateDataBarsOptionsPtrOutput {
	return o
}

func (o TemplateDataBarsOptionsPtrOutput) Elem() TemplateDataBarsOptionsOutput {
	return o.ApplyT(func(v *TemplateDataBarsOptions) TemplateDataBarsOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDataBarsOptions
		return ret
	}).(TemplateDataBarsOptionsOutput)
}

func (o TemplateDataBarsOptionsPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataBarsOptionsPtrOutput) NegativeColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.NegativeColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataBarsOptionsPtrOutput) PositiveColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataBarsOptions) *string {
		if v == nil {
			return nil
		}
		return v.PositiveColor
	}).(pulumi.StringPtrOutput)
}

type TemplateDataColor struct {
	Color     *string  `pulumi:"color"`
	DataValue *float64 `pulumi:"dataValue"`
}

// TemplateDataColorInput is an input type that accepts TemplateDataColorArgs and TemplateDataColorOutput values.
// You can construct a concrete instance of `TemplateDataColorInput` via:
//
//	TemplateDataColorArgs{...}
type TemplateDataColorInput interface {
	pulumi.Input

	ToTemplateDataColorOutput() TemplateDataColorOutput
	ToTemplateDataColorOutputWithContext(context.Context) TemplateDataColorOutput
}

type TemplateDataColorArgs struct {
	Color     pulumi.StringPtrInput  `pulumi:"color"`
	DataValue pulumi.Float64PtrInput `pulumi:"dataValue"`
}

func (TemplateDataColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataColor)(nil)).Elem()
}

func (i TemplateDataColorArgs) ToTemplateDataColorOutput() TemplateDataColorOutput {
	return i.ToTemplateDataColorOutputWithContext(context.Background())
}

func (i TemplateDataColorArgs) ToTemplateDataColorOutputWithContext(ctx context.Context) TemplateDataColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataColorOutput)
}

func (i TemplateDataColorArgs) ToTemplateDataColorPtrOutput() TemplateDataColorPtrOutput {
	return i.ToTemplateDataColorPtrOutputWithContext(context.Background())
}

func (i TemplateDataColorArgs) ToTemplateDataColorPtrOutputWithContext(ctx context.Context) TemplateDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataColorOutput).ToTemplateDataColorPtrOutputWithContext(ctx)
}

// TemplateDataColorPtrInput is an input type that accepts TemplateDataColorArgs, TemplateDataColorPtr and TemplateDataColorPtrOutput values.
// You can construct a concrete instance of `TemplateDataColorPtrInput` via:
//
//	        TemplateDataColorArgs{...}
//
//	or:
//
//	        nil
type TemplateDataColorPtrInput interface {
	pulumi.Input

	ToTemplateDataColorPtrOutput() TemplateDataColorPtrOutput
	ToTemplateDataColorPtrOutputWithContext(context.Context) TemplateDataColorPtrOutput
}

type templateDataColorPtrType TemplateDataColorArgs

func TemplateDataColorPtr(v *TemplateDataColorArgs) TemplateDataColorPtrInput {
	return (*templateDataColorPtrType)(v)
}

func (*templateDataColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataColor)(nil)).Elem()
}

func (i *templateDataColorPtrType) ToTemplateDataColorPtrOutput() TemplateDataColorPtrOutput {
	return i.ToTemplateDataColorPtrOutputWithContext(context.Background())
}

func (i *templateDataColorPtrType) ToTemplateDataColorPtrOutputWithContext(ctx context.Context) TemplateDataColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataColorPtrOutput)
}

// TemplateDataColorArrayInput is an input type that accepts TemplateDataColorArray and TemplateDataColorArrayOutput values.
// You can construct a concrete instance of `TemplateDataColorArrayInput` via:
//
//	TemplateDataColorArray{ TemplateDataColorArgs{...} }
type TemplateDataColorArrayInput interface {
	pulumi.Input

	ToTemplateDataColorArrayOutput() TemplateDataColorArrayOutput
	ToTemplateDataColorArrayOutputWithContext(context.Context) TemplateDataColorArrayOutput
}

type TemplateDataColorArray []TemplateDataColorInput

func (TemplateDataColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataColor)(nil)).Elem()
}

func (i TemplateDataColorArray) ToTemplateDataColorArrayOutput() TemplateDataColorArrayOutput {
	return i.ToTemplateDataColorArrayOutputWithContext(context.Background())
}

func (i TemplateDataColorArray) ToTemplateDataColorArrayOutputWithContext(ctx context.Context) TemplateDataColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataColorArrayOutput)
}

type TemplateDataColorOutput struct{ *pulumi.OutputState }

func (TemplateDataColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataColor)(nil)).Elem()
}

func (o TemplateDataColorOutput) ToTemplateDataColorOutput() TemplateDataColorOutput {
	return o
}

func (o TemplateDataColorOutput) ToTemplateDataColorOutputWithContext(ctx context.Context) TemplateDataColorOutput {
	return o
}

func (o TemplateDataColorOutput) ToTemplateDataColorPtrOutput() TemplateDataColorPtrOutput {
	return o.ToTemplateDataColorPtrOutputWithContext(context.Background())
}

func (o TemplateDataColorOutput) ToTemplateDataColorPtrOutputWithContext(ctx context.Context) TemplateDataColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataColor) *TemplateDataColor {
		return &v
	}).(TemplateDataColorPtrOutput)
}

func (o TemplateDataColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateDataColorOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateDataColor) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

type TemplateDataColorPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataColor)(nil)).Elem()
}

func (o TemplateDataColorPtrOutput) ToTemplateDataColorPtrOutput() TemplateDataColorPtrOutput {
	return o
}

func (o TemplateDataColorPtrOutput) ToTemplateDataColorPtrOutputWithContext(ctx context.Context) TemplateDataColorPtrOutput {
	return o
}

func (o TemplateDataColorPtrOutput) Elem() TemplateDataColorOutput {
	return o.ApplyT(func(v *TemplateDataColor) TemplateDataColor {
		if v != nil {
			return *v
		}
		var ret TemplateDataColor
		return ret
	}).(TemplateDataColorOutput)
}

func (o TemplateDataColorPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataColor) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataColorPtrOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateDataColor) *float64 {
		if v == nil {
			return nil
		}
		return v.DataValue
	}).(pulumi.Float64PtrOutput)
}

type TemplateDataColorArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataColor)(nil)).Elem()
}

func (o TemplateDataColorArrayOutput) ToTemplateDataColorArrayOutput() TemplateDataColorArrayOutput {
	return o
}

func (o TemplateDataColorArrayOutput) ToTemplateDataColorArrayOutputWithContext(ctx context.Context) TemplateDataColorArrayOutput {
	return o
}

func (o TemplateDataColorArrayOutput) Index(i pulumi.IntInput) TemplateDataColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataColor {
		return vs[0].([]TemplateDataColor)[vs[1].(int)]
	}).(TemplateDataColorOutput)
}

type TemplateDataFieldSeriesItem struct {
	AxisBinding TemplateAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                           `pulumi:"fieldId"`
	FieldValue  *string                          `pulumi:"fieldValue"`
	Settings    *TemplateLineChartSeriesSettings `pulumi:"settings"`
}

// TemplateDataFieldSeriesItemInput is an input type that accepts TemplateDataFieldSeriesItemArgs and TemplateDataFieldSeriesItemOutput values.
// You can construct a concrete instance of `TemplateDataFieldSeriesItemInput` via:
//
//	TemplateDataFieldSeriesItemArgs{...}
type TemplateDataFieldSeriesItemInput interface {
	pulumi.Input

	ToTemplateDataFieldSeriesItemOutput() TemplateDataFieldSeriesItemOutput
	ToTemplateDataFieldSeriesItemOutputWithContext(context.Context) TemplateDataFieldSeriesItemOutput
}

type TemplateDataFieldSeriesItemArgs struct {
	AxisBinding TemplateAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                      `pulumi:"fieldId"`
	FieldValue  pulumi.StringPtrInput                   `pulumi:"fieldValue"`
	Settings    TemplateLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (TemplateDataFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataFieldSeriesItem)(nil)).Elem()
}

func (i TemplateDataFieldSeriesItemArgs) ToTemplateDataFieldSeriesItemOutput() TemplateDataFieldSeriesItemOutput {
	return i.ToTemplateDataFieldSeriesItemOutputWithContext(context.Background())
}

func (i TemplateDataFieldSeriesItemArgs) ToTemplateDataFieldSeriesItemOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataFieldSeriesItemOutput)
}

func (i TemplateDataFieldSeriesItemArgs) ToTemplateDataFieldSeriesItemPtrOutput() TemplateDataFieldSeriesItemPtrOutput {
	return i.ToTemplateDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i TemplateDataFieldSeriesItemArgs) ToTemplateDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataFieldSeriesItemOutput).ToTemplateDataFieldSeriesItemPtrOutputWithContext(ctx)
}

// TemplateDataFieldSeriesItemPtrInput is an input type that accepts TemplateDataFieldSeriesItemArgs, TemplateDataFieldSeriesItemPtr and TemplateDataFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `TemplateDataFieldSeriesItemPtrInput` via:
//
//	        TemplateDataFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type TemplateDataFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToTemplateDataFieldSeriesItemPtrOutput() TemplateDataFieldSeriesItemPtrOutput
	ToTemplateDataFieldSeriesItemPtrOutputWithContext(context.Context) TemplateDataFieldSeriesItemPtrOutput
}

type templateDataFieldSeriesItemPtrType TemplateDataFieldSeriesItemArgs

func TemplateDataFieldSeriesItemPtr(v *TemplateDataFieldSeriesItemArgs) TemplateDataFieldSeriesItemPtrInput {
	return (*templateDataFieldSeriesItemPtrType)(v)
}

func (*templateDataFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataFieldSeriesItem)(nil)).Elem()
}

func (i *templateDataFieldSeriesItemPtrType) ToTemplateDataFieldSeriesItemPtrOutput() TemplateDataFieldSeriesItemPtrOutput {
	return i.ToTemplateDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *templateDataFieldSeriesItemPtrType) ToTemplateDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataFieldSeriesItemPtrOutput)
}

type TemplateDataFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (TemplateDataFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataFieldSeriesItem)(nil)).Elem()
}

func (o TemplateDataFieldSeriesItemOutput) ToTemplateDataFieldSeriesItemOutput() TemplateDataFieldSeriesItemOutput {
	return o
}

func (o TemplateDataFieldSeriesItemOutput) ToTemplateDataFieldSeriesItemOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemOutput {
	return o
}

func (o TemplateDataFieldSeriesItemOutput) ToTemplateDataFieldSeriesItemPtrOutput() TemplateDataFieldSeriesItemPtrOutput {
	return o.ToTemplateDataFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o TemplateDataFieldSeriesItemOutput) ToTemplateDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataFieldSeriesItem) *TemplateDataFieldSeriesItem {
		return &v
	}).(TemplateDataFieldSeriesItemPtrOutput)
}

func (o TemplateDataFieldSeriesItemOutput) AxisBinding() TemplateAxisBindingOutput {
	return o.ApplyT(func(v TemplateDataFieldSeriesItem) TemplateAxisBinding { return v.AxisBinding }).(TemplateAxisBindingOutput)
}

func (o TemplateDataFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateDataFieldSeriesItemOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataFieldSeriesItem) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o TemplateDataFieldSeriesItemOutput) Settings() TemplateLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v TemplateDataFieldSeriesItem) *TemplateLineChartSeriesSettings { return v.Settings }).(TemplateLineChartSeriesSettingsPtrOutput)
}

type TemplateDataFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataFieldSeriesItem)(nil)).Elem()
}

func (o TemplateDataFieldSeriesItemPtrOutput) ToTemplateDataFieldSeriesItemPtrOutput() TemplateDataFieldSeriesItemPtrOutput {
	return o
}

func (o TemplateDataFieldSeriesItemPtrOutput) ToTemplateDataFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateDataFieldSeriesItemPtrOutput {
	return o
}

func (o TemplateDataFieldSeriesItemPtrOutput) Elem() TemplateDataFieldSeriesItemOutput {
	return o.ApplyT(func(v *TemplateDataFieldSeriesItem) TemplateDataFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret TemplateDataFieldSeriesItem
		return ret
	}).(TemplateDataFieldSeriesItemOutput)
}

func (o TemplateDataFieldSeriesItemPtrOutput) AxisBinding() TemplateAxisBindingPtrOutput {
	return o.ApplyT(func(v *TemplateDataFieldSeriesItem) *TemplateAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(TemplateAxisBindingPtrOutput)
}

func (o TemplateDataFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataFieldSeriesItemPtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataFieldSeriesItemPtrOutput) Settings() TemplateLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateDataFieldSeriesItem) *TemplateLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(TemplateLineChartSeriesSettingsPtrOutput)
}

type TemplateDataLabelOptions struct {
	CategoryLabelVisibility *TemplateVisibility        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          []TemplateDataLabelType    `pulumi:"dataLabelTypes"`
	LabelColor              *string                    `pulumi:"labelColor"`
	LabelContent            *TemplateDataLabelContent  `pulumi:"labelContent"`
	LabelFontConfiguration  *TemplateFontConfiguration `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  *TemplateVisibility        `pulumi:"measureLabelVisibility"`
	Overlap                 *TemplateDataLabelOverlap  `pulumi:"overlap"`
	Position                *TemplateDataLabelPosition `pulumi:"position"`
	TotalsVisibility        *TemplateVisibility        `pulumi:"totalsVisibility"`
	Visibility              *TemplateVisibility        `pulumi:"visibility"`
}

// TemplateDataLabelOptionsInput is an input type that accepts TemplateDataLabelOptionsArgs and TemplateDataLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateDataLabelOptionsInput` via:
//
//	TemplateDataLabelOptionsArgs{...}
type TemplateDataLabelOptionsInput interface {
	pulumi.Input

	ToTemplateDataLabelOptionsOutput() TemplateDataLabelOptionsOutput
	ToTemplateDataLabelOptionsOutputWithContext(context.Context) TemplateDataLabelOptionsOutput
}

type TemplateDataLabelOptionsArgs struct {
	CategoryLabelVisibility TemplateVisibilityPtrInput        `pulumi:"categoryLabelVisibility"`
	DataLabelTypes          TemplateDataLabelTypeArrayInput   `pulumi:"dataLabelTypes"`
	LabelColor              pulumi.StringPtrInput             `pulumi:"labelColor"`
	LabelContent            TemplateDataLabelContentPtrInput  `pulumi:"labelContent"`
	LabelFontConfiguration  TemplateFontConfigurationPtrInput `pulumi:"labelFontConfiguration"`
	MeasureLabelVisibility  TemplateVisibilityPtrInput        `pulumi:"measureLabelVisibility"`
	Overlap                 TemplateDataLabelOverlapPtrInput  `pulumi:"overlap"`
	Position                TemplateDataLabelPositionPtrInput `pulumi:"position"`
	TotalsVisibility        TemplateVisibilityPtrInput        `pulumi:"totalsVisibility"`
	Visibility              TemplateVisibilityPtrInput        `pulumi:"visibility"`
}

func (TemplateDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelOptions)(nil)).Elem()
}

func (i TemplateDataLabelOptionsArgs) ToTemplateDataLabelOptionsOutput() TemplateDataLabelOptionsOutput {
	return i.ToTemplateDataLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateDataLabelOptionsArgs) ToTemplateDataLabelOptionsOutputWithContext(ctx context.Context) TemplateDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataLabelOptionsOutput)
}

func (i TemplateDataLabelOptionsArgs) ToTemplateDataLabelOptionsPtrOutput() TemplateDataLabelOptionsPtrOutput {
	return i.ToTemplateDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDataLabelOptionsArgs) ToTemplateDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataLabelOptionsOutput).ToTemplateDataLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateDataLabelOptionsPtrInput is an input type that accepts TemplateDataLabelOptionsArgs, TemplateDataLabelOptionsPtr and TemplateDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDataLabelOptionsPtrInput` via:
//
//	        TemplateDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDataLabelOptionsPtrOutput() TemplateDataLabelOptionsPtrOutput
	ToTemplateDataLabelOptionsPtrOutputWithContext(context.Context) TemplateDataLabelOptionsPtrOutput
}

type templateDataLabelOptionsPtrType TemplateDataLabelOptionsArgs

func TemplateDataLabelOptionsPtr(v *TemplateDataLabelOptionsArgs) TemplateDataLabelOptionsPtrInput {
	return (*templateDataLabelOptionsPtrType)(v)
}

func (*templateDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataLabelOptions)(nil)).Elem()
}

func (i *templateDataLabelOptionsPtrType) ToTemplateDataLabelOptionsPtrOutput() TemplateDataLabelOptionsPtrOutput {
	return i.ToTemplateDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDataLabelOptionsPtrType) ToTemplateDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataLabelOptionsPtrOutput)
}

type TemplateDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelOptions)(nil)).Elem()
}

func (o TemplateDataLabelOptionsOutput) ToTemplateDataLabelOptionsOutput() TemplateDataLabelOptionsOutput {
	return o
}

func (o TemplateDataLabelOptionsOutput) ToTemplateDataLabelOptionsOutputWithContext(ctx context.Context) TemplateDataLabelOptionsOutput {
	return o
}

func (o TemplateDataLabelOptionsOutput) ToTemplateDataLabelOptionsPtrOutput() TemplateDataLabelOptionsPtrOutput {
	return o.ToTemplateDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDataLabelOptionsOutput) ToTemplateDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataLabelOptions) *TemplateDataLabelOptions {
		return &v
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) CategoryLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateVisibility { return v.CategoryLabelVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) DataLabelTypes() TemplateDataLabelTypeArrayOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) []TemplateDataLabelType { return v.DataLabelTypes }).(TemplateDataLabelTypeArrayOutput)
}

func (o TemplateDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) LabelContent() TemplateDataLabelContentPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateDataLabelContent { return v.LabelContent }).(TemplateDataLabelContentPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) LabelFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateFontConfiguration { return v.LabelFontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) MeasureLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateVisibility { return v.MeasureLabelVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) Overlap() TemplateDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateDataLabelOverlap { return v.Overlap }).(TemplateDataLabelOverlapPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) Position() TemplateDataLabelPositionPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateDataLabelPosition { return v.Position }).(TemplateDataLabelPositionPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateVisibility { return v.TotalsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDataLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataLabelOptions)(nil)).Elem()
}

func (o TemplateDataLabelOptionsPtrOutput) ToTemplateDataLabelOptionsPtrOutput() TemplateDataLabelOptionsPtrOutput {
	return o
}

func (o TemplateDataLabelOptionsPtrOutput) ToTemplateDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateDataLabelOptionsPtrOutput {
	return o
}

func (o TemplateDataLabelOptionsPtrOutput) Elem() TemplateDataLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) TemplateDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDataLabelOptions
		return ret
	}).(TemplateDataLabelOptionsOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) CategoryLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) DataLabelTypes() TemplateDataLabelTypeArrayOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) []TemplateDataLabelType {
		if v == nil {
			return nil
		}
		return v.DataLabelTypes
	}).(TemplateDataLabelTypeArrayOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) LabelContent() TemplateDataLabelContentPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateDataLabelContent {
		if v == nil {
			return nil
		}
		return v.LabelContent
	}).(TemplateDataLabelContentPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) LabelFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) MeasureLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) Overlap() TemplateDataLabelOverlapPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateDataLabelOverlap {
		if v == nil {
			return nil
		}
		return v.Overlap
	}).(TemplateDataLabelOverlapPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) Position() TemplateDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(TemplateDataLabelPositionPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateDataLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateDataLabelType struct {
	DataPathLabelType  *TemplateDataPathLabelType  `pulumi:"dataPathLabelType"`
	FieldLabelType     *TemplateFieldLabelType     `pulumi:"fieldLabelType"`
	MaximumLabelType   *TemplateMaximumLabelType   `pulumi:"maximumLabelType"`
	MinimumLabelType   *TemplateMinimumLabelType   `pulumi:"minimumLabelType"`
	RangeEndsLabelType *TemplateRangeEndsLabelType `pulumi:"rangeEndsLabelType"`
}

// TemplateDataLabelTypeInput is an input type that accepts TemplateDataLabelTypeArgs and TemplateDataLabelTypeOutput values.
// You can construct a concrete instance of `TemplateDataLabelTypeInput` via:
//
//	TemplateDataLabelTypeArgs{...}
type TemplateDataLabelTypeInput interface {
	pulumi.Input

	ToTemplateDataLabelTypeOutput() TemplateDataLabelTypeOutput
	ToTemplateDataLabelTypeOutputWithContext(context.Context) TemplateDataLabelTypeOutput
}

type TemplateDataLabelTypeArgs struct {
	DataPathLabelType  TemplateDataPathLabelTypePtrInput  `pulumi:"dataPathLabelType"`
	FieldLabelType     TemplateFieldLabelTypePtrInput     `pulumi:"fieldLabelType"`
	MaximumLabelType   TemplateMaximumLabelTypePtrInput   `pulumi:"maximumLabelType"`
	MinimumLabelType   TemplateMinimumLabelTypePtrInput   `pulumi:"minimumLabelType"`
	RangeEndsLabelType TemplateRangeEndsLabelTypePtrInput `pulumi:"rangeEndsLabelType"`
}

func (TemplateDataLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelType)(nil)).Elem()
}

func (i TemplateDataLabelTypeArgs) ToTemplateDataLabelTypeOutput() TemplateDataLabelTypeOutput {
	return i.ToTemplateDataLabelTypeOutputWithContext(context.Background())
}

func (i TemplateDataLabelTypeArgs) ToTemplateDataLabelTypeOutputWithContext(ctx context.Context) TemplateDataLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataLabelTypeOutput)
}

// TemplateDataLabelTypeArrayInput is an input type that accepts TemplateDataLabelTypeArray and TemplateDataLabelTypeArrayOutput values.
// You can construct a concrete instance of `TemplateDataLabelTypeArrayInput` via:
//
//	TemplateDataLabelTypeArray{ TemplateDataLabelTypeArgs{...} }
type TemplateDataLabelTypeArrayInput interface {
	pulumi.Input

	ToTemplateDataLabelTypeArrayOutput() TemplateDataLabelTypeArrayOutput
	ToTemplateDataLabelTypeArrayOutputWithContext(context.Context) TemplateDataLabelTypeArrayOutput
}

type TemplateDataLabelTypeArray []TemplateDataLabelTypeInput

func (TemplateDataLabelTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataLabelType)(nil)).Elem()
}

func (i TemplateDataLabelTypeArray) ToTemplateDataLabelTypeArrayOutput() TemplateDataLabelTypeArrayOutput {
	return i.ToTemplateDataLabelTypeArrayOutputWithContext(context.Background())
}

func (i TemplateDataLabelTypeArray) ToTemplateDataLabelTypeArrayOutputWithContext(ctx context.Context) TemplateDataLabelTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataLabelTypeArrayOutput)
}

type TemplateDataLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataLabelType)(nil)).Elem()
}

func (o TemplateDataLabelTypeOutput) ToTemplateDataLabelTypeOutput() TemplateDataLabelTypeOutput {
	return o
}

func (o TemplateDataLabelTypeOutput) ToTemplateDataLabelTypeOutputWithContext(ctx context.Context) TemplateDataLabelTypeOutput {
	return o
}

func (o TemplateDataLabelTypeOutput) DataPathLabelType() TemplateDataPathLabelTypePtrOutput {
	return o.ApplyT(func(v TemplateDataLabelType) *TemplateDataPathLabelType { return v.DataPathLabelType }).(TemplateDataPathLabelTypePtrOutput)
}

func (o TemplateDataLabelTypeOutput) FieldLabelType() TemplateFieldLabelTypePtrOutput {
	return o.ApplyT(func(v TemplateDataLabelType) *TemplateFieldLabelType { return v.FieldLabelType }).(TemplateFieldLabelTypePtrOutput)
}

func (o TemplateDataLabelTypeOutput) MaximumLabelType() TemplateMaximumLabelTypePtrOutput {
	return o.ApplyT(func(v TemplateDataLabelType) *TemplateMaximumLabelType { return v.MaximumLabelType }).(TemplateMaximumLabelTypePtrOutput)
}

func (o TemplateDataLabelTypeOutput) MinimumLabelType() TemplateMinimumLabelTypePtrOutput {
	return o.ApplyT(func(v TemplateDataLabelType) *TemplateMinimumLabelType { return v.MinimumLabelType }).(TemplateMinimumLabelTypePtrOutput)
}

func (o TemplateDataLabelTypeOutput) RangeEndsLabelType() TemplateRangeEndsLabelTypePtrOutput {
	return o.ApplyT(func(v TemplateDataLabelType) *TemplateRangeEndsLabelType { return v.RangeEndsLabelType }).(TemplateRangeEndsLabelTypePtrOutput)
}

type TemplateDataLabelTypeArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataLabelTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataLabelType)(nil)).Elem()
}

func (o TemplateDataLabelTypeArrayOutput) ToTemplateDataLabelTypeArrayOutput() TemplateDataLabelTypeArrayOutput {
	return o
}

func (o TemplateDataLabelTypeArrayOutput) ToTemplateDataLabelTypeArrayOutputWithContext(ctx context.Context) TemplateDataLabelTypeArrayOutput {
	return o
}

func (o TemplateDataLabelTypeArrayOutput) Index(i pulumi.IntInput) TemplateDataLabelTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataLabelType {
		return vs[0].([]TemplateDataLabelType)[vs[1].(int)]
	}).(TemplateDataLabelTypeOutput)
}

type TemplateDataPathColor struct {
	Color           string                   `pulumi:"color"`
	Element         TemplateDataPathValue    `pulumi:"element"`
	TimeGranularity *TemplateTimeGranularity `pulumi:"timeGranularity"`
}

// TemplateDataPathColorInput is an input type that accepts TemplateDataPathColorArgs and TemplateDataPathColorOutput values.
// You can construct a concrete instance of `TemplateDataPathColorInput` via:
//
//	TemplateDataPathColorArgs{...}
type TemplateDataPathColorInput interface {
	pulumi.Input

	ToTemplateDataPathColorOutput() TemplateDataPathColorOutput
	ToTemplateDataPathColorOutputWithContext(context.Context) TemplateDataPathColorOutput
}

type TemplateDataPathColorArgs struct {
	Color           pulumi.StringInput              `pulumi:"color"`
	Element         TemplateDataPathValueInput      `pulumi:"element"`
	TimeGranularity TemplateTimeGranularityPtrInput `pulumi:"timeGranularity"`
}

func (TemplateDataPathColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathColor)(nil)).Elem()
}

func (i TemplateDataPathColorArgs) ToTemplateDataPathColorOutput() TemplateDataPathColorOutput {
	return i.ToTemplateDataPathColorOutputWithContext(context.Background())
}

func (i TemplateDataPathColorArgs) ToTemplateDataPathColorOutputWithContext(ctx context.Context) TemplateDataPathColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathColorOutput)
}

// TemplateDataPathColorArrayInput is an input type that accepts TemplateDataPathColorArray and TemplateDataPathColorArrayOutput values.
// You can construct a concrete instance of `TemplateDataPathColorArrayInput` via:
//
//	TemplateDataPathColorArray{ TemplateDataPathColorArgs{...} }
type TemplateDataPathColorArrayInput interface {
	pulumi.Input

	ToTemplateDataPathColorArrayOutput() TemplateDataPathColorArrayOutput
	ToTemplateDataPathColorArrayOutputWithContext(context.Context) TemplateDataPathColorArrayOutput
}

type TemplateDataPathColorArray []TemplateDataPathColorInput

func (TemplateDataPathColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataPathColor)(nil)).Elem()
}

func (i TemplateDataPathColorArray) ToTemplateDataPathColorArrayOutput() TemplateDataPathColorArrayOutput {
	return i.ToTemplateDataPathColorArrayOutputWithContext(context.Background())
}

func (i TemplateDataPathColorArray) ToTemplateDataPathColorArrayOutputWithContext(ctx context.Context) TemplateDataPathColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathColorArrayOutput)
}

type TemplateDataPathColorOutput struct{ *pulumi.OutputState }

func (TemplateDataPathColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathColor)(nil)).Elem()
}

func (o TemplateDataPathColorOutput) ToTemplateDataPathColorOutput() TemplateDataPathColorOutput {
	return o
}

func (o TemplateDataPathColorOutput) ToTemplateDataPathColorOutputWithContext(ctx context.Context) TemplateDataPathColorOutput {
	return o
}

func (o TemplateDataPathColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataPathColor) string { return v.Color }).(pulumi.StringOutput)
}

func (o TemplateDataPathColorOutput) Element() TemplateDataPathValueOutput {
	return o.ApplyT(func(v TemplateDataPathColor) TemplateDataPathValue { return v.Element }).(TemplateDataPathValueOutput)
}

func (o TemplateDataPathColorOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateDataPathColor) *TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

type TemplateDataPathColorArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataPathColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataPathColor)(nil)).Elem()
}

func (o TemplateDataPathColorArrayOutput) ToTemplateDataPathColorArrayOutput() TemplateDataPathColorArrayOutput {
	return o
}

func (o TemplateDataPathColorArrayOutput) ToTemplateDataPathColorArrayOutputWithContext(ctx context.Context) TemplateDataPathColorArrayOutput {
	return o
}

func (o TemplateDataPathColorArrayOutput) Index(i pulumi.IntInput) TemplateDataPathColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataPathColor {
		return vs[0].([]TemplateDataPathColor)[vs[1].(int)]
	}).(TemplateDataPathColorOutput)
}

type TemplateDataPathLabelType struct {
	FieldId    *string             `pulumi:"fieldId"`
	FieldValue *string             `pulumi:"fieldValue"`
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateDataPathLabelTypeInput is an input type that accepts TemplateDataPathLabelTypeArgs and TemplateDataPathLabelTypeOutput values.
// You can construct a concrete instance of `TemplateDataPathLabelTypeInput` via:
//
//	TemplateDataPathLabelTypeArgs{...}
type TemplateDataPathLabelTypeInput interface {
	pulumi.Input

	ToTemplateDataPathLabelTypeOutput() TemplateDataPathLabelTypeOutput
	ToTemplateDataPathLabelTypeOutputWithContext(context.Context) TemplateDataPathLabelTypeOutput
}

type TemplateDataPathLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput      `pulumi:"fieldId"`
	FieldValue pulumi.StringPtrInput      `pulumi:"fieldValue"`
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateDataPathLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathLabelType)(nil)).Elem()
}

func (i TemplateDataPathLabelTypeArgs) ToTemplateDataPathLabelTypeOutput() TemplateDataPathLabelTypeOutput {
	return i.ToTemplateDataPathLabelTypeOutputWithContext(context.Background())
}

func (i TemplateDataPathLabelTypeArgs) ToTemplateDataPathLabelTypeOutputWithContext(ctx context.Context) TemplateDataPathLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathLabelTypeOutput)
}

func (i TemplateDataPathLabelTypeArgs) ToTemplateDataPathLabelTypePtrOutput() TemplateDataPathLabelTypePtrOutput {
	return i.ToTemplateDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i TemplateDataPathLabelTypeArgs) ToTemplateDataPathLabelTypePtrOutputWithContext(ctx context.Context) TemplateDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathLabelTypeOutput).ToTemplateDataPathLabelTypePtrOutputWithContext(ctx)
}

// TemplateDataPathLabelTypePtrInput is an input type that accepts TemplateDataPathLabelTypeArgs, TemplateDataPathLabelTypePtr and TemplateDataPathLabelTypePtrOutput values.
// You can construct a concrete instance of `TemplateDataPathLabelTypePtrInput` via:
//
//	        TemplateDataPathLabelTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateDataPathLabelTypePtrInput interface {
	pulumi.Input

	ToTemplateDataPathLabelTypePtrOutput() TemplateDataPathLabelTypePtrOutput
	ToTemplateDataPathLabelTypePtrOutputWithContext(context.Context) TemplateDataPathLabelTypePtrOutput
}

type templateDataPathLabelTypePtrType TemplateDataPathLabelTypeArgs

func TemplateDataPathLabelTypePtr(v *TemplateDataPathLabelTypeArgs) TemplateDataPathLabelTypePtrInput {
	return (*templateDataPathLabelTypePtrType)(v)
}

func (*templateDataPathLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathLabelType)(nil)).Elem()
}

func (i *templateDataPathLabelTypePtrType) ToTemplateDataPathLabelTypePtrOutput() TemplateDataPathLabelTypePtrOutput {
	return i.ToTemplateDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (i *templateDataPathLabelTypePtrType) ToTemplateDataPathLabelTypePtrOutputWithContext(ctx context.Context) TemplateDataPathLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathLabelTypePtrOutput)
}

type TemplateDataPathLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateDataPathLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathLabelType)(nil)).Elem()
}

func (o TemplateDataPathLabelTypeOutput) ToTemplateDataPathLabelTypeOutput() TemplateDataPathLabelTypeOutput {
	return o
}

func (o TemplateDataPathLabelTypeOutput) ToTemplateDataPathLabelTypeOutputWithContext(ctx context.Context) TemplateDataPathLabelTypeOutput {
	return o
}

func (o TemplateDataPathLabelTypeOutput) ToTemplateDataPathLabelTypePtrOutput() TemplateDataPathLabelTypePtrOutput {
	return o.ToTemplateDataPathLabelTypePtrOutputWithContext(context.Background())
}

func (o TemplateDataPathLabelTypeOutput) ToTemplateDataPathLabelTypePtrOutputWithContext(ctx context.Context) TemplateDataPathLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataPathLabelType) *TemplateDataPathLabelType {
		return &v
	}).(TemplateDataPathLabelTypePtrOutput)
}

func (o TemplateDataPathLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataPathLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o TemplateDataPathLabelTypeOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataPathLabelType) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

func (o TemplateDataPathLabelTypeOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDataPathLabelType) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateDataPathLabelTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateDataPathLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathLabelType)(nil)).Elem()
}

func (o TemplateDataPathLabelTypePtrOutput) ToTemplateDataPathLabelTypePtrOutput() TemplateDataPathLabelTypePtrOutput {
	return o
}

func (o TemplateDataPathLabelTypePtrOutput) ToTemplateDataPathLabelTypePtrOutputWithContext(ctx context.Context) TemplateDataPathLabelTypePtrOutput {
	return o
}

func (o TemplateDataPathLabelTypePtrOutput) Elem() TemplateDataPathLabelTypeOutput {
	return o.ApplyT(func(v *TemplateDataPathLabelType) TemplateDataPathLabelType {
		if v != nil {
			return *v
		}
		var ret TemplateDataPathLabelType
		return ret
	}).(TemplateDataPathLabelTypeOutput)
}

func (o TemplateDataPathLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataPathLabelTypePtrOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDataPathLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldValue
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDataPathLabelTypePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDataPathLabelType) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateDataPathSort struct {
	Direction TemplateSortDirection   `pulumi:"direction"`
	SortPaths []TemplateDataPathValue `pulumi:"sortPaths"`
}

// TemplateDataPathSortInput is an input type that accepts TemplateDataPathSortArgs and TemplateDataPathSortOutput values.
// You can construct a concrete instance of `TemplateDataPathSortInput` via:
//
//	TemplateDataPathSortArgs{...}
type TemplateDataPathSortInput interface {
	pulumi.Input

	ToTemplateDataPathSortOutput() TemplateDataPathSortOutput
	ToTemplateDataPathSortOutputWithContext(context.Context) TemplateDataPathSortOutput
}

type TemplateDataPathSortArgs struct {
	Direction TemplateSortDirectionInput      `pulumi:"direction"`
	SortPaths TemplateDataPathValueArrayInput `pulumi:"sortPaths"`
}

func (TemplateDataPathSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathSort)(nil)).Elem()
}

func (i TemplateDataPathSortArgs) ToTemplateDataPathSortOutput() TemplateDataPathSortOutput {
	return i.ToTemplateDataPathSortOutputWithContext(context.Background())
}

func (i TemplateDataPathSortArgs) ToTemplateDataPathSortOutputWithContext(ctx context.Context) TemplateDataPathSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathSortOutput)
}

func (i TemplateDataPathSortArgs) ToTemplateDataPathSortPtrOutput() TemplateDataPathSortPtrOutput {
	return i.ToTemplateDataPathSortPtrOutputWithContext(context.Background())
}

func (i TemplateDataPathSortArgs) ToTemplateDataPathSortPtrOutputWithContext(ctx context.Context) TemplateDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathSortOutput).ToTemplateDataPathSortPtrOutputWithContext(ctx)
}

// TemplateDataPathSortPtrInput is an input type that accepts TemplateDataPathSortArgs, TemplateDataPathSortPtr and TemplateDataPathSortPtrOutput values.
// You can construct a concrete instance of `TemplateDataPathSortPtrInput` via:
//
//	        TemplateDataPathSortArgs{...}
//
//	or:
//
//	        nil
type TemplateDataPathSortPtrInput interface {
	pulumi.Input

	ToTemplateDataPathSortPtrOutput() TemplateDataPathSortPtrOutput
	ToTemplateDataPathSortPtrOutputWithContext(context.Context) TemplateDataPathSortPtrOutput
}

type templateDataPathSortPtrType TemplateDataPathSortArgs

func TemplateDataPathSortPtr(v *TemplateDataPathSortArgs) TemplateDataPathSortPtrInput {
	return (*templateDataPathSortPtrType)(v)
}

func (*templateDataPathSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathSort)(nil)).Elem()
}

func (i *templateDataPathSortPtrType) ToTemplateDataPathSortPtrOutput() TemplateDataPathSortPtrOutput {
	return i.ToTemplateDataPathSortPtrOutputWithContext(context.Background())
}

func (i *templateDataPathSortPtrType) ToTemplateDataPathSortPtrOutputWithContext(ctx context.Context) TemplateDataPathSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathSortPtrOutput)
}

type TemplateDataPathSortOutput struct{ *pulumi.OutputState }

func (TemplateDataPathSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathSort)(nil)).Elem()
}

func (o TemplateDataPathSortOutput) ToTemplateDataPathSortOutput() TemplateDataPathSortOutput {
	return o
}

func (o TemplateDataPathSortOutput) ToTemplateDataPathSortOutputWithContext(ctx context.Context) TemplateDataPathSortOutput {
	return o
}

func (o TemplateDataPathSortOutput) ToTemplateDataPathSortPtrOutput() TemplateDataPathSortPtrOutput {
	return o.ToTemplateDataPathSortPtrOutputWithContext(context.Background())
}

func (o TemplateDataPathSortOutput) ToTemplateDataPathSortPtrOutputWithContext(ctx context.Context) TemplateDataPathSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataPathSort) *TemplateDataPathSort {
		return &v
	}).(TemplateDataPathSortPtrOutput)
}

func (o TemplateDataPathSortOutput) Direction() TemplateSortDirectionOutput {
	return o.ApplyT(func(v TemplateDataPathSort) TemplateSortDirection { return v.Direction }).(TemplateSortDirectionOutput)
}

func (o TemplateDataPathSortOutput) SortPaths() TemplateDataPathValueArrayOutput {
	return o.ApplyT(func(v TemplateDataPathSort) []TemplateDataPathValue { return v.SortPaths }).(TemplateDataPathValueArrayOutput)
}

type TemplateDataPathSortPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataPathSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathSort)(nil)).Elem()
}

func (o TemplateDataPathSortPtrOutput) ToTemplateDataPathSortPtrOutput() TemplateDataPathSortPtrOutput {
	return o
}

func (o TemplateDataPathSortPtrOutput) ToTemplateDataPathSortPtrOutputWithContext(ctx context.Context) TemplateDataPathSortPtrOutput {
	return o
}

func (o TemplateDataPathSortPtrOutput) Elem() TemplateDataPathSortOutput {
	return o.ApplyT(func(v *TemplateDataPathSort) TemplateDataPathSort {
		if v != nil {
			return *v
		}
		var ret TemplateDataPathSort
		return ret
	}).(TemplateDataPathSortOutput)
}

func (o TemplateDataPathSortPtrOutput) Direction() TemplateSortDirectionPtrOutput {
	return o.ApplyT(func(v *TemplateDataPathSort) *TemplateSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(TemplateSortDirectionPtrOutput)
}

func (o TemplateDataPathSortPtrOutput) SortPaths() TemplateDataPathValueArrayOutput {
	return o.ApplyT(func(v *TemplateDataPathSort) []TemplateDataPathValue {
		if v == nil {
			return nil
		}
		return v.SortPaths
	}).(TemplateDataPathValueArrayOutput)
}

type TemplateDataPathType struct {
	PivotTableDataPathType *TemplatePivotTableDataPathType `pulumi:"pivotTableDataPathType"`
}

// TemplateDataPathTypeInput is an input type that accepts TemplateDataPathTypeArgs and TemplateDataPathTypeOutput values.
// You can construct a concrete instance of `TemplateDataPathTypeInput` via:
//
//	TemplateDataPathTypeArgs{...}
type TemplateDataPathTypeInput interface {
	pulumi.Input

	ToTemplateDataPathTypeOutput() TemplateDataPathTypeOutput
	ToTemplateDataPathTypeOutputWithContext(context.Context) TemplateDataPathTypeOutput
}

type TemplateDataPathTypeArgs struct {
	PivotTableDataPathType TemplatePivotTableDataPathTypePtrInput `pulumi:"pivotTableDataPathType"`
}

func (TemplateDataPathTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathType)(nil)).Elem()
}

func (i TemplateDataPathTypeArgs) ToTemplateDataPathTypeOutput() TemplateDataPathTypeOutput {
	return i.ToTemplateDataPathTypeOutputWithContext(context.Background())
}

func (i TemplateDataPathTypeArgs) ToTemplateDataPathTypeOutputWithContext(ctx context.Context) TemplateDataPathTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathTypeOutput)
}

func (i TemplateDataPathTypeArgs) ToTemplateDataPathTypePtrOutput() TemplateDataPathTypePtrOutput {
	return i.ToTemplateDataPathTypePtrOutputWithContext(context.Background())
}

func (i TemplateDataPathTypeArgs) ToTemplateDataPathTypePtrOutputWithContext(ctx context.Context) TemplateDataPathTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathTypeOutput).ToTemplateDataPathTypePtrOutputWithContext(ctx)
}

// TemplateDataPathTypePtrInput is an input type that accepts TemplateDataPathTypeArgs, TemplateDataPathTypePtr and TemplateDataPathTypePtrOutput values.
// You can construct a concrete instance of `TemplateDataPathTypePtrInput` via:
//
//	        TemplateDataPathTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateDataPathTypePtrInput interface {
	pulumi.Input

	ToTemplateDataPathTypePtrOutput() TemplateDataPathTypePtrOutput
	ToTemplateDataPathTypePtrOutputWithContext(context.Context) TemplateDataPathTypePtrOutput
}

type templateDataPathTypePtrType TemplateDataPathTypeArgs

func TemplateDataPathTypePtr(v *TemplateDataPathTypeArgs) TemplateDataPathTypePtrInput {
	return (*templateDataPathTypePtrType)(v)
}

func (*templateDataPathTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathType)(nil)).Elem()
}

func (i *templateDataPathTypePtrType) ToTemplateDataPathTypePtrOutput() TemplateDataPathTypePtrOutput {
	return i.ToTemplateDataPathTypePtrOutputWithContext(context.Background())
}

func (i *templateDataPathTypePtrType) ToTemplateDataPathTypePtrOutputWithContext(ctx context.Context) TemplateDataPathTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathTypePtrOutput)
}

type TemplateDataPathTypeOutput struct{ *pulumi.OutputState }

func (TemplateDataPathTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathType)(nil)).Elem()
}

func (o TemplateDataPathTypeOutput) ToTemplateDataPathTypeOutput() TemplateDataPathTypeOutput {
	return o
}

func (o TemplateDataPathTypeOutput) ToTemplateDataPathTypeOutputWithContext(ctx context.Context) TemplateDataPathTypeOutput {
	return o
}

func (o TemplateDataPathTypeOutput) ToTemplateDataPathTypePtrOutput() TemplateDataPathTypePtrOutput {
	return o.ToTemplateDataPathTypePtrOutputWithContext(context.Background())
}

func (o TemplateDataPathTypeOutput) ToTemplateDataPathTypePtrOutputWithContext(ctx context.Context) TemplateDataPathTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataPathType) *TemplateDataPathType {
		return &v
	}).(TemplateDataPathTypePtrOutput)
}

func (o TemplateDataPathTypeOutput) PivotTableDataPathType() TemplatePivotTableDataPathTypePtrOutput {
	return o.ApplyT(func(v TemplateDataPathType) *TemplatePivotTableDataPathType { return v.PivotTableDataPathType }).(TemplatePivotTableDataPathTypePtrOutput)
}

type TemplateDataPathTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateDataPathTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataPathType)(nil)).Elem()
}

func (o TemplateDataPathTypePtrOutput) ToTemplateDataPathTypePtrOutput() TemplateDataPathTypePtrOutput {
	return o
}

func (o TemplateDataPathTypePtrOutput) ToTemplateDataPathTypePtrOutputWithContext(ctx context.Context) TemplateDataPathTypePtrOutput {
	return o
}

func (o TemplateDataPathTypePtrOutput) Elem() TemplateDataPathTypeOutput {
	return o.ApplyT(func(v *TemplateDataPathType) TemplateDataPathType {
		if v != nil {
			return *v
		}
		var ret TemplateDataPathType
		return ret
	}).(TemplateDataPathTypeOutput)
}

func (o TemplateDataPathTypePtrOutput) PivotTableDataPathType() TemplatePivotTableDataPathTypePtrOutput {
	return o.ApplyT(func(v *TemplateDataPathType) *TemplatePivotTableDataPathType {
		if v == nil {
			return nil
		}
		return v.PivotTableDataPathType
	}).(TemplatePivotTableDataPathTypePtrOutput)
}

type TemplateDataPathValue struct {
	DataPathType *TemplateDataPathType `pulumi:"dataPathType"`
	FieldId      *string               `pulumi:"fieldId"`
	FieldValue   *string               `pulumi:"fieldValue"`
}

// TemplateDataPathValueInput is an input type that accepts TemplateDataPathValueArgs and TemplateDataPathValueOutput values.
// You can construct a concrete instance of `TemplateDataPathValueInput` via:
//
//	TemplateDataPathValueArgs{...}
type TemplateDataPathValueInput interface {
	pulumi.Input

	ToTemplateDataPathValueOutput() TemplateDataPathValueOutput
	ToTemplateDataPathValueOutputWithContext(context.Context) TemplateDataPathValueOutput
}

type TemplateDataPathValueArgs struct {
	DataPathType TemplateDataPathTypePtrInput `pulumi:"dataPathType"`
	FieldId      pulumi.StringPtrInput        `pulumi:"fieldId"`
	FieldValue   pulumi.StringPtrInput        `pulumi:"fieldValue"`
}

func (TemplateDataPathValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathValue)(nil)).Elem()
}

func (i TemplateDataPathValueArgs) ToTemplateDataPathValueOutput() TemplateDataPathValueOutput {
	return i.ToTemplateDataPathValueOutputWithContext(context.Background())
}

func (i TemplateDataPathValueArgs) ToTemplateDataPathValueOutputWithContext(ctx context.Context) TemplateDataPathValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathValueOutput)
}

// TemplateDataPathValueArrayInput is an input type that accepts TemplateDataPathValueArray and TemplateDataPathValueArrayOutput values.
// You can construct a concrete instance of `TemplateDataPathValueArrayInput` via:
//
//	TemplateDataPathValueArray{ TemplateDataPathValueArgs{...} }
type TemplateDataPathValueArrayInput interface {
	pulumi.Input

	ToTemplateDataPathValueArrayOutput() TemplateDataPathValueArrayOutput
	ToTemplateDataPathValueArrayOutputWithContext(context.Context) TemplateDataPathValueArrayOutput
}

type TemplateDataPathValueArray []TemplateDataPathValueInput

func (TemplateDataPathValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataPathValue)(nil)).Elem()
}

func (i TemplateDataPathValueArray) ToTemplateDataPathValueArrayOutput() TemplateDataPathValueArrayOutput {
	return i.ToTemplateDataPathValueArrayOutputWithContext(context.Background())
}

func (i TemplateDataPathValueArray) ToTemplateDataPathValueArrayOutputWithContext(ctx context.Context) TemplateDataPathValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataPathValueArrayOutput)
}

type TemplateDataPathValueOutput struct{ *pulumi.OutputState }

func (TemplateDataPathValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataPathValue)(nil)).Elem()
}

func (o TemplateDataPathValueOutput) ToTemplateDataPathValueOutput() TemplateDataPathValueOutput {
	return o
}

func (o TemplateDataPathValueOutput) ToTemplateDataPathValueOutputWithContext(ctx context.Context) TemplateDataPathValueOutput {
	return o
}

func (o TemplateDataPathValueOutput) DataPathType() TemplateDataPathTypePtrOutput {
	return o.ApplyT(func(v TemplateDataPathValue) *TemplateDataPathType { return v.DataPathType }).(TemplateDataPathTypePtrOutput)
}

func (o TemplateDataPathValueOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataPathValue) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o TemplateDataPathValueOutput) FieldValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataPathValue) *string { return v.FieldValue }).(pulumi.StringPtrOutput)
}

type TemplateDataPathValueArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataPathValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataPathValue)(nil)).Elem()
}

func (o TemplateDataPathValueArrayOutput) ToTemplateDataPathValueArrayOutput() TemplateDataPathValueArrayOutput {
	return o
}

func (o TemplateDataPathValueArrayOutput) ToTemplateDataPathValueArrayOutputWithContext(ctx context.Context) TemplateDataPathValueArrayOutput {
	return o
}

func (o TemplateDataPathValueArrayOutput) Index(i pulumi.IntInput) TemplateDataPathValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataPathValue {
		return vs[0].([]TemplateDataPathValue)[vs[1].(int)]
	}).(TemplateDataPathValueOutput)
}

type TemplateDataSetConfiguration struct {
	ColumnGroupSchemaList []TemplateColumnGroupSchema `pulumi:"columnGroupSchemaList"`
	DataSetSchema         *TemplateDataSetSchema      `pulumi:"dataSetSchema"`
	Placeholder           *string                     `pulumi:"placeholder"`
}

// TemplateDataSetConfigurationInput is an input type that accepts TemplateDataSetConfigurationArgs and TemplateDataSetConfigurationOutput values.
// You can construct a concrete instance of `TemplateDataSetConfigurationInput` via:
//
//	TemplateDataSetConfigurationArgs{...}
type TemplateDataSetConfigurationInput interface {
	pulumi.Input

	ToTemplateDataSetConfigurationOutput() TemplateDataSetConfigurationOutput
	ToTemplateDataSetConfigurationOutputWithContext(context.Context) TemplateDataSetConfigurationOutput
}

type TemplateDataSetConfigurationArgs struct {
	ColumnGroupSchemaList TemplateColumnGroupSchemaArrayInput `pulumi:"columnGroupSchemaList"`
	DataSetSchema         TemplateDataSetSchemaPtrInput       `pulumi:"dataSetSchema"`
	Placeholder           pulumi.StringPtrInput               `pulumi:"placeholder"`
}

func (TemplateDataSetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetConfiguration)(nil)).Elem()
}

func (i TemplateDataSetConfigurationArgs) ToTemplateDataSetConfigurationOutput() TemplateDataSetConfigurationOutput {
	return i.ToTemplateDataSetConfigurationOutputWithContext(context.Background())
}

func (i TemplateDataSetConfigurationArgs) ToTemplateDataSetConfigurationOutputWithContext(ctx context.Context) TemplateDataSetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetConfigurationOutput)
}

// TemplateDataSetConfigurationArrayInput is an input type that accepts TemplateDataSetConfigurationArray and TemplateDataSetConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateDataSetConfigurationArrayInput` via:
//
//	TemplateDataSetConfigurationArray{ TemplateDataSetConfigurationArgs{...} }
type TemplateDataSetConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateDataSetConfigurationArrayOutput() TemplateDataSetConfigurationArrayOutput
	ToTemplateDataSetConfigurationArrayOutputWithContext(context.Context) TemplateDataSetConfigurationArrayOutput
}

type TemplateDataSetConfigurationArray []TemplateDataSetConfigurationInput

func (TemplateDataSetConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetConfiguration)(nil)).Elem()
}

func (i TemplateDataSetConfigurationArray) ToTemplateDataSetConfigurationArrayOutput() TemplateDataSetConfigurationArrayOutput {
	return i.ToTemplateDataSetConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateDataSetConfigurationArray) ToTemplateDataSetConfigurationArrayOutputWithContext(ctx context.Context) TemplateDataSetConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetConfigurationArrayOutput)
}

type TemplateDataSetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDataSetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetConfiguration)(nil)).Elem()
}

func (o TemplateDataSetConfigurationOutput) ToTemplateDataSetConfigurationOutput() TemplateDataSetConfigurationOutput {
	return o
}

func (o TemplateDataSetConfigurationOutput) ToTemplateDataSetConfigurationOutputWithContext(ctx context.Context) TemplateDataSetConfigurationOutput {
	return o
}

func (o TemplateDataSetConfigurationOutput) ColumnGroupSchemaList() TemplateColumnGroupSchemaArrayOutput {
	return o.ApplyT(func(v TemplateDataSetConfiguration) []TemplateColumnGroupSchema { return v.ColumnGroupSchemaList }).(TemplateColumnGroupSchemaArrayOutput)
}

func (o TemplateDataSetConfigurationOutput) DataSetSchema() TemplateDataSetSchemaPtrOutput {
	return o.ApplyT(func(v TemplateDataSetConfiguration) *TemplateDataSetSchema { return v.DataSetSchema }).(TemplateDataSetSchemaPtrOutput)
}

func (o TemplateDataSetConfigurationOutput) Placeholder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDataSetConfiguration) *string { return v.Placeholder }).(pulumi.StringPtrOutput)
}

type TemplateDataSetConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataSetConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetConfiguration)(nil)).Elem()
}

func (o TemplateDataSetConfigurationArrayOutput) ToTemplateDataSetConfigurationArrayOutput() TemplateDataSetConfigurationArrayOutput {
	return o
}

func (o TemplateDataSetConfigurationArrayOutput) ToTemplateDataSetConfigurationArrayOutputWithContext(ctx context.Context) TemplateDataSetConfigurationArrayOutput {
	return o
}

func (o TemplateDataSetConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateDataSetConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataSetConfiguration {
		return vs[0].([]TemplateDataSetConfiguration)[vs[1].(int)]
	}).(TemplateDataSetConfigurationOutput)
}

type TemplateDataSetReference struct {
	DataSetArn         string `pulumi:"dataSetArn"`
	DataSetPlaceholder string `pulumi:"dataSetPlaceholder"`
}

// TemplateDataSetReferenceInput is an input type that accepts TemplateDataSetReferenceArgs and TemplateDataSetReferenceOutput values.
// You can construct a concrete instance of `TemplateDataSetReferenceInput` via:
//
//	TemplateDataSetReferenceArgs{...}
type TemplateDataSetReferenceInput interface {
	pulumi.Input

	ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput
	ToTemplateDataSetReferenceOutputWithContext(context.Context) TemplateDataSetReferenceOutput
}

type TemplateDataSetReferenceArgs struct {
	DataSetArn         pulumi.StringInput `pulumi:"dataSetArn"`
	DataSetPlaceholder pulumi.StringInput `pulumi:"dataSetPlaceholder"`
}

func (TemplateDataSetReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetReference)(nil)).Elem()
}

func (i TemplateDataSetReferenceArgs) ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput {
	return i.ToTemplateDataSetReferenceOutputWithContext(context.Background())
}

func (i TemplateDataSetReferenceArgs) ToTemplateDataSetReferenceOutputWithContext(ctx context.Context) TemplateDataSetReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetReferenceOutput)
}

// TemplateDataSetReferenceArrayInput is an input type that accepts TemplateDataSetReferenceArray and TemplateDataSetReferenceArrayOutput values.
// You can construct a concrete instance of `TemplateDataSetReferenceArrayInput` via:
//
//	TemplateDataSetReferenceArray{ TemplateDataSetReferenceArgs{...} }
type TemplateDataSetReferenceArrayInput interface {
	pulumi.Input

	ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput
	ToTemplateDataSetReferenceArrayOutputWithContext(context.Context) TemplateDataSetReferenceArrayOutput
}

type TemplateDataSetReferenceArray []TemplateDataSetReferenceInput

func (TemplateDataSetReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetReference)(nil)).Elem()
}

func (i TemplateDataSetReferenceArray) ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput {
	return i.ToTemplateDataSetReferenceArrayOutputWithContext(context.Background())
}

func (i TemplateDataSetReferenceArray) ToTemplateDataSetReferenceArrayOutputWithContext(ctx context.Context) TemplateDataSetReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetReferenceArrayOutput)
}

type TemplateDataSetReferenceOutput struct{ *pulumi.OutputState }

func (TemplateDataSetReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetReference)(nil)).Elem()
}

func (o TemplateDataSetReferenceOutput) ToTemplateDataSetReferenceOutput() TemplateDataSetReferenceOutput {
	return o
}

func (o TemplateDataSetReferenceOutput) ToTemplateDataSetReferenceOutputWithContext(ctx context.Context) TemplateDataSetReferenceOutput {
	return o
}

func (o TemplateDataSetReferenceOutput) DataSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataSetReference) string { return v.DataSetArn }).(pulumi.StringOutput)
}

func (o TemplateDataSetReferenceOutput) DataSetPlaceholder() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDataSetReference) string { return v.DataSetPlaceholder }).(pulumi.StringOutput)
}

type TemplateDataSetReferenceArrayOutput struct{ *pulumi.OutputState }

func (TemplateDataSetReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDataSetReference)(nil)).Elem()
}

func (o TemplateDataSetReferenceArrayOutput) ToTemplateDataSetReferenceArrayOutput() TemplateDataSetReferenceArrayOutput {
	return o
}

func (o TemplateDataSetReferenceArrayOutput) ToTemplateDataSetReferenceArrayOutputWithContext(ctx context.Context) TemplateDataSetReferenceArrayOutput {
	return o
}

func (o TemplateDataSetReferenceArrayOutput) Index(i pulumi.IntInput) TemplateDataSetReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDataSetReference {
		return vs[0].([]TemplateDataSetReference)[vs[1].(int)]
	}).(TemplateDataSetReferenceOutput)
}

type TemplateDataSetSchema struct {
	ColumnSchemaList []TemplateColumnSchema `pulumi:"columnSchemaList"`
}

// TemplateDataSetSchemaInput is an input type that accepts TemplateDataSetSchemaArgs and TemplateDataSetSchemaOutput values.
// You can construct a concrete instance of `TemplateDataSetSchemaInput` via:
//
//	TemplateDataSetSchemaArgs{...}
type TemplateDataSetSchemaInput interface {
	pulumi.Input

	ToTemplateDataSetSchemaOutput() TemplateDataSetSchemaOutput
	ToTemplateDataSetSchemaOutputWithContext(context.Context) TemplateDataSetSchemaOutput
}

type TemplateDataSetSchemaArgs struct {
	ColumnSchemaList TemplateColumnSchemaArrayInput `pulumi:"columnSchemaList"`
}

func (TemplateDataSetSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetSchema)(nil)).Elem()
}

func (i TemplateDataSetSchemaArgs) ToTemplateDataSetSchemaOutput() TemplateDataSetSchemaOutput {
	return i.ToTemplateDataSetSchemaOutputWithContext(context.Background())
}

func (i TemplateDataSetSchemaArgs) ToTemplateDataSetSchemaOutputWithContext(ctx context.Context) TemplateDataSetSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetSchemaOutput)
}

func (i TemplateDataSetSchemaArgs) ToTemplateDataSetSchemaPtrOutput() TemplateDataSetSchemaPtrOutput {
	return i.ToTemplateDataSetSchemaPtrOutputWithContext(context.Background())
}

func (i TemplateDataSetSchemaArgs) ToTemplateDataSetSchemaPtrOutputWithContext(ctx context.Context) TemplateDataSetSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetSchemaOutput).ToTemplateDataSetSchemaPtrOutputWithContext(ctx)
}

// TemplateDataSetSchemaPtrInput is an input type that accepts TemplateDataSetSchemaArgs, TemplateDataSetSchemaPtr and TemplateDataSetSchemaPtrOutput values.
// You can construct a concrete instance of `TemplateDataSetSchemaPtrInput` via:
//
//	        TemplateDataSetSchemaArgs{...}
//
//	or:
//
//	        nil
type TemplateDataSetSchemaPtrInput interface {
	pulumi.Input

	ToTemplateDataSetSchemaPtrOutput() TemplateDataSetSchemaPtrOutput
	ToTemplateDataSetSchemaPtrOutputWithContext(context.Context) TemplateDataSetSchemaPtrOutput
}

type templateDataSetSchemaPtrType TemplateDataSetSchemaArgs

func TemplateDataSetSchemaPtr(v *TemplateDataSetSchemaArgs) TemplateDataSetSchemaPtrInput {
	return (*templateDataSetSchemaPtrType)(v)
}

func (*templateDataSetSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataSetSchema)(nil)).Elem()
}

func (i *templateDataSetSchemaPtrType) ToTemplateDataSetSchemaPtrOutput() TemplateDataSetSchemaPtrOutput {
	return i.ToTemplateDataSetSchemaPtrOutputWithContext(context.Background())
}

func (i *templateDataSetSchemaPtrType) ToTemplateDataSetSchemaPtrOutputWithContext(ctx context.Context) TemplateDataSetSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDataSetSchemaPtrOutput)
}

type TemplateDataSetSchemaOutput struct{ *pulumi.OutputState }

func (TemplateDataSetSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDataSetSchema)(nil)).Elem()
}

func (o TemplateDataSetSchemaOutput) ToTemplateDataSetSchemaOutput() TemplateDataSetSchemaOutput {
	return o
}

func (o TemplateDataSetSchemaOutput) ToTemplateDataSetSchemaOutputWithContext(ctx context.Context) TemplateDataSetSchemaOutput {
	return o
}

func (o TemplateDataSetSchemaOutput) ToTemplateDataSetSchemaPtrOutput() TemplateDataSetSchemaPtrOutput {
	return o.ToTemplateDataSetSchemaPtrOutputWithContext(context.Background())
}

func (o TemplateDataSetSchemaOutput) ToTemplateDataSetSchemaPtrOutputWithContext(ctx context.Context) TemplateDataSetSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDataSetSchema) *TemplateDataSetSchema {
		return &v
	}).(TemplateDataSetSchemaPtrOutput)
}

func (o TemplateDataSetSchemaOutput) ColumnSchemaList() TemplateColumnSchemaArrayOutput {
	return o.ApplyT(func(v TemplateDataSetSchema) []TemplateColumnSchema { return v.ColumnSchemaList }).(TemplateColumnSchemaArrayOutput)
}

type TemplateDataSetSchemaPtrOutput struct{ *pulumi.OutputState }

func (TemplateDataSetSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDataSetSchema)(nil)).Elem()
}

func (o TemplateDataSetSchemaPtrOutput) ToTemplateDataSetSchemaPtrOutput() TemplateDataSetSchemaPtrOutput {
	return o
}

func (o TemplateDataSetSchemaPtrOutput) ToTemplateDataSetSchemaPtrOutputWithContext(ctx context.Context) TemplateDataSetSchemaPtrOutput {
	return o
}

func (o TemplateDataSetSchemaPtrOutput) Elem() TemplateDataSetSchemaOutput {
	return o.ApplyT(func(v *TemplateDataSetSchema) TemplateDataSetSchema {
		if v != nil {
			return *v
		}
		var ret TemplateDataSetSchema
		return ret
	}).(TemplateDataSetSchemaOutput)
}

func (o TemplateDataSetSchemaPtrOutput) ColumnSchemaList() TemplateColumnSchemaArrayOutput {
	return o.ApplyT(func(v *TemplateDataSetSchema) []TemplateColumnSchema {
		if v == nil {
			return nil
		}
		return v.ColumnSchemaList
	}).(TemplateColumnSchemaArrayOutput)
}

type TemplateDateAxisOptions struct {
	MissingDateVisibility *TemplateVisibility `pulumi:"missingDateVisibility"`
}

// TemplateDateAxisOptionsInput is an input type that accepts TemplateDateAxisOptionsArgs and TemplateDateAxisOptionsOutput values.
// You can construct a concrete instance of `TemplateDateAxisOptionsInput` via:
//
//	TemplateDateAxisOptionsArgs{...}
type TemplateDateAxisOptionsInput interface {
	pulumi.Input

	ToTemplateDateAxisOptionsOutput() TemplateDateAxisOptionsOutput
	ToTemplateDateAxisOptionsOutputWithContext(context.Context) TemplateDateAxisOptionsOutput
}

type TemplateDateAxisOptionsArgs struct {
	MissingDateVisibility TemplateVisibilityPtrInput `pulumi:"missingDateVisibility"`
}

func (TemplateDateAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateAxisOptions)(nil)).Elem()
}

func (i TemplateDateAxisOptionsArgs) ToTemplateDateAxisOptionsOutput() TemplateDateAxisOptionsOutput {
	return i.ToTemplateDateAxisOptionsOutputWithContext(context.Background())
}

func (i TemplateDateAxisOptionsArgs) ToTemplateDateAxisOptionsOutputWithContext(ctx context.Context) TemplateDateAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateAxisOptionsOutput)
}

func (i TemplateDateAxisOptionsArgs) ToTemplateDateAxisOptionsPtrOutput() TemplateDateAxisOptionsPtrOutput {
	return i.ToTemplateDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDateAxisOptionsArgs) ToTemplateDateAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateAxisOptionsOutput).ToTemplateDateAxisOptionsPtrOutputWithContext(ctx)
}

// TemplateDateAxisOptionsPtrInput is an input type that accepts TemplateDateAxisOptionsArgs, TemplateDateAxisOptionsPtr and TemplateDateAxisOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDateAxisOptionsPtrInput` via:
//
//	        TemplateDateAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDateAxisOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDateAxisOptionsPtrOutput() TemplateDateAxisOptionsPtrOutput
	ToTemplateDateAxisOptionsPtrOutputWithContext(context.Context) TemplateDateAxisOptionsPtrOutput
}

type templateDateAxisOptionsPtrType TemplateDateAxisOptionsArgs

func TemplateDateAxisOptionsPtr(v *TemplateDateAxisOptionsArgs) TemplateDateAxisOptionsPtrInput {
	return (*templateDateAxisOptionsPtrType)(v)
}

func (*templateDateAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateAxisOptions)(nil)).Elem()
}

func (i *templateDateAxisOptionsPtrType) ToTemplateDateAxisOptionsPtrOutput() TemplateDateAxisOptionsPtrOutput {
	return i.ToTemplateDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDateAxisOptionsPtrType) ToTemplateDateAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateDateAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateAxisOptionsPtrOutput)
}

type TemplateDateAxisOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDateAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateAxisOptions)(nil)).Elem()
}

func (o TemplateDateAxisOptionsOutput) ToTemplateDateAxisOptionsOutput() TemplateDateAxisOptionsOutput {
	return o
}

func (o TemplateDateAxisOptionsOutput) ToTemplateDateAxisOptionsOutputWithContext(ctx context.Context) TemplateDateAxisOptionsOutput {
	return o
}

func (o TemplateDateAxisOptionsOutput) ToTemplateDateAxisOptionsPtrOutput() TemplateDateAxisOptionsPtrOutput {
	return o.ToTemplateDateAxisOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDateAxisOptionsOutput) ToTemplateDateAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateDateAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateAxisOptions) *TemplateDateAxisOptions {
		return &v
	}).(TemplateDateAxisOptionsPtrOutput)
}

func (o TemplateDateAxisOptionsOutput) MissingDateVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDateAxisOptions) *TemplateVisibility { return v.MissingDateVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateDateAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateAxisOptions)(nil)).Elem()
}

func (o TemplateDateAxisOptionsPtrOutput) ToTemplateDateAxisOptionsPtrOutput() TemplateDateAxisOptionsPtrOutput {
	return o
}

func (o TemplateDateAxisOptionsPtrOutput) ToTemplateDateAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateDateAxisOptionsPtrOutput {
	return o
}

func (o TemplateDateAxisOptionsPtrOutput) Elem() TemplateDateAxisOptionsOutput {
	return o.ApplyT(func(v *TemplateDateAxisOptions) TemplateDateAxisOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDateAxisOptions
		return ret
	}).(TemplateDateAxisOptionsOutput)
}

func (o TemplateDateAxisOptionsPtrOutput) MissingDateVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDateAxisOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.MissingDateVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateDateDimensionField struct {
	Column              TemplateColumnIdentifier             `pulumi:"column"`
	DateGranularity     *TemplateTimeGranularity             `pulumi:"dateGranularity"`
	FieldId             string                               `pulumi:"fieldId"`
	FormatConfiguration *TemplateDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                              `pulumi:"hierarchyId"`
}

// TemplateDateDimensionFieldInput is an input type that accepts TemplateDateDimensionFieldArgs and TemplateDateDimensionFieldOutput values.
// You can construct a concrete instance of `TemplateDateDimensionFieldInput` via:
//
//	TemplateDateDimensionFieldArgs{...}
type TemplateDateDimensionFieldInput interface {
	pulumi.Input

	ToTemplateDateDimensionFieldOutput() TemplateDateDimensionFieldOutput
	ToTemplateDateDimensionFieldOutputWithContext(context.Context) TemplateDateDimensionFieldOutput
}

type TemplateDateDimensionFieldArgs struct {
	Column              TemplateColumnIdentifierInput               `pulumi:"column"`
	DateGranularity     TemplateTimeGranularityPtrInput             `pulumi:"dateGranularity"`
	FieldId             pulumi.StringInput                          `pulumi:"fieldId"`
	FormatConfiguration TemplateDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                       `pulumi:"hierarchyId"`
}

func (TemplateDateDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateDimensionField)(nil)).Elem()
}

func (i TemplateDateDimensionFieldArgs) ToTemplateDateDimensionFieldOutput() TemplateDateDimensionFieldOutput {
	return i.ToTemplateDateDimensionFieldOutputWithContext(context.Background())
}

func (i TemplateDateDimensionFieldArgs) ToTemplateDateDimensionFieldOutputWithContext(ctx context.Context) TemplateDateDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateDimensionFieldOutput)
}

func (i TemplateDateDimensionFieldArgs) ToTemplateDateDimensionFieldPtrOutput() TemplateDateDimensionFieldPtrOutput {
	return i.ToTemplateDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i TemplateDateDimensionFieldArgs) ToTemplateDateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateDimensionFieldOutput).ToTemplateDateDimensionFieldPtrOutputWithContext(ctx)
}

// TemplateDateDimensionFieldPtrInput is an input type that accepts TemplateDateDimensionFieldArgs, TemplateDateDimensionFieldPtr and TemplateDateDimensionFieldPtrOutput values.
// You can construct a concrete instance of `TemplateDateDimensionFieldPtrInput` via:
//
//	        TemplateDateDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateDateDimensionFieldPtrInput interface {
	pulumi.Input

	ToTemplateDateDimensionFieldPtrOutput() TemplateDateDimensionFieldPtrOutput
	ToTemplateDateDimensionFieldPtrOutputWithContext(context.Context) TemplateDateDimensionFieldPtrOutput
}

type templateDateDimensionFieldPtrType TemplateDateDimensionFieldArgs

func TemplateDateDimensionFieldPtr(v *TemplateDateDimensionFieldArgs) TemplateDateDimensionFieldPtrInput {
	return (*templateDateDimensionFieldPtrType)(v)
}

func (*templateDateDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateDimensionField)(nil)).Elem()
}

func (i *templateDateDimensionFieldPtrType) ToTemplateDateDimensionFieldPtrOutput() TemplateDateDimensionFieldPtrOutput {
	return i.ToTemplateDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *templateDateDimensionFieldPtrType) ToTemplateDateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateDimensionFieldPtrOutput)
}

type TemplateDateDimensionFieldOutput struct{ *pulumi.OutputState }

func (TemplateDateDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateDimensionField)(nil)).Elem()
}

func (o TemplateDateDimensionFieldOutput) ToTemplateDateDimensionFieldOutput() TemplateDateDimensionFieldOutput {
	return o
}

func (o TemplateDateDimensionFieldOutput) ToTemplateDateDimensionFieldOutputWithContext(ctx context.Context) TemplateDateDimensionFieldOutput {
	return o
}

func (o TemplateDateDimensionFieldOutput) ToTemplateDateDimensionFieldPtrOutput() TemplateDateDimensionFieldPtrOutput {
	return o.ToTemplateDateDimensionFieldPtrOutputWithContext(context.Background())
}

func (o TemplateDateDimensionFieldOutput) ToTemplateDateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDateDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateDimensionField) *TemplateDateDimensionField {
		return &v
	}).(TemplateDateDimensionFieldPtrOutput)
}

func (o TemplateDateDimensionFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateDateDimensionField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateDateDimensionFieldOutput) DateGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateDateDimensionField) *TemplateTimeGranularity { return v.DateGranularity }).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateDateDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDateDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateDateDimensionFieldOutput) FormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateDimensionField) *TemplateDateTimeFormatConfiguration { return v.FormatConfiguration }).(TemplateDateTimeFormatConfigurationPtrOutput)
}

func (o TemplateDateDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDateDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type TemplateDateDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateDimensionField)(nil)).Elem()
}

func (o TemplateDateDimensionFieldPtrOutput) ToTemplateDateDimensionFieldPtrOutput() TemplateDateDimensionFieldPtrOutput {
	return o
}

func (o TemplateDateDimensionFieldPtrOutput) ToTemplateDateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDateDimensionFieldPtrOutput {
	return o
}

func (o TemplateDateDimensionFieldPtrOutput) Elem() TemplateDateDimensionFieldOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) TemplateDateDimensionField {
		if v != nil {
			return *v
		}
		var ret TemplateDateDimensionField
		return ret
	}).(TemplateDateDimensionFieldOutput)
}

func (o TemplateDateDimensionFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDateDimensionFieldPtrOutput) DateGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.DateGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateDateDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateDimensionFieldPtrOutput) FormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) *TemplateDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateDateTimeFormatConfigurationPtrOutput)
}

func (o TemplateDateDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateDateMeasureField struct {
	AggregationFunction *TemplateDateAggregationFunction     `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier             `pulumi:"column"`
	FieldId             string                               `pulumi:"fieldId"`
	FormatConfiguration *TemplateDateTimeFormatConfiguration `pulumi:"formatConfiguration"`
}

// TemplateDateMeasureFieldInput is an input type that accepts TemplateDateMeasureFieldArgs and TemplateDateMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateDateMeasureFieldInput` via:
//
//	TemplateDateMeasureFieldArgs{...}
type TemplateDateMeasureFieldInput interface {
	pulumi.Input

	ToTemplateDateMeasureFieldOutput() TemplateDateMeasureFieldOutput
	ToTemplateDateMeasureFieldOutputWithContext(context.Context) TemplateDateMeasureFieldOutput
}

type TemplateDateMeasureFieldArgs struct {
	AggregationFunction TemplateDateAggregationFunctionPtrInput     `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput               `pulumi:"column"`
	FieldId             pulumi.StringInput                          `pulumi:"fieldId"`
	FormatConfiguration TemplateDateTimeFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (TemplateDateMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateMeasureField)(nil)).Elem()
}

func (i TemplateDateMeasureFieldArgs) ToTemplateDateMeasureFieldOutput() TemplateDateMeasureFieldOutput {
	return i.ToTemplateDateMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateDateMeasureFieldArgs) ToTemplateDateMeasureFieldOutputWithContext(ctx context.Context) TemplateDateMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateMeasureFieldOutput)
}

func (i TemplateDateMeasureFieldArgs) ToTemplateDateMeasureFieldPtrOutput() TemplateDateMeasureFieldPtrOutput {
	return i.ToTemplateDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateDateMeasureFieldArgs) ToTemplateDateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateMeasureFieldOutput).ToTemplateDateMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateDateMeasureFieldPtrInput is an input type that accepts TemplateDateMeasureFieldArgs, TemplateDateMeasureFieldPtr and TemplateDateMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateDateMeasureFieldPtrInput` via:
//
//	        TemplateDateMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateDateMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateDateMeasureFieldPtrOutput() TemplateDateMeasureFieldPtrOutput
	ToTemplateDateMeasureFieldPtrOutputWithContext(context.Context) TemplateDateMeasureFieldPtrOutput
}

type templateDateMeasureFieldPtrType TemplateDateMeasureFieldArgs

func TemplateDateMeasureFieldPtr(v *TemplateDateMeasureFieldArgs) TemplateDateMeasureFieldPtrInput {
	return (*templateDateMeasureFieldPtrType)(v)
}

func (*templateDateMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateMeasureField)(nil)).Elem()
}

func (i *templateDateMeasureFieldPtrType) ToTemplateDateMeasureFieldPtrOutput() TemplateDateMeasureFieldPtrOutput {
	return i.ToTemplateDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateDateMeasureFieldPtrType) ToTemplateDateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateDateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateMeasureFieldPtrOutput)
}

type TemplateDateMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateDateMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateMeasureField)(nil)).Elem()
}

func (o TemplateDateMeasureFieldOutput) ToTemplateDateMeasureFieldOutput() TemplateDateMeasureFieldOutput {
	return o
}

func (o TemplateDateMeasureFieldOutput) ToTemplateDateMeasureFieldOutputWithContext(ctx context.Context) TemplateDateMeasureFieldOutput {
	return o
}

func (o TemplateDateMeasureFieldOutput) ToTemplateDateMeasureFieldPtrOutput() TemplateDateMeasureFieldPtrOutput {
	return o.ToTemplateDateMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateDateMeasureFieldOutput) ToTemplateDateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateDateMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateMeasureField) *TemplateDateMeasureField {
		return &v
	}).(TemplateDateMeasureFieldPtrOutput)
}

func (o TemplateDateMeasureFieldOutput) AggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateDateMeasureField) *TemplateDateAggregationFunction { return v.AggregationFunction }).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateDateMeasureFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateDateMeasureField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateDateMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDateMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateDateMeasureFieldOutput) FormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateMeasureField) *TemplateDateTimeFormatConfiguration { return v.FormatConfiguration }).(TemplateDateTimeFormatConfigurationPtrOutput)
}

type TemplateDateMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateMeasureField)(nil)).Elem()
}

func (o TemplateDateMeasureFieldPtrOutput) ToTemplateDateMeasureFieldPtrOutput() TemplateDateMeasureFieldPtrOutput {
	return o
}

func (o TemplateDateMeasureFieldPtrOutput) ToTemplateDateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateDateMeasureFieldPtrOutput {
	return o
}

func (o TemplateDateMeasureFieldPtrOutput) Elem() TemplateDateMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateDateMeasureField) TemplateDateMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateDateMeasureField
		return ret
	}).(TemplateDateMeasureFieldOutput)
}

func (o TemplateDateMeasureFieldPtrOutput) AggregationFunction() TemplateDateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateDateMeasureField) *TemplateDateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateDateAggregationFunctionPtrOutput)
}

func (o TemplateDateMeasureFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateDateMeasureField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDateMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateMeasureFieldPtrOutput) FormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateMeasureField) *TemplateDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateDateTimeFormatConfigurationPtrOutput)
}

type TemplateDateTimeDefaultValues struct {
	DynamicValue *TemplateDynamicDefaultValue      `pulumi:"dynamicValue"`
	RollingDate  *TemplateRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValues []string                          `pulumi:"staticValues"`
}

// TemplateDateTimeDefaultValuesInput is an input type that accepts TemplateDateTimeDefaultValuesArgs and TemplateDateTimeDefaultValuesOutput values.
// You can construct a concrete instance of `TemplateDateTimeDefaultValuesInput` via:
//
//	TemplateDateTimeDefaultValuesArgs{...}
type TemplateDateTimeDefaultValuesInput interface {
	pulumi.Input

	ToTemplateDateTimeDefaultValuesOutput() TemplateDateTimeDefaultValuesOutput
	ToTemplateDateTimeDefaultValuesOutputWithContext(context.Context) TemplateDateTimeDefaultValuesOutput
}

type TemplateDateTimeDefaultValuesArgs struct {
	DynamicValue TemplateDynamicDefaultValuePtrInput      `pulumi:"dynamicValue"`
	RollingDate  TemplateRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValues pulumi.StringArrayInput                  `pulumi:"staticValues"`
}

func (TemplateDateTimeDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeDefaultValues)(nil)).Elem()
}

func (i TemplateDateTimeDefaultValuesArgs) ToTemplateDateTimeDefaultValuesOutput() TemplateDateTimeDefaultValuesOutput {
	return i.ToTemplateDateTimeDefaultValuesOutputWithContext(context.Background())
}

func (i TemplateDateTimeDefaultValuesArgs) ToTemplateDateTimeDefaultValuesOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeDefaultValuesOutput)
}

func (i TemplateDateTimeDefaultValuesArgs) ToTemplateDateTimeDefaultValuesPtrOutput() TemplateDateTimeDefaultValuesPtrOutput {
	return i.ToTemplateDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimeDefaultValuesArgs) ToTemplateDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeDefaultValuesOutput).ToTemplateDateTimeDefaultValuesPtrOutputWithContext(ctx)
}

// TemplateDateTimeDefaultValuesPtrInput is an input type that accepts TemplateDateTimeDefaultValuesArgs, TemplateDateTimeDefaultValuesPtr and TemplateDateTimeDefaultValuesPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimeDefaultValuesPtrInput` via:
//
//	        TemplateDateTimeDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimeDefaultValuesPtrInput interface {
	pulumi.Input

	ToTemplateDateTimeDefaultValuesPtrOutput() TemplateDateTimeDefaultValuesPtrOutput
	ToTemplateDateTimeDefaultValuesPtrOutputWithContext(context.Context) TemplateDateTimeDefaultValuesPtrOutput
}

type templateDateTimeDefaultValuesPtrType TemplateDateTimeDefaultValuesArgs

func TemplateDateTimeDefaultValuesPtr(v *TemplateDateTimeDefaultValuesArgs) TemplateDateTimeDefaultValuesPtrInput {
	return (*templateDateTimeDefaultValuesPtrType)(v)
}

func (*templateDateTimeDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeDefaultValues)(nil)).Elem()
}

func (i *templateDateTimeDefaultValuesPtrType) ToTemplateDateTimeDefaultValuesPtrOutput() TemplateDateTimeDefaultValuesPtrOutput {
	return i.ToTemplateDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *templateDateTimeDefaultValuesPtrType) ToTemplateDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeDefaultValuesPtrOutput)
}

type TemplateDateTimeDefaultValuesOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeDefaultValues)(nil)).Elem()
}

func (o TemplateDateTimeDefaultValuesOutput) ToTemplateDateTimeDefaultValuesOutput() TemplateDateTimeDefaultValuesOutput {
	return o
}

func (o TemplateDateTimeDefaultValuesOutput) ToTemplateDateTimeDefaultValuesOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesOutput {
	return o
}

func (o TemplateDateTimeDefaultValuesOutput) ToTemplateDateTimeDefaultValuesPtrOutput() TemplateDateTimeDefaultValuesPtrOutput {
	return o.ToTemplateDateTimeDefaultValuesPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimeDefaultValuesOutput) ToTemplateDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimeDefaultValues) *TemplateDateTimeDefaultValues {
		return &v
	}).(TemplateDateTimeDefaultValuesPtrOutput)
}

func (o TemplateDateTimeDefaultValuesOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v TemplateDateTimeDefaultValues) *TemplateDynamicDefaultValue { return v.DynamicValue }).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateDateTimeDefaultValuesOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeDefaultValues) *TemplateRollingDateConfiguration { return v.RollingDate }).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateDateTimeDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateDateTimeDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type TemplateDateTimeDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeDefaultValues)(nil)).Elem()
}

func (o TemplateDateTimeDefaultValuesPtrOutput) ToTemplateDateTimeDefaultValuesPtrOutput() TemplateDateTimeDefaultValuesPtrOutput {
	return o
}

func (o TemplateDateTimeDefaultValuesPtrOutput) ToTemplateDateTimeDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDateTimeDefaultValuesPtrOutput {
	return o
}

func (o TemplateDateTimeDefaultValuesPtrOutput) Elem() TemplateDateTimeDefaultValuesOutput {
	return o.ApplyT(func(v *TemplateDateTimeDefaultValues) TemplateDateTimeDefaultValues {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimeDefaultValues
		return ret
	}).(TemplateDateTimeDefaultValuesOutput)
}

func (o TemplateDateTimeDefaultValuesPtrOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeDefaultValues) *TemplateDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateDateTimeDefaultValuesPtrOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeDefaultValues) *TemplateRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateDateTimeDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateDateTimeDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type TemplateDateTimeFormatConfiguration struct {
	DateTimeFormat               *string                               `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration *TemplateNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *TemplateNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// TemplateDateTimeFormatConfigurationInput is an input type that accepts TemplateDateTimeFormatConfigurationArgs and TemplateDateTimeFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateDateTimeFormatConfigurationInput` via:
//
//	TemplateDateTimeFormatConfigurationArgs{...}
type TemplateDateTimeFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateDateTimeFormatConfigurationOutput() TemplateDateTimeFormatConfigurationOutput
	ToTemplateDateTimeFormatConfigurationOutputWithContext(context.Context) TemplateDateTimeFormatConfigurationOutput
}

type TemplateDateTimeFormatConfigurationArgs struct {
	DateTimeFormat               pulumi.StringPtrInput                        `pulumi:"dateTimeFormat"`
	NullValueFormatConfiguration TemplateNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   TemplateNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (TemplateDateTimeFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeFormatConfiguration)(nil)).Elem()
}

func (i TemplateDateTimeFormatConfigurationArgs) ToTemplateDateTimeFormatConfigurationOutput() TemplateDateTimeFormatConfigurationOutput {
	return i.ToTemplateDateTimeFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateDateTimeFormatConfigurationArgs) ToTemplateDateTimeFormatConfigurationOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeFormatConfigurationOutput)
}

func (i TemplateDateTimeFormatConfigurationArgs) ToTemplateDateTimeFormatConfigurationPtrOutput() TemplateDateTimeFormatConfigurationPtrOutput {
	return i.ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimeFormatConfigurationArgs) ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeFormatConfigurationOutput).ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateDateTimeFormatConfigurationPtrInput is an input type that accepts TemplateDateTimeFormatConfigurationArgs, TemplateDateTimeFormatConfigurationPtr and TemplateDateTimeFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimeFormatConfigurationPtrInput` via:
//
//	        TemplateDateTimeFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimeFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDateTimeFormatConfigurationPtrOutput() TemplateDateTimeFormatConfigurationPtrOutput
	ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(context.Context) TemplateDateTimeFormatConfigurationPtrOutput
}

type templateDateTimeFormatConfigurationPtrType TemplateDateTimeFormatConfigurationArgs

func TemplateDateTimeFormatConfigurationPtr(v *TemplateDateTimeFormatConfigurationArgs) TemplateDateTimeFormatConfigurationPtrInput {
	return (*templateDateTimeFormatConfigurationPtrType)(v)
}

func (*templateDateTimeFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeFormatConfiguration)(nil)).Elem()
}

func (i *templateDateTimeFormatConfigurationPtrType) ToTemplateDateTimeFormatConfigurationPtrOutput() TemplateDateTimeFormatConfigurationPtrOutput {
	return i.ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDateTimeFormatConfigurationPtrType) ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeFormatConfigurationPtrOutput)
}

type TemplateDateTimeFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeFormatConfiguration)(nil)).Elem()
}

func (o TemplateDateTimeFormatConfigurationOutput) ToTemplateDateTimeFormatConfigurationOutput() TemplateDateTimeFormatConfigurationOutput {
	return o
}

func (o TemplateDateTimeFormatConfigurationOutput) ToTemplateDateTimeFormatConfigurationOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationOutput {
	return o
}

func (o TemplateDateTimeFormatConfigurationOutput) ToTemplateDateTimeFormatConfigurationPtrOutput() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimeFormatConfigurationOutput) ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimeFormatConfiguration) *TemplateDateTimeFormatConfiguration {
		return &v
	}).(TemplateDateTimeFormatConfigurationPtrOutput)
}

func (o TemplateDateTimeFormatConfigurationOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeFormatConfiguration) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimeFormatConfigurationOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateDateTimeFormatConfigurationOutput) NumericFormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeFormatConfiguration) *TemplateNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateDateTimeFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeFormatConfiguration)(nil)).Elem()
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) ToTemplateDateTimeFormatConfigurationPtrOutput() TemplateDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) ToTemplateDateTimeFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeFormatConfigurationPtrOutput {
	return o
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) Elem() TemplateDateTimeFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateDateTimeFormatConfiguration) TemplateDateTimeFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimeFormatConfiguration
		return ret
	}).(TemplateDateTimeFormatConfigurationOutput)
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeFormatConfiguration) *TemplateNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateDateTimeFormatConfigurationPtrOutput) NumericFormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeFormatConfiguration) *TemplateNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateDateTimeHierarchy struct {
	DrillDownFilters []TemplateDrillDownFilter `pulumi:"drillDownFilters"`
	HierarchyId      string                    `pulumi:"hierarchyId"`
}

// TemplateDateTimeHierarchyInput is an input type that accepts TemplateDateTimeHierarchyArgs and TemplateDateTimeHierarchyOutput values.
// You can construct a concrete instance of `TemplateDateTimeHierarchyInput` via:
//
//	TemplateDateTimeHierarchyArgs{...}
type TemplateDateTimeHierarchyInput interface {
	pulumi.Input

	ToTemplateDateTimeHierarchyOutput() TemplateDateTimeHierarchyOutput
	ToTemplateDateTimeHierarchyOutputWithContext(context.Context) TemplateDateTimeHierarchyOutput
}

type TemplateDateTimeHierarchyArgs struct {
	DrillDownFilters TemplateDrillDownFilterArrayInput `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                `pulumi:"hierarchyId"`
}

func (TemplateDateTimeHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeHierarchy)(nil)).Elem()
}

func (i TemplateDateTimeHierarchyArgs) ToTemplateDateTimeHierarchyOutput() TemplateDateTimeHierarchyOutput {
	return i.ToTemplateDateTimeHierarchyOutputWithContext(context.Background())
}

func (i TemplateDateTimeHierarchyArgs) ToTemplateDateTimeHierarchyOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeHierarchyOutput)
}

func (i TemplateDateTimeHierarchyArgs) ToTemplateDateTimeHierarchyPtrOutput() TemplateDateTimeHierarchyPtrOutput {
	return i.ToTemplateDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimeHierarchyArgs) ToTemplateDateTimeHierarchyPtrOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeHierarchyOutput).ToTemplateDateTimeHierarchyPtrOutputWithContext(ctx)
}

// TemplateDateTimeHierarchyPtrInput is an input type that accepts TemplateDateTimeHierarchyArgs, TemplateDateTimeHierarchyPtr and TemplateDateTimeHierarchyPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimeHierarchyPtrInput` via:
//
//	        TemplateDateTimeHierarchyArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimeHierarchyPtrInput interface {
	pulumi.Input

	ToTemplateDateTimeHierarchyPtrOutput() TemplateDateTimeHierarchyPtrOutput
	ToTemplateDateTimeHierarchyPtrOutputWithContext(context.Context) TemplateDateTimeHierarchyPtrOutput
}

type templateDateTimeHierarchyPtrType TemplateDateTimeHierarchyArgs

func TemplateDateTimeHierarchyPtr(v *TemplateDateTimeHierarchyArgs) TemplateDateTimeHierarchyPtrInput {
	return (*templateDateTimeHierarchyPtrType)(v)
}

func (*templateDateTimeHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeHierarchy)(nil)).Elem()
}

func (i *templateDateTimeHierarchyPtrType) ToTemplateDateTimeHierarchyPtrOutput() TemplateDateTimeHierarchyPtrOutput {
	return i.ToTemplateDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (i *templateDateTimeHierarchyPtrType) ToTemplateDateTimeHierarchyPtrOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeHierarchyPtrOutput)
}

type TemplateDateTimeHierarchyOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeHierarchy)(nil)).Elem()
}

func (o TemplateDateTimeHierarchyOutput) ToTemplateDateTimeHierarchyOutput() TemplateDateTimeHierarchyOutput {
	return o
}

func (o TemplateDateTimeHierarchyOutput) ToTemplateDateTimeHierarchyOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyOutput {
	return o
}

func (o TemplateDateTimeHierarchyOutput) ToTemplateDateTimeHierarchyPtrOutput() TemplateDateTimeHierarchyPtrOutput {
	return o.ToTemplateDateTimeHierarchyPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimeHierarchyOutput) ToTemplateDateTimeHierarchyPtrOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimeHierarchy) *TemplateDateTimeHierarchy {
		return &v
	}).(TemplateDateTimeHierarchyPtrOutput)
}

func (o TemplateDateTimeHierarchyOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v TemplateDateTimeHierarchy) []TemplateDrillDownFilter { return v.DrillDownFilters }).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplateDateTimeHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDateTimeHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type TemplateDateTimeHierarchyPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeHierarchy)(nil)).Elem()
}

func (o TemplateDateTimeHierarchyPtrOutput) ToTemplateDateTimeHierarchyPtrOutput() TemplateDateTimeHierarchyPtrOutput {
	return o
}

func (o TemplateDateTimeHierarchyPtrOutput) ToTemplateDateTimeHierarchyPtrOutputWithContext(ctx context.Context) TemplateDateTimeHierarchyPtrOutput {
	return o
}

func (o TemplateDateTimeHierarchyPtrOutput) Elem() TemplateDateTimeHierarchyOutput {
	return o.ApplyT(func(v *TemplateDateTimeHierarchy) TemplateDateTimeHierarchy {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimeHierarchy
		return ret
	}).(TemplateDateTimeHierarchyOutput)
}

func (o TemplateDateTimeHierarchyPtrOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *TemplateDateTimeHierarchy) []TemplateDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplateDateTimeHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateDateTimeParameterDeclaration struct {
	DefaultValues           *TemplateDateTimeDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []TemplateMappedDataSetParameter             `pulumi:"mappedDataSetParameters"`
	Name                    string                                       `pulumi:"name"`
	TimeGranularity         *TemplateTimeGranularity                     `pulumi:"timeGranularity"`
	ValueWhenUnset          *TemplateDateTimeValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// TemplateDateTimeParameterDeclarationInput is an input type that accepts TemplateDateTimeParameterDeclarationArgs and TemplateDateTimeParameterDeclarationOutput values.
// You can construct a concrete instance of `TemplateDateTimeParameterDeclarationInput` via:
//
//	TemplateDateTimeParameterDeclarationArgs{...}
type TemplateDateTimeParameterDeclarationInput interface {
	pulumi.Input

	ToTemplateDateTimeParameterDeclarationOutput() TemplateDateTimeParameterDeclarationOutput
	ToTemplateDateTimeParameterDeclarationOutputWithContext(context.Context) TemplateDateTimeParameterDeclarationOutput
}

type TemplateDateTimeParameterDeclarationArgs struct {
	DefaultValues           TemplateDateTimeDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters TemplateMappedDataSetParameterArrayInput            `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                  `pulumi:"name"`
	TimeGranularity         TemplateTimeGranularityPtrInput                     `pulumi:"timeGranularity"`
	ValueWhenUnset          TemplateDateTimeValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (TemplateDateTimeParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeParameterDeclaration)(nil)).Elem()
}

func (i TemplateDateTimeParameterDeclarationArgs) ToTemplateDateTimeParameterDeclarationOutput() TemplateDateTimeParameterDeclarationOutput {
	return i.ToTemplateDateTimeParameterDeclarationOutputWithContext(context.Background())
}

func (i TemplateDateTimeParameterDeclarationArgs) ToTemplateDateTimeParameterDeclarationOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeParameterDeclarationOutput)
}

func (i TemplateDateTimeParameterDeclarationArgs) ToTemplateDateTimeParameterDeclarationPtrOutput() TemplateDateTimeParameterDeclarationPtrOutput {
	return i.ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimeParameterDeclarationArgs) ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeParameterDeclarationOutput).ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(ctx)
}

// TemplateDateTimeParameterDeclarationPtrInput is an input type that accepts TemplateDateTimeParameterDeclarationArgs, TemplateDateTimeParameterDeclarationPtr and TemplateDateTimeParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimeParameterDeclarationPtrInput` via:
//
//	        TemplateDateTimeParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimeParameterDeclarationPtrInput interface {
	pulumi.Input

	ToTemplateDateTimeParameterDeclarationPtrOutput() TemplateDateTimeParameterDeclarationPtrOutput
	ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(context.Context) TemplateDateTimeParameterDeclarationPtrOutput
}

type templateDateTimeParameterDeclarationPtrType TemplateDateTimeParameterDeclarationArgs

func TemplateDateTimeParameterDeclarationPtr(v *TemplateDateTimeParameterDeclarationArgs) TemplateDateTimeParameterDeclarationPtrInput {
	return (*templateDateTimeParameterDeclarationPtrType)(v)
}

func (*templateDateTimeParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeParameterDeclaration)(nil)).Elem()
}

func (i *templateDateTimeParameterDeclarationPtrType) ToTemplateDateTimeParameterDeclarationPtrOutput() TemplateDateTimeParameterDeclarationPtrOutput {
	return i.ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *templateDateTimeParameterDeclarationPtrType) ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeParameterDeclarationPtrOutput)
}

type TemplateDateTimeParameterDeclarationOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeParameterDeclaration)(nil)).Elem()
}

func (o TemplateDateTimeParameterDeclarationOutput) ToTemplateDateTimeParameterDeclarationOutput() TemplateDateTimeParameterDeclarationOutput {
	return o
}

func (o TemplateDateTimeParameterDeclarationOutput) ToTemplateDateTimeParameterDeclarationOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationOutput {
	return o
}

func (o TemplateDateTimeParameterDeclarationOutput) ToTemplateDateTimeParameterDeclarationPtrOutput() TemplateDateTimeParameterDeclarationPtrOutput {
	return o.ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimeParameterDeclarationOutput) ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimeParameterDeclaration) *TemplateDateTimeParameterDeclaration {
		return &v
	}).(TemplateDateTimeParameterDeclarationPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationOutput) DefaultValues() TemplateDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeParameterDeclaration) *TemplateDateTimeDefaultValues { return v.DefaultValues }).(TemplateDateTimeDefaultValuesPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v TemplateDateTimeParameterDeclaration) []TemplateMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateDateTimeParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDateTimeParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateDateTimeParameterDeclarationOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeParameterDeclaration) *TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationOutput) ValueWhenUnset() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeParameterDeclaration) *TemplateDateTimeValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(TemplateDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDateTimeParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeParameterDeclaration)(nil)).Elem()
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) ToTemplateDateTimeParameterDeclarationPtrOutput() TemplateDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) ToTemplateDateTimeParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDateTimeParameterDeclarationPtrOutput {
	return o
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) Elem() TemplateDateTimeParameterDeclarationOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) TemplateDateTimeParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimeParameterDeclaration
		return ret
	}).(TemplateDateTimeParameterDeclarationOutput)
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) DefaultValues() TemplateDateTimeDefaultValuesPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) *TemplateDateTimeDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(TemplateDateTimeDefaultValuesPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) []TemplateMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateDateTimeParameterDeclarationPtrOutput) ValueWhenUnset() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeParameterDeclaration) *TemplateDateTimeValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(TemplateDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDateTimePickerControlDisplayOptions struct {
	DateTimeFormat       *string                                   `pulumi:"dateTimeFormat"`
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateDateTimePickerControlDisplayOptionsInput is an input type that accepts TemplateDateTimePickerControlDisplayOptionsArgs and TemplateDateTimePickerControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateDateTimePickerControlDisplayOptionsInput` via:
//
//	TemplateDateTimePickerControlDisplayOptionsArgs{...}
type TemplateDateTimePickerControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateDateTimePickerControlDisplayOptionsOutput() TemplateDateTimePickerControlDisplayOptionsOutput
	ToTemplateDateTimePickerControlDisplayOptionsOutputWithContext(context.Context) TemplateDateTimePickerControlDisplayOptionsOutput
}

type TemplateDateTimePickerControlDisplayOptionsArgs struct {
	DateTimeFormat       pulumi.StringPtrInput                            `pulumi:"dateTimeFormat"`
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateDateTimePickerControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i TemplateDateTimePickerControlDisplayOptionsArgs) ToTemplateDateTimePickerControlDisplayOptionsOutput() TemplateDateTimePickerControlDisplayOptionsOutput {
	return i.ToTemplateDateTimePickerControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateDateTimePickerControlDisplayOptionsArgs) ToTemplateDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimePickerControlDisplayOptionsOutput)
}

func (i TemplateDateTimePickerControlDisplayOptionsArgs) ToTemplateDateTimePickerControlDisplayOptionsPtrOutput() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimePickerControlDisplayOptionsArgs) ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimePickerControlDisplayOptionsOutput).ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateDateTimePickerControlDisplayOptionsPtrInput is an input type that accepts TemplateDateTimePickerControlDisplayOptionsArgs, TemplateDateTimePickerControlDisplayOptionsPtr and TemplateDateTimePickerControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimePickerControlDisplayOptionsPtrInput` via:
//
//	        TemplateDateTimePickerControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimePickerControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDateTimePickerControlDisplayOptionsPtrOutput() TemplateDateTimePickerControlDisplayOptionsPtrOutput
	ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateDateTimePickerControlDisplayOptionsPtrOutput
}

type templateDateTimePickerControlDisplayOptionsPtrType TemplateDateTimePickerControlDisplayOptionsArgs

func TemplateDateTimePickerControlDisplayOptionsPtr(v *TemplateDateTimePickerControlDisplayOptionsArgs) TemplateDateTimePickerControlDisplayOptionsPtrInput {
	return (*templateDateTimePickerControlDisplayOptionsPtrType)(v)
}

func (*templateDateTimePickerControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (i *templateDateTimePickerControlDisplayOptionsPtrType) ToTemplateDateTimePickerControlDisplayOptionsPtrOutput() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return i.ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDateTimePickerControlDisplayOptionsPtrType) ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

type TemplateDateTimePickerControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDateTimePickerControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) ToTemplateDateTimePickerControlDisplayOptionsOutput() TemplateDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) ToTemplateDateTimePickerControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsOutput {
	return o
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) ToTemplateDateTimePickerControlDisplayOptionsPtrOutput() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimePickerControlDisplayOptions) *TemplateDateTimePickerControlDisplayOptions {
		return &v
	}).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDateTimePickerControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDateTimePickerControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDateTimePickerControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateDateTimePickerControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimePickerControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimePickerControlDisplayOptions)(nil)).Elem()
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) ToTemplateDateTimePickerControlDisplayOptionsPtrOutput() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) ToTemplateDateTimePickerControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) Elem() TemplateDateTimePickerControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateDateTimePickerControlDisplayOptions) TemplateDateTimePickerControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimePickerControlDisplayOptions
		return ret
	}).(TemplateDateTimePickerControlDisplayOptionsOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimePickerControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimePickerControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateDateTimePickerControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimePickerControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateDateTimeValueWhenUnsetConfiguration struct {
	CustomValue          *string                       `pulumi:"customValue"`
	ValueWhenUnsetOption *TemplateValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// TemplateDateTimeValueWhenUnsetConfigurationInput is an input type that accepts TemplateDateTimeValueWhenUnsetConfigurationArgs and TemplateDateTimeValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `TemplateDateTimeValueWhenUnsetConfigurationInput` via:
//
//	TemplateDateTimeValueWhenUnsetConfigurationArgs{...}
type TemplateDateTimeValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToTemplateDateTimeValueWhenUnsetConfigurationOutput() TemplateDateTimeValueWhenUnsetConfigurationOutput
	ToTemplateDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Context) TemplateDateTimeValueWhenUnsetConfigurationOutput
}

type TemplateDateTimeValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption TemplateValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (TemplateDateTimeValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i TemplateDateTimeValueWhenUnsetConfigurationArgs) ToTemplateDateTimeValueWhenUnsetConfigurationOutput() TemplateDateTimeValueWhenUnsetConfigurationOutput {
	return i.ToTemplateDateTimeValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i TemplateDateTimeValueWhenUnsetConfigurationArgs) ToTemplateDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeValueWhenUnsetConfigurationOutput)
}

func (i TemplateDateTimeValueWhenUnsetConfigurationArgs) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutput() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDateTimeValueWhenUnsetConfigurationArgs) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeValueWhenUnsetConfigurationOutput).ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// TemplateDateTimeValueWhenUnsetConfigurationPtrInput is an input type that accepts TemplateDateTimeValueWhenUnsetConfigurationArgs, TemplateDateTimeValueWhenUnsetConfigurationPtr and TemplateDateTimeValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDateTimeValueWhenUnsetConfigurationPtrInput` via:
//
//	        TemplateDateTimeValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDateTimeValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutput() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput
	ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) TemplateDateTimeValueWhenUnsetConfigurationPtrOutput
}

type templateDateTimeValueWhenUnsetConfigurationPtrType TemplateDateTimeValueWhenUnsetConfigurationArgs

func TemplateDateTimeValueWhenUnsetConfigurationPtr(v *TemplateDateTimeValueWhenUnsetConfigurationArgs) TemplateDateTimeValueWhenUnsetConfigurationPtrInput {
	return (*templateDateTimeValueWhenUnsetConfigurationPtrType)(v)
}

func (*templateDateTimeValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *templateDateTimeValueWhenUnsetConfigurationPtrType) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutput() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDateTimeValueWhenUnsetConfigurationPtrType) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDateTimeValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDateTimeValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) ToTemplateDateTimeValueWhenUnsetConfigurationOutput() TemplateDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) ToTemplateDateTimeValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutput() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDateTimeValueWhenUnsetConfiguration) *TemplateDateTimeValueWhenUnsetConfiguration {
		return &v
	}).(TemplateDateTimeValueWhenUnsetConfigurationPtrOutput)
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimeValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v TemplateDateTimeValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateDateTimeValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDateTimeValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutput() TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) ToTemplateDateTimeValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDateTimeValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) Elem() TemplateDateTimeValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *TemplateDateTimeValueWhenUnsetConfiguration) TemplateDateTimeValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDateTimeValueWhenUnsetConfiguration
		return ret
	}).(TemplateDateTimeValueWhenUnsetConfigurationOutput)
}

func (o TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDateTimeValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *TemplateDateTimeValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateDecimalDefaultValues struct {
	DynamicValue *TemplateDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                    `pulumi:"staticValues"`
}

// TemplateDecimalDefaultValuesInput is an input type that accepts TemplateDecimalDefaultValuesArgs and TemplateDecimalDefaultValuesOutput values.
// You can construct a concrete instance of `TemplateDecimalDefaultValuesInput` via:
//
//	TemplateDecimalDefaultValuesArgs{...}
type TemplateDecimalDefaultValuesInput interface {
	pulumi.Input

	ToTemplateDecimalDefaultValuesOutput() TemplateDecimalDefaultValuesOutput
	ToTemplateDecimalDefaultValuesOutputWithContext(context.Context) TemplateDecimalDefaultValuesOutput
}

type TemplateDecimalDefaultValuesArgs struct {
	DynamicValue TemplateDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput            `pulumi:"staticValues"`
}

func (TemplateDecimalDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalDefaultValues)(nil)).Elem()
}

func (i TemplateDecimalDefaultValuesArgs) ToTemplateDecimalDefaultValuesOutput() TemplateDecimalDefaultValuesOutput {
	return i.ToTemplateDecimalDefaultValuesOutputWithContext(context.Background())
}

func (i TemplateDecimalDefaultValuesArgs) ToTemplateDecimalDefaultValuesOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalDefaultValuesOutput)
}

func (i TemplateDecimalDefaultValuesArgs) ToTemplateDecimalDefaultValuesPtrOutput() TemplateDecimalDefaultValuesPtrOutput {
	return i.ToTemplateDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i TemplateDecimalDefaultValuesArgs) ToTemplateDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalDefaultValuesOutput).ToTemplateDecimalDefaultValuesPtrOutputWithContext(ctx)
}

// TemplateDecimalDefaultValuesPtrInput is an input type that accepts TemplateDecimalDefaultValuesArgs, TemplateDecimalDefaultValuesPtr and TemplateDecimalDefaultValuesPtrOutput values.
// You can construct a concrete instance of `TemplateDecimalDefaultValuesPtrInput` via:
//
//	        TemplateDecimalDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateDecimalDefaultValuesPtrInput interface {
	pulumi.Input

	ToTemplateDecimalDefaultValuesPtrOutput() TemplateDecimalDefaultValuesPtrOutput
	ToTemplateDecimalDefaultValuesPtrOutputWithContext(context.Context) TemplateDecimalDefaultValuesPtrOutput
}

type templateDecimalDefaultValuesPtrType TemplateDecimalDefaultValuesArgs

func TemplateDecimalDefaultValuesPtr(v *TemplateDecimalDefaultValuesArgs) TemplateDecimalDefaultValuesPtrInput {
	return (*templateDecimalDefaultValuesPtrType)(v)
}

func (*templateDecimalDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalDefaultValues)(nil)).Elem()
}

func (i *templateDecimalDefaultValuesPtrType) ToTemplateDecimalDefaultValuesPtrOutput() TemplateDecimalDefaultValuesPtrOutput {
	return i.ToTemplateDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *templateDecimalDefaultValuesPtrType) ToTemplateDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalDefaultValuesPtrOutput)
}

type TemplateDecimalDefaultValuesOutput struct{ *pulumi.OutputState }

func (TemplateDecimalDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalDefaultValues)(nil)).Elem()
}

func (o TemplateDecimalDefaultValuesOutput) ToTemplateDecimalDefaultValuesOutput() TemplateDecimalDefaultValuesOutput {
	return o
}

func (o TemplateDecimalDefaultValuesOutput) ToTemplateDecimalDefaultValuesOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesOutput {
	return o
}

func (o TemplateDecimalDefaultValuesOutput) ToTemplateDecimalDefaultValuesPtrOutput() TemplateDecimalDefaultValuesPtrOutput {
	return o.ToTemplateDecimalDefaultValuesPtrOutputWithContext(context.Background())
}

func (o TemplateDecimalDefaultValuesOutput) ToTemplateDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDecimalDefaultValues) *TemplateDecimalDefaultValues {
		return &v
	}).(TemplateDecimalDefaultValuesPtrOutput)
}

func (o TemplateDecimalDefaultValuesOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v TemplateDecimalDefaultValues) *TemplateDynamicDefaultValue { return v.DynamicValue }).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateDecimalDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v TemplateDecimalDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type TemplateDecimalDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateDecimalDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalDefaultValues)(nil)).Elem()
}

func (o TemplateDecimalDefaultValuesPtrOutput) ToTemplateDecimalDefaultValuesPtrOutput() TemplateDecimalDefaultValuesPtrOutput {
	return o
}

func (o TemplateDecimalDefaultValuesPtrOutput) ToTemplateDecimalDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateDecimalDefaultValuesPtrOutput {
	return o
}

func (o TemplateDecimalDefaultValuesPtrOutput) Elem() TemplateDecimalDefaultValuesOutput {
	return o.ApplyT(func(v *TemplateDecimalDefaultValues) TemplateDecimalDefaultValues {
		if v != nil {
			return *v
		}
		var ret TemplateDecimalDefaultValues
		return ret
	}).(TemplateDecimalDefaultValuesOutput)
}

func (o TemplateDecimalDefaultValuesPtrOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *TemplateDecimalDefaultValues) *TemplateDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateDecimalDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *TemplateDecimalDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type TemplateDecimalParameterDeclaration struct {
	DefaultValues           *TemplateDecimalDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []TemplateMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                      `pulumi:"name"`
	ParameterValueType      TemplateParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *TemplateDecimalValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// TemplateDecimalParameterDeclarationInput is an input type that accepts TemplateDecimalParameterDeclarationArgs and TemplateDecimalParameterDeclarationOutput values.
// You can construct a concrete instance of `TemplateDecimalParameterDeclarationInput` via:
//
//	TemplateDecimalParameterDeclarationArgs{...}
type TemplateDecimalParameterDeclarationInput interface {
	pulumi.Input

	ToTemplateDecimalParameterDeclarationOutput() TemplateDecimalParameterDeclarationOutput
	ToTemplateDecimalParameterDeclarationOutputWithContext(context.Context) TemplateDecimalParameterDeclarationOutput
}

type TemplateDecimalParameterDeclarationArgs struct {
	DefaultValues           TemplateDecimalDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters TemplateMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                 `pulumi:"name"`
	ParameterValueType      TemplateParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          TemplateDecimalValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (TemplateDecimalParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalParameterDeclaration)(nil)).Elem()
}

func (i TemplateDecimalParameterDeclarationArgs) ToTemplateDecimalParameterDeclarationOutput() TemplateDecimalParameterDeclarationOutput {
	return i.ToTemplateDecimalParameterDeclarationOutputWithContext(context.Background())
}

func (i TemplateDecimalParameterDeclarationArgs) ToTemplateDecimalParameterDeclarationOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalParameterDeclarationOutput)
}

func (i TemplateDecimalParameterDeclarationArgs) ToTemplateDecimalParameterDeclarationPtrOutput() TemplateDecimalParameterDeclarationPtrOutput {
	return i.ToTemplateDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i TemplateDecimalParameterDeclarationArgs) ToTemplateDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalParameterDeclarationOutput).ToTemplateDecimalParameterDeclarationPtrOutputWithContext(ctx)
}

// TemplateDecimalParameterDeclarationPtrInput is an input type that accepts TemplateDecimalParameterDeclarationArgs, TemplateDecimalParameterDeclarationPtr and TemplateDecimalParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `TemplateDecimalParameterDeclarationPtrInput` via:
//
//	        TemplateDecimalParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type TemplateDecimalParameterDeclarationPtrInput interface {
	pulumi.Input

	ToTemplateDecimalParameterDeclarationPtrOutput() TemplateDecimalParameterDeclarationPtrOutput
	ToTemplateDecimalParameterDeclarationPtrOutputWithContext(context.Context) TemplateDecimalParameterDeclarationPtrOutput
}

type templateDecimalParameterDeclarationPtrType TemplateDecimalParameterDeclarationArgs

func TemplateDecimalParameterDeclarationPtr(v *TemplateDecimalParameterDeclarationArgs) TemplateDecimalParameterDeclarationPtrInput {
	return (*templateDecimalParameterDeclarationPtrType)(v)
}

func (*templateDecimalParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalParameterDeclaration)(nil)).Elem()
}

func (i *templateDecimalParameterDeclarationPtrType) ToTemplateDecimalParameterDeclarationPtrOutput() TemplateDecimalParameterDeclarationPtrOutput {
	return i.ToTemplateDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *templateDecimalParameterDeclarationPtrType) ToTemplateDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalParameterDeclarationPtrOutput)
}

type TemplateDecimalParameterDeclarationOutput struct{ *pulumi.OutputState }

func (TemplateDecimalParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalParameterDeclaration)(nil)).Elem()
}

func (o TemplateDecimalParameterDeclarationOutput) ToTemplateDecimalParameterDeclarationOutput() TemplateDecimalParameterDeclarationOutput {
	return o
}

func (o TemplateDecimalParameterDeclarationOutput) ToTemplateDecimalParameterDeclarationOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationOutput {
	return o
}

func (o TemplateDecimalParameterDeclarationOutput) ToTemplateDecimalParameterDeclarationPtrOutput() TemplateDecimalParameterDeclarationPtrOutput {
	return o.ToTemplateDecimalParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o TemplateDecimalParameterDeclarationOutput) ToTemplateDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDecimalParameterDeclaration) *TemplateDecimalParameterDeclaration {
		return &v
	}).(TemplateDecimalParameterDeclarationPtrOutput)
}

func (o TemplateDecimalParameterDeclarationOutput) DefaultValues() TemplateDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v TemplateDecimalParameterDeclaration) *TemplateDecimalDefaultValues { return v.DefaultValues }).(TemplateDecimalDefaultValuesPtrOutput)
}

func (o TemplateDecimalParameterDeclarationOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v TemplateDecimalParameterDeclaration) []TemplateMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateDecimalParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateDecimalParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateDecimalParameterDeclarationOutput) ParameterValueType() TemplateParameterValueTypeOutput {
	return o.ApplyT(func(v TemplateDecimalParameterDeclaration) TemplateParameterValueType { return v.ParameterValueType }).(TemplateParameterValueTypeOutput)
}

func (o TemplateDecimalParameterDeclarationOutput) ValueWhenUnset() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDecimalParameterDeclaration) *TemplateDecimalValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(TemplateDecimalValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDecimalParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDecimalParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalParameterDeclaration)(nil)).Elem()
}

func (o TemplateDecimalParameterDeclarationPtrOutput) ToTemplateDecimalParameterDeclarationPtrOutput() TemplateDecimalParameterDeclarationPtrOutput {
	return o
}

func (o TemplateDecimalParameterDeclarationPtrOutput) ToTemplateDecimalParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateDecimalParameterDeclarationPtrOutput {
	return o
}

func (o TemplateDecimalParameterDeclarationPtrOutput) Elem() TemplateDecimalParameterDeclarationOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) TemplateDecimalParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret TemplateDecimalParameterDeclaration
		return ret
	}).(TemplateDecimalParameterDeclarationOutput)
}

func (o TemplateDecimalParameterDeclarationPtrOutput) DefaultValues() TemplateDecimalDefaultValuesPtrOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) *TemplateDecimalDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(TemplateDecimalDefaultValuesPtrOutput)
}

func (o TemplateDecimalParameterDeclarationPtrOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) []TemplateMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateDecimalParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateDecimalParameterDeclarationPtrOutput) ParameterValueType() TemplateParameterValueTypePtrOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) *TemplateParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(TemplateParameterValueTypePtrOutput)
}

func (o TemplateDecimalParameterDeclarationPtrOutput) ValueWhenUnset() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDecimalParameterDeclaration) *TemplateDecimalValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(TemplateDecimalValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDecimalPlacesConfiguration struct {
	DecimalPlaces float64 `pulumi:"decimalPlaces"`
}

// TemplateDecimalPlacesConfigurationInput is an input type that accepts TemplateDecimalPlacesConfigurationArgs and TemplateDecimalPlacesConfigurationOutput values.
// You can construct a concrete instance of `TemplateDecimalPlacesConfigurationInput` via:
//
//	TemplateDecimalPlacesConfigurationArgs{...}
type TemplateDecimalPlacesConfigurationInput interface {
	pulumi.Input

	ToTemplateDecimalPlacesConfigurationOutput() TemplateDecimalPlacesConfigurationOutput
	ToTemplateDecimalPlacesConfigurationOutputWithContext(context.Context) TemplateDecimalPlacesConfigurationOutput
}

type TemplateDecimalPlacesConfigurationArgs struct {
	DecimalPlaces pulumi.Float64Input `pulumi:"decimalPlaces"`
}

func (TemplateDecimalPlacesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalPlacesConfiguration)(nil)).Elem()
}

func (i TemplateDecimalPlacesConfigurationArgs) ToTemplateDecimalPlacesConfigurationOutput() TemplateDecimalPlacesConfigurationOutput {
	return i.ToTemplateDecimalPlacesConfigurationOutputWithContext(context.Background())
}

func (i TemplateDecimalPlacesConfigurationArgs) ToTemplateDecimalPlacesConfigurationOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalPlacesConfigurationOutput)
}

func (i TemplateDecimalPlacesConfigurationArgs) ToTemplateDecimalPlacesConfigurationPtrOutput() TemplateDecimalPlacesConfigurationPtrOutput {
	return i.ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDecimalPlacesConfigurationArgs) ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalPlacesConfigurationOutput).ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(ctx)
}

// TemplateDecimalPlacesConfigurationPtrInput is an input type that accepts TemplateDecimalPlacesConfigurationArgs, TemplateDecimalPlacesConfigurationPtr and TemplateDecimalPlacesConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDecimalPlacesConfigurationPtrInput` via:
//
//	        TemplateDecimalPlacesConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDecimalPlacesConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDecimalPlacesConfigurationPtrOutput() TemplateDecimalPlacesConfigurationPtrOutput
	ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(context.Context) TemplateDecimalPlacesConfigurationPtrOutput
}

type templateDecimalPlacesConfigurationPtrType TemplateDecimalPlacesConfigurationArgs

func TemplateDecimalPlacesConfigurationPtr(v *TemplateDecimalPlacesConfigurationArgs) TemplateDecimalPlacesConfigurationPtrInput {
	return (*templateDecimalPlacesConfigurationPtrType)(v)
}

func (*templateDecimalPlacesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalPlacesConfiguration)(nil)).Elem()
}

func (i *templateDecimalPlacesConfigurationPtrType) ToTemplateDecimalPlacesConfigurationPtrOutput() TemplateDecimalPlacesConfigurationPtrOutput {
	return i.ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDecimalPlacesConfigurationPtrType) ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalPlacesConfigurationPtrOutput)
}

type TemplateDecimalPlacesConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDecimalPlacesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalPlacesConfiguration)(nil)).Elem()
}

func (o TemplateDecimalPlacesConfigurationOutput) ToTemplateDecimalPlacesConfigurationOutput() TemplateDecimalPlacesConfigurationOutput {
	return o
}

func (o TemplateDecimalPlacesConfigurationOutput) ToTemplateDecimalPlacesConfigurationOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationOutput {
	return o
}

func (o TemplateDecimalPlacesConfigurationOutput) ToTemplateDecimalPlacesConfigurationPtrOutput() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDecimalPlacesConfigurationOutput) ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDecimalPlacesConfiguration) *TemplateDecimalPlacesConfiguration {
		return &v
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplateDecimalPlacesConfigurationOutput) DecimalPlaces() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateDecimalPlacesConfiguration) float64 { return v.DecimalPlaces }).(pulumi.Float64Output)
}

type TemplateDecimalPlacesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDecimalPlacesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalPlacesConfiguration)(nil)).Elem()
}

func (o TemplateDecimalPlacesConfigurationPtrOutput) ToTemplateDecimalPlacesConfigurationPtrOutput() TemplateDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o TemplateDecimalPlacesConfigurationPtrOutput) ToTemplateDecimalPlacesConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalPlacesConfigurationPtrOutput {
	return o
}

func (o TemplateDecimalPlacesConfigurationPtrOutput) Elem() TemplateDecimalPlacesConfigurationOutput {
	return o.ApplyT(func(v *TemplateDecimalPlacesConfiguration) TemplateDecimalPlacesConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDecimalPlacesConfiguration
		return ret
	}).(TemplateDecimalPlacesConfigurationOutput)
}

func (o TemplateDecimalPlacesConfigurationPtrOutput) DecimalPlaces() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateDecimalPlacesConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.DecimalPlaces
	}).(pulumi.Float64PtrOutput)
}

type TemplateDecimalValueWhenUnsetConfiguration struct {
	CustomValue          *float64                      `pulumi:"customValue"`
	ValueWhenUnsetOption *TemplateValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// TemplateDecimalValueWhenUnsetConfigurationInput is an input type that accepts TemplateDecimalValueWhenUnsetConfigurationArgs and TemplateDecimalValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `TemplateDecimalValueWhenUnsetConfigurationInput` via:
//
//	TemplateDecimalValueWhenUnsetConfigurationArgs{...}
type TemplateDecimalValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToTemplateDecimalValueWhenUnsetConfigurationOutput() TemplateDecimalValueWhenUnsetConfigurationOutput
	ToTemplateDecimalValueWhenUnsetConfigurationOutputWithContext(context.Context) TemplateDecimalValueWhenUnsetConfigurationOutput
}

type TemplateDecimalValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput               `pulumi:"customValue"`
	ValueWhenUnsetOption TemplateValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (TemplateDecimalValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i TemplateDecimalValueWhenUnsetConfigurationArgs) ToTemplateDecimalValueWhenUnsetConfigurationOutput() TemplateDecimalValueWhenUnsetConfigurationOutput {
	return i.ToTemplateDecimalValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i TemplateDecimalValueWhenUnsetConfigurationArgs) ToTemplateDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalValueWhenUnsetConfigurationOutput)
}

func (i TemplateDecimalValueWhenUnsetConfigurationArgs) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutput() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDecimalValueWhenUnsetConfigurationArgs) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalValueWhenUnsetConfigurationOutput).ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// TemplateDecimalValueWhenUnsetConfigurationPtrInput is an input type that accepts TemplateDecimalValueWhenUnsetConfigurationArgs, TemplateDecimalValueWhenUnsetConfigurationPtr and TemplateDecimalValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDecimalValueWhenUnsetConfigurationPtrInput` via:
//
//	        TemplateDecimalValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDecimalValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDecimalValueWhenUnsetConfigurationPtrOutput() TemplateDecimalValueWhenUnsetConfigurationPtrOutput
	ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) TemplateDecimalValueWhenUnsetConfigurationPtrOutput
}

type templateDecimalValueWhenUnsetConfigurationPtrType TemplateDecimalValueWhenUnsetConfigurationArgs

func TemplateDecimalValueWhenUnsetConfigurationPtr(v *TemplateDecimalValueWhenUnsetConfigurationArgs) TemplateDecimalValueWhenUnsetConfigurationPtrInput {
	return (*templateDecimalValueWhenUnsetConfigurationPtrType)(v)
}

func (*templateDecimalValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *templateDecimalValueWhenUnsetConfigurationPtrType) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutput() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDecimalValueWhenUnsetConfigurationPtrType) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDecimalValueWhenUnsetConfigurationPtrOutput)
}

type TemplateDecimalValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDecimalValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) ToTemplateDecimalValueWhenUnsetConfigurationOutput() TemplateDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) ToTemplateDecimalValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutput() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDecimalValueWhenUnsetConfiguration) *TemplateDecimalValueWhenUnsetConfiguration {
		return &v
	}).(TemplateDecimalValueWhenUnsetConfigurationPtrOutput)
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateDecimalValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o TemplateDecimalValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v TemplateDecimalValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateDecimalValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDecimalValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDecimalValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateDecimalValueWhenUnsetConfigurationPtrOutput) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutput() TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateDecimalValueWhenUnsetConfigurationPtrOutput) ToTemplateDecimalValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDecimalValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateDecimalValueWhenUnsetConfigurationPtrOutput) Elem() TemplateDecimalValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *TemplateDecimalValueWhenUnsetConfiguration) TemplateDecimalValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDecimalValueWhenUnsetConfiguration
		return ret
	}).(TemplateDecimalValueWhenUnsetConfigurationOutput)
}

func (o TemplateDecimalValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateDecimalValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateDecimalValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *TemplateDecimalValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateDefaultFreeFormLayoutConfiguration struct {
	CanvasSizeOptions TemplateFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// TemplateDefaultFreeFormLayoutConfigurationInput is an input type that accepts TemplateDefaultFreeFormLayoutConfigurationArgs and TemplateDefaultFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultFreeFormLayoutConfigurationInput` via:
//
//	TemplateDefaultFreeFormLayoutConfigurationArgs{...}
type TemplateDefaultFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultFreeFormLayoutConfigurationOutput() TemplateDefaultFreeFormLayoutConfigurationOutput
	ToTemplateDefaultFreeFormLayoutConfigurationOutputWithContext(context.Context) TemplateDefaultFreeFormLayoutConfigurationOutput
}

type TemplateDefaultFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions TemplateFreeFormLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (TemplateDefaultFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i TemplateDefaultFreeFormLayoutConfigurationArgs) ToTemplateDefaultFreeFormLayoutConfigurationOutput() TemplateDefaultFreeFormLayoutConfigurationOutput {
	return i.ToTemplateDefaultFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultFreeFormLayoutConfigurationArgs) ToTemplateDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultFreeFormLayoutConfigurationOutput)
}

func (i TemplateDefaultFreeFormLayoutConfigurationArgs) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutput() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultFreeFormLayoutConfigurationArgs) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultFreeFormLayoutConfigurationOutput).ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultFreeFormLayoutConfigurationPtrInput is an input type that accepts TemplateDefaultFreeFormLayoutConfigurationArgs, TemplateDefaultFreeFormLayoutConfigurationPtr and TemplateDefaultFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultFreeFormLayoutConfigurationPtrInput` via:
//
//	        TemplateDefaultFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultFreeFormLayoutConfigurationPtrOutput() TemplateDefaultFreeFormLayoutConfigurationPtrOutput
	ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) TemplateDefaultFreeFormLayoutConfigurationPtrOutput
}

type templateDefaultFreeFormLayoutConfigurationPtrType TemplateDefaultFreeFormLayoutConfigurationArgs

func TemplateDefaultFreeFormLayoutConfigurationPtr(v *TemplateDefaultFreeFormLayoutConfigurationArgs) TemplateDefaultFreeFormLayoutConfigurationPtrInput {
	return (*templateDefaultFreeFormLayoutConfigurationPtrType)(v)
}

func (*templateDefaultFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *templateDefaultFreeFormLayoutConfigurationPtrType) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutput() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultFreeFormLayoutConfigurationPtrType) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultFreeFormLayoutConfigurationPtrOutput)
}

type TemplateDefaultFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultFreeFormLayoutConfigurationOutput) ToTemplateDefaultFreeFormLayoutConfigurationOutput() TemplateDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultFreeFormLayoutConfigurationOutput) ToTemplateDefaultFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultFreeFormLayoutConfigurationOutput) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutput() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultFreeFormLayoutConfigurationOutput) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultFreeFormLayoutConfiguration) *TemplateDefaultFreeFormLayoutConfiguration {
		return &v
	}).(TemplateDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultFreeFormLayoutConfigurationOutput) CanvasSizeOptions() TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v TemplateDefaultFreeFormLayoutConfiguration) TemplateFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateFreeFormLayoutCanvasSizeOptionsOutput)
}

type TemplateDefaultFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultFreeFormLayoutConfigurationPtrOutput) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutput() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultFreeFormLayoutConfigurationPtrOutput) ToTemplateDefaultFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultFreeFormLayoutConfigurationPtrOutput) Elem() TemplateDefaultFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultFreeFormLayoutConfiguration) TemplateDefaultFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultFreeFormLayoutConfiguration
		return ret
	}).(TemplateDefaultFreeFormLayoutConfigurationOutput)
}

func (o TemplateDefaultFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultFreeFormLayoutConfiguration) *TemplateFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateDefaultGridLayoutConfiguration struct {
	CanvasSizeOptions TemplateGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// TemplateDefaultGridLayoutConfigurationInput is an input type that accepts TemplateDefaultGridLayoutConfigurationArgs and TemplateDefaultGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultGridLayoutConfigurationInput` via:
//
//	TemplateDefaultGridLayoutConfigurationArgs{...}
type TemplateDefaultGridLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultGridLayoutConfigurationOutput() TemplateDefaultGridLayoutConfigurationOutput
	ToTemplateDefaultGridLayoutConfigurationOutputWithContext(context.Context) TemplateDefaultGridLayoutConfigurationOutput
}

type TemplateDefaultGridLayoutConfigurationArgs struct {
	CanvasSizeOptions TemplateGridLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (TemplateDefaultGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i TemplateDefaultGridLayoutConfigurationArgs) ToTemplateDefaultGridLayoutConfigurationOutput() TemplateDefaultGridLayoutConfigurationOutput {
	return i.ToTemplateDefaultGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultGridLayoutConfigurationArgs) ToTemplateDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultGridLayoutConfigurationOutput)
}

func (i TemplateDefaultGridLayoutConfigurationArgs) ToTemplateDefaultGridLayoutConfigurationPtrOutput() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultGridLayoutConfigurationArgs) ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultGridLayoutConfigurationOutput).ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultGridLayoutConfigurationPtrInput is an input type that accepts TemplateDefaultGridLayoutConfigurationArgs, TemplateDefaultGridLayoutConfigurationPtr and TemplateDefaultGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultGridLayoutConfigurationPtrInput` via:
//
//	        TemplateDefaultGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultGridLayoutConfigurationPtrOutput() TemplateDefaultGridLayoutConfigurationPtrOutput
	ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(context.Context) TemplateDefaultGridLayoutConfigurationPtrOutput
}

type templateDefaultGridLayoutConfigurationPtrType TemplateDefaultGridLayoutConfigurationArgs

func TemplateDefaultGridLayoutConfigurationPtr(v *TemplateDefaultGridLayoutConfigurationArgs) TemplateDefaultGridLayoutConfigurationPtrInput {
	return (*templateDefaultGridLayoutConfigurationPtrType)(v)
}

func (*templateDefaultGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (i *templateDefaultGridLayoutConfigurationPtrType) ToTemplateDefaultGridLayoutConfigurationPtrOutput() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultGridLayoutConfigurationPtrType) ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultGridLayoutConfigurationPtrOutput)
}

type TemplateDefaultGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultGridLayoutConfigurationOutput) ToTemplateDefaultGridLayoutConfigurationOutput() TemplateDefaultGridLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultGridLayoutConfigurationOutput) ToTemplateDefaultGridLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultGridLayoutConfigurationOutput) ToTemplateDefaultGridLayoutConfigurationPtrOutput() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o.ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultGridLayoutConfigurationOutput) ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultGridLayoutConfiguration) *TemplateDefaultGridLayoutConfiguration {
		return &v
	}).(TemplateDefaultGridLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultGridLayoutConfigurationOutput) CanvasSizeOptions() TemplateGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v TemplateDefaultGridLayoutConfiguration) TemplateGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateGridLayoutCanvasSizeOptionsOutput)
}

type TemplateDefaultGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultGridLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultGridLayoutConfigurationPtrOutput) ToTemplateDefaultGridLayoutConfigurationPtrOutput() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultGridLayoutConfigurationPtrOutput) ToTemplateDefaultGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultGridLayoutConfigurationPtrOutput) Elem() TemplateDefaultGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultGridLayoutConfiguration) TemplateDefaultGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultGridLayoutConfiguration
		return ret
	}).(TemplateDefaultGridLayoutConfigurationOutput)
}

func (o TemplateDefaultGridLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultGridLayoutConfiguration) *TemplateGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(TemplateGridLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateDefaultInteractiveLayoutConfiguration struct {
	FreeForm *TemplateDefaultFreeFormLayoutConfiguration `pulumi:"freeForm"`
	Grid     *TemplateDefaultGridLayoutConfiguration     `pulumi:"grid"`
}

// TemplateDefaultInteractiveLayoutConfigurationInput is an input type that accepts TemplateDefaultInteractiveLayoutConfigurationArgs and TemplateDefaultInteractiveLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultInteractiveLayoutConfigurationInput` via:
//
//	TemplateDefaultInteractiveLayoutConfigurationArgs{...}
type TemplateDefaultInteractiveLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultInteractiveLayoutConfigurationOutput() TemplateDefaultInteractiveLayoutConfigurationOutput
	ToTemplateDefaultInteractiveLayoutConfigurationOutputWithContext(context.Context) TemplateDefaultInteractiveLayoutConfigurationOutput
}

type TemplateDefaultInteractiveLayoutConfigurationArgs struct {
	FreeForm TemplateDefaultFreeFormLayoutConfigurationPtrInput `pulumi:"freeForm"`
	Grid     TemplateDefaultGridLayoutConfigurationPtrInput     `pulumi:"grid"`
}

func (TemplateDefaultInteractiveLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i TemplateDefaultInteractiveLayoutConfigurationArgs) ToTemplateDefaultInteractiveLayoutConfigurationOutput() TemplateDefaultInteractiveLayoutConfigurationOutput {
	return i.ToTemplateDefaultInteractiveLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultInteractiveLayoutConfigurationArgs) ToTemplateDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultInteractiveLayoutConfigurationOutput)
}

func (i TemplateDefaultInteractiveLayoutConfigurationArgs) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutput() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultInteractiveLayoutConfigurationArgs) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultInteractiveLayoutConfigurationOutput).ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultInteractiveLayoutConfigurationPtrInput is an input type that accepts TemplateDefaultInteractiveLayoutConfigurationArgs, TemplateDefaultInteractiveLayoutConfigurationPtr and TemplateDefaultInteractiveLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultInteractiveLayoutConfigurationPtrInput` via:
//
//	        TemplateDefaultInteractiveLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultInteractiveLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultInteractiveLayoutConfigurationPtrOutput() TemplateDefaultInteractiveLayoutConfigurationPtrOutput
	ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Context) TemplateDefaultInteractiveLayoutConfigurationPtrOutput
}

type templateDefaultInteractiveLayoutConfigurationPtrType TemplateDefaultInteractiveLayoutConfigurationArgs

func TemplateDefaultInteractiveLayoutConfigurationPtr(v *TemplateDefaultInteractiveLayoutConfigurationArgs) TemplateDefaultInteractiveLayoutConfigurationPtrInput {
	return (*templateDefaultInteractiveLayoutConfigurationPtrType)(v)
}

func (*templateDefaultInteractiveLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (i *templateDefaultInteractiveLayoutConfigurationPtrType) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutput() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultInteractiveLayoutConfigurationPtrType) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultInteractiveLayoutConfigurationPtrOutput)
}

type TemplateDefaultInteractiveLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultInteractiveLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) ToTemplateDefaultInteractiveLayoutConfigurationOutput() TemplateDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) ToTemplateDefaultInteractiveLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutput() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultInteractiveLayoutConfiguration) *TemplateDefaultInteractiveLayoutConfiguration {
		return &v
	}).(TemplateDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) FreeForm() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDefaultInteractiveLayoutConfiguration) *TemplateDefaultFreeFormLayoutConfiguration {
		return v.FreeForm
	}).(TemplateDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultInteractiveLayoutConfigurationOutput) Grid() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDefaultInteractiveLayoutConfiguration) *TemplateDefaultGridLayoutConfiguration {
		return v.Grid
	}).(TemplateDefaultGridLayoutConfigurationPtrOutput)
}

type TemplateDefaultInteractiveLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultInteractiveLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultInteractiveLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultInteractiveLayoutConfigurationPtrOutput) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutput() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultInteractiveLayoutConfigurationPtrOutput) ToTemplateDefaultInteractiveLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultInteractiveLayoutConfigurationPtrOutput) Elem() TemplateDefaultInteractiveLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultInteractiveLayoutConfiguration) TemplateDefaultInteractiveLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultInteractiveLayoutConfiguration
		return ret
	}).(TemplateDefaultInteractiveLayoutConfigurationOutput)
}

func (o TemplateDefaultInteractiveLayoutConfigurationPtrOutput) FreeForm() TemplateDefaultFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultInteractiveLayoutConfiguration) *TemplateDefaultFreeFormLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.FreeForm
	}).(TemplateDefaultFreeFormLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultInteractiveLayoutConfigurationPtrOutput) Grid() TemplateDefaultGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultInteractiveLayoutConfiguration) *TemplateDefaultGridLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.Grid
	}).(TemplateDefaultGridLayoutConfigurationPtrOutput)
}

type TemplateDefaultNewSheetConfiguration struct {
	InteractiveLayoutConfiguration *TemplateDefaultInteractiveLayoutConfiguration `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   *TemplateDefaultPaginatedLayoutConfiguration   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               *TemplateSheetContentType                      `pulumi:"sheetContentType"`
}

// TemplateDefaultNewSheetConfigurationInput is an input type that accepts TemplateDefaultNewSheetConfigurationArgs and TemplateDefaultNewSheetConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultNewSheetConfigurationInput` via:
//
//	TemplateDefaultNewSheetConfigurationArgs{...}
type TemplateDefaultNewSheetConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultNewSheetConfigurationOutput() TemplateDefaultNewSheetConfigurationOutput
	ToTemplateDefaultNewSheetConfigurationOutputWithContext(context.Context) TemplateDefaultNewSheetConfigurationOutput
}

type TemplateDefaultNewSheetConfigurationArgs struct {
	InteractiveLayoutConfiguration TemplateDefaultInteractiveLayoutConfigurationPtrInput `pulumi:"interactiveLayoutConfiguration"`
	PaginatedLayoutConfiguration   TemplateDefaultPaginatedLayoutConfigurationPtrInput   `pulumi:"paginatedLayoutConfiguration"`
	SheetContentType               TemplateSheetContentTypePtrInput                      `pulumi:"sheetContentType"`
}

func (TemplateDefaultNewSheetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i TemplateDefaultNewSheetConfigurationArgs) ToTemplateDefaultNewSheetConfigurationOutput() TemplateDefaultNewSheetConfigurationOutput {
	return i.ToTemplateDefaultNewSheetConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultNewSheetConfigurationArgs) ToTemplateDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultNewSheetConfigurationOutput)
}

func (i TemplateDefaultNewSheetConfigurationArgs) ToTemplateDefaultNewSheetConfigurationPtrOutput() TemplateDefaultNewSheetConfigurationPtrOutput {
	return i.ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultNewSheetConfigurationArgs) ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultNewSheetConfigurationOutput).ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultNewSheetConfigurationPtrInput is an input type that accepts TemplateDefaultNewSheetConfigurationArgs, TemplateDefaultNewSheetConfigurationPtr and TemplateDefaultNewSheetConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultNewSheetConfigurationPtrInput` via:
//
//	        TemplateDefaultNewSheetConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultNewSheetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultNewSheetConfigurationPtrOutput() TemplateDefaultNewSheetConfigurationPtrOutput
	ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(context.Context) TemplateDefaultNewSheetConfigurationPtrOutput
}

type templateDefaultNewSheetConfigurationPtrType TemplateDefaultNewSheetConfigurationArgs

func TemplateDefaultNewSheetConfigurationPtr(v *TemplateDefaultNewSheetConfigurationArgs) TemplateDefaultNewSheetConfigurationPtrInput {
	return (*templateDefaultNewSheetConfigurationPtrType)(v)
}

func (*templateDefaultNewSheetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultNewSheetConfiguration)(nil)).Elem()
}

func (i *templateDefaultNewSheetConfigurationPtrType) ToTemplateDefaultNewSheetConfigurationPtrOutput() TemplateDefaultNewSheetConfigurationPtrOutput {
	return i.ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultNewSheetConfigurationPtrType) ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultNewSheetConfigurationPtrOutput)
}

type TemplateDefaultNewSheetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultNewSheetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o TemplateDefaultNewSheetConfigurationOutput) ToTemplateDefaultNewSheetConfigurationOutput() TemplateDefaultNewSheetConfigurationOutput {
	return o
}

func (o TemplateDefaultNewSheetConfigurationOutput) ToTemplateDefaultNewSheetConfigurationOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationOutput {
	return o
}

func (o TemplateDefaultNewSheetConfigurationOutput) ToTemplateDefaultNewSheetConfigurationPtrOutput() TemplateDefaultNewSheetConfigurationPtrOutput {
	return o.ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultNewSheetConfigurationOutput) ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultNewSheetConfiguration) *TemplateDefaultNewSheetConfiguration {
		return &v
	}).(TemplateDefaultNewSheetConfigurationPtrOutput)
}

func (o TemplateDefaultNewSheetConfigurationOutput) InteractiveLayoutConfiguration() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDefaultNewSheetConfiguration) *TemplateDefaultInteractiveLayoutConfiguration {
		return v.InteractiveLayoutConfiguration
	}).(TemplateDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultNewSheetConfigurationOutput) PaginatedLayoutConfiguration() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDefaultNewSheetConfiguration) *TemplateDefaultPaginatedLayoutConfiguration {
		return v.PaginatedLayoutConfiguration
	}).(TemplateDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultNewSheetConfigurationOutput) SheetContentType() TemplateSheetContentTypePtrOutput {
	return o.ApplyT(func(v TemplateDefaultNewSheetConfiguration) *TemplateSheetContentType { return v.SheetContentType }).(TemplateSheetContentTypePtrOutput)
}

type TemplateDefaultNewSheetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultNewSheetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultNewSheetConfiguration)(nil)).Elem()
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) ToTemplateDefaultNewSheetConfigurationPtrOutput() TemplateDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) ToTemplateDefaultNewSheetConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultNewSheetConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) Elem() TemplateDefaultNewSheetConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultNewSheetConfiguration) TemplateDefaultNewSheetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultNewSheetConfiguration
		return ret
	}).(TemplateDefaultNewSheetConfigurationOutput)
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) InteractiveLayoutConfiguration() TemplateDefaultInteractiveLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultNewSheetConfiguration) *TemplateDefaultInteractiveLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.InteractiveLayoutConfiguration
	}).(TemplateDefaultInteractiveLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) PaginatedLayoutConfiguration() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultNewSheetConfiguration) *TemplateDefaultPaginatedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginatedLayoutConfiguration
	}).(TemplateDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultNewSheetConfigurationPtrOutput) SheetContentType() TemplateSheetContentTypePtrOutput {
	return o.ApplyT(func(v *TemplateDefaultNewSheetConfiguration) *TemplateSheetContentType {
		if v == nil {
			return nil
		}
		return v.SheetContentType
	}).(TemplateSheetContentTypePtrOutput)
}

type TemplateDefaultPaginatedLayoutConfiguration struct {
	SectionBased *TemplateDefaultSectionBasedLayoutConfiguration `pulumi:"sectionBased"`
}

// TemplateDefaultPaginatedLayoutConfigurationInput is an input type that accepts TemplateDefaultPaginatedLayoutConfigurationArgs and TemplateDefaultPaginatedLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultPaginatedLayoutConfigurationInput` via:
//
//	TemplateDefaultPaginatedLayoutConfigurationArgs{...}
type TemplateDefaultPaginatedLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultPaginatedLayoutConfigurationOutput() TemplateDefaultPaginatedLayoutConfigurationOutput
	ToTemplateDefaultPaginatedLayoutConfigurationOutputWithContext(context.Context) TemplateDefaultPaginatedLayoutConfigurationOutput
}

type TemplateDefaultPaginatedLayoutConfigurationArgs struct {
	SectionBased TemplateDefaultSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBased"`
}

func (TemplateDefaultPaginatedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i TemplateDefaultPaginatedLayoutConfigurationArgs) ToTemplateDefaultPaginatedLayoutConfigurationOutput() TemplateDefaultPaginatedLayoutConfigurationOutput {
	return i.ToTemplateDefaultPaginatedLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultPaginatedLayoutConfigurationArgs) ToTemplateDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultPaginatedLayoutConfigurationOutput)
}

func (i TemplateDefaultPaginatedLayoutConfigurationArgs) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutput() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultPaginatedLayoutConfigurationArgs) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultPaginatedLayoutConfigurationOutput).ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultPaginatedLayoutConfigurationPtrInput is an input type that accepts TemplateDefaultPaginatedLayoutConfigurationArgs, TemplateDefaultPaginatedLayoutConfigurationPtr and TemplateDefaultPaginatedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultPaginatedLayoutConfigurationPtrInput` via:
//
//	        TemplateDefaultPaginatedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultPaginatedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultPaginatedLayoutConfigurationPtrOutput() TemplateDefaultPaginatedLayoutConfigurationPtrOutput
	ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Context) TemplateDefaultPaginatedLayoutConfigurationPtrOutput
}

type templateDefaultPaginatedLayoutConfigurationPtrType TemplateDefaultPaginatedLayoutConfigurationArgs

func TemplateDefaultPaginatedLayoutConfigurationPtr(v *TemplateDefaultPaginatedLayoutConfigurationArgs) TemplateDefaultPaginatedLayoutConfigurationPtrInput {
	return (*templateDefaultPaginatedLayoutConfigurationPtrType)(v)
}

func (*templateDefaultPaginatedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (i *templateDefaultPaginatedLayoutConfigurationPtrType) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutput() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultPaginatedLayoutConfigurationPtrType) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultPaginatedLayoutConfigurationPtrOutput)
}

type TemplateDefaultPaginatedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultPaginatedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultPaginatedLayoutConfigurationOutput) ToTemplateDefaultPaginatedLayoutConfigurationOutput() TemplateDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultPaginatedLayoutConfigurationOutput) ToTemplateDefaultPaginatedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultPaginatedLayoutConfigurationOutput) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutput() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultPaginatedLayoutConfigurationOutput) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultPaginatedLayoutConfiguration) *TemplateDefaultPaginatedLayoutConfiguration {
		return &v
	}).(TemplateDefaultPaginatedLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultPaginatedLayoutConfigurationOutput) SectionBased() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDefaultPaginatedLayoutConfiguration) *TemplateDefaultSectionBasedLayoutConfiguration {
		return v.SectionBased
	}).(TemplateDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type TemplateDefaultPaginatedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultPaginatedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultPaginatedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultPaginatedLayoutConfigurationPtrOutput) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutput() TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultPaginatedLayoutConfigurationPtrOutput) ToTemplateDefaultPaginatedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultPaginatedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultPaginatedLayoutConfigurationPtrOutput) Elem() TemplateDefaultPaginatedLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultPaginatedLayoutConfiguration) TemplateDefaultPaginatedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultPaginatedLayoutConfiguration
		return ret
	}).(TemplateDefaultPaginatedLayoutConfigurationOutput)
}

func (o TemplateDefaultPaginatedLayoutConfigurationPtrOutput) SectionBased() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultPaginatedLayoutConfiguration) *TemplateDefaultSectionBasedLayoutConfiguration {
		if v == nil {
			return nil
		}
		return v.SectionBased
	}).(TemplateDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type TemplateDefaultSectionBasedLayoutConfiguration struct {
	CanvasSizeOptions TemplateSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
}

// TemplateDefaultSectionBasedLayoutConfigurationInput is an input type that accepts TemplateDefaultSectionBasedLayoutConfigurationArgs and TemplateDefaultSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateDefaultSectionBasedLayoutConfigurationInput` via:
//
//	TemplateDefaultSectionBasedLayoutConfigurationArgs{...}
type TemplateDefaultSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateDefaultSectionBasedLayoutConfigurationOutput() TemplateDefaultSectionBasedLayoutConfigurationOutput
	ToTemplateDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Context) TemplateDefaultSectionBasedLayoutConfigurationOutput
}

type TemplateDefaultSectionBasedLayoutConfigurationArgs struct {
	CanvasSizeOptions TemplateSectionBasedLayoutCanvasSizeOptionsInput `pulumi:"canvasSizeOptions"`
}

func (TemplateDefaultSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i TemplateDefaultSectionBasedLayoutConfigurationArgs) ToTemplateDefaultSectionBasedLayoutConfigurationOutput() TemplateDefaultSectionBasedLayoutConfigurationOutput {
	return i.ToTemplateDefaultSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateDefaultSectionBasedLayoutConfigurationArgs) ToTemplateDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultSectionBasedLayoutConfigurationOutput)
}

func (i TemplateDefaultSectionBasedLayoutConfigurationArgs) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutput() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateDefaultSectionBasedLayoutConfigurationArgs) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultSectionBasedLayoutConfigurationOutput).ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateDefaultSectionBasedLayoutConfigurationPtrInput is an input type that accepts TemplateDefaultSectionBasedLayoutConfigurationArgs, TemplateDefaultSectionBasedLayoutConfigurationPtr and TemplateDefaultSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateDefaultSectionBasedLayoutConfigurationPtrInput` via:
//
//	        TemplateDefaultSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateDefaultSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutput() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput
	ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) TemplateDefaultSectionBasedLayoutConfigurationPtrOutput
}

type templateDefaultSectionBasedLayoutConfigurationPtrType TemplateDefaultSectionBasedLayoutConfigurationArgs

func TemplateDefaultSectionBasedLayoutConfigurationPtr(v *TemplateDefaultSectionBasedLayoutConfigurationArgs) TemplateDefaultSectionBasedLayoutConfigurationPtrInput {
	return (*templateDefaultSectionBasedLayoutConfigurationPtrType)(v)
}

func (*templateDefaultSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *templateDefaultSectionBasedLayoutConfigurationPtrType) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutput() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return i.ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateDefaultSectionBasedLayoutConfigurationPtrType) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefaultSectionBasedLayoutConfigurationPtrOutput)
}

type TemplateDefaultSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDefaultSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultSectionBasedLayoutConfigurationOutput) ToTemplateDefaultSectionBasedLayoutConfigurationOutput() TemplateDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultSectionBasedLayoutConfigurationOutput) ToTemplateDefaultSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationOutput {
	return o
}

func (o TemplateDefaultSectionBasedLayoutConfigurationOutput) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutput() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateDefaultSectionBasedLayoutConfigurationOutput) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDefaultSectionBasedLayoutConfiguration) *TemplateDefaultSectionBasedLayoutConfiguration {
		return &v
	}).(TemplateDefaultSectionBasedLayoutConfigurationPtrOutput)
}

func (o TemplateDefaultSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v TemplateDefaultSectionBasedLayoutConfiguration) TemplateSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsOutput)
}

type TemplateDefaultSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateDefaultSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDefaultSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateDefaultSectionBasedLayoutConfigurationPtrOutput) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutput() TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultSectionBasedLayoutConfigurationPtrOutput) ToTemplateDefaultSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateDefaultSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateDefaultSectionBasedLayoutConfigurationPtrOutput) Elem() TemplateDefaultSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateDefaultSectionBasedLayoutConfiguration) TemplateDefaultSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateDefaultSectionBasedLayoutConfiguration
		return ret
	}).(TemplateDefaultSectionBasedLayoutConfigurationOutput)
}

func (o TemplateDefaultSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDefaultSectionBasedLayoutConfiguration) *TemplateSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateDestinationParameterValueConfiguration struct {
	CustomValuesConfiguration *TemplateCustomValuesConfiguration `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     *TemplateSelectAllValueOptions     `pulumi:"selectAllValueOptions"`
	SourceColumn              *TemplateColumnIdentifier          `pulumi:"sourceColumn"`
	SourceField               *string                            `pulumi:"sourceField"`
	SourceParameterName       *string                            `pulumi:"sourceParameterName"`
}

// TemplateDestinationParameterValueConfigurationInput is an input type that accepts TemplateDestinationParameterValueConfigurationArgs and TemplateDestinationParameterValueConfigurationOutput values.
// You can construct a concrete instance of `TemplateDestinationParameterValueConfigurationInput` via:
//
//	TemplateDestinationParameterValueConfigurationArgs{...}
type TemplateDestinationParameterValueConfigurationInput interface {
	pulumi.Input

	ToTemplateDestinationParameterValueConfigurationOutput() TemplateDestinationParameterValueConfigurationOutput
	ToTemplateDestinationParameterValueConfigurationOutputWithContext(context.Context) TemplateDestinationParameterValueConfigurationOutput
}

type TemplateDestinationParameterValueConfigurationArgs struct {
	CustomValuesConfiguration TemplateCustomValuesConfigurationPtrInput `pulumi:"customValuesConfiguration"`
	SelectAllValueOptions     TemplateSelectAllValueOptionsPtrInput     `pulumi:"selectAllValueOptions"`
	SourceColumn              TemplateColumnIdentifierPtrInput          `pulumi:"sourceColumn"`
	SourceField               pulumi.StringPtrInput                     `pulumi:"sourceField"`
	SourceParameterName       pulumi.StringPtrInput                     `pulumi:"sourceParameterName"`
}

func (TemplateDestinationParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDestinationParameterValueConfiguration)(nil)).Elem()
}

func (i TemplateDestinationParameterValueConfigurationArgs) ToTemplateDestinationParameterValueConfigurationOutput() TemplateDestinationParameterValueConfigurationOutput {
	return i.ToTemplateDestinationParameterValueConfigurationOutputWithContext(context.Background())
}

func (i TemplateDestinationParameterValueConfigurationArgs) ToTemplateDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) TemplateDestinationParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDestinationParameterValueConfigurationOutput)
}

type TemplateDestinationParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateDestinationParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDestinationParameterValueConfiguration)(nil)).Elem()
}

func (o TemplateDestinationParameterValueConfigurationOutput) ToTemplateDestinationParameterValueConfigurationOutput() TemplateDestinationParameterValueConfigurationOutput {
	return o
}

func (o TemplateDestinationParameterValueConfigurationOutput) ToTemplateDestinationParameterValueConfigurationOutputWithContext(ctx context.Context) TemplateDestinationParameterValueConfigurationOutput {
	return o
}

func (o TemplateDestinationParameterValueConfigurationOutput) CustomValuesConfiguration() TemplateCustomValuesConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateDestinationParameterValueConfiguration) *TemplateCustomValuesConfiguration {
		return v.CustomValuesConfiguration
	}).(TemplateCustomValuesConfigurationPtrOutput)
}

func (o TemplateDestinationParameterValueConfigurationOutput) SelectAllValueOptions() TemplateSelectAllValueOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDestinationParameterValueConfiguration) *TemplateSelectAllValueOptions {
		return v.SelectAllValueOptions
	}).(TemplateSelectAllValueOptionsPtrOutput)
}

func (o TemplateDestinationParameterValueConfigurationOutput) SourceColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateDestinationParameterValueConfiguration) *TemplateColumnIdentifier {
		return v.SourceColumn
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDestinationParameterValueConfigurationOutput) SourceField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDestinationParameterValueConfiguration) *string { return v.SourceField }).(pulumi.StringPtrOutput)
}

func (o TemplateDestinationParameterValueConfigurationOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateDestinationParameterValueConfiguration) *string { return v.SourceParameterName }).(pulumi.StringPtrOutput)
}

type TemplateDimensionField struct {
	CategoricalDimensionField *TemplateCategoricalDimensionField `pulumi:"categoricalDimensionField"`
	DateDimensionField        *TemplateDateDimensionField        `pulumi:"dateDimensionField"`
	NumericalDimensionField   *TemplateNumericalDimensionField   `pulumi:"numericalDimensionField"`
}

// TemplateDimensionFieldInput is an input type that accepts TemplateDimensionFieldArgs and TemplateDimensionFieldOutput values.
// You can construct a concrete instance of `TemplateDimensionFieldInput` via:
//
//	TemplateDimensionFieldArgs{...}
type TemplateDimensionFieldInput interface {
	pulumi.Input

	ToTemplateDimensionFieldOutput() TemplateDimensionFieldOutput
	ToTemplateDimensionFieldOutputWithContext(context.Context) TemplateDimensionFieldOutput
}

type TemplateDimensionFieldArgs struct {
	CategoricalDimensionField TemplateCategoricalDimensionFieldPtrInput `pulumi:"categoricalDimensionField"`
	DateDimensionField        TemplateDateDimensionFieldPtrInput        `pulumi:"dateDimensionField"`
	NumericalDimensionField   TemplateNumericalDimensionFieldPtrInput   `pulumi:"numericalDimensionField"`
}

func (TemplateDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDimensionField)(nil)).Elem()
}

func (i TemplateDimensionFieldArgs) ToTemplateDimensionFieldOutput() TemplateDimensionFieldOutput {
	return i.ToTemplateDimensionFieldOutputWithContext(context.Background())
}

func (i TemplateDimensionFieldArgs) ToTemplateDimensionFieldOutputWithContext(ctx context.Context) TemplateDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDimensionFieldOutput)
}

func (i TemplateDimensionFieldArgs) ToTemplateDimensionFieldPtrOutput() TemplateDimensionFieldPtrOutput {
	return i.ToTemplateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i TemplateDimensionFieldArgs) ToTemplateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDimensionFieldOutput).ToTemplateDimensionFieldPtrOutputWithContext(ctx)
}

// TemplateDimensionFieldPtrInput is an input type that accepts TemplateDimensionFieldArgs, TemplateDimensionFieldPtr and TemplateDimensionFieldPtrOutput values.
// You can construct a concrete instance of `TemplateDimensionFieldPtrInput` via:
//
//	        TemplateDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateDimensionFieldPtrInput interface {
	pulumi.Input

	ToTemplateDimensionFieldPtrOutput() TemplateDimensionFieldPtrOutput
	ToTemplateDimensionFieldPtrOutputWithContext(context.Context) TemplateDimensionFieldPtrOutput
}

type templateDimensionFieldPtrType TemplateDimensionFieldArgs

func TemplateDimensionFieldPtr(v *TemplateDimensionFieldArgs) TemplateDimensionFieldPtrInput {
	return (*templateDimensionFieldPtrType)(v)
}

func (*templateDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDimensionField)(nil)).Elem()
}

func (i *templateDimensionFieldPtrType) ToTemplateDimensionFieldPtrOutput() TemplateDimensionFieldPtrOutput {
	return i.ToTemplateDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *templateDimensionFieldPtrType) ToTemplateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDimensionFieldPtrOutput)
}

// TemplateDimensionFieldArrayInput is an input type that accepts TemplateDimensionFieldArray and TemplateDimensionFieldArrayOutput values.
// You can construct a concrete instance of `TemplateDimensionFieldArrayInput` via:
//
//	TemplateDimensionFieldArray{ TemplateDimensionFieldArgs{...} }
type TemplateDimensionFieldArrayInput interface {
	pulumi.Input

	ToTemplateDimensionFieldArrayOutput() TemplateDimensionFieldArrayOutput
	ToTemplateDimensionFieldArrayOutputWithContext(context.Context) TemplateDimensionFieldArrayOutput
}

type TemplateDimensionFieldArray []TemplateDimensionFieldInput

func (TemplateDimensionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDimensionField)(nil)).Elem()
}

func (i TemplateDimensionFieldArray) ToTemplateDimensionFieldArrayOutput() TemplateDimensionFieldArrayOutput {
	return i.ToTemplateDimensionFieldArrayOutputWithContext(context.Background())
}

func (i TemplateDimensionFieldArray) ToTemplateDimensionFieldArrayOutputWithContext(ctx context.Context) TemplateDimensionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDimensionFieldArrayOutput)
}

type TemplateDimensionFieldOutput struct{ *pulumi.OutputState }

func (TemplateDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDimensionField)(nil)).Elem()
}

func (o TemplateDimensionFieldOutput) ToTemplateDimensionFieldOutput() TemplateDimensionFieldOutput {
	return o
}

func (o TemplateDimensionFieldOutput) ToTemplateDimensionFieldOutputWithContext(ctx context.Context) TemplateDimensionFieldOutput {
	return o
}

func (o TemplateDimensionFieldOutput) ToTemplateDimensionFieldPtrOutput() TemplateDimensionFieldPtrOutput {
	return o.ToTemplateDimensionFieldPtrOutputWithContext(context.Background())
}

func (o TemplateDimensionFieldOutput) ToTemplateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDimensionField) *TemplateDimensionField {
		return &v
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateDimensionFieldOutput) CategoricalDimensionField() TemplateCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateDimensionField) *TemplateCategoricalDimensionField { return v.CategoricalDimensionField }).(TemplateCategoricalDimensionFieldPtrOutput)
}

func (o TemplateDimensionFieldOutput) DateDimensionField() TemplateDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateDimensionField) *TemplateDateDimensionField { return v.DateDimensionField }).(TemplateDateDimensionFieldPtrOutput)
}

func (o TemplateDimensionFieldOutput) NumericalDimensionField() TemplateNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateDimensionField) *TemplateNumericalDimensionField { return v.NumericalDimensionField }).(TemplateNumericalDimensionFieldPtrOutput)
}

type TemplateDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDimensionField)(nil)).Elem()
}

func (o TemplateDimensionFieldPtrOutput) ToTemplateDimensionFieldPtrOutput() TemplateDimensionFieldPtrOutput {
	return o
}

func (o TemplateDimensionFieldPtrOutput) ToTemplateDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateDimensionFieldPtrOutput {
	return o
}

func (o TemplateDimensionFieldPtrOutput) Elem() TemplateDimensionFieldOutput {
	return o.ApplyT(func(v *TemplateDimensionField) TemplateDimensionField {
		if v != nil {
			return *v
		}
		var ret TemplateDimensionField
		return ret
	}).(TemplateDimensionFieldOutput)
}

func (o TemplateDimensionFieldPtrOutput) CategoricalDimensionField() TemplateCategoricalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateDimensionField) *TemplateCategoricalDimensionField {
		if v == nil {
			return nil
		}
		return v.CategoricalDimensionField
	}).(TemplateCategoricalDimensionFieldPtrOutput)
}

func (o TemplateDimensionFieldPtrOutput) DateDimensionField() TemplateDateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateDimensionField) *TemplateDateDimensionField {
		if v == nil {
			return nil
		}
		return v.DateDimensionField
	}).(TemplateDateDimensionFieldPtrOutput)
}

func (o TemplateDimensionFieldPtrOutput) NumericalDimensionField() TemplateNumericalDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateDimensionField) *TemplateNumericalDimensionField {
		if v == nil {
			return nil
		}
		return v.NumericalDimensionField
	}).(TemplateNumericalDimensionFieldPtrOutput)
}

type TemplateDimensionFieldArrayOutput struct{ *pulumi.OutputState }

func (TemplateDimensionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDimensionField)(nil)).Elem()
}

func (o TemplateDimensionFieldArrayOutput) ToTemplateDimensionFieldArrayOutput() TemplateDimensionFieldArrayOutput {
	return o
}

func (o TemplateDimensionFieldArrayOutput) ToTemplateDimensionFieldArrayOutputWithContext(ctx context.Context) TemplateDimensionFieldArrayOutput {
	return o
}

func (o TemplateDimensionFieldArrayOutput) Index(i pulumi.IntInput) TemplateDimensionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDimensionField {
		return vs[0].([]TemplateDimensionField)[vs[1].(int)]
	}).(TemplateDimensionFieldOutput)
}

type TemplateDonutCenterOptions struct {
	LabelVisibility *TemplateVisibility `pulumi:"labelVisibility"`
}

// TemplateDonutCenterOptionsInput is an input type that accepts TemplateDonutCenterOptionsArgs and TemplateDonutCenterOptionsOutput values.
// You can construct a concrete instance of `TemplateDonutCenterOptionsInput` via:
//
//	TemplateDonutCenterOptionsArgs{...}
type TemplateDonutCenterOptionsInput interface {
	pulumi.Input

	ToTemplateDonutCenterOptionsOutput() TemplateDonutCenterOptionsOutput
	ToTemplateDonutCenterOptionsOutputWithContext(context.Context) TemplateDonutCenterOptionsOutput
}

type TemplateDonutCenterOptionsArgs struct {
	LabelVisibility TemplateVisibilityPtrInput `pulumi:"labelVisibility"`
}

func (TemplateDonutCenterOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDonutCenterOptions)(nil)).Elem()
}

func (i TemplateDonutCenterOptionsArgs) ToTemplateDonutCenterOptionsOutput() TemplateDonutCenterOptionsOutput {
	return i.ToTemplateDonutCenterOptionsOutputWithContext(context.Background())
}

func (i TemplateDonutCenterOptionsArgs) ToTemplateDonutCenterOptionsOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutCenterOptionsOutput)
}

func (i TemplateDonutCenterOptionsArgs) ToTemplateDonutCenterOptionsPtrOutput() TemplateDonutCenterOptionsPtrOutput {
	return i.ToTemplateDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDonutCenterOptionsArgs) ToTemplateDonutCenterOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutCenterOptionsOutput).ToTemplateDonutCenterOptionsPtrOutputWithContext(ctx)
}

// TemplateDonutCenterOptionsPtrInput is an input type that accepts TemplateDonutCenterOptionsArgs, TemplateDonutCenterOptionsPtr and TemplateDonutCenterOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDonutCenterOptionsPtrInput` via:
//
//	        TemplateDonutCenterOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDonutCenterOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDonutCenterOptionsPtrOutput() TemplateDonutCenterOptionsPtrOutput
	ToTemplateDonutCenterOptionsPtrOutputWithContext(context.Context) TemplateDonutCenterOptionsPtrOutput
}

type templateDonutCenterOptionsPtrType TemplateDonutCenterOptionsArgs

func TemplateDonutCenterOptionsPtr(v *TemplateDonutCenterOptionsArgs) TemplateDonutCenterOptionsPtrInput {
	return (*templateDonutCenterOptionsPtrType)(v)
}

func (*templateDonutCenterOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDonutCenterOptions)(nil)).Elem()
}

func (i *templateDonutCenterOptionsPtrType) ToTemplateDonutCenterOptionsPtrOutput() TemplateDonutCenterOptionsPtrOutput {
	return i.ToTemplateDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDonutCenterOptionsPtrType) ToTemplateDonutCenterOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutCenterOptionsPtrOutput)
}

type TemplateDonutCenterOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDonutCenterOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDonutCenterOptions)(nil)).Elem()
}

func (o TemplateDonutCenterOptionsOutput) ToTemplateDonutCenterOptionsOutput() TemplateDonutCenterOptionsOutput {
	return o
}

func (o TemplateDonutCenterOptionsOutput) ToTemplateDonutCenterOptionsOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsOutput {
	return o
}

func (o TemplateDonutCenterOptionsOutput) ToTemplateDonutCenterOptionsPtrOutput() TemplateDonutCenterOptionsPtrOutput {
	return o.ToTemplateDonutCenterOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDonutCenterOptionsOutput) ToTemplateDonutCenterOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDonutCenterOptions) *TemplateDonutCenterOptions {
		return &v
	}).(TemplateDonutCenterOptionsPtrOutput)
}

func (o TemplateDonutCenterOptionsOutput) LabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateDonutCenterOptions) *TemplateVisibility { return v.LabelVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateDonutCenterOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDonutCenterOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDonutCenterOptions)(nil)).Elem()
}

func (o TemplateDonutCenterOptionsPtrOutput) ToTemplateDonutCenterOptionsPtrOutput() TemplateDonutCenterOptionsPtrOutput {
	return o
}

func (o TemplateDonutCenterOptionsPtrOutput) ToTemplateDonutCenterOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutCenterOptionsPtrOutput {
	return o
}

func (o TemplateDonutCenterOptionsPtrOutput) Elem() TemplateDonutCenterOptionsOutput {
	return o.ApplyT(func(v *TemplateDonutCenterOptions) TemplateDonutCenterOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDonutCenterOptions
		return ret
	}).(TemplateDonutCenterOptionsOutput)
}

func (o TemplateDonutCenterOptionsPtrOutput) LabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateDonutCenterOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.LabelVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateDonutOptions struct {
	ArcOptions         *TemplateArcOptions         `pulumi:"arcOptions"`
	DonutCenterOptions *TemplateDonutCenterOptions `pulumi:"donutCenterOptions"`
}

// TemplateDonutOptionsInput is an input type that accepts TemplateDonutOptionsArgs and TemplateDonutOptionsOutput values.
// You can construct a concrete instance of `TemplateDonutOptionsInput` via:
//
//	TemplateDonutOptionsArgs{...}
type TemplateDonutOptionsInput interface {
	pulumi.Input

	ToTemplateDonutOptionsOutput() TemplateDonutOptionsOutput
	ToTemplateDonutOptionsOutputWithContext(context.Context) TemplateDonutOptionsOutput
}

type TemplateDonutOptionsArgs struct {
	ArcOptions         TemplateArcOptionsPtrInput         `pulumi:"arcOptions"`
	DonutCenterOptions TemplateDonutCenterOptionsPtrInput `pulumi:"donutCenterOptions"`
}

func (TemplateDonutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDonutOptions)(nil)).Elem()
}

func (i TemplateDonutOptionsArgs) ToTemplateDonutOptionsOutput() TemplateDonutOptionsOutput {
	return i.ToTemplateDonutOptionsOutputWithContext(context.Background())
}

func (i TemplateDonutOptionsArgs) ToTemplateDonutOptionsOutputWithContext(ctx context.Context) TemplateDonutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutOptionsOutput)
}

func (i TemplateDonutOptionsArgs) ToTemplateDonutOptionsPtrOutput() TemplateDonutOptionsPtrOutput {
	return i.ToTemplateDonutOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDonutOptionsArgs) ToTemplateDonutOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutOptionsOutput).ToTemplateDonutOptionsPtrOutputWithContext(ctx)
}

// TemplateDonutOptionsPtrInput is an input type that accepts TemplateDonutOptionsArgs, TemplateDonutOptionsPtr and TemplateDonutOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDonutOptionsPtrInput` via:
//
//	        TemplateDonutOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDonutOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDonutOptionsPtrOutput() TemplateDonutOptionsPtrOutput
	ToTemplateDonutOptionsPtrOutputWithContext(context.Context) TemplateDonutOptionsPtrOutput
}

type templateDonutOptionsPtrType TemplateDonutOptionsArgs

func TemplateDonutOptionsPtr(v *TemplateDonutOptionsArgs) TemplateDonutOptionsPtrInput {
	return (*templateDonutOptionsPtrType)(v)
}

func (*templateDonutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDonutOptions)(nil)).Elem()
}

func (i *templateDonutOptionsPtrType) ToTemplateDonutOptionsPtrOutput() TemplateDonutOptionsPtrOutput {
	return i.ToTemplateDonutOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDonutOptionsPtrType) ToTemplateDonutOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDonutOptionsPtrOutput)
}

type TemplateDonutOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDonutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDonutOptions)(nil)).Elem()
}

func (o TemplateDonutOptionsOutput) ToTemplateDonutOptionsOutput() TemplateDonutOptionsOutput {
	return o
}

func (o TemplateDonutOptionsOutput) ToTemplateDonutOptionsOutputWithContext(ctx context.Context) TemplateDonutOptionsOutput {
	return o
}

func (o TemplateDonutOptionsOutput) ToTemplateDonutOptionsPtrOutput() TemplateDonutOptionsPtrOutput {
	return o.ToTemplateDonutOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDonutOptionsOutput) ToTemplateDonutOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDonutOptions) *TemplateDonutOptions {
		return &v
	}).(TemplateDonutOptionsPtrOutput)
}

func (o TemplateDonutOptionsOutput) ArcOptions() TemplateArcOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDonutOptions) *TemplateArcOptions { return v.ArcOptions }).(TemplateArcOptionsPtrOutput)
}

func (o TemplateDonutOptionsOutput) DonutCenterOptions() TemplateDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDonutOptions) *TemplateDonutCenterOptions { return v.DonutCenterOptions }).(TemplateDonutCenterOptionsPtrOutput)
}

type TemplateDonutOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDonutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDonutOptions)(nil)).Elem()
}

func (o TemplateDonutOptionsPtrOutput) ToTemplateDonutOptionsPtrOutput() TemplateDonutOptionsPtrOutput {
	return o
}

func (o TemplateDonutOptionsPtrOutput) ToTemplateDonutOptionsPtrOutputWithContext(ctx context.Context) TemplateDonutOptionsPtrOutput {
	return o
}

func (o TemplateDonutOptionsPtrOutput) Elem() TemplateDonutOptionsOutput {
	return o.ApplyT(func(v *TemplateDonutOptions) TemplateDonutOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDonutOptions
		return ret
	}).(TemplateDonutOptionsOutput)
}

func (o TemplateDonutOptionsPtrOutput) ArcOptions() TemplateArcOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDonutOptions) *TemplateArcOptions {
		if v == nil {
			return nil
		}
		return v.ArcOptions
	}).(TemplateArcOptionsPtrOutput)
}

func (o TemplateDonutOptionsPtrOutput) DonutCenterOptions() TemplateDonutCenterOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDonutOptions) *TemplateDonutCenterOptions {
		if v == nil {
			return nil
		}
		return v.DonutCenterOptions
	}).(TemplateDonutCenterOptionsPtrOutput)
}

type TemplateDrillDownFilter struct {
	CategoryFilter        *TemplateCategoryDrillDownFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *TemplateNumericEqualityDrillDownFilter `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       *TemplateTimeRangeDrillDownFilter       `pulumi:"timeRangeFilter"`
}

// TemplateDrillDownFilterInput is an input type that accepts TemplateDrillDownFilterArgs and TemplateDrillDownFilterOutput values.
// You can construct a concrete instance of `TemplateDrillDownFilterInput` via:
//
//	TemplateDrillDownFilterArgs{...}
type TemplateDrillDownFilterInput interface {
	pulumi.Input

	ToTemplateDrillDownFilterOutput() TemplateDrillDownFilterOutput
	ToTemplateDrillDownFilterOutputWithContext(context.Context) TemplateDrillDownFilterOutput
}

type TemplateDrillDownFilterArgs struct {
	CategoryFilter        TemplateCategoryDrillDownFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter TemplateNumericEqualityDrillDownFilterPtrInput `pulumi:"numericEqualityFilter"`
	TimeRangeFilter       TemplateTimeRangeDrillDownFilterPtrInput       `pulumi:"timeRangeFilter"`
}

func (TemplateDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDrillDownFilter)(nil)).Elem()
}

func (i TemplateDrillDownFilterArgs) ToTemplateDrillDownFilterOutput() TemplateDrillDownFilterOutput {
	return i.ToTemplateDrillDownFilterOutputWithContext(context.Background())
}

func (i TemplateDrillDownFilterArgs) ToTemplateDrillDownFilterOutputWithContext(ctx context.Context) TemplateDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDrillDownFilterOutput)
}

// TemplateDrillDownFilterArrayInput is an input type that accepts TemplateDrillDownFilterArray and TemplateDrillDownFilterArrayOutput values.
// You can construct a concrete instance of `TemplateDrillDownFilterArrayInput` via:
//
//	TemplateDrillDownFilterArray{ TemplateDrillDownFilterArgs{...} }
type TemplateDrillDownFilterArrayInput interface {
	pulumi.Input

	ToTemplateDrillDownFilterArrayOutput() TemplateDrillDownFilterArrayOutput
	ToTemplateDrillDownFilterArrayOutputWithContext(context.Context) TemplateDrillDownFilterArrayOutput
}

type TemplateDrillDownFilterArray []TemplateDrillDownFilterInput

func (TemplateDrillDownFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDrillDownFilter)(nil)).Elem()
}

func (i TemplateDrillDownFilterArray) ToTemplateDrillDownFilterArrayOutput() TemplateDrillDownFilterArrayOutput {
	return i.ToTemplateDrillDownFilterArrayOutputWithContext(context.Background())
}

func (i TemplateDrillDownFilterArray) ToTemplateDrillDownFilterArrayOutputWithContext(ctx context.Context) TemplateDrillDownFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDrillDownFilterArrayOutput)
}

type TemplateDrillDownFilterOutput struct{ *pulumi.OutputState }

func (TemplateDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDrillDownFilter)(nil)).Elem()
}

func (o TemplateDrillDownFilterOutput) ToTemplateDrillDownFilterOutput() TemplateDrillDownFilterOutput {
	return o
}

func (o TemplateDrillDownFilterOutput) ToTemplateDrillDownFilterOutputWithContext(ctx context.Context) TemplateDrillDownFilterOutput {
	return o
}

func (o TemplateDrillDownFilterOutput) CategoryFilter() TemplateCategoryDrillDownFilterPtrOutput {
	return o.ApplyT(func(v TemplateDrillDownFilter) *TemplateCategoryDrillDownFilter { return v.CategoryFilter }).(TemplateCategoryDrillDownFilterPtrOutput)
}

func (o TemplateDrillDownFilterOutput) NumericEqualityFilter() TemplateNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyT(func(v TemplateDrillDownFilter) *TemplateNumericEqualityDrillDownFilter {
		return v.NumericEqualityFilter
	}).(TemplateNumericEqualityDrillDownFilterPtrOutput)
}

func (o TemplateDrillDownFilterOutput) TimeRangeFilter() TemplateTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyT(func(v TemplateDrillDownFilter) *TemplateTimeRangeDrillDownFilter { return v.TimeRangeFilter }).(TemplateTimeRangeDrillDownFilterPtrOutput)
}

type TemplateDrillDownFilterArrayOutput struct{ *pulumi.OutputState }

func (TemplateDrillDownFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateDrillDownFilter)(nil)).Elem()
}

func (o TemplateDrillDownFilterArrayOutput) ToTemplateDrillDownFilterArrayOutput() TemplateDrillDownFilterArrayOutput {
	return o
}

func (o TemplateDrillDownFilterArrayOutput) ToTemplateDrillDownFilterArrayOutputWithContext(ctx context.Context) TemplateDrillDownFilterArrayOutput {
	return o
}

func (o TemplateDrillDownFilterArrayOutput) Index(i pulumi.IntInput) TemplateDrillDownFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateDrillDownFilter {
		return vs[0].([]TemplateDrillDownFilter)[vs[1].(int)]
	}).(TemplateDrillDownFilterOutput)
}

type TemplateDropDownControlDisplayOptions struct {
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	SelectAllOptions     *TemplateListControlSelectAllOptions      `pulumi:"selectAllOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateDropDownControlDisplayOptionsInput is an input type that accepts TemplateDropDownControlDisplayOptionsArgs and TemplateDropDownControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateDropDownControlDisplayOptionsInput` via:
//
//	TemplateDropDownControlDisplayOptionsArgs{...}
type TemplateDropDownControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateDropDownControlDisplayOptionsOutput() TemplateDropDownControlDisplayOptionsOutput
	ToTemplateDropDownControlDisplayOptionsOutputWithContext(context.Context) TemplateDropDownControlDisplayOptionsOutput
}

type TemplateDropDownControlDisplayOptionsArgs struct {
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	SelectAllOptions     TemplateListControlSelectAllOptionsPtrInput      `pulumi:"selectAllOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateDropDownControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDropDownControlDisplayOptions)(nil)).Elem()
}

func (i TemplateDropDownControlDisplayOptionsArgs) ToTemplateDropDownControlDisplayOptionsOutput() TemplateDropDownControlDisplayOptionsOutput {
	return i.ToTemplateDropDownControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateDropDownControlDisplayOptionsArgs) ToTemplateDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDropDownControlDisplayOptionsOutput)
}

func (i TemplateDropDownControlDisplayOptionsArgs) ToTemplateDropDownControlDisplayOptionsPtrOutput() TemplateDropDownControlDisplayOptionsPtrOutput {
	return i.ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateDropDownControlDisplayOptionsArgs) ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDropDownControlDisplayOptionsOutput).ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateDropDownControlDisplayOptionsPtrInput is an input type that accepts TemplateDropDownControlDisplayOptionsArgs, TemplateDropDownControlDisplayOptionsPtr and TemplateDropDownControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateDropDownControlDisplayOptionsPtrInput` via:
//
//	        TemplateDropDownControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateDropDownControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateDropDownControlDisplayOptionsPtrOutput() TemplateDropDownControlDisplayOptionsPtrOutput
	ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateDropDownControlDisplayOptionsPtrOutput
}

type templateDropDownControlDisplayOptionsPtrType TemplateDropDownControlDisplayOptionsArgs

func TemplateDropDownControlDisplayOptionsPtr(v *TemplateDropDownControlDisplayOptionsArgs) TemplateDropDownControlDisplayOptionsPtrInput {
	return (*templateDropDownControlDisplayOptionsPtrType)(v)
}

func (*templateDropDownControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDropDownControlDisplayOptions)(nil)).Elem()
}

func (i *templateDropDownControlDisplayOptionsPtrType) ToTemplateDropDownControlDisplayOptionsPtrOutput() TemplateDropDownControlDisplayOptionsPtrOutput {
	return i.ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateDropDownControlDisplayOptionsPtrType) ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

type TemplateDropDownControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateDropDownControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDropDownControlDisplayOptions)(nil)).Elem()
}

func (o TemplateDropDownControlDisplayOptionsOutput) ToTemplateDropDownControlDisplayOptionsOutput() TemplateDropDownControlDisplayOptionsOutput {
	return o
}

func (o TemplateDropDownControlDisplayOptionsOutput) ToTemplateDropDownControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsOutput {
	return o
}

func (o TemplateDropDownControlDisplayOptionsOutput) ToTemplateDropDownControlDisplayOptionsPtrOutput() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateDropDownControlDisplayOptionsOutput) ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDropDownControlDisplayOptions) *TemplateDropDownControlDisplayOptions {
		return &v
	}).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

func (o TemplateDropDownControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDropDownControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateDropDownControlDisplayOptionsOutput) SelectAllOptions() TemplateListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDropDownControlDisplayOptions) *TemplateListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateListControlSelectAllOptionsPtrOutput)
}

func (o TemplateDropDownControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateDropDownControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateDropDownControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateDropDownControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDropDownControlDisplayOptions)(nil)).Elem()
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) ToTemplateDropDownControlDisplayOptionsPtrOutput() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) ToTemplateDropDownControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateDropDownControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) Elem() TemplateDropDownControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateDropDownControlDisplayOptions) TemplateDropDownControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateDropDownControlDisplayOptions
		return ret
	}).(TemplateDropDownControlDisplayOptionsOutput)
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDropDownControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) SelectAllOptions() TemplateListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDropDownControlDisplayOptions) *TemplateListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateListControlSelectAllOptionsPtrOutput)
}

func (o TemplateDropDownControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateDropDownControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateDynamicDefaultValue struct {
	DefaultValueColumn TemplateColumnIdentifier  `pulumi:"defaultValueColumn"`
	GroupNameColumn    *TemplateColumnIdentifier `pulumi:"groupNameColumn"`
	UserNameColumn     *TemplateColumnIdentifier `pulumi:"userNameColumn"`
}

// TemplateDynamicDefaultValueInput is an input type that accepts TemplateDynamicDefaultValueArgs and TemplateDynamicDefaultValueOutput values.
// You can construct a concrete instance of `TemplateDynamicDefaultValueInput` via:
//
//	TemplateDynamicDefaultValueArgs{...}
type TemplateDynamicDefaultValueInput interface {
	pulumi.Input

	ToTemplateDynamicDefaultValueOutput() TemplateDynamicDefaultValueOutput
	ToTemplateDynamicDefaultValueOutputWithContext(context.Context) TemplateDynamicDefaultValueOutput
}

type TemplateDynamicDefaultValueArgs struct {
	DefaultValueColumn TemplateColumnIdentifierInput    `pulumi:"defaultValueColumn"`
	GroupNameColumn    TemplateColumnIdentifierPtrInput `pulumi:"groupNameColumn"`
	UserNameColumn     TemplateColumnIdentifierPtrInput `pulumi:"userNameColumn"`
}

func (TemplateDynamicDefaultValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDynamicDefaultValue)(nil)).Elem()
}

func (i TemplateDynamicDefaultValueArgs) ToTemplateDynamicDefaultValueOutput() TemplateDynamicDefaultValueOutput {
	return i.ToTemplateDynamicDefaultValueOutputWithContext(context.Background())
}

func (i TemplateDynamicDefaultValueArgs) ToTemplateDynamicDefaultValueOutputWithContext(ctx context.Context) TemplateDynamicDefaultValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDynamicDefaultValueOutput)
}

func (i TemplateDynamicDefaultValueArgs) ToTemplateDynamicDefaultValuePtrOutput() TemplateDynamicDefaultValuePtrOutput {
	return i.ToTemplateDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i TemplateDynamicDefaultValueArgs) ToTemplateDynamicDefaultValuePtrOutputWithContext(ctx context.Context) TemplateDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDynamicDefaultValueOutput).ToTemplateDynamicDefaultValuePtrOutputWithContext(ctx)
}

// TemplateDynamicDefaultValuePtrInput is an input type that accepts TemplateDynamicDefaultValueArgs, TemplateDynamicDefaultValuePtr and TemplateDynamicDefaultValuePtrOutput values.
// You can construct a concrete instance of `TemplateDynamicDefaultValuePtrInput` via:
//
//	        TemplateDynamicDefaultValueArgs{...}
//
//	or:
//
//	        nil
type TemplateDynamicDefaultValuePtrInput interface {
	pulumi.Input

	ToTemplateDynamicDefaultValuePtrOutput() TemplateDynamicDefaultValuePtrOutput
	ToTemplateDynamicDefaultValuePtrOutputWithContext(context.Context) TemplateDynamicDefaultValuePtrOutput
}

type templateDynamicDefaultValuePtrType TemplateDynamicDefaultValueArgs

func TemplateDynamicDefaultValuePtr(v *TemplateDynamicDefaultValueArgs) TemplateDynamicDefaultValuePtrInput {
	return (*templateDynamicDefaultValuePtrType)(v)
}

func (*templateDynamicDefaultValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDynamicDefaultValue)(nil)).Elem()
}

func (i *templateDynamicDefaultValuePtrType) ToTemplateDynamicDefaultValuePtrOutput() TemplateDynamicDefaultValuePtrOutput {
	return i.ToTemplateDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (i *templateDynamicDefaultValuePtrType) ToTemplateDynamicDefaultValuePtrOutputWithContext(ctx context.Context) TemplateDynamicDefaultValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDynamicDefaultValuePtrOutput)
}

type TemplateDynamicDefaultValueOutput struct{ *pulumi.OutputState }

func (TemplateDynamicDefaultValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDynamicDefaultValue)(nil)).Elem()
}

func (o TemplateDynamicDefaultValueOutput) ToTemplateDynamicDefaultValueOutput() TemplateDynamicDefaultValueOutput {
	return o
}

func (o TemplateDynamicDefaultValueOutput) ToTemplateDynamicDefaultValueOutputWithContext(ctx context.Context) TemplateDynamicDefaultValueOutput {
	return o
}

func (o TemplateDynamicDefaultValueOutput) ToTemplateDynamicDefaultValuePtrOutput() TemplateDynamicDefaultValuePtrOutput {
	return o.ToTemplateDynamicDefaultValuePtrOutputWithContext(context.Background())
}

func (o TemplateDynamicDefaultValueOutput) ToTemplateDynamicDefaultValuePtrOutputWithContext(ctx context.Context) TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateDynamicDefaultValue) *TemplateDynamicDefaultValue {
		return &v
	}).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateDynamicDefaultValueOutput) DefaultValueColumn() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateDynamicDefaultValue) TemplateColumnIdentifier { return v.DefaultValueColumn }).(TemplateColumnIdentifierOutput)
}

func (o TemplateDynamicDefaultValueOutput) GroupNameColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateDynamicDefaultValue) *TemplateColumnIdentifier { return v.GroupNameColumn }).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDynamicDefaultValueOutput) UserNameColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateDynamicDefaultValue) *TemplateColumnIdentifier { return v.UserNameColumn }).(TemplateColumnIdentifierPtrOutput)
}

type TemplateDynamicDefaultValuePtrOutput struct{ *pulumi.OutputState }

func (TemplateDynamicDefaultValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateDynamicDefaultValue)(nil)).Elem()
}

func (o TemplateDynamicDefaultValuePtrOutput) ToTemplateDynamicDefaultValuePtrOutput() TemplateDynamicDefaultValuePtrOutput {
	return o
}

func (o TemplateDynamicDefaultValuePtrOutput) ToTemplateDynamicDefaultValuePtrOutputWithContext(ctx context.Context) TemplateDynamicDefaultValuePtrOutput {
	return o
}

func (o TemplateDynamicDefaultValuePtrOutput) Elem() TemplateDynamicDefaultValueOutput {
	return o.ApplyT(func(v *TemplateDynamicDefaultValue) TemplateDynamicDefaultValue {
		if v != nil {
			return *v
		}
		var ret TemplateDynamicDefaultValue
		return ret
	}).(TemplateDynamicDefaultValueOutput)
}

func (o TemplateDynamicDefaultValuePtrOutput) DefaultValueColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateDynamicDefaultValue) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.DefaultValueColumn
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDynamicDefaultValuePtrOutput) GroupNameColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateDynamicDefaultValue) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.GroupNameColumn
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateDynamicDefaultValuePtrOutput) UserNameColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateDynamicDefaultValue) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.UserNameColumn
	}).(TemplateColumnIdentifierPtrOutput)
}

type TemplateEmptyVisual struct {
	Actions           []TemplateVisualCustomAction `pulumi:"actions"`
	DataSetIdentifier string                       `pulumi:"dataSetIdentifier"`
	VisualId          string                       `pulumi:"visualId"`
}

// TemplateEmptyVisualInput is an input type that accepts TemplateEmptyVisualArgs and TemplateEmptyVisualOutput values.
// You can construct a concrete instance of `TemplateEmptyVisualInput` via:
//
//	TemplateEmptyVisualArgs{...}
type TemplateEmptyVisualInput interface {
	pulumi.Input

	ToTemplateEmptyVisualOutput() TemplateEmptyVisualOutput
	ToTemplateEmptyVisualOutputWithContext(context.Context) TemplateEmptyVisualOutput
}

type TemplateEmptyVisualArgs struct {
	Actions           TemplateVisualCustomActionArrayInput `pulumi:"actions"`
	DataSetIdentifier pulumi.StringInput                   `pulumi:"dataSetIdentifier"`
	VisualId          pulumi.StringInput                   `pulumi:"visualId"`
}

func (TemplateEmptyVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEmptyVisual)(nil)).Elem()
}

func (i TemplateEmptyVisualArgs) ToTemplateEmptyVisualOutput() TemplateEmptyVisualOutput {
	return i.ToTemplateEmptyVisualOutputWithContext(context.Background())
}

func (i TemplateEmptyVisualArgs) ToTemplateEmptyVisualOutputWithContext(ctx context.Context) TemplateEmptyVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEmptyVisualOutput)
}

func (i TemplateEmptyVisualArgs) ToTemplateEmptyVisualPtrOutput() TemplateEmptyVisualPtrOutput {
	return i.ToTemplateEmptyVisualPtrOutputWithContext(context.Background())
}

func (i TemplateEmptyVisualArgs) ToTemplateEmptyVisualPtrOutputWithContext(ctx context.Context) TemplateEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEmptyVisualOutput).ToTemplateEmptyVisualPtrOutputWithContext(ctx)
}

// TemplateEmptyVisualPtrInput is an input type that accepts TemplateEmptyVisualArgs, TemplateEmptyVisualPtr and TemplateEmptyVisualPtrOutput values.
// You can construct a concrete instance of `TemplateEmptyVisualPtrInput` via:
//
//	        TemplateEmptyVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateEmptyVisualPtrInput interface {
	pulumi.Input

	ToTemplateEmptyVisualPtrOutput() TemplateEmptyVisualPtrOutput
	ToTemplateEmptyVisualPtrOutputWithContext(context.Context) TemplateEmptyVisualPtrOutput
}

type templateEmptyVisualPtrType TemplateEmptyVisualArgs

func TemplateEmptyVisualPtr(v *TemplateEmptyVisualArgs) TemplateEmptyVisualPtrInput {
	return (*templateEmptyVisualPtrType)(v)
}

func (*templateEmptyVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateEmptyVisual)(nil)).Elem()
}

func (i *templateEmptyVisualPtrType) ToTemplateEmptyVisualPtrOutput() TemplateEmptyVisualPtrOutput {
	return i.ToTemplateEmptyVisualPtrOutputWithContext(context.Background())
}

func (i *templateEmptyVisualPtrType) ToTemplateEmptyVisualPtrOutputWithContext(ctx context.Context) TemplateEmptyVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEmptyVisualPtrOutput)
}

type TemplateEmptyVisualOutput struct{ *pulumi.OutputState }

func (TemplateEmptyVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEmptyVisual)(nil)).Elem()
}

func (o TemplateEmptyVisualOutput) ToTemplateEmptyVisualOutput() TemplateEmptyVisualOutput {
	return o
}

func (o TemplateEmptyVisualOutput) ToTemplateEmptyVisualOutputWithContext(ctx context.Context) TemplateEmptyVisualOutput {
	return o
}

func (o TemplateEmptyVisualOutput) ToTemplateEmptyVisualPtrOutput() TemplateEmptyVisualPtrOutput {
	return o.ToTemplateEmptyVisualPtrOutputWithContext(context.Background())
}

func (o TemplateEmptyVisualOutput) ToTemplateEmptyVisualPtrOutputWithContext(ctx context.Context) TemplateEmptyVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateEmptyVisual) *TemplateEmptyVisual {
		return &v
	}).(TemplateEmptyVisualPtrOutput)
}

func (o TemplateEmptyVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateEmptyVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateEmptyVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateEmptyVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateEmptyVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateEmptyVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateEmptyVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateEmptyVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateEmptyVisual)(nil)).Elem()
}

func (o TemplateEmptyVisualPtrOutput) ToTemplateEmptyVisualPtrOutput() TemplateEmptyVisualPtrOutput {
	return o
}

func (o TemplateEmptyVisualPtrOutput) ToTemplateEmptyVisualPtrOutputWithContext(ctx context.Context) TemplateEmptyVisualPtrOutput {
	return o
}

func (o TemplateEmptyVisualPtrOutput) Elem() TemplateEmptyVisualOutput {
	return o.ApplyT(func(v *TemplateEmptyVisual) TemplateEmptyVisual {
		if v != nil {
			return *v
		}
		var ret TemplateEmptyVisual
		return ret
	}).(TemplateEmptyVisualOutput)
}

func (o TemplateEmptyVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateEmptyVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateEmptyVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o TemplateEmptyVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateEmptyVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateEntity struct {
	Path *string `pulumi:"path"`
}

type TemplateEntityOutput struct{ *pulumi.OutputState }

func (TemplateEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEntity)(nil)).Elem()
}

func (o TemplateEntityOutput) ToTemplateEntityOutput() TemplateEntityOutput {
	return o
}

func (o TemplateEntityOutput) ToTemplateEntityOutputWithContext(ctx context.Context) TemplateEntityOutput {
	return o
}

func (o TemplateEntityOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateEntity) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type TemplateEntityArrayOutput struct{ *pulumi.OutputState }

func (TemplateEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateEntity)(nil)).Elem()
}

func (o TemplateEntityArrayOutput) ToTemplateEntityArrayOutput() TemplateEntityArrayOutput {
	return o
}

func (o TemplateEntityArrayOutput) ToTemplateEntityArrayOutputWithContext(ctx context.Context) TemplateEntityArrayOutput {
	return o
}

func (o TemplateEntityArrayOutput) Index(i pulumi.IntInput) TemplateEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateEntity {
		return vs[0].([]TemplateEntity)[vs[1].(int)]
	}).(TemplateEntityOutput)
}

type TemplateError struct {
	Message          *string            `pulumi:"message"`
	Type             *TemplateErrorType `pulumi:"type"`
	ViolatedEntities []TemplateEntity   `pulumi:"violatedEntities"`
}

type TemplateErrorOutput struct{ *pulumi.OutputState }

func (TemplateErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateError)(nil)).Elem()
}

func (o TemplateErrorOutput) ToTemplateErrorOutput() TemplateErrorOutput {
	return o
}

func (o TemplateErrorOutput) ToTemplateErrorOutputWithContext(ctx context.Context) TemplateErrorOutput {
	return o
}

func (o TemplateErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o TemplateErrorOutput) Type() TemplateErrorTypePtrOutput {
	return o.ApplyT(func(v TemplateError) *TemplateErrorType { return v.Type }).(TemplateErrorTypePtrOutput)
}

func (o TemplateErrorOutput) ViolatedEntities() TemplateEntityArrayOutput {
	return o.ApplyT(func(v TemplateError) []TemplateEntity { return v.ViolatedEntities }).(TemplateEntityArrayOutput)
}

type TemplateErrorArrayOutput struct{ *pulumi.OutputState }

func (TemplateErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateError)(nil)).Elem()
}

func (o TemplateErrorArrayOutput) ToTemplateErrorArrayOutput() TemplateErrorArrayOutput {
	return o
}

func (o TemplateErrorArrayOutput) ToTemplateErrorArrayOutputWithContext(ctx context.Context) TemplateErrorArrayOutput {
	return o
}

func (o TemplateErrorArrayOutput) Index(i pulumi.IntInput) TemplateErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateError {
		return vs[0].([]TemplateError)[vs[1].(int)]
	}).(TemplateErrorOutput)
}

type TemplateExcludePeriodConfiguration struct {
	Amount      float64                 `pulumi:"amount"`
	Granularity TemplateTimeGranularity `pulumi:"granularity"`
	Status      *TemplateWidgetStatus   `pulumi:"status"`
}

// TemplateExcludePeriodConfigurationInput is an input type that accepts TemplateExcludePeriodConfigurationArgs and TemplateExcludePeriodConfigurationOutput values.
// You can construct a concrete instance of `TemplateExcludePeriodConfigurationInput` via:
//
//	TemplateExcludePeriodConfigurationArgs{...}
type TemplateExcludePeriodConfigurationInput interface {
	pulumi.Input

	ToTemplateExcludePeriodConfigurationOutput() TemplateExcludePeriodConfigurationOutput
	ToTemplateExcludePeriodConfigurationOutputWithContext(context.Context) TemplateExcludePeriodConfigurationOutput
}

type TemplateExcludePeriodConfigurationArgs struct {
	Amount      pulumi.Float64Input          `pulumi:"amount"`
	Granularity TemplateTimeGranularityInput `pulumi:"granularity"`
	Status      TemplateWidgetStatusPtrInput `pulumi:"status"`
}

func (TemplateExcludePeriodConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExcludePeriodConfiguration)(nil)).Elem()
}

func (i TemplateExcludePeriodConfigurationArgs) ToTemplateExcludePeriodConfigurationOutput() TemplateExcludePeriodConfigurationOutput {
	return i.ToTemplateExcludePeriodConfigurationOutputWithContext(context.Background())
}

func (i TemplateExcludePeriodConfigurationArgs) ToTemplateExcludePeriodConfigurationOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExcludePeriodConfigurationOutput)
}

func (i TemplateExcludePeriodConfigurationArgs) ToTemplateExcludePeriodConfigurationPtrOutput() TemplateExcludePeriodConfigurationPtrOutput {
	return i.ToTemplateExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateExcludePeriodConfigurationArgs) ToTemplateExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExcludePeriodConfigurationOutput).ToTemplateExcludePeriodConfigurationPtrOutputWithContext(ctx)
}

// TemplateExcludePeriodConfigurationPtrInput is an input type that accepts TemplateExcludePeriodConfigurationArgs, TemplateExcludePeriodConfigurationPtr and TemplateExcludePeriodConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateExcludePeriodConfigurationPtrInput` via:
//
//	        TemplateExcludePeriodConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateExcludePeriodConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateExcludePeriodConfigurationPtrOutput() TemplateExcludePeriodConfigurationPtrOutput
	ToTemplateExcludePeriodConfigurationPtrOutputWithContext(context.Context) TemplateExcludePeriodConfigurationPtrOutput
}

type templateExcludePeriodConfigurationPtrType TemplateExcludePeriodConfigurationArgs

func TemplateExcludePeriodConfigurationPtr(v *TemplateExcludePeriodConfigurationArgs) TemplateExcludePeriodConfigurationPtrInput {
	return (*templateExcludePeriodConfigurationPtrType)(v)
}

func (*templateExcludePeriodConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateExcludePeriodConfiguration)(nil)).Elem()
}

func (i *templateExcludePeriodConfigurationPtrType) ToTemplateExcludePeriodConfigurationPtrOutput() TemplateExcludePeriodConfigurationPtrOutput {
	return i.ToTemplateExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateExcludePeriodConfigurationPtrType) ToTemplateExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExcludePeriodConfigurationPtrOutput)
}

type TemplateExcludePeriodConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateExcludePeriodConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExcludePeriodConfiguration)(nil)).Elem()
}

func (o TemplateExcludePeriodConfigurationOutput) ToTemplateExcludePeriodConfigurationOutput() TemplateExcludePeriodConfigurationOutput {
	return o
}

func (o TemplateExcludePeriodConfigurationOutput) ToTemplateExcludePeriodConfigurationOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationOutput {
	return o
}

func (o TemplateExcludePeriodConfigurationOutput) ToTemplateExcludePeriodConfigurationPtrOutput() TemplateExcludePeriodConfigurationPtrOutput {
	return o.ToTemplateExcludePeriodConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateExcludePeriodConfigurationOutput) ToTemplateExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateExcludePeriodConfiguration) *TemplateExcludePeriodConfiguration {
		return &v
	}).(TemplateExcludePeriodConfigurationPtrOutput)
}

func (o TemplateExcludePeriodConfigurationOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateExcludePeriodConfiguration) float64 { return v.Amount }).(pulumi.Float64Output)
}

func (o TemplateExcludePeriodConfigurationOutput) Granularity() TemplateTimeGranularityOutput {
	return o.ApplyT(func(v TemplateExcludePeriodConfiguration) TemplateTimeGranularity { return v.Granularity }).(TemplateTimeGranularityOutput)
}

func (o TemplateExcludePeriodConfigurationOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateExcludePeriodConfiguration) *TemplateWidgetStatus { return v.Status }).(TemplateWidgetStatusPtrOutput)
}

type TemplateExcludePeriodConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateExcludePeriodConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateExcludePeriodConfiguration)(nil)).Elem()
}

func (o TemplateExcludePeriodConfigurationPtrOutput) ToTemplateExcludePeriodConfigurationPtrOutput() TemplateExcludePeriodConfigurationPtrOutput {
	return o
}

func (o TemplateExcludePeriodConfigurationPtrOutput) ToTemplateExcludePeriodConfigurationPtrOutputWithContext(ctx context.Context) TemplateExcludePeriodConfigurationPtrOutput {
	return o
}

func (o TemplateExcludePeriodConfigurationPtrOutput) Elem() TemplateExcludePeriodConfigurationOutput {
	return o.ApplyT(func(v *TemplateExcludePeriodConfiguration) TemplateExcludePeriodConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateExcludePeriodConfiguration
		return ret
	}).(TemplateExcludePeriodConfigurationOutput)
}

func (o TemplateExcludePeriodConfigurationPtrOutput) Amount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateExcludePeriodConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateExcludePeriodConfigurationPtrOutput) Granularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateExcludePeriodConfiguration) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.Granularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateExcludePeriodConfigurationPtrOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v *TemplateExcludePeriodConfiguration) *TemplateWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TemplateWidgetStatusPtrOutput)
}

type TemplateExplicitHierarchy struct {
	Columns          []TemplateColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []TemplateDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                     `pulumi:"hierarchyId"`
}

// TemplateExplicitHierarchyInput is an input type that accepts TemplateExplicitHierarchyArgs and TemplateExplicitHierarchyOutput values.
// You can construct a concrete instance of `TemplateExplicitHierarchyInput` via:
//
//	TemplateExplicitHierarchyArgs{...}
type TemplateExplicitHierarchyInput interface {
	pulumi.Input

	ToTemplateExplicitHierarchyOutput() TemplateExplicitHierarchyOutput
	ToTemplateExplicitHierarchyOutputWithContext(context.Context) TemplateExplicitHierarchyOutput
}

type TemplateExplicitHierarchyArgs struct {
	Columns          TemplateColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters TemplateDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                 `pulumi:"hierarchyId"`
}

func (TemplateExplicitHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExplicitHierarchy)(nil)).Elem()
}

func (i TemplateExplicitHierarchyArgs) ToTemplateExplicitHierarchyOutput() TemplateExplicitHierarchyOutput {
	return i.ToTemplateExplicitHierarchyOutputWithContext(context.Background())
}

func (i TemplateExplicitHierarchyArgs) ToTemplateExplicitHierarchyOutputWithContext(ctx context.Context) TemplateExplicitHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExplicitHierarchyOutput)
}

func (i TemplateExplicitHierarchyArgs) ToTemplateExplicitHierarchyPtrOutput() TemplateExplicitHierarchyPtrOutput {
	return i.ToTemplateExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i TemplateExplicitHierarchyArgs) ToTemplateExplicitHierarchyPtrOutputWithContext(ctx context.Context) TemplateExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExplicitHierarchyOutput).ToTemplateExplicitHierarchyPtrOutputWithContext(ctx)
}

// TemplateExplicitHierarchyPtrInput is an input type that accepts TemplateExplicitHierarchyArgs, TemplateExplicitHierarchyPtr and TemplateExplicitHierarchyPtrOutput values.
// You can construct a concrete instance of `TemplateExplicitHierarchyPtrInput` via:
//
//	        TemplateExplicitHierarchyArgs{...}
//
//	or:
//
//	        nil
type TemplateExplicitHierarchyPtrInput interface {
	pulumi.Input

	ToTemplateExplicitHierarchyPtrOutput() TemplateExplicitHierarchyPtrOutput
	ToTemplateExplicitHierarchyPtrOutputWithContext(context.Context) TemplateExplicitHierarchyPtrOutput
}

type templateExplicitHierarchyPtrType TemplateExplicitHierarchyArgs

func TemplateExplicitHierarchyPtr(v *TemplateExplicitHierarchyArgs) TemplateExplicitHierarchyPtrInput {
	return (*templateExplicitHierarchyPtrType)(v)
}

func (*templateExplicitHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateExplicitHierarchy)(nil)).Elem()
}

func (i *templateExplicitHierarchyPtrType) ToTemplateExplicitHierarchyPtrOutput() TemplateExplicitHierarchyPtrOutput {
	return i.ToTemplateExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (i *templateExplicitHierarchyPtrType) ToTemplateExplicitHierarchyPtrOutputWithContext(ctx context.Context) TemplateExplicitHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExplicitHierarchyPtrOutput)
}

type TemplateExplicitHierarchyOutput struct{ *pulumi.OutputState }

func (TemplateExplicitHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExplicitHierarchy)(nil)).Elem()
}

func (o TemplateExplicitHierarchyOutput) ToTemplateExplicitHierarchyOutput() TemplateExplicitHierarchyOutput {
	return o
}

func (o TemplateExplicitHierarchyOutput) ToTemplateExplicitHierarchyOutputWithContext(ctx context.Context) TemplateExplicitHierarchyOutput {
	return o
}

func (o TemplateExplicitHierarchyOutput) ToTemplateExplicitHierarchyPtrOutput() TemplateExplicitHierarchyPtrOutput {
	return o.ToTemplateExplicitHierarchyPtrOutputWithContext(context.Background())
}

func (o TemplateExplicitHierarchyOutput) ToTemplateExplicitHierarchyPtrOutputWithContext(ctx context.Context) TemplateExplicitHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateExplicitHierarchy) *TemplateExplicitHierarchy {
		return &v
	}).(TemplateExplicitHierarchyPtrOutput)
}

func (o TemplateExplicitHierarchyOutput) Columns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v TemplateExplicitHierarchy) []TemplateColumnIdentifier { return v.Columns }).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplateExplicitHierarchyOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v TemplateExplicitHierarchy) []TemplateDrillDownFilter { return v.DrillDownFilters }).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplateExplicitHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateExplicitHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type TemplateExplicitHierarchyPtrOutput struct{ *pulumi.OutputState }

func (TemplateExplicitHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateExplicitHierarchy)(nil)).Elem()
}

func (o TemplateExplicitHierarchyPtrOutput) ToTemplateExplicitHierarchyPtrOutput() TemplateExplicitHierarchyPtrOutput {
	return o
}

func (o TemplateExplicitHierarchyPtrOutput) ToTemplateExplicitHierarchyPtrOutputWithContext(ctx context.Context) TemplateExplicitHierarchyPtrOutput {
	return o
}

func (o TemplateExplicitHierarchyPtrOutput) Elem() TemplateExplicitHierarchyOutput {
	return o.ApplyT(func(v *TemplateExplicitHierarchy) TemplateExplicitHierarchy {
		if v != nil {
			return *v
		}
		var ret TemplateExplicitHierarchy
		return ret
	}).(TemplateExplicitHierarchyOutput)
}

func (o TemplateExplicitHierarchyPtrOutput) Columns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *TemplateExplicitHierarchy) []TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplateExplicitHierarchyPtrOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *TemplateExplicitHierarchy) []TemplateDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplateExplicitHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateExplicitHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateFieldBasedTooltip struct {
	AggregationVisibility *TemplateVisibility       `pulumi:"aggregationVisibility"`
	TooltipFields         []TemplateTooltipItem     `pulumi:"tooltipFields"`
	TooltipTitleType      *TemplateTooltipTitleType `pulumi:"tooltipTitleType"`
}

// TemplateFieldBasedTooltipInput is an input type that accepts TemplateFieldBasedTooltipArgs and TemplateFieldBasedTooltipOutput values.
// You can construct a concrete instance of `TemplateFieldBasedTooltipInput` via:
//
//	TemplateFieldBasedTooltipArgs{...}
type TemplateFieldBasedTooltipInput interface {
	pulumi.Input

	ToTemplateFieldBasedTooltipOutput() TemplateFieldBasedTooltipOutput
	ToTemplateFieldBasedTooltipOutputWithContext(context.Context) TemplateFieldBasedTooltipOutput
}

type TemplateFieldBasedTooltipArgs struct {
	AggregationVisibility TemplateVisibilityPtrInput       `pulumi:"aggregationVisibility"`
	TooltipFields         TemplateTooltipItemArrayInput    `pulumi:"tooltipFields"`
	TooltipTitleType      TemplateTooltipTitleTypePtrInput `pulumi:"tooltipTitleType"`
}

func (TemplateFieldBasedTooltipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldBasedTooltip)(nil)).Elem()
}

func (i TemplateFieldBasedTooltipArgs) ToTemplateFieldBasedTooltipOutput() TemplateFieldBasedTooltipOutput {
	return i.ToTemplateFieldBasedTooltipOutputWithContext(context.Background())
}

func (i TemplateFieldBasedTooltipArgs) ToTemplateFieldBasedTooltipOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldBasedTooltipOutput)
}

func (i TemplateFieldBasedTooltipArgs) ToTemplateFieldBasedTooltipPtrOutput() TemplateFieldBasedTooltipPtrOutput {
	return i.ToTemplateFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i TemplateFieldBasedTooltipArgs) ToTemplateFieldBasedTooltipPtrOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldBasedTooltipOutput).ToTemplateFieldBasedTooltipPtrOutputWithContext(ctx)
}

// TemplateFieldBasedTooltipPtrInput is an input type that accepts TemplateFieldBasedTooltipArgs, TemplateFieldBasedTooltipPtr and TemplateFieldBasedTooltipPtrOutput values.
// You can construct a concrete instance of `TemplateFieldBasedTooltipPtrInput` via:
//
//	        TemplateFieldBasedTooltipArgs{...}
//
//	or:
//
//	        nil
type TemplateFieldBasedTooltipPtrInput interface {
	pulumi.Input

	ToTemplateFieldBasedTooltipPtrOutput() TemplateFieldBasedTooltipPtrOutput
	ToTemplateFieldBasedTooltipPtrOutputWithContext(context.Context) TemplateFieldBasedTooltipPtrOutput
}

type templateFieldBasedTooltipPtrType TemplateFieldBasedTooltipArgs

func TemplateFieldBasedTooltipPtr(v *TemplateFieldBasedTooltipArgs) TemplateFieldBasedTooltipPtrInput {
	return (*templateFieldBasedTooltipPtrType)(v)
}

func (*templateFieldBasedTooltipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldBasedTooltip)(nil)).Elem()
}

func (i *templateFieldBasedTooltipPtrType) ToTemplateFieldBasedTooltipPtrOutput() TemplateFieldBasedTooltipPtrOutput {
	return i.ToTemplateFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (i *templateFieldBasedTooltipPtrType) ToTemplateFieldBasedTooltipPtrOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldBasedTooltipPtrOutput)
}

type TemplateFieldBasedTooltipOutput struct{ *pulumi.OutputState }

func (TemplateFieldBasedTooltipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldBasedTooltip)(nil)).Elem()
}

func (o TemplateFieldBasedTooltipOutput) ToTemplateFieldBasedTooltipOutput() TemplateFieldBasedTooltipOutput {
	return o
}

func (o TemplateFieldBasedTooltipOutput) ToTemplateFieldBasedTooltipOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipOutput {
	return o
}

func (o TemplateFieldBasedTooltipOutput) ToTemplateFieldBasedTooltipPtrOutput() TemplateFieldBasedTooltipPtrOutput {
	return o.ToTemplateFieldBasedTooltipPtrOutputWithContext(context.Background())
}

func (o TemplateFieldBasedTooltipOutput) ToTemplateFieldBasedTooltipPtrOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFieldBasedTooltip) *TemplateFieldBasedTooltip {
		return &v
	}).(TemplateFieldBasedTooltipPtrOutput)
}

func (o TemplateFieldBasedTooltipOutput) AggregationVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFieldBasedTooltip) *TemplateVisibility { return v.AggregationVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateFieldBasedTooltipOutput) TooltipFields() TemplateTooltipItemArrayOutput {
	return o.ApplyT(func(v TemplateFieldBasedTooltip) []TemplateTooltipItem { return v.TooltipFields }).(TemplateTooltipItemArrayOutput)
}

func (o TemplateFieldBasedTooltipOutput) TooltipTitleType() TemplateTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v TemplateFieldBasedTooltip) *TemplateTooltipTitleType { return v.TooltipTitleType }).(TemplateTooltipTitleTypePtrOutput)
}

type TemplateFieldBasedTooltipPtrOutput struct{ *pulumi.OutputState }

func (TemplateFieldBasedTooltipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldBasedTooltip)(nil)).Elem()
}

func (o TemplateFieldBasedTooltipPtrOutput) ToTemplateFieldBasedTooltipPtrOutput() TemplateFieldBasedTooltipPtrOutput {
	return o
}

func (o TemplateFieldBasedTooltipPtrOutput) ToTemplateFieldBasedTooltipPtrOutputWithContext(ctx context.Context) TemplateFieldBasedTooltipPtrOutput {
	return o
}

func (o TemplateFieldBasedTooltipPtrOutput) Elem() TemplateFieldBasedTooltipOutput {
	return o.ApplyT(func(v *TemplateFieldBasedTooltip) TemplateFieldBasedTooltip {
		if v != nil {
			return *v
		}
		var ret TemplateFieldBasedTooltip
		return ret
	}).(TemplateFieldBasedTooltipOutput)
}

func (o TemplateFieldBasedTooltipPtrOutput) AggregationVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFieldBasedTooltip) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AggregationVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateFieldBasedTooltipPtrOutput) TooltipFields() TemplateTooltipItemArrayOutput {
	return o.ApplyT(func(v *TemplateFieldBasedTooltip) []TemplateTooltipItem {
		if v == nil {
			return nil
		}
		return v.TooltipFields
	}).(TemplateTooltipItemArrayOutput)
}

func (o TemplateFieldBasedTooltipPtrOutput) TooltipTitleType() TemplateTooltipTitleTypePtrOutput {
	return o.ApplyT(func(v *TemplateFieldBasedTooltip) *TemplateTooltipTitleType {
		if v == nil {
			return nil
		}
		return v.TooltipTitleType
	}).(TemplateTooltipTitleTypePtrOutput)
}

type TemplateFieldLabelType struct {
	FieldId    *string             `pulumi:"fieldId"`
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateFieldLabelTypeInput is an input type that accepts TemplateFieldLabelTypeArgs and TemplateFieldLabelTypeOutput values.
// You can construct a concrete instance of `TemplateFieldLabelTypeInput` via:
//
//	TemplateFieldLabelTypeArgs{...}
type TemplateFieldLabelTypeInput interface {
	pulumi.Input

	ToTemplateFieldLabelTypeOutput() TemplateFieldLabelTypeOutput
	ToTemplateFieldLabelTypeOutputWithContext(context.Context) TemplateFieldLabelTypeOutput
}

type TemplateFieldLabelTypeArgs struct {
	FieldId    pulumi.StringPtrInput      `pulumi:"fieldId"`
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateFieldLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldLabelType)(nil)).Elem()
}

func (i TemplateFieldLabelTypeArgs) ToTemplateFieldLabelTypeOutput() TemplateFieldLabelTypeOutput {
	return i.ToTemplateFieldLabelTypeOutputWithContext(context.Background())
}

func (i TemplateFieldLabelTypeArgs) ToTemplateFieldLabelTypeOutputWithContext(ctx context.Context) TemplateFieldLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldLabelTypeOutput)
}

func (i TemplateFieldLabelTypeArgs) ToTemplateFieldLabelTypePtrOutput() TemplateFieldLabelTypePtrOutput {
	return i.ToTemplateFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i TemplateFieldLabelTypeArgs) ToTemplateFieldLabelTypePtrOutputWithContext(ctx context.Context) TemplateFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldLabelTypeOutput).ToTemplateFieldLabelTypePtrOutputWithContext(ctx)
}

// TemplateFieldLabelTypePtrInput is an input type that accepts TemplateFieldLabelTypeArgs, TemplateFieldLabelTypePtr and TemplateFieldLabelTypePtrOutput values.
// You can construct a concrete instance of `TemplateFieldLabelTypePtrInput` via:
//
//	        TemplateFieldLabelTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateFieldLabelTypePtrInput interface {
	pulumi.Input

	ToTemplateFieldLabelTypePtrOutput() TemplateFieldLabelTypePtrOutput
	ToTemplateFieldLabelTypePtrOutputWithContext(context.Context) TemplateFieldLabelTypePtrOutput
}

type templateFieldLabelTypePtrType TemplateFieldLabelTypeArgs

func TemplateFieldLabelTypePtr(v *TemplateFieldLabelTypeArgs) TemplateFieldLabelTypePtrInput {
	return (*templateFieldLabelTypePtrType)(v)
}

func (*templateFieldLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldLabelType)(nil)).Elem()
}

func (i *templateFieldLabelTypePtrType) ToTemplateFieldLabelTypePtrOutput() TemplateFieldLabelTypePtrOutput {
	return i.ToTemplateFieldLabelTypePtrOutputWithContext(context.Background())
}

func (i *templateFieldLabelTypePtrType) ToTemplateFieldLabelTypePtrOutputWithContext(ctx context.Context) TemplateFieldLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldLabelTypePtrOutput)
}

type TemplateFieldLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateFieldLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldLabelType)(nil)).Elem()
}

func (o TemplateFieldLabelTypeOutput) ToTemplateFieldLabelTypeOutput() TemplateFieldLabelTypeOutput {
	return o
}

func (o TemplateFieldLabelTypeOutput) ToTemplateFieldLabelTypeOutputWithContext(ctx context.Context) TemplateFieldLabelTypeOutput {
	return o
}

func (o TemplateFieldLabelTypeOutput) ToTemplateFieldLabelTypePtrOutput() TemplateFieldLabelTypePtrOutput {
	return o.ToTemplateFieldLabelTypePtrOutputWithContext(context.Background())
}

func (o TemplateFieldLabelTypeOutput) ToTemplateFieldLabelTypePtrOutputWithContext(ctx context.Context) TemplateFieldLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFieldLabelType) *TemplateFieldLabelType {
		return &v
	}).(TemplateFieldLabelTypePtrOutput)
}

func (o TemplateFieldLabelTypeOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFieldLabelType) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

func (o TemplateFieldLabelTypeOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFieldLabelType) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateFieldLabelTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateFieldLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldLabelType)(nil)).Elem()
}

func (o TemplateFieldLabelTypePtrOutput) ToTemplateFieldLabelTypePtrOutput() TemplateFieldLabelTypePtrOutput {
	return o
}

func (o TemplateFieldLabelTypePtrOutput) ToTemplateFieldLabelTypePtrOutputWithContext(ctx context.Context) TemplateFieldLabelTypePtrOutput {
	return o
}

func (o TemplateFieldLabelTypePtrOutput) Elem() TemplateFieldLabelTypeOutput {
	return o.ApplyT(func(v *TemplateFieldLabelType) TemplateFieldLabelType {
		if v != nil {
			return *v
		}
		var ret TemplateFieldLabelType
		return ret
	}).(TemplateFieldLabelTypeOutput)
}

func (o TemplateFieldLabelTypePtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFieldLabelType) *string {
		if v == nil {
			return nil
		}
		return v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFieldLabelTypePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFieldLabelType) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateFieldSeriesItem struct {
	AxisBinding TemplateAxisBinding              `pulumi:"axisBinding"`
	FieldId     string                           `pulumi:"fieldId"`
	Settings    *TemplateLineChartSeriesSettings `pulumi:"settings"`
}

// TemplateFieldSeriesItemInput is an input type that accepts TemplateFieldSeriesItemArgs and TemplateFieldSeriesItemOutput values.
// You can construct a concrete instance of `TemplateFieldSeriesItemInput` via:
//
//	TemplateFieldSeriesItemArgs{...}
type TemplateFieldSeriesItemInput interface {
	pulumi.Input

	ToTemplateFieldSeriesItemOutput() TemplateFieldSeriesItemOutput
	ToTemplateFieldSeriesItemOutputWithContext(context.Context) TemplateFieldSeriesItemOutput
}

type TemplateFieldSeriesItemArgs struct {
	AxisBinding TemplateAxisBindingInput                `pulumi:"axisBinding"`
	FieldId     pulumi.StringInput                      `pulumi:"fieldId"`
	Settings    TemplateLineChartSeriesSettingsPtrInput `pulumi:"settings"`
}

func (TemplateFieldSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSeriesItem)(nil)).Elem()
}

func (i TemplateFieldSeriesItemArgs) ToTemplateFieldSeriesItemOutput() TemplateFieldSeriesItemOutput {
	return i.ToTemplateFieldSeriesItemOutputWithContext(context.Background())
}

func (i TemplateFieldSeriesItemArgs) ToTemplateFieldSeriesItemOutputWithContext(ctx context.Context) TemplateFieldSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSeriesItemOutput)
}

func (i TemplateFieldSeriesItemArgs) ToTemplateFieldSeriesItemPtrOutput() TemplateFieldSeriesItemPtrOutput {
	return i.ToTemplateFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i TemplateFieldSeriesItemArgs) ToTemplateFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSeriesItemOutput).ToTemplateFieldSeriesItemPtrOutputWithContext(ctx)
}

// TemplateFieldSeriesItemPtrInput is an input type that accepts TemplateFieldSeriesItemArgs, TemplateFieldSeriesItemPtr and TemplateFieldSeriesItemPtrOutput values.
// You can construct a concrete instance of `TemplateFieldSeriesItemPtrInput` via:
//
//	        TemplateFieldSeriesItemArgs{...}
//
//	or:
//
//	        nil
type TemplateFieldSeriesItemPtrInput interface {
	pulumi.Input

	ToTemplateFieldSeriesItemPtrOutput() TemplateFieldSeriesItemPtrOutput
	ToTemplateFieldSeriesItemPtrOutputWithContext(context.Context) TemplateFieldSeriesItemPtrOutput
}

type templateFieldSeriesItemPtrType TemplateFieldSeriesItemArgs

func TemplateFieldSeriesItemPtr(v *TemplateFieldSeriesItemArgs) TemplateFieldSeriesItemPtrInput {
	return (*templateFieldSeriesItemPtrType)(v)
}

func (*templateFieldSeriesItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldSeriesItem)(nil)).Elem()
}

func (i *templateFieldSeriesItemPtrType) ToTemplateFieldSeriesItemPtrOutput() TemplateFieldSeriesItemPtrOutput {
	return i.ToTemplateFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (i *templateFieldSeriesItemPtrType) ToTemplateFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateFieldSeriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSeriesItemPtrOutput)
}

type TemplateFieldSeriesItemOutput struct{ *pulumi.OutputState }

func (TemplateFieldSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSeriesItem)(nil)).Elem()
}

func (o TemplateFieldSeriesItemOutput) ToTemplateFieldSeriesItemOutput() TemplateFieldSeriesItemOutput {
	return o
}

func (o TemplateFieldSeriesItemOutput) ToTemplateFieldSeriesItemOutputWithContext(ctx context.Context) TemplateFieldSeriesItemOutput {
	return o
}

func (o TemplateFieldSeriesItemOutput) ToTemplateFieldSeriesItemPtrOutput() TemplateFieldSeriesItemPtrOutput {
	return o.ToTemplateFieldSeriesItemPtrOutputWithContext(context.Background())
}

func (o TemplateFieldSeriesItemOutput) ToTemplateFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateFieldSeriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFieldSeriesItem) *TemplateFieldSeriesItem {
		return &v
	}).(TemplateFieldSeriesItemPtrOutput)
}

func (o TemplateFieldSeriesItemOutput) AxisBinding() TemplateAxisBindingOutput {
	return o.ApplyT(func(v TemplateFieldSeriesItem) TemplateAxisBinding { return v.AxisBinding }).(TemplateAxisBindingOutput)
}

func (o TemplateFieldSeriesItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFieldSeriesItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateFieldSeriesItemOutput) Settings() TemplateLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v TemplateFieldSeriesItem) *TemplateLineChartSeriesSettings { return v.Settings }).(TemplateLineChartSeriesSettingsPtrOutput)
}

type TemplateFieldSeriesItemPtrOutput struct{ *pulumi.OutputState }

func (TemplateFieldSeriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldSeriesItem)(nil)).Elem()
}

func (o TemplateFieldSeriesItemPtrOutput) ToTemplateFieldSeriesItemPtrOutput() TemplateFieldSeriesItemPtrOutput {
	return o
}

func (o TemplateFieldSeriesItemPtrOutput) ToTemplateFieldSeriesItemPtrOutputWithContext(ctx context.Context) TemplateFieldSeriesItemPtrOutput {
	return o
}

func (o TemplateFieldSeriesItemPtrOutput) Elem() TemplateFieldSeriesItemOutput {
	return o.ApplyT(func(v *TemplateFieldSeriesItem) TemplateFieldSeriesItem {
		if v != nil {
			return *v
		}
		var ret TemplateFieldSeriesItem
		return ret
	}).(TemplateFieldSeriesItemOutput)
}

func (o TemplateFieldSeriesItemPtrOutput) AxisBinding() TemplateAxisBindingPtrOutput {
	return o.ApplyT(func(v *TemplateFieldSeriesItem) *TemplateAxisBinding {
		if v == nil {
			return nil
		}
		return &v.AxisBinding
	}).(TemplateAxisBindingPtrOutput)
}

func (o TemplateFieldSeriesItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFieldSeriesItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFieldSeriesItemPtrOutput) Settings() TemplateLineChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateFieldSeriesItem) *TemplateLineChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(TemplateLineChartSeriesSettingsPtrOutput)
}

type TemplateFieldSort struct {
	Direction TemplateSortDirection `pulumi:"direction"`
	FieldId   string                `pulumi:"fieldId"`
}

// TemplateFieldSortInput is an input type that accepts TemplateFieldSortArgs and TemplateFieldSortOutput values.
// You can construct a concrete instance of `TemplateFieldSortInput` via:
//
//	TemplateFieldSortArgs{...}
type TemplateFieldSortInput interface {
	pulumi.Input

	ToTemplateFieldSortOutput() TemplateFieldSortOutput
	ToTemplateFieldSortOutputWithContext(context.Context) TemplateFieldSortOutput
}

type TemplateFieldSortArgs struct {
	Direction TemplateSortDirectionInput `pulumi:"direction"`
	FieldId   pulumi.StringInput         `pulumi:"fieldId"`
}

func (TemplateFieldSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSort)(nil)).Elem()
}

func (i TemplateFieldSortArgs) ToTemplateFieldSortOutput() TemplateFieldSortOutput {
	return i.ToTemplateFieldSortOutputWithContext(context.Background())
}

func (i TemplateFieldSortArgs) ToTemplateFieldSortOutputWithContext(ctx context.Context) TemplateFieldSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSortOutput)
}

func (i TemplateFieldSortArgs) ToTemplateFieldSortPtrOutput() TemplateFieldSortPtrOutput {
	return i.ToTemplateFieldSortPtrOutputWithContext(context.Background())
}

func (i TemplateFieldSortArgs) ToTemplateFieldSortPtrOutputWithContext(ctx context.Context) TemplateFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSortOutput).ToTemplateFieldSortPtrOutputWithContext(ctx)
}

// TemplateFieldSortPtrInput is an input type that accepts TemplateFieldSortArgs, TemplateFieldSortPtr and TemplateFieldSortPtrOutput values.
// You can construct a concrete instance of `TemplateFieldSortPtrInput` via:
//
//	        TemplateFieldSortArgs{...}
//
//	or:
//
//	        nil
type TemplateFieldSortPtrInput interface {
	pulumi.Input

	ToTemplateFieldSortPtrOutput() TemplateFieldSortPtrOutput
	ToTemplateFieldSortPtrOutputWithContext(context.Context) TemplateFieldSortPtrOutput
}

type templateFieldSortPtrType TemplateFieldSortArgs

func TemplateFieldSortPtr(v *TemplateFieldSortArgs) TemplateFieldSortPtrInput {
	return (*templateFieldSortPtrType)(v)
}

func (*templateFieldSortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldSort)(nil)).Elem()
}

func (i *templateFieldSortPtrType) ToTemplateFieldSortPtrOutput() TemplateFieldSortPtrOutput {
	return i.ToTemplateFieldSortPtrOutputWithContext(context.Background())
}

func (i *templateFieldSortPtrType) ToTemplateFieldSortPtrOutputWithContext(ctx context.Context) TemplateFieldSortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSortPtrOutput)
}

type TemplateFieldSortOutput struct{ *pulumi.OutputState }

func (TemplateFieldSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSort)(nil)).Elem()
}

func (o TemplateFieldSortOutput) ToTemplateFieldSortOutput() TemplateFieldSortOutput {
	return o
}

func (o TemplateFieldSortOutput) ToTemplateFieldSortOutputWithContext(ctx context.Context) TemplateFieldSortOutput {
	return o
}

func (o TemplateFieldSortOutput) ToTemplateFieldSortPtrOutput() TemplateFieldSortPtrOutput {
	return o.ToTemplateFieldSortPtrOutputWithContext(context.Background())
}

func (o TemplateFieldSortOutput) ToTemplateFieldSortPtrOutputWithContext(ctx context.Context) TemplateFieldSortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFieldSort) *TemplateFieldSort {
		return &v
	}).(TemplateFieldSortPtrOutput)
}

func (o TemplateFieldSortOutput) Direction() TemplateSortDirectionOutput {
	return o.ApplyT(func(v TemplateFieldSort) TemplateSortDirection { return v.Direction }).(TemplateSortDirectionOutput)
}

func (o TemplateFieldSortOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFieldSort) string { return v.FieldId }).(pulumi.StringOutput)
}

type TemplateFieldSortPtrOutput struct{ *pulumi.OutputState }

func (TemplateFieldSortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldSort)(nil)).Elem()
}

func (o TemplateFieldSortPtrOutput) ToTemplateFieldSortPtrOutput() TemplateFieldSortPtrOutput {
	return o
}

func (o TemplateFieldSortPtrOutput) ToTemplateFieldSortPtrOutputWithContext(ctx context.Context) TemplateFieldSortPtrOutput {
	return o
}

func (o TemplateFieldSortPtrOutput) Elem() TemplateFieldSortOutput {
	return o.ApplyT(func(v *TemplateFieldSort) TemplateFieldSort {
		if v != nil {
			return *v
		}
		var ret TemplateFieldSort
		return ret
	}).(TemplateFieldSortOutput)
}

func (o TemplateFieldSortPtrOutput) Direction() TemplateSortDirectionPtrOutput {
	return o.ApplyT(func(v *TemplateFieldSort) *TemplateSortDirection {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(TemplateSortDirectionPtrOutput)
}

func (o TemplateFieldSortPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFieldSort) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

type TemplateFieldSortOptions struct {
	ColumnSort *TemplateColumnSort `pulumi:"columnSort"`
	FieldSort  *TemplateFieldSort  `pulumi:"fieldSort"`
}

// TemplateFieldSortOptionsInput is an input type that accepts TemplateFieldSortOptionsArgs and TemplateFieldSortOptionsOutput values.
// You can construct a concrete instance of `TemplateFieldSortOptionsInput` via:
//
//	TemplateFieldSortOptionsArgs{...}
type TemplateFieldSortOptionsInput interface {
	pulumi.Input

	ToTemplateFieldSortOptionsOutput() TemplateFieldSortOptionsOutput
	ToTemplateFieldSortOptionsOutputWithContext(context.Context) TemplateFieldSortOptionsOutput
}

type TemplateFieldSortOptionsArgs struct {
	ColumnSort TemplateColumnSortPtrInput `pulumi:"columnSort"`
	FieldSort  TemplateFieldSortPtrInput  `pulumi:"fieldSort"`
}

func (TemplateFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSortOptions)(nil)).Elem()
}

func (i TemplateFieldSortOptionsArgs) ToTemplateFieldSortOptionsOutput() TemplateFieldSortOptionsOutput {
	return i.ToTemplateFieldSortOptionsOutputWithContext(context.Background())
}

func (i TemplateFieldSortOptionsArgs) ToTemplateFieldSortOptionsOutputWithContext(ctx context.Context) TemplateFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSortOptionsOutput)
}

// TemplateFieldSortOptionsArrayInput is an input type that accepts TemplateFieldSortOptionsArray and TemplateFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `TemplateFieldSortOptionsArrayInput` via:
//
//	TemplateFieldSortOptionsArray{ TemplateFieldSortOptionsArgs{...} }
type TemplateFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToTemplateFieldSortOptionsArrayOutput() TemplateFieldSortOptionsArrayOutput
	ToTemplateFieldSortOptionsArrayOutputWithContext(context.Context) TemplateFieldSortOptionsArrayOutput
}

type TemplateFieldSortOptionsArray []TemplateFieldSortOptionsInput

func (TemplateFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFieldSortOptions)(nil)).Elem()
}

func (i TemplateFieldSortOptionsArray) ToTemplateFieldSortOptionsArrayOutput() TemplateFieldSortOptionsArrayOutput {
	return i.ToTemplateFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i TemplateFieldSortOptionsArray) ToTemplateFieldSortOptionsArrayOutputWithContext(ctx context.Context) TemplateFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (TemplateFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldSortOptions)(nil)).Elem()
}

func (o TemplateFieldSortOptionsOutput) ToTemplateFieldSortOptionsOutput() TemplateFieldSortOptionsOutput {
	return o
}

func (o TemplateFieldSortOptionsOutput) ToTemplateFieldSortOptionsOutputWithContext(ctx context.Context) TemplateFieldSortOptionsOutput {
	return o
}

func (o TemplateFieldSortOptionsOutput) ColumnSort() TemplateColumnSortPtrOutput {
	return o.ApplyT(func(v TemplateFieldSortOptions) *TemplateColumnSort { return v.ColumnSort }).(TemplateColumnSortPtrOutput)
}

func (o TemplateFieldSortOptionsOutput) FieldSort() TemplateFieldSortPtrOutput {
	return o.ApplyT(func(v TemplateFieldSortOptions) *TemplateFieldSort { return v.FieldSort }).(TemplateFieldSortPtrOutput)
}

type TemplateFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (TemplateFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFieldSortOptions)(nil)).Elem()
}

func (o TemplateFieldSortOptionsArrayOutput) ToTemplateFieldSortOptionsArrayOutput() TemplateFieldSortOptionsArrayOutput {
	return o
}

func (o TemplateFieldSortOptionsArrayOutput) ToTemplateFieldSortOptionsArrayOutputWithContext(ctx context.Context) TemplateFieldSortOptionsArrayOutput {
	return o
}

func (o TemplateFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) TemplateFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFieldSortOptions {
		return vs[0].([]TemplateFieldSortOptions)[vs[1].(int)]
	}).(TemplateFieldSortOptionsOutput)
}

type TemplateFieldTooltipItem struct {
	FieldId    string              `pulumi:"fieldId"`
	Label      *string             `pulumi:"label"`
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateFieldTooltipItemInput is an input type that accepts TemplateFieldTooltipItemArgs and TemplateFieldTooltipItemOutput values.
// You can construct a concrete instance of `TemplateFieldTooltipItemInput` via:
//
//	TemplateFieldTooltipItemArgs{...}
type TemplateFieldTooltipItemInput interface {
	pulumi.Input

	ToTemplateFieldTooltipItemOutput() TemplateFieldTooltipItemOutput
	ToTemplateFieldTooltipItemOutputWithContext(context.Context) TemplateFieldTooltipItemOutput
}

type TemplateFieldTooltipItemArgs struct {
	FieldId    pulumi.StringInput         `pulumi:"fieldId"`
	Label      pulumi.StringPtrInput      `pulumi:"label"`
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateFieldTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldTooltipItem)(nil)).Elem()
}

func (i TemplateFieldTooltipItemArgs) ToTemplateFieldTooltipItemOutput() TemplateFieldTooltipItemOutput {
	return i.ToTemplateFieldTooltipItemOutputWithContext(context.Background())
}

func (i TemplateFieldTooltipItemArgs) ToTemplateFieldTooltipItemOutputWithContext(ctx context.Context) TemplateFieldTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldTooltipItemOutput)
}

func (i TemplateFieldTooltipItemArgs) ToTemplateFieldTooltipItemPtrOutput() TemplateFieldTooltipItemPtrOutput {
	return i.ToTemplateFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i TemplateFieldTooltipItemArgs) ToTemplateFieldTooltipItemPtrOutputWithContext(ctx context.Context) TemplateFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldTooltipItemOutput).ToTemplateFieldTooltipItemPtrOutputWithContext(ctx)
}

// TemplateFieldTooltipItemPtrInput is an input type that accepts TemplateFieldTooltipItemArgs, TemplateFieldTooltipItemPtr and TemplateFieldTooltipItemPtrOutput values.
// You can construct a concrete instance of `TemplateFieldTooltipItemPtrInput` via:
//
//	        TemplateFieldTooltipItemArgs{...}
//
//	or:
//
//	        nil
type TemplateFieldTooltipItemPtrInput interface {
	pulumi.Input

	ToTemplateFieldTooltipItemPtrOutput() TemplateFieldTooltipItemPtrOutput
	ToTemplateFieldTooltipItemPtrOutputWithContext(context.Context) TemplateFieldTooltipItemPtrOutput
}

type templateFieldTooltipItemPtrType TemplateFieldTooltipItemArgs

func TemplateFieldTooltipItemPtr(v *TemplateFieldTooltipItemArgs) TemplateFieldTooltipItemPtrInput {
	return (*templateFieldTooltipItemPtrType)(v)
}

func (*templateFieldTooltipItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldTooltipItem)(nil)).Elem()
}

func (i *templateFieldTooltipItemPtrType) ToTemplateFieldTooltipItemPtrOutput() TemplateFieldTooltipItemPtrOutput {
	return i.ToTemplateFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (i *templateFieldTooltipItemPtrType) ToTemplateFieldTooltipItemPtrOutputWithContext(ctx context.Context) TemplateFieldTooltipItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFieldTooltipItemPtrOutput)
}

type TemplateFieldTooltipItemOutput struct{ *pulumi.OutputState }

func (TemplateFieldTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFieldTooltipItem)(nil)).Elem()
}

func (o TemplateFieldTooltipItemOutput) ToTemplateFieldTooltipItemOutput() TemplateFieldTooltipItemOutput {
	return o
}

func (o TemplateFieldTooltipItemOutput) ToTemplateFieldTooltipItemOutputWithContext(ctx context.Context) TemplateFieldTooltipItemOutput {
	return o
}

func (o TemplateFieldTooltipItemOutput) ToTemplateFieldTooltipItemPtrOutput() TemplateFieldTooltipItemPtrOutput {
	return o.ToTemplateFieldTooltipItemPtrOutputWithContext(context.Background())
}

func (o TemplateFieldTooltipItemOutput) ToTemplateFieldTooltipItemPtrOutputWithContext(ctx context.Context) TemplateFieldTooltipItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFieldTooltipItem) *TemplateFieldTooltipItem {
		return &v
	}).(TemplateFieldTooltipItemPtrOutput)
}

func (o TemplateFieldTooltipItemOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFieldTooltipItem) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateFieldTooltipItemOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFieldTooltipItem) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o TemplateFieldTooltipItemOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFieldTooltipItem) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateFieldTooltipItemPtrOutput struct{ *pulumi.OutputState }

func (TemplateFieldTooltipItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFieldTooltipItem)(nil)).Elem()
}

func (o TemplateFieldTooltipItemPtrOutput) ToTemplateFieldTooltipItemPtrOutput() TemplateFieldTooltipItemPtrOutput {
	return o
}

func (o TemplateFieldTooltipItemPtrOutput) ToTemplateFieldTooltipItemPtrOutputWithContext(ctx context.Context) TemplateFieldTooltipItemPtrOutput {
	return o
}

func (o TemplateFieldTooltipItemPtrOutput) Elem() TemplateFieldTooltipItemOutput {
	return o.ApplyT(func(v *TemplateFieldTooltipItem) TemplateFieldTooltipItem {
		if v != nil {
			return *v
		}
		var ret TemplateFieldTooltipItem
		return ret
	}).(TemplateFieldTooltipItemOutput)
}

func (o TemplateFieldTooltipItemPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFieldTooltipItemPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFieldTooltipItem) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFieldTooltipItemPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFieldTooltipItem) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateFilledMapAggregatedFieldWells struct {
	Geospatial []TemplateDimensionField `pulumi:"geospatial"`
	Values     []TemplateMeasureField   `pulumi:"values"`
}

// TemplateFilledMapAggregatedFieldWellsInput is an input type that accepts TemplateFilledMapAggregatedFieldWellsArgs and TemplateFilledMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateFilledMapAggregatedFieldWellsInput` via:
//
//	TemplateFilledMapAggregatedFieldWellsArgs{...}
type TemplateFilledMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateFilledMapAggregatedFieldWellsOutput() TemplateFilledMapAggregatedFieldWellsOutput
	ToTemplateFilledMapAggregatedFieldWellsOutputWithContext(context.Context) TemplateFilledMapAggregatedFieldWellsOutput
}

type TemplateFilledMapAggregatedFieldWellsArgs struct {
	Geospatial TemplateDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateFilledMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateFilledMapAggregatedFieldWellsArgs) ToTemplateFilledMapAggregatedFieldWellsOutput() TemplateFilledMapAggregatedFieldWellsOutput {
	return i.ToTemplateFilledMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateFilledMapAggregatedFieldWellsArgs) ToTemplateFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapAggregatedFieldWellsOutput)
}

func (i TemplateFilledMapAggregatedFieldWellsArgs) ToTemplateFilledMapAggregatedFieldWellsPtrOutput() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapAggregatedFieldWellsArgs) ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapAggregatedFieldWellsOutput).ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateFilledMapAggregatedFieldWellsPtrInput is an input type that accepts TemplateFilledMapAggregatedFieldWellsArgs, TemplateFilledMapAggregatedFieldWellsPtr and TemplateFilledMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapAggregatedFieldWellsPtrInput` via:
//
//	        TemplateFilledMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapAggregatedFieldWellsPtrOutput() TemplateFilledMapAggregatedFieldWellsPtrOutput
	ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateFilledMapAggregatedFieldWellsPtrOutput
}

type templateFilledMapAggregatedFieldWellsPtrType TemplateFilledMapAggregatedFieldWellsArgs

func TemplateFilledMapAggregatedFieldWellsPtr(v *TemplateFilledMapAggregatedFieldWellsArgs) TemplateFilledMapAggregatedFieldWellsPtrInput {
	return (*templateFilledMapAggregatedFieldWellsPtrType)(v)
}

func (*templateFilledMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (i *templateFilledMapAggregatedFieldWellsPtrType) ToTemplateFilledMapAggregatedFieldWellsPtrOutput() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapAggregatedFieldWellsPtrType) ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapAggregatedFieldWellsPtrOutput)
}

type TemplateFilledMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) ToTemplateFilledMapAggregatedFieldWellsOutput() TemplateFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) ToTemplateFilledMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) ToTemplateFilledMapAggregatedFieldWellsPtrOutput() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o.ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapAggregatedFieldWells) *TemplateFilledMapAggregatedFieldWells {
		return &v
	}).(TemplateFilledMapAggregatedFieldWellsPtrOutput)
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) Geospatial() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapAggregatedFieldWells) []TemplateDimensionField { return v.Geospatial }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateFilledMapAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateFilledMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateFilledMapAggregatedFieldWellsPtrOutput) ToTemplateFilledMapAggregatedFieldWellsPtrOutput() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateFilledMapAggregatedFieldWellsPtrOutput) ToTemplateFilledMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateFilledMapAggregatedFieldWellsPtrOutput) Elem() TemplateFilledMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateFilledMapAggregatedFieldWells) TemplateFilledMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapAggregatedFieldWells
		return ret
	}).(TemplateFilledMapAggregatedFieldWellsOutput)
}

func (o TemplateFilledMapAggregatedFieldWellsPtrOutput) Geospatial() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateFilledMapAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateFilledMapConditionalFormatting struct {
	ConditionalFormattingOptions []TemplateFilledMapConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// TemplateFilledMapConditionalFormattingInput is an input type that accepts TemplateFilledMapConditionalFormattingArgs and TemplateFilledMapConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateFilledMapConditionalFormattingInput` via:
//
//	TemplateFilledMapConditionalFormattingArgs{...}
type TemplateFilledMapConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateFilledMapConditionalFormattingOutput() TemplateFilledMapConditionalFormattingOutput
	ToTemplateFilledMapConditionalFormattingOutputWithContext(context.Context) TemplateFilledMapConditionalFormattingOutput
}

type TemplateFilledMapConditionalFormattingArgs struct {
	ConditionalFormattingOptions TemplateFilledMapConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (TemplateFilledMapConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConditionalFormatting)(nil)).Elem()
}

func (i TemplateFilledMapConditionalFormattingArgs) ToTemplateFilledMapConditionalFormattingOutput() TemplateFilledMapConditionalFormattingOutput {
	return i.ToTemplateFilledMapConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateFilledMapConditionalFormattingArgs) ToTemplateFilledMapConditionalFormattingOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConditionalFormattingOutput)
}

func (i TemplateFilledMapConditionalFormattingArgs) ToTemplateFilledMapConditionalFormattingPtrOutput() TemplateFilledMapConditionalFormattingPtrOutput {
	return i.ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapConditionalFormattingArgs) ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConditionalFormattingOutput).ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateFilledMapConditionalFormattingPtrInput is an input type that accepts TemplateFilledMapConditionalFormattingArgs, TemplateFilledMapConditionalFormattingPtr and TemplateFilledMapConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapConditionalFormattingPtrInput` via:
//
//	        TemplateFilledMapConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapConditionalFormattingPtrOutput() TemplateFilledMapConditionalFormattingPtrOutput
	ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(context.Context) TemplateFilledMapConditionalFormattingPtrOutput
}

type templateFilledMapConditionalFormattingPtrType TemplateFilledMapConditionalFormattingArgs

func TemplateFilledMapConditionalFormattingPtr(v *TemplateFilledMapConditionalFormattingArgs) TemplateFilledMapConditionalFormattingPtrInput {
	return (*templateFilledMapConditionalFormattingPtrType)(v)
}

func (*templateFilledMapConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapConditionalFormatting)(nil)).Elem()
}

func (i *templateFilledMapConditionalFormattingPtrType) ToTemplateFilledMapConditionalFormattingPtrOutput() TemplateFilledMapConditionalFormattingPtrOutput {
	return i.ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapConditionalFormattingPtrType) ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConditionalFormattingPtrOutput)
}

type TemplateFilledMapConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConditionalFormatting)(nil)).Elem()
}

func (o TemplateFilledMapConditionalFormattingOutput) ToTemplateFilledMapConditionalFormattingOutput() TemplateFilledMapConditionalFormattingOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOutput) ToTemplateFilledMapConditionalFormattingOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOutput) ToTemplateFilledMapConditionalFormattingPtrOutput() TemplateFilledMapConditionalFormattingPtrOutput {
	return o.ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapConditionalFormattingOutput) ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapConditionalFormatting) *TemplateFilledMapConditionalFormatting {
		return &v
	}).(TemplateFilledMapConditionalFormattingPtrOutput)
}

func (o TemplateFilledMapConditionalFormattingOutput) ConditionalFormattingOptions() TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapConditionalFormatting) []TemplateFilledMapConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(TemplateFilledMapConditionalFormattingOptionArrayOutput)
}

type TemplateFilledMapConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapConditionalFormatting)(nil)).Elem()
}

func (o TemplateFilledMapConditionalFormattingPtrOutput) ToTemplateFilledMapConditionalFormattingPtrOutput() TemplateFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingPtrOutput) ToTemplateFilledMapConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingPtrOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingPtrOutput) Elem() TemplateFilledMapConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateFilledMapConditionalFormatting) TemplateFilledMapConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapConditionalFormatting
		return ret
	}).(TemplateFilledMapConditionalFormattingOutput)
}

func (o TemplateFilledMapConditionalFormattingPtrOutput) ConditionalFormattingOptions() TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapConditionalFormatting) []TemplateFilledMapConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(TemplateFilledMapConditionalFormattingOptionArrayOutput)
}

type TemplateFilledMapConditionalFormattingOption struct {
	Shape TemplateFilledMapShapeConditionalFormatting `pulumi:"shape"`
}

// TemplateFilledMapConditionalFormattingOptionInput is an input type that accepts TemplateFilledMapConditionalFormattingOptionArgs and TemplateFilledMapConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `TemplateFilledMapConditionalFormattingOptionInput` via:
//
//	TemplateFilledMapConditionalFormattingOptionArgs{...}
type TemplateFilledMapConditionalFormattingOptionInput interface {
	pulumi.Input

	ToTemplateFilledMapConditionalFormattingOptionOutput() TemplateFilledMapConditionalFormattingOptionOutput
	ToTemplateFilledMapConditionalFormattingOptionOutputWithContext(context.Context) TemplateFilledMapConditionalFormattingOptionOutput
}

type TemplateFilledMapConditionalFormattingOptionArgs struct {
	Shape TemplateFilledMapShapeConditionalFormattingInput `pulumi:"shape"`
}

func (TemplateFilledMapConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateFilledMapConditionalFormattingOptionArgs) ToTemplateFilledMapConditionalFormattingOptionOutput() TemplateFilledMapConditionalFormattingOptionOutput {
	return i.ToTemplateFilledMapConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i TemplateFilledMapConditionalFormattingOptionArgs) ToTemplateFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConditionalFormattingOptionOutput)
}

// TemplateFilledMapConditionalFormattingOptionArrayInput is an input type that accepts TemplateFilledMapConditionalFormattingOptionArray and TemplateFilledMapConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `TemplateFilledMapConditionalFormattingOptionArrayInput` via:
//
//	TemplateFilledMapConditionalFormattingOptionArray{ TemplateFilledMapConditionalFormattingOptionArgs{...} }
type TemplateFilledMapConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToTemplateFilledMapConditionalFormattingOptionArrayOutput() TemplateFilledMapConditionalFormattingOptionArrayOutput
	ToTemplateFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Context) TemplateFilledMapConditionalFormattingOptionArrayOutput
}

type TemplateFilledMapConditionalFormattingOptionArray []TemplateFilledMapConditionalFormattingOptionInput

func (TemplateFilledMapConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateFilledMapConditionalFormattingOptionArray) ToTemplateFilledMapConditionalFormattingOptionArrayOutput() TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return i.ToTemplateFilledMapConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i TemplateFilledMapConditionalFormattingOptionArray) ToTemplateFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConditionalFormattingOptionArrayOutput)
}

type TemplateFilledMapConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateFilledMapConditionalFormattingOptionOutput) ToTemplateFilledMapConditionalFormattingOptionOutput() TemplateFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOptionOutput) ToTemplateFilledMapConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOptionOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOptionOutput) Shape() TemplateFilledMapShapeConditionalFormattingOutput {
	return o.ApplyT(func(v TemplateFilledMapConditionalFormattingOption) TemplateFilledMapShapeConditionalFormatting {
		return v.Shape
	}).(TemplateFilledMapShapeConditionalFormattingOutput)
}

type TemplateFilledMapConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilledMapConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateFilledMapConditionalFormattingOptionArrayOutput) ToTemplateFilledMapConditionalFormattingOptionArrayOutput() TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOptionArrayOutput) ToTemplateFilledMapConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateFilledMapConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateFilledMapConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) TemplateFilledMapConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFilledMapConditionalFormattingOption {
		return vs[0].([]TemplateFilledMapConditionalFormattingOption)[vs[1].(int)]
	}).(TemplateFilledMapConditionalFormattingOptionOutput)
}

type TemplateFilledMapConfiguration struct {
	FieldWells        *TemplateFilledMapFieldWells        `pulumi:"fieldWells"`
	Legend            *TemplateLegendOptions              `pulumi:"legend"`
	MapStyleOptions   *TemplateGeospatialMapStyleOptions  `pulumi:"mapStyleOptions"`
	SortConfiguration *TemplateFilledMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *TemplateTooltipOptions             `pulumi:"tooltip"`
	WindowOptions     *TemplateGeospatialWindowOptions    `pulumi:"windowOptions"`
}

// TemplateFilledMapConfigurationInput is an input type that accepts TemplateFilledMapConfigurationArgs and TemplateFilledMapConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilledMapConfigurationInput` via:
//
//	TemplateFilledMapConfigurationArgs{...}
type TemplateFilledMapConfigurationInput interface {
	pulumi.Input

	ToTemplateFilledMapConfigurationOutput() TemplateFilledMapConfigurationOutput
	ToTemplateFilledMapConfigurationOutputWithContext(context.Context) TemplateFilledMapConfigurationOutput
}

type TemplateFilledMapConfigurationArgs struct {
	FieldWells        TemplateFilledMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend            TemplateLegendOptionsPtrInput              `pulumi:"legend"`
	MapStyleOptions   TemplateGeospatialMapStyleOptionsPtrInput  `pulumi:"mapStyleOptions"`
	SortConfiguration TemplateFilledMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           TemplateTooltipOptionsPtrInput             `pulumi:"tooltip"`
	WindowOptions     TemplateGeospatialWindowOptionsPtrInput    `pulumi:"windowOptions"`
}

func (TemplateFilledMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConfiguration)(nil)).Elem()
}

func (i TemplateFilledMapConfigurationArgs) ToTemplateFilledMapConfigurationOutput() TemplateFilledMapConfigurationOutput {
	return i.ToTemplateFilledMapConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilledMapConfigurationArgs) ToTemplateFilledMapConfigurationOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConfigurationOutput)
}

func (i TemplateFilledMapConfigurationArgs) ToTemplateFilledMapConfigurationPtrOutput() TemplateFilledMapConfigurationPtrOutput {
	return i.ToTemplateFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapConfigurationArgs) ToTemplateFilledMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConfigurationOutput).ToTemplateFilledMapConfigurationPtrOutputWithContext(ctx)
}

// TemplateFilledMapConfigurationPtrInput is an input type that accepts TemplateFilledMapConfigurationArgs, TemplateFilledMapConfigurationPtr and TemplateFilledMapConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapConfigurationPtrInput` via:
//
//	        TemplateFilledMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapConfigurationPtrOutput() TemplateFilledMapConfigurationPtrOutput
	ToTemplateFilledMapConfigurationPtrOutputWithContext(context.Context) TemplateFilledMapConfigurationPtrOutput
}

type templateFilledMapConfigurationPtrType TemplateFilledMapConfigurationArgs

func TemplateFilledMapConfigurationPtr(v *TemplateFilledMapConfigurationArgs) TemplateFilledMapConfigurationPtrInput {
	return (*templateFilledMapConfigurationPtrType)(v)
}

func (*templateFilledMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapConfiguration)(nil)).Elem()
}

func (i *templateFilledMapConfigurationPtrType) ToTemplateFilledMapConfigurationPtrOutput() TemplateFilledMapConfigurationPtrOutput {
	return i.ToTemplateFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapConfigurationPtrType) ToTemplateFilledMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapConfigurationPtrOutput)
}

type TemplateFilledMapConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapConfiguration)(nil)).Elem()
}

func (o TemplateFilledMapConfigurationOutput) ToTemplateFilledMapConfigurationOutput() TemplateFilledMapConfigurationOutput {
	return o
}

func (o TemplateFilledMapConfigurationOutput) ToTemplateFilledMapConfigurationOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationOutput {
	return o
}

func (o TemplateFilledMapConfigurationOutput) ToTemplateFilledMapConfigurationPtrOutput() TemplateFilledMapConfigurationPtrOutput {
	return o.ToTemplateFilledMapConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapConfigurationOutput) ToTemplateFilledMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapConfiguration) *TemplateFilledMapConfiguration {
		return &v
	}).(TemplateFilledMapConfigurationPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) FieldWells() TemplateFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateFilledMapFieldWells { return v.FieldWells }).(TemplateFilledMapFieldWellsPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) MapStyleOptions() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateGeospatialMapStyleOptions { return v.MapStyleOptions }).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) SortConfiguration() TemplateFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateFilledMapSortConfiguration { return v.SortConfiguration }).(TemplateFilledMapSortConfigurationPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationOutput) WindowOptions() TemplateGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapConfiguration) *TemplateGeospatialWindowOptions { return v.WindowOptions }).(TemplateGeospatialWindowOptionsPtrOutput)
}

type TemplateFilledMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapConfiguration)(nil)).Elem()
}

func (o TemplateFilledMapConfigurationPtrOutput) ToTemplateFilledMapConfigurationPtrOutput() TemplateFilledMapConfigurationPtrOutput {
	return o
}

func (o TemplateFilledMapConfigurationPtrOutput) ToTemplateFilledMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapConfigurationPtrOutput {
	return o
}

func (o TemplateFilledMapConfigurationPtrOutput) Elem() TemplateFilledMapConfigurationOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) TemplateFilledMapConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapConfiguration
		return ret
	}).(TemplateFilledMapConfigurationOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) FieldWells() TemplateFilledMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateFilledMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateFilledMapFieldWellsPtrOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) MapStyleOptions() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) SortConfiguration() TemplateFilledMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateFilledMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateFilledMapSortConfigurationPtrOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateFilledMapConfigurationPtrOutput) WindowOptions() TemplateGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapConfiguration) *TemplateGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(TemplateGeospatialWindowOptionsPtrOutput)
}

type TemplateFilledMapFieldWells struct {
	FilledMapAggregatedFieldWells *TemplateFilledMapAggregatedFieldWells `pulumi:"filledMapAggregatedFieldWells"`
}

// TemplateFilledMapFieldWellsInput is an input type that accepts TemplateFilledMapFieldWellsArgs and TemplateFilledMapFieldWellsOutput values.
// You can construct a concrete instance of `TemplateFilledMapFieldWellsInput` via:
//
//	TemplateFilledMapFieldWellsArgs{...}
type TemplateFilledMapFieldWellsInput interface {
	pulumi.Input

	ToTemplateFilledMapFieldWellsOutput() TemplateFilledMapFieldWellsOutput
	ToTemplateFilledMapFieldWellsOutputWithContext(context.Context) TemplateFilledMapFieldWellsOutput
}

type TemplateFilledMapFieldWellsArgs struct {
	FilledMapAggregatedFieldWells TemplateFilledMapAggregatedFieldWellsPtrInput `pulumi:"filledMapAggregatedFieldWells"`
}

func (TemplateFilledMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapFieldWells)(nil)).Elem()
}

func (i TemplateFilledMapFieldWellsArgs) ToTemplateFilledMapFieldWellsOutput() TemplateFilledMapFieldWellsOutput {
	return i.ToTemplateFilledMapFieldWellsOutputWithContext(context.Background())
}

func (i TemplateFilledMapFieldWellsArgs) ToTemplateFilledMapFieldWellsOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapFieldWellsOutput)
}

func (i TemplateFilledMapFieldWellsArgs) ToTemplateFilledMapFieldWellsPtrOutput() TemplateFilledMapFieldWellsPtrOutput {
	return i.ToTemplateFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapFieldWellsArgs) ToTemplateFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapFieldWellsOutput).ToTemplateFilledMapFieldWellsPtrOutputWithContext(ctx)
}

// TemplateFilledMapFieldWellsPtrInput is an input type that accepts TemplateFilledMapFieldWellsArgs, TemplateFilledMapFieldWellsPtr and TemplateFilledMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapFieldWellsPtrInput` via:
//
//	        TemplateFilledMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapFieldWellsPtrOutput() TemplateFilledMapFieldWellsPtrOutput
	ToTemplateFilledMapFieldWellsPtrOutputWithContext(context.Context) TemplateFilledMapFieldWellsPtrOutput
}

type templateFilledMapFieldWellsPtrType TemplateFilledMapFieldWellsArgs

func TemplateFilledMapFieldWellsPtr(v *TemplateFilledMapFieldWellsArgs) TemplateFilledMapFieldWellsPtrInput {
	return (*templateFilledMapFieldWellsPtrType)(v)
}

func (*templateFilledMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapFieldWells)(nil)).Elem()
}

func (i *templateFilledMapFieldWellsPtrType) ToTemplateFilledMapFieldWellsPtrOutput() TemplateFilledMapFieldWellsPtrOutput {
	return i.ToTemplateFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapFieldWellsPtrType) ToTemplateFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapFieldWellsPtrOutput)
}

type TemplateFilledMapFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapFieldWells)(nil)).Elem()
}

func (o TemplateFilledMapFieldWellsOutput) ToTemplateFilledMapFieldWellsOutput() TemplateFilledMapFieldWellsOutput {
	return o
}

func (o TemplateFilledMapFieldWellsOutput) ToTemplateFilledMapFieldWellsOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsOutput {
	return o
}

func (o TemplateFilledMapFieldWellsOutput) ToTemplateFilledMapFieldWellsPtrOutput() TemplateFilledMapFieldWellsPtrOutput {
	return o.ToTemplateFilledMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapFieldWellsOutput) ToTemplateFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapFieldWells) *TemplateFilledMapFieldWells {
		return &v
	}).(TemplateFilledMapFieldWellsPtrOutput)
}

func (o TemplateFilledMapFieldWellsOutput) FilledMapAggregatedFieldWells() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapFieldWells) *TemplateFilledMapAggregatedFieldWells {
		return v.FilledMapAggregatedFieldWells
	}).(TemplateFilledMapAggregatedFieldWellsPtrOutput)
}

type TemplateFilledMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapFieldWells)(nil)).Elem()
}

func (o TemplateFilledMapFieldWellsPtrOutput) ToTemplateFilledMapFieldWellsPtrOutput() TemplateFilledMapFieldWellsPtrOutput {
	return o
}

func (o TemplateFilledMapFieldWellsPtrOutput) ToTemplateFilledMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFilledMapFieldWellsPtrOutput {
	return o
}

func (o TemplateFilledMapFieldWellsPtrOutput) Elem() TemplateFilledMapFieldWellsOutput {
	return o.ApplyT(func(v *TemplateFilledMapFieldWells) TemplateFilledMapFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapFieldWells
		return ret
	}).(TemplateFilledMapFieldWellsOutput)
}

func (o TemplateFilledMapFieldWellsPtrOutput) FilledMapAggregatedFieldWells() TemplateFilledMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapFieldWells) *TemplateFilledMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FilledMapAggregatedFieldWells
	}).(TemplateFilledMapAggregatedFieldWellsPtrOutput)
}

type TemplateFilledMapShapeConditionalFormatting struct {
	FieldId string                          `pulumi:"fieldId"`
	Format  *TemplateShapeConditionalFormat `pulumi:"format"`
}

// TemplateFilledMapShapeConditionalFormattingInput is an input type that accepts TemplateFilledMapShapeConditionalFormattingArgs and TemplateFilledMapShapeConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateFilledMapShapeConditionalFormattingInput` via:
//
//	TemplateFilledMapShapeConditionalFormattingArgs{...}
type TemplateFilledMapShapeConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateFilledMapShapeConditionalFormattingOutput() TemplateFilledMapShapeConditionalFormattingOutput
	ToTemplateFilledMapShapeConditionalFormattingOutputWithContext(context.Context) TemplateFilledMapShapeConditionalFormattingOutput
}

type TemplateFilledMapShapeConditionalFormattingArgs struct {
	FieldId pulumi.StringInput                     `pulumi:"fieldId"`
	Format  TemplateShapeConditionalFormatPtrInput `pulumi:"format"`
}

func (TemplateFilledMapShapeConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (i TemplateFilledMapShapeConditionalFormattingArgs) ToTemplateFilledMapShapeConditionalFormattingOutput() TemplateFilledMapShapeConditionalFormattingOutput {
	return i.ToTemplateFilledMapShapeConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateFilledMapShapeConditionalFormattingArgs) ToTemplateFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) TemplateFilledMapShapeConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapShapeConditionalFormattingOutput)
}

type TemplateFilledMapShapeConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapShapeConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapShapeConditionalFormatting)(nil)).Elem()
}

func (o TemplateFilledMapShapeConditionalFormattingOutput) ToTemplateFilledMapShapeConditionalFormattingOutput() TemplateFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o TemplateFilledMapShapeConditionalFormattingOutput) ToTemplateFilledMapShapeConditionalFormattingOutputWithContext(ctx context.Context) TemplateFilledMapShapeConditionalFormattingOutput {
	return o
}

func (o TemplateFilledMapShapeConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilledMapShapeConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateFilledMapShapeConditionalFormattingOutput) Format() TemplateShapeConditionalFormatPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapShapeConditionalFormatting) *TemplateShapeConditionalFormat { return v.Format }).(TemplateShapeConditionalFormatPtrOutput)
}

type TemplateFilledMapSortConfiguration struct {
	CategorySort []TemplateFieldSortOptions `pulumi:"categorySort"`
}

// TemplateFilledMapSortConfigurationInput is an input type that accepts TemplateFilledMapSortConfigurationArgs and TemplateFilledMapSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilledMapSortConfigurationInput` via:
//
//	TemplateFilledMapSortConfigurationArgs{...}
type TemplateFilledMapSortConfigurationInput interface {
	pulumi.Input

	ToTemplateFilledMapSortConfigurationOutput() TemplateFilledMapSortConfigurationOutput
	ToTemplateFilledMapSortConfigurationOutputWithContext(context.Context) TemplateFilledMapSortConfigurationOutput
}

type TemplateFilledMapSortConfigurationArgs struct {
	CategorySort TemplateFieldSortOptionsArrayInput `pulumi:"categorySort"`
}

func (TemplateFilledMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapSortConfiguration)(nil)).Elem()
}

func (i TemplateFilledMapSortConfigurationArgs) ToTemplateFilledMapSortConfigurationOutput() TemplateFilledMapSortConfigurationOutput {
	return i.ToTemplateFilledMapSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilledMapSortConfigurationArgs) ToTemplateFilledMapSortConfigurationOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapSortConfigurationOutput)
}

func (i TemplateFilledMapSortConfigurationArgs) ToTemplateFilledMapSortConfigurationPtrOutput() TemplateFilledMapSortConfigurationPtrOutput {
	return i.ToTemplateFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapSortConfigurationArgs) ToTemplateFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapSortConfigurationOutput).ToTemplateFilledMapSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateFilledMapSortConfigurationPtrInput is an input type that accepts TemplateFilledMapSortConfigurationArgs, TemplateFilledMapSortConfigurationPtr and TemplateFilledMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapSortConfigurationPtrInput` via:
//
//	        TemplateFilledMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapSortConfigurationPtrOutput() TemplateFilledMapSortConfigurationPtrOutput
	ToTemplateFilledMapSortConfigurationPtrOutputWithContext(context.Context) TemplateFilledMapSortConfigurationPtrOutput
}

type templateFilledMapSortConfigurationPtrType TemplateFilledMapSortConfigurationArgs

func TemplateFilledMapSortConfigurationPtr(v *TemplateFilledMapSortConfigurationArgs) TemplateFilledMapSortConfigurationPtrInput {
	return (*templateFilledMapSortConfigurationPtrType)(v)
}

func (*templateFilledMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapSortConfiguration)(nil)).Elem()
}

func (i *templateFilledMapSortConfigurationPtrType) ToTemplateFilledMapSortConfigurationPtrOutput() TemplateFilledMapSortConfigurationPtrOutput {
	return i.ToTemplateFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapSortConfigurationPtrType) ToTemplateFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapSortConfigurationPtrOutput)
}

type TemplateFilledMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapSortConfiguration)(nil)).Elem()
}

func (o TemplateFilledMapSortConfigurationOutput) ToTemplateFilledMapSortConfigurationOutput() TemplateFilledMapSortConfigurationOutput {
	return o
}

func (o TemplateFilledMapSortConfigurationOutput) ToTemplateFilledMapSortConfigurationOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationOutput {
	return o
}

func (o TemplateFilledMapSortConfigurationOutput) ToTemplateFilledMapSortConfigurationPtrOutput() TemplateFilledMapSortConfigurationPtrOutput {
	return o.ToTemplateFilledMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapSortConfigurationOutput) ToTemplateFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapSortConfiguration) *TemplateFilledMapSortConfiguration {
		return &v
	}).(TemplateFilledMapSortConfigurationPtrOutput)
}

func (o TemplateFilledMapSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateFilledMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapSortConfiguration)(nil)).Elem()
}

func (o TemplateFilledMapSortConfigurationPtrOutput) ToTemplateFilledMapSortConfigurationPtrOutput() TemplateFilledMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateFilledMapSortConfigurationPtrOutput) ToTemplateFilledMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilledMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateFilledMapSortConfigurationPtrOutput) Elem() TemplateFilledMapSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateFilledMapSortConfiguration) TemplateFilledMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapSortConfiguration
		return ret
	}).(TemplateFilledMapSortConfigurationOutput)
}

func (o TemplateFilledMapSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateFilledMapVisual struct {
	Actions               []TemplateVisualCustomAction            `pulumi:"actions"`
	ChartConfiguration    *TemplateFilledMapConfiguration         `pulumi:"chartConfiguration"`
	ColumnHierarchies     []TemplateColumnHierarchy               `pulumi:"columnHierarchies"`
	ConditionalFormatting *TemplateFilledMapConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *TemplateVisualSubtitleLabelOptions     `pulumi:"subtitle"`
	Title                 *TemplateVisualTitleLabelOptions        `pulumi:"title"`
	VisualId              string                                  `pulumi:"visualId"`
}

// TemplateFilledMapVisualInput is an input type that accepts TemplateFilledMapVisualArgs and TemplateFilledMapVisualOutput values.
// You can construct a concrete instance of `TemplateFilledMapVisualInput` via:
//
//	TemplateFilledMapVisualArgs{...}
type TemplateFilledMapVisualInput interface {
	pulumi.Input

	ToTemplateFilledMapVisualOutput() TemplateFilledMapVisualOutput
	ToTemplateFilledMapVisualOutputWithContext(context.Context) TemplateFilledMapVisualOutput
}

type TemplateFilledMapVisualArgs struct {
	Actions               TemplateVisualCustomActionArrayInput           `pulumi:"actions"`
	ChartConfiguration    TemplateFilledMapConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ColumnHierarchies     TemplateColumnHierarchyArrayInput              `pulumi:"columnHierarchies"`
	ConditionalFormatting TemplateFilledMapConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              TemplateVisualSubtitleLabelOptionsPtrInput     `pulumi:"subtitle"`
	Title                 TemplateVisualTitleLabelOptionsPtrInput        `pulumi:"title"`
	VisualId              pulumi.StringInput                             `pulumi:"visualId"`
}

func (TemplateFilledMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapVisual)(nil)).Elem()
}

func (i TemplateFilledMapVisualArgs) ToTemplateFilledMapVisualOutput() TemplateFilledMapVisualOutput {
	return i.ToTemplateFilledMapVisualOutputWithContext(context.Background())
}

func (i TemplateFilledMapVisualArgs) ToTemplateFilledMapVisualOutputWithContext(ctx context.Context) TemplateFilledMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapVisualOutput)
}

func (i TemplateFilledMapVisualArgs) ToTemplateFilledMapVisualPtrOutput() TemplateFilledMapVisualPtrOutput {
	return i.ToTemplateFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i TemplateFilledMapVisualArgs) ToTemplateFilledMapVisualPtrOutputWithContext(ctx context.Context) TemplateFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapVisualOutput).ToTemplateFilledMapVisualPtrOutputWithContext(ctx)
}

// TemplateFilledMapVisualPtrInput is an input type that accepts TemplateFilledMapVisualArgs, TemplateFilledMapVisualPtr and TemplateFilledMapVisualPtrOutput values.
// You can construct a concrete instance of `TemplateFilledMapVisualPtrInput` via:
//
//	        TemplateFilledMapVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateFilledMapVisualPtrInput interface {
	pulumi.Input

	ToTemplateFilledMapVisualPtrOutput() TemplateFilledMapVisualPtrOutput
	ToTemplateFilledMapVisualPtrOutputWithContext(context.Context) TemplateFilledMapVisualPtrOutput
}

type templateFilledMapVisualPtrType TemplateFilledMapVisualArgs

func TemplateFilledMapVisualPtr(v *TemplateFilledMapVisualArgs) TemplateFilledMapVisualPtrInput {
	return (*templateFilledMapVisualPtrType)(v)
}

func (*templateFilledMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapVisual)(nil)).Elem()
}

func (i *templateFilledMapVisualPtrType) ToTemplateFilledMapVisualPtrOutput() TemplateFilledMapVisualPtrOutput {
	return i.ToTemplateFilledMapVisualPtrOutputWithContext(context.Background())
}

func (i *templateFilledMapVisualPtrType) ToTemplateFilledMapVisualPtrOutputWithContext(ctx context.Context) TemplateFilledMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilledMapVisualPtrOutput)
}

type TemplateFilledMapVisualOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilledMapVisual)(nil)).Elem()
}

func (o TemplateFilledMapVisualOutput) ToTemplateFilledMapVisualOutput() TemplateFilledMapVisualOutput {
	return o
}

func (o TemplateFilledMapVisualOutput) ToTemplateFilledMapVisualOutputWithContext(ctx context.Context) TemplateFilledMapVisualOutput {
	return o
}

func (o TemplateFilledMapVisualOutput) ToTemplateFilledMapVisualPtrOutput() TemplateFilledMapVisualPtrOutput {
	return o.ToTemplateFilledMapVisualPtrOutputWithContext(context.Background())
}

func (o TemplateFilledMapVisualOutput) ToTemplateFilledMapVisualPtrOutputWithContext(ctx context.Context) TemplateFilledMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilledMapVisual) *TemplateFilledMapVisual {
		return &v
	}).(TemplateFilledMapVisualPtrOutput)
}

func (o TemplateFilledMapVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateFilledMapVisualOutput) ChartConfiguration() TemplateFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) *TemplateFilledMapConfiguration { return v.ChartConfiguration }).(TemplateFilledMapConfigurationPtrOutput)
}

func (o TemplateFilledMapVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateFilledMapVisualOutput) ConditionalFormatting() TemplateFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) *TemplateFilledMapConditionalFormatting {
		return v.ConditionalFormatting
	}).(TemplateFilledMapConditionalFormattingPtrOutput)
}

func (o TemplateFilledMapVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateFilledMapVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateFilledMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilledMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateFilledMapVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilledMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilledMapVisual)(nil)).Elem()
}

func (o TemplateFilledMapVisualPtrOutput) ToTemplateFilledMapVisualPtrOutput() TemplateFilledMapVisualPtrOutput {
	return o
}

func (o TemplateFilledMapVisualPtrOutput) ToTemplateFilledMapVisualPtrOutputWithContext(ctx context.Context) TemplateFilledMapVisualPtrOutput {
	return o
}

func (o TemplateFilledMapVisualPtrOutput) Elem() TemplateFilledMapVisualOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) TemplateFilledMapVisual {
		if v != nil {
			return *v
		}
		var ret TemplateFilledMapVisual
		return ret
	}).(TemplateFilledMapVisualOutput)
}

func (o TemplateFilledMapVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateFilledMapVisualPtrOutput) ChartConfiguration() TemplateFilledMapConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) *TemplateFilledMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateFilledMapConfigurationPtrOutput)
}

func (o TemplateFilledMapVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateFilledMapVisualPtrOutput) ConditionalFormatting() TemplateFilledMapConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) *TemplateFilledMapConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(TemplateFilledMapConditionalFormattingPtrOutput)
}

func (o TemplateFilledMapVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateFilledMapVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateFilledMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilledMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateFilter struct {
	CategoryFilter        *TemplateCategoryFilter        `pulumi:"categoryFilter"`
	NumericEqualityFilter *TemplateNumericEqualityFilter `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    *TemplateNumericRangeFilter    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   *TemplateRelativeDatesFilter   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    *TemplateTimeEqualityFilter    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       *TemplateTimeRangeFilter       `pulumi:"timeRangeFilter"`
	TopBottomFilter       *TemplateTopBottomFilter       `pulumi:"topBottomFilter"`
}

// TemplateFilterInput is an input type that accepts TemplateFilterArgs and TemplateFilterOutput values.
// You can construct a concrete instance of `TemplateFilterInput` via:
//
//	TemplateFilterArgs{...}
type TemplateFilterInput interface {
	pulumi.Input

	ToTemplateFilterOutput() TemplateFilterOutput
	ToTemplateFilterOutputWithContext(context.Context) TemplateFilterOutput
}

type TemplateFilterArgs struct {
	CategoryFilter        TemplateCategoryFilterPtrInput        `pulumi:"categoryFilter"`
	NumericEqualityFilter TemplateNumericEqualityFilterPtrInput `pulumi:"numericEqualityFilter"`
	NumericRangeFilter    TemplateNumericRangeFilterPtrInput    `pulumi:"numericRangeFilter"`
	RelativeDatesFilter   TemplateRelativeDatesFilterPtrInput   `pulumi:"relativeDatesFilter"`
	TimeEqualityFilter    TemplateTimeEqualityFilterPtrInput    `pulumi:"timeEqualityFilter"`
	TimeRangeFilter       TemplateTimeRangeFilterPtrInput       `pulumi:"timeRangeFilter"`
	TopBottomFilter       TemplateTopBottomFilterPtrInput       `pulumi:"topBottomFilter"`
}

func (TemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilter)(nil)).Elem()
}

func (i TemplateFilterArgs) ToTemplateFilterOutput() TemplateFilterOutput {
	return i.ToTemplateFilterOutputWithContext(context.Background())
}

func (i TemplateFilterArgs) ToTemplateFilterOutputWithContext(ctx context.Context) TemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOutput)
}

// TemplateFilterArrayInput is an input type that accepts TemplateFilterArray and TemplateFilterArrayOutput values.
// You can construct a concrete instance of `TemplateFilterArrayInput` via:
//
//	TemplateFilterArray{ TemplateFilterArgs{...} }
type TemplateFilterArrayInput interface {
	pulumi.Input

	ToTemplateFilterArrayOutput() TemplateFilterArrayOutput
	ToTemplateFilterArrayOutputWithContext(context.Context) TemplateFilterArrayOutput
}

type TemplateFilterArray []TemplateFilterInput

func (TemplateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilter)(nil)).Elem()
}

func (i TemplateFilterArray) ToTemplateFilterArrayOutput() TemplateFilterArrayOutput {
	return i.ToTemplateFilterArrayOutputWithContext(context.Background())
}

func (i TemplateFilterArray) ToTemplateFilterArrayOutputWithContext(ctx context.Context) TemplateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterArrayOutput)
}

type TemplateFilterOutput struct{ *pulumi.OutputState }

func (TemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilter)(nil)).Elem()
}

func (o TemplateFilterOutput) ToTemplateFilterOutput() TemplateFilterOutput {
	return o
}

func (o TemplateFilterOutput) ToTemplateFilterOutputWithContext(ctx context.Context) TemplateFilterOutput {
	return o
}

func (o TemplateFilterOutput) CategoryFilter() TemplateCategoryFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateCategoryFilter { return v.CategoryFilter }).(TemplateCategoryFilterPtrOutput)
}

func (o TemplateFilterOutput) NumericEqualityFilter() TemplateNumericEqualityFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateNumericEqualityFilter { return v.NumericEqualityFilter }).(TemplateNumericEqualityFilterPtrOutput)
}

func (o TemplateFilterOutput) NumericRangeFilter() TemplateNumericRangeFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateNumericRangeFilter { return v.NumericRangeFilter }).(TemplateNumericRangeFilterPtrOutput)
}

func (o TemplateFilterOutput) RelativeDatesFilter() TemplateRelativeDatesFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateRelativeDatesFilter { return v.RelativeDatesFilter }).(TemplateRelativeDatesFilterPtrOutput)
}

func (o TemplateFilterOutput) TimeEqualityFilter() TemplateTimeEqualityFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateTimeEqualityFilter { return v.TimeEqualityFilter }).(TemplateTimeEqualityFilterPtrOutput)
}

func (o TemplateFilterOutput) TimeRangeFilter() TemplateTimeRangeFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateTimeRangeFilter { return v.TimeRangeFilter }).(TemplateTimeRangeFilterPtrOutput)
}

func (o TemplateFilterOutput) TopBottomFilter() TemplateTopBottomFilterPtrOutput {
	return o.ApplyT(func(v TemplateFilter) *TemplateTopBottomFilter { return v.TopBottomFilter }).(TemplateTopBottomFilterPtrOutput)
}

type TemplateFilterArrayOutput struct{ *pulumi.OutputState }

func (TemplateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilter)(nil)).Elem()
}

func (o TemplateFilterArrayOutput) ToTemplateFilterArrayOutput() TemplateFilterArrayOutput {
	return o
}

func (o TemplateFilterArrayOutput) ToTemplateFilterArrayOutputWithContext(ctx context.Context) TemplateFilterArrayOutput {
	return o
}

func (o TemplateFilterArrayOutput) Index(i pulumi.IntInput) TemplateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFilter {
		return vs[0].([]TemplateFilter)[vs[1].(int)]
	}).(TemplateFilterOutput)
}

type TemplateFilterControl struct {
	DateTimePicker   *TemplateFilterDateTimePickerControl   `pulumi:"dateTimePicker"`
	Dropdown         *TemplateFilterDropDownControl         `pulumi:"dropdown"`
	List             *TemplateFilterListControl             `pulumi:"list"`
	RelativeDateTime *TemplateFilterRelativeDateTimeControl `pulumi:"relativeDateTime"`
	Slider           *TemplateFilterSliderControl           `pulumi:"slider"`
	TextArea         *TemplateFilterTextAreaControl         `pulumi:"textArea"`
	TextField        *TemplateFilterTextFieldControl        `pulumi:"textField"`
}

// TemplateFilterControlInput is an input type that accepts TemplateFilterControlArgs and TemplateFilterControlOutput values.
// You can construct a concrete instance of `TemplateFilterControlInput` via:
//
//	TemplateFilterControlArgs{...}
type TemplateFilterControlInput interface {
	pulumi.Input

	ToTemplateFilterControlOutput() TemplateFilterControlOutput
	ToTemplateFilterControlOutputWithContext(context.Context) TemplateFilterControlOutput
}

type TemplateFilterControlArgs struct {
	DateTimePicker   TemplateFilterDateTimePickerControlPtrInput   `pulumi:"dateTimePicker"`
	Dropdown         TemplateFilterDropDownControlPtrInput         `pulumi:"dropdown"`
	List             TemplateFilterListControlPtrInput             `pulumi:"list"`
	RelativeDateTime TemplateFilterRelativeDateTimeControlPtrInput `pulumi:"relativeDateTime"`
	Slider           TemplateFilterSliderControlPtrInput           `pulumi:"slider"`
	TextArea         TemplateFilterTextAreaControlPtrInput         `pulumi:"textArea"`
	TextField        TemplateFilterTextFieldControlPtrInput        `pulumi:"textField"`
}

func (TemplateFilterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterControl)(nil)).Elem()
}

func (i TemplateFilterControlArgs) ToTemplateFilterControlOutput() TemplateFilterControlOutput {
	return i.ToTemplateFilterControlOutputWithContext(context.Background())
}

func (i TemplateFilterControlArgs) ToTemplateFilterControlOutputWithContext(ctx context.Context) TemplateFilterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterControlOutput)
}

// TemplateFilterControlArrayInput is an input type that accepts TemplateFilterControlArray and TemplateFilterControlArrayOutput values.
// You can construct a concrete instance of `TemplateFilterControlArrayInput` via:
//
//	TemplateFilterControlArray{ TemplateFilterControlArgs{...} }
type TemplateFilterControlArrayInput interface {
	pulumi.Input

	ToTemplateFilterControlArrayOutput() TemplateFilterControlArrayOutput
	ToTemplateFilterControlArrayOutputWithContext(context.Context) TemplateFilterControlArrayOutput
}

type TemplateFilterControlArray []TemplateFilterControlInput

func (TemplateFilterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilterControl)(nil)).Elem()
}

func (i TemplateFilterControlArray) ToTemplateFilterControlArrayOutput() TemplateFilterControlArrayOutput {
	return i.ToTemplateFilterControlArrayOutputWithContext(context.Background())
}

func (i TemplateFilterControlArray) ToTemplateFilterControlArrayOutputWithContext(ctx context.Context) TemplateFilterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterControlArrayOutput)
}

type TemplateFilterControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterControl)(nil)).Elem()
}

func (o TemplateFilterControlOutput) ToTemplateFilterControlOutput() TemplateFilterControlOutput {
	return o
}

func (o TemplateFilterControlOutput) ToTemplateFilterControlOutputWithContext(ctx context.Context) TemplateFilterControlOutput {
	return o
}

func (o TemplateFilterControlOutput) DateTimePicker() TemplateFilterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterDateTimePickerControl { return v.DateTimePicker }).(TemplateFilterDateTimePickerControlPtrOutput)
}

func (o TemplateFilterControlOutput) Dropdown() TemplateFilterDropDownControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterDropDownControl { return v.Dropdown }).(TemplateFilterDropDownControlPtrOutput)
}

func (o TemplateFilterControlOutput) List() TemplateFilterListControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterListControl { return v.List }).(TemplateFilterListControlPtrOutput)
}

func (o TemplateFilterControlOutput) RelativeDateTime() TemplateFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterRelativeDateTimeControl { return v.RelativeDateTime }).(TemplateFilterRelativeDateTimeControlPtrOutput)
}

func (o TemplateFilterControlOutput) Slider() TemplateFilterSliderControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterSliderControl { return v.Slider }).(TemplateFilterSliderControlPtrOutput)
}

func (o TemplateFilterControlOutput) TextArea() TemplateFilterTextAreaControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterTextAreaControl { return v.TextArea }).(TemplateFilterTextAreaControlPtrOutput)
}

func (o TemplateFilterControlOutput) TextField() TemplateFilterTextFieldControlPtrOutput {
	return o.ApplyT(func(v TemplateFilterControl) *TemplateFilterTextFieldControl { return v.TextField }).(TemplateFilterTextFieldControlPtrOutput)
}

type TemplateFilterControlArrayOutput struct{ *pulumi.OutputState }

func (TemplateFilterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilterControl)(nil)).Elem()
}

func (o TemplateFilterControlArrayOutput) ToTemplateFilterControlArrayOutput() TemplateFilterControlArrayOutput {
	return o
}

func (o TemplateFilterControlArrayOutput) ToTemplateFilterControlArrayOutputWithContext(ctx context.Context) TemplateFilterControlArrayOutput {
	return o
}

func (o TemplateFilterControlArrayOutput) Index(i pulumi.IntInput) TemplateFilterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFilterControl {
		return vs[0].([]TemplateFilterControl)[vs[1].(int)]
	}).(TemplateFilterControlOutput)
}

type TemplateFilterDateTimePickerControl struct {
	DisplayOptions  *TemplateDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                       `pulumi:"filterControlId"`
	SourceFilterId  string                                       `pulumi:"sourceFilterId"`
	Title           string                                       `pulumi:"title"`
	Type            *TemplateSheetControlDateTimePickerType      `pulumi:"type"`
}

// TemplateFilterDateTimePickerControlInput is an input type that accepts TemplateFilterDateTimePickerControlArgs and TemplateFilterDateTimePickerControlOutput values.
// You can construct a concrete instance of `TemplateFilterDateTimePickerControlInput` via:
//
//	TemplateFilterDateTimePickerControlArgs{...}
type TemplateFilterDateTimePickerControlInput interface {
	pulumi.Input

	ToTemplateFilterDateTimePickerControlOutput() TemplateFilterDateTimePickerControlOutput
	ToTemplateFilterDateTimePickerControlOutputWithContext(context.Context) TemplateFilterDateTimePickerControlOutput
}

type TemplateFilterDateTimePickerControlArgs struct {
	DisplayOptions  TemplateDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                  `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                  `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                  `pulumi:"title"`
	Type            TemplateSheetControlDateTimePickerTypePtrInput      `pulumi:"type"`
}

func (TemplateFilterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterDateTimePickerControl)(nil)).Elem()
}

func (i TemplateFilterDateTimePickerControlArgs) ToTemplateFilterDateTimePickerControlOutput() TemplateFilterDateTimePickerControlOutput {
	return i.ToTemplateFilterDateTimePickerControlOutputWithContext(context.Background())
}

func (i TemplateFilterDateTimePickerControlArgs) ToTemplateFilterDateTimePickerControlOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDateTimePickerControlOutput)
}

func (i TemplateFilterDateTimePickerControlArgs) ToTemplateFilterDateTimePickerControlPtrOutput() TemplateFilterDateTimePickerControlPtrOutput {
	return i.ToTemplateFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterDateTimePickerControlArgs) ToTemplateFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDateTimePickerControlOutput).ToTemplateFilterDateTimePickerControlPtrOutputWithContext(ctx)
}

// TemplateFilterDateTimePickerControlPtrInput is an input type that accepts TemplateFilterDateTimePickerControlArgs, TemplateFilterDateTimePickerControlPtr and TemplateFilterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterDateTimePickerControlPtrInput` via:
//
//	        TemplateFilterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterDateTimePickerControlPtrOutput() TemplateFilterDateTimePickerControlPtrOutput
	ToTemplateFilterDateTimePickerControlPtrOutputWithContext(context.Context) TemplateFilterDateTimePickerControlPtrOutput
}

type templateFilterDateTimePickerControlPtrType TemplateFilterDateTimePickerControlArgs

func TemplateFilterDateTimePickerControlPtr(v *TemplateFilterDateTimePickerControlArgs) TemplateFilterDateTimePickerControlPtrInput {
	return (*templateFilterDateTimePickerControlPtrType)(v)
}

func (*templateFilterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterDateTimePickerControl)(nil)).Elem()
}

func (i *templateFilterDateTimePickerControlPtrType) ToTemplateFilterDateTimePickerControlPtrOutput() TemplateFilterDateTimePickerControlPtrOutput {
	return i.ToTemplateFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterDateTimePickerControlPtrType) ToTemplateFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDateTimePickerControlPtrOutput)
}

type TemplateFilterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterDateTimePickerControl)(nil)).Elem()
}

func (o TemplateFilterDateTimePickerControlOutput) ToTemplateFilterDateTimePickerControlOutput() TemplateFilterDateTimePickerControlOutput {
	return o
}

func (o TemplateFilterDateTimePickerControlOutput) ToTemplateFilterDateTimePickerControlOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlOutput {
	return o
}

func (o TemplateFilterDateTimePickerControlOutput) ToTemplateFilterDateTimePickerControlPtrOutput() TemplateFilterDateTimePickerControlPtrOutput {
	return o.ToTemplateFilterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterDateTimePickerControlOutput) ToTemplateFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterDateTimePickerControl) *TemplateFilterDateTimePickerControl {
		return &v
	}).(TemplateFilterDateTimePickerControlPtrOutput)
}

func (o TemplateFilterDateTimePickerControlOutput) DisplayOptions() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterDateTimePickerControl) *TemplateDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterDateTimePickerControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDateTimePickerControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterDateTimePickerControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDateTimePickerControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateFilterDateTimePickerControlOutput) Type() TemplateSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v TemplateFilterDateTimePickerControl) *TemplateSheetControlDateTimePickerType { return v.Type }).(TemplateSheetControlDateTimePickerTypePtrOutput)
}

type TemplateFilterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterDateTimePickerControl)(nil)).Elem()
}

func (o TemplateFilterDateTimePickerControlPtrOutput) ToTemplateFilterDateTimePickerControlPtrOutput() TemplateFilterDateTimePickerControlPtrOutput {
	return o
}

func (o TemplateFilterDateTimePickerControlPtrOutput) ToTemplateFilterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateFilterDateTimePickerControlPtrOutput {
	return o
}

func (o TemplateFilterDateTimePickerControlPtrOutput) Elem() TemplateFilterDateTimePickerControlOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) TemplateFilterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterDateTimePickerControl
		return ret
	}).(TemplateFilterDateTimePickerControlOutput)
}

func (o TemplateFilterDateTimePickerControlPtrOutput) DisplayOptions() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) *TemplateDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterDateTimePickerControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDateTimePickerControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDateTimePickerControlPtrOutput) Type() TemplateSheetControlDateTimePickerTypePtrOutput {
	return o.ApplyT(func(v *TemplateFilterDateTimePickerControl) *TemplateSheetControlDateTimePickerType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlDateTimePickerTypePtrOutput)
}

type TemplateFilterDropDownControl struct {
	CascadingControlConfiguration *TemplateCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *TemplateDropDownControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId               string                                 `pulumi:"filterControlId"`
	SelectableValues              *TemplateFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                 `pulumi:"sourceFilterId"`
	Title                         string                                 `pulumi:"title"`
	Type                          *TemplateSheetControlListType          `pulumi:"type"`
}

// TemplateFilterDropDownControlInput is an input type that accepts TemplateFilterDropDownControlArgs and TemplateFilterDropDownControlOutput values.
// You can construct a concrete instance of `TemplateFilterDropDownControlInput` via:
//
//	TemplateFilterDropDownControlArgs{...}
type TemplateFilterDropDownControlInput interface {
	pulumi.Input

	ToTemplateFilterDropDownControlOutput() TemplateFilterDropDownControlOutput
	ToTemplateFilterDropDownControlOutputWithContext(context.Context) TemplateFilterDropDownControlOutput
}

type TemplateFilterDropDownControlArgs struct {
	CascadingControlConfiguration TemplateCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                TemplateDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                            `pulumi:"filterControlId"`
	SelectableValues              TemplateFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          TemplateSheetControlListTypePtrInput          `pulumi:"type"`
}

func (TemplateFilterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterDropDownControl)(nil)).Elem()
}

func (i TemplateFilterDropDownControlArgs) ToTemplateFilterDropDownControlOutput() TemplateFilterDropDownControlOutput {
	return i.ToTemplateFilterDropDownControlOutputWithContext(context.Background())
}

func (i TemplateFilterDropDownControlArgs) ToTemplateFilterDropDownControlOutputWithContext(ctx context.Context) TemplateFilterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDropDownControlOutput)
}

func (i TemplateFilterDropDownControlArgs) ToTemplateFilterDropDownControlPtrOutput() TemplateFilterDropDownControlPtrOutput {
	return i.ToTemplateFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterDropDownControlArgs) ToTemplateFilterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDropDownControlOutput).ToTemplateFilterDropDownControlPtrOutputWithContext(ctx)
}

// TemplateFilterDropDownControlPtrInput is an input type that accepts TemplateFilterDropDownControlArgs, TemplateFilterDropDownControlPtr and TemplateFilterDropDownControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterDropDownControlPtrInput` via:
//
//	        TemplateFilterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterDropDownControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterDropDownControlPtrOutput() TemplateFilterDropDownControlPtrOutput
	ToTemplateFilterDropDownControlPtrOutputWithContext(context.Context) TemplateFilterDropDownControlPtrOutput
}

type templateFilterDropDownControlPtrType TemplateFilterDropDownControlArgs

func TemplateFilterDropDownControlPtr(v *TemplateFilterDropDownControlArgs) TemplateFilterDropDownControlPtrInput {
	return (*templateFilterDropDownControlPtrType)(v)
}

func (*templateFilterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterDropDownControl)(nil)).Elem()
}

func (i *templateFilterDropDownControlPtrType) ToTemplateFilterDropDownControlPtrOutput() TemplateFilterDropDownControlPtrOutput {
	return i.ToTemplateFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterDropDownControlPtrType) ToTemplateFilterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateFilterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterDropDownControlPtrOutput)
}

type TemplateFilterDropDownControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterDropDownControl)(nil)).Elem()
}

func (o TemplateFilterDropDownControlOutput) ToTemplateFilterDropDownControlOutput() TemplateFilterDropDownControlOutput {
	return o
}

func (o TemplateFilterDropDownControlOutput) ToTemplateFilterDropDownControlOutputWithContext(ctx context.Context) TemplateFilterDropDownControlOutput {
	return o
}

func (o TemplateFilterDropDownControlOutput) ToTemplateFilterDropDownControlPtrOutput() TemplateFilterDropDownControlPtrOutput {
	return o.ToTemplateFilterDropDownControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterDropDownControlOutput) ToTemplateFilterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateFilterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterDropDownControl) *TemplateFilterDropDownControl {
		return &v
	}).(TemplateFilterDropDownControlPtrOutput)
}

func (o TemplateFilterDropDownControlOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) *TemplateCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateFilterDropDownControlOutput) DisplayOptions() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) *TemplateDropDownControlDisplayOptions { return v.DisplayOptions }).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterDropDownControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterDropDownControlOutput) SelectableValues() TemplateFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) *TemplateFilterSelectableValues { return v.SelectableValues }).(TemplateFilterSelectableValuesPtrOutput)
}

func (o TemplateFilterDropDownControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateFilterDropDownControlOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v TemplateFilterDropDownControl) *TemplateSheetControlListType { return v.Type }).(TemplateSheetControlListTypePtrOutput)
}

type TemplateFilterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterDropDownControl)(nil)).Elem()
}

func (o TemplateFilterDropDownControlPtrOutput) ToTemplateFilterDropDownControlPtrOutput() TemplateFilterDropDownControlPtrOutput {
	return o
}

func (o TemplateFilterDropDownControlPtrOutput) ToTemplateFilterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateFilterDropDownControlPtrOutput {
	return o
}

func (o TemplateFilterDropDownControlPtrOutput) Elem() TemplateFilterDropDownControlOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) TemplateFilterDropDownControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterDropDownControl
		return ret
	}).(TemplateFilterDropDownControlOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *TemplateCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) DisplayOptions() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *TemplateDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) SelectableValues() TemplateFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *TemplateFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(TemplateFilterSelectableValuesPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterDropDownControlPtrOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *TemplateFilterDropDownControl) *TemplateSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlListTypePtrOutput)
}

type TemplateFilterGroup struct {
	CrossDataset       TemplateCrossDatasetTypes        `pulumi:"crossDataset"`
	FilterGroupId      string                           `pulumi:"filterGroupId"`
	Filters            []TemplateFilter                 `pulumi:"filters"`
	ScopeConfiguration TemplateFilterScopeConfiguration `pulumi:"scopeConfiguration"`
	Status             *TemplateWidgetStatus            `pulumi:"status"`
}

// TemplateFilterGroupInput is an input type that accepts TemplateFilterGroupArgs and TemplateFilterGroupOutput values.
// You can construct a concrete instance of `TemplateFilterGroupInput` via:
//
//	TemplateFilterGroupArgs{...}
type TemplateFilterGroupInput interface {
	pulumi.Input

	ToTemplateFilterGroupOutput() TemplateFilterGroupOutput
	ToTemplateFilterGroupOutputWithContext(context.Context) TemplateFilterGroupOutput
}

type TemplateFilterGroupArgs struct {
	CrossDataset       TemplateCrossDatasetTypesInput        `pulumi:"crossDataset"`
	FilterGroupId      pulumi.StringInput                    `pulumi:"filterGroupId"`
	Filters            TemplateFilterArrayInput              `pulumi:"filters"`
	ScopeConfiguration TemplateFilterScopeConfigurationInput `pulumi:"scopeConfiguration"`
	Status             TemplateWidgetStatusPtrInput          `pulumi:"status"`
}

func (TemplateFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterGroup)(nil)).Elem()
}

func (i TemplateFilterGroupArgs) ToTemplateFilterGroupOutput() TemplateFilterGroupOutput {
	return i.ToTemplateFilterGroupOutputWithContext(context.Background())
}

func (i TemplateFilterGroupArgs) ToTemplateFilterGroupOutputWithContext(ctx context.Context) TemplateFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterGroupOutput)
}

// TemplateFilterGroupArrayInput is an input type that accepts TemplateFilterGroupArray and TemplateFilterGroupArrayOutput values.
// You can construct a concrete instance of `TemplateFilterGroupArrayInput` via:
//
//	TemplateFilterGroupArray{ TemplateFilterGroupArgs{...} }
type TemplateFilterGroupArrayInput interface {
	pulumi.Input

	ToTemplateFilterGroupArrayOutput() TemplateFilterGroupArrayOutput
	ToTemplateFilterGroupArrayOutputWithContext(context.Context) TemplateFilterGroupArrayOutput
}

type TemplateFilterGroupArray []TemplateFilterGroupInput

func (TemplateFilterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilterGroup)(nil)).Elem()
}

func (i TemplateFilterGroupArray) ToTemplateFilterGroupArrayOutput() TemplateFilterGroupArrayOutput {
	return i.ToTemplateFilterGroupArrayOutputWithContext(context.Background())
}

func (i TemplateFilterGroupArray) ToTemplateFilterGroupArrayOutputWithContext(ctx context.Context) TemplateFilterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterGroupArrayOutput)
}

type TemplateFilterGroupOutput struct{ *pulumi.OutputState }

func (TemplateFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterGroup)(nil)).Elem()
}

func (o TemplateFilterGroupOutput) ToTemplateFilterGroupOutput() TemplateFilterGroupOutput {
	return o
}

func (o TemplateFilterGroupOutput) ToTemplateFilterGroupOutputWithContext(ctx context.Context) TemplateFilterGroupOutput {
	return o
}

func (o TemplateFilterGroupOutput) CrossDataset() TemplateCrossDatasetTypesOutput {
	return o.ApplyT(func(v TemplateFilterGroup) TemplateCrossDatasetTypes { return v.CrossDataset }).(TemplateCrossDatasetTypesOutput)
}

func (o TemplateFilterGroupOutput) FilterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterGroup) string { return v.FilterGroupId }).(pulumi.StringOutput)
}

func (o TemplateFilterGroupOutput) Filters() TemplateFilterArrayOutput {
	return o.ApplyT(func(v TemplateFilterGroup) []TemplateFilter { return v.Filters }).(TemplateFilterArrayOutput)
}

func (o TemplateFilterGroupOutput) ScopeConfiguration() TemplateFilterScopeConfigurationOutput {
	return o.ApplyT(func(v TemplateFilterGroup) TemplateFilterScopeConfiguration { return v.ScopeConfiguration }).(TemplateFilterScopeConfigurationOutput)
}

func (o TemplateFilterGroupOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateFilterGroup) *TemplateWidgetStatus { return v.Status }).(TemplateWidgetStatusPtrOutput)
}

type TemplateFilterGroupArrayOutput struct{ *pulumi.OutputState }

func (TemplateFilterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFilterGroup)(nil)).Elem()
}

func (o TemplateFilterGroupArrayOutput) ToTemplateFilterGroupArrayOutput() TemplateFilterGroupArrayOutput {
	return o
}

func (o TemplateFilterGroupArrayOutput) ToTemplateFilterGroupArrayOutputWithContext(ctx context.Context) TemplateFilterGroupArrayOutput {
	return o
}

func (o TemplateFilterGroupArrayOutput) Index(i pulumi.IntInput) TemplateFilterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFilterGroup {
		return vs[0].([]TemplateFilterGroup)[vs[1].(int)]
	}).(TemplateFilterGroupOutput)
}

type TemplateFilterListConfiguration struct {
	CategoryValues   []string                                `pulumi:"categoryValues"`
	MatchOperator    TemplateCategoryFilterMatchOperator     `pulumi:"matchOperator"`
	NullOption       *TemplateFilterNullOption               `pulumi:"nullOption"`
	SelectAllOptions *TemplateCategoryFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// TemplateFilterListConfigurationInput is an input type that accepts TemplateFilterListConfigurationArgs and TemplateFilterListConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilterListConfigurationInput` via:
//
//	TemplateFilterListConfigurationArgs{...}
type TemplateFilterListConfigurationInput interface {
	pulumi.Input

	ToTemplateFilterListConfigurationOutput() TemplateFilterListConfigurationOutput
	ToTemplateFilterListConfigurationOutputWithContext(context.Context) TemplateFilterListConfigurationOutput
}

type TemplateFilterListConfigurationArgs struct {
	CategoryValues   pulumi.StringArrayInput                        `pulumi:"categoryValues"`
	MatchOperator    TemplateCategoryFilterMatchOperatorInput       `pulumi:"matchOperator"`
	NullOption       TemplateFilterNullOptionPtrInput               `pulumi:"nullOption"`
	SelectAllOptions TemplateCategoryFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (TemplateFilterListConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterListConfiguration)(nil)).Elem()
}

func (i TemplateFilterListConfigurationArgs) ToTemplateFilterListConfigurationOutput() TemplateFilterListConfigurationOutput {
	return i.ToTemplateFilterListConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilterListConfigurationArgs) ToTemplateFilterListConfigurationOutputWithContext(ctx context.Context) TemplateFilterListConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListConfigurationOutput)
}

func (i TemplateFilterListConfigurationArgs) ToTemplateFilterListConfigurationPtrOutput() TemplateFilterListConfigurationPtrOutput {
	return i.ToTemplateFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFilterListConfigurationArgs) ToTemplateFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListConfigurationOutput).ToTemplateFilterListConfigurationPtrOutputWithContext(ctx)
}

// TemplateFilterListConfigurationPtrInput is an input type that accepts TemplateFilterListConfigurationArgs, TemplateFilterListConfigurationPtr and TemplateFilterListConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFilterListConfigurationPtrInput` via:
//
//	        TemplateFilterListConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterListConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFilterListConfigurationPtrOutput() TemplateFilterListConfigurationPtrOutput
	ToTemplateFilterListConfigurationPtrOutputWithContext(context.Context) TemplateFilterListConfigurationPtrOutput
}

type templateFilterListConfigurationPtrType TemplateFilterListConfigurationArgs

func TemplateFilterListConfigurationPtr(v *TemplateFilterListConfigurationArgs) TemplateFilterListConfigurationPtrInput {
	return (*templateFilterListConfigurationPtrType)(v)
}

func (*templateFilterListConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterListConfiguration)(nil)).Elem()
}

func (i *templateFilterListConfigurationPtrType) ToTemplateFilterListConfigurationPtrOutput() TemplateFilterListConfigurationPtrOutput {
	return i.ToTemplateFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFilterListConfigurationPtrType) ToTemplateFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterListConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListConfigurationPtrOutput)
}

type TemplateFilterListConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilterListConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterListConfiguration)(nil)).Elem()
}

func (o TemplateFilterListConfigurationOutput) ToTemplateFilterListConfigurationOutput() TemplateFilterListConfigurationOutput {
	return o
}

func (o TemplateFilterListConfigurationOutput) ToTemplateFilterListConfigurationOutputWithContext(ctx context.Context) TemplateFilterListConfigurationOutput {
	return o
}

func (o TemplateFilterListConfigurationOutput) ToTemplateFilterListConfigurationPtrOutput() TemplateFilterListConfigurationPtrOutput {
	return o.ToTemplateFilterListConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFilterListConfigurationOutput) ToTemplateFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterListConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterListConfiguration) *TemplateFilterListConfiguration {
		return &v
	}).(TemplateFilterListConfigurationPtrOutput)
}

func (o TemplateFilterListConfigurationOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateFilterListConfiguration) []string { return v.CategoryValues }).(pulumi.StringArrayOutput)
}

func (o TemplateFilterListConfigurationOutput) MatchOperator() TemplateCategoryFilterMatchOperatorOutput {
	return o.ApplyT(func(v TemplateFilterListConfiguration) TemplateCategoryFilterMatchOperator { return v.MatchOperator }).(TemplateCategoryFilterMatchOperatorOutput)
}

func (o TemplateFilterListConfigurationOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v TemplateFilterListConfiguration) *TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateFilterListConfigurationOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterListConfiguration) *TemplateCategoryFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateFilterListConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterListConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterListConfiguration)(nil)).Elem()
}

func (o TemplateFilterListConfigurationPtrOutput) ToTemplateFilterListConfigurationPtrOutput() TemplateFilterListConfigurationPtrOutput {
	return o
}

func (o TemplateFilterListConfigurationPtrOutput) ToTemplateFilterListConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterListConfigurationPtrOutput {
	return o
}

func (o TemplateFilterListConfigurationPtrOutput) Elem() TemplateFilterListConfigurationOutput {
	return o.ApplyT(func(v *TemplateFilterListConfiguration) TemplateFilterListConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFilterListConfiguration
		return ret
	}).(TemplateFilterListConfigurationOutput)
}

func (o TemplateFilterListConfigurationPtrOutput) CategoryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateFilterListConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.CategoryValues
	}).(pulumi.StringArrayOutput)
}

func (o TemplateFilterListConfigurationPtrOutput) MatchOperator() TemplateCategoryFilterMatchOperatorPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListConfiguration) *TemplateCategoryFilterMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(TemplateCategoryFilterMatchOperatorPtrOutput)
}

func (o TemplateFilterListConfigurationPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListConfiguration) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateFilterListConfigurationPtrOutput) SelectAllOptions() TemplateCategoryFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListConfiguration) *TemplateCategoryFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateCategoryFilterSelectAllOptionsPtrOutput)
}

type TemplateFilterListControl struct {
	CascadingControlConfiguration *TemplateCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *TemplateListControlDisplayOptions     `pulumi:"displayOptions"`
	FilterControlId               string                                 `pulumi:"filterControlId"`
	SelectableValues              *TemplateFilterSelectableValues        `pulumi:"selectableValues"`
	SourceFilterId                string                                 `pulumi:"sourceFilterId"`
	Title                         string                                 `pulumi:"title"`
	Type                          *TemplateSheetControlListType          `pulumi:"type"`
}

// TemplateFilterListControlInput is an input type that accepts TemplateFilterListControlArgs and TemplateFilterListControlOutput values.
// You can construct a concrete instance of `TemplateFilterListControlInput` via:
//
//	TemplateFilterListControlArgs{...}
type TemplateFilterListControlInput interface {
	pulumi.Input

	ToTemplateFilterListControlOutput() TemplateFilterListControlOutput
	ToTemplateFilterListControlOutputWithContext(context.Context) TemplateFilterListControlOutput
}

type TemplateFilterListControlArgs struct {
	CascadingControlConfiguration TemplateCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                TemplateListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	FilterControlId               pulumi.StringInput                            `pulumi:"filterControlId"`
	SelectableValues              TemplateFilterSelectableValuesPtrInput        `pulumi:"selectableValues"`
	SourceFilterId                pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          TemplateSheetControlListTypePtrInput          `pulumi:"type"`
}

func (TemplateFilterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterListControl)(nil)).Elem()
}

func (i TemplateFilterListControlArgs) ToTemplateFilterListControlOutput() TemplateFilterListControlOutput {
	return i.ToTemplateFilterListControlOutputWithContext(context.Background())
}

func (i TemplateFilterListControlArgs) ToTemplateFilterListControlOutputWithContext(ctx context.Context) TemplateFilterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListControlOutput)
}

func (i TemplateFilterListControlArgs) ToTemplateFilterListControlPtrOutput() TemplateFilterListControlPtrOutput {
	return i.ToTemplateFilterListControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterListControlArgs) ToTemplateFilterListControlPtrOutputWithContext(ctx context.Context) TemplateFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListControlOutput).ToTemplateFilterListControlPtrOutputWithContext(ctx)
}

// TemplateFilterListControlPtrInput is an input type that accepts TemplateFilterListControlArgs, TemplateFilterListControlPtr and TemplateFilterListControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterListControlPtrInput` via:
//
//	        TemplateFilterListControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterListControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterListControlPtrOutput() TemplateFilterListControlPtrOutput
	ToTemplateFilterListControlPtrOutputWithContext(context.Context) TemplateFilterListControlPtrOutput
}

type templateFilterListControlPtrType TemplateFilterListControlArgs

func TemplateFilterListControlPtr(v *TemplateFilterListControlArgs) TemplateFilterListControlPtrInput {
	return (*templateFilterListControlPtrType)(v)
}

func (*templateFilterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterListControl)(nil)).Elem()
}

func (i *templateFilterListControlPtrType) ToTemplateFilterListControlPtrOutput() TemplateFilterListControlPtrOutput {
	return i.ToTemplateFilterListControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterListControlPtrType) ToTemplateFilterListControlPtrOutputWithContext(ctx context.Context) TemplateFilterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterListControlPtrOutput)
}

type TemplateFilterListControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterListControl)(nil)).Elem()
}

func (o TemplateFilterListControlOutput) ToTemplateFilterListControlOutput() TemplateFilterListControlOutput {
	return o
}

func (o TemplateFilterListControlOutput) ToTemplateFilterListControlOutputWithContext(ctx context.Context) TemplateFilterListControlOutput {
	return o
}

func (o TemplateFilterListControlOutput) ToTemplateFilterListControlPtrOutput() TemplateFilterListControlPtrOutput {
	return o.ToTemplateFilterListControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterListControlOutput) ToTemplateFilterListControlPtrOutputWithContext(ctx context.Context) TemplateFilterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterListControl) *TemplateFilterListControl {
		return &v
	}).(TemplateFilterListControlPtrOutput)
}

func (o TemplateFilterListControlOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilterListControl) *TemplateCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateFilterListControlOutput) DisplayOptions() TemplateListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterListControl) *TemplateListControlDisplayOptions { return v.DisplayOptions }).(TemplateListControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterListControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterListControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterListControlOutput) SelectableValues() TemplateFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v TemplateFilterListControl) *TemplateFilterSelectableValues { return v.SelectableValues }).(TemplateFilterSelectableValuesPtrOutput)
}

func (o TemplateFilterListControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterListControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateFilterListControlOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v TemplateFilterListControl) *TemplateSheetControlListType { return v.Type }).(TemplateSheetControlListTypePtrOutput)
}

type TemplateFilterListControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterListControl)(nil)).Elem()
}

func (o TemplateFilterListControlPtrOutput) ToTemplateFilterListControlPtrOutput() TemplateFilterListControlPtrOutput {
	return o
}

func (o TemplateFilterListControlPtrOutput) ToTemplateFilterListControlPtrOutputWithContext(ctx context.Context) TemplateFilterListControlPtrOutput {
	return o
}

func (o TemplateFilterListControlPtrOutput) Elem() TemplateFilterListControlOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) TemplateFilterListControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterListControl
		return ret
	}).(TemplateFilterListControlOutput)
}

func (o TemplateFilterListControlPtrOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *TemplateCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) DisplayOptions() TemplateListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *TemplateListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateListControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) SelectableValues() TemplateFilterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *TemplateFilterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(TemplateFilterSelectableValuesPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterListControlPtrOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *TemplateFilterListControl) *TemplateSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlListTypePtrOutput)
}

type TemplateFilterOperationSelectedFieldsConfiguration struct {
	SelectedColumns      []TemplateColumnIdentifier    `pulumi:"selectedColumns"`
	SelectedFieldOptions *TemplateSelectedFieldOptions `pulumi:"selectedFieldOptions"`
	SelectedFields       []string                      `pulumi:"selectedFields"`
}

// TemplateFilterOperationSelectedFieldsConfigurationInput is an input type that accepts TemplateFilterOperationSelectedFieldsConfigurationArgs and TemplateFilterOperationSelectedFieldsConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilterOperationSelectedFieldsConfigurationInput` via:
//
//	TemplateFilterOperationSelectedFieldsConfigurationArgs{...}
type TemplateFilterOperationSelectedFieldsConfigurationInput interface {
	pulumi.Input

	ToTemplateFilterOperationSelectedFieldsConfigurationOutput() TemplateFilterOperationSelectedFieldsConfigurationOutput
	ToTemplateFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Context) TemplateFilterOperationSelectedFieldsConfigurationOutput
}

type TemplateFilterOperationSelectedFieldsConfigurationArgs struct {
	SelectedColumns      TemplateColumnIdentifierArrayInput   `pulumi:"selectedColumns"`
	SelectedFieldOptions TemplateSelectedFieldOptionsPtrInput `pulumi:"selectedFieldOptions"`
	SelectedFields       pulumi.StringArrayInput              `pulumi:"selectedFields"`
}

func (TemplateFilterOperationSelectedFieldsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i TemplateFilterOperationSelectedFieldsConfigurationArgs) ToTemplateFilterOperationSelectedFieldsConfigurationOutput() TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return i.ToTemplateFilterOperationSelectedFieldsConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilterOperationSelectedFieldsConfigurationArgs) ToTemplateFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationSelectedFieldsConfigurationOutput)
}

func (i TemplateFilterOperationSelectedFieldsConfigurationArgs) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutput() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFilterOperationSelectedFieldsConfigurationArgs) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationSelectedFieldsConfigurationOutput).ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx)
}

// TemplateFilterOperationSelectedFieldsConfigurationPtrInput is an input type that accepts TemplateFilterOperationSelectedFieldsConfigurationArgs, TemplateFilterOperationSelectedFieldsConfigurationPtr and TemplateFilterOperationSelectedFieldsConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFilterOperationSelectedFieldsConfigurationPtrInput` via:
//
//	        TemplateFilterOperationSelectedFieldsConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterOperationSelectedFieldsConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutput() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput
	ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Context) TemplateFilterOperationSelectedFieldsConfigurationPtrOutput
}

type templateFilterOperationSelectedFieldsConfigurationPtrType TemplateFilterOperationSelectedFieldsConfigurationArgs

func TemplateFilterOperationSelectedFieldsConfigurationPtr(v *TemplateFilterOperationSelectedFieldsConfigurationArgs) TemplateFilterOperationSelectedFieldsConfigurationPtrInput {
	return (*templateFilterOperationSelectedFieldsConfigurationPtrType)(v)
}

func (*templateFilterOperationSelectedFieldsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (i *templateFilterOperationSelectedFieldsConfigurationPtrType) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutput() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return i.ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFilterOperationSelectedFieldsConfigurationPtrType) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationSelectedFieldsConfigurationPtrOutput)
}

type TemplateFilterOperationSelectedFieldsConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilterOperationSelectedFieldsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) ToTemplateFilterOperationSelectedFieldsConfigurationOutput() TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) ToTemplateFilterOperationSelectedFieldsConfigurationOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return o
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutput() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterOperationSelectedFieldsConfiguration) *TemplateFilterOperationSelectedFieldsConfiguration {
		return &v
	}).(TemplateFilterOperationSelectedFieldsConfigurationPtrOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) SelectedColumns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v TemplateFilterOperationSelectedFieldsConfiguration) []TemplateColumnIdentifier {
		return v.SelectedColumns
	}).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) SelectedFieldOptions() TemplateSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterOperationSelectedFieldsConfiguration) *TemplateSelectedFieldOptions {
		return v.SelectedFieldOptions
	}).(TemplateSelectedFieldOptionsPtrOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateFilterOperationSelectedFieldsConfiguration) []string { return v.SelectedFields }).(pulumi.StringArrayOutput)
}

type TemplateFilterOperationSelectedFieldsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterOperationSelectedFieldsConfiguration)(nil)).Elem()
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutput() TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) ToTemplateFilterOperationSelectedFieldsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationSelectedFieldsConfigurationPtrOutput {
	return o
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) Elem() TemplateFilterOperationSelectedFieldsConfigurationOutput {
	return o.ApplyT(func(v *TemplateFilterOperationSelectedFieldsConfiguration) TemplateFilterOperationSelectedFieldsConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFilterOperationSelectedFieldsConfiguration
		return ret
	}).(TemplateFilterOperationSelectedFieldsConfigurationOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedColumns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *TemplateFilterOperationSelectedFieldsConfiguration) []TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.SelectedColumns
	}).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFieldOptions() TemplateSelectedFieldOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterOperationSelectedFieldsConfiguration) *TemplateSelectedFieldOptions {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(TemplateSelectedFieldOptionsPtrOutput)
}

func (o TemplateFilterOperationSelectedFieldsConfigurationPtrOutput) SelectedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateFilterOperationSelectedFieldsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SelectedFields
	}).(pulumi.StringArrayOutput)
}

type TemplateFilterOperationTargetVisualsConfiguration struct {
	SameSheetTargetVisualConfiguration *TemplateSameSheetTargetVisualConfiguration `pulumi:"sameSheetTargetVisualConfiguration"`
}

// TemplateFilterOperationTargetVisualsConfigurationInput is an input type that accepts TemplateFilterOperationTargetVisualsConfigurationArgs and TemplateFilterOperationTargetVisualsConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilterOperationTargetVisualsConfigurationInput` via:
//
//	TemplateFilterOperationTargetVisualsConfigurationArgs{...}
type TemplateFilterOperationTargetVisualsConfigurationInput interface {
	pulumi.Input

	ToTemplateFilterOperationTargetVisualsConfigurationOutput() TemplateFilterOperationTargetVisualsConfigurationOutput
	ToTemplateFilterOperationTargetVisualsConfigurationOutputWithContext(context.Context) TemplateFilterOperationTargetVisualsConfigurationOutput
}

type TemplateFilterOperationTargetVisualsConfigurationArgs struct {
	SameSheetTargetVisualConfiguration TemplateSameSheetTargetVisualConfigurationPtrInput `pulumi:"sameSheetTargetVisualConfiguration"`
}

func (TemplateFilterOperationTargetVisualsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i TemplateFilterOperationTargetVisualsConfigurationArgs) ToTemplateFilterOperationTargetVisualsConfigurationOutput() TemplateFilterOperationTargetVisualsConfigurationOutput {
	return i.ToTemplateFilterOperationTargetVisualsConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilterOperationTargetVisualsConfigurationArgs) ToTemplateFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationTargetVisualsConfigurationOutput)
}

func (i TemplateFilterOperationTargetVisualsConfigurationArgs) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutput() TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFilterOperationTargetVisualsConfigurationArgs) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationTargetVisualsConfigurationOutput).ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx)
}

// TemplateFilterOperationTargetVisualsConfigurationPtrInput is an input type that accepts TemplateFilterOperationTargetVisualsConfigurationArgs, TemplateFilterOperationTargetVisualsConfigurationPtr and TemplateFilterOperationTargetVisualsConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFilterOperationTargetVisualsConfigurationPtrInput` via:
//
//	        TemplateFilterOperationTargetVisualsConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterOperationTargetVisualsConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFilterOperationTargetVisualsConfigurationPtrOutput() TemplateFilterOperationTargetVisualsConfigurationPtrOutput
	ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Context) TemplateFilterOperationTargetVisualsConfigurationPtrOutput
}

type templateFilterOperationTargetVisualsConfigurationPtrType TemplateFilterOperationTargetVisualsConfigurationArgs

func TemplateFilterOperationTargetVisualsConfigurationPtr(v *TemplateFilterOperationTargetVisualsConfigurationArgs) TemplateFilterOperationTargetVisualsConfigurationPtrInput {
	return (*templateFilterOperationTargetVisualsConfigurationPtrType)(v)
}

func (*templateFilterOperationTargetVisualsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (i *templateFilterOperationTargetVisualsConfigurationPtrType) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutput() TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return i.ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFilterOperationTargetVisualsConfigurationPtrType) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterOperationTargetVisualsConfigurationPtrOutput)
}

type TemplateFilterOperationTargetVisualsConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilterOperationTargetVisualsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o TemplateFilterOperationTargetVisualsConfigurationOutput) ToTemplateFilterOperationTargetVisualsConfigurationOutput() TemplateFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o TemplateFilterOperationTargetVisualsConfigurationOutput) ToTemplateFilterOperationTargetVisualsConfigurationOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationOutput {
	return o
}

func (o TemplateFilterOperationTargetVisualsConfigurationOutput) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutput() TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFilterOperationTargetVisualsConfigurationOutput) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterOperationTargetVisualsConfiguration) *TemplateFilterOperationTargetVisualsConfiguration {
		return &v
	}).(TemplateFilterOperationTargetVisualsConfigurationPtrOutput)
}

func (o TemplateFilterOperationTargetVisualsConfigurationOutput) SameSheetTargetVisualConfiguration() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilterOperationTargetVisualsConfiguration) *TemplateSameSheetTargetVisualConfiguration {
		return v.SameSheetTargetVisualConfiguration
	}).(TemplateSameSheetTargetVisualConfigurationPtrOutput)
}

type TemplateFilterOperationTargetVisualsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterOperationTargetVisualsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterOperationTargetVisualsConfiguration)(nil)).Elem()
}

func (o TemplateFilterOperationTargetVisualsConfigurationPtrOutput) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutput() TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o TemplateFilterOperationTargetVisualsConfigurationPtrOutput) ToTemplateFilterOperationTargetVisualsConfigurationPtrOutputWithContext(ctx context.Context) TemplateFilterOperationTargetVisualsConfigurationPtrOutput {
	return o
}

func (o TemplateFilterOperationTargetVisualsConfigurationPtrOutput) Elem() TemplateFilterOperationTargetVisualsConfigurationOutput {
	return o.ApplyT(func(v *TemplateFilterOperationTargetVisualsConfiguration) TemplateFilterOperationTargetVisualsConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFilterOperationTargetVisualsConfiguration
		return ret
	}).(TemplateFilterOperationTargetVisualsConfigurationOutput)
}

func (o TemplateFilterOperationTargetVisualsConfigurationPtrOutput) SameSheetTargetVisualConfiguration() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFilterOperationTargetVisualsConfiguration) *TemplateSameSheetTargetVisualConfiguration {
		if v == nil {
			return nil
		}
		return v.SameSheetTargetVisualConfiguration
	}).(TemplateSameSheetTargetVisualConfigurationPtrOutput)
}

type TemplateFilterRelativeDateTimeControl struct {
	DisplayOptions  *TemplateRelativeDateTimeControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                         `pulumi:"filterControlId"`
	SourceFilterId  string                                         `pulumi:"sourceFilterId"`
	Title           string                                         `pulumi:"title"`
}

// TemplateFilterRelativeDateTimeControlInput is an input type that accepts TemplateFilterRelativeDateTimeControlArgs and TemplateFilterRelativeDateTimeControlOutput values.
// You can construct a concrete instance of `TemplateFilterRelativeDateTimeControlInput` via:
//
//	TemplateFilterRelativeDateTimeControlArgs{...}
type TemplateFilterRelativeDateTimeControlInput interface {
	pulumi.Input

	ToTemplateFilterRelativeDateTimeControlOutput() TemplateFilterRelativeDateTimeControlOutput
	ToTemplateFilterRelativeDateTimeControlOutputWithContext(context.Context) TemplateFilterRelativeDateTimeControlOutput
}

type TemplateFilterRelativeDateTimeControlArgs struct {
	DisplayOptions  TemplateRelativeDateTimeControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                                    `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                                    `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                                    `pulumi:"title"`
}

func (TemplateFilterRelativeDateTimeControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i TemplateFilterRelativeDateTimeControlArgs) ToTemplateFilterRelativeDateTimeControlOutput() TemplateFilterRelativeDateTimeControlOutput {
	return i.ToTemplateFilterRelativeDateTimeControlOutputWithContext(context.Background())
}

func (i TemplateFilterRelativeDateTimeControlArgs) ToTemplateFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterRelativeDateTimeControlOutput)
}

func (i TemplateFilterRelativeDateTimeControlArgs) ToTemplateFilterRelativeDateTimeControlPtrOutput() TemplateFilterRelativeDateTimeControlPtrOutput {
	return i.ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterRelativeDateTimeControlArgs) ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterRelativeDateTimeControlOutput).ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(ctx)
}

// TemplateFilterRelativeDateTimeControlPtrInput is an input type that accepts TemplateFilterRelativeDateTimeControlArgs, TemplateFilterRelativeDateTimeControlPtr and TemplateFilterRelativeDateTimeControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterRelativeDateTimeControlPtrInput` via:
//
//	        TemplateFilterRelativeDateTimeControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterRelativeDateTimeControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterRelativeDateTimeControlPtrOutput() TemplateFilterRelativeDateTimeControlPtrOutput
	ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(context.Context) TemplateFilterRelativeDateTimeControlPtrOutput
}

type templateFilterRelativeDateTimeControlPtrType TemplateFilterRelativeDateTimeControlArgs

func TemplateFilterRelativeDateTimeControlPtr(v *TemplateFilterRelativeDateTimeControlArgs) TemplateFilterRelativeDateTimeControlPtrInput {
	return (*templateFilterRelativeDateTimeControlPtrType)(v)
}

func (*templateFilterRelativeDateTimeControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterRelativeDateTimeControl)(nil)).Elem()
}

func (i *templateFilterRelativeDateTimeControlPtrType) ToTemplateFilterRelativeDateTimeControlPtrOutput() TemplateFilterRelativeDateTimeControlPtrOutput {
	return i.ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterRelativeDateTimeControlPtrType) ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterRelativeDateTimeControlPtrOutput)
}

type TemplateFilterRelativeDateTimeControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterRelativeDateTimeControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o TemplateFilterRelativeDateTimeControlOutput) ToTemplateFilterRelativeDateTimeControlOutput() TemplateFilterRelativeDateTimeControlOutput {
	return o
}

func (o TemplateFilterRelativeDateTimeControlOutput) ToTemplateFilterRelativeDateTimeControlOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlOutput {
	return o
}

func (o TemplateFilterRelativeDateTimeControlOutput) ToTemplateFilterRelativeDateTimeControlPtrOutput() TemplateFilterRelativeDateTimeControlPtrOutput {
	return o.ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterRelativeDateTimeControlOutput) ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterRelativeDateTimeControl) *TemplateFilterRelativeDateTimeControl {
		return &v
	}).(TemplateFilterRelativeDateTimeControlPtrOutput)
}

func (o TemplateFilterRelativeDateTimeControlOutput) DisplayOptions() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterRelativeDateTimeControl) *TemplateRelativeDateTimeControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterRelativeDateTimeControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterRelativeDateTimeControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterRelativeDateTimeControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterRelativeDateTimeControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterRelativeDateTimeControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterRelativeDateTimeControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateFilterRelativeDateTimeControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterRelativeDateTimeControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterRelativeDateTimeControl)(nil)).Elem()
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) ToTemplateFilterRelativeDateTimeControlPtrOutput() TemplateFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) ToTemplateFilterRelativeDateTimeControlPtrOutputWithContext(ctx context.Context) TemplateFilterRelativeDateTimeControlPtrOutput {
	return o
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) Elem() TemplateFilterRelativeDateTimeControlOutput {
	return o.ApplyT(func(v *TemplateFilterRelativeDateTimeControl) TemplateFilterRelativeDateTimeControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterRelativeDateTimeControl
		return ret
	}).(TemplateFilterRelativeDateTimeControlOutput)
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) DisplayOptions() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterRelativeDateTimeControl) *TemplateRelativeDateTimeControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterRelativeDateTimeControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterRelativeDateTimeControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateFilterScopeConfiguration struct {
	AllSheets      *TemplateAllSheetsFilterScopeConfiguration      `pulumi:"allSheets"`
	SelectedSheets *TemplateSelectedSheetsFilterScopeConfiguration `pulumi:"selectedSheets"`
}

// TemplateFilterScopeConfigurationInput is an input type that accepts TemplateFilterScopeConfigurationArgs and TemplateFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `TemplateFilterScopeConfigurationInput` via:
//
//	TemplateFilterScopeConfigurationArgs{...}
type TemplateFilterScopeConfigurationInput interface {
	pulumi.Input

	ToTemplateFilterScopeConfigurationOutput() TemplateFilterScopeConfigurationOutput
	ToTemplateFilterScopeConfigurationOutputWithContext(context.Context) TemplateFilterScopeConfigurationOutput
}

type TemplateFilterScopeConfigurationArgs struct {
	AllSheets      TemplateAllSheetsFilterScopeConfigurationPtrInput      `pulumi:"allSheets"`
	SelectedSheets TemplateSelectedSheetsFilterScopeConfigurationPtrInput `pulumi:"selectedSheets"`
}

func (TemplateFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterScopeConfiguration)(nil)).Elem()
}

func (i TemplateFilterScopeConfigurationArgs) ToTemplateFilterScopeConfigurationOutput() TemplateFilterScopeConfigurationOutput {
	return i.ToTemplateFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i TemplateFilterScopeConfigurationArgs) ToTemplateFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterScopeConfigurationOutput)
}

type TemplateFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterScopeConfiguration)(nil)).Elem()
}

func (o TemplateFilterScopeConfigurationOutput) ToTemplateFilterScopeConfigurationOutput() TemplateFilterScopeConfigurationOutput {
	return o
}

func (o TemplateFilterScopeConfigurationOutput) ToTemplateFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateFilterScopeConfigurationOutput {
	return o
}

func (o TemplateFilterScopeConfigurationOutput) AllSheets() TemplateAllSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilterScopeConfiguration) *TemplateAllSheetsFilterScopeConfiguration {
		return v.AllSheets
	}).(TemplateAllSheetsFilterScopeConfigurationPtrOutput)
}

func (o TemplateFilterScopeConfigurationOutput) SelectedSheets() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFilterScopeConfiguration) *TemplateSelectedSheetsFilterScopeConfiguration {
		return v.SelectedSheets
	}).(TemplateSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type TemplateFilterSelectableValues struct {
	Values []string `pulumi:"values"`
}

// TemplateFilterSelectableValuesInput is an input type that accepts TemplateFilterSelectableValuesArgs and TemplateFilterSelectableValuesOutput values.
// You can construct a concrete instance of `TemplateFilterSelectableValuesInput` via:
//
//	TemplateFilterSelectableValuesArgs{...}
type TemplateFilterSelectableValuesInput interface {
	pulumi.Input

	ToTemplateFilterSelectableValuesOutput() TemplateFilterSelectableValuesOutput
	ToTemplateFilterSelectableValuesOutputWithContext(context.Context) TemplateFilterSelectableValuesOutput
}

type TemplateFilterSelectableValuesArgs struct {
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (TemplateFilterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterSelectableValues)(nil)).Elem()
}

func (i TemplateFilterSelectableValuesArgs) ToTemplateFilterSelectableValuesOutput() TemplateFilterSelectableValuesOutput {
	return i.ToTemplateFilterSelectableValuesOutputWithContext(context.Background())
}

func (i TemplateFilterSelectableValuesArgs) ToTemplateFilterSelectableValuesOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSelectableValuesOutput)
}

func (i TemplateFilterSelectableValuesArgs) ToTemplateFilterSelectableValuesPtrOutput() TemplateFilterSelectableValuesPtrOutput {
	return i.ToTemplateFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i TemplateFilterSelectableValuesArgs) ToTemplateFilterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSelectableValuesOutput).ToTemplateFilterSelectableValuesPtrOutputWithContext(ctx)
}

// TemplateFilterSelectableValuesPtrInput is an input type that accepts TemplateFilterSelectableValuesArgs, TemplateFilterSelectableValuesPtr and TemplateFilterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `TemplateFilterSelectableValuesPtrInput` via:
//
//	        TemplateFilterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterSelectableValuesPtrInput interface {
	pulumi.Input

	ToTemplateFilterSelectableValuesPtrOutput() TemplateFilterSelectableValuesPtrOutput
	ToTemplateFilterSelectableValuesPtrOutputWithContext(context.Context) TemplateFilterSelectableValuesPtrOutput
}

type templateFilterSelectableValuesPtrType TemplateFilterSelectableValuesArgs

func TemplateFilterSelectableValuesPtr(v *TemplateFilterSelectableValuesArgs) TemplateFilterSelectableValuesPtrInput {
	return (*templateFilterSelectableValuesPtrType)(v)
}

func (*templateFilterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterSelectableValues)(nil)).Elem()
}

func (i *templateFilterSelectableValuesPtrType) ToTemplateFilterSelectableValuesPtrOutput() TemplateFilterSelectableValuesPtrOutput {
	return i.ToTemplateFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *templateFilterSelectableValuesPtrType) ToTemplateFilterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSelectableValuesPtrOutput)
}

type TemplateFilterSelectableValuesOutput struct{ *pulumi.OutputState }

func (TemplateFilterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterSelectableValues)(nil)).Elem()
}

func (o TemplateFilterSelectableValuesOutput) ToTemplateFilterSelectableValuesOutput() TemplateFilterSelectableValuesOutput {
	return o
}

func (o TemplateFilterSelectableValuesOutput) ToTemplateFilterSelectableValuesOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesOutput {
	return o
}

func (o TemplateFilterSelectableValuesOutput) ToTemplateFilterSelectableValuesPtrOutput() TemplateFilterSelectableValuesPtrOutput {
	return o.ToTemplateFilterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o TemplateFilterSelectableValuesOutput) ToTemplateFilterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterSelectableValues) *TemplateFilterSelectableValues {
		return &v
	}).(TemplateFilterSelectableValuesPtrOutput)
}

func (o TemplateFilterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateFilterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type TemplateFilterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterSelectableValues)(nil)).Elem()
}

func (o TemplateFilterSelectableValuesPtrOutput) ToTemplateFilterSelectableValuesPtrOutput() TemplateFilterSelectableValuesPtrOutput {
	return o
}

func (o TemplateFilterSelectableValuesPtrOutput) ToTemplateFilterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateFilterSelectableValuesPtrOutput {
	return o
}

func (o TemplateFilterSelectableValuesPtrOutput) Elem() TemplateFilterSelectableValuesOutput {
	return o.ApplyT(func(v *TemplateFilterSelectableValues) TemplateFilterSelectableValues {
		if v != nil {
			return *v
		}
		var ret TemplateFilterSelectableValues
		return ret
	}).(TemplateFilterSelectableValuesOutput)
}

func (o TemplateFilterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateFilterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type TemplateFilterSliderControl struct {
	DisplayOptions  *TemplateSliderControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                               `pulumi:"filterControlId"`
	MaximumValue    float64                              `pulumi:"maximumValue"`
	MinimumValue    float64                              `pulumi:"minimumValue"`
	SourceFilterId  string                               `pulumi:"sourceFilterId"`
	StepSize        float64                              `pulumi:"stepSize"`
	Title           string                               `pulumi:"title"`
	Type            *TemplateSheetControlSliderType      `pulumi:"type"`
}

// TemplateFilterSliderControlInput is an input type that accepts TemplateFilterSliderControlArgs and TemplateFilterSliderControlOutput values.
// You can construct a concrete instance of `TemplateFilterSliderControlInput` via:
//
//	TemplateFilterSliderControlArgs{...}
type TemplateFilterSliderControlInput interface {
	pulumi.Input

	ToTemplateFilterSliderControlOutput() TemplateFilterSliderControlOutput
	ToTemplateFilterSliderControlOutputWithContext(context.Context) TemplateFilterSliderControlOutput
}

type TemplateFilterSliderControlArgs struct {
	DisplayOptions  TemplateSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                          `pulumi:"filterControlId"`
	MaximumValue    pulumi.Float64Input                         `pulumi:"maximumValue"`
	MinimumValue    pulumi.Float64Input                         `pulumi:"minimumValue"`
	SourceFilterId  pulumi.StringInput                          `pulumi:"sourceFilterId"`
	StepSize        pulumi.Float64Input                         `pulumi:"stepSize"`
	Title           pulumi.StringInput                          `pulumi:"title"`
	Type            TemplateSheetControlSliderTypePtrInput      `pulumi:"type"`
}

func (TemplateFilterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterSliderControl)(nil)).Elem()
}

func (i TemplateFilterSliderControlArgs) ToTemplateFilterSliderControlOutput() TemplateFilterSliderControlOutput {
	return i.ToTemplateFilterSliderControlOutputWithContext(context.Background())
}

func (i TemplateFilterSliderControlArgs) ToTemplateFilterSliderControlOutputWithContext(ctx context.Context) TemplateFilterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSliderControlOutput)
}

func (i TemplateFilterSliderControlArgs) ToTemplateFilterSliderControlPtrOutput() TemplateFilterSliderControlPtrOutput {
	return i.ToTemplateFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterSliderControlArgs) ToTemplateFilterSliderControlPtrOutputWithContext(ctx context.Context) TemplateFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSliderControlOutput).ToTemplateFilterSliderControlPtrOutputWithContext(ctx)
}

// TemplateFilterSliderControlPtrInput is an input type that accepts TemplateFilterSliderControlArgs, TemplateFilterSliderControlPtr and TemplateFilterSliderControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterSliderControlPtrInput` via:
//
//	        TemplateFilterSliderControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterSliderControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterSliderControlPtrOutput() TemplateFilterSliderControlPtrOutput
	ToTemplateFilterSliderControlPtrOutputWithContext(context.Context) TemplateFilterSliderControlPtrOutput
}

type templateFilterSliderControlPtrType TemplateFilterSliderControlArgs

func TemplateFilterSliderControlPtr(v *TemplateFilterSliderControlArgs) TemplateFilterSliderControlPtrInput {
	return (*templateFilterSliderControlPtrType)(v)
}

func (*templateFilterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterSliderControl)(nil)).Elem()
}

func (i *templateFilterSliderControlPtrType) ToTemplateFilterSliderControlPtrOutput() TemplateFilterSliderControlPtrOutput {
	return i.ToTemplateFilterSliderControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterSliderControlPtrType) ToTemplateFilterSliderControlPtrOutputWithContext(ctx context.Context) TemplateFilterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterSliderControlPtrOutput)
}

type TemplateFilterSliderControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterSliderControl)(nil)).Elem()
}

func (o TemplateFilterSliderControlOutput) ToTemplateFilterSliderControlOutput() TemplateFilterSliderControlOutput {
	return o
}

func (o TemplateFilterSliderControlOutput) ToTemplateFilterSliderControlOutputWithContext(ctx context.Context) TemplateFilterSliderControlOutput {
	return o
}

func (o TemplateFilterSliderControlOutput) ToTemplateFilterSliderControlPtrOutput() TemplateFilterSliderControlPtrOutput {
	return o.ToTemplateFilterSliderControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterSliderControlOutput) ToTemplateFilterSliderControlPtrOutputWithContext(ctx context.Context) TemplateFilterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterSliderControl) *TemplateFilterSliderControl {
		return &v
	}).(TemplateFilterSliderControlPtrOutput)
}

func (o TemplateFilterSliderControlOutput) DisplayOptions() TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterSliderControl) *TemplateSliderControlDisplayOptions { return v.DisplayOptions }).(TemplateSliderControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterSliderControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterSliderControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateFilterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o TemplateFilterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateFilterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o TemplateFilterSliderControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterSliderControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateFilterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o TemplateFilterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateFilterSliderControlOutput) Type() TemplateSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v TemplateFilterSliderControl) *TemplateSheetControlSliderType { return v.Type }).(TemplateSheetControlSliderTypePtrOutput)
}

type TemplateFilterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterSliderControl)(nil)).Elem()
}

func (o TemplateFilterSliderControlPtrOutput) ToTemplateFilterSliderControlPtrOutput() TemplateFilterSliderControlPtrOutput {
	return o
}

func (o TemplateFilterSliderControlPtrOutput) ToTemplateFilterSliderControlPtrOutputWithContext(ctx context.Context) TemplateFilterSliderControlPtrOutput {
	return o
}

func (o TemplateFilterSliderControlPtrOutput) Elem() TemplateFilterSliderControlOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) TemplateFilterSliderControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterSliderControl
		return ret
	}).(TemplateFilterSliderControlOutput)
}

func (o TemplateFilterSliderControlPtrOutput) DisplayOptions() TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *TemplateSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateSliderControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterSliderControlPtrOutput) Type() TemplateSheetControlSliderTypePtrOutput {
	return o.ApplyT(func(v *TemplateFilterSliderControl) *TemplateSheetControlSliderType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlSliderTypePtrOutput)
}

type TemplateFilterTextAreaControl struct {
	Delimiter       *string                                `pulumi:"delimiter"`
	DisplayOptions  *TemplateTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                 `pulumi:"filterControlId"`
	SourceFilterId  string                                 `pulumi:"sourceFilterId"`
	Title           string                                 `pulumi:"title"`
}

// TemplateFilterTextAreaControlInput is an input type that accepts TemplateFilterTextAreaControlArgs and TemplateFilterTextAreaControlOutput values.
// You can construct a concrete instance of `TemplateFilterTextAreaControlInput` via:
//
//	TemplateFilterTextAreaControlArgs{...}
type TemplateFilterTextAreaControlInput interface {
	pulumi.Input

	ToTemplateFilterTextAreaControlOutput() TemplateFilterTextAreaControlOutput
	ToTemplateFilterTextAreaControlOutputWithContext(context.Context) TemplateFilterTextAreaControlOutput
}

type TemplateFilterTextAreaControlArgs struct {
	Delimiter       pulumi.StringPtrInput                         `pulumi:"delimiter"`
	DisplayOptions  TemplateTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                            `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                            `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                            `pulumi:"title"`
}

func (TemplateFilterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterTextAreaControl)(nil)).Elem()
}

func (i TemplateFilterTextAreaControlArgs) ToTemplateFilterTextAreaControlOutput() TemplateFilterTextAreaControlOutput {
	return i.ToTemplateFilterTextAreaControlOutputWithContext(context.Background())
}

func (i TemplateFilterTextAreaControlArgs) ToTemplateFilterTextAreaControlOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextAreaControlOutput)
}

func (i TemplateFilterTextAreaControlArgs) ToTemplateFilterTextAreaControlPtrOutput() TemplateFilterTextAreaControlPtrOutput {
	return i.ToTemplateFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterTextAreaControlArgs) ToTemplateFilterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextAreaControlOutput).ToTemplateFilterTextAreaControlPtrOutputWithContext(ctx)
}

// TemplateFilterTextAreaControlPtrInput is an input type that accepts TemplateFilterTextAreaControlArgs, TemplateFilterTextAreaControlPtr and TemplateFilterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterTextAreaControlPtrInput` via:
//
//	        TemplateFilterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterTextAreaControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterTextAreaControlPtrOutput() TemplateFilterTextAreaControlPtrOutput
	ToTemplateFilterTextAreaControlPtrOutputWithContext(context.Context) TemplateFilterTextAreaControlPtrOutput
}

type templateFilterTextAreaControlPtrType TemplateFilterTextAreaControlArgs

func TemplateFilterTextAreaControlPtr(v *TemplateFilterTextAreaControlArgs) TemplateFilterTextAreaControlPtrInput {
	return (*templateFilterTextAreaControlPtrType)(v)
}

func (*templateFilterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterTextAreaControl)(nil)).Elem()
}

func (i *templateFilterTextAreaControlPtrType) ToTemplateFilterTextAreaControlPtrOutput() TemplateFilterTextAreaControlPtrOutput {
	return i.ToTemplateFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterTextAreaControlPtrType) ToTemplateFilterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextAreaControlPtrOutput)
}

type TemplateFilterTextAreaControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterTextAreaControl)(nil)).Elem()
}

func (o TemplateFilterTextAreaControlOutput) ToTemplateFilterTextAreaControlOutput() TemplateFilterTextAreaControlOutput {
	return o
}

func (o TemplateFilterTextAreaControlOutput) ToTemplateFilterTextAreaControlOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlOutput {
	return o
}

func (o TemplateFilterTextAreaControlOutput) ToTemplateFilterTextAreaControlPtrOutput() TemplateFilterTextAreaControlPtrOutput {
	return o.ToTemplateFilterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterTextAreaControlOutput) ToTemplateFilterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterTextAreaControl) *TemplateFilterTextAreaControl {
		return &v
	}).(TemplateFilterTextAreaControlPtrOutput)
}

func (o TemplateFilterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFilterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextAreaControlOutput) DisplayOptions() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterTextAreaControl) *TemplateTextAreaControlDisplayOptions { return v.DisplayOptions }).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterTextAreaControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextAreaControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterTextAreaControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextAreaControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateFilterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterTextAreaControl)(nil)).Elem()
}

func (o TemplateFilterTextAreaControlPtrOutput) ToTemplateFilterTextAreaControlPtrOutput() TemplateFilterTextAreaControlPtrOutput {
	return o
}

func (o TemplateFilterTextAreaControlPtrOutput) ToTemplateFilterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextAreaControlPtrOutput {
	return o
}

func (o TemplateFilterTextAreaControlPtrOutput) Elem() TemplateFilterTextAreaControlOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) TemplateFilterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterTextAreaControl
		return ret
	}).(TemplateFilterTextAreaControlOutput)
}

func (o TemplateFilterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextAreaControlPtrOutput) DisplayOptions() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) *TemplateTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterTextAreaControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextAreaControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateFilterTextFieldControl struct {
	DisplayOptions  *TemplateTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	FilterControlId string                                  `pulumi:"filterControlId"`
	SourceFilterId  string                                  `pulumi:"sourceFilterId"`
	Title           string                                  `pulumi:"title"`
}

// TemplateFilterTextFieldControlInput is an input type that accepts TemplateFilterTextFieldControlArgs and TemplateFilterTextFieldControlOutput values.
// You can construct a concrete instance of `TemplateFilterTextFieldControlInput` via:
//
//	TemplateFilterTextFieldControlArgs{...}
type TemplateFilterTextFieldControlInput interface {
	pulumi.Input

	ToTemplateFilterTextFieldControlOutput() TemplateFilterTextFieldControlOutput
	ToTemplateFilterTextFieldControlOutputWithContext(context.Context) TemplateFilterTextFieldControlOutput
}

type TemplateFilterTextFieldControlArgs struct {
	DisplayOptions  TemplateTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	FilterControlId pulumi.StringInput                             `pulumi:"filterControlId"`
	SourceFilterId  pulumi.StringInput                             `pulumi:"sourceFilterId"`
	Title           pulumi.StringInput                             `pulumi:"title"`
}

func (TemplateFilterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterTextFieldControl)(nil)).Elem()
}

func (i TemplateFilterTextFieldControlArgs) ToTemplateFilterTextFieldControlOutput() TemplateFilterTextFieldControlOutput {
	return i.ToTemplateFilterTextFieldControlOutputWithContext(context.Background())
}

func (i TemplateFilterTextFieldControlArgs) ToTemplateFilterTextFieldControlOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextFieldControlOutput)
}

func (i TemplateFilterTextFieldControlArgs) ToTemplateFilterTextFieldControlPtrOutput() TemplateFilterTextFieldControlPtrOutput {
	return i.ToTemplateFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i TemplateFilterTextFieldControlArgs) ToTemplateFilterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextFieldControlOutput).ToTemplateFilterTextFieldControlPtrOutputWithContext(ctx)
}

// TemplateFilterTextFieldControlPtrInput is an input type that accepts TemplateFilterTextFieldControlArgs, TemplateFilterTextFieldControlPtr and TemplateFilterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `TemplateFilterTextFieldControlPtrInput` via:
//
//	        TemplateFilterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type TemplateFilterTextFieldControlPtrInput interface {
	pulumi.Input

	ToTemplateFilterTextFieldControlPtrOutput() TemplateFilterTextFieldControlPtrOutput
	ToTemplateFilterTextFieldControlPtrOutputWithContext(context.Context) TemplateFilterTextFieldControlPtrOutput
}

type templateFilterTextFieldControlPtrType TemplateFilterTextFieldControlArgs

func TemplateFilterTextFieldControlPtr(v *TemplateFilterTextFieldControlArgs) TemplateFilterTextFieldControlPtrInput {
	return (*templateFilterTextFieldControlPtrType)(v)
}

func (*templateFilterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterTextFieldControl)(nil)).Elem()
}

func (i *templateFilterTextFieldControlPtrType) ToTemplateFilterTextFieldControlPtrOutput() TemplateFilterTextFieldControlPtrOutput {
	return i.ToTemplateFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *templateFilterTextFieldControlPtrType) ToTemplateFilterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFilterTextFieldControlPtrOutput)
}

type TemplateFilterTextFieldControlOutput struct{ *pulumi.OutputState }

func (TemplateFilterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFilterTextFieldControl)(nil)).Elem()
}

func (o TemplateFilterTextFieldControlOutput) ToTemplateFilterTextFieldControlOutput() TemplateFilterTextFieldControlOutput {
	return o
}

func (o TemplateFilterTextFieldControlOutput) ToTemplateFilterTextFieldControlOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlOutput {
	return o
}

func (o TemplateFilterTextFieldControlOutput) ToTemplateFilterTextFieldControlPtrOutput() TemplateFilterTextFieldControlPtrOutput {
	return o.ToTemplateFilterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o TemplateFilterTextFieldControlOutput) ToTemplateFilterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFilterTextFieldControl) *TemplateFilterTextFieldControl {
		return &v
	}).(TemplateFilterTextFieldControlPtrOutput)
}

func (o TemplateFilterTextFieldControlOutput) DisplayOptions() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFilterTextFieldControl) *TemplateTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterTextFieldControlOutput) FilterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextFieldControl) string { return v.FilterControlId }).(pulumi.StringOutput)
}

func (o TemplateFilterTextFieldControlOutput) SourceFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextFieldControl) string { return v.SourceFilterId }).(pulumi.StringOutput)
}

func (o TemplateFilterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFilterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateFilterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateFilterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFilterTextFieldControl)(nil)).Elem()
}

func (o TemplateFilterTextFieldControlPtrOutput) ToTemplateFilterTextFieldControlPtrOutput() TemplateFilterTextFieldControlPtrOutput {
	return o
}

func (o TemplateFilterTextFieldControlPtrOutput) ToTemplateFilterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateFilterTextFieldControlPtrOutput {
	return o
}

func (o TemplateFilterTextFieldControlPtrOutput) Elem() TemplateFilterTextFieldControlOutput {
	return o.ApplyT(func(v *TemplateFilterTextFieldControl) TemplateFilterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret TemplateFilterTextFieldControl
		return ret
	}).(TemplateFilterTextFieldControlOutput)
}

func (o TemplateFilterTextFieldControlPtrOutput) DisplayOptions() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextFieldControl) *TemplateTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

func (o TemplateFilterTextFieldControlPtrOutput) FilterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.FilterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextFieldControlPtrOutput) SourceFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceFilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFilterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFilterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateFontConfiguration struct {
	FontColor      *string                 `pulumi:"fontColor"`
	FontDecoration *TemplateFontDecoration `pulumi:"fontDecoration"`
	FontSize       *TemplateFontSize       `pulumi:"fontSize"`
	FontStyle      *TemplateFontStyle      `pulumi:"fontStyle"`
	FontWeight     *TemplateFontWeight     `pulumi:"fontWeight"`
}

// TemplateFontConfigurationInput is an input type that accepts TemplateFontConfigurationArgs and TemplateFontConfigurationOutput values.
// You can construct a concrete instance of `TemplateFontConfigurationInput` via:
//
//	TemplateFontConfigurationArgs{...}
type TemplateFontConfigurationInput interface {
	pulumi.Input

	ToTemplateFontConfigurationOutput() TemplateFontConfigurationOutput
	ToTemplateFontConfigurationOutputWithContext(context.Context) TemplateFontConfigurationOutput
}

type TemplateFontConfigurationArgs struct {
	FontColor      pulumi.StringPtrInput          `pulumi:"fontColor"`
	FontDecoration TemplateFontDecorationPtrInput `pulumi:"fontDecoration"`
	FontSize       TemplateFontSizePtrInput       `pulumi:"fontSize"`
	FontStyle      TemplateFontStylePtrInput      `pulumi:"fontStyle"`
	FontWeight     TemplateFontWeightPtrInput     `pulumi:"fontWeight"`
}

func (TemplateFontConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontConfiguration)(nil)).Elem()
}

func (i TemplateFontConfigurationArgs) ToTemplateFontConfigurationOutput() TemplateFontConfigurationOutput {
	return i.ToTemplateFontConfigurationOutputWithContext(context.Background())
}

func (i TemplateFontConfigurationArgs) ToTemplateFontConfigurationOutputWithContext(ctx context.Context) TemplateFontConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontConfigurationOutput)
}

func (i TemplateFontConfigurationArgs) ToTemplateFontConfigurationPtrOutput() TemplateFontConfigurationPtrOutput {
	return i.ToTemplateFontConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFontConfigurationArgs) ToTemplateFontConfigurationPtrOutputWithContext(ctx context.Context) TemplateFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontConfigurationOutput).ToTemplateFontConfigurationPtrOutputWithContext(ctx)
}

// TemplateFontConfigurationPtrInput is an input type that accepts TemplateFontConfigurationArgs, TemplateFontConfigurationPtr and TemplateFontConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFontConfigurationPtrInput` via:
//
//	        TemplateFontConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFontConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFontConfigurationPtrOutput() TemplateFontConfigurationPtrOutput
	ToTemplateFontConfigurationPtrOutputWithContext(context.Context) TemplateFontConfigurationPtrOutput
}

type templateFontConfigurationPtrType TemplateFontConfigurationArgs

func TemplateFontConfigurationPtr(v *TemplateFontConfigurationArgs) TemplateFontConfigurationPtrInput {
	return (*templateFontConfigurationPtrType)(v)
}

func (*templateFontConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontConfiguration)(nil)).Elem()
}

func (i *templateFontConfigurationPtrType) ToTemplateFontConfigurationPtrOutput() TemplateFontConfigurationPtrOutput {
	return i.ToTemplateFontConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFontConfigurationPtrType) ToTemplateFontConfigurationPtrOutputWithContext(ctx context.Context) TemplateFontConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontConfigurationPtrOutput)
}

type TemplateFontConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFontConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontConfiguration)(nil)).Elem()
}

func (o TemplateFontConfigurationOutput) ToTemplateFontConfigurationOutput() TemplateFontConfigurationOutput {
	return o
}

func (o TemplateFontConfigurationOutput) ToTemplateFontConfigurationOutputWithContext(ctx context.Context) TemplateFontConfigurationOutput {
	return o
}

func (o TemplateFontConfigurationOutput) ToTemplateFontConfigurationPtrOutput() TemplateFontConfigurationPtrOutput {
	return o.ToTemplateFontConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFontConfigurationOutput) ToTemplateFontConfigurationPtrOutputWithContext(ctx context.Context) TemplateFontConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontConfiguration) *TemplateFontConfiguration {
		return &v
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateFontConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFontConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o TemplateFontConfigurationOutput) FontDecoration() TemplateFontDecorationPtrOutput {
	return o.ApplyT(func(v TemplateFontConfiguration) *TemplateFontDecoration { return v.FontDecoration }).(TemplateFontDecorationPtrOutput)
}

func (o TemplateFontConfigurationOutput) FontSize() TemplateFontSizePtrOutput {
	return o.ApplyT(func(v TemplateFontConfiguration) *TemplateFontSize { return v.FontSize }).(TemplateFontSizePtrOutput)
}

func (o TemplateFontConfigurationOutput) FontStyle() TemplateFontStylePtrOutput {
	return o.ApplyT(func(v TemplateFontConfiguration) *TemplateFontStyle { return v.FontStyle }).(TemplateFontStylePtrOutput)
}

func (o TemplateFontConfigurationOutput) FontWeight() TemplateFontWeightPtrOutput {
	return o.ApplyT(func(v TemplateFontConfiguration) *TemplateFontWeight { return v.FontWeight }).(TemplateFontWeightPtrOutput)
}

type TemplateFontConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFontConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontConfiguration)(nil)).Elem()
}

func (o TemplateFontConfigurationPtrOutput) ToTemplateFontConfigurationPtrOutput() TemplateFontConfigurationPtrOutput {
	return o
}

func (o TemplateFontConfigurationPtrOutput) ToTemplateFontConfigurationPtrOutputWithContext(ctx context.Context) TemplateFontConfigurationPtrOutput {
	return o
}

func (o TemplateFontConfigurationPtrOutput) Elem() TemplateFontConfigurationOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) TemplateFontConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFontConfiguration
		return ret
	}).(TemplateFontConfigurationOutput)
}

func (o TemplateFontConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFontConfigurationPtrOutput) FontDecoration() TemplateFontDecorationPtrOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) *TemplateFontDecoration {
		if v == nil {
			return nil
		}
		return v.FontDecoration
	}).(TemplateFontDecorationPtrOutput)
}

func (o TemplateFontConfigurationPtrOutput) FontSize() TemplateFontSizePtrOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) *TemplateFontSize {
		if v == nil {
			return nil
		}
		return v.FontSize
	}).(TemplateFontSizePtrOutput)
}

func (o TemplateFontConfigurationPtrOutput) FontStyle() TemplateFontStylePtrOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) *TemplateFontStyle {
		if v == nil {
			return nil
		}
		return v.FontStyle
	}).(TemplateFontStylePtrOutput)
}

func (o TemplateFontConfigurationPtrOutput) FontWeight() TemplateFontWeightPtrOutput {
	return o.ApplyT(func(v *TemplateFontConfiguration) *TemplateFontWeight {
		if v == nil {
			return nil
		}
		return v.FontWeight
	}).(TemplateFontWeightPtrOutput)
}

type TemplateFontSize struct {
	Relative *TemplateRelativeFontSize `pulumi:"relative"`
}

// TemplateFontSizeInput is an input type that accepts TemplateFontSizeArgs and TemplateFontSizeOutput values.
// You can construct a concrete instance of `TemplateFontSizeInput` via:
//
//	TemplateFontSizeArgs{...}
type TemplateFontSizeInput interface {
	pulumi.Input

	ToTemplateFontSizeOutput() TemplateFontSizeOutput
	ToTemplateFontSizeOutputWithContext(context.Context) TemplateFontSizeOutput
}

type TemplateFontSizeArgs struct {
	Relative TemplateRelativeFontSizePtrInput `pulumi:"relative"`
}

func (TemplateFontSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontSize)(nil)).Elem()
}

func (i TemplateFontSizeArgs) ToTemplateFontSizeOutput() TemplateFontSizeOutput {
	return i.ToTemplateFontSizeOutputWithContext(context.Background())
}

func (i TemplateFontSizeArgs) ToTemplateFontSizeOutputWithContext(ctx context.Context) TemplateFontSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontSizeOutput)
}

func (i TemplateFontSizeArgs) ToTemplateFontSizePtrOutput() TemplateFontSizePtrOutput {
	return i.ToTemplateFontSizePtrOutputWithContext(context.Background())
}

func (i TemplateFontSizeArgs) ToTemplateFontSizePtrOutputWithContext(ctx context.Context) TemplateFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontSizeOutput).ToTemplateFontSizePtrOutputWithContext(ctx)
}

// TemplateFontSizePtrInput is an input type that accepts TemplateFontSizeArgs, TemplateFontSizePtr and TemplateFontSizePtrOutput values.
// You can construct a concrete instance of `TemplateFontSizePtrInput` via:
//
//	        TemplateFontSizeArgs{...}
//
//	or:
//
//	        nil
type TemplateFontSizePtrInput interface {
	pulumi.Input

	ToTemplateFontSizePtrOutput() TemplateFontSizePtrOutput
	ToTemplateFontSizePtrOutputWithContext(context.Context) TemplateFontSizePtrOutput
}

type templateFontSizePtrType TemplateFontSizeArgs

func TemplateFontSizePtr(v *TemplateFontSizeArgs) TemplateFontSizePtrInput {
	return (*templateFontSizePtrType)(v)
}

func (*templateFontSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontSize)(nil)).Elem()
}

func (i *templateFontSizePtrType) ToTemplateFontSizePtrOutput() TemplateFontSizePtrOutput {
	return i.ToTemplateFontSizePtrOutputWithContext(context.Background())
}

func (i *templateFontSizePtrType) ToTemplateFontSizePtrOutputWithContext(ctx context.Context) TemplateFontSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontSizePtrOutput)
}

type TemplateFontSizeOutput struct{ *pulumi.OutputState }

func (TemplateFontSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontSize)(nil)).Elem()
}

func (o TemplateFontSizeOutput) ToTemplateFontSizeOutput() TemplateFontSizeOutput {
	return o
}

func (o TemplateFontSizeOutput) ToTemplateFontSizeOutputWithContext(ctx context.Context) TemplateFontSizeOutput {
	return o
}

func (o TemplateFontSizeOutput) ToTemplateFontSizePtrOutput() TemplateFontSizePtrOutput {
	return o.ToTemplateFontSizePtrOutputWithContext(context.Background())
}

func (o TemplateFontSizeOutput) ToTemplateFontSizePtrOutputWithContext(ctx context.Context) TemplateFontSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontSize) *TemplateFontSize {
		return &v
	}).(TemplateFontSizePtrOutput)
}

func (o TemplateFontSizeOutput) Relative() TemplateRelativeFontSizePtrOutput {
	return o.ApplyT(func(v TemplateFontSize) *TemplateRelativeFontSize { return v.Relative }).(TemplateRelativeFontSizePtrOutput)
}

type TemplateFontSizePtrOutput struct{ *pulumi.OutputState }

func (TemplateFontSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontSize)(nil)).Elem()
}

func (o TemplateFontSizePtrOutput) ToTemplateFontSizePtrOutput() TemplateFontSizePtrOutput {
	return o
}

func (o TemplateFontSizePtrOutput) ToTemplateFontSizePtrOutputWithContext(ctx context.Context) TemplateFontSizePtrOutput {
	return o
}

func (o TemplateFontSizePtrOutput) Elem() TemplateFontSizeOutput {
	return o.ApplyT(func(v *TemplateFontSize) TemplateFontSize {
		if v != nil {
			return *v
		}
		var ret TemplateFontSize
		return ret
	}).(TemplateFontSizeOutput)
}

func (o TemplateFontSizePtrOutput) Relative() TemplateRelativeFontSizePtrOutput {
	return o.ApplyT(func(v *TemplateFontSize) *TemplateRelativeFontSize {
		if v == nil {
			return nil
		}
		return v.Relative
	}).(TemplateRelativeFontSizePtrOutput)
}

type TemplateFontWeight struct {
	Name *TemplateFontWeightName `pulumi:"name"`
}

// TemplateFontWeightInput is an input type that accepts TemplateFontWeightArgs and TemplateFontWeightOutput values.
// You can construct a concrete instance of `TemplateFontWeightInput` via:
//
//	TemplateFontWeightArgs{...}
type TemplateFontWeightInput interface {
	pulumi.Input

	ToTemplateFontWeightOutput() TemplateFontWeightOutput
	ToTemplateFontWeightOutputWithContext(context.Context) TemplateFontWeightOutput
}

type TemplateFontWeightArgs struct {
	Name TemplateFontWeightNamePtrInput `pulumi:"name"`
}

func (TemplateFontWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontWeight)(nil)).Elem()
}

func (i TemplateFontWeightArgs) ToTemplateFontWeightOutput() TemplateFontWeightOutput {
	return i.ToTemplateFontWeightOutputWithContext(context.Background())
}

func (i TemplateFontWeightArgs) ToTemplateFontWeightOutputWithContext(ctx context.Context) TemplateFontWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontWeightOutput)
}

func (i TemplateFontWeightArgs) ToTemplateFontWeightPtrOutput() TemplateFontWeightPtrOutput {
	return i.ToTemplateFontWeightPtrOutputWithContext(context.Background())
}

func (i TemplateFontWeightArgs) ToTemplateFontWeightPtrOutputWithContext(ctx context.Context) TemplateFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontWeightOutput).ToTemplateFontWeightPtrOutputWithContext(ctx)
}

// TemplateFontWeightPtrInput is an input type that accepts TemplateFontWeightArgs, TemplateFontWeightPtr and TemplateFontWeightPtrOutput values.
// You can construct a concrete instance of `TemplateFontWeightPtrInput` via:
//
//	        TemplateFontWeightArgs{...}
//
//	or:
//
//	        nil
type TemplateFontWeightPtrInput interface {
	pulumi.Input

	ToTemplateFontWeightPtrOutput() TemplateFontWeightPtrOutput
	ToTemplateFontWeightPtrOutputWithContext(context.Context) TemplateFontWeightPtrOutput
}

type templateFontWeightPtrType TemplateFontWeightArgs

func TemplateFontWeightPtr(v *TemplateFontWeightArgs) TemplateFontWeightPtrInput {
	return (*templateFontWeightPtrType)(v)
}

func (*templateFontWeightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontWeight)(nil)).Elem()
}

func (i *templateFontWeightPtrType) ToTemplateFontWeightPtrOutput() TemplateFontWeightPtrOutput {
	return i.ToTemplateFontWeightPtrOutputWithContext(context.Background())
}

func (i *templateFontWeightPtrType) ToTemplateFontWeightPtrOutputWithContext(ctx context.Context) TemplateFontWeightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFontWeightPtrOutput)
}

type TemplateFontWeightOutput struct{ *pulumi.OutputState }

func (TemplateFontWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFontWeight)(nil)).Elem()
}

func (o TemplateFontWeightOutput) ToTemplateFontWeightOutput() TemplateFontWeightOutput {
	return o
}

func (o TemplateFontWeightOutput) ToTemplateFontWeightOutputWithContext(ctx context.Context) TemplateFontWeightOutput {
	return o
}

func (o TemplateFontWeightOutput) ToTemplateFontWeightPtrOutput() TemplateFontWeightPtrOutput {
	return o.ToTemplateFontWeightPtrOutputWithContext(context.Background())
}

func (o TemplateFontWeightOutput) ToTemplateFontWeightPtrOutputWithContext(ctx context.Context) TemplateFontWeightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFontWeight) *TemplateFontWeight {
		return &v
	}).(TemplateFontWeightPtrOutput)
}

func (o TemplateFontWeightOutput) Name() TemplateFontWeightNamePtrOutput {
	return o.ApplyT(func(v TemplateFontWeight) *TemplateFontWeightName { return v.Name }).(TemplateFontWeightNamePtrOutput)
}

type TemplateFontWeightPtrOutput struct{ *pulumi.OutputState }

func (TemplateFontWeightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFontWeight)(nil)).Elem()
}

func (o TemplateFontWeightPtrOutput) ToTemplateFontWeightPtrOutput() TemplateFontWeightPtrOutput {
	return o
}

func (o TemplateFontWeightPtrOutput) ToTemplateFontWeightPtrOutputWithContext(ctx context.Context) TemplateFontWeightPtrOutput {
	return o
}

func (o TemplateFontWeightPtrOutput) Elem() TemplateFontWeightOutput {
	return o.ApplyT(func(v *TemplateFontWeight) TemplateFontWeight {
		if v != nil {
			return *v
		}
		var ret TemplateFontWeight
		return ret
	}).(TemplateFontWeightOutput)
}

func (o TemplateFontWeightPtrOutput) Name() TemplateFontWeightNamePtrOutput {
	return o.ApplyT(func(v *TemplateFontWeight) *TemplateFontWeightName {
		if v == nil {
			return nil
		}
		return v.Name
	}).(TemplateFontWeightNamePtrOutput)
}

type TemplateForecastComputation struct {
	ComputationId          string                                  `pulumi:"computationId"`
	CustomSeasonalityValue *float64                                `pulumi:"customSeasonalityValue"`
	LowerBoundary          *float64                                `pulumi:"lowerBoundary"`
	Name                   *string                                 `pulumi:"name"`
	PeriodsBackward        *float64                                `pulumi:"periodsBackward"`
	PeriodsForward         *float64                                `pulumi:"periodsForward"`
	PredictionInterval     *float64                                `pulumi:"predictionInterval"`
	Seasonality            *TemplateForecastComputationSeasonality `pulumi:"seasonality"`
	Time                   *TemplateDimensionField                 `pulumi:"time"`
	UpperBoundary          *float64                                `pulumi:"upperBoundary"`
	Value                  *TemplateMeasureField                   `pulumi:"value"`
}

// TemplateForecastComputationInput is an input type that accepts TemplateForecastComputationArgs and TemplateForecastComputationOutput values.
// You can construct a concrete instance of `TemplateForecastComputationInput` via:
//
//	TemplateForecastComputationArgs{...}
type TemplateForecastComputationInput interface {
	pulumi.Input

	ToTemplateForecastComputationOutput() TemplateForecastComputationOutput
	ToTemplateForecastComputationOutputWithContext(context.Context) TemplateForecastComputationOutput
}

type TemplateForecastComputationArgs struct {
	ComputationId          pulumi.StringInput                             `pulumi:"computationId"`
	CustomSeasonalityValue pulumi.Float64PtrInput                         `pulumi:"customSeasonalityValue"`
	LowerBoundary          pulumi.Float64PtrInput                         `pulumi:"lowerBoundary"`
	Name                   pulumi.StringPtrInput                          `pulumi:"name"`
	PeriodsBackward        pulumi.Float64PtrInput                         `pulumi:"periodsBackward"`
	PeriodsForward         pulumi.Float64PtrInput                         `pulumi:"periodsForward"`
	PredictionInterval     pulumi.Float64PtrInput                         `pulumi:"predictionInterval"`
	Seasonality            TemplateForecastComputationSeasonalityPtrInput `pulumi:"seasonality"`
	Time                   TemplateDimensionFieldPtrInput                 `pulumi:"time"`
	UpperBoundary          pulumi.Float64PtrInput                         `pulumi:"upperBoundary"`
	Value                  TemplateMeasureFieldPtrInput                   `pulumi:"value"`
}

func (TemplateForecastComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastComputation)(nil)).Elem()
}

func (i TemplateForecastComputationArgs) ToTemplateForecastComputationOutput() TemplateForecastComputationOutput {
	return i.ToTemplateForecastComputationOutputWithContext(context.Background())
}

func (i TemplateForecastComputationArgs) ToTemplateForecastComputationOutputWithContext(ctx context.Context) TemplateForecastComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastComputationOutput)
}

func (i TemplateForecastComputationArgs) ToTemplateForecastComputationPtrOutput() TemplateForecastComputationPtrOutput {
	return i.ToTemplateForecastComputationPtrOutputWithContext(context.Background())
}

func (i TemplateForecastComputationArgs) ToTemplateForecastComputationPtrOutputWithContext(ctx context.Context) TemplateForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastComputationOutput).ToTemplateForecastComputationPtrOutputWithContext(ctx)
}

// TemplateForecastComputationPtrInput is an input type that accepts TemplateForecastComputationArgs, TemplateForecastComputationPtr and TemplateForecastComputationPtrOutput values.
// You can construct a concrete instance of `TemplateForecastComputationPtrInput` via:
//
//	        TemplateForecastComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateForecastComputationPtrInput interface {
	pulumi.Input

	ToTemplateForecastComputationPtrOutput() TemplateForecastComputationPtrOutput
	ToTemplateForecastComputationPtrOutputWithContext(context.Context) TemplateForecastComputationPtrOutput
}

type templateForecastComputationPtrType TemplateForecastComputationArgs

func TemplateForecastComputationPtr(v *TemplateForecastComputationArgs) TemplateForecastComputationPtrInput {
	return (*templateForecastComputationPtrType)(v)
}

func (*templateForecastComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateForecastComputation)(nil)).Elem()
}

func (i *templateForecastComputationPtrType) ToTemplateForecastComputationPtrOutput() TemplateForecastComputationPtrOutput {
	return i.ToTemplateForecastComputationPtrOutputWithContext(context.Background())
}

func (i *templateForecastComputationPtrType) ToTemplateForecastComputationPtrOutputWithContext(ctx context.Context) TemplateForecastComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastComputationPtrOutput)
}

type TemplateForecastComputationOutput struct{ *pulumi.OutputState }

func (TemplateForecastComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastComputation)(nil)).Elem()
}

func (o TemplateForecastComputationOutput) ToTemplateForecastComputationOutput() TemplateForecastComputationOutput {
	return o
}

func (o TemplateForecastComputationOutput) ToTemplateForecastComputationOutputWithContext(ctx context.Context) TemplateForecastComputationOutput {
	return o
}

func (o TemplateForecastComputationOutput) ToTemplateForecastComputationPtrOutput() TemplateForecastComputationPtrOutput {
	return o.ToTemplateForecastComputationPtrOutputWithContext(context.Background())
}

func (o TemplateForecastComputationOutput) ToTemplateForecastComputationPtrOutputWithContext(ctx context.Context) TemplateForecastComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateForecastComputation) *TemplateForecastComputation {
		return &v
	}).(TemplateForecastComputationPtrOutput)
}

func (o TemplateForecastComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateForecastComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateForecastComputationOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.CustomSeasonalityValue }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateForecastComputationOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) Seasonality() TemplateForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *TemplateForecastComputationSeasonality { return v.Seasonality }).(TemplateForecastComputationSeasonalityPtrOutput)
}

func (o TemplateForecastComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateForecastComputationOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateForecastComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateForecastComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateForecastComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateForecastComputation)(nil)).Elem()
}

func (o TemplateForecastComputationPtrOutput) ToTemplateForecastComputationPtrOutput() TemplateForecastComputationPtrOutput {
	return o
}

func (o TemplateForecastComputationPtrOutput) ToTemplateForecastComputationPtrOutputWithContext(ctx context.Context) TemplateForecastComputationPtrOutput {
	return o
}

func (o TemplateForecastComputationPtrOutput) Elem() TemplateForecastComputationOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) TemplateForecastComputation {
		if v != nil {
			return *v
		}
		var ret TemplateForecastComputation
		return ret
	}).(TemplateForecastComputationOutput)
}

func (o TemplateForecastComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateForecastComputationPtrOutput) CustomSeasonalityValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomSeasonalityValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateForecastComputationPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) Seasonality() TemplateForecastComputationSeasonalityPtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *TemplateForecastComputationSeasonality {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(TemplateForecastComputationSeasonalityPtrOutput)
}

func (o TemplateForecastComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateForecastComputationPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateForecastComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateForecastComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateForecastConfiguration struct {
	ForecastProperties *TemplateTimeBasedForecastProperties `pulumi:"forecastProperties"`
	Scenario           *TemplateForecastScenario            `pulumi:"scenario"`
}

// TemplateForecastConfigurationInput is an input type that accepts TemplateForecastConfigurationArgs and TemplateForecastConfigurationOutput values.
// You can construct a concrete instance of `TemplateForecastConfigurationInput` via:
//
//	TemplateForecastConfigurationArgs{...}
type TemplateForecastConfigurationInput interface {
	pulumi.Input

	ToTemplateForecastConfigurationOutput() TemplateForecastConfigurationOutput
	ToTemplateForecastConfigurationOutputWithContext(context.Context) TemplateForecastConfigurationOutput
}

type TemplateForecastConfigurationArgs struct {
	ForecastProperties TemplateTimeBasedForecastPropertiesPtrInput `pulumi:"forecastProperties"`
	Scenario           TemplateForecastScenarioPtrInput            `pulumi:"scenario"`
}

func (TemplateForecastConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastConfiguration)(nil)).Elem()
}

func (i TemplateForecastConfigurationArgs) ToTemplateForecastConfigurationOutput() TemplateForecastConfigurationOutput {
	return i.ToTemplateForecastConfigurationOutputWithContext(context.Background())
}

func (i TemplateForecastConfigurationArgs) ToTemplateForecastConfigurationOutputWithContext(ctx context.Context) TemplateForecastConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastConfigurationOutput)
}

// TemplateForecastConfigurationArrayInput is an input type that accepts TemplateForecastConfigurationArray and TemplateForecastConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateForecastConfigurationArrayInput` via:
//
//	TemplateForecastConfigurationArray{ TemplateForecastConfigurationArgs{...} }
type TemplateForecastConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateForecastConfigurationArrayOutput() TemplateForecastConfigurationArrayOutput
	ToTemplateForecastConfigurationArrayOutputWithContext(context.Context) TemplateForecastConfigurationArrayOutput
}

type TemplateForecastConfigurationArray []TemplateForecastConfigurationInput

func (TemplateForecastConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateForecastConfiguration)(nil)).Elem()
}

func (i TemplateForecastConfigurationArray) ToTemplateForecastConfigurationArrayOutput() TemplateForecastConfigurationArrayOutput {
	return i.ToTemplateForecastConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateForecastConfigurationArray) ToTemplateForecastConfigurationArrayOutputWithContext(ctx context.Context) TemplateForecastConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastConfigurationArrayOutput)
}

type TemplateForecastConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateForecastConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastConfiguration)(nil)).Elem()
}

func (o TemplateForecastConfigurationOutput) ToTemplateForecastConfigurationOutput() TemplateForecastConfigurationOutput {
	return o
}

func (o TemplateForecastConfigurationOutput) ToTemplateForecastConfigurationOutputWithContext(ctx context.Context) TemplateForecastConfigurationOutput {
	return o
}

func (o TemplateForecastConfigurationOutput) ForecastProperties() TemplateTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyT(func(v TemplateForecastConfiguration) *TemplateTimeBasedForecastProperties {
		return v.ForecastProperties
	}).(TemplateTimeBasedForecastPropertiesPtrOutput)
}

func (o TemplateForecastConfigurationOutput) Scenario() TemplateForecastScenarioPtrOutput {
	return o.ApplyT(func(v TemplateForecastConfiguration) *TemplateForecastScenario { return v.Scenario }).(TemplateForecastScenarioPtrOutput)
}

type TemplateForecastConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateForecastConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateForecastConfiguration)(nil)).Elem()
}

func (o TemplateForecastConfigurationArrayOutput) ToTemplateForecastConfigurationArrayOutput() TemplateForecastConfigurationArrayOutput {
	return o
}

func (o TemplateForecastConfigurationArrayOutput) ToTemplateForecastConfigurationArrayOutputWithContext(ctx context.Context) TemplateForecastConfigurationArrayOutput {
	return o
}

func (o TemplateForecastConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateForecastConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateForecastConfiguration {
		return vs[0].([]TemplateForecastConfiguration)[vs[1].(int)]
	}).(TemplateForecastConfigurationOutput)
}

type TemplateForecastScenario struct {
	WhatIfPointScenario *TemplateWhatIfPointScenario `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario *TemplateWhatIfRangeScenario `pulumi:"whatIfRangeScenario"`
}

// TemplateForecastScenarioInput is an input type that accepts TemplateForecastScenarioArgs and TemplateForecastScenarioOutput values.
// You can construct a concrete instance of `TemplateForecastScenarioInput` via:
//
//	TemplateForecastScenarioArgs{...}
type TemplateForecastScenarioInput interface {
	pulumi.Input

	ToTemplateForecastScenarioOutput() TemplateForecastScenarioOutput
	ToTemplateForecastScenarioOutputWithContext(context.Context) TemplateForecastScenarioOutput
}

type TemplateForecastScenarioArgs struct {
	WhatIfPointScenario TemplateWhatIfPointScenarioPtrInput `pulumi:"whatIfPointScenario"`
	WhatIfRangeScenario TemplateWhatIfRangeScenarioPtrInput `pulumi:"whatIfRangeScenario"`
}

func (TemplateForecastScenarioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastScenario)(nil)).Elem()
}

func (i TemplateForecastScenarioArgs) ToTemplateForecastScenarioOutput() TemplateForecastScenarioOutput {
	return i.ToTemplateForecastScenarioOutputWithContext(context.Background())
}

func (i TemplateForecastScenarioArgs) ToTemplateForecastScenarioOutputWithContext(ctx context.Context) TemplateForecastScenarioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastScenarioOutput)
}

func (i TemplateForecastScenarioArgs) ToTemplateForecastScenarioPtrOutput() TemplateForecastScenarioPtrOutput {
	return i.ToTemplateForecastScenarioPtrOutputWithContext(context.Background())
}

func (i TemplateForecastScenarioArgs) ToTemplateForecastScenarioPtrOutputWithContext(ctx context.Context) TemplateForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastScenarioOutput).ToTemplateForecastScenarioPtrOutputWithContext(ctx)
}

// TemplateForecastScenarioPtrInput is an input type that accepts TemplateForecastScenarioArgs, TemplateForecastScenarioPtr and TemplateForecastScenarioPtrOutput values.
// You can construct a concrete instance of `TemplateForecastScenarioPtrInput` via:
//
//	        TemplateForecastScenarioArgs{...}
//
//	or:
//
//	        nil
type TemplateForecastScenarioPtrInput interface {
	pulumi.Input

	ToTemplateForecastScenarioPtrOutput() TemplateForecastScenarioPtrOutput
	ToTemplateForecastScenarioPtrOutputWithContext(context.Context) TemplateForecastScenarioPtrOutput
}

type templateForecastScenarioPtrType TemplateForecastScenarioArgs

func TemplateForecastScenarioPtr(v *TemplateForecastScenarioArgs) TemplateForecastScenarioPtrInput {
	return (*templateForecastScenarioPtrType)(v)
}

func (*templateForecastScenarioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateForecastScenario)(nil)).Elem()
}

func (i *templateForecastScenarioPtrType) ToTemplateForecastScenarioPtrOutput() TemplateForecastScenarioPtrOutput {
	return i.ToTemplateForecastScenarioPtrOutputWithContext(context.Background())
}

func (i *templateForecastScenarioPtrType) ToTemplateForecastScenarioPtrOutputWithContext(ctx context.Context) TemplateForecastScenarioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateForecastScenarioPtrOutput)
}

type TemplateForecastScenarioOutput struct{ *pulumi.OutputState }

func (TemplateForecastScenarioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateForecastScenario)(nil)).Elem()
}

func (o TemplateForecastScenarioOutput) ToTemplateForecastScenarioOutput() TemplateForecastScenarioOutput {
	return o
}

func (o TemplateForecastScenarioOutput) ToTemplateForecastScenarioOutputWithContext(ctx context.Context) TemplateForecastScenarioOutput {
	return o
}

func (o TemplateForecastScenarioOutput) ToTemplateForecastScenarioPtrOutput() TemplateForecastScenarioPtrOutput {
	return o.ToTemplateForecastScenarioPtrOutputWithContext(context.Background())
}

func (o TemplateForecastScenarioOutput) ToTemplateForecastScenarioPtrOutputWithContext(ctx context.Context) TemplateForecastScenarioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateForecastScenario) *TemplateForecastScenario {
		return &v
	}).(TemplateForecastScenarioPtrOutput)
}

func (o TemplateForecastScenarioOutput) WhatIfPointScenario() TemplateWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v TemplateForecastScenario) *TemplateWhatIfPointScenario { return v.WhatIfPointScenario }).(TemplateWhatIfPointScenarioPtrOutput)
}

func (o TemplateForecastScenarioOutput) WhatIfRangeScenario() TemplateWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v TemplateForecastScenario) *TemplateWhatIfRangeScenario { return v.WhatIfRangeScenario }).(TemplateWhatIfRangeScenarioPtrOutput)
}

type TemplateForecastScenarioPtrOutput struct{ *pulumi.OutputState }

func (TemplateForecastScenarioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateForecastScenario)(nil)).Elem()
}

func (o TemplateForecastScenarioPtrOutput) ToTemplateForecastScenarioPtrOutput() TemplateForecastScenarioPtrOutput {
	return o
}

func (o TemplateForecastScenarioPtrOutput) ToTemplateForecastScenarioPtrOutputWithContext(ctx context.Context) TemplateForecastScenarioPtrOutput {
	return o
}

func (o TemplateForecastScenarioPtrOutput) Elem() TemplateForecastScenarioOutput {
	return o.ApplyT(func(v *TemplateForecastScenario) TemplateForecastScenario {
		if v != nil {
			return *v
		}
		var ret TemplateForecastScenario
		return ret
	}).(TemplateForecastScenarioOutput)
}

func (o TemplateForecastScenarioPtrOutput) WhatIfPointScenario() TemplateWhatIfPointScenarioPtrOutput {
	return o.ApplyT(func(v *TemplateForecastScenario) *TemplateWhatIfPointScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfPointScenario
	}).(TemplateWhatIfPointScenarioPtrOutput)
}

func (o TemplateForecastScenarioPtrOutput) WhatIfRangeScenario() TemplateWhatIfRangeScenarioPtrOutput {
	return o.ApplyT(func(v *TemplateForecastScenario) *TemplateWhatIfRangeScenario {
		if v == nil {
			return nil
		}
		return v.WhatIfRangeScenario
	}).(TemplateWhatIfRangeScenarioPtrOutput)
}

type TemplateFormatConfiguration struct {
	DateTimeFormatConfiguration *TemplateDateTimeFormatConfiguration `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   *TemplateNumberFormatConfiguration   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   *TemplateStringFormatConfiguration   `pulumi:"stringFormatConfiguration"`
}

// TemplateFormatConfigurationInput is an input type that accepts TemplateFormatConfigurationArgs and TemplateFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateFormatConfigurationInput` via:
//
//	TemplateFormatConfigurationArgs{...}
type TemplateFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateFormatConfigurationOutput() TemplateFormatConfigurationOutput
	ToTemplateFormatConfigurationOutputWithContext(context.Context) TemplateFormatConfigurationOutput
}

type TemplateFormatConfigurationArgs struct {
	DateTimeFormatConfiguration TemplateDateTimeFormatConfigurationPtrInput `pulumi:"dateTimeFormatConfiguration"`
	NumberFormatConfiguration   TemplateNumberFormatConfigurationPtrInput   `pulumi:"numberFormatConfiguration"`
	StringFormatConfiguration   TemplateStringFormatConfigurationPtrInput   `pulumi:"stringFormatConfiguration"`
}

func (TemplateFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFormatConfiguration)(nil)).Elem()
}

func (i TemplateFormatConfigurationArgs) ToTemplateFormatConfigurationOutput() TemplateFormatConfigurationOutput {
	return i.ToTemplateFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateFormatConfigurationArgs) ToTemplateFormatConfigurationOutputWithContext(ctx context.Context) TemplateFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFormatConfigurationOutput)
}

func (i TemplateFormatConfigurationArgs) ToTemplateFormatConfigurationPtrOutput() TemplateFormatConfigurationPtrOutput {
	return i.ToTemplateFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFormatConfigurationArgs) ToTemplateFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFormatConfigurationOutput).ToTemplateFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateFormatConfigurationPtrInput is an input type that accepts TemplateFormatConfigurationArgs, TemplateFormatConfigurationPtr and TemplateFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFormatConfigurationPtrInput` via:
//
//	        TemplateFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFormatConfigurationPtrOutput() TemplateFormatConfigurationPtrOutput
	ToTemplateFormatConfigurationPtrOutputWithContext(context.Context) TemplateFormatConfigurationPtrOutput
}

type templateFormatConfigurationPtrType TemplateFormatConfigurationArgs

func TemplateFormatConfigurationPtr(v *TemplateFormatConfigurationArgs) TemplateFormatConfigurationPtrInput {
	return (*templateFormatConfigurationPtrType)(v)
}

func (*templateFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFormatConfiguration)(nil)).Elem()
}

func (i *templateFormatConfigurationPtrType) ToTemplateFormatConfigurationPtrOutput() TemplateFormatConfigurationPtrOutput {
	return i.ToTemplateFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFormatConfigurationPtrType) ToTemplateFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFormatConfigurationPtrOutput)
}

type TemplateFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFormatConfiguration)(nil)).Elem()
}

func (o TemplateFormatConfigurationOutput) ToTemplateFormatConfigurationOutput() TemplateFormatConfigurationOutput {
	return o
}

func (o TemplateFormatConfigurationOutput) ToTemplateFormatConfigurationOutputWithContext(ctx context.Context) TemplateFormatConfigurationOutput {
	return o
}

func (o TemplateFormatConfigurationOutput) ToTemplateFormatConfigurationPtrOutput() TemplateFormatConfigurationPtrOutput {
	return o.ToTemplateFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFormatConfigurationOutput) ToTemplateFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFormatConfiguration) *TemplateFormatConfiguration {
		return &v
	}).(TemplateFormatConfigurationPtrOutput)
}

func (o TemplateFormatConfigurationOutput) DateTimeFormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFormatConfiguration) *TemplateDateTimeFormatConfiguration {
		return v.DateTimeFormatConfiguration
	}).(TemplateDateTimeFormatConfigurationPtrOutput)
}

func (o TemplateFormatConfigurationOutput) NumberFormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFormatConfiguration) *TemplateNumberFormatConfiguration {
		return v.NumberFormatConfiguration
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

func (o TemplateFormatConfigurationOutput) StringFormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFormatConfiguration) *TemplateStringFormatConfiguration {
		return v.StringFormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFormatConfiguration)(nil)).Elem()
}

func (o TemplateFormatConfigurationPtrOutput) ToTemplateFormatConfigurationPtrOutput() TemplateFormatConfigurationPtrOutput {
	return o
}

func (o TemplateFormatConfigurationPtrOutput) ToTemplateFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateFormatConfigurationPtrOutput {
	return o
}

func (o TemplateFormatConfigurationPtrOutput) Elem() TemplateFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateFormatConfiguration) TemplateFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFormatConfiguration
		return ret
	}).(TemplateFormatConfigurationOutput)
}

func (o TemplateFormatConfigurationPtrOutput) DateTimeFormatConfiguration() TemplateDateTimeFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFormatConfiguration) *TemplateDateTimeFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.DateTimeFormatConfiguration
	}).(TemplateDateTimeFormatConfigurationPtrOutput)
}

func (o TemplateFormatConfigurationPtrOutput) NumberFormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFormatConfiguration) *TemplateNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberFormatConfiguration
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

func (o TemplateFormatConfigurationPtrOutput) StringFormatConfiguration() TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFormatConfiguration) *TemplateStringFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.StringFormatConfiguration
	}).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateFreeFormLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *TemplateFreeFormLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// TemplateFreeFormLayoutCanvasSizeOptionsInput is an input type that accepts TemplateFreeFormLayoutCanvasSizeOptionsArgs and TemplateFreeFormLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutCanvasSizeOptionsInput` via:
//
//	TemplateFreeFormLayoutCanvasSizeOptionsArgs{...}
type TemplateFreeFormLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutCanvasSizeOptionsOutput() TemplateFreeFormLayoutCanvasSizeOptionsOutput
	ToTemplateFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Context) TemplateFreeFormLayoutCanvasSizeOptionsOutput
}

type TemplateFreeFormLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (TemplateFreeFormLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateFreeFormLayoutCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutCanvasSizeOptionsOutput() TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return i.ToTemplateFreeFormLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutCanvasSizeOptionsOutput)
}

func (i TemplateFreeFormLayoutCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutCanvasSizeOptionsOutput).ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateFreeFormLayoutCanvasSizeOptionsPtrInput is an input type that accepts TemplateFreeFormLayoutCanvasSizeOptionsArgs, TemplateFreeFormLayoutCanvasSizeOptionsPtr and TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutCanvasSizeOptionsPtrInput` via:
//
//	        TemplateFreeFormLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput
	ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput
}

type templateFreeFormLayoutCanvasSizeOptionsPtrType TemplateFreeFormLayoutCanvasSizeOptionsArgs

func TemplateFreeFormLayoutCanvasSizeOptionsPtr(v *TemplateFreeFormLayoutCanvasSizeOptionsArgs) TemplateFreeFormLayoutCanvasSizeOptionsPtrInput {
	return (*templateFreeFormLayoutCanvasSizeOptionsPtrType)(v)
}

func (*templateFreeFormLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *templateFreeFormLayoutCanvasSizeOptionsPtrType) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateFreeFormLayoutCanvasSizeOptionsPtrType) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateFreeFormLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsOutput() TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormLayoutCanvasSizeOptions) *TemplateFreeFormLayoutCanvasSizeOptions {
		return &v
	}).(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutCanvasSizeOptions) *TemplateFreeFormLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput) ToTemplateFreeFormLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput) Elem() TemplateFreeFormLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutCanvasSizeOptions) TemplateFreeFormLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormLayoutCanvasSizeOptions
		return ret
	}).(TemplateFreeFormLayoutCanvasSizeOptionsOutput)
}

func (o TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutCanvasSizeOptions) *TemplateFreeFormLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateFreeFormLayoutConfiguration struct {
	CanvasSizeOptions *TemplateFreeFormLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []TemplateFreeFormLayoutElement          `pulumi:"elements"`
}

// TemplateFreeFormLayoutConfigurationInput is an input type that accepts TemplateFreeFormLayoutConfigurationArgs and TemplateFreeFormLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutConfigurationInput` via:
//
//	TemplateFreeFormLayoutConfigurationArgs{...}
type TemplateFreeFormLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutConfigurationOutput() TemplateFreeFormLayoutConfigurationOutput
	ToTemplateFreeFormLayoutConfigurationOutputWithContext(context.Context) TemplateFreeFormLayoutConfigurationOutput
}

type TemplateFreeFormLayoutConfigurationArgs struct {
	CanvasSizeOptions TemplateFreeFormLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          TemplateFreeFormLayoutElementArrayInput         `pulumi:"elements"`
}

func (TemplateFreeFormLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i TemplateFreeFormLayoutConfigurationArgs) ToTemplateFreeFormLayoutConfigurationOutput() TemplateFreeFormLayoutConfigurationOutput {
	return i.ToTemplateFreeFormLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutConfigurationArgs) ToTemplateFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutConfigurationOutput)
}

func (i TemplateFreeFormLayoutConfigurationArgs) ToTemplateFreeFormLayoutConfigurationPtrOutput() TemplateFreeFormLayoutConfigurationPtrOutput {
	return i.ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutConfigurationArgs) ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutConfigurationOutput).ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateFreeFormLayoutConfigurationPtrInput is an input type that accepts TemplateFreeFormLayoutConfigurationArgs, TemplateFreeFormLayoutConfigurationPtr and TemplateFreeFormLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutConfigurationPtrInput` via:
//
//	        TemplateFreeFormLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutConfigurationPtrOutput() TemplateFreeFormLayoutConfigurationPtrOutput
	ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(context.Context) TemplateFreeFormLayoutConfigurationPtrOutput
}

type templateFreeFormLayoutConfigurationPtrType TemplateFreeFormLayoutConfigurationArgs

func TemplateFreeFormLayoutConfigurationPtr(v *TemplateFreeFormLayoutConfigurationArgs) TemplateFreeFormLayoutConfigurationPtrInput {
	return (*templateFreeFormLayoutConfigurationPtrType)(v)
}

func (*templateFreeFormLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutConfiguration)(nil)).Elem()
}

func (i *templateFreeFormLayoutConfigurationPtrType) ToTemplateFreeFormLayoutConfigurationPtrOutput() TemplateFreeFormLayoutConfigurationPtrOutput {
	return i.ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFreeFormLayoutConfigurationPtrType) ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutConfigurationPtrOutput)
}

type TemplateFreeFormLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o TemplateFreeFormLayoutConfigurationOutput) ToTemplateFreeFormLayoutConfigurationOutput() TemplateFreeFormLayoutConfigurationOutput {
	return o
}

func (o TemplateFreeFormLayoutConfigurationOutput) ToTemplateFreeFormLayoutConfigurationOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationOutput {
	return o
}

func (o TemplateFreeFormLayoutConfigurationOutput) ToTemplateFreeFormLayoutConfigurationPtrOutput() TemplateFreeFormLayoutConfigurationPtrOutput {
	return o.ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormLayoutConfigurationOutput) ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormLayoutConfiguration) *TemplateFreeFormLayoutConfiguration {
		return &v
	}).(TemplateFreeFormLayoutConfigurationPtrOutput)
}

func (o TemplateFreeFormLayoutConfigurationOutput) CanvasSizeOptions() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutConfiguration) *TemplateFreeFormLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateFreeFormLayoutConfigurationOutput) Elements() TemplateFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutConfiguration) []TemplateFreeFormLayoutElement { return v.Elements }).(TemplateFreeFormLayoutElementArrayOutput)
}

type TemplateFreeFormLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutConfiguration)(nil)).Elem()
}

func (o TemplateFreeFormLayoutConfigurationPtrOutput) ToTemplateFreeFormLayoutConfigurationPtrOutput() TemplateFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutConfigurationPtrOutput) ToTemplateFreeFormLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutConfigurationPtrOutput) Elem() TemplateFreeFormLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutConfiguration) TemplateFreeFormLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormLayoutConfiguration
		return ret
	}).(TemplateFreeFormLayoutConfigurationOutput)
}

func (o TemplateFreeFormLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutConfiguration) *TemplateFreeFormLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateFreeFormLayoutConfigurationPtrOutput) Elements() TemplateFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutConfiguration) []TemplateFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(TemplateFreeFormLayoutElementArrayOutput)
}

type TemplateFreeFormLayoutElement struct {
	BackgroundStyle *TemplateFreeFormLayoutElementBackgroundStyle `pulumi:"backgroundStyle"`
	BorderStyle     *TemplateFreeFormLayoutElementBorderStyle     `pulumi:"borderStyle"`
	ElementId       string                                        `pulumi:"elementId"`
	ElementType_    TemplateLayoutElementType                     `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              string                                    `pulumi:"height"`
	LoadingAnimation    *TemplateLoadingAnimation                 `pulumi:"loadingAnimation"`
	RenderingRules      []TemplateSheetElementRenderingRule       `pulumi:"renderingRules"`
	SelectedBorderStyle *TemplateFreeFormLayoutElementBorderStyle `pulumi:"selectedBorderStyle"`
	Visibility          *TemplateVisibility                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width string `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation string `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation string `pulumi:"yAxisLocation"`
}

// TemplateFreeFormLayoutElementInput is an input type that accepts TemplateFreeFormLayoutElementArgs and TemplateFreeFormLayoutElementOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementInput` via:
//
//	TemplateFreeFormLayoutElementArgs{...}
type TemplateFreeFormLayoutElementInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementOutput() TemplateFreeFormLayoutElementOutput
	ToTemplateFreeFormLayoutElementOutputWithContext(context.Context) TemplateFreeFormLayoutElementOutput
}

type TemplateFreeFormLayoutElementArgs struct {
	BackgroundStyle TemplateFreeFormLayoutElementBackgroundStylePtrInput `pulumi:"backgroundStyle"`
	BorderStyle     TemplateFreeFormLayoutElementBorderStylePtrInput     `pulumi:"borderStyle"`
	ElementId       pulumi.StringInput                                   `pulumi:"elementId"`
	ElementType_    TemplateLayoutElementTypeInput                       `pulumi:"elementType"`
	// String based length that is composed of value and unit in px
	Height              pulumi.StringInput                               `pulumi:"height"`
	LoadingAnimation    TemplateLoadingAnimationPtrInput                 `pulumi:"loadingAnimation"`
	RenderingRules      TemplateSheetElementRenderingRuleArrayInput      `pulumi:"renderingRules"`
	SelectedBorderStyle TemplateFreeFormLayoutElementBorderStylePtrInput `pulumi:"selectedBorderStyle"`
	Visibility          TemplateVisibilityPtrInput                       `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringInput `pulumi:"width"`
	// String based length that is composed of value and unit in px
	XAxisLocation pulumi.StringInput `pulumi:"xAxisLocation"`
	// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
	YAxisLocation pulumi.StringInput `pulumi:"yAxisLocation"`
}

func (TemplateFreeFormLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElement)(nil)).Elem()
}

func (i TemplateFreeFormLayoutElementArgs) ToTemplateFreeFormLayoutElementOutput() TemplateFreeFormLayoutElementOutput {
	return i.ToTemplateFreeFormLayoutElementOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementArgs) ToTemplateFreeFormLayoutElementOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementOutput)
}

// TemplateFreeFormLayoutElementArrayInput is an input type that accepts TemplateFreeFormLayoutElementArray and TemplateFreeFormLayoutElementArrayOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementArrayInput` via:
//
//	TemplateFreeFormLayoutElementArray{ TemplateFreeFormLayoutElementArgs{...} }
type TemplateFreeFormLayoutElementArrayInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementArrayOutput() TemplateFreeFormLayoutElementArrayOutput
	ToTemplateFreeFormLayoutElementArrayOutputWithContext(context.Context) TemplateFreeFormLayoutElementArrayOutput
}

type TemplateFreeFormLayoutElementArray []TemplateFreeFormLayoutElementInput

func (TemplateFreeFormLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFreeFormLayoutElement)(nil)).Elem()
}

func (i TemplateFreeFormLayoutElementArray) ToTemplateFreeFormLayoutElementArrayOutput() TemplateFreeFormLayoutElementArrayOutput {
	return i.ToTemplateFreeFormLayoutElementArrayOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementArray) ToTemplateFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementArrayOutput)
}

type TemplateFreeFormLayoutElementOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElement)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementOutput) ToTemplateFreeFormLayoutElementOutput() TemplateFreeFormLayoutElementOutput {
	return o
}

func (o TemplateFreeFormLayoutElementOutput) ToTemplateFreeFormLayoutElementOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementOutput {
	return o
}

func (o TemplateFreeFormLayoutElementOutput) BackgroundStyle() TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) *TemplateFreeFormLayoutElementBackgroundStyle {
		return v.BackgroundStyle
	}).(TemplateFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o TemplateFreeFormLayoutElementOutput) BorderStyle() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) *TemplateFreeFormLayoutElementBorderStyle { return v.BorderStyle }).(TemplateFreeFormLayoutElementBorderStylePtrOutput)
}

func (o TemplateFreeFormLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o TemplateFreeFormLayoutElementOutput) GetElementType_() TemplateLayoutElementTypeOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) TemplateLayoutElementType { return v.ElementType_ }).(TemplateLayoutElementTypeOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateFreeFormLayoutElementOutput) Height() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) string { return v.Height }).(pulumi.StringOutput)
}

func (o TemplateFreeFormLayoutElementOutput) LoadingAnimation() TemplateLoadingAnimationPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) *TemplateLoadingAnimation { return v.LoadingAnimation }).(TemplateLoadingAnimationPtrOutput)
}

func (o TemplateFreeFormLayoutElementOutput) RenderingRules() TemplateSheetElementRenderingRuleArrayOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) []TemplateSheetElementRenderingRule { return v.RenderingRules }).(TemplateSheetElementRenderingRuleArrayOutput)
}

func (o TemplateFreeFormLayoutElementOutput) SelectedBorderStyle() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) *TemplateFreeFormLayoutElementBorderStyle {
		return v.SelectedBorderStyle
	}).(TemplateFreeFormLayoutElementBorderStylePtrOutput)
}

func (o TemplateFreeFormLayoutElementOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateFreeFormLayoutElementOutput) Width() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) string { return v.Width }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateFreeFormLayoutElementOutput) XAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) string { return v.XAxisLocation }).(pulumi.StringOutput)
}

// String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
func (o TemplateFreeFormLayoutElementOutput) YAxisLocation() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElement) string { return v.YAxisLocation }).(pulumi.StringOutput)
}

type TemplateFreeFormLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateFreeFormLayoutElement)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementArrayOutput) ToTemplateFreeFormLayoutElementArrayOutput() TemplateFreeFormLayoutElementArrayOutput {
	return o
}

func (o TemplateFreeFormLayoutElementArrayOutput) ToTemplateFreeFormLayoutElementArrayOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementArrayOutput {
	return o
}

func (o TemplateFreeFormLayoutElementArrayOutput) Index(i pulumi.IntInput) TemplateFreeFormLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateFreeFormLayoutElement {
		return vs[0].([]TemplateFreeFormLayoutElement)[vs[1].(int)]
	}).(TemplateFreeFormLayoutElementOutput)
}

type TemplateFreeFormLayoutElementBackgroundStyle struct {
	Color      *string             `pulumi:"color"`
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateFreeFormLayoutElementBackgroundStyleInput is an input type that accepts TemplateFreeFormLayoutElementBackgroundStyleArgs and TemplateFreeFormLayoutElementBackgroundStyleOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementBackgroundStyleInput` via:
//
//	TemplateFreeFormLayoutElementBackgroundStyleArgs{...}
type TemplateFreeFormLayoutElementBackgroundStyleInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementBackgroundStyleOutput() TemplateFreeFormLayoutElementBackgroundStyleOutput
	ToTemplateFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Context) TemplateFreeFormLayoutElementBackgroundStyleOutput
}

type TemplateFreeFormLayoutElementBackgroundStyleArgs struct {
	Color      pulumi.StringPtrInput      `pulumi:"color"`
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateFreeFormLayoutElementBackgroundStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i TemplateFreeFormLayoutElementBackgroundStyleArgs) ToTemplateFreeFormLayoutElementBackgroundStyleOutput() TemplateFreeFormLayoutElementBackgroundStyleOutput {
	return i.ToTemplateFreeFormLayoutElementBackgroundStyleOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementBackgroundStyleArgs) ToTemplateFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBackgroundStyleOutput)
}

func (i TemplateFreeFormLayoutElementBackgroundStyleArgs) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutput() TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementBackgroundStyleArgs) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBackgroundStyleOutput).ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx)
}

// TemplateFreeFormLayoutElementBackgroundStylePtrInput is an input type that accepts TemplateFreeFormLayoutElementBackgroundStyleArgs, TemplateFreeFormLayoutElementBackgroundStylePtr and TemplateFreeFormLayoutElementBackgroundStylePtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementBackgroundStylePtrInput` via:
//
//	        TemplateFreeFormLayoutElementBackgroundStyleArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormLayoutElementBackgroundStylePtrInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementBackgroundStylePtrOutput() TemplateFreeFormLayoutElementBackgroundStylePtrOutput
	ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Context) TemplateFreeFormLayoutElementBackgroundStylePtrOutput
}

type templateFreeFormLayoutElementBackgroundStylePtrType TemplateFreeFormLayoutElementBackgroundStyleArgs

func TemplateFreeFormLayoutElementBackgroundStylePtr(v *TemplateFreeFormLayoutElementBackgroundStyleArgs) TemplateFreeFormLayoutElementBackgroundStylePtrInput {
	return (*templateFreeFormLayoutElementBackgroundStylePtrType)(v)
}

func (*templateFreeFormLayoutElementBackgroundStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (i *templateFreeFormLayoutElementBackgroundStylePtrType) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutput() TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return i.ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (i *templateFreeFormLayoutElementBackgroundStylePtrType) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBackgroundStylePtrOutput)
}

type TemplateFreeFormLayoutElementBackgroundStyleOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementBackgroundStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) ToTemplateFreeFormLayoutElementBackgroundStyleOutput() TemplateFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) ToTemplateFreeFormLayoutElementBackgroundStyleOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStyleOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutput() TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormLayoutElementBackgroundStyle) *TemplateFreeFormLayoutElementBackgroundStyle {
		return &v
	}).(TemplateFreeFormLayoutElementBackgroundStylePtrOutput)
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElementBackgroundStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateFreeFormLayoutElementBackgroundStyleOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElementBackgroundStyle) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateFreeFormLayoutElementBackgroundStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementBackgroundStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutElementBackgroundStyle)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementBackgroundStylePtrOutput) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutput() TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBackgroundStylePtrOutput) ToTemplateFreeFormLayoutElementBackgroundStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBackgroundStylePtrOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBackgroundStylePtrOutput) Elem() TemplateFreeFormLayoutElementBackgroundStyleOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBackgroundStyle) TemplateFreeFormLayoutElementBackgroundStyle {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormLayoutElementBackgroundStyle
		return ret
	}).(TemplateFreeFormLayoutElementBackgroundStyleOutput)
}

func (o TemplateFreeFormLayoutElementBackgroundStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBackgroundStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFreeFormLayoutElementBackgroundStylePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBackgroundStyle) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateFreeFormLayoutElementBorderStyle struct {
	Color      *string             `pulumi:"color"`
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateFreeFormLayoutElementBorderStyleInput is an input type that accepts TemplateFreeFormLayoutElementBorderStyleArgs and TemplateFreeFormLayoutElementBorderStyleOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementBorderStyleInput` via:
//
//	TemplateFreeFormLayoutElementBorderStyleArgs{...}
type TemplateFreeFormLayoutElementBorderStyleInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementBorderStyleOutput() TemplateFreeFormLayoutElementBorderStyleOutput
	ToTemplateFreeFormLayoutElementBorderStyleOutputWithContext(context.Context) TemplateFreeFormLayoutElementBorderStyleOutput
}

type TemplateFreeFormLayoutElementBorderStyleArgs struct {
	Color      pulumi.StringPtrInput      `pulumi:"color"`
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateFreeFormLayoutElementBorderStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i TemplateFreeFormLayoutElementBorderStyleArgs) ToTemplateFreeFormLayoutElementBorderStyleOutput() TemplateFreeFormLayoutElementBorderStyleOutput {
	return i.ToTemplateFreeFormLayoutElementBorderStyleOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementBorderStyleArgs) ToTemplateFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBorderStyleOutput)
}

func (i TemplateFreeFormLayoutElementBorderStyleArgs) ToTemplateFreeFormLayoutElementBorderStylePtrOutput() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutElementBorderStyleArgs) ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBorderStyleOutput).ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx)
}

// TemplateFreeFormLayoutElementBorderStylePtrInput is an input type that accepts TemplateFreeFormLayoutElementBorderStyleArgs, TemplateFreeFormLayoutElementBorderStylePtr and TemplateFreeFormLayoutElementBorderStylePtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutElementBorderStylePtrInput` via:
//
//	        TemplateFreeFormLayoutElementBorderStyleArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormLayoutElementBorderStylePtrInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutElementBorderStylePtrOutput() TemplateFreeFormLayoutElementBorderStylePtrOutput
	ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Context) TemplateFreeFormLayoutElementBorderStylePtrOutput
}

type templateFreeFormLayoutElementBorderStylePtrType TemplateFreeFormLayoutElementBorderStyleArgs

func TemplateFreeFormLayoutElementBorderStylePtr(v *TemplateFreeFormLayoutElementBorderStyleArgs) TemplateFreeFormLayoutElementBorderStylePtrInput {
	return (*templateFreeFormLayoutElementBorderStylePtrType)(v)
}

func (*templateFreeFormLayoutElementBorderStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (i *templateFreeFormLayoutElementBorderStylePtrType) ToTemplateFreeFormLayoutElementBorderStylePtrOutput() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return i.ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (i *templateFreeFormLayoutElementBorderStylePtrType) ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutElementBorderStylePtrOutput)
}

type TemplateFreeFormLayoutElementBorderStyleOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementBorderStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) ToTemplateFreeFormLayoutElementBorderStyleOutput() TemplateFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) ToTemplateFreeFormLayoutElementBorderStyleOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStyleOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) ToTemplateFreeFormLayoutElementBorderStylePtrOutput() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o.ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormLayoutElementBorderStyle) *TemplateFreeFormLayoutElementBorderStyle {
		return &v
	}).(TemplateFreeFormLayoutElementBorderStylePtrOutput)
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElementBorderStyle) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateFreeFormLayoutElementBorderStyleOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutElementBorderStyle) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateFreeFormLayoutElementBorderStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutElementBorderStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutElementBorderStyle)(nil)).Elem()
}

func (o TemplateFreeFormLayoutElementBorderStylePtrOutput) ToTemplateFreeFormLayoutElementBorderStylePtrOutput() TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBorderStylePtrOutput) ToTemplateFreeFormLayoutElementBorderStylePtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutElementBorderStylePtrOutput {
	return o
}

func (o TemplateFreeFormLayoutElementBorderStylePtrOutput) Elem() TemplateFreeFormLayoutElementBorderStyleOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBorderStyle) TemplateFreeFormLayoutElementBorderStyle {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormLayoutElementBorderStyle
		return ret
	}).(TemplateFreeFormLayoutElementBorderStyleOutput)
}

func (o TemplateFreeFormLayoutElementBorderStylePtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBorderStyle) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFreeFormLayoutElementBorderStylePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutElementBorderStyle) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateFreeFormLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth string `pulumi:"optimizedViewPortWidth"`
}

// TemplateFreeFormLayoutScreenCanvasSizeOptionsInput is an input type that accepts TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs and TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutScreenCanvasSizeOptionsInput` via:
//
//	TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
type TemplateFreeFormLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput
	ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput
}

type TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringInput `pulumi:"optimizedViewPortWidth"`
}

func (TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return i.ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

func (i TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput).ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs, TemplateFreeFormLayoutScreenCanvasSizeOptionsPtr and TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
	ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput
}

type templateFreeFormLayoutScreenCanvasSizeOptionsPtrType TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs

func TemplateFreeFormLayoutScreenCanvasSizeOptionsPtr(v *TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput {
	return (*templateFreeFormLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*templateFreeFormLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *templateFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateFreeFormLayoutScreenCanvasSizeOptionsPtrType) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormLayoutScreenCanvasSizeOptions) *TemplateFreeFormLayoutScreenCanvasSizeOptions {
		return &v
	}).(TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFreeFormLayoutScreenCanvasSizeOptions) string { return v.OptimizedViewPortWidth }).(pulumi.StringOutput)
}

type TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput() TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) ToTemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) Elem() TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutScreenCanvasSizeOptions) TemplateFreeFormLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormLayoutScreenCanvasSizeOptions
		return ret
	}).(TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFreeFormLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return &v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

type TemplateFreeFormSectionLayoutConfiguration struct {
	Elements []TemplateFreeFormLayoutElement `pulumi:"elements"`
}

// TemplateFreeFormSectionLayoutConfigurationInput is an input type that accepts TemplateFreeFormSectionLayoutConfigurationArgs and TemplateFreeFormSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateFreeFormSectionLayoutConfigurationInput` via:
//
//	TemplateFreeFormSectionLayoutConfigurationArgs{...}
type TemplateFreeFormSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateFreeFormSectionLayoutConfigurationOutput() TemplateFreeFormSectionLayoutConfigurationOutput
	ToTemplateFreeFormSectionLayoutConfigurationOutputWithContext(context.Context) TemplateFreeFormSectionLayoutConfigurationOutput
}

type TemplateFreeFormSectionLayoutConfigurationArgs struct {
	Elements TemplateFreeFormLayoutElementArrayInput `pulumi:"elements"`
}

func (TemplateFreeFormSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i TemplateFreeFormSectionLayoutConfigurationArgs) ToTemplateFreeFormSectionLayoutConfigurationOutput() TemplateFreeFormSectionLayoutConfigurationOutput {
	return i.ToTemplateFreeFormSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateFreeFormSectionLayoutConfigurationArgs) ToTemplateFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormSectionLayoutConfigurationOutput)
}

func (i TemplateFreeFormSectionLayoutConfigurationArgs) ToTemplateFreeFormSectionLayoutConfigurationPtrOutput() TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFreeFormSectionLayoutConfigurationArgs) ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormSectionLayoutConfigurationOutput).ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateFreeFormSectionLayoutConfigurationPtrInput is an input type that accepts TemplateFreeFormSectionLayoutConfigurationArgs, TemplateFreeFormSectionLayoutConfigurationPtr and TemplateFreeFormSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFreeFormSectionLayoutConfigurationPtrInput` via:
//
//	        TemplateFreeFormSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFreeFormSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFreeFormSectionLayoutConfigurationPtrOutput() TemplateFreeFormSectionLayoutConfigurationPtrOutput
	ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Context) TemplateFreeFormSectionLayoutConfigurationPtrOutput
}

type templateFreeFormSectionLayoutConfigurationPtrType TemplateFreeFormSectionLayoutConfigurationArgs

func TemplateFreeFormSectionLayoutConfigurationPtr(v *TemplateFreeFormSectionLayoutConfigurationArgs) TemplateFreeFormSectionLayoutConfigurationPtrInput {
	return (*templateFreeFormSectionLayoutConfigurationPtrType)(v)
}

func (*templateFreeFormSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (i *templateFreeFormSectionLayoutConfigurationPtrType) ToTemplateFreeFormSectionLayoutConfigurationPtrOutput() TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return i.ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFreeFormSectionLayoutConfigurationPtrType) ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFreeFormSectionLayoutConfigurationPtrOutput)
}

type TemplateFreeFormSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o TemplateFreeFormSectionLayoutConfigurationOutput) ToTemplateFreeFormSectionLayoutConfigurationOutput() TemplateFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o TemplateFreeFormSectionLayoutConfigurationOutput) ToTemplateFreeFormSectionLayoutConfigurationOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationOutput {
	return o
}

func (o TemplateFreeFormSectionLayoutConfigurationOutput) ToTemplateFreeFormSectionLayoutConfigurationPtrOutput() TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFreeFormSectionLayoutConfigurationOutput) ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFreeFormSectionLayoutConfiguration) *TemplateFreeFormSectionLayoutConfiguration {
		return &v
	}).(TemplateFreeFormSectionLayoutConfigurationPtrOutput)
}

func (o TemplateFreeFormSectionLayoutConfigurationOutput) Elements() TemplateFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v TemplateFreeFormSectionLayoutConfiguration) []TemplateFreeFormLayoutElement { return v.Elements }).(TemplateFreeFormLayoutElementArrayOutput)
}

type TemplateFreeFormSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFreeFormSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFreeFormSectionLayoutConfiguration)(nil)).Elem()
}

func (o TemplateFreeFormSectionLayoutConfigurationPtrOutput) ToTemplateFreeFormSectionLayoutConfigurationPtrOutput() TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateFreeFormSectionLayoutConfigurationPtrOutput) ToTemplateFreeFormSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateFreeFormSectionLayoutConfigurationPtrOutput) Elem() TemplateFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateFreeFormSectionLayoutConfiguration) TemplateFreeFormSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFreeFormSectionLayoutConfiguration
		return ret
	}).(TemplateFreeFormSectionLayoutConfigurationOutput)
}

func (o TemplateFreeFormSectionLayoutConfigurationPtrOutput) Elements() TemplateFreeFormLayoutElementArrayOutput {
	return o.ApplyT(func(v *TemplateFreeFormSectionLayoutConfiguration) []TemplateFreeFormLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(TemplateFreeFormLayoutElementArrayOutput)
}

type TemplateFunnelChartAggregatedFieldWells struct {
	Category []TemplateDimensionField `pulumi:"category"`
	Values   []TemplateMeasureField   `pulumi:"values"`
}

// TemplateFunnelChartAggregatedFieldWellsInput is an input type that accepts TemplateFunnelChartAggregatedFieldWellsArgs and TemplateFunnelChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateFunnelChartAggregatedFieldWellsInput` via:
//
//	TemplateFunnelChartAggregatedFieldWellsArgs{...}
type TemplateFunnelChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateFunnelChartAggregatedFieldWellsOutput() TemplateFunnelChartAggregatedFieldWellsOutput
	ToTemplateFunnelChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateFunnelChartAggregatedFieldWellsOutput
}

type TemplateFunnelChartAggregatedFieldWellsArgs struct {
	Category TemplateDimensionFieldArrayInput `pulumi:"category"`
	Values   TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateFunnelChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateFunnelChartAggregatedFieldWellsArgs) ToTemplateFunnelChartAggregatedFieldWellsOutput() TemplateFunnelChartAggregatedFieldWellsOutput {
	return i.ToTemplateFunnelChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateFunnelChartAggregatedFieldWellsArgs) ToTemplateFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartAggregatedFieldWellsOutput)
}

func (i TemplateFunnelChartAggregatedFieldWellsArgs) ToTemplateFunnelChartAggregatedFieldWellsPtrOutput() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartAggregatedFieldWellsArgs) ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartAggregatedFieldWellsOutput).ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateFunnelChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateFunnelChartAggregatedFieldWellsArgs, TemplateFunnelChartAggregatedFieldWellsPtr and TemplateFunnelChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateFunnelChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartAggregatedFieldWellsPtrOutput() TemplateFunnelChartAggregatedFieldWellsPtrOutput
	ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateFunnelChartAggregatedFieldWellsPtrOutput
}

type templateFunnelChartAggregatedFieldWellsPtrType TemplateFunnelChartAggregatedFieldWellsArgs

func TemplateFunnelChartAggregatedFieldWellsPtr(v *TemplateFunnelChartAggregatedFieldWellsArgs) TemplateFunnelChartAggregatedFieldWellsPtrInput {
	return (*templateFunnelChartAggregatedFieldWellsPtrType)(v)
}

func (*templateFunnelChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateFunnelChartAggregatedFieldWellsPtrType) ToTemplateFunnelChartAggregatedFieldWellsPtrOutput() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartAggregatedFieldWellsPtrType) ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartAggregatedFieldWellsPtrOutput)
}

type TemplateFunnelChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) ToTemplateFunnelChartAggregatedFieldWellsOutput() TemplateFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) ToTemplateFunnelChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) ToTemplateFunnelChartAggregatedFieldWellsPtrOutput() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartAggregatedFieldWells) *TemplateFunnelChartAggregatedFieldWells {
		return &v
	}).(TemplateFunnelChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateFunnelChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateFunnelChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateFunnelChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateFunnelChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateFunnelChartAggregatedFieldWellsPtrOutput) ToTemplateFunnelChartAggregatedFieldWellsPtrOutput() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateFunnelChartAggregatedFieldWellsPtrOutput) ToTemplateFunnelChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateFunnelChartAggregatedFieldWellsPtrOutput) Elem() TemplateFunnelChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateFunnelChartAggregatedFieldWells) TemplateFunnelChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartAggregatedFieldWells
		return ret
	}).(TemplateFunnelChartAggregatedFieldWellsOutput)
}

func (o TemplateFunnelChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateFunnelChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateFunnelChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateFunnelChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateFunnelChartConfiguration struct {
	CategoryLabelOptions *TemplateChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     *TemplateFunnelChartDataLabelOptions  `pulumi:"dataLabelOptions"`
	FieldWells           *TemplateFunnelChartFieldWells        `pulumi:"fieldWells"`
	SortConfiguration    *TemplateFunnelChartSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip              *TemplateTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions    *TemplateChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette        *TemplateVisualPalette                `pulumi:"visualPalette"`
}

// TemplateFunnelChartConfigurationInput is an input type that accepts TemplateFunnelChartConfigurationArgs and TemplateFunnelChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateFunnelChartConfigurationInput` via:
//
//	TemplateFunnelChartConfigurationArgs{...}
type TemplateFunnelChartConfigurationInput interface {
	pulumi.Input

	ToTemplateFunnelChartConfigurationOutput() TemplateFunnelChartConfigurationOutput
	ToTemplateFunnelChartConfigurationOutputWithContext(context.Context) TemplateFunnelChartConfigurationOutput
}

type TemplateFunnelChartConfigurationArgs struct {
	CategoryLabelOptions TemplateChartAxisLabelOptionsPtrInput        `pulumi:"categoryLabelOptions"`
	DataLabelOptions     TemplateFunnelChartDataLabelOptionsPtrInput  `pulumi:"dataLabelOptions"`
	FieldWells           TemplateFunnelChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration    TemplateFunnelChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip              TemplateTooltipOptionsPtrInput               `pulumi:"tooltip"`
	ValueLabelOptions    TemplateChartAxisLabelOptionsPtrInput        `pulumi:"valueLabelOptions"`
	VisualPalette        TemplateVisualPalettePtrInput                `pulumi:"visualPalette"`
}

func (TemplateFunnelChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartConfiguration)(nil)).Elem()
}

func (i TemplateFunnelChartConfigurationArgs) ToTemplateFunnelChartConfigurationOutput() TemplateFunnelChartConfigurationOutput {
	return i.ToTemplateFunnelChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateFunnelChartConfigurationArgs) ToTemplateFunnelChartConfigurationOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartConfigurationOutput)
}

func (i TemplateFunnelChartConfigurationArgs) ToTemplateFunnelChartConfigurationPtrOutput() TemplateFunnelChartConfigurationPtrOutput {
	return i.ToTemplateFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartConfigurationArgs) ToTemplateFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartConfigurationOutput).ToTemplateFunnelChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateFunnelChartConfigurationPtrInput is an input type that accepts TemplateFunnelChartConfigurationArgs, TemplateFunnelChartConfigurationPtr and TemplateFunnelChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartConfigurationPtrInput` via:
//
//	        TemplateFunnelChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartConfigurationPtrOutput() TemplateFunnelChartConfigurationPtrOutput
	ToTemplateFunnelChartConfigurationPtrOutputWithContext(context.Context) TemplateFunnelChartConfigurationPtrOutput
}

type templateFunnelChartConfigurationPtrType TemplateFunnelChartConfigurationArgs

func TemplateFunnelChartConfigurationPtr(v *TemplateFunnelChartConfigurationArgs) TemplateFunnelChartConfigurationPtrInput {
	return (*templateFunnelChartConfigurationPtrType)(v)
}

func (*templateFunnelChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartConfiguration)(nil)).Elem()
}

func (i *templateFunnelChartConfigurationPtrType) ToTemplateFunnelChartConfigurationPtrOutput() TemplateFunnelChartConfigurationPtrOutput {
	return i.ToTemplateFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartConfigurationPtrType) ToTemplateFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartConfigurationPtrOutput)
}

type TemplateFunnelChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartConfiguration)(nil)).Elem()
}

func (o TemplateFunnelChartConfigurationOutput) ToTemplateFunnelChartConfigurationOutput() TemplateFunnelChartConfigurationOutput {
	return o
}

func (o TemplateFunnelChartConfigurationOutput) ToTemplateFunnelChartConfigurationOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationOutput {
	return o
}

func (o TemplateFunnelChartConfigurationOutput) ToTemplateFunnelChartConfigurationPtrOutput() TemplateFunnelChartConfigurationPtrOutput {
	return o.ToTemplateFunnelChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartConfigurationOutput) ToTemplateFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartConfiguration) *TemplateFunnelChartConfiguration {
		return &v
	}).(TemplateFunnelChartConfigurationPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) DataLabelOptions() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateFunnelChartDataLabelOptions {
		return v.DataLabelOptions
	}).(TemplateFunnelChartDataLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) FieldWells() TemplateFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateFunnelChartFieldWells { return v.FieldWells }).(TemplateFunnelChartFieldWellsPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) SortConfiguration() TemplateFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateFunnelChartSortConfiguration {
		return v.SortConfiguration
	}).(TemplateFunnelChartSortConfigurationPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateChartAxisLabelOptions { return v.ValueLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateFunnelChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartConfiguration)(nil)).Elem()
}

func (o TemplateFunnelChartConfigurationPtrOutput) ToTemplateFunnelChartConfigurationPtrOutput() TemplateFunnelChartConfigurationPtrOutput {
	return o
}

func (o TemplateFunnelChartConfigurationPtrOutput) ToTemplateFunnelChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartConfigurationPtrOutput {
	return o
}

func (o TemplateFunnelChartConfigurationPtrOutput) Elem() TemplateFunnelChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) TemplateFunnelChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartConfiguration
		return ret
	}).(TemplateFunnelChartConfigurationOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) DataLabelOptions() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateFunnelChartDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabelOptions
	}).(TemplateFunnelChartDataLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) FieldWells() TemplateFunnelChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateFunnelChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateFunnelChartFieldWellsPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) SortConfiguration() TemplateFunnelChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateFunnelChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateFunnelChartSortConfigurationPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateFunnelChartDataLabelOptions struct {
	CategoryLabelVisibility *TemplateVisibility                       `pulumi:"categoryLabelVisibility"`
	LabelColor              *string                                   `pulumi:"labelColor"`
	LabelFontConfiguration  *TemplateFontConfiguration                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   *TemplateFunnelChartMeasureDataLabelStyle `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  *TemplateVisibility                       `pulumi:"measureLabelVisibility"`
	Position                *TemplateDataLabelPosition                `pulumi:"position"`
	Visibility              *TemplateVisibility                       `pulumi:"visibility"`
}

// TemplateFunnelChartDataLabelOptionsInput is an input type that accepts TemplateFunnelChartDataLabelOptionsArgs and TemplateFunnelChartDataLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateFunnelChartDataLabelOptionsInput` via:
//
//	TemplateFunnelChartDataLabelOptionsArgs{...}
type TemplateFunnelChartDataLabelOptionsInput interface {
	pulumi.Input

	ToTemplateFunnelChartDataLabelOptionsOutput() TemplateFunnelChartDataLabelOptionsOutput
	ToTemplateFunnelChartDataLabelOptionsOutputWithContext(context.Context) TemplateFunnelChartDataLabelOptionsOutput
}

type TemplateFunnelChartDataLabelOptionsArgs struct {
	CategoryLabelVisibility TemplateVisibilityPtrInput                       `pulumi:"categoryLabelVisibility"`
	LabelColor              pulumi.StringPtrInput                            `pulumi:"labelColor"`
	LabelFontConfiguration  TemplateFontConfigurationPtrInput                `pulumi:"labelFontConfiguration"`
	MeasureDataLabelStyle   TemplateFunnelChartMeasureDataLabelStylePtrInput `pulumi:"measureDataLabelStyle"`
	MeasureLabelVisibility  TemplateVisibilityPtrInput                       `pulumi:"measureLabelVisibility"`
	Position                TemplateDataLabelPositionPtrInput                `pulumi:"position"`
	Visibility              TemplateVisibilityPtrInput                       `pulumi:"visibility"`
}

func (TemplateFunnelChartDataLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i TemplateFunnelChartDataLabelOptionsArgs) ToTemplateFunnelChartDataLabelOptionsOutput() TemplateFunnelChartDataLabelOptionsOutput {
	return i.ToTemplateFunnelChartDataLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateFunnelChartDataLabelOptionsArgs) ToTemplateFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartDataLabelOptionsOutput)
}

func (i TemplateFunnelChartDataLabelOptionsArgs) ToTemplateFunnelChartDataLabelOptionsPtrOutput() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return i.ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartDataLabelOptionsArgs) ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartDataLabelOptionsOutput).ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateFunnelChartDataLabelOptionsPtrInput is an input type that accepts TemplateFunnelChartDataLabelOptionsArgs, TemplateFunnelChartDataLabelOptionsPtr and TemplateFunnelChartDataLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartDataLabelOptionsPtrInput` via:
//
//	        TemplateFunnelChartDataLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartDataLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartDataLabelOptionsPtrOutput() TemplateFunnelChartDataLabelOptionsPtrOutput
	ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(context.Context) TemplateFunnelChartDataLabelOptionsPtrOutput
}

type templateFunnelChartDataLabelOptionsPtrType TemplateFunnelChartDataLabelOptionsArgs

func TemplateFunnelChartDataLabelOptionsPtr(v *TemplateFunnelChartDataLabelOptionsArgs) TemplateFunnelChartDataLabelOptionsPtrInput {
	return (*templateFunnelChartDataLabelOptionsPtrType)(v)
}

func (*templateFunnelChartDataLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartDataLabelOptions)(nil)).Elem()
}

func (i *templateFunnelChartDataLabelOptionsPtrType) ToTemplateFunnelChartDataLabelOptionsPtrOutput() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return i.ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartDataLabelOptionsPtrType) ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartDataLabelOptionsPtrOutput)
}

type TemplateFunnelChartDataLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartDataLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o TemplateFunnelChartDataLabelOptionsOutput) ToTemplateFunnelChartDataLabelOptionsOutput() TemplateFunnelChartDataLabelOptionsOutput {
	return o
}

func (o TemplateFunnelChartDataLabelOptionsOutput) ToTemplateFunnelChartDataLabelOptionsOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsOutput {
	return o
}

func (o TemplateFunnelChartDataLabelOptionsOutput) ToTemplateFunnelChartDataLabelOptionsPtrOutput() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o.ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartDataLabelOptionsOutput) ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartDataLabelOptions) *TemplateFunnelChartDataLabelOptions {
		return &v
	}).(TemplateFunnelChartDataLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) CategoryLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateVisibility { return v.CategoryLabelVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *string { return v.LabelColor }).(pulumi.StringPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) LabelFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateFontConfiguration {
		return v.LabelFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) MeasureDataLabelStyle() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateFunnelChartMeasureDataLabelStyle {
		return v.MeasureDataLabelStyle
	}).(TemplateFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) MeasureLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateVisibility { return v.MeasureLabelVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) Position() TemplateDataLabelPositionPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateDataLabelPosition { return v.Position }).(TemplateDataLabelPositionPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartDataLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateFunnelChartDataLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartDataLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartDataLabelOptions)(nil)).Elem()
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) ToTemplateFunnelChartDataLabelOptionsPtrOutput() TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) ToTemplateFunnelChartDataLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartDataLabelOptionsPtrOutput {
	return o
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) Elem() TemplateFunnelChartDataLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) TemplateFunnelChartDataLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartDataLabelOptions
		return ret
	}).(TemplateFunnelChartDataLabelOptionsOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) CategoryLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.CategoryLabelVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) LabelColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.LabelColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) LabelFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.LabelFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) MeasureDataLabelStyle() TemplateFunnelChartMeasureDataLabelStylePtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateFunnelChartMeasureDataLabelStyle {
		if v == nil {
			return nil
		}
		return v.MeasureDataLabelStyle
	}).(TemplateFunnelChartMeasureDataLabelStylePtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) MeasureLabelVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.MeasureLabelVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) Position() TemplateDataLabelPositionPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateDataLabelPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(TemplateDataLabelPositionPtrOutput)
}

func (o TemplateFunnelChartDataLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartDataLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateFunnelChartFieldWells struct {
	FunnelChartAggregatedFieldWells *TemplateFunnelChartAggregatedFieldWells `pulumi:"funnelChartAggregatedFieldWells"`
}

// TemplateFunnelChartFieldWellsInput is an input type that accepts TemplateFunnelChartFieldWellsArgs and TemplateFunnelChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateFunnelChartFieldWellsInput` via:
//
//	TemplateFunnelChartFieldWellsArgs{...}
type TemplateFunnelChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateFunnelChartFieldWellsOutput() TemplateFunnelChartFieldWellsOutput
	ToTemplateFunnelChartFieldWellsOutputWithContext(context.Context) TemplateFunnelChartFieldWellsOutput
}

type TemplateFunnelChartFieldWellsArgs struct {
	FunnelChartAggregatedFieldWells TemplateFunnelChartAggregatedFieldWellsPtrInput `pulumi:"funnelChartAggregatedFieldWells"`
}

func (TemplateFunnelChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartFieldWells)(nil)).Elem()
}

func (i TemplateFunnelChartFieldWellsArgs) ToTemplateFunnelChartFieldWellsOutput() TemplateFunnelChartFieldWellsOutput {
	return i.ToTemplateFunnelChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateFunnelChartFieldWellsArgs) ToTemplateFunnelChartFieldWellsOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartFieldWellsOutput)
}

func (i TemplateFunnelChartFieldWellsArgs) ToTemplateFunnelChartFieldWellsPtrOutput() TemplateFunnelChartFieldWellsPtrOutput {
	return i.ToTemplateFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartFieldWellsArgs) ToTemplateFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartFieldWellsOutput).ToTemplateFunnelChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateFunnelChartFieldWellsPtrInput is an input type that accepts TemplateFunnelChartFieldWellsArgs, TemplateFunnelChartFieldWellsPtr and TemplateFunnelChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartFieldWellsPtrInput` via:
//
//	        TemplateFunnelChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartFieldWellsPtrOutput() TemplateFunnelChartFieldWellsPtrOutput
	ToTemplateFunnelChartFieldWellsPtrOutputWithContext(context.Context) TemplateFunnelChartFieldWellsPtrOutput
}

type templateFunnelChartFieldWellsPtrType TemplateFunnelChartFieldWellsArgs

func TemplateFunnelChartFieldWellsPtr(v *TemplateFunnelChartFieldWellsArgs) TemplateFunnelChartFieldWellsPtrInput {
	return (*templateFunnelChartFieldWellsPtrType)(v)
}

func (*templateFunnelChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartFieldWells)(nil)).Elem()
}

func (i *templateFunnelChartFieldWellsPtrType) ToTemplateFunnelChartFieldWellsPtrOutput() TemplateFunnelChartFieldWellsPtrOutput {
	return i.ToTemplateFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartFieldWellsPtrType) ToTemplateFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartFieldWellsPtrOutput)
}

type TemplateFunnelChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartFieldWells)(nil)).Elem()
}

func (o TemplateFunnelChartFieldWellsOutput) ToTemplateFunnelChartFieldWellsOutput() TemplateFunnelChartFieldWellsOutput {
	return o
}

func (o TemplateFunnelChartFieldWellsOutput) ToTemplateFunnelChartFieldWellsOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsOutput {
	return o
}

func (o TemplateFunnelChartFieldWellsOutput) ToTemplateFunnelChartFieldWellsPtrOutput() TemplateFunnelChartFieldWellsPtrOutput {
	return o.ToTemplateFunnelChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartFieldWellsOutput) ToTemplateFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartFieldWells) *TemplateFunnelChartFieldWells {
		return &v
	}).(TemplateFunnelChartFieldWellsPtrOutput)
}

func (o TemplateFunnelChartFieldWellsOutput) FunnelChartAggregatedFieldWells() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartFieldWells) *TemplateFunnelChartAggregatedFieldWells {
		return v.FunnelChartAggregatedFieldWells
	}).(TemplateFunnelChartAggregatedFieldWellsPtrOutput)
}

type TemplateFunnelChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartFieldWells)(nil)).Elem()
}

func (o TemplateFunnelChartFieldWellsPtrOutput) ToTemplateFunnelChartFieldWellsPtrOutput() TemplateFunnelChartFieldWellsPtrOutput {
	return o
}

func (o TemplateFunnelChartFieldWellsPtrOutput) ToTemplateFunnelChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateFunnelChartFieldWellsPtrOutput {
	return o
}

func (o TemplateFunnelChartFieldWellsPtrOutput) Elem() TemplateFunnelChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateFunnelChartFieldWells) TemplateFunnelChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartFieldWells
		return ret
	}).(TemplateFunnelChartFieldWellsOutput)
}

func (o TemplateFunnelChartFieldWellsPtrOutput) FunnelChartAggregatedFieldWells() TemplateFunnelChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartFieldWells) *TemplateFunnelChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.FunnelChartAggregatedFieldWells
	}).(TemplateFunnelChartAggregatedFieldWellsPtrOutput)
}

type TemplateFunnelChartSortConfiguration struct {
	CategoryItemsLimit *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []TemplateFieldSortOptions       `pulumi:"categorySort"`
}

// TemplateFunnelChartSortConfigurationInput is an input type that accepts TemplateFunnelChartSortConfigurationArgs and TemplateFunnelChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateFunnelChartSortConfigurationInput` via:
//
//	TemplateFunnelChartSortConfigurationArgs{...}
type TemplateFunnelChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateFunnelChartSortConfigurationOutput() TemplateFunnelChartSortConfigurationOutput
	ToTemplateFunnelChartSortConfigurationOutputWithContext(context.Context) TemplateFunnelChartSortConfigurationOutput
}

type TemplateFunnelChartSortConfigurationArgs struct {
	CategoryItemsLimit TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
}

func (TemplateFunnelChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartSortConfiguration)(nil)).Elem()
}

func (i TemplateFunnelChartSortConfigurationArgs) ToTemplateFunnelChartSortConfigurationOutput() TemplateFunnelChartSortConfigurationOutput {
	return i.ToTemplateFunnelChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateFunnelChartSortConfigurationArgs) ToTemplateFunnelChartSortConfigurationOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartSortConfigurationOutput)
}

func (i TemplateFunnelChartSortConfigurationArgs) ToTemplateFunnelChartSortConfigurationPtrOutput() TemplateFunnelChartSortConfigurationPtrOutput {
	return i.ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartSortConfigurationArgs) ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartSortConfigurationOutput).ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateFunnelChartSortConfigurationPtrInput is an input type that accepts TemplateFunnelChartSortConfigurationArgs, TemplateFunnelChartSortConfigurationPtr and TemplateFunnelChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartSortConfigurationPtrInput` via:
//
//	        TemplateFunnelChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartSortConfigurationPtrOutput() TemplateFunnelChartSortConfigurationPtrOutput
	ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(context.Context) TemplateFunnelChartSortConfigurationPtrOutput
}

type templateFunnelChartSortConfigurationPtrType TemplateFunnelChartSortConfigurationArgs

func TemplateFunnelChartSortConfigurationPtr(v *TemplateFunnelChartSortConfigurationArgs) TemplateFunnelChartSortConfigurationPtrInput {
	return (*templateFunnelChartSortConfigurationPtrType)(v)
}

func (*templateFunnelChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartSortConfiguration)(nil)).Elem()
}

func (i *templateFunnelChartSortConfigurationPtrType) ToTemplateFunnelChartSortConfigurationPtrOutput() TemplateFunnelChartSortConfigurationPtrOutput {
	return i.ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartSortConfigurationPtrType) ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartSortConfigurationPtrOutput)
}

type TemplateFunnelChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartSortConfiguration)(nil)).Elem()
}

func (o TemplateFunnelChartSortConfigurationOutput) ToTemplateFunnelChartSortConfigurationOutput() TemplateFunnelChartSortConfigurationOutput {
	return o
}

func (o TemplateFunnelChartSortConfigurationOutput) ToTemplateFunnelChartSortConfigurationOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationOutput {
	return o
}

func (o TemplateFunnelChartSortConfigurationOutput) ToTemplateFunnelChartSortConfigurationPtrOutput() TemplateFunnelChartSortConfigurationPtrOutput {
	return o.ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartSortConfigurationOutput) ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartSortConfiguration) *TemplateFunnelChartSortConfiguration {
		return &v
	}).(TemplateFunnelChartSortConfigurationPtrOutput)
}

func (o TemplateFunnelChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateFunnelChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateFunnelChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateFunnelChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartSortConfiguration)(nil)).Elem()
}

func (o TemplateFunnelChartSortConfigurationPtrOutput) ToTemplateFunnelChartSortConfigurationPtrOutput() TemplateFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateFunnelChartSortConfigurationPtrOutput) ToTemplateFunnelChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateFunnelChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateFunnelChartSortConfigurationPtrOutput) Elem() TemplateFunnelChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateFunnelChartSortConfiguration) TemplateFunnelChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartSortConfiguration
		return ret
	}).(TemplateFunnelChartSortConfigurationOutput)
}

func (o TemplateFunnelChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateFunnelChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateFunnelChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateFunnelChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateFunnelChartConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateFunnelChartVisualInput is an input type that accepts TemplateFunnelChartVisualArgs and TemplateFunnelChartVisualOutput values.
// You can construct a concrete instance of `TemplateFunnelChartVisualInput` via:
//
//	TemplateFunnelChartVisualArgs{...}
type TemplateFunnelChartVisualInput interface {
	pulumi.Input

	ToTemplateFunnelChartVisualOutput() TemplateFunnelChartVisualOutput
	ToTemplateFunnelChartVisualOutputWithContext(context.Context) TemplateFunnelChartVisualOutput
}

type TemplateFunnelChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateFunnelChartConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateFunnelChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartVisual)(nil)).Elem()
}

func (i TemplateFunnelChartVisualArgs) ToTemplateFunnelChartVisualOutput() TemplateFunnelChartVisualOutput {
	return i.ToTemplateFunnelChartVisualOutputWithContext(context.Background())
}

func (i TemplateFunnelChartVisualArgs) ToTemplateFunnelChartVisualOutputWithContext(ctx context.Context) TemplateFunnelChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartVisualOutput)
}

func (i TemplateFunnelChartVisualArgs) ToTemplateFunnelChartVisualPtrOutput() TemplateFunnelChartVisualPtrOutput {
	return i.ToTemplateFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateFunnelChartVisualArgs) ToTemplateFunnelChartVisualPtrOutputWithContext(ctx context.Context) TemplateFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartVisualOutput).ToTemplateFunnelChartVisualPtrOutputWithContext(ctx)
}

// TemplateFunnelChartVisualPtrInput is an input type that accepts TemplateFunnelChartVisualArgs, TemplateFunnelChartVisualPtr and TemplateFunnelChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateFunnelChartVisualPtrInput` via:
//
//	        TemplateFunnelChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateFunnelChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateFunnelChartVisualPtrOutput() TemplateFunnelChartVisualPtrOutput
	ToTemplateFunnelChartVisualPtrOutputWithContext(context.Context) TemplateFunnelChartVisualPtrOutput
}

type templateFunnelChartVisualPtrType TemplateFunnelChartVisualArgs

func TemplateFunnelChartVisualPtr(v *TemplateFunnelChartVisualArgs) TemplateFunnelChartVisualPtrInput {
	return (*templateFunnelChartVisualPtrType)(v)
}

func (*templateFunnelChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartVisual)(nil)).Elem()
}

func (i *templateFunnelChartVisualPtrType) ToTemplateFunnelChartVisualPtrOutput() TemplateFunnelChartVisualPtrOutput {
	return i.ToTemplateFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateFunnelChartVisualPtrType) ToTemplateFunnelChartVisualPtrOutputWithContext(ctx context.Context) TemplateFunnelChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFunnelChartVisualPtrOutput)
}

type TemplateFunnelChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFunnelChartVisual)(nil)).Elem()
}

func (o TemplateFunnelChartVisualOutput) ToTemplateFunnelChartVisualOutput() TemplateFunnelChartVisualOutput {
	return o
}

func (o TemplateFunnelChartVisualOutput) ToTemplateFunnelChartVisualOutputWithContext(ctx context.Context) TemplateFunnelChartVisualOutput {
	return o
}

func (o TemplateFunnelChartVisualOutput) ToTemplateFunnelChartVisualPtrOutput() TemplateFunnelChartVisualPtrOutput {
	return o.ToTemplateFunnelChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateFunnelChartVisualOutput) ToTemplateFunnelChartVisualPtrOutputWithContext(ctx context.Context) TemplateFunnelChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFunnelChartVisual) *TemplateFunnelChartVisual {
		return &v
	}).(TemplateFunnelChartVisualPtrOutput)
}

func (o TemplateFunnelChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateFunnelChartVisualOutput) ChartConfiguration() TemplateFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) *TemplateFunnelChartConfiguration { return v.ChartConfiguration }).(TemplateFunnelChartConfigurationPtrOutput)
}

func (o TemplateFunnelChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateFunnelChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFunnelChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateFunnelChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateFunnelChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFunnelChartVisual)(nil)).Elem()
}

func (o TemplateFunnelChartVisualPtrOutput) ToTemplateFunnelChartVisualPtrOutput() TemplateFunnelChartVisualPtrOutput {
	return o
}

func (o TemplateFunnelChartVisualPtrOutput) ToTemplateFunnelChartVisualPtrOutputWithContext(ctx context.Context) TemplateFunnelChartVisualPtrOutput {
	return o
}

func (o TemplateFunnelChartVisualPtrOutput) Elem() TemplateFunnelChartVisualOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) TemplateFunnelChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateFunnelChartVisual
		return ret
	}).(TemplateFunnelChartVisualOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) ChartConfiguration() TemplateFunnelChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) *TemplateFunnelChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateFunnelChartConfigurationPtrOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateFunnelChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFunnelChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateGaugeChartArcConditionalFormatting struct {
	ForegroundColor *TemplateConditionalFormattingColor `pulumi:"foregroundColor"`
}

// TemplateGaugeChartArcConditionalFormattingInput is an input type that accepts TemplateGaugeChartArcConditionalFormattingArgs and TemplateGaugeChartArcConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateGaugeChartArcConditionalFormattingInput` via:
//
//	TemplateGaugeChartArcConditionalFormattingArgs{...}
type TemplateGaugeChartArcConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateGaugeChartArcConditionalFormattingOutput() TemplateGaugeChartArcConditionalFormattingOutput
	ToTemplateGaugeChartArcConditionalFormattingOutputWithContext(context.Context) TemplateGaugeChartArcConditionalFormattingOutput
}

type TemplateGaugeChartArcConditionalFormattingArgs struct {
	ForegroundColor TemplateConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (TemplateGaugeChartArcConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i TemplateGaugeChartArcConditionalFormattingArgs) ToTemplateGaugeChartArcConditionalFormattingOutput() TemplateGaugeChartArcConditionalFormattingOutput {
	return i.ToTemplateGaugeChartArcConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateGaugeChartArcConditionalFormattingArgs) ToTemplateGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartArcConditionalFormattingOutput)
}

func (i TemplateGaugeChartArcConditionalFormattingArgs) ToTemplateGaugeChartArcConditionalFormattingPtrOutput() TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartArcConditionalFormattingArgs) ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartArcConditionalFormattingOutput).ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateGaugeChartArcConditionalFormattingPtrInput is an input type that accepts TemplateGaugeChartArcConditionalFormattingArgs, TemplateGaugeChartArcConditionalFormattingPtr and TemplateGaugeChartArcConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartArcConditionalFormattingPtrInput` via:
//
//	        TemplateGaugeChartArcConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartArcConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartArcConditionalFormattingPtrOutput() TemplateGaugeChartArcConditionalFormattingPtrOutput
	ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Context) TemplateGaugeChartArcConditionalFormattingPtrOutput
}

type templateGaugeChartArcConditionalFormattingPtrType TemplateGaugeChartArcConditionalFormattingArgs

func TemplateGaugeChartArcConditionalFormattingPtr(v *TemplateGaugeChartArcConditionalFormattingArgs) TemplateGaugeChartArcConditionalFormattingPtrInput {
	return (*templateGaugeChartArcConditionalFormattingPtrType)(v)
}

func (*templateGaugeChartArcConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (i *templateGaugeChartArcConditionalFormattingPtrType) ToTemplateGaugeChartArcConditionalFormattingPtrOutput() TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartArcConditionalFormattingPtrType) ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartArcConditionalFormattingPtrOutput)
}

type TemplateGaugeChartArcConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartArcConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartArcConditionalFormattingOutput) ToTemplateGaugeChartArcConditionalFormattingOutput() TemplateGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartArcConditionalFormattingOutput) ToTemplateGaugeChartArcConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartArcConditionalFormattingOutput) ToTemplateGaugeChartArcConditionalFormattingPtrOutput() TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return o.ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartArcConditionalFormattingOutput) ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartArcConditionalFormatting) *TemplateGaugeChartArcConditionalFormatting {
		return &v
	}).(TemplateGaugeChartArcConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartArcConditionalFormattingOutput) ForegroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartArcConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.ForegroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateGaugeChartArcConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartArcConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartArcConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartArcConditionalFormattingPtrOutput) ToTemplateGaugeChartArcConditionalFormattingPtrOutput() TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartArcConditionalFormattingPtrOutput) ToTemplateGaugeChartArcConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartArcConditionalFormattingPtrOutput) Elem() TemplateGaugeChartArcConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateGaugeChartArcConditionalFormatting) TemplateGaugeChartArcConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartArcConditionalFormatting
		return ret
	}).(TemplateGaugeChartArcConditionalFormattingOutput)
}

func (o TemplateGaugeChartArcConditionalFormattingPtrOutput) ForegroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartArcConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateGaugeChartConditionalFormatting struct {
	ConditionalFormattingOptions []TemplateGaugeChartConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// TemplateGaugeChartConditionalFormattingInput is an input type that accepts TemplateGaugeChartConditionalFormattingArgs and TemplateGaugeChartConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConditionalFormattingInput` via:
//
//	TemplateGaugeChartConditionalFormattingArgs{...}
type TemplateGaugeChartConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateGaugeChartConditionalFormattingOutput() TemplateGaugeChartConditionalFormattingOutput
	ToTemplateGaugeChartConditionalFormattingOutputWithContext(context.Context) TemplateGaugeChartConditionalFormattingOutput
}

type TemplateGaugeChartConditionalFormattingArgs struct {
	ConditionalFormattingOptions TemplateGaugeChartConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (TemplateGaugeChartConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i TemplateGaugeChartConditionalFormattingArgs) ToTemplateGaugeChartConditionalFormattingOutput() TemplateGaugeChartConditionalFormattingOutput {
	return i.ToTemplateGaugeChartConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConditionalFormattingArgs) ToTemplateGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConditionalFormattingOutput)
}

func (i TemplateGaugeChartConditionalFormattingArgs) ToTemplateGaugeChartConditionalFormattingPtrOutput() TemplateGaugeChartConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConditionalFormattingArgs) ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConditionalFormattingOutput).ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateGaugeChartConditionalFormattingPtrInput is an input type that accepts TemplateGaugeChartConditionalFormattingArgs, TemplateGaugeChartConditionalFormattingPtr and TemplateGaugeChartConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConditionalFormattingPtrInput` via:
//
//	        TemplateGaugeChartConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartConditionalFormattingPtrOutput() TemplateGaugeChartConditionalFormattingPtrOutput
	ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(context.Context) TemplateGaugeChartConditionalFormattingPtrOutput
}

type templateGaugeChartConditionalFormattingPtrType TemplateGaugeChartConditionalFormattingArgs

func TemplateGaugeChartConditionalFormattingPtr(v *TemplateGaugeChartConditionalFormattingArgs) TemplateGaugeChartConditionalFormattingPtrInput {
	return (*templateGaugeChartConditionalFormattingPtrType)(v)
}

func (*templateGaugeChartConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartConditionalFormatting)(nil)).Elem()
}

func (i *templateGaugeChartConditionalFormattingPtrType) ToTemplateGaugeChartConditionalFormattingPtrOutput() TemplateGaugeChartConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartConditionalFormattingPtrType) ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConditionalFormattingPtrOutput)
}

type TemplateGaugeChartConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartConditionalFormattingOutput) ToTemplateGaugeChartConditionalFormattingOutput() TemplateGaugeChartConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOutput) ToTemplateGaugeChartConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOutput) ToTemplateGaugeChartConditionalFormattingPtrOutput() TemplateGaugeChartConditionalFormattingPtrOutput {
	return o.ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartConditionalFormattingOutput) ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartConditionalFormatting) *TemplateGaugeChartConditionalFormatting {
		return &v
	}).(TemplateGaugeChartConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartConditionalFormattingOutput) ConditionalFormattingOptions() TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v TemplateGaugeChartConditionalFormatting) []TemplateGaugeChartConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(TemplateGaugeChartConditionalFormattingOptionArrayOutput)
}

type TemplateGaugeChartConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartConditionalFormattingPtrOutput) ToTemplateGaugeChartConditionalFormattingPtrOutput() TemplateGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingPtrOutput) ToTemplateGaugeChartConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingPtrOutput) Elem() TemplateGaugeChartConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConditionalFormatting) TemplateGaugeChartConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartConditionalFormatting
		return ret
	}).(TemplateGaugeChartConditionalFormattingOutput)
}

func (o TemplateGaugeChartConditionalFormattingPtrOutput) ConditionalFormattingOptions() TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConditionalFormatting) []TemplateGaugeChartConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(TemplateGaugeChartConditionalFormattingOptionArrayOutput)
}

type TemplateGaugeChartConditionalFormattingOption struct {
	Arc          *TemplateGaugeChartArcConditionalFormatting          `pulumi:"arc"`
	PrimaryValue *TemplateGaugeChartPrimaryValueConditionalFormatting `pulumi:"primaryValue"`
}

// TemplateGaugeChartConditionalFormattingOptionInput is an input type that accepts TemplateGaugeChartConditionalFormattingOptionArgs and TemplateGaugeChartConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConditionalFormattingOptionInput` via:
//
//	TemplateGaugeChartConditionalFormattingOptionArgs{...}
type TemplateGaugeChartConditionalFormattingOptionInput interface {
	pulumi.Input

	ToTemplateGaugeChartConditionalFormattingOptionOutput() TemplateGaugeChartConditionalFormattingOptionOutput
	ToTemplateGaugeChartConditionalFormattingOptionOutputWithContext(context.Context) TemplateGaugeChartConditionalFormattingOptionOutput
}

type TemplateGaugeChartConditionalFormattingOptionArgs struct {
	Arc          TemplateGaugeChartArcConditionalFormattingPtrInput          `pulumi:"arc"`
	PrimaryValue TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput `pulumi:"primaryValue"`
}

func (TemplateGaugeChartConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateGaugeChartConditionalFormattingOptionArgs) ToTemplateGaugeChartConditionalFormattingOptionOutput() TemplateGaugeChartConditionalFormattingOptionOutput {
	return i.ToTemplateGaugeChartConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConditionalFormattingOptionArgs) ToTemplateGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConditionalFormattingOptionOutput)
}

// TemplateGaugeChartConditionalFormattingOptionArrayInput is an input type that accepts TemplateGaugeChartConditionalFormattingOptionArray and TemplateGaugeChartConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConditionalFormattingOptionArrayInput` via:
//
//	TemplateGaugeChartConditionalFormattingOptionArray{ TemplateGaugeChartConditionalFormattingOptionArgs{...} }
type TemplateGaugeChartConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToTemplateGaugeChartConditionalFormattingOptionArrayOutput() TemplateGaugeChartConditionalFormattingOptionArrayOutput
	ToTemplateGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Context) TemplateGaugeChartConditionalFormattingOptionArrayOutput
}

type TemplateGaugeChartConditionalFormattingOptionArray []TemplateGaugeChartConditionalFormattingOptionInput

func (TemplateGaugeChartConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateGaugeChartConditionalFormattingOptionArray) ToTemplateGaugeChartConditionalFormattingOptionArrayOutput() TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return i.ToTemplateGaugeChartConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConditionalFormattingOptionArray) ToTemplateGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConditionalFormattingOptionArrayOutput)
}

type TemplateGaugeChartConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateGaugeChartConditionalFormattingOptionOutput) ToTemplateGaugeChartConditionalFormattingOptionOutput() TemplateGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOptionOutput) ToTemplateGaugeChartConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOptionOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOptionOutput) Arc() TemplateGaugeChartArcConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConditionalFormattingOption) *TemplateGaugeChartArcConditionalFormatting {
		return v.Arc
	}).(TemplateGaugeChartArcConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartConditionalFormattingOptionOutput) PrimaryValue() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConditionalFormattingOption) *TemplateGaugeChartPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type TemplateGaugeChartConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGaugeChartConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateGaugeChartConditionalFormattingOptionArrayOutput) ToTemplateGaugeChartConditionalFormattingOptionArrayOutput() TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOptionArrayOutput) ToTemplateGaugeChartConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateGaugeChartConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateGaugeChartConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) TemplateGaugeChartConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateGaugeChartConditionalFormattingOption {
		return vs[0].([]TemplateGaugeChartConditionalFormattingOption)[vs[1].(int)]
	}).(TemplateGaugeChartConditionalFormattingOptionOutput)
}

type TemplateGaugeChartConfiguration struct {
	DataLabels        *TemplateDataLabelOptions     `pulumi:"dataLabels"`
	FieldWells        *TemplateGaugeChartFieldWells `pulumi:"fieldWells"`
	GaugeChartOptions *TemplateGaugeChartOptions    `pulumi:"gaugeChartOptions"`
	TooltipOptions    *TemplateTooltipOptions       `pulumi:"tooltipOptions"`
	VisualPalette     *TemplateVisualPalette        `pulumi:"visualPalette"`
}

// TemplateGaugeChartConfigurationInput is an input type that accepts TemplateGaugeChartConfigurationArgs and TemplateGaugeChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConfigurationInput` via:
//
//	TemplateGaugeChartConfigurationArgs{...}
type TemplateGaugeChartConfigurationInput interface {
	pulumi.Input

	ToTemplateGaugeChartConfigurationOutput() TemplateGaugeChartConfigurationOutput
	ToTemplateGaugeChartConfigurationOutputWithContext(context.Context) TemplateGaugeChartConfigurationOutput
}

type TemplateGaugeChartConfigurationArgs struct {
	DataLabels        TemplateDataLabelOptionsPtrInput     `pulumi:"dataLabels"`
	FieldWells        TemplateGaugeChartFieldWellsPtrInput `pulumi:"fieldWells"`
	GaugeChartOptions TemplateGaugeChartOptionsPtrInput    `pulumi:"gaugeChartOptions"`
	TooltipOptions    TemplateTooltipOptionsPtrInput       `pulumi:"tooltipOptions"`
	VisualPalette     TemplateVisualPalettePtrInput        `pulumi:"visualPalette"`
}

func (TemplateGaugeChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConfiguration)(nil)).Elem()
}

func (i TemplateGaugeChartConfigurationArgs) ToTemplateGaugeChartConfigurationOutput() TemplateGaugeChartConfigurationOutput {
	return i.ToTemplateGaugeChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConfigurationArgs) ToTemplateGaugeChartConfigurationOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConfigurationOutput)
}

func (i TemplateGaugeChartConfigurationArgs) ToTemplateGaugeChartConfigurationPtrOutput() TemplateGaugeChartConfigurationPtrOutput {
	return i.ToTemplateGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartConfigurationArgs) ToTemplateGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConfigurationOutput).ToTemplateGaugeChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateGaugeChartConfigurationPtrInput is an input type that accepts TemplateGaugeChartConfigurationArgs, TemplateGaugeChartConfigurationPtr and TemplateGaugeChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartConfigurationPtrInput` via:
//
//	        TemplateGaugeChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartConfigurationPtrOutput() TemplateGaugeChartConfigurationPtrOutput
	ToTemplateGaugeChartConfigurationPtrOutputWithContext(context.Context) TemplateGaugeChartConfigurationPtrOutput
}

type templateGaugeChartConfigurationPtrType TemplateGaugeChartConfigurationArgs

func TemplateGaugeChartConfigurationPtr(v *TemplateGaugeChartConfigurationArgs) TemplateGaugeChartConfigurationPtrInput {
	return (*templateGaugeChartConfigurationPtrType)(v)
}

func (*templateGaugeChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartConfiguration)(nil)).Elem()
}

func (i *templateGaugeChartConfigurationPtrType) ToTemplateGaugeChartConfigurationPtrOutput() TemplateGaugeChartConfigurationPtrOutput {
	return i.ToTemplateGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartConfigurationPtrType) ToTemplateGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartConfigurationPtrOutput)
}

type TemplateGaugeChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartConfiguration)(nil)).Elem()
}

func (o TemplateGaugeChartConfigurationOutput) ToTemplateGaugeChartConfigurationOutput() TemplateGaugeChartConfigurationOutput {
	return o
}

func (o TemplateGaugeChartConfigurationOutput) ToTemplateGaugeChartConfigurationOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationOutput {
	return o
}

func (o TemplateGaugeChartConfigurationOutput) ToTemplateGaugeChartConfigurationPtrOutput() TemplateGaugeChartConfigurationPtrOutput {
	return o.ToTemplateGaugeChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartConfigurationOutput) ToTemplateGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartConfiguration) *TemplateGaugeChartConfiguration {
		return &v
	}).(TemplateGaugeChartConfigurationPtrOutput)
}

func (o TemplateGaugeChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationOutput) FieldWells() TemplateGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConfiguration) *TemplateGaugeChartFieldWells { return v.FieldWells }).(TemplateGaugeChartFieldWellsPtrOutput)
}

func (o TemplateGaugeChartConfigurationOutput) GaugeChartOptions() TemplateGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConfiguration) *TemplateGaugeChartOptions { return v.GaugeChartOptions }).(TemplateGaugeChartOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationOutput) TooltipOptions() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConfiguration) *TemplateTooltipOptions { return v.TooltipOptions }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateGaugeChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartConfiguration)(nil)).Elem()
}

func (o TemplateGaugeChartConfigurationPtrOutput) ToTemplateGaugeChartConfigurationPtrOutput() TemplateGaugeChartConfigurationPtrOutput {
	return o
}

func (o TemplateGaugeChartConfigurationPtrOutput) ToTemplateGaugeChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateGaugeChartConfigurationPtrOutput {
	return o
}

func (o TemplateGaugeChartConfigurationPtrOutput) Elem() TemplateGaugeChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) TemplateGaugeChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartConfiguration
		return ret
	}).(TemplateGaugeChartConfigurationOutput)
}

func (o TemplateGaugeChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationPtrOutput) FieldWells() TemplateGaugeChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) *TemplateGaugeChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateGaugeChartFieldWellsPtrOutput)
}

func (o TemplateGaugeChartConfigurationPtrOutput) GaugeChartOptions() TemplateGaugeChartOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) *TemplateGaugeChartOptions {
		if v == nil {
			return nil
		}
		return v.GaugeChartOptions
	}).(TemplateGaugeChartOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationPtrOutput) TooltipOptions() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.TooltipOptions
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateGaugeChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateGaugeChartFieldWells struct {
	TargetValues []TemplateMeasureField `pulumi:"targetValues"`
	Values       []TemplateMeasureField `pulumi:"values"`
}

// TemplateGaugeChartFieldWellsInput is an input type that accepts TemplateGaugeChartFieldWellsArgs and TemplateGaugeChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateGaugeChartFieldWellsInput` via:
//
//	TemplateGaugeChartFieldWellsArgs{...}
type TemplateGaugeChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateGaugeChartFieldWellsOutput() TemplateGaugeChartFieldWellsOutput
	ToTemplateGaugeChartFieldWellsOutputWithContext(context.Context) TemplateGaugeChartFieldWellsOutput
}

type TemplateGaugeChartFieldWellsArgs struct {
	TargetValues TemplateMeasureFieldArrayInput `pulumi:"targetValues"`
	Values       TemplateMeasureFieldArrayInput `pulumi:"values"`
}

func (TemplateGaugeChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartFieldWells)(nil)).Elem()
}

func (i TemplateGaugeChartFieldWellsArgs) ToTemplateGaugeChartFieldWellsOutput() TemplateGaugeChartFieldWellsOutput {
	return i.ToTemplateGaugeChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateGaugeChartFieldWellsArgs) ToTemplateGaugeChartFieldWellsOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartFieldWellsOutput)
}

func (i TemplateGaugeChartFieldWellsArgs) ToTemplateGaugeChartFieldWellsPtrOutput() TemplateGaugeChartFieldWellsPtrOutput {
	return i.ToTemplateGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartFieldWellsArgs) ToTemplateGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartFieldWellsOutput).ToTemplateGaugeChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateGaugeChartFieldWellsPtrInput is an input type that accepts TemplateGaugeChartFieldWellsArgs, TemplateGaugeChartFieldWellsPtr and TemplateGaugeChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartFieldWellsPtrInput` via:
//
//	        TemplateGaugeChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartFieldWellsPtrOutput() TemplateGaugeChartFieldWellsPtrOutput
	ToTemplateGaugeChartFieldWellsPtrOutputWithContext(context.Context) TemplateGaugeChartFieldWellsPtrOutput
}

type templateGaugeChartFieldWellsPtrType TemplateGaugeChartFieldWellsArgs

func TemplateGaugeChartFieldWellsPtr(v *TemplateGaugeChartFieldWellsArgs) TemplateGaugeChartFieldWellsPtrInput {
	return (*templateGaugeChartFieldWellsPtrType)(v)
}

func (*templateGaugeChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartFieldWells)(nil)).Elem()
}

func (i *templateGaugeChartFieldWellsPtrType) ToTemplateGaugeChartFieldWellsPtrOutput() TemplateGaugeChartFieldWellsPtrOutput {
	return i.ToTemplateGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartFieldWellsPtrType) ToTemplateGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartFieldWellsPtrOutput)
}

type TemplateGaugeChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartFieldWells)(nil)).Elem()
}

func (o TemplateGaugeChartFieldWellsOutput) ToTemplateGaugeChartFieldWellsOutput() TemplateGaugeChartFieldWellsOutput {
	return o
}

func (o TemplateGaugeChartFieldWellsOutput) ToTemplateGaugeChartFieldWellsOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsOutput {
	return o
}

func (o TemplateGaugeChartFieldWellsOutput) ToTemplateGaugeChartFieldWellsPtrOutput() TemplateGaugeChartFieldWellsPtrOutput {
	return o.ToTemplateGaugeChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartFieldWellsOutput) ToTemplateGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartFieldWells) *TemplateGaugeChartFieldWells {
		return &v
	}).(TemplateGaugeChartFieldWellsPtrOutput)
}

func (o TemplateGaugeChartFieldWellsOutput) TargetValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateGaugeChartFieldWells) []TemplateMeasureField { return v.TargetValues }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateGaugeChartFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateGaugeChartFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateGaugeChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartFieldWells)(nil)).Elem()
}

func (o TemplateGaugeChartFieldWellsPtrOutput) ToTemplateGaugeChartFieldWellsPtrOutput() TemplateGaugeChartFieldWellsPtrOutput {
	return o
}

func (o TemplateGaugeChartFieldWellsPtrOutput) ToTemplateGaugeChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartFieldWellsPtrOutput {
	return o
}

func (o TemplateGaugeChartFieldWellsPtrOutput) Elem() TemplateGaugeChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateGaugeChartFieldWells) TemplateGaugeChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartFieldWells
		return ret
	}).(TemplateGaugeChartFieldWellsOutput)
}

func (o TemplateGaugeChartFieldWellsPtrOutput) TargetValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateGaugeChartFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateGaugeChartFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateGaugeChartFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateGaugeChartOptions struct {
	Arc                           *TemplateArcConfiguration        `pulumi:"arc"`
	ArcAxis                       *TemplateArcAxisConfiguration    `pulumi:"arcAxis"`
	Comparison                    *TemplateComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType       *TemplatePrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration *TemplateFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
}

// TemplateGaugeChartOptionsInput is an input type that accepts TemplateGaugeChartOptionsArgs and TemplateGaugeChartOptionsOutput values.
// You can construct a concrete instance of `TemplateGaugeChartOptionsInput` via:
//
//	TemplateGaugeChartOptionsArgs{...}
type TemplateGaugeChartOptionsInput interface {
	pulumi.Input

	ToTemplateGaugeChartOptionsOutput() TemplateGaugeChartOptionsOutput
	ToTemplateGaugeChartOptionsOutputWithContext(context.Context) TemplateGaugeChartOptionsOutput
}

type TemplateGaugeChartOptionsArgs struct {
	Arc                           TemplateArcConfigurationPtrInput        `pulumi:"arc"`
	ArcAxis                       TemplateArcAxisConfigurationPtrInput    `pulumi:"arcAxis"`
	Comparison                    TemplateComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType       TemplatePrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration TemplateFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
}

func (TemplateGaugeChartOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartOptions)(nil)).Elem()
}

func (i TemplateGaugeChartOptionsArgs) ToTemplateGaugeChartOptionsOutput() TemplateGaugeChartOptionsOutput {
	return i.ToTemplateGaugeChartOptionsOutputWithContext(context.Background())
}

func (i TemplateGaugeChartOptionsArgs) ToTemplateGaugeChartOptionsOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartOptionsOutput)
}

func (i TemplateGaugeChartOptionsArgs) ToTemplateGaugeChartOptionsPtrOutput() TemplateGaugeChartOptionsPtrOutput {
	return i.ToTemplateGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartOptionsArgs) ToTemplateGaugeChartOptionsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartOptionsOutput).ToTemplateGaugeChartOptionsPtrOutputWithContext(ctx)
}

// TemplateGaugeChartOptionsPtrInput is an input type that accepts TemplateGaugeChartOptionsArgs, TemplateGaugeChartOptionsPtr and TemplateGaugeChartOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartOptionsPtrInput` via:
//
//	        TemplateGaugeChartOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartOptionsPtrOutput() TemplateGaugeChartOptionsPtrOutput
	ToTemplateGaugeChartOptionsPtrOutputWithContext(context.Context) TemplateGaugeChartOptionsPtrOutput
}

type templateGaugeChartOptionsPtrType TemplateGaugeChartOptionsArgs

func TemplateGaugeChartOptionsPtr(v *TemplateGaugeChartOptionsArgs) TemplateGaugeChartOptionsPtrInput {
	return (*templateGaugeChartOptionsPtrType)(v)
}

func (*templateGaugeChartOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartOptions)(nil)).Elem()
}

func (i *templateGaugeChartOptionsPtrType) ToTemplateGaugeChartOptionsPtrOutput() TemplateGaugeChartOptionsPtrOutput {
	return i.ToTemplateGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartOptionsPtrType) ToTemplateGaugeChartOptionsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartOptionsPtrOutput)
}

type TemplateGaugeChartOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartOptions)(nil)).Elem()
}

func (o TemplateGaugeChartOptionsOutput) ToTemplateGaugeChartOptionsOutput() TemplateGaugeChartOptionsOutput {
	return o
}

func (o TemplateGaugeChartOptionsOutput) ToTemplateGaugeChartOptionsOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsOutput {
	return o
}

func (o TemplateGaugeChartOptionsOutput) ToTemplateGaugeChartOptionsPtrOutput() TemplateGaugeChartOptionsPtrOutput {
	return o.ToTemplateGaugeChartOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartOptionsOutput) ToTemplateGaugeChartOptionsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartOptions) *TemplateGaugeChartOptions {
		return &v
	}).(TemplateGaugeChartOptionsPtrOutput)
}

func (o TemplateGaugeChartOptionsOutput) Arc() TemplateArcConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartOptions) *TemplateArcConfiguration { return v.Arc }).(TemplateArcConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsOutput) ArcAxis() TemplateArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartOptions) *TemplateArcAxisConfiguration { return v.ArcAxis }).(TemplateArcAxisConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsOutput) Comparison() TemplateComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartOptions) *TemplateComparisonConfiguration { return v.Comparison }).(TemplateComparisonConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsOutput) PrimaryValueDisplayType() TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartOptions) *TemplatePrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (o TemplateGaugeChartOptionsOutput) PrimaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartOptions) *TemplateFontConfiguration { return v.PrimaryValueFontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

type TemplateGaugeChartOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartOptions)(nil)).Elem()
}

func (o TemplateGaugeChartOptionsPtrOutput) ToTemplateGaugeChartOptionsPtrOutput() TemplateGaugeChartOptionsPtrOutput {
	return o
}

func (o TemplateGaugeChartOptionsPtrOutput) ToTemplateGaugeChartOptionsPtrOutputWithContext(ctx context.Context) TemplateGaugeChartOptionsPtrOutput {
	return o
}

func (o TemplateGaugeChartOptionsPtrOutput) Elem() TemplateGaugeChartOptionsOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) TemplateGaugeChartOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartOptions
		return ret
	}).(TemplateGaugeChartOptionsOutput)
}

func (o TemplateGaugeChartOptionsPtrOutput) Arc() TemplateArcConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) *TemplateArcConfiguration {
		if v == nil {
			return nil
		}
		return v.Arc
	}).(TemplateArcConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsPtrOutput) ArcAxis() TemplateArcAxisConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) *TemplateArcAxisConfiguration {
		if v == nil {
			return nil
		}
		return v.ArcAxis
	}).(TemplateArcAxisConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsPtrOutput) Comparison() TemplateComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) *TemplateComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(TemplateComparisonConfigurationPtrOutput)
}

func (o TemplateGaugeChartOptionsPtrOutput) PrimaryValueDisplayType() TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) *TemplatePrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (o TemplateGaugeChartOptionsPtrOutput) PrimaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

type TemplateGaugeChartPrimaryValueConditionalFormatting struct {
	Icon      *TemplateConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateGaugeChartPrimaryValueConditionalFormattingInput is an input type that accepts TemplateGaugeChartPrimaryValueConditionalFormattingArgs and TemplateGaugeChartPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateGaugeChartPrimaryValueConditionalFormattingInput` via:
//
//	TemplateGaugeChartPrimaryValueConditionalFormattingArgs{...}
type TemplateGaugeChartPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateGaugeChartPrimaryValueConditionalFormattingOutput() TemplateGaugeChartPrimaryValueConditionalFormattingOutput
	ToTemplateGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingOutput
}

type TemplateGaugeChartPrimaryValueConditionalFormattingArgs struct {
	Icon      TemplateConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateGaugeChartPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i TemplateGaugeChartPrimaryValueConditionalFormattingArgs) ToTemplateGaugeChartPrimaryValueConditionalFormattingOutput() TemplateGaugeChartPrimaryValueConditionalFormattingOutput {
	return i.ToTemplateGaugeChartPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateGaugeChartPrimaryValueConditionalFormattingArgs) ToTemplateGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (i TemplateGaugeChartPrimaryValueConditionalFormattingArgs) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartPrimaryValueConditionalFormattingArgs) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartPrimaryValueConditionalFormattingOutput).ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput is an input type that accepts TemplateGaugeChartPrimaryValueConditionalFormattingArgs, TemplateGaugeChartPrimaryValueConditionalFormattingPtr and TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput` via:
//
//	        TemplateGaugeChartPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput
	ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput
}

type templateGaugeChartPrimaryValueConditionalFormattingPtrType TemplateGaugeChartPrimaryValueConditionalFormattingArgs

func TemplateGaugeChartPrimaryValueConditionalFormattingPtr(v *TemplateGaugeChartPrimaryValueConditionalFormattingArgs) TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput {
	return (*templateGaugeChartPrimaryValueConditionalFormattingPtrType)(v)
}

func (*templateGaugeChartPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *templateGaugeChartPrimaryValueConditionalFormattingPtrType) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return i.ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartPrimaryValueConditionalFormattingPtrType) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

type TemplateGaugeChartPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingOutput() TemplateGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingOutput {
	return o
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartPrimaryValueConditionalFormatting) *TemplateGaugeChartPrimaryValueConditionalFormatting {
		return &v
	}).(TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartPrimaryValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartPrimaryValueConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput() TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) ToTemplateGaugeChartPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) Elem() TemplateGaugeChartPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateGaugeChartPrimaryValueConditionalFormatting) TemplateGaugeChartPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartPrimaryValueConditionalFormatting
		return ret
	}).(TemplateGaugeChartPrimaryValueConditionalFormattingOutput)
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartPrimaryValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartPrimaryValueConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateGaugeChartVisual struct {
	Actions               []TemplateVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *TemplateGaugeChartConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *TemplateGaugeChartConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *TemplateVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *TemplateVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                   `pulumi:"visualId"`
}

// TemplateGaugeChartVisualInput is an input type that accepts TemplateGaugeChartVisualArgs and TemplateGaugeChartVisualOutput values.
// You can construct a concrete instance of `TemplateGaugeChartVisualInput` via:
//
//	TemplateGaugeChartVisualArgs{...}
type TemplateGaugeChartVisualInput interface {
	pulumi.Input

	ToTemplateGaugeChartVisualOutput() TemplateGaugeChartVisualOutput
	ToTemplateGaugeChartVisualOutputWithContext(context.Context) TemplateGaugeChartVisualOutput
}

type TemplateGaugeChartVisualArgs struct {
	Actions               TemplateVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    TemplateGaugeChartConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting TemplateGaugeChartConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              TemplateVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 TemplateVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                              `pulumi:"visualId"`
}

func (TemplateGaugeChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartVisual)(nil)).Elem()
}

func (i TemplateGaugeChartVisualArgs) ToTemplateGaugeChartVisualOutput() TemplateGaugeChartVisualOutput {
	return i.ToTemplateGaugeChartVisualOutputWithContext(context.Background())
}

func (i TemplateGaugeChartVisualArgs) ToTemplateGaugeChartVisualOutputWithContext(ctx context.Context) TemplateGaugeChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartVisualOutput)
}

func (i TemplateGaugeChartVisualArgs) ToTemplateGaugeChartVisualPtrOutput() TemplateGaugeChartVisualPtrOutput {
	return i.ToTemplateGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateGaugeChartVisualArgs) ToTemplateGaugeChartVisualPtrOutputWithContext(ctx context.Context) TemplateGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartVisualOutput).ToTemplateGaugeChartVisualPtrOutputWithContext(ctx)
}

// TemplateGaugeChartVisualPtrInput is an input type that accepts TemplateGaugeChartVisualArgs, TemplateGaugeChartVisualPtr and TemplateGaugeChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateGaugeChartVisualPtrInput` via:
//
//	        TemplateGaugeChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateGaugeChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateGaugeChartVisualPtrOutput() TemplateGaugeChartVisualPtrOutput
	ToTemplateGaugeChartVisualPtrOutputWithContext(context.Context) TemplateGaugeChartVisualPtrOutput
}

type templateGaugeChartVisualPtrType TemplateGaugeChartVisualArgs

func TemplateGaugeChartVisualPtr(v *TemplateGaugeChartVisualArgs) TemplateGaugeChartVisualPtrInput {
	return (*templateGaugeChartVisualPtrType)(v)
}

func (*templateGaugeChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartVisual)(nil)).Elem()
}

func (i *templateGaugeChartVisualPtrType) ToTemplateGaugeChartVisualPtrOutput() TemplateGaugeChartVisualPtrOutput {
	return i.ToTemplateGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateGaugeChartVisualPtrType) ToTemplateGaugeChartVisualPtrOutputWithContext(ctx context.Context) TemplateGaugeChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGaugeChartVisualPtrOutput)
}

type TemplateGaugeChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGaugeChartVisual)(nil)).Elem()
}

func (o TemplateGaugeChartVisualOutput) ToTemplateGaugeChartVisualOutput() TemplateGaugeChartVisualOutput {
	return o
}

func (o TemplateGaugeChartVisualOutput) ToTemplateGaugeChartVisualOutputWithContext(ctx context.Context) TemplateGaugeChartVisualOutput {
	return o
}

func (o TemplateGaugeChartVisualOutput) ToTemplateGaugeChartVisualPtrOutput() TemplateGaugeChartVisualPtrOutput {
	return o.ToTemplateGaugeChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateGaugeChartVisualOutput) ToTemplateGaugeChartVisualPtrOutputWithContext(ctx context.Context) TemplateGaugeChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGaugeChartVisual) *TemplateGaugeChartVisual {
		return &v
	}).(TemplateGaugeChartVisualPtrOutput)
}

func (o TemplateGaugeChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateGaugeChartVisualOutput) ChartConfiguration() TemplateGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) *TemplateGaugeChartConfiguration { return v.ChartConfiguration }).(TemplateGaugeChartConfigurationPtrOutput)
}

func (o TemplateGaugeChartVisualOutput) ConditionalFormatting() TemplateGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) *TemplateGaugeChartConditionalFormatting {
		return v.ConditionalFormatting
	}).(TemplateGaugeChartConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateGaugeChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateGaugeChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateGaugeChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGaugeChartVisual)(nil)).Elem()
}

func (o TemplateGaugeChartVisualPtrOutput) ToTemplateGaugeChartVisualPtrOutput() TemplateGaugeChartVisualPtrOutput {
	return o
}

func (o TemplateGaugeChartVisualPtrOutput) ToTemplateGaugeChartVisualPtrOutputWithContext(ctx context.Context) TemplateGaugeChartVisualPtrOutput {
	return o
}

func (o TemplateGaugeChartVisualPtrOutput) Elem() TemplateGaugeChartVisualOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) TemplateGaugeChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateGaugeChartVisual
		return ret
	}).(TemplateGaugeChartVisualOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) ChartConfiguration() TemplateGaugeChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) *TemplateGaugeChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateGaugeChartConfigurationPtrOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) ConditionalFormatting() TemplateGaugeChartConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) *TemplateGaugeChartConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(TemplateGaugeChartConditionalFormattingPtrOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateGaugeChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGaugeChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateGeospatialCoordinateBounds struct {
	East  float64 `pulumi:"east"`
	North float64 `pulumi:"north"`
	South float64 `pulumi:"south"`
	West  float64 `pulumi:"west"`
}

// TemplateGeospatialCoordinateBoundsInput is an input type that accepts TemplateGeospatialCoordinateBoundsArgs and TemplateGeospatialCoordinateBoundsOutput values.
// You can construct a concrete instance of `TemplateGeospatialCoordinateBoundsInput` via:
//
//	TemplateGeospatialCoordinateBoundsArgs{...}
type TemplateGeospatialCoordinateBoundsInput interface {
	pulumi.Input

	ToTemplateGeospatialCoordinateBoundsOutput() TemplateGeospatialCoordinateBoundsOutput
	ToTemplateGeospatialCoordinateBoundsOutputWithContext(context.Context) TemplateGeospatialCoordinateBoundsOutput
}

type TemplateGeospatialCoordinateBoundsArgs struct {
	East  pulumi.Float64Input `pulumi:"east"`
	North pulumi.Float64Input `pulumi:"north"`
	South pulumi.Float64Input `pulumi:"south"`
	West  pulumi.Float64Input `pulumi:"west"`
}

func (TemplateGeospatialCoordinateBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialCoordinateBounds)(nil)).Elem()
}

func (i TemplateGeospatialCoordinateBoundsArgs) ToTemplateGeospatialCoordinateBoundsOutput() TemplateGeospatialCoordinateBoundsOutput {
	return i.ToTemplateGeospatialCoordinateBoundsOutputWithContext(context.Background())
}

func (i TemplateGeospatialCoordinateBoundsArgs) ToTemplateGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialCoordinateBoundsOutput)
}

func (i TemplateGeospatialCoordinateBoundsArgs) ToTemplateGeospatialCoordinateBoundsPtrOutput() TemplateGeospatialCoordinateBoundsPtrOutput {
	return i.ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialCoordinateBoundsArgs) ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialCoordinateBoundsOutput).ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(ctx)
}

// TemplateGeospatialCoordinateBoundsPtrInput is an input type that accepts TemplateGeospatialCoordinateBoundsArgs, TemplateGeospatialCoordinateBoundsPtr and TemplateGeospatialCoordinateBoundsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialCoordinateBoundsPtrInput` via:
//
//	        TemplateGeospatialCoordinateBoundsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialCoordinateBoundsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialCoordinateBoundsPtrOutput() TemplateGeospatialCoordinateBoundsPtrOutput
	ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(context.Context) TemplateGeospatialCoordinateBoundsPtrOutput
}

type templateGeospatialCoordinateBoundsPtrType TemplateGeospatialCoordinateBoundsArgs

func TemplateGeospatialCoordinateBoundsPtr(v *TemplateGeospatialCoordinateBoundsArgs) TemplateGeospatialCoordinateBoundsPtrInput {
	return (*templateGeospatialCoordinateBoundsPtrType)(v)
}

func (*templateGeospatialCoordinateBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialCoordinateBounds)(nil)).Elem()
}

func (i *templateGeospatialCoordinateBoundsPtrType) ToTemplateGeospatialCoordinateBoundsPtrOutput() TemplateGeospatialCoordinateBoundsPtrOutput {
	return i.ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialCoordinateBoundsPtrType) ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialCoordinateBoundsPtrOutput)
}

type TemplateGeospatialCoordinateBoundsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialCoordinateBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialCoordinateBounds)(nil)).Elem()
}

func (o TemplateGeospatialCoordinateBoundsOutput) ToTemplateGeospatialCoordinateBoundsOutput() TemplateGeospatialCoordinateBoundsOutput {
	return o
}

func (o TemplateGeospatialCoordinateBoundsOutput) ToTemplateGeospatialCoordinateBoundsOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsOutput {
	return o
}

func (o TemplateGeospatialCoordinateBoundsOutput) ToTemplateGeospatialCoordinateBoundsPtrOutput() TemplateGeospatialCoordinateBoundsPtrOutput {
	return o.ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialCoordinateBoundsOutput) ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialCoordinateBounds) *TemplateGeospatialCoordinateBounds {
		return &v
	}).(TemplateGeospatialCoordinateBoundsPtrOutput)
}

func (o TemplateGeospatialCoordinateBoundsOutput) East() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGeospatialCoordinateBounds) float64 { return v.East }).(pulumi.Float64Output)
}

func (o TemplateGeospatialCoordinateBoundsOutput) North() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGeospatialCoordinateBounds) float64 { return v.North }).(pulumi.Float64Output)
}

func (o TemplateGeospatialCoordinateBoundsOutput) South() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGeospatialCoordinateBounds) float64 { return v.South }).(pulumi.Float64Output)
}

func (o TemplateGeospatialCoordinateBoundsOutput) West() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGeospatialCoordinateBounds) float64 { return v.West }).(pulumi.Float64Output)
}

type TemplateGeospatialCoordinateBoundsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialCoordinateBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialCoordinateBounds)(nil)).Elem()
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) ToTemplateGeospatialCoordinateBoundsPtrOutput() TemplateGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) ToTemplateGeospatialCoordinateBoundsPtrOutputWithContext(ctx context.Context) TemplateGeospatialCoordinateBoundsPtrOutput {
	return o
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) Elem() TemplateGeospatialCoordinateBoundsOutput {
	return o.ApplyT(func(v *TemplateGeospatialCoordinateBounds) TemplateGeospatialCoordinateBounds {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialCoordinateBounds
		return ret
	}).(TemplateGeospatialCoordinateBoundsOutput)
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) East() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.East
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) North() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.North
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) South() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.South
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateGeospatialCoordinateBoundsPtrOutput) West() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialCoordinateBounds) *float64 {
		if v == nil {
			return nil
		}
		return &v.West
	}).(pulumi.Float64PtrOutput)
}

type TemplateGeospatialHeatmapColorScale struct {
	Colors []TemplateGeospatialHeatmapDataColor `pulumi:"colors"`
}

// TemplateGeospatialHeatmapColorScaleInput is an input type that accepts TemplateGeospatialHeatmapColorScaleArgs and TemplateGeospatialHeatmapColorScaleOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapColorScaleInput` via:
//
//	TemplateGeospatialHeatmapColorScaleArgs{...}
type TemplateGeospatialHeatmapColorScaleInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapColorScaleOutput() TemplateGeospatialHeatmapColorScaleOutput
	ToTemplateGeospatialHeatmapColorScaleOutputWithContext(context.Context) TemplateGeospatialHeatmapColorScaleOutput
}

type TemplateGeospatialHeatmapColorScaleArgs struct {
	Colors TemplateGeospatialHeatmapDataColorArrayInput `pulumi:"colors"`
}

func (TemplateGeospatialHeatmapColorScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapColorScale)(nil)).Elem()
}

func (i TemplateGeospatialHeatmapColorScaleArgs) ToTemplateGeospatialHeatmapColorScaleOutput() TemplateGeospatialHeatmapColorScaleOutput {
	return i.ToTemplateGeospatialHeatmapColorScaleOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapColorScaleArgs) ToTemplateGeospatialHeatmapColorScaleOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapColorScaleOutput)
}

func (i TemplateGeospatialHeatmapColorScaleArgs) ToTemplateGeospatialHeatmapColorScalePtrOutput() TemplateGeospatialHeatmapColorScalePtrOutput {
	return i.ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapColorScaleArgs) ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapColorScaleOutput).ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(ctx)
}

// TemplateGeospatialHeatmapColorScalePtrInput is an input type that accepts TemplateGeospatialHeatmapColorScaleArgs, TemplateGeospatialHeatmapColorScalePtr and TemplateGeospatialHeatmapColorScalePtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapColorScalePtrInput` via:
//
//	        TemplateGeospatialHeatmapColorScaleArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialHeatmapColorScalePtrInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapColorScalePtrOutput() TemplateGeospatialHeatmapColorScalePtrOutput
	ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(context.Context) TemplateGeospatialHeatmapColorScalePtrOutput
}

type templateGeospatialHeatmapColorScalePtrType TemplateGeospatialHeatmapColorScaleArgs

func TemplateGeospatialHeatmapColorScalePtr(v *TemplateGeospatialHeatmapColorScaleArgs) TemplateGeospatialHeatmapColorScalePtrInput {
	return (*templateGeospatialHeatmapColorScalePtrType)(v)
}

func (*templateGeospatialHeatmapColorScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialHeatmapColorScale)(nil)).Elem()
}

func (i *templateGeospatialHeatmapColorScalePtrType) ToTemplateGeospatialHeatmapColorScalePtrOutput() TemplateGeospatialHeatmapColorScalePtrOutput {
	return i.ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(context.Background())
}

func (i *templateGeospatialHeatmapColorScalePtrType) ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapColorScalePtrOutput)
}

type TemplateGeospatialHeatmapColorScaleOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapColorScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapColorScale)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapColorScaleOutput) ToTemplateGeospatialHeatmapColorScaleOutput() TemplateGeospatialHeatmapColorScaleOutput {
	return o
}

func (o TemplateGeospatialHeatmapColorScaleOutput) ToTemplateGeospatialHeatmapColorScaleOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScaleOutput {
	return o
}

func (o TemplateGeospatialHeatmapColorScaleOutput) ToTemplateGeospatialHeatmapColorScalePtrOutput() TemplateGeospatialHeatmapColorScalePtrOutput {
	return o.ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialHeatmapColorScaleOutput) ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialHeatmapColorScale) *TemplateGeospatialHeatmapColorScale {
		return &v
	}).(TemplateGeospatialHeatmapColorScalePtrOutput)
}

func (o TemplateGeospatialHeatmapColorScaleOutput) Colors() TemplateGeospatialHeatmapDataColorArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialHeatmapColorScale) []TemplateGeospatialHeatmapDataColor { return v.Colors }).(TemplateGeospatialHeatmapDataColorArrayOutput)
}

type TemplateGeospatialHeatmapColorScalePtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapColorScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialHeatmapColorScale)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapColorScalePtrOutput) ToTemplateGeospatialHeatmapColorScalePtrOutput() TemplateGeospatialHeatmapColorScalePtrOutput {
	return o
}

func (o TemplateGeospatialHeatmapColorScalePtrOutput) ToTemplateGeospatialHeatmapColorScalePtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapColorScalePtrOutput {
	return o
}

func (o TemplateGeospatialHeatmapColorScalePtrOutput) Elem() TemplateGeospatialHeatmapColorScaleOutput {
	return o.ApplyT(func(v *TemplateGeospatialHeatmapColorScale) TemplateGeospatialHeatmapColorScale {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialHeatmapColorScale
		return ret
	}).(TemplateGeospatialHeatmapColorScaleOutput)
}

func (o TemplateGeospatialHeatmapColorScalePtrOutput) Colors() TemplateGeospatialHeatmapDataColorArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialHeatmapColorScale) []TemplateGeospatialHeatmapDataColor {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateGeospatialHeatmapDataColorArrayOutput)
}

type TemplateGeospatialHeatmapConfiguration struct {
	HeatmapColor *TemplateGeospatialHeatmapColorScale `pulumi:"heatmapColor"`
}

// TemplateGeospatialHeatmapConfigurationInput is an input type that accepts TemplateGeospatialHeatmapConfigurationArgs and TemplateGeospatialHeatmapConfigurationOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapConfigurationInput` via:
//
//	TemplateGeospatialHeatmapConfigurationArgs{...}
type TemplateGeospatialHeatmapConfigurationInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapConfigurationOutput() TemplateGeospatialHeatmapConfigurationOutput
	ToTemplateGeospatialHeatmapConfigurationOutputWithContext(context.Context) TemplateGeospatialHeatmapConfigurationOutput
}

type TemplateGeospatialHeatmapConfigurationArgs struct {
	HeatmapColor TemplateGeospatialHeatmapColorScalePtrInput `pulumi:"heatmapColor"`
}

func (TemplateGeospatialHeatmapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapConfiguration)(nil)).Elem()
}

func (i TemplateGeospatialHeatmapConfigurationArgs) ToTemplateGeospatialHeatmapConfigurationOutput() TemplateGeospatialHeatmapConfigurationOutput {
	return i.ToTemplateGeospatialHeatmapConfigurationOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapConfigurationArgs) ToTemplateGeospatialHeatmapConfigurationOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapConfigurationOutput)
}

func (i TemplateGeospatialHeatmapConfigurationArgs) ToTemplateGeospatialHeatmapConfigurationPtrOutput() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return i.ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapConfigurationArgs) ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapConfigurationOutput).ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(ctx)
}

// TemplateGeospatialHeatmapConfigurationPtrInput is an input type that accepts TemplateGeospatialHeatmapConfigurationArgs, TemplateGeospatialHeatmapConfigurationPtr and TemplateGeospatialHeatmapConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapConfigurationPtrInput` via:
//
//	        TemplateGeospatialHeatmapConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialHeatmapConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapConfigurationPtrOutput() TemplateGeospatialHeatmapConfigurationPtrOutput
	ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(context.Context) TemplateGeospatialHeatmapConfigurationPtrOutput
}

type templateGeospatialHeatmapConfigurationPtrType TemplateGeospatialHeatmapConfigurationArgs

func TemplateGeospatialHeatmapConfigurationPtr(v *TemplateGeospatialHeatmapConfigurationArgs) TemplateGeospatialHeatmapConfigurationPtrInput {
	return (*templateGeospatialHeatmapConfigurationPtrType)(v)
}

func (*templateGeospatialHeatmapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialHeatmapConfiguration)(nil)).Elem()
}

func (i *templateGeospatialHeatmapConfigurationPtrType) ToTemplateGeospatialHeatmapConfigurationPtrOutput() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return i.ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialHeatmapConfigurationPtrType) ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapConfigurationPtrOutput)
}

type TemplateGeospatialHeatmapConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapConfiguration)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapConfigurationOutput) ToTemplateGeospatialHeatmapConfigurationOutput() TemplateGeospatialHeatmapConfigurationOutput {
	return o
}

func (o TemplateGeospatialHeatmapConfigurationOutput) ToTemplateGeospatialHeatmapConfigurationOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationOutput {
	return o
}

func (o TemplateGeospatialHeatmapConfigurationOutput) ToTemplateGeospatialHeatmapConfigurationPtrOutput() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o.ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialHeatmapConfigurationOutput) ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialHeatmapConfiguration) *TemplateGeospatialHeatmapConfiguration {
		return &v
	}).(TemplateGeospatialHeatmapConfigurationPtrOutput)
}

func (o TemplateGeospatialHeatmapConfigurationOutput) HeatmapColor() TemplateGeospatialHeatmapColorScalePtrOutput {
	return o.ApplyT(func(v TemplateGeospatialHeatmapConfiguration) *TemplateGeospatialHeatmapColorScale {
		return v.HeatmapColor
	}).(TemplateGeospatialHeatmapColorScalePtrOutput)
}

type TemplateGeospatialHeatmapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialHeatmapConfiguration)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapConfigurationPtrOutput) ToTemplateGeospatialHeatmapConfigurationPtrOutput() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o
}

func (o TemplateGeospatialHeatmapConfigurationPtrOutput) ToTemplateGeospatialHeatmapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o
}

func (o TemplateGeospatialHeatmapConfigurationPtrOutput) Elem() TemplateGeospatialHeatmapConfigurationOutput {
	return o.ApplyT(func(v *TemplateGeospatialHeatmapConfiguration) TemplateGeospatialHeatmapConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialHeatmapConfiguration
		return ret
	}).(TemplateGeospatialHeatmapConfigurationOutput)
}

func (o TemplateGeospatialHeatmapConfigurationPtrOutput) HeatmapColor() TemplateGeospatialHeatmapColorScalePtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialHeatmapConfiguration) *TemplateGeospatialHeatmapColorScale {
		if v == nil {
			return nil
		}
		return v.HeatmapColor
	}).(TemplateGeospatialHeatmapColorScalePtrOutput)
}

type TemplateGeospatialHeatmapDataColor struct {
	Color string `pulumi:"color"`
}

// TemplateGeospatialHeatmapDataColorInput is an input type that accepts TemplateGeospatialHeatmapDataColorArgs and TemplateGeospatialHeatmapDataColorOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapDataColorInput` via:
//
//	TemplateGeospatialHeatmapDataColorArgs{...}
type TemplateGeospatialHeatmapDataColorInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapDataColorOutput() TemplateGeospatialHeatmapDataColorOutput
	ToTemplateGeospatialHeatmapDataColorOutputWithContext(context.Context) TemplateGeospatialHeatmapDataColorOutput
}

type TemplateGeospatialHeatmapDataColorArgs struct {
	Color pulumi.StringInput `pulumi:"color"`
}

func (TemplateGeospatialHeatmapDataColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapDataColor)(nil)).Elem()
}

func (i TemplateGeospatialHeatmapDataColorArgs) ToTemplateGeospatialHeatmapDataColorOutput() TemplateGeospatialHeatmapDataColorOutput {
	return i.ToTemplateGeospatialHeatmapDataColorOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapDataColorArgs) ToTemplateGeospatialHeatmapDataColorOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapDataColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapDataColorOutput)
}

// TemplateGeospatialHeatmapDataColorArrayInput is an input type that accepts TemplateGeospatialHeatmapDataColorArray and TemplateGeospatialHeatmapDataColorArrayOutput values.
// You can construct a concrete instance of `TemplateGeospatialHeatmapDataColorArrayInput` via:
//
//	TemplateGeospatialHeatmapDataColorArray{ TemplateGeospatialHeatmapDataColorArgs{...} }
type TemplateGeospatialHeatmapDataColorArrayInput interface {
	pulumi.Input

	ToTemplateGeospatialHeatmapDataColorArrayOutput() TemplateGeospatialHeatmapDataColorArrayOutput
	ToTemplateGeospatialHeatmapDataColorArrayOutputWithContext(context.Context) TemplateGeospatialHeatmapDataColorArrayOutput
}

type TemplateGeospatialHeatmapDataColorArray []TemplateGeospatialHeatmapDataColorInput

func (TemplateGeospatialHeatmapDataColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGeospatialHeatmapDataColor)(nil)).Elem()
}

func (i TemplateGeospatialHeatmapDataColorArray) ToTemplateGeospatialHeatmapDataColorArrayOutput() TemplateGeospatialHeatmapDataColorArrayOutput {
	return i.ToTemplateGeospatialHeatmapDataColorArrayOutputWithContext(context.Background())
}

func (i TemplateGeospatialHeatmapDataColorArray) ToTemplateGeospatialHeatmapDataColorArrayOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapDataColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialHeatmapDataColorArrayOutput)
}

type TemplateGeospatialHeatmapDataColorOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapDataColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialHeatmapDataColor)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapDataColorOutput) ToTemplateGeospatialHeatmapDataColorOutput() TemplateGeospatialHeatmapDataColorOutput {
	return o
}

func (o TemplateGeospatialHeatmapDataColorOutput) ToTemplateGeospatialHeatmapDataColorOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapDataColorOutput {
	return o
}

func (o TemplateGeospatialHeatmapDataColorOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateGeospatialHeatmapDataColor) string { return v.Color }).(pulumi.StringOutput)
}

type TemplateGeospatialHeatmapDataColorArrayOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialHeatmapDataColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGeospatialHeatmapDataColor)(nil)).Elem()
}

func (o TemplateGeospatialHeatmapDataColorArrayOutput) ToTemplateGeospatialHeatmapDataColorArrayOutput() TemplateGeospatialHeatmapDataColorArrayOutput {
	return o
}

func (o TemplateGeospatialHeatmapDataColorArrayOutput) ToTemplateGeospatialHeatmapDataColorArrayOutputWithContext(ctx context.Context) TemplateGeospatialHeatmapDataColorArrayOutput {
	return o
}

func (o TemplateGeospatialHeatmapDataColorArrayOutput) Index(i pulumi.IntInput) TemplateGeospatialHeatmapDataColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateGeospatialHeatmapDataColor {
		return vs[0].([]TemplateGeospatialHeatmapDataColor)[vs[1].(int)]
	}).(TemplateGeospatialHeatmapDataColorOutput)
}

type TemplateGeospatialMapAggregatedFieldWells struct {
	Colors     []TemplateDimensionField `pulumi:"colors"`
	Geospatial []TemplateDimensionField `pulumi:"geospatial"`
	Values     []TemplateMeasureField   `pulumi:"values"`
}

// TemplateGeospatialMapAggregatedFieldWellsInput is an input type that accepts TemplateGeospatialMapAggregatedFieldWellsArgs and TemplateGeospatialMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapAggregatedFieldWellsInput` via:
//
//	TemplateGeospatialMapAggregatedFieldWellsArgs{...}
type TemplateGeospatialMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateGeospatialMapAggregatedFieldWellsOutput() TemplateGeospatialMapAggregatedFieldWellsOutput
	ToTemplateGeospatialMapAggregatedFieldWellsOutputWithContext(context.Context) TemplateGeospatialMapAggregatedFieldWellsOutput
}

type TemplateGeospatialMapAggregatedFieldWellsArgs struct {
	Colors     TemplateDimensionFieldArrayInput `pulumi:"colors"`
	Geospatial TemplateDimensionFieldArrayInput `pulumi:"geospatial"`
	Values     TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateGeospatialMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateGeospatialMapAggregatedFieldWellsArgs) ToTemplateGeospatialMapAggregatedFieldWellsOutput() TemplateGeospatialMapAggregatedFieldWellsOutput {
	return i.ToTemplateGeospatialMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapAggregatedFieldWellsArgs) ToTemplateGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapAggregatedFieldWellsOutput)
}

func (i TemplateGeospatialMapAggregatedFieldWellsArgs) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutput() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapAggregatedFieldWellsArgs) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapAggregatedFieldWellsOutput).ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateGeospatialMapAggregatedFieldWellsPtrInput is an input type that accepts TemplateGeospatialMapAggregatedFieldWellsArgs, TemplateGeospatialMapAggregatedFieldWellsPtr and TemplateGeospatialMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapAggregatedFieldWellsPtrInput` via:
//
//	        TemplateGeospatialMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialMapAggregatedFieldWellsPtrOutput() TemplateGeospatialMapAggregatedFieldWellsPtrOutput
	ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateGeospatialMapAggregatedFieldWellsPtrOutput
}

type templateGeospatialMapAggregatedFieldWellsPtrType TemplateGeospatialMapAggregatedFieldWellsArgs

func TemplateGeospatialMapAggregatedFieldWellsPtr(v *TemplateGeospatialMapAggregatedFieldWellsArgs) TemplateGeospatialMapAggregatedFieldWellsPtrInput {
	return (*templateGeospatialMapAggregatedFieldWellsPtrType)(v)
}

func (*templateGeospatialMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (i *templateGeospatialMapAggregatedFieldWellsPtrType) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutput() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialMapAggregatedFieldWellsPtrType) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapAggregatedFieldWellsPtrOutput)
}

type TemplateGeospatialMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) ToTemplateGeospatialMapAggregatedFieldWellsOutput() TemplateGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) ToTemplateGeospatialMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutput() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialMapAggregatedFieldWells) *TemplateGeospatialMapAggregatedFieldWells {
		return &v
	}).(TemplateGeospatialMapAggregatedFieldWellsPtrOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialMapAggregatedFieldWells) []TemplateDimensionField { return v.Colors }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) Geospatial() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialMapAggregatedFieldWells) []TemplateDimensionField { return v.Geospatial }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialMapAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateGeospatialMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutput() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) ToTemplateGeospatialMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) Elem() TemplateGeospatialMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapAggregatedFieldWells) TemplateGeospatialMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialMapAggregatedFieldWells
		return ret
	}).(TemplateGeospatialMapAggregatedFieldWellsOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) Geospatial() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Geospatial
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateGeospatialMapAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateGeospatialMapConfiguration struct {
	FieldWells        *TemplateGeospatialMapFieldWells     `pulumi:"fieldWells"`
	Legend            *TemplateLegendOptions               `pulumi:"legend"`
	MapStyleOptions   *TemplateGeospatialMapStyleOptions   `pulumi:"mapStyleOptions"`
	PointStyleOptions *TemplateGeospatialPointStyleOptions `pulumi:"pointStyleOptions"`
	Tooltip           *TemplateTooltipOptions              `pulumi:"tooltip"`
	VisualPalette     *TemplateVisualPalette               `pulumi:"visualPalette"`
	WindowOptions     *TemplateGeospatialWindowOptions     `pulumi:"windowOptions"`
}

// TemplateGeospatialMapConfigurationInput is an input type that accepts TemplateGeospatialMapConfigurationArgs and TemplateGeospatialMapConfigurationOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapConfigurationInput` via:
//
//	TemplateGeospatialMapConfigurationArgs{...}
type TemplateGeospatialMapConfigurationInput interface {
	pulumi.Input

	ToTemplateGeospatialMapConfigurationOutput() TemplateGeospatialMapConfigurationOutput
	ToTemplateGeospatialMapConfigurationOutputWithContext(context.Context) TemplateGeospatialMapConfigurationOutput
}

type TemplateGeospatialMapConfigurationArgs struct {
	FieldWells        TemplateGeospatialMapFieldWellsPtrInput     `pulumi:"fieldWells"`
	Legend            TemplateLegendOptionsPtrInput               `pulumi:"legend"`
	MapStyleOptions   TemplateGeospatialMapStyleOptionsPtrInput   `pulumi:"mapStyleOptions"`
	PointStyleOptions TemplateGeospatialPointStyleOptionsPtrInput `pulumi:"pointStyleOptions"`
	Tooltip           TemplateTooltipOptionsPtrInput              `pulumi:"tooltip"`
	VisualPalette     TemplateVisualPalettePtrInput               `pulumi:"visualPalette"`
	WindowOptions     TemplateGeospatialWindowOptionsPtrInput     `pulumi:"windowOptions"`
}

func (TemplateGeospatialMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapConfiguration)(nil)).Elem()
}

func (i TemplateGeospatialMapConfigurationArgs) ToTemplateGeospatialMapConfigurationOutput() TemplateGeospatialMapConfigurationOutput {
	return i.ToTemplateGeospatialMapConfigurationOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapConfigurationArgs) ToTemplateGeospatialMapConfigurationOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapConfigurationOutput)
}

func (i TemplateGeospatialMapConfigurationArgs) ToTemplateGeospatialMapConfigurationPtrOutput() TemplateGeospatialMapConfigurationPtrOutput {
	return i.ToTemplateGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapConfigurationArgs) ToTemplateGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapConfigurationOutput).ToTemplateGeospatialMapConfigurationPtrOutputWithContext(ctx)
}

// TemplateGeospatialMapConfigurationPtrInput is an input type that accepts TemplateGeospatialMapConfigurationArgs, TemplateGeospatialMapConfigurationPtr and TemplateGeospatialMapConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapConfigurationPtrInput` via:
//
//	        TemplateGeospatialMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialMapConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialMapConfigurationPtrOutput() TemplateGeospatialMapConfigurationPtrOutput
	ToTemplateGeospatialMapConfigurationPtrOutputWithContext(context.Context) TemplateGeospatialMapConfigurationPtrOutput
}

type templateGeospatialMapConfigurationPtrType TemplateGeospatialMapConfigurationArgs

func TemplateGeospatialMapConfigurationPtr(v *TemplateGeospatialMapConfigurationArgs) TemplateGeospatialMapConfigurationPtrInput {
	return (*templateGeospatialMapConfigurationPtrType)(v)
}

func (*templateGeospatialMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapConfiguration)(nil)).Elem()
}

func (i *templateGeospatialMapConfigurationPtrType) ToTemplateGeospatialMapConfigurationPtrOutput() TemplateGeospatialMapConfigurationPtrOutput {
	return i.ToTemplateGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialMapConfigurationPtrType) ToTemplateGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapConfigurationPtrOutput)
}

type TemplateGeospatialMapConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapConfiguration)(nil)).Elem()
}

func (o TemplateGeospatialMapConfigurationOutput) ToTemplateGeospatialMapConfigurationOutput() TemplateGeospatialMapConfigurationOutput {
	return o
}

func (o TemplateGeospatialMapConfigurationOutput) ToTemplateGeospatialMapConfigurationOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationOutput {
	return o
}

func (o TemplateGeospatialMapConfigurationOutput) ToTemplateGeospatialMapConfigurationPtrOutput() TemplateGeospatialMapConfigurationPtrOutput {
	return o.ToTemplateGeospatialMapConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialMapConfigurationOutput) ToTemplateGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialMapConfiguration) *TemplateGeospatialMapConfiguration {
		return &v
	}).(TemplateGeospatialMapConfigurationPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) FieldWells() TemplateGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateGeospatialMapFieldWells { return v.FieldWells }).(TemplateGeospatialMapFieldWellsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) MapStyleOptions() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateGeospatialMapStyleOptions {
		return v.MapStyleOptions
	}).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) PointStyleOptions() TemplateGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateGeospatialPointStyleOptions {
		return v.PointStyleOptions
	}).(TemplateGeospatialPointStyleOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

func (o TemplateGeospatialMapConfigurationOutput) WindowOptions() TemplateGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapConfiguration) *TemplateGeospatialWindowOptions { return v.WindowOptions }).(TemplateGeospatialWindowOptionsPtrOutput)
}

type TemplateGeospatialMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapConfiguration)(nil)).Elem()
}

func (o TemplateGeospatialMapConfigurationPtrOutput) ToTemplateGeospatialMapConfigurationPtrOutput() TemplateGeospatialMapConfigurationPtrOutput {
	return o
}

func (o TemplateGeospatialMapConfigurationPtrOutput) ToTemplateGeospatialMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapConfigurationPtrOutput {
	return o
}

func (o TemplateGeospatialMapConfigurationPtrOutput) Elem() TemplateGeospatialMapConfigurationOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) TemplateGeospatialMapConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialMapConfiguration
		return ret
	}).(TemplateGeospatialMapConfigurationOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) FieldWells() TemplateGeospatialMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateGeospatialMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateGeospatialMapFieldWellsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) MapStyleOptions() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateGeospatialMapStyleOptions {
		if v == nil {
			return nil
		}
		return v.MapStyleOptions
	}).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) PointStyleOptions() TemplateGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateGeospatialPointStyleOptions {
		if v == nil {
			return nil
		}
		return v.PointStyleOptions
	}).(TemplateGeospatialPointStyleOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

func (o TemplateGeospatialMapConfigurationPtrOutput) WindowOptions() TemplateGeospatialWindowOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapConfiguration) *TemplateGeospatialWindowOptions {
		if v == nil {
			return nil
		}
		return v.WindowOptions
	}).(TemplateGeospatialWindowOptionsPtrOutput)
}

type TemplateGeospatialMapFieldWells struct {
	GeospatialMapAggregatedFieldWells *TemplateGeospatialMapAggregatedFieldWells `pulumi:"geospatialMapAggregatedFieldWells"`
}

// TemplateGeospatialMapFieldWellsInput is an input type that accepts TemplateGeospatialMapFieldWellsArgs and TemplateGeospatialMapFieldWellsOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapFieldWellsInput` via:
//
//	TemplateGeospatialMapFieldWellsArgs{...}
type TemplateGeospatialMapFieldWellsInput interface {
	pulumi.Input

	ToTemplateGeospatialMapFieldWellsOutput() TemplateGeospatialMapFieldWellsOutput
	ToTemplateGeospatialMapFieldWellsOutputWithContext(context.Context) TemplateGeospatialMapFieldWellsOutput
}

type TemplateGeospatialMapFieldWellsArgs struct {
	GeospatialMapAggregatedFieldWells TemplateGeospatialMapAggregatedFieldWellsPtrInput `pulumi:"geospatialMapAggregatedFieldWells"`
}

func (TemplateGeospatialMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapFieldWells)(nil)).Elem()
}

func (i TemplateGeospatialMapFieldWellsArgs) ToTemplateGeospatialMapFieldWellsOutput() TemplateGeospatialMapFieldWellsOutput {
	return i.ToTemplateGeospatialMapFieldWellsOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapFieldWellsArgs) ToTemplateGeospatialMapFieldWellsOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapFieldWellsOutput)
}

func (i TemplateGeospatialMapFieldWellsArgs) ToTemplateGeospatialMapFieldWellsPtrOutput() TemplateGeospatialMapFieldWellsPtrOutput {
	return i.ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapFieldWellsArgs) ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapFieldWellsOutput).ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(ctx)
}

// TemplateGeospatialMapFieldWellsPtrInput is an input type that accepts TemplateGeospatialMapFieldWellsArgs, TemplateGeospatialMapFieldWellsPtr and TemplateGeospatialMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapFieldWellsPtrInput` via:
//
//	        TemplateGeospatialMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialMapFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialMapFieldWellsPtrOutput() TemplateGeospatialMapFieldWellsPtrOutput
	ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(context.Context) TemplateGeospatialMapFieldWellsPtrOutput
}

type templateGeospatialMapFieldWellsPtrType TemplateGeospatialMapFieldWellsArgs

func TemplateGeospatialMapFieldWellsPtr(v *TemplateGeospatialMapFieldWellsArgs) TemplateGeospatialMapFieldWellsPtrInput {
	return (*templateGeospatialMapFieldWellsPtrType)(v)
}

func (*templateGeospatialMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapFieldWells)(nil)).Elem()
}

func (i *templateGeospatialMapFieldWellsPtrType) ToTemplateGeospatialMapFieldWellsPtrOutput() TemplateGeospatialMapFieldWellsPtrOutput {
	return i.ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialMapFieldWellsPtrType) ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapFieldWellsPtrOutput)
}

type TemplateGeospatialMapFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapFieldWells)(nil)).Elem()
}

func (o TemplateGeospatialMapFieldWellsOutput) ToTemplateGeospatialMapFieldWellsOutput() TemplateGeospatialMapFieldWellsOutput {
	return o
}

func (o TemplateGeospatialMapFieldWellsOutput) ToTemplateGeospatialMapFieldWellsOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsOutput {
	return o
}

func (o TemplateGeospatialMapFieldWellsOutput) ToTemplateGeospatialMapFieldWellsPtrOutput() TemplateGeospatialMapFieldWellsPtrOutput {
	return o.ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialMapFieldWellsOutput) ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialMapFieldWells) *TemplateGeospatialMapFieldWells {
		return &v
	}).(TemplateGeospatialMapFieldWellsPtrOutput)
}

func (o TemplateGeospatialMapFieldWellsOutput) GeospatialMapAggregatedFieldWells() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapFieldWells) *TemplateGeospatialMapAggregatedFieldWells {
		return v.GeospatialMapAggregatedFieldWells
	}).(TemplateGeospatialMapAggregatedFieldWellsPtrOutput)
}

type TemplateGeospatialMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapFieldWells)(nil)).Elem()
}

func (o TemplateGeospatialMapFieldWellsPtrOutput) ToTemplateGeospatialMapFieldWellsPtrOutput() TemplateGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o TemplateGeospatialMapFieldWellsPtrOutput) ToTemplateGeospatialMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapFieldWellsPtrOutput {
	return o
}

func (o TemplateGeospatialMapFieldWellsPtrOutput) Elem() TemplateGeospatialMapFieldWellsOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapFieldWells) TemplateGeospatialMapFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialMapFieldWells
		return ret
	}).(TemplateGeospatialMapFieldWellsOutput)
}

func (o TemplateGeospatialMapFieldWellsPtrOutput) GeospatialMapAggregatedFieldWells() TemplateGeospatialMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapFieldWells) *TemplateGeospatialMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.GeospatialMapAggregatedFieldWells
	}).(TemplateGeospatialMapAggregatedFieldWellsPtrOutput)
}

type TemplateGeospatialMapStyleOptions struct {
	BaseMapStyle *TemplateBaseMapStyleType `pulumi:"baseMapStyle"`
}

// TemplateGeospatialMapStyleOptionsInput is an input type that accepts TemplateGeospatialMapStyleOptionsArgs and TemplateGeospatialMapStyleOptionsOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapStyleOptionsInput` via:
//
//	TemplateGeospatialMapStyleOptionsArgs{...}
type TemplateGeospatialMapStyleOptionsInput interface {
	pulumi.Input

	ToTemplateGeospatialMapStyleOptionsOutput() TemplateGeospatialMapStyleOptionsOutput
	ToTemplateGeospatialMapStyleOptionsOutputWithContext(context.Context) TemplateGeospatialMapStyleOptionsOutput
}

type TemplateGeospatialMapStyleOptionsArgs struct {
	BaseMapStyle TemplateBaseMapStyleTypePtrInput `pulumi:"baseMapStyle"`
}

func (TemplateGeospatialMapStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapStyleOptions)(nil)).Elem()
}

func (i TemplateGeospatialMapStyleOptionsArgs) ToTemplateGeospatialMapStyleOptionsOutput() TemplateGeospatialMapStyleOptionsOutput {
	return i.ToTemplateGeospatialMapStyleOptionsOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapStyleOptionsArgs) ToTemplateGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapStyleOptionsOutput)
}

func (i TemplateGeospatialMapStyleOptionsArgs) ToTemplateGeospatialMapStyleOptionsPtrOutput() TemplateGeospatialMapStyleOptionsPtrOutput {
	return i.ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapStyleOptionsArgs) ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapStyleOptionsOutput).ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(ctx)
}

// TemplateGeospatialMapStyleOptionsPtrInput is an input type that accepts TemplateGeospatialMapStyleOptionsArgs, TemplateGeospatialMapStyleOptionsPtr and TemplateGeospatialMapStyleOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapStyleOptionsPtrInput` via:
//
//	        TemplateGeospatialMapStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialMapStyleOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialMapStyleOptionsPtrOutput() TemplateGeospatialMapStyleOptionsPtrOutput
	ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(context.Context) TemplateGeospatialMapStyleOptionsPtrOutput
}

type templateGeospatialMapStyleOptionsPtrType TemplateGeospatialMapStyleOptionsArgs

func TemplateGeospatialMapStyleOptionsPtr(v *TemplateGeospatialMapStyleOptionsArgs) TemplateGeospatialMapStyleOptionsPtrInput {
	return (*templateGeospatialMapStyleOptionsPtrType)(v)
}

func (*templateGeospatialMapStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapStyleOptions)(nil)).Elem()
}

func (i *templateGeospatialMapStyleOptionsPtrType) ToTemplateGeospatialMapStyleOptionsPtrOutput() TemplateGeospatialMapStyleOptionsPtrOutput {
	return i.ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialMapStyleOptionsPtrType) ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

type TemplateGeospatialMapStyleOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapStyleOptions)(nil)).Elem()
}

func (o TemplateGeospatialMapStyleOptionsOutput) ToTemplateGeospatialMapStyleOptionsOutput() TemplateGeospatialMapStyleOptionsOutput {
	return o
}

func (o TemplateGeospatialMapStyleOptionsOutput) ToTemplateGeospatialMapStyleOptionsOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsOutput {
	return o
}

func (o TemplateGeospatialMapStyleOptionsOutput) ToTemplateGeospatialMapStyleOptionsPtrOutput() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialMapStyleOptionsOutput) ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialMapStyleOptions) *TemplateGeospatialMapStyleOptions {
		return &v
	}).(TemplateGeospatialMapStyleOptionsPtrOutput)
}

func (o TemplateGeospatialMapStyleOptionsOutput) BaseMapStyle() TemplateBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapStyleOptions) *TemplateBaseMapStyleType { return v.BaseMapStyle }).(TemplateBaseMapStyleTypePtrOutput)
}

type TemplateGeospatialMapStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapStyleOptions)(nil)).Elem()
}

func (o TemplateGeospatialMapStyleOptionsPtrOutput) ToTemplateGeospatialMapStyleOptionsPtrOutput() TemplateGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialMapStyleOptionsPtrOutput) ToTemplateGeospatialMapStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapStyleOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialMapStyleOptionsPtrOutput) Elem() TemplateGeospatialMapStyleOptionsOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapStyleOptions) TemplateGeospatialMapStyleOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialMapStyleOptions
		return ret
	}).(TemplateGeospatialMapStyleOptionsOutput)
}

func (o TemplateGeospatialMapStyleOptionsPtrOutput) BaseMapStyle() TemplateBaseMapStyleTypePtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapStyleOptions) *TemplateBaseMapStyleType {
		if v == nil {
			return nil
		}
		return v.BaseMapStyle
	}).(TemplateBaseMapStyleTypePtrOutput)
}

type TemplateGeospatialMapVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateGeospatialMapConfiguration `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateGeospatialMapVisualInput is an input type that accepts TemplateGeospatialMapVisualArgs and TemplateGeospatialMapVisualOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapVisualInput` via:
//
//	TemplateGeospatialMapVisualArgs{...}
type TemplateGeospatialMapVisualInput interface {
	pulumi.Input

	ToTemplateGeospatialMapVisualOutput() TemplateGeospatialMapVisualOutput
	ToTemplateGeospatialMapVisualOutputWithContext(context.Context) TemplateGeospatialMapVisualOutput
}

type TemplateGeospatialMapVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateGeospatialMapConfigurationPtrInput `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateGeospatialMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapVisual)(nil)).Elem()
}

func (i TemplateGeospatialMapVisualArgs) ToTemplateGeospatialMapVisualOutput() TemplateGeospatialMapVisualOutput {
	return i.ToTemplateGeospatialMapVisualOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapVisualArgs) ToTemplateGeospatialMapVisualOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapVisualOutput)
}

func (i TemplateGeospatialMapVisualArgs) ToTemplateGeospatialMapVisualPtrOutput() TemplateGeospatialMapVisualPtrOutput {
	return i.ToTemplateGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialMapVisualArgs) ToTemplateGeospatialMapVisualPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapVisualOutput).ToTemplateGeospatialMapVisualPtrOutputWithContext(ctx)
}

// TemplateGeospatialMapVisualPtrInput is an input type that accepts TemplateGeospatialMapVisualArgs, TemplateGeospatialMapVisualPtr and TemplateGeospatialMapVisualPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialMapVisualPtrInput` via:
//
//	        TemplateGeospatialMapVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialMapVisualPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialMapVisualPtrOutput() TemplateGeospatialMapVisualPtrOutput
	ToTemplateGeospatialMapVisualPtrOutputWithContext(context.Context) TemplateGeospatialMapVisualPtrOutput
}

type templateGeospatialMapVisualPtrType TemplateGeospatialMapVisualArgs

func TemplateGeospatialMapVisualPtr(v *TemplateGeospatialMapVisualArgs) TemplateGeospatialMapVisualPtrInput {
	return (*templateGeospatialMapVisualPtrType)(v)
}

func (*templateGeospatialMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapVisual)(nil)).Elem()
}

func (i *templateGeospatialMapVisualPtrType) ToTemplateGeospatialMapVisualPtrOutput() TemplateGeospatialMapVisualPtrOutput {
	return i.ToTemplateGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialMapVisualPtrType) ToTemplateGeospatialMapVisualPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialMapVisualPtrOutput)
}

type TemplateGeospatialMapVisualOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialMapVisual)(nil)).Elem()
}

func (o TemplateGeospatialMapVisualOutput) ToTemplateGeospatialMapVisualOutput() TemplateGeospatialMapVisualOutput {
	return o
}

func (o TemplateGeospatialMapVisualOutput) ToTemplateGeospatialMapVisualOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualOutput {
	return o
}

func (o TemplateGeospatialMapVisualOutput) ToTemplateGeospatialMapVisualPtrOutput() TemplateGeospatialMapVisualPtrOutput {
	return o.ToTemplateGeospatialMapVisualPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialMapVisualOutput) ToTemplateGeospatialMapVisualPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialMapVisual) *TemplateGeospatialMapVisual {
		return &v
	}).(TemplateGeospatialMapVisualPtrOutput)
}

func (o TemplateGeospatialMapVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateGeospatialMapVisualOutput) ChartConfiguration() TemplateGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) *TemplateGeospatialMapConfiguration { return v.ChartConfiguration }).(TemplateGeospatialMapConfigurationPtrOutput)
}

func (o TemplateGeospatialMapVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateGeospatialMapVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateGeospatialMapVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateGeospatialMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateGeospatialMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateGeospatialMapVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialMapVisual)(nil)).Elem()
}

func (o TemplateGeospatialMapVisualPtrOutput) ToTemplateGeospatialMapVisualPtrOutput() TemplateGeospatialMapVisualPtrOutput {
	return o
}

func (o TemplateGeospatialMapVisualPtrOutput) ToTemplateGeospatialMapVisualPtrOutputWithContext(ctx context.Context) TemplateGeospatialMapVisualPtrOutput {
	return o
}

func (o TemplateGeospatialMapVisualPtrOutput) Elem() TemplateGeospatialMapVisualOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) TemplateGeospatialMapVisual {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialMapVisual
		return ret
	}).(TemplateGeospatialMapVisualOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) ChartConfiguration() TemplateGeospatialMapConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) *TemplateGeospatialMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateGeospatialMapConfigurationPtrOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateGeospatialMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateGeospatialPointStyleOptions struct {
	ClusterMarkerConfiguration *TemplateClusterMarkerConfiguration     `pulumi:"clusterMarkerConfiguration"`
	HeatmapConfiguration       *TemplateGeospatialHeatmapConfiguration `pulumi:"heatmapConfiguration"`
	SelectedPointStyle         *TemplateGeospatialSelectedPointStyle   `pulumi:"selectedPointStyle"`
}

// TemplateGeospatialPointStyleOptionsInput is an input type that accepts TemplateGeospatialPointStyleOptionsArgs and TemplateGeospatialPointStyleOptionsOutput values.
// You can construct a concrete instance of `TemplateGeospatialPointStyleOptionsInput` via:
//
//	TemplateGeospatialPointStyleOptionsArgs{...}
type TemplateGeospatialPointStyleOptionsInput interface {
	pulumi.Input

	ToTemplateGeospatialPointStyleOptionsOutput() TemplateGeospatialPointStyleOptionsOutput
	ToTemplateGeospatialPointStyleOptionsOutputWithContext(context.Context) TemplateGeospatialPointStyleOptionsOutput
}

type TemplateGeospatialPointStyleOptionsArgs struct {
	ClusterMarkerConfiguration TemplateClusterMarkerConfigurationPtrInput     `pulumi:"clusterMarkerConfiguration"`
	HeatmapConfiguration       TemplateGeospatialHeatmapConfigurationPtrInput `pulumi:"heatmapConfiguration"`
	SelectedPointStyle         TemplateGeospatialSelectedPointStylePtrInput   `pulumi:"selectedPointStyle"`
}

func (TemplateGeospatialPointStyleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialPointStyleOptions)(nil)).Elem()
}

func (i TemplateGeospatialPointStyleOptionsArgs) ToTemplateGeospatialPointStyleOptionsOutput() TemplateGeospatialPointStyleOptionsOutput {
	return i.ToTemplateGeospatialPointStyleOptionsOutputWithContext(context.Background())
}

func (i TemplateGeospatialPointStyleOptionsArgs) ToTemplateGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialPointStyleOptionsOutput)
}

func (i TemplateGeospatialPointStyleOptionsArgs) ToTemplateGeospatialPointStyleOptionsPtrOutput() TemplateGeospatialPointStyleOptionsPtrOutput {
	return i.ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialPointStyleOptionsArgs) ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialPointStyleOptionsOutput).ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(ctx)
}

// TemplateGeospatialPointStyleOptionsPtrInput is an input type that accepts TemplateGeospatialPointStyleOptionsArgs, TemplateGeospatialPointStyleOptionsPtr and TemplateGeospatialPointStyleOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialPointStyleOptionsPtrInput` via:
//
//	        TemplateGeospatialPointStyleOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialPointStyleOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialPointStyleOptionsPtrOutput() TemplateGeospatialPointStyleOptionsPtrOutput
	ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(context.Context) TemplateGeospatialPointStyleOptionsPtrOutput
}

type templateGeospatialPointStyleOptionsPtrType TemplateGeospatialPointStyleOptionsArgs

func TemplateGeospatialPointStyleOptionsPtr(v *TemplateGeospatialPointStyleOptionsArgs) TemplateGeospatialPointStyleOptionsPtrInput {
	return (*templateGeospatialPointStyleOptionsPtrType)(v)
}

func (*templateGeospatialPointStyleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialPointStyleOptions)(nil)).Elem()
}

func (i *templateGeospatialPointStyleOptionsPtrType) ToTemplateGeospatialPointStyleOptionsPtrOutput() TemplateGeospatialPointStyleOptionsPtrOutput {
	return i.ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialPointStyleOptionsPtrType) ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialPointStyleOptionsPtrOutput)
}

type TemplateGeospatialPointStyleOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialPointStyleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialPointStyleOptions)(nil)).Elem()
}

func (o TemplateGeospatialPointStyleOptionsOutput) ToTemplateGeospatialPointStyleOptionsOutput() TemplateGeospatialPointStyleOptionsOutput {
	return o
}

func (o TemplateGeospatialPointStyleOptionsOutput) ToTemplateGeospatialPointStyleOptionsOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsOutput {
	return o
}

func (o TemplateGeospatialPointStyleOptionsOutput) ToTemplateGeospatialPointStyleOptionsPtrOutput() TemplateGeospatialPointStyleOptionsPtrOutput {
	return o.ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialPointStyleOptionsOutput) ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialPointStyleOptions) *TemplateGeospatialPointStyleOptions {
		return &v
	}).(TemplateGeospatialPointStyleOptionsPtrOutput)
}

func (o TemplateGeospatialPointStyleOptionsOutput) ClusterMarkerConfiguration() TemplateClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialPointStyleOptions) *TemplateClusterMarkerConfiguration {
		return v.ClusterMarkerConfiguration
	}).(TemplateClusterMarkerConfigurationPtrOutput)
}

func (o TemplateGeospatialPointStyleOptionsOutput) HeatmapConfiguration() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialPointStyleOptions) *TemplateGeospatialHeatmapConfiguration {
		return v.HeatmapConfiguration
	}).(TemplateGeospatialHeatmapConfigurationPtrOutput)
}

func (o TemplateGeospatialPointStyleOptionsOutput) SelectedPointStyle() TemplateGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v TemplateGeospatialPointStyleOptions) *TemplateGeospatialSelectedPointStyle {
		return v.SelectedPointStyle
	}).(TemplateGeospatialSelectedPointStylePtrOutput)
}

type TemplateGeospatialPointStyleOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialPointStyleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialPointStyleOptions)(nil)).Elem()
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) ToTemplateGeospatialPointStyleOptionsPtrOutput() TemplateGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) ToTemplateGeospatialPointStyleOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialPointStyleOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) Elem() TemplateGeospatialPointStyleOptionsOutput {
	return o.ApplyT(func(v *TemplateGeospatialPointStyleOptions) TemplateGeospatialPointStyleOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialPointStyleOptions
		return ret
	}).(TemplateGeospatialPointStyleOptionsOutput)
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) ClusterMarkerConfiguration() TemplateClusterMarkerConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialPointStyleOptions) *TemplateClusterMarkerConfiguration {
		if v == nil {
			return nil
		}
		return v.ClusterMarkerConfiguration
	}).(TemplateClusterMarkerConfigurationPtrOutput)
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) HeatmapConfiguration() TemplateGeospatialHeatmapConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialPointStyleOptions) *TemplateGeospatialHeatmapConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatmapConfiguration
	}).(TemplateGeospatialHeatmapConfigurationPtrOutput)
}

func (o TemplateGeospatialPointStyleOptionsPtrOutput) SelectedPointStyle() TemplateGeospatialSelectedPointStylePtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialPointStyleOptions) *TemplateGeospatialSelectedPointStyle {
		if v == nil {
			return nil
		}
		return v.SelectedPointStyle
	}).(TemplateGeospatialSelectedPointStylePtrOutput)
}

type TemplateGeospatialWindowOptions struct {
	Bounds      *TemplateGeospatialCoordinateBounds `pulumi:"bounds"`
	MapZoomMode *TemplateMapZoomMode                `pulumi:"mapZoomMode"`
}

// TemplateGeospatialWindowOptionsInput is an input type that accepts TemplateGeospatialWindowOptionsArgs and TemplateGeospatialWindowOptionsOutput values.
// You can construct a concrete instance of `TemplateGeospatialWindowOptionsInput` via:
//
//	TemplateGeospatialWindowOptionsArgs{...}
type TemplateGeospatialWindowOptionsInput interface {
	pulumi.Input

	ToTemplateGeospatialWindowOptionsOutput() TemplateGeospatialWindowOptionsOutput
	ToTemplateGeospatialWindowOptionsOutputWithContext(context.Context) TemplateGeospatialWindowOptionsOutput
}

type TemplateGeospatialWindowOptionsArgs struct {
	Bounds      TemplateGeospatialCoordinateBoundsPtrInput `pulumi:"bounds"`
	MapZoomMode TemplateMapZoomModePtrInput                `pulumi:"mapZoomMode"`
}

func (TemplateGeospatialWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialWindowOptions)(nil)).Elem()
}

func (i TemplateGeospatialWindowOptionsArgs) ToTemplateGeospatialWindowOptionsOutput() TemplateGeospatialWindowOptionsOutput {
	return i.ToTemplateGeospatialWindowOptionsOutputWithContext(context.Background())
}

func (i TemplateGeospatialWindowOptionsArgs) ToTemplateGeospatialWindowOptionsOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialWindowOptionsOutput)
}

func (i TemplateGeospatialWindowOptionsArgs) ToTemplateGeospatialWindowOptionsPtrOutput() TemplateGeospatialWindowOptionsPtrOutput {
	return i.ToTemplateGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGeospatialWindowOptionsArgs) ToTemplateGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialWindowOptionsOutput).ToTemplateGeospatialWindowOptionsPtrOutputWithContext(ctx)
}

// TemplateGeospatialWindowOptionsPtrInput is an input type that accepts TemplateGeospatialWindowOptionsArgs, TemplateGeospatialWindowOptionsPtr and TemplateGeospatialWindowOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGeospatialWindowOptionsPtrInput` via:
//
//	        TemplateGeospatialWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGeospatialWindowOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGeospatialWindowOptionsPtrOutput() TemplateGeospatialWindowOptionsPtrOutput
	ToTemplateGeospatialWindowOptionsPtrOutputWithContext(context.Context) TemplateGeospatialWindowOptionsPtrOutput
}

type templateGeospatialWindowOptionsPtrType TemplateGeospatialWindowOptionsArgs

func TemplateGeospatialWindowOptionsPtr(v *TemplateGeospatialWindowOptionsArgs) TemplateGeospatialWindowOptionsPtrInput {
	return (*templateGeospatialWindowOptionsPtrType)(v)
}

func (*templateGeospatialWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialWindowOptions)(nil)).Elem()
}

func (i *templateGeospatialWindowOptionsPtrType) ToTemplateGeospatialWindowOptionsPtrOutput() TemplateGeospatialWindowOptionsPtrOutput {
	return i.ToTemplateGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGeospatialWindowOptionsPtrType) ToTemplateGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeospatialWindowOptionsPtrOutput)
}

type TemplateGeospatialWindowOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeospatialWindowOptions)(nil)).Elem()
}

func (o TemplateGeospatialWindowOptionsOutput) ToTemplateGeospatialWindowOptionsOutput() TemplateGeospatialWindowOptionsOutput {
	return o
}

func (o TemplateGeospatialWindowOptionsOutput) ToTemplateGeospatialWindowOptionsOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsOutput {
	return o
}

func (o TemplateGeospatialWindowOptionsOutput) ToTemplateGeospatialWindowOptionsPtrOutput() TemplateGeospatialWindowOptionsPtrOutput {
	return o.ToTemplateGeospatialWindowOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGeospatialWindowOptionsOutput) ToTemplateGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGeospatialWindowOptions) *TemplateGeospatialWindowOptions {
		return &v
	}).(TemplateGeospatialWindowOptionsPtrOutput)
}

func (o TemplateGeospatialWindowOptionsOutput) Bounds() TemplateGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v TemplateGeospatialWindowOptions) *TemplateGeospatialCoordinateBounds { return v.Bounds }).(TemplateGeospatialCoordinateBoundsPtrOutput)
}

func (o TemplateGeospatialWindowOptionsOutput) MapZoomMode() TemplateMapZoomModePtrOutput {
	return o.ApplyT(func(v TemplateGeospatialWindowOptions) *TemplateMapZoomMode { return v.MapZoomMode }).(TemplateMapZoomModePtrOutput)
}

type TemplateGeospatialWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGeospatialWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGeospatialWindowOptions)(nil)).Elem()
}

func (o TemplateGeospatialWindowOptionsPtrOutput) ToTemplateGeospatialWindowOptionsPtrOutput() TemplateGeospatialWindowOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialWindowOptionsPtrOutput) ToTemplateGeospatialWindowOptionsPtrOutputWithContext(ctx context.Context) TemplateGeospatialWindowOptionsPtrOutput {
	return o
}

func (o TemplateGeospatialWindowOptionsPtrOutput) Elem() TemplateGeospatialWindowOptionsOutput {
	return o.ApplyT(func(v *TemplateGeospatialWindowOptions) TemplateGeospatialWindowOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGeospatialWindowOptions
		return ret
	}).(TemplateGeospatialWindowOptionsOutput)
}

func (o TemplateGeospatialWindowOptionsPtrOutput) Bounds() TemplateGeospatialCoordinateBoundsPtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialWindowOptions) *TemplateGeospatialCoordinateBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(TemplateGeospatialCoordinateBoundsPtrOutput)
}

func (o TemplateGeospatialWindowOptionsPtrOutput) MapZoomMode() TemplateMapZoomModePtrOutput {
	return o.ApplyT(func(v *TemplateGeospatialWindowOptions) *TemplateMapZoomMode {
		if v == nil {
			return nil
		}
		return v.MapZoomMode
	}).(TemplateMapZoomModePtrOutput)
}

type TemplateGlobalTableBorderOptions struct {
	SideSpecificBorder *TemplateTableSideBorderOptions `pulumi:"sideSpecificBorder"`
	UniformBorder      *TemplateTableBorderOptions     `pulumi:"uniformBorder"`
}

// TemplateGlobalTableBorderOptionsInput is an input type that accepts TemplateGlobalTableBorderOptionsArgs and TemplateGlobalTableBorderOptionsOutput values.
// You can construct a concrete instance of `TemplateGlobalTableBorderOptionsInput` via:
//
//	TemplateGlobalTableBorderOptionsArgs{...}
type TemplateGlobalTableBorderOptionsInput interface {
	pulumi.Input

	ToTemplateGlobalTableBorderOptionsOutput() TemplateGlobalTableBorderOptionsOutput
	ToTemplateGlobalTableBorderOptionsOutputWithContext(context.Context) TemplateGlobalTableBorderOptionsOutput
}

type TemplateGlobalTableBorderOptionsArgs struct {
	SideSpecificBorder TemplateTableSideBorderOptionsPtrInput `pulumi:"sideSpecificBorder"`
	UniformBorder      TemplateTableBorderOptionsPtrInput     `pulumi:"uniformBorder"`
}

func (TemplateGlobalTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGlobalTableBorderOptions)(nil)).Elem()
}

func (i TemplateGlobalTableBorderOptionsArgs) ToTemplateGlobalTableBorderOptionsOutput() TemplateGlobalTableBorderOptionsOutput {
	return i.ToTemplateGlobalTableBorderOptionsOutputWithContext(context.Background())
}

func (i TemplateGlobalTableBorderOptionsArgs) ToTemplateGlobalTableBorderOptionsOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGlobalTableBorderOptionsOutput)
}

func (i TemplateGlobalTableBorderOptionsArgs) ToTemplateGlobalTableBorderOptionsPtrOutput() TemplateGlobalTableBorderOptionsPtrOutput {
	return i.ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGlobalTableBorderOptionsArgs) ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGlobalTableBorderOptionsOutput).ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(ctx)
}

// TemplateGlobalTableBorderOptionsPtrInput is an input type that accepts TemplateGlobalTableBorderOptionsArgs, TemplateGlobalTableBorderOptionsPtr and TemplateGlobalTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGlobalTableBorderOptionsPtrInput` via:
//
//	        TemplateGlobalTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGlobalTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGlobalTableBorderOptionsPtrOutput() TemplateGlobalTableBorderOptionsPtrOutput
	ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(context.Context) TemplateGlobalTableBorderOptionsPtrOutput
}

type templateGlobalTableBorderOptionsPtrType TemplateGlobalTableBorderOptionsArgs

func TemplateGlobalTableBorderOptionsPtr(v *TemplateGlobalTableBorderOptionsArgs) TemplateGlobalTableBorderOptionsPtrInput {
	return (*templateGlobalTableBorderOptionsPtrType)(v)
}

func (*templateGlobalTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGlobalTableBorderOptions)(nil)).Elem()
}

func (i *templateGlobalTableBorderOptionsPtrType) ToTemplateGlobalTableBorderOptionsPtrOutput() TemplateGlobalTableBorderOptionsPtrOutput {
	return i.ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGlobalTableBorderOptionsPtrType) ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGlobalTableBorderOptionsPtrOutput)
}

type TemplateGlobalTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGlobalTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGlobalTableBorderOptions)(nil)).Elem()
}

func (o TemplateGlobalTableBorderOptionsOutput) ToTemplateGlobalTableBorderOptionsOutput() TemplateGlobalTableBorderOptionsOutput {
	return o
}

func (o TemplateGlobalTableBorderOptionsOutput) ToTemplateGlobalTableBorderOptionsOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsOutput {
	return o
}

func (o TemplateGlobalTableBorderOptionsOutput) ToTemplateGlobalTableBorderOptionsPtrOutput() TemplateGlobalTableBorderOptionsPtrOutput {
	return o.ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGlobalTableBorderOptionsOutput) ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGlobalTableBorderOptions) *TemplateGlobalTableBorderOptions {
		return &v
	}).(TemplateGlobalTableBorderOptionsPtrOutput)
}

func (o TemplateGlobalTableBorderOptionsOutput) SideSpecificBorder() TemplateTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGlobalTableBorderOptions) *TemplateTableSideBorderOptions { return v.SideSpecificBorder }).(TemplateTableSideBorderOptionsPtrOutput)
}

func (o TemplateGlobalTableBorderOptionsOutput) UniformBorder() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGlobalTableBorderOptions) *TemplateTableBorderOptions { return v.UniformBorder }).(TemplateTableBorderOptionsPtrOutput)
}

type TemplateGlobalTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGlobalTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGlobalTableBorderOptions)(nil)).Elem()
}

func (o TemplateGlobalTableBorderOptionsPtrOutput) ToTemplateGlobalTableBorderOptionsPtrOutput() TemplateGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o TemplateGlobalTableBorderOptionsPtrOutput) ToTemplateGlobalTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateGlobalTableBorderOptionsPtrOutput {
	return o
}

func (o TemplateGlobalTableBorderOptionsPtrOutput) Elem() TemplateGlobalTableBorderOptionsOutput {
	return o.ApplyT(func(v *TemplateGlobalTableBorderOptions) TemplateGlobalTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGlobalTableBorderOptions
		return ret
	}).(TemplateGlobalTableBorderOptionsOutput)
}

func (o TemplateGlobalTableBorderOptionsPtrOutput) SideSpecificBorder() TemplateTableSideBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGlobalTableBorderOptions) *TemplateTableSideBorderOptions {
		if v == nil {
			return nil
		}
		return v.SideSpecificBorder
	}).(TemplateTableSideBorderOptionsPtrOutput)
}

func (o TemplateGlobalTableBorderOptionsPtrOutput) UniformBorder() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGlobalTableBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.UniformBorder
	}).(TemplateTableBorderOptionsPtrOutput)
}

type TemplateGradientColor struct {
	Stops []TemplateGradientStop `pulumi:"stops"`
}

// TemplateGradientColorInput is an input type that accepts TemplateGradientColorArgs and TemplateGradientColorOutput values.
// You can construct a concrete instance of `TemplateGradientColorInput` via:
//
//	TemplateGradientColorArgs{...}
type TemplateGradientColorInput interface {
	pulumi.Input

	ToTemplateGradientColorOutput() TemplateGradientColorOutput
	ToTemplateGradientColorOutputWithContext(context.Context) TemplateGradientColorOutput
}

type TemplateGradientColorArgs struct {
	Stops TemplateGradientStopArrayInput `pulumi:"stops"`
}

func (TemplateGradientColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGradientColor)(nil)).Elem()
}

func (i TemplateGradientColorArgs) ToTemplateGradientColorOutput() TemplateGradientColorOutput {
	return i.ToTemplateGradientColorOutputWithContext(context.Background())
}

func (i TemplateGradientColorArgs) ToTemplateGradientColorOutputWithContext(ctx context.Context) TemplateGradientColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGradientColorOutput)
}

func (i TemplateGradientColorArgs) ToTemplateGradientColorPtrOutput() TemplateGradientColorPtrOutput {
	return i.ToTemplateGradientColorPtrOutputWithContext(context.Background())
}

func (i TemplateGradientColorArgs) ToTemplateGradientColorPtrOutputWithContext(ctx context.Context) TemplateGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGradientColorOutput).ToTemplateGradientColorPtrOutputWithContext(ctx)
}

// TemplateGradientColorPtrInput is an input type that accepts TemplateGradientColorArgs, TemplateGradientColorPtr and TemplateGradientColorPtrOutput values.
// You can construct a concrete instance of `TemplateGradientColorPtrInput` via:
//
//	        TemplateGradientColorArgs{...}
//
//	or:
//
//	        nil
type TemplateGradientColorPtrInput interface {
	pulumi.Input

	ToTemplateGradientColorPtrOutput() TemplateGradientColorPtrOutput
	ToTemplateGradientColorPtrOutputWithContext(context.Context) TemplateGradientColorPtrOutput
}

type templateGradientColorPtrType TemplateGradientColorArgs

func TemplateGradientColorPtr(v *TemplateGradientColorArgs) TemplateGradientColorPtrInput {
	return (*templateGradientColorPtrType)(v)
}

func (*templateGradientColorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGradientColor)(nil)).Elem()
}

func (i *templateGradientColorPtrType) ToTemplateGradientColorPtrOutput() TemplateGradientColorPtrOutput {
	return i.ToTemplateGradientColorPtrOutputWithContext(context.Background())
}

func (i *templateGradientColorPtrType) ToTemplateGradientColorPtrOutputWithContext(ctx context.Context) TemplateGradientColorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGradientColorPtrOutput)
}

type TemplateGradientColorOutput struct{ *pulumi.OutputState }

func (TemplateGradientColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGradientColor)(nil)).Elem()
}

func (o TemplateGradientColorOutput) ToTemplateGradientColorOutput() TemplateGradientColorOutput {
	return o
}

func (o TemplateGradientColorOutput) ToTemplateGradientColorOutputWithContext(ctx context.Context) TemplateGradientColorOutput {
	return o
}

func (o TemplateGradientColorOutput) ToTemplateGradientColorPtrOutput() TemplateGradientColorPtrOutput {
	return o.ToTemplateGradientColorPtrOutputWithContext(context.Background())
}

func (o TemplateGradientColorOutput) ToTemplateGradientColorPtrOutputWithContext(ctx context.Context) TemplateGradientColorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGradientColor) *TemplateGradientColor {
		return &v
	}).(TemplateGradientColorPtrOutput)
}

func (o TemplateGradientColorOutput) Stops() TemplateGradientStopArrayOutput {
	return o.ApplyT(func(v TemplateGradientColor) []TemplateGradientStop { return v.Stops }).(TemplateGradientStopArrayOutput)
}

type TemplateGradientColorPtrOutput struct{ *pulumi.OutputState }

func (TemplateGradientColorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGradientColor)(nil)).Elem()
}

func (o TemplateGradientColorPtrOutput) ToTemplateGradientColorPtrOutput() TemplateGradientColorPtrOutput {
	return o
}

func (o TemplateGradientColorPtrOutput) ToTemplateGradientColorPtrOutputWithContext(ctx context.Context) TemplateGradientColorPtrOutput {
	return o
}

func (o TemplateGradientColorPtrOutput) Elem() TemplateGradientColorOutput {
	return o.ApplyT(func(v *TemplateGradientColor) TemplateGradientColor {
		if v != nil {
			return *v
		}
		var ret TemplateGradientColor
		return ret
	}).(TemplateGradientColorOutput)
}

func (o TemplateGradientColorPtrOutput) Stops() TemplateGradientStopArrayOutput {
	return o.ApplyT(func(v *TemplateGradientColor) []TemplateGradientStop {
		if v == nil {
			return nil
		}
		return v.Stops
	}).(TemplateGradientStopArrayOutput)
}

type TemplateGradientStop struct {
	Color          *string  `pulumi:"color"`
	DataValue      *float64 `pulumi:"dataValue"`
	GradientOffset float64  `pulumi:"gradientOffset"`
}

// TemplateGradientStopInput is an input type that accepts TemplateGradientStopArgs and TemplateGradientStopOutput values.
// You can construct a concrete instance of `TemplateGradientStopInput` via:
//
//	TemplateGradientStopArgs{...}
type TemplateGradientStopInput interface {
	pulumi.Input

	ToTemplateGradientStopOutput() TemplateGradientStopOutput
	ToTemplateGradientStopOutputWithContext(context.Context) TemplateGradientStopOutput
}

type TemplateGradientStopArgs struct {
	Color          pulumi.StringPtrInput  `pulumi:"color"`
	DataValue      pulumi.Float64PtrInput `pulumi:"dataValue"`
	GradientOffset pulumi.Float64Input    `pulumi:"gradientOffset"`
}

func (TemplateGradientStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGradientStop)(nil)).Elem()
}

func (i TemplateGradientStopArgs) ToTemplateGradientStopOutput() TemplateGradientStopOutput {
	return i.ToTemplateGradientStopOutputWithContext(context.Background())
}

func (i TemplateGradientStopArgs) ToTemplateGradientStopOutputWithContext(ctx context.Context) TemplateGradientStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGradientStopOutput)
}

// TemplateGradientStopArrayInput is an input type that accepts TemplateGradientStopArray and TemplateGradientStopArrayOutput values.
// You can construct a concrete instance of `TemplateGradientStopArrayInput` via:
//
//	TemplateGradientStopArray{ TemplateGradientStopArgs{...} }
type TemplateGradientStopArrayInput interface {
	pulumi.Input

	ToTemplateGradientStopArrayOutput() TemplateGradientStopArrayOutput
	ToTemplateGradientStopArrayOutputWithContext(context.Context) TemplateGradientStopArrayOutput
}

type TemplateGradientStopArray []TemplateGradientStopInput

func (TemplateGradientStopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGradientStop)(nil)).Elem()
}

func (i TemplateGradientStopArray) ToTemplateGradientStopArrayOutput() TemplateGradientStopArrayOutput {
	return i.ToTemplateGradientStopArrayOutputWithContext(context.Background())
}

func (i TemplateGradientStopArray) ToTemplateGradientStopArrayOutputWithContext(ctx context.Context) TemplateGradientStopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGradientStopArrayOutput)
}

type TemplateGradientStopOutput struct{ *pulumi.OutputState }

func (TemplateGradientStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGradientStop)(nil)).Elem()
}

func (o TemplateGradientStopOutput) ToTemplateGradientStopOutput() TemplateGradientStopOutput {
	return o
}

func (o TemplateGradientStopOutput) ToTemplateGradientStopOutputWithContext(ctx context.Context) TemplateGradientStopOutput {
	return o
}

func (o TemplateGradientStopOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGradientStop) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateGradientStopOutput) DataValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateGradientStop) *float64 { return v.DataValue }).(pulumi.Float64PtrOutput)
}

func (o TemplateGradientStopOutput) GradientOffset() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGradientStop) float64 { return v.GradientOffset }).(pulumi.Float64Output)
}

type TemplateGradientStopArrayOutput struct{ *pulumi.OutputState }

func (TemplateGradientStopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGradientStop)(nil)).Elem()
}

func (o TemplateGradientStopArrayOutput) ToTemplateGradientStopArrayOutput() TemplateGradientStopArrayOutput {
	return o
}

func (o TemplateGradientStopArrayOutput) ToTemplateGradientStopArrayOutputWithContext(ctx context.Context) TemplateGradientStopArrayOutput {
	return o
}

func (o TemplateGradientStopArrayOutput) Index(i pulumi.IntInput) TemplateGradientStopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateGradientStop {
		return vs[0].([]TemplateGradientStop)[vs[1].(int)]
	}).(TemplateGradientStopOutput)
}

type TemplateGridLayoutCanvasSizeOptions struct {
	ScreenCanvasSizeOptions *TemplateGridLayoutScreenCanvasSizeOptions `pulumi:"screenCanvasSizeOptions"`
}

// TemplateGridLayoutCanvasSizeOptionsInput is an input type that accepts TemplateGridLayoutCanvasSizeOptionsArgs and TemplateGridLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateGridLayoutCanvasSizeOptionsInput` via:
//
//	TemplateGridLayoutCanvasSizeOptionsArgs{...}
type TemplateGridLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateGridLayoutCanvasSizeOptionsOutput() TemplateGridLayoutCanvasSizeOptionsOutput
	ToTemplateGridLayoutCanvasSizeOptionsOutputWithContext(context.Context) TemplateGridLayoutCanvasSizeOptionsOutput
}

type TemplateGridLayoutCanvasSizeOptionsArgs struct {
	ScreenCanvasSizeOptions TemplateGridLayoutScreenCanvasSizeOptionsPtrInput `pulumi:"screenCanvasSizeOptions"`
}

func (TemplateGridLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateGridLayoutCanvasSizeOptionsArgs) ToTemplateGridLayoutCanvasSizeOptionsOutput() TemplateGridLayoutCanvasSizeOptionsOutput {
	return i.ToTemplateGridLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateGridLayoutCanvasSizeOptionsArgs) ToTemplateGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutCanvasSizeOptionsOutput)
}

func (i TemplateGridLayoutCanvasSizeOptionsArgs) ToTemplateGridLayoutCanvasSizeOptionsPtrOutput() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGridLayoutCanvasSizeOptionsArgs) ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutCanvasSizeOptionsOutput).ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateGridLayoutCanvasSizeOptionsPtrInput is an input type that accepts TemplateGridLayoutCanvasSizeOptionsArgs, TemplateGridLayoutCanvasSizeOptionsPtr and TemplateGridLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGridLayoutCanvasSizeOptionsPtrInput` via:
//
//	        TemplateGridLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGridLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGridLayoutCanvasSizeOptionsPtrOutput() TemplateGridLayoutCanvasSizeOptionsPtrOutput
	ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateGridLayoutCanvasSizeOptionsPtrOutput
}

type templateGridLayoutCanvasSizeOptionsPtrType TemplateGridLayoutCanvasSizeOptionsArgs

func TemplateGridLayoutCanvasSizeOptionsPtr(v *TemplateGridLayoutCanvasSizeOptionsArgs) TemplateGridLayoutCanvasSizeOptionsPtrInput {
	return (*templateGridLayoutCanvasSizeOptionsPtrType)(v)
}

func (*templateGridLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *templateGridLayoutCanvasSizeOptionsPtrType) ToTemplateGridLayoutCanvasSizeOptionsPtrOutput() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGridLayoutCanvasSizeOptionsPtrType) ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateGridLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateGridLayoutCanvasSizeOptionsOutput) ToTemplateGridLayoutCanvasSizeOptionsOutput() TemplateGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateGridLayoutCanvasSizeOptionsOutput) ToTemplateGridLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateGridLayoutCanvasSizeOptionsOutput) ToTemplateGridLayoutCanvasSizeOptionsPtrOutput() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGridLayoutCanvasSizeOptionsOutput) ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGridLayoutCanvasSizeOptions) *TemplateGridLayoutCanvasSizeOptions {
		return &v
	}).(TemplateGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateGridLayoutCanvasSizeOptionsOutput) ScreenCanvasSizeOptions() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGridLayoutCanvasSizeOptions) *TemplateGridLayoutScreenCanvasSizeOptions {
		return v.ScreenCanvasSizeOptions
	}).(TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateGridLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateGridLayoutCanvasSizeOptionsPtrOutput) ToTemplateGridLayoutCanvasSizeOptionsPtrOutput() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateGridLayoutCanvasSizeOptionsPtrOutput) ToTemplateGridLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateGridLayoutCanvasSizeOptionsPtrOutput) Elem() TemplateGridLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateGridLayoutCanvasSizeOptions) TemplateGridLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGridLayoutCanvasSizeOptions
		return ret
	}).(TemplateGridLayoutCanvasSizeOptionsOutput)
}

func (o TemplateGridLayoutCanvasSizeOptionsPtrOutput) ScreenCanvasSizeOptions() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGridLayoutCanvasSizeOptions) *TemplateGridLayoutScreenCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.ScreenCanvasSizeOptions
	}).(TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateGridLayoutConfiguration struct {
	CanvasSizeOptions *TemplateGridLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	Elements          []TemplateGridLayoutElement          `pulumi:"elements"`
}

// TemplateGridLayoutConfigurationInput is an input type that accepts TemplateGridLayoutConfigurationArgs and TemplateGridLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateGridLayoutConfigurationInput` via:
//
//	TemplateGridLayoutConfigurationArgs{...}
type TemplateGridLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateGridLayoutConfigurationOutput() TemplateGridLayoutConfigurationOutput
	ToTemplateGridLayoutConfigurationOutputWithContext(context.Context) TemplateGridLayoutConfigurationOutput
}

type TemplateGridLayoutConfigurationArgs struct {
	CanvasSizeOptions TemplateGridLayoutCanvasSizeOptionsPtrInput `pulumi:"canvasSizeOptions"`
	Elements          TemplateGridLayoutElementArrayInput         `pulumi:"elements"`
}

func (TemplateGridLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutConfiguration)(nil)).Elem()
}

func (i TemplateGridLayoutConfigurationArgs) ToTemplateGridLayoutConfigurationOutput() TemplateGridLayoutConfigurationOutput {
	return i.ToTemplateGridLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateGridLayoutConfigurationArgs) ToTemplateGridLayoutConfigurationOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutConfigurationOutput)
}

func (i TemplateGridLayoutConfigurationArgs) ToTemplateGridLayoutConfigurationPtrOutput() TemplateGridLayoutConfigurationPtrOutput {
	return i.ToTemplateGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateGridLayoutConfigurationArgs) ToTemplateGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutConfigurationOutput).ToTemplateGridLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateGridLayoutConfigurationPtrInput is an input type that accepts TemplateGridLayoutConfigurationArgs, TemplateGridLayoutConfigurationPtr and TemplateGridLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateGridLayoutConfigurationPtrInput` via:
//
//	        TemplateGridLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateGridLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateGridLayoutConfigurationPtrOutput() TemplateGridLayoutConfigurationPtrOutput
	ToTemplateGridLayoutConfigurationPtrOutputWithContext(context.Context) TemplateGridLayoutConfigurationPtrOutput
}

type templateGridLayoutConfigurationPtrType TemplateGridLayoutConfigurationArgs

func TemplateGridLayoutConfigurationPtr(v *TemplateGridLayoutConfigurationArgs) TemplateGridLayoutConfigurationPtrInput {
	return (*templateGridLayoutConfigurationPtrType)(v)
}

func (*templateGridLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutConfiguration)(nil)).Elem()
}

func (i *templateGridLayoutConfigurationPtrType) ToTemplateGridLayoutConfigurationPtrOutput() TemplateGridLayoutConfigurationPtrOutput {
	return i.ToTemplateGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateGridLayoutConfigurationPtrType) ToTemplateGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutConfigurationPtrOutput)
}

type TemplateGridLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutConfiguration)(nil)).Elem()
}

func (o TemplateGridLayoutConfigurationOutput) ToTemplateGridLayoutConfigurationOutput() TemplateGridLayoutConfigurationOutput {
	return o
}

func (o TemplateGridLayoutConfigurationOutput) ToTemplateGridLayoutConfigurationOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationOutput {
	return o
}

func (o TemplateGridLayoutConfigurationOutput) ToTemplateGridLayoutConfigurationPtrOutput() TemplateGridLayoutConfigurationPtrOutput {
	return o.ToTemplateGridLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateGridLayoutConfigurationOutput) ToTemplateGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGridLayoutConfiguration) *TemplateGridLayoutConfiguration {
		return &v
	}).(TemplateGridLayoutConfigurationPtrOutput)
}

func (o TemplateGridLayoutConfigurationOutput) CanvasSizeOptions() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateGridLayoutConfiguration) *TemplateGridLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateGridLayoutConfigurationOutput) Elements() TemplateGridLayoutElementArrayOutput {
	return o.ApplyT(func(v TemplateGridLayoutConfiguration) []TemplateGridLayoutElement { return v.Elements }).(TemplateGridLayoutElementArrayOutput)
}

type TemplateGridLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutConfiguration)(nil)).Elem()
}

func (o TemplateGridLayoutConfigurationPtrOutput) ToTemplateGridLayoutConfigurationPtrOutput() TemplateGridLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateGridLayoutConfigurationPtrOutput) ToTemplateGridLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateGridLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateGridLayoutConfigurationPtrOutput) Elem() TemplateGridLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateGridLayoutConfiguration) TemplateGridLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateGridLayoutConfiguration
		return ret
	}).(TemplateGridLayoutConfigurationOutput)
}

func (o TemplateGridLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateGridLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateGridLayoutConfiguration) *TemplateGridLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.CanvasSizeOptions
	}).(TemplateGridLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateGridLayoutConfigurationPtrOutput) Elements() TemplateGridLayoutElementArrayOutput {
	return o.ApplyT(func(v *TemplateGridLayoutConfiguration) []TemplateGridLayoutElement {
		if v == nil {
			return nil
		}
		return v.Elements
	}).(TemplateGridLayoutElementArrayOutput)
}

type TemplateGridLayoutElement struct {
	ColumnIndex  *float64                  `pulumi:"columnIndex"`
	ColumnSpan   float64                   `pulumi:"columnSpan"`
	ElementId    string                    `pulumi:"elementId"`
	ElementType_ TemplateLayoutElementType `pulumi:"elementType"`
	RowIndex     *float64                  `pulumi:"rowIndex"`
	RowSpan      float64                   `pulumi:"rowSpan"`
}

// TemplateGridLayoutElementInput is an input type that accepts TemplateGridLayoutElementArgs and TemplateGridLayoutElementOutput values.
// You can construct a concrete instance of `TemplateGridLayoutElementInput` via:
//
//	TemplateGridLayoutElementArgs{...}
type TemplateGridLayoutElementInput interface {
	pulumi.Input

	ToTemplateGridLayoutElementOutput() TemplateGridLayoutElementOutput
	ToTemplateGridLayoutElementOutputWithContext(context.Context) TemplateGridLayoutElementOutput
}

type TemplateGridLayoutElementArgs struct {
	ColumnIndex  pulumi.Float64PtrInput         `pulumi:"columnIndex"`
	ColumnSpan   pulumi.Float64Input            `pulumi:"columnSpan"`
	ElementId    pulumi.StringInput             `pulumi:"elementId"`
	ElementType_ TemplateLayoutElementTypeInput `pulumi:"elementType"`
	RowIndex     pulumi.Float64PtrInput         `pulumi:"rowIndex"`
	RowSpan      pulumi.Float64Input            `pulumi:"rowSpan"`
}

func (TemplateGridLayoutElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutElement)(nil)).Elem()
}

func (i TemplateGridLayoutElementArgs) ToTemplateGridLayoutElementOutput() TemplateGridLayoutElementOutput {
	return i.ToTemplateGridLayoutElementOutputWithContext(context.Background())
}

func (i TemplateGridLayoutElementArgs) ToTemplateGridLayoutElementOutputWithContext(ctx context.Context) TemplateGridLayoutElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutElementOutput)
}

// TemplateGridLayoutElementArrayInput is an input type that accepts TemplateGridLayoutElementArray and TemplateGridLayoutElementArrayOutput values.
// You can construct a concrete instance of `TemplateGridLayoutElementArrayInput` via:
//
//	TemplateGridLayoutElementArray{ TemplateGridLayoutElementArgs{...} }
type TemplateGridLayoutElementArrayInput interface {
	pulumi.Input

	ToTemplateGridLayoutElementArrayOutput() TemplateGridLayoutElementArrayOutput
	ToTemplateGridLayoutElementArrayOutputWithContext(context.Context) TemplateGridLayoutElementArrayOutput
}

type TemplateGridLayoutElementArray []TemplateGridLayoutElementInput

func (TemplateGridLayoutElementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGridLayoutElement)(nil)).Elem()
}

func (i TemplateGridLayoutElementArray) ToTemplateGridLayoutElementArrayOutput() TemplateGridLayoutElementArrayOutput {
	return i.ToTemplateGridLayoutElementArrayOutputWithContext(context.Background())
}

func (i TemplateGridLayoutElementArray) ToTemplateGridLayoutElementArrayOutputWithContext(ctx context.Context) TemplateGridLayoutElementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutElementArrayOutput)
}

type TemplateGridLayoutElementOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutElement)(nil)).Elem()
}

func (o TemplateGridLayoutElementOutput) ToTemplateGridLayoutElementOutput() TemplateGridLayoutElementOutput {
	return o
}

func (o TemplateGridLayoutElementOutput) ToTemplateGridLayoutElementOutputWithContext(ctx context.Context) TemplateGridLayoutElementOutput {
	return o
}

func (o TemplateGridLayoutElementOutput) ColumnIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateGridLayoutElement) *float64 { return v.ColumnIndex }).(pulumi.Float64PtrOutput)
}

func (o TemplateGridLayoutElementOutput) ColumnSpan() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGridLayoutElement) float64 { return v.ColumnSpan }).(pulumi.Float64Output)
}

func (o TemplateGridLayoutElementOutput) ElementId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateGridLayoutElement) string { return v.ElementId }).(pulumi.StringOutput)
}

func (o TemplateGridLayoutElementOutput) GetElementType_() TemplateLayoutElementTypeOutput {
	return o.ApplyT(func(v TemplateGridLayoutElement) TemplateLayoutElementType { return v.ElementType_ }).(TemplateLayoutElementTypeOutput)
}

func (o TemplateGridLayoutElementOutput) RowIndex() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateGridLayoutElement) *float64 { return v.RowIndex }).(pulumi.Float64PtrOutput)
}

func (o TemplateGridLayoutElementOutput) RowSpan() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateGridLayoutElement) float64 { return v.RowSpan }).(pulumi.Float64Output)
}

type TemplateGridLayoutElementArrayOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutElementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateGridLayoutElement)(nil)).Elem()
}

func (o TemplateGridLayoutElementArrayOutput) ToTemplateGridLayoutElementArrayOutput() TemplateGridLayoutElementArrayOutput {
	return o
}

func (o TemplateGridLayoutElementArrayOutput) ToTemplateGridLayoutElementArrayOutputWithContext(ctx context.Context) TemplateGridLayoutElementArrayOutput {
	return o
}

func (o TemplateGridLayoutElementArrayOutput) Index(i pulumi.IntInput) TemplateGridLayoutElementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateGridLayoutElement {
		return vs[0].([]TemplateGridLayoutElement)[vs[1].(int)]
	}).(TemplateGridLayoutElementOutput)
}

type TemplateGridLayoutScreenCanvasSizeOptions struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth *string              `pulumi:"optimizedViewPortWidth"`
	ResizeOption           TemplateResizeOption `pulumi:"resizeOption"`
}

// TemplateGridLayoutScreenCanvasSizeOptionsInput is an input type that accepts TemplateGridLayoutScreenCanvasSizeOptionsArgs and TemplateGridLayoutScreenCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateGridLayoutScreenCanvasSizeOptionsInput` via:
//
//	TemplateGridLayoutScreenCanvasSizeOptionsArgs{...}
type TemplateGridLayoutScreenCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateGridLayoutScreenCanvasSizeOptionsOutput() TemplateGridLayoutScreenCanvasSizeOptionsOutput
	ToTemplateGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Context) TemplateGridLayoutScreenCanvasSizeOptionsOutput
}

type TemplateGridLayoutScreenCanvasSizeOptionsArgs struct {
	// String based length that is composed of value and unit in px
	OptimizedViewPortWidth pulumi.StringPtrInput     `pulumi:"optimizedViewPortWidth"`
	ResizeOption           TemplateResizeOptionInput `pulumi:"resizeOption"`
}

func (TemplateGridLayoutScreenCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateGridLayoutScreenCanvasSizeOptionsArgs) ToTemplateGridLayoutScreenCanvasSizeOptionsOutput() TemplateGridLayoutScreenCanvasSizeOptionsOutput {
	return i.ToTemplateGridLayoutScreenCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateGridLayoutScreenCanvasSizeOptionsArgs) ToTemplateGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutScreenCanvasSizeOptionsOutput)
}

func (i TemplateGridLayoutScreenCanvasSizeOptionsArgs) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutput() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateGridLayoutScreenCanvasSizeOptionsArgs) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutScreenCanvasSizeOptionsOutput).ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateGridLayoutScreenCanvasSizeOptionsPtrInput is an input type that accepts TemplateGridLayoutScreenCanvasSizeOptionsArgs, TemplateGridLayoutScreenCanvasSizeOptionsPtr and TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateGridLayoutScreenCanvasSizeOptionsPtrInput` via:
//
//	        TemplateGridLayoutScreenCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateGridLayoutScreenCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutput() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput
	ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput
}

type templateGridLayoutScreenCanvasSizeOptionsPtrType TemplateGridLayoutScreenCanvasSizeOptionsArgs

func TemplateGridLayoutScreenCanvasSizeOptionsPtr(v *TemplateGridLayoutScreenCanvasSizeOptionsArgs) TemplateGridLayoutScreenCanvasSizeOptionsPtrInput {
	return (*templateGridLayoutScreenCanvasSizeOptionsPtrType)(v)
}

func (*templateGridLayoutScreenCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (i *templateGridLayoutScreenCanvasSizeOptionsPtrType) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutput() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return i.ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateGridLayoutScreenCanvasSizeOptionsPtrType) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

type TemplateGridLayoutScreenCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutScreenCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsOutput() TemplateGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsOutput {
	return o
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutput() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGridLayoutScreenCanvasSizeOptions) *TemplateGridLayoutScreenCanvasSizeOptions {
		return &v
	}).(TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGridLayoutScreenCanvasSizeOptions) *string { return v.OptimizedViewPortWidth }).(pulumi.StringPtrOutput)
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsOutput) ResizeOption() TemplateResizeOptionOutput {
	return o.ApplyT(func(v TemplateGridLayoutScreenCanvasSizeOptions) TemplateResizeOption { return v.ResizeOption }).(TemplateResizeOptionOutput)
}

type TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGridLayoutScreenCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutput() TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) ToTemplateGridLayoutScreenCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) Elem() TemplateGridLayoutScreenCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateGridLayoutScreenCanvasSizeOptions) TemplateGridLayoutScreenCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateGridLayoutScreenCanvasSizeOptions
		return ret
	}).(TemplateGridLayoutScreenCanvasSizeOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) OptimizedViewPortWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGridLayoutScreenCanvasSizeOptions) *string {
		if v == nil {
			return nil
		}
		return v.OptimizedViewPortWidth
	}).(pulumi.StringPtrOutput)
}

func (o TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput) ResizeOption() TemplateResizeOptionPtrOutput {
	return o.ApplyT(func(v *TemplateGridLayoutScreenCanvasSizeOptions) *TemplateResizeOption {
		if v == nil {
			return nil
		}
		return &v.ResizeOption
	}).(TemplateResizeOptionPtrOutput)
}

type TemplateGrowthRateComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
	PeriodSize    *float64                `pulumi:"periodSize"`
	Time          *TemplateDimensionField `pulumi:"time"`
	Value         *TemplateMeasureField   `pulumi:"value"`
}

// TemplateGrowthRateComputationInput is an input type that accepts TemplateGrowthRateComputationArgs and TemplateGrowthRateComputationOutput values.
// You can construct a concrete instance of `TemplateGrowthRateComputationInput` via:
//
//	TemplateGrowthRateComputationArgs{...}
type TemplateGrowthRateComputationInput interface {
	pulumi.Input

	ToTemplateGrowthRateComputationOutput() TemplateGrowthRateComputationOutput
	ToTemplateGrowthRateComputationOutputWithContext(context.Context) TemplateGrowthRateComputationOutput
}

type TemplateGrowthRateComputationArgs struct {
	ComputationId pulumi.StringInput             `pulumi:"computationId"`
	Name          pulumi.StringPtrInput          `pulumi:"name"`
	PeriodSize    pulumi.Float64PtrInput         `pulumi:"periodSize"`
	Time          TemplateDimensionFieldPtrInput `pulumi:"time"`
	Value         TemplateMeasureFieldPtrInput   `pulumi:"value"`
}

func (TemplateGrowthRateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGrowthRateComputation)(nil)).Elem()
}

func (i TemplateGrowthRateComputationArgs) ToTemplateGrowthRateComputationOutput() TemplateGrowthRateComputationOutput {
	return i.ToTemplateGrowthRateComputationOutputWithContext(context.Background())
}

func (i TemplateGrowthRateComputationArgs) ToTemplateGrowthRateComputationOutputWithContext(ctx context.Context) TemplateGrowthRateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGrowthRateComputationOutput)
}

func (i TemplateGrowthRateComputationArgs) ToTemplateGrowthRateComputationPtrOutput() TemplateGrowthRateComputationPtrOutput {
	return i.ToTemplateGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i TemplateGrowthRateComputationArgs) ToTemplateGrowthRateComputationPtrOutputWithContext(ctx context.Context) TemplateGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGrowthRateComputationOutput).ToTemplateGrowthRateComputationPtrOutputWithContext(ctx)
}

// TemplateGrowthRateComputationPtrInput is an input type that accepts TemplateGrowthRateComputationArgs, TemplateGrowthRateComputationPtr and TemplateGrowthRateComputationPtrOutput values.
// You can construct a concrete instance of `TemplateGrowthRateComputationPtrInput` via:
//
//	        TemplateGrowthRateComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateGrowthRateComputationPtrInput interface {
	pulumi.Input

	ToTemplateGrowthRateComputationPtrOutput() TemplateGrowthRateComputationPtrOutput
	ToTemplateGrowthRateComputationPtrOutputWithContext(context.Context) TemplateGrowthRateComputationPtrOutput
}

type templateGrowthRateComputationPtrType TemplateGrowthRateComputationArgs

func TemplateGrowthRateComputationPtr(v *TemplateGrowthRateComputationArgs) TemplateGrowthRateComputationPtrInput {
	return (*templateGrowthRateComputationPtrType)(v)
}

func (*templateGrowthRateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGrowthRateComputation)(nil)).Elem()
}

func (i *templateGrowthRateComputationPtrType) ToTemplateGrowthRateComputationPtrOutput() TemplateGrowthRateComputationPtrOutput {
	return i.ToTemplateGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (i *templateGrowthRateComputationPtrType) ToTemplateGrowthRateComputationPtrOutputWithContext(ctx context.Context) TemplateGrowthRateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGrowthRateComputationPtrOutput)
}

type TemplateGrowthRateComputationOutput struct{ *pulumi.OutputState }

func (TemplateGrowthRateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGrowthRateComputation)(nil)).Elem()
}

func (o TemplateGrowthRateComputationOutput) ToTemplateGrowthRateComputationOutput() TemplateGrowthRateComputationOutput {
	return o
}

func (o TemplateGrowthRateComputationOutput) ToTemplateGrowthRateComputationOutputWithContext(ctx context.Context) TemplateGrowthRateComputationOutput {
	return o
}

func (o TemplateGrowthRateComputationOutput) ToTemplateGrowthRateComputationPtrOutput() TemplateGrowthRateComputationPtrOutput {
	return o.ToTemplateGrowthRateComputationPtrOutputWithContext(context.Background())
}

func (o TemplateGrowthRateComputationOutput) ToTemplateGrowthRateComputationPtrOutputWithContext(ctx context.Context) TemplateGrowthRateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGrowthRateComputation) *TemplateGrowthRateComputation {
		return &v
	}).(TemplateGrowthRateComputationPtrOutput)
}

func (o TemplateGrowthRateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateGrowthRateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateGrowthRateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGrowthRateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateGrowthRateComputationOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateGrowthRateComputation) *float64 { return v.PeriodSize }).(pulumi.Float64PtrOutput)
}

func (o TemplateGrowthRateComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateGrowthRateComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateGrowthRateComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateGrowthRateComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateGrowthRateComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateGrowthRateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGrowthRateComputation)(nil)).Elem()
}

func (o TemplateGrowthRateComputationPtrOutput) ToTemplateGrowthRateComputationPtrOutput() TemplateGrowthRateComputationPtrOutput {
	return o
}

func (o TemplateGrowthRateComputationPtrOutput) ToTemplateGrowthRateComputationPtrOutputWithContext(ctx context.Context) TemplateGrowthRateComputationPtrOutput {
	return o
}

func (o TemplateGrowthRateComputationPtrOutput) Elem() TemplateGrowthRateComputationOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) TemplateGrowthRateComputation {
		if v != nil {
			return *v
		}
		var ret TemplateGrowthRateComputation
		return ret
	}).(TemplateGrowthRateComputationOutput)
}

func (o TemplateGrowthRateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateGrowthRateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateGrowthRateComputationPtrOutput) PeriodSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodSize
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateGrowthRateComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateGrowthRateComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateGrowthRateComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateHeaderFooterSectionConfiguration struct {
	Layout    TemplateSectionLayoutConfiguration `pulumi:"layout"`
	SectionId string                             `pulumi:"sectionId"`
	Style     *TemplateSectionStyle              `pulumi:"style"`
}

// TemplateHeaderFooterSectionConfigurationInput is an input type that accepts TemplateHeaderFooterSectionConfigurationArgs and TemplateHeaderFooterSectionConfigurationOutput values.
// You can construct a concrete instance of `TemplateHeaderFooterSectionConfigurationInput` via:
//
//	TemplateHeaderFooterSectionConfigurationArgs{...}
type TemplateHeaderFooterSectionConfigurationInput interface {
	pulumi.Input

	ToTemplateHeaderFooterSectionConfigurationOutput() TemplateHeaderFooterSectionConfigurationOutput
	ToTemplateHeaderFooterSectionConfigurationOutputWithContext(context.Context) TemplateHeaderFooterSectionConfigurationOutput
}

type TemplateHeaderFooterSectionConfigurationArgs struct {
	Layout    TemplateSectionLayoutConfigurationInput `pulumi:"layout"`
	SectionId pulumi.StringInput                      `pulumi:"sectionId"`
	Style     TemplateSectionStylePtrInput            `pulumi:"style"`
}

func (TemplateHeaderFooterSectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i TemplateHeaderFooterSectionConfigurationArgs) ToTemplateHeaderFooterSectionConfigurationOutput() TemplateHeaderFooterSectionConfigurationOutput {
	return i.ToTemplateHeaderFooterSectionConfigurationOutputWithContext(context.Background())
}

func (i TemplateHeaderFooterSectionConfigurationArgs) ToTemplateHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) TemplateHeaderFooterSectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeaderFooterSectionConfigurationOutput)
}

// TemplateHeaderFooterSectionConfigurationArrayInput is an input type that accepts TemplateHeaderFooterSectionConfigurationArray and TemplateHeaderFooterSectionConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateHeaderFooterSectionConfigurationArrayInput` via:
//
//	TemplateHeaderFooterSectionConfigurationArray{ TemplateHeaderFooterSectionConfigurationArgs{...} }
type TemplateHeaderFooterSectionConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateHeaderFooterSectionConfigurationArrayOutput() TemplateHeaderFooterSectionConfigurationArrayOutput
	ToTemplateHeaderFooterSectionConfigurationArrayOutputWithContext(context.Context) TemplateHeaderFooterSectionConfigurationArrayOutput
}

type TemplateHeaderFooterSectionConfigurationArray []TemplateHeaderFooterSectionConfigurationInput

func (TemplateHeaderFooterSectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (i TemplateHeaderFooterSectionConfigurationArray) ToTemplateHeaderFooterSectionConfigurationArrayOutput() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return i.ToTemplateHeaderFooterSectionConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateHeaderFooterSectionConfigurationArray) ToTemplateHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateHeaderFooterSectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeaderFooterSectionConfigurationArrayOutput)
}

type TemplateHeaderFooterSectionConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateHeaderFooterSectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o TemplateHeaderFooterSectionConfigurationOutput) ToTemplateHeaderFooterSectionConfigurationOutput() TemplateHeaderFooterSectionConfigurationOutput {
	return o
}

func (o TemplateHeaderFooterSectionConfigurationOutput) ToTemplateHeaderFooterSectionConfigurationOutputWithContext(ctx context.Context) TemplateHeaderFooterSectionConfigurationOutput {
	return o
}

func (o TemplateHeaderFooterSectionConfigurationOutput) Layout() TemplateSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v TemplateHeaderFooterSectionConfiguration) TemplateSectionLayoutConfiguration { return v.Layout }).(TemplateSectionLayoutConfigurationOutput)
}

func (o TemplateHeaderFooterSectionConfigurationOutput) SectionId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateHeaderFooterSectionConfiguration) string { return v.SectionId }).(pulumi.StringOutput)
}

func (o TemplateHeaderFooterSectionConfigurationOutput) Style() TemplateSectionStylePtrOutput {
	return o.ApplyT(func(v TemplateHeaderFooterSectionConfiguration) *TemplateSectionStyle { return v.Style }).(TemplateSectionStylePtrOutput)
}

type TemplateHeaderFooterSectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateHeaderFooterSectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateHeaderFooterSectionConfiguration)(nil)).Elem()
}

func (o TemplateHeaderFooterSectionConfigurationArrayOutput) ToTemplateHeaderFooterSectionConfigurationArrayOutput() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o TemplateHeaderFooterSectionConfigurationArrayOutput) ToTemplateHeaderFooterSectionConfigurationArrayOutputWithContext(ctx context.Context) TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o
}

func (o TemplateHeaderFooterSectionConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateHeaderFooterSectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateHeaderFooterSectionConfiguration {
		return vs[0].([]TemplateHeaderFooterSectionConfiguration)[vs[1].(int)]
	}).(TemplateHeaderFooterSectionConfigurationOutput)
}

type TemplateHeatMapAggregatedFieldWells struct {
	Columns []TemplateDimensionField `pulumi:"columns"`
	Rows    []TemplateDimensionField `pulumi:"rows"`
	Values  []TemplateMeasureField   `pulumi:"values"`
}

// TemplateHeatMapAggregatedFieldWellsInput is an input type that accepts TemplateHeatMapAggregatedFieldWellsArgs and TemplateHeatMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateHeatMapAggregatedFieldWellsInput` via:
//
//	TemplateHeatMapAggregatedFieldWellsArgs{...}
type TemplateHeatMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateHeatMapAggregatedFieldWellsOutput() TemplateHeatMapAggregatedFieldWellsOutput
	ToTemplateHeatMapAggregatedFieldWellsOutputWithContext(context.Context) TemplateHeatMapAggregatedFieldWellsOutput
}

type TemplateHeatMapAggregatedFieldWellsArgs struct {
	Columns TemplateDimensionFieldArrayInput `pulumi:"columns"`
	Rows    TemplateDimensionFieldArrayInput `pulumi:"rows"`
	Values  TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateHeatMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateHeatMapAggregatedFieldWellsArgs) ToTemplateHeatMapAggregatedFieldWellsOutput() TemplateHeatMapAggregatedFieldWellsOutput {
	return i.ToTemplateHeatMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateHeatMapAggregatedFieldWellsArgs) ToTemplateHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapAggregatedFieldWellsOutput)
}

func (i TemplateHeatMapAggregatedFieldWellsArgs) ToTemplateHeatMapAggregatedFieldWellsPtrOutput() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateHeatMapAggregatedFieldWellsArgs) ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapAggregatedFieldWellsOutput).ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateHeatMapAggregatedFieldWellsPtrInput is an input type that accepts TemplateHeatMapAggregatedFieldWellsArgs, TemplateHeatMapAggregatedFieldWellsPtr and TemplateHeatMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateHeatMapAggregatedFieldWellsPtrInput` via:
//
//	        TemplateHeatMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateHeatMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateHeatMapAggregatedFieldWellsPtrOutput() TemplateHeatMapAggregatedFieldWellsPtrOutput
	ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateHeatMapAggregatedFieldWellsPtrOutput
}

type templateHeatMapAggregatedFieldWellsPtrType TemplateHeatMapAggregatedFieldWellsArgs

func TemplateHeatMapAggregatedFieldWellsPtr(v *TemplateHeatMapAggregatedFieldWellsArgs) TemplateHeatMapAggregatedFieldWellsPtrInput {
	return (*templateHeatMapAggregatedFieldWellsPtrType)(v)
}

func (*templateHeatMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (i *templateHeatMapAggregatedFieldWellsPtrType) ToTemplateHeatMapAggregatedFieldWellsPtrOutput() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateHeatMapAggregatedFieldWellsPtrType) ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapAggregatedFieldWellsPtrOutput)
}

type TemplateHeatMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) ToTemplateHeatMapAggregatedFieldWellsOutput() TemplateHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) ToTemplateHeatMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) ToTemplateHeatMapAggregatedFieldWellsPtrOutput() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o.ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHeatMapAggregatedFieldWells) *TemplateHeatMapAggregatedFieldWells {
		return &v
	}).(TemplateHeatMapAggregatedFieldWellsPtrOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) Columns() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapAggregatedFieldWells) []TemplateDimensionField { return v.Columns }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) Rows() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapAggregatedFieldWells) []TemplateDimensionField { return v.Rows }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateHeatMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) ToTemplateHeatMapAggregatedFieldWellsPtrOutput() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) ToTemplateHeatMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) Elem() TemplateHeatMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateHeatMapAggregatedFieldWells) TemplateHeatMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateHeatMapAggregatedFieldWells
		return ret
	}).(TemplateHeatMapAggregatedFieldWellsOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) Columns() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) Rows() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateHeatMapAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateHeatMapConfiguration struct {
	ColorScale         *TemplateColorScale               `pulumi:"colorScale"`
	ColumnLabelOptions *TemplateChartAxisLabelOptions    `pulumi:"columnLabelOptions"`
	DataLabels         *TemplateDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells         *TemplateHeatMapFieldWells        `pulumi:"fieldWells"`
	Legend             *TemplateLegendOptions            `pulumi:"legend"`
	RowLabelOptions    *TemplateChartAxisLabelOptions    `pulumi:"rowLabelOptions"`
	SortConfiguration  *TemplateHeatMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip            *TemplateTooltipOptions           `pulumi:"tooltip"`
}

// TemplateHeatMapConfigurationInput is an input type that accepts TemplateHeatMapConfigurationArgs and TemplateHeatMapConfigurationOutput values.
// You can construct a concrete instance of `TemplateHeatMapConfigurationInput` via:
//
//	TemplateHeatMapConfigurationArgs{...}
type TemplateHeatMapConfigurationInput interface {
	pulumi.Input

	ToTemplateHeatMapConfigurationOutput() TemplateHeatMapConfigurationOutput
	ToTemplateHeatMapConfigurationOutputWithContext(context.Context) TemplateHeatMapConfigurationOutput
}

type TemplateHeatMapConfigurationArgs struct {
	ColorScale         TemplateColorScalePtrInput               `pulumi:"colorScale"`
	ColumnLabelOptions TemplateChartAxisLabelOptionsPtrInput    `pulumi:"columnLabelOptions"`
	DataLabels         TemplateDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells         TemplateHeatMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend             TemplateLegendOptionsPtrInput            `pulumi:"legend"`
	RowLabelOptions    TemplateChartAxisLabelOptionsPtrInput    `pulumi:"rowLabelOptions"`
	SortConfiguration  TemplateHeatMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip            TemplateTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (TemplateHeatMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapConfiguration)(nil)).Elem()
}

func (i TemplateHeatMapConfigurationArgs) ToTemplateHeatMapConfigurationOutput() TemplateHeatMapConfigurationOutput {
	return i.ToTemplateHeatMapConfigurationOutputWithContext(context.Background())
}

func (i TemplateHeatMapConfigurationArgs) ToTemplateHeatMapConfigurationOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapConfigurationOutput)
}

func (i TemplateHeatMapConfigurationArgs) ToTemplateHeatMapConfigurationPtrOutput() TemplateHeatMapConfigurationPtrOutput {
	return i.ToTemplateHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateHeatMapConfigurationArgs) ToTemplateHeatMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapConfigurationOutput).ToTemplateHeatMapConfigurationPtrOutputWithContext(ctx)
}

// TemplateHeatMapConfigurationPtrInput is an input type that accepts TemplateHeatMapConfigurationArgs, TemplateHeatMapConfigurationPtr and TemplateHeatMapConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateHeatMapConfigurationPtrInput` via:
//
//	        TemplateHeatMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateHeatMapConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateHeatMapConfigurationPtrOutput() TemplateHeatMapConfigurationPtrOutput
	ToTemplateHeatMapConfigurationPtrOutputWithContext(context.Context) TemplateHeatMapConfigurationPtrOutput
}

type templateHeatMapConfigurationPtrType TemplateHeatMapConfigurationArgs

func TemplateHeatMapConfigurationPtr(v *TemplateHeatMapConfigurationArgs) TemplateHeatMapConfigurationPtrInput {
	return (*templateHeatMapConfigurationPtrType)(v)
}

func (*templateHeatMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapConfiguration)(nil)).Elem()
}

func (i *templateHeatMapConfigurationPtrType) ToTemplateHeatMapConfigurationPtrOutput() TemplateHeatMapConfigurationPtrOutput {
	return i.ToTemplateHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateHeatMapConfigurationPtrType) ToTemplateHeatMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapConfigurationPtrOutput)
}

type TemplateHeatMapConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapConfiguration)(nil)).Elem()
}

func (o TemplateHeatMapConfigurationOutput) ToTemplateHeatMapConfigurationOutput() TemplateHeatMapConfigurationOutput {
	return o
}

func (o TemplateHeatMapConfigurationOutput) ToTemplateHeatMapConfigurationOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationOutput {
	return o
}

func (o TemplateHeatMapConfigurationOutput) ToTemplateHeatMapConfigurationPtrOutput() TemplateHeatMapConfigurationPtrOutput {
	return o.ToTemplateHeatMapConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateHeatMapConfigurationOutput) ToTemplateHeatMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHeatMapConfiguration) *TemplateHeatMapConfiguration {
		return &v
	}).(TemplateHeatMapConfigurationPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) ColorScale() TemplateColorScalePtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateColorScale { return v.ColorScale }).(TemplateColorScalePtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) ColumnLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateChartAxisLabelOptions { return v.ColumnLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) FieldWells() TemplateHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateHeatMapFieldWells { return v.FieldWells }).(TemplateHeatMapFieldWellsPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) RowLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateChartAxisLabelOptions { return v.RowLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) SortConfiguration() TemplateHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateHeatMapSortConfiguration { return v.SortConfiguration }).(TemplateHeatMapSortConfigurationPtrOutput)
}

func (o TemplateHeatMapConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

type TemplateHeatMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapConfiguration)(nil)).Elem()
}

func (o TemplateHeatMapConfigurationPtrOutput) ToTemplateHeatMapConfigurationPtrOutput() TemplateHeatMapConfigurationPtrOutput {
	return o
}

func (o TemplateHeatMapConfigurationPtrOutput) ToTemplateHeatMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapConfigurationPtrOutput {
	return o
}

func (o TemplateHeatMapConfigurationPtrOutput) Elem() TemplateHeatMapConfigurationOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) TemplateHeatMapConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateHeatMapConfiguration
		return ret
	}).(TemplateHeatMapConfigurationOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) ColorScale() TemplateColorScalePtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(TemplateColorScalePtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) ColumnLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColumnLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) FieldWells() TemplateHeatMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateHeatMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateHeatMapFieldWellsPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) RowLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.RowLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) SortConfiguration() TemplateHeatMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateHeatMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateHeatMapSortConfigurationPtrOutput)
}

func (o TemplateHeatMapConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

type TemplateHeatMapFieldWells struct {
	HeatMapAggregatedFieldWells *TemplateHeatMapAggregatedFieldWells `pulumi:"heatMapAggregatedFieldWells"`
}

// TemplateHeatMapFieldWellsInput is an input type that accepts TemplateHeatMapFieldWellsArgs and TemplateHeatMapFieldWellsOutput values.
// You can construct a concrete instance of `TemplateHeatMapFieldWellsInput` via:
//
//	TemplateHeatMapFieldWellsArgs{...}
type TemplateHeatMapFieldWellsInput interface {
	pulumi.Input

	ToTemplateHeatMapFieldWellsOutput() TemplateHeatMapFieldWellsOutput
	ToTemplateHeatMapFieldWellsOutputWithContext(context.Context) TemplateHeatMapFieldWellsOutput
}

type TemplateHeatMapFieldWellsArgs struct {
	HeatMapAggregatedFieldWells TemplateHeatMapAggregatedFieldWellsPtrInput `pulumi:"heatMapAggregatedFieldWells"`
}

func (TemplateHeatMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapFieldWells)(nil)).Elem()
}

func (i TemplateHeatMapFieldWellsArgs) ToTemplateHeatMapFieldWellsOutput() TemplateHeatMapFieldWellsOutput {
	return i.ToTemplateHeatMapFieldWellsOutputWithContext(context.Background())
}

func (i TemplateHeatMapFieldWellsArgs) ToTemplateHeatMapFieldWellsOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapFieldWellsOutput)
}

func (i TemplateHeatMapFieldWellsArgs) ToTemplateHeatMapFieldWellsPtrOutput() TemplateHeatMapFieldWellsPtrOutput {
	return i.ToTemplateHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateHeatMapFieldWellsArgs) ToTemplateHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapFieldWellsOutput).ToTemplateHeatMapFieldWellsPtrOutputWithContext(ctx)
}

// TemplateHeatMapFieldWellsPtrInput is an input type that accepts TemplateHeatMapFieldWellsArgs, TemplateHeatMapFieldWellsPtr and TemplateHeatMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateHeatMapFieldWellsPtrInput` via:
//
//	        TemplateHeatMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateHeatMapFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateHeatMapFieldWellsPtrOutput() TemplateHeatMapFieldWellsPtrOutput
	ToTemplateHeatMapFieldWellsPtrOutputWithContext(context.Context) TemplateHeatMapFieldWellsPtrOutput
}

type templateHeatMapFieldWellsPtrType TemplateHeatMapFieldWellsArgs

func TemplateHeatMapFieldWellsPtr(v *TemplateHeatMapFieldWellsArgs) TemplateHeatMapFieldWellsPtrInput {
	return (*templateHeatMapFieldWellsPtrType)(v)
}

func (*templateHeatMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapFieldWells)(nil)).Elem()
}

func (i *templateHeatMapFieldWellsPtrType) ToTemplateHeatMapFieldWellsPtrOutput() TemplateHeatMapFieldWellsPtrOutput {
	return i.ToTemplateHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateHeatMapFieldWellsPtrType) ToTemplateHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapFieldWellsPtrOutput)
}

type TemplateHeatMapFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapFieldWells)(nil)).Elem()
}

func (o TemplateHeatMapFieldWellsOutput) ToTemplateHeatMapFieldWellsOutput() TemplateHeatMapFieldWellsOutput {
	return o
}

func (o TemplateHeatMapFieldWellsOutput) ToTemplateHeatMapFieldWellsOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsOutput {
	return o
}

func (o TemplateHeatMapFieldWellsOutput) ToTemplateHeatMapFieldWellsPtrOutput() TemplateHeatMapFieldWellsPtrOutput {
	return o.ToTemplateHeatMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateHeatMapFieldWellsOutput) ToTemplateHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHeatMapFieldWells) *TemplateHeatMapFieldWells {
		return &v
	}).(TemplateHeatMapFieldWellsPtrOutput)
}

func (o TemplateHeatMapFieldWellsOutput) HeatMapAggregatedFieldWells() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapFieldWells) *TemplateHeatMapAggregatedFieldWells {
		return v.HeatMapAggregatedFieldWells
	}).(TemplateHeatMapAggregatedFieldWellsPtrOutput)
}

type TemplateHeatMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapFieldWells)(nil)).Elem()
}

func (o TemplateHeatMapFieldWellsPtrOutput) ToTemplateHeatMapFieldWellsPtrOutput() TemplateHeatMapFieldWellsPtrOutput {
	return o
}

func (o TemplateHeatMapFieldWellsPtrOutput) ToTemplateHeatMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHeatMapFieldWellsPtrOutput {
	return o
}

func (o TemplateHeatMapFieldWellsPtrOutput) Elem() TemplateHeatMapFieldWellsOutput {
	return o.ApplyT(func(v *TemplateHeatMapFieldWells) TemplateHeatMapFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateHeatMapFieldWells
		return ret
	}).(TemplateHeatMapFieldWellsOutput)
}

func (o TemplateHeatMapFieldWellsPtrOutput) HeatMapAggregatedFieldWells() TemplateHeatMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapFieldWells) *TemplateHeatMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HeatMapAggregatedFieldWells
	}).(TemplateHeatMapAggregatedFieldWellsPtrOutput)
}

type TemplateHeatMapSortConfiguration struct {
	HeatMapColumnItemsLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    []TemplateFieldSortOptions       `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    *TemplateItemsLimitConfiguration `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       []TemplateFieldSortOptions       `pulumi:"heatMapRowSort"`
}

// TemplateHeatMapSortConfigurationInput is an input type that accepts TemplateHeatMapSortConfigurationArgs and TemplateHeatMapSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateHeatMapSortConfigurationInput` via:
//
//	TemplateHeatMapSortConfigurationArgs{...}
type TemplateHeatMapSortConfigurationInput interface {
	pulumi.Input

	ToTemplateHeatMapSortConfigurationOutput() TemplateHeatMapSortConfigurationOutput
	ToTemplateHeatMapSortConfigurationOutputWithContext(context.Context) TemplateHeatMapSortConfigurationOutput
}

type TemplateHeatMapSortConfigurationArgs struct {
	HeatMapColumnItemsLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"heatMapColumnItemsLimitConfiguration"`
	HeatMapColumnSort                    TemplateFieldSortOptionsArrayInput      `pulumi:"heatMapColumnSort"`
	HeatMapRowItemsLimitConfiguration    TemplateItemsLimitConfigurationPtrInput `pulumi:"heatMapRowItemsLimitConfiguration"`
	HeatMapRowSort                       TemplateFieldSortOptionsArrayInput      `pulumi:"heatMapRowSort"`
}

func (TemplateHeatMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapSortConfiguration)(nil)).Elem()
}

func (i TemplateHeatMapSortConfigurationArgs) ToTemplateHeatMapSortConfigurationOutput() TemplateHeatMapSortConfigurationOutput {
	return i.ToTemplateHeatMapSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateHeatMapSortConfigurationArgs) ToTemplateHeatMapSortConfigurationOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapSortConfigurationOutput)
}

func (i TemplateHeatMapSortConfigurationArgs) ToTemplateHeatMapSortConfigurationPtrOutput() TemplateHeatMapSortConfigurationPtrOutput {
	return i.ToTemplateHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateHeatMapSortConfigurationArgs) ToTemplateHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapSortConfigurationOutput).ToTemplateHeatMapSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateHeatMapSortConfigurationPtrInput is an input type that accepts TemplateHeatMapSortConfigurationArgs, TemplateHeatMapSortConfigurationPtr and TemplateHeatMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateHeatMapSortConfigurationPtrInput` via:
//
//	        TemplateHeatMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateHeatMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateHeatMapSortConfigurationPtrOutput() TemplateHeatMapSortConfigurationPtrOutput
	ToTemplateHeatMapSortConfigurationPtrOutputWithContext(context.Context) TemplateHeatMapSortConfigurationPtrOutput
}

type templateHeatMapSortConfigurationPtrType TemplateHeatMapSortConfigurationArgs

func TemplateHeatMapSortConfigurationPtr(v *TemplateHeatMapSortConfigurationArgs) TemplateHeatMapSortConfigurationPtrInput {
	return (*templateHeatMapSortConfigurationPtrType)(v)
}

func (*templateHeatMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapSortConfiguration)(nil)).Elem()
}

func (i *templateHeatMapSortConfigurationPtrType) ToTemplateHeatMapSortConfigurationPtrOutput() TemplateHeatMapSortConfigurationPtrOutput {
	return i.ToTemplateHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateHeatMapSortConfigurationPtrType) ToTemplateHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapSortConfigurationPtrOutput)
}

type TemplateHeatMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapSortConfiguration)(nil)).Elem()
}

func (o TemplateHeatMapSortConfigurationOutput) ToTemplateHeatMapSortConfigurationOutput() TemplateHeatMapSortConfigurationOutput {
	return o
}

func (o TemplateHeatMapSortConfigurationOutput) ToTemplateHeatMapSortConfigurationOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationOutput {
	return o
}

func (o TemplateHeatMapSortConfigurationOutput) ToTemplateHeatMapSortConfigurationPtrOutput() TemplateHeatMapSortConfigurationPtrOutput {
	return o.ToTemplateHeatMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateHeatMapSortConfigurationOutput) ToTemplateHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHeatMapSortConfiguration) *TemplateHeatMapSortConfiguration {
		return &v
	}).(TemplateHeatMapSortConfigurationPtrOutput)
}

func (o TemplateHeatMapSortConfigurationOutput) HeatMapColumnItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.HeatMapColumnItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateHeatMapSortConfigurationOutput) HeatMapColumnSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapSortConfiguration) []TemplateFieldSortOptions { return v.HeatMapColumnSort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateHeatMapSortConfigurationOutput) HeatMapRowItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.HeatMapRowItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateHeatMapSortConfigurationOutput) HeatMapRowSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapSortConfiguration) []TemplateFieldSortOptions { return v.HeatMapRowSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateHeatMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapSortConfiguration)(nil)).Elem()
}

func (o TemplateHeatMapSortConfigurationPtrOutput) ToTemplateHeatMapSortConfigurationPtrOutput() TemplateHeatMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateHeatMapSortConfigurationPtrOutput) ToTemplateHeatMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateHeatMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateHeatMapSortConfigurationPtrOutput) Elem() TemplateHeatMapSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateHeatMapSortConfiguration) TemplateHeatMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateHeatMapSortConfiguration
		return ret
	}).(TemplateHeatMapSortConfigurationOutput)
}

func (o TemplateHeatMapSortConfigurationPtrOutput) HeatMapColumnItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateHeatMapSortConfigurationPtrOutput) HeatMapColumnSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapColumnSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateHeatMapSortConfigurationPtrOutput) HeatMapRowItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.HeatMapRowItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateHeatMapSortConfigurationPtrOutput) HeatMapRowSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.HeatMapRowSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateHeatMapVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateHeatMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateHeatMapVisualInput is an input type that accepts TemplateHeatMapVisualArgs and TemplateHeatMapVisualOutput values.
// You can construct a concrete instance of `TemplateHeatMapVisualInput` via:
//
//	TemplateHeatMapVisualArgs{...}
type TemplateHeatMapVisualInput interface {
	pulumi.Input

	ToTemplateHeatMapVisualOutput() TemplateHeatMapVisualOutput
	ToTemplateHeatMapVisualOutputWithContext(context.Context) TemplateHeatMapVisualOutput
}

type TemplateHeatMapVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateHeatMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateHeatMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapVisual)(nil)).Elem()
}

func (i TemplateHeatMapVisualArgs) ToTemplateHeatMapVisualOutput() TemplateHeatMapVisualOutput {
	return i.ToTemplateHeatMapVisualOutputWithContext(context.Background())
}

func (i TemplateHeatMapVisualArgs) ToTemplateHeatMapVisualOutputWithContext(ctx context.Context) TemplateHeatMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapVisualOutput)
}

func (i TemplateHeatMapVisualArgs) ToTemplateHeatMapVisualPtrOutput() TemplateHeatMapVisualPtrOutput {
	return i.ToTemplateHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i TemplateHeatMapVisualArgs) ToTemplateHeatMapVisualPtrOutputWithContext(ctx context.Context) TemplateHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapVisualOutput).ToTemplateHeatMapVisualPtrOutputWithContext(ctx)
}

// TemplateHeatMapVisualPtrInput is an input type that accepts TemplateHeatMapVisualArgs, TemplateHeatMapVisualPtr and TemplateHeatMapVisualPtrOutput values.
// You can construct a concrete instance of `TemplateHeatMapVisualPtrInput` via:
//
//	        TemplateHeatMapVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateHeatMapVisualPtrInput interface {
	pulumi.Input

	ToTemplateHeatMapVisualPtrOutput() TemplateHeatMapVisualPtrOutput
	ToTemplateHeatMapVisualPtrOutputWithContext(context.Context) TemplateHeatMapVisualPtrOutput
}

type templateHeatMapVisualPtrType TemplateHeatMapVisualArgs

func TemplateHeatMapVisualPtr(v *TemplateHeatMapVisualArgs) TemplateHeatMapVisualPtrInput {
	return (*templateHeatMapVisualPtrType)(v)
}

func (*templateHeatMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapVisual)(nil)).Elem()
}

func (i *templateHeatMapVisualPtrType) ToTemplateHeatMapVisualPtrOutput() TemplateHeatMapVisualPtrOutput {
	return i.ToTemplateHeatMapVisualPtrOutputWithContext(context.Background())
}

func (i *templateHeatMapVisualPtrType) ToTemplateHeatMapVisualPtrOutputWithContext(ctx context.Context) TemplateHeatMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHeatMapVisualPtrOutput)
}

type TemplateHeatMapVisualOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHeatMapVisual)(nil)).Elem()
}

func (o TemplateHeatMapVisualOutput) ToTemplateHeatMapVisualOutput() TemplateHeatMapVisualOutput {
	return o
}

func (o TemplateHeatMapVisualOutput) ToTemplateHeatMapVisualOutputWithContext(ctx context.Context) TemplateHeatMapVisualOutput {
	return o
}

func (o TemplateHeatMapVisualOutput) ToTemplateHeatMapVisualPtrOutput() TemplateHeatMapVisualPtrOutput {
	return o.ToTemplateHeatMapVisualPtrOutputWithContext(context.Background())
}

func (o TemplateHeatMapVisualOutput) ToTemplateHeatMapVisualPtrOutputWithContext(ctx context.Context) TemplateHeatMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHeatMapVisual) *TemplateHeatMapVisual {
		return &v
	}).(TemplateHeatMapVisualPtrOutput)
}

func (o TemplateHeatMapVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateHeatMapVisualOutput) ChartConfiguration() TemplateHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) *TemplateHeatMapConfiguration { return v.ChartConfiguration }).(TemplateHeatMapConfigurationPtrOutput)
}

func (o TemplateHeatMapVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateHeatMapVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateHeatMapVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateHeatMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateHeatMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateHeatMapVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateHeatMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHeatMapVisual)(nil)).Elem()
}

func (o TemplateHeatMapVisualPtrOutput) ToTemplateHeatMapVisualPtrOutput() TemplateHeatMapVisualPtrOutput {
	return o
}

func (o TemplateHeatMapVisualPtrOutput) ToTemplateHeatMapVisualPtrOutputWithContext(ctx context.Context) TemplateHeatMapVisualPtrOutput {
	return o
}

func (o TemplateHeatMapVisualPtrOutput) Elem() TemplateHeatMapVisualOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) TemplateHeatMapVisual {
		if v != nil {
			return *v
		}
		var ret TemplateHeatMapVisual
		return ret
	}).(TemplateHeatMapVisualOutput)
}

func (o TemplateHeatMapVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateHeatMapVisualPtrOutput) ChartConfiguration() TemplateHeatMapConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) *TemplateHeatMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateHeatMapConfigurationPtrOutput)
}

func (o TemplateHeatMapVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateHeatMapVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateHeatMapVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateHeatMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateHeatMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateHistogramAggregatedFieldWells struct {
	Values []TemplateMeasureField `pulumi:"values"`
}

// TemplateHistogramAggregatedFieldWellsInput is an input type that accepts TemplateHistogramAggregatedFieldWellsArgs and TemplateHistogramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateHistogramAggregatedFieldWellsInput` via:
//
//	TemplateHistogramAggregatedFieldWellsArgs{...}
type TemplateHistogramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateHistogramAggregatedFieldWellsOutput() TemplateHistogramAggregatedFieldWellsOutput
	ToTemplateHistogramAggregatedFieldWellsOutputWithContext(context.Context) TemplateHistogramAggregatedFieldWellsOutput
}

type TemplateHistogramAggregatedFieldWellsArgs struct {
	Values TemplateMeasureFieldArrayInput `pulumi:"values"`
}

func (TemplateHistogramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateHistogramAggregatedFieldWellsArgs) ToTemplateHistogramAggregatedFieldWellsOutput() TemplateHistogramAggregatedFieldWellsOutput {
	return i.ToTemplateHistogramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateHistogramAggregatedFieldWellsArgs) ToTemplateHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramAggregatedFieldWellsOutput)
}

func (i TemplateHistogramAggregatedFieldWellsArgs) ToTemplateHistogramAggregatedFieldWellsPtrOutput() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return i.ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateHistogramAggregatedFieldWellsArgs) ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramAggregatedFieldWellsOutput).ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateHistogramAggregatedFieldWellsPtrInput is an input type that accepts TemplateHistogramAggregatedFieldWellsArgs, TemplateHistogramAggregatedFieldWellsPtr and TemplateHistogramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateHistogramAggregatedFieldWellsPtrInput` via:
//
//	        TemplateHistogramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateHistogramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateHistogramAggregatedFieldWellsPtrOutput() TemplateHistogramAggregatedFieldWellsPtrOutput
	ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateHistogramAggregatedFieldWellsPtrOutput
}

type templateHistogramAggregatedFieldWellsPtrType TemplateHistogramAggregatedFieldWellsArgs

func TemplateHistogramAggregatedFieldWellsPtr(v *TemplateHistogramAggregatedFieldWellsArgs) TemplateHistogramAggregatedFieldWellsPtrInput {
	return (*templateHistogramAggregatedFieldWellsPtrType)(v)
}

func (*templateHistogramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramAggregatedFieldWells)(nil)).Elem()
}

func (i *templateHistogramAggregatedFieldWellsPtrType) ToTemplateHistogramAggregatedFieldWellsPtrOutput() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return i.ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateHistogramAggregatedFieldWellsPtrType) ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramAggregatedFieldWellsPtrOutput)
}

type TemplateHistogramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateHistogramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateHistogramAggregatedFieldWellsOutput) ToTemplateHistogramAggregatedFieldWellsOutput() TemplateHistogramAggregatedFieldWellsOutput {
	return o
}

func (o TemplateHistogramAggregatedFieldWellsOutput) ToTemplateHistogramAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsOutput {
	return o
}

func (o TemplateHistogramAggregatedFieldWellsOutput) ToTemplateHistogramAggregatedFieldWellsPtrOutput() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o.ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramAggregatedFieldWellsOutput) ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramAggregatedFieldWells) *TemplateHistogramAggregatedFieldWells {
		return &v
	}).(TemplateHistogramAggregatedFieldWellsPtrOutput)
}

func (o TemplateHistogramAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateHistogramAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateHistogramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateHistogramAggregatedFieldWellsPtrOutput) ToTemplateHistogramAggregatedFieldWellsPtrOutput() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateHistogramAggregatedFieldWellsPtrOutput) ToTemplateHistogramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateHistogramAggregatedFieldWellsPtrOutput) Elem() TemplateHistogramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateHistogramAggregatedFieldWells) TemplateHistogramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramAggregatedFieldWells
		return ret
	}).(TemplateHistogramAggregatedFieldWellsOutput)
}

func (o TemplateHistogramAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateHistogramAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateHistogramBinOptions struct {
	BinCount        *TemplateBinCountOptions  `pulumi:"binCount"`
	BinWidth        *TemplateBinWidthOptions  `pulumi:"binWidth"`
	SelectedBinType *TemplateHistogramBinType `pulumi:"selectedBinType"`
	StartValue      *float64                  `pulumi:"startValue"`
}

// TemplateHistogramBinOptionsInput is an input type that accepts TemplateHistogramBinOptionsArgs and TemplateHistogramBinOptionsOutput values.
// You can construct a concrete instance of `TemplateHistogramBinOptionsInput` via:
//
//	TemplateHistogramBinOptionsArgs{...}
type TemplateHistogramBinOptionsInput interface {
	pulumi.Input

	ToTemplateHistogramBinOptionsOutput() TemplateHistogramBinOptionsOutput
	ToTemplateHistogramBinOptionsOutputWithContext(context.Context) TemplateHistogramBinOptionsOutput
}

type TemplateHistogramBinOptionsArgs struct {
	BinCount        TemplateBinCountOptionsPtrInput  `pulumi:"binCount"`
	BinWidth        TemplateBinWidthOptionsPtrInput  `pulumi:"binWidth"`
	SelectedBinType TemplateHistogramBinTypePtrInput `pulumi:"selectedBinType"`
	StartValue      pulumi.Float64PtrInput           `pulumi:"startValue"`
}

func (TemplateHistogramBinOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramBinOptions)(nil)).Elem()
}

func (i TemplateHistogramBinOptionsArgs) ToTemplateHistogramBinOptionsOutput() TemplateHistogramBinOptionsOutput {
	return i.ToTemplateHistogramBinOptionsOutputWithContext(context.Background())
}

func (i TemplateHistogramBinOptionsArgs) ToTemplateHistogramBinOptionsOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramBinOptionsOutput)
}

func (i TemplateHistogramBinOptionsArgs) ToTemplateHistogramBinOptionsPtrOutput() TemplateHistogramBinOptionsPtrOutput {
	return i.ToTemplateHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateHistogramBinOptionsArgs) ToTemplateHistogramBinOptionsPtrOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramBinOptionsOutput).ToTemplateHistogramBinOptionsPtrOutputWithContext(ctx)
}

// TemplateHistogramBinOptionsPtrInput is an input type that accepts TemplateHistogramBinOptionsArgs, TemplateHistogramBinOptionsPtr and TemplateHistogramBinOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateHistogramBinOptionsPtrInput` via:
//
//	        TemplateHistogramBinOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateHistogramBinOptionsPtrInput interface {
	pulumi.Input

	ToTemplateHistogramBinOptionsPtrOutput() TemplateHistogramBinOptionsPtrOutput
	ToTemplateHistogramBinOptionsPtrOutputWithContext(context.Context) TemplateHistogramBinOptionsPtrOutput
}

type templateHistogramBinOptionsPtrType TemplateHistogramBinOptionsArgs

func TemplateHistogramBinOptionsPtr(v *TemplateHistogramBinOptionsArgs) TemplateHistogramBinOptionsPtrInput {
	return (*templateHistogramBinOptionsPtrType)(v)
}

func (*templateHistogramBinOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramBinOptions)(nil)).Elem()
}

func (i *templateHistogramBinOptionsPtrType) ToTemplateHistogramBinOptionsPtrOutput() TemplateHistogramBinOptionsPtrOutput {
	return i.ToTemplateHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (i *templateHistogramBinOptionsPtrType) ToTemplateHistogramBinOptionsPtrOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramBinOptionsPtrOutput)
}

type TemplateHistogramBinOptionsOutput struct{ *pulumi.OutputState }

func (TemplateHistogramBinOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramBinOptions)(nil)).Elem()
}

func (o TemplateHistogramBinOptionsOutput) ToTemplateHistogramBinOptionsOutput() TemplateHistogramBinOptionsOutput {
	return o
}

func (o TemplateHistogramBinOptionsOutput) ToTemplateHistogramBinOptionsOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsOutput {
	return o
}

func (o TemplateHistogramBinOptionsOutput) ToTemplateHistogramBinOptionsPtrOutput() TemplateHistogramBinOptionsPtrOutput {
	return o.ToTemplateHistogramBinOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramBinOptionsOutput) ToTemplateHistogramBinOptionsPtrOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramBinOptions) *TemplateHistogramBinOptions {
		return &v
	}).(TemplateHistogramBinOptionsPtrOutput)
}

func (o TemplateHistogramBinOptionsOutput) BinCount() TemplateBinCountOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramBinOptions) *TemplateBinCountOptions { return v.BinCount }).(TemplateBinCountOptionsPtrOutput)
}

func (o TemplateHistogramBinOptionsOutput) BinWidth() TemplateBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramBinOptions) *TemplateBinWidthOptions { return v.BinWidth }).(TemplateBinWidthOptionsPtrOutput)
}

func (o TemplateHistogramBinOptionsOutput) SelectedBinType() TemplateHistogramBinTypePtrOutput {
	return o.ApplyT(func(v TemplateHistogramBinOptions) *TemplateHistogramBinType { return v.SelectedBinType }).(TemplateHistogramBinTypePtrOutput)
}

func (o TemplateHistogramBinOptionsOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateHistogramBinOptions) *float64 { return v.StartValue }).(pulumi.Float64PtrOutput)
}

type TemplateHistogramBinOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramBinOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramBinOptions)(nil)).Elem()
}

func (o TemplateHistogramBinOptionsPtrOutput) ToTemplateHistogramBinOptionsPtrOutput() TemplateHistogramBinOptionsPtrOutput {
	return o
}

func (o TemplateHistogramBinOptionsPtrOutput) ToTemplateHistogramBinOptionsPtrOutputWithContext(ctx context.Context) TemplateHistogramBinOptionsPtrOutput {
	return o
}

func (o TemplateHistogramBinOptionsPtrOutput) Elem() TemplateHistogramBinOptionsOutput {
	return o.ApplyT(func(v *TemplateHistogramBinOptions) TemplateHistogramBinOptions {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramBinOptions
		return ret
	}).(TemplateHistogramBinOptionsOutput)
}

func (o TemplateHistogramBinOptionsPtrOutput) BinCount() TemplateBinCountOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramBinOptions) *TemplateBinCountOptions {
		if v == nil {
			return nil
		}
		return v.BinCount
	}).(TemplateBinCountOptionsPtrOutput)
}

func (o TemplateHistogramBinOptionsPtrOutput) BinWidth() TemplateBinWidthOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramBinOptions) *TemplateBinWidthOptions {
		if v == nil {
			return nil
		}
		return v.BinWidth
	}).(TemplateBinWidthOptionsPtrOutput)
}

func (o TemplateHistogramBinOptionsPtrOutput) SelectedBinType() TemplateHistogramBinTypePtrOutput {
	return o.ApplyT(func(v *TemplateHistogramBinOptions) *TemplateHistogramBinType {
		if v == nil {
			return nil
		}
		return v.SelectedBinType
	}).(TemplateHistogramBinTypePtrOutput)
}

func (o TemplateHistogramBinOptionsPtrOutput) StartValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateHistogramBinOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.StartValue
	}).(pulumi.Float64PtrOutput)
}

type TemplateHistogramConfiguration struct {
	BinOptions          *TemplateHistogramBinOptions   `pulumi:"binOptions"`
	DataLabels          *TemplateDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *TemplateHistogramFieldWells   `pulumi:"fieldWells"`
	Tooltip             *TemplateTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *TemplateVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *TemplateAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *TemplateChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *TemplateAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
}

// TemplateHistogramConfigurationInput is an input type that accepts TemplateHistogramConfigurationArgs and TemplateHistogramConfigurationOutput values.
// You can construct a concrete instance of `TemplateHistogramConfigurationInput` via:
//
//	TemplateHistogramConfigurationArgs{...}
type TemplateHistogramConfigurationInput interface {
	pulumi.Input

	ToTemplateHistogramConfigurationOutput() TemplateHistogramConfigurationOutput
	ToTemplateHistogramConfigurationOutputWithContext(context.Context) TemplateHistogramConfigurationOutput
}

type TemplateHistogramConfigurationArgs struct {
	BinOptions          TemplateHistogramBinOptionsPtrInput   `pulumi:"binOptions"`
	DataLabels          TemplateDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          TemplateHistogramFieldWellsPtrInput   `pulumi:"fieldWells"`
	Tooltip             TemplateTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       TemplateVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
}

func (TemplateHistogramConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramConfiguration)(nil)).Elem()
}

func (i TemplateHistogramConfigurationArgs) ToTemplateHistogramConfigurationOutput() TemplateHistogramConfigurationOutput {
	return i.ToTemplateHistogramConfigurationOutputWithContext(context.Background())
}

func (i TemplateHistogramConfigurationArgs) ToTemplateHistogramConfigurationOutputWithContext(ctx context.Context) TemplateHistogramConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramConfigurationOutput)
}

func (i TemplateHistogramConfigurationArgs) ToTemplateHistogramConfigurationPtrOutput() TemplateHistogramConfigurationPtrOutput {
	return i.ToTemplateHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateHistogramConfigurationArgs) ToTemplateHistogramConfigurationPtrOutputWithContext(ctx context.Context) TemplateHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramConfigurationOutput).ToTemplateHistogramConfigurationPtrOutputWithContext(ctx)
}

// TemplateHistogramConfigurationPtrInput is an input type that accepts TemplateHistogramConfigurationArgs, TemplateHistogramConfigurationPtr and TemplateHistogramConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateHistogramConfigurationPtrInput` via:
//
//	        TemplateHistogramConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateHistogramConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateHistogramConfigurationPtrOutput() TemplateHistogramConfigurationPtrOutput
	ToTemplateHistogramConfigurationPtrOutputWithContext(context.Context) TemplateHistogramConfigurationPtrOutput
}

type templateHistogramConfigurationPtrType TemplateHistogramConfigurationArgs

func TemplateHistogramConfigurationPtr(v *TemplateHistogramConfigurationArgs) TemplateHistogramConfigurationPtrInput {
	return (*templateHistogramConfigurationPtrType)(v)
}

func (*templateHistogramConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramConfiguration)(nil)).Elem()
}

func (i *templateHistogramConfigurationPtrType) ToTemplateHistogramConfigurationPtrOutput() TemplateHistogramConfigurationPtrOutput {
	return i.ToTemplateHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateHistogramConfigurationPtrType) ToTemplateHistogramConfigurationPtrOutputWithContext(ctx context.Context) TemplateHistogramConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramConfigurationPtrOutput)
}

type TemplateHistogramConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateHistogramConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramConfiguration)(nil)).Elem()
}

func (o TemplateHistogramConfigurationOutput) ToTemplateHistogramConfigurationOutput() TemplateHistogramConfigurationOutput {
	return o
}

func (o TemplateHistogramConfigurationOutput) ToTemplateHistogramConfigurationOutputWithContext(ctx context.Context) TemplateHistogramConfigurationOutput {
	return o
}

func (o TemplateHistogramConfigurationOutput) ToTemplateHistogramConfigurationPtrOutput() TemplateHistogramConfigurationPtrOutput {
	return o.ToTemplateHistogramConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramConfigurationOutput) ToTemplateHistogramConfigurationPtrOutputWithContext(ctx context.Context) TemplateHistogramConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramConfiguration) *TemplateHistogramConfiguration {
		return &v
	}).(TemplateHistogramConfigurationPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) BinOptions() TemplateHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateHistogramBinOptions { return v.BinOptions }).(TemplateHistogramBinOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) FieldWells() TemplateHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateHistogramFieldWells { return v.FieldWells }).(TemplateHistogramFieldWellsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

func (o TemplateHistogramConfigurationOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateAxisDisplayOptions { return v.XAxisDisplayOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateChartAxisLabelOptions { return v.XAxisLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationOutput) YAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramConfiguration) *TemplateAxisDisplayOptions { return v.YAxisDisplayOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

type TemplateHistogramConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramConfiguration)(nil)).Elem()
}

func (o TemplateHistogramConfigurationPtrOutput) ToTemplateHistogramConfigurationPtrOutput() TemplateHistogramConfigurationPtrOutput {
	return o
}

func (o TemplateHistogramConfigurationPtrOutput) ToTemplateHistogramConfigurationPtrOutputWithContext(ctx context.Context) TemplateHistogramConfigurationPtrOutput {
	return o
}

func (o TemplateHistogramConfigurationPtrOutput) Elem() TemplateHistogramConfigurationOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) TemplateHistogramConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramConfiguration
		return ret
	}).(TemplateHistogramConfigurationOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) BinOptions() TemplateHistogramBinOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateHistogramBinOptions {
		if v == nil {
			return nil
		}
		return v.BinOptions
	}).(TemplateHistogramBinOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) FieldWells() TemplateHistogramFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateHistogramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateHistogramFieldWellsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateHistogramConfigurationPtrOutput) YAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

type TemplateHistogramFieldWells struct {
	HistogramAggregatedFieldWells *TemplateHistogramAggregatedFieldWells `pulumi:"histogramAggregatedFieldWells"`
}

// TemplateHistogramFieldWellsInput is an input type that accepts TemplateHistogramFieldWellsArgs and TemplateHistogramFieldWellsOutput values.
// You can construct a concrete instance of `TemplateHistogramFieldWellsInput` via:
//
//	TemplateHistogramFieldWellsArgs{...}
type TemplateHistogramFieldWellsInput interface {
	pulumi.Input

	ToTemplateHistogramFieldWellsOutput() TemplateHistogramFieldWellsOutput
	ToTemplateHistogramFieldWellsOutputWithContext(context.Context) TemplateHistogramFieldWellsOutput
}

type TemplateHistogramFieldWellsArgs struct {
	HistogramAggregatedFieldWells TemplateHistogramAggregatedFieldWellsPtrInput `pulumi:"histogramAggregatedFieldWells"`
}

func (TemplateHistogramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramFieldWells)(nil)).Elem()
}

func (i TemplateHistogramFieldWellsArgs) ToTemplateHistogramFieldWellsOutput() TemplateHistogramFieldWellsOutput {
	return i.ToTemplateHistogramFieldWellsOutputWithContext(context.Background())
}

func (i TemplateHistogramFieldWellsArgs) ToTemplateHistogramFieldWellsOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramFieldWellsOutput)
}

func (i TemplateHistogramFieldWellsArgs) ToTemplateHistogramFieldWellsPtrOutput() TemplateHistogramFieldWellsPtrOutput {
	return i.ToTemplateHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateHistogramFieldWellsArgs) ToTemplateHistogramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramFieldWellsOutput).ToTemplateHistogramFieldWellsPtrOutputWithContext(ctx)
}

// TemplateHistogramFieldWellsPtrInput is an input type that accepts TemplateHistogramFieldWellsArgs, TemplateHistogramFieldWellsPtr and TemplateHistogramFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateHistogramFieldWellsPtrInput` via:
//
//	        TemplateHistogramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateHistogramFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateHistogramFieldWellsPtrOutput() TemplateHistogramFieldWellsPtrOutput
	ToTemplateHistogramFieldWellsPtrOutputWithContext(context.Context) TemplateHistogramFieldWellsPtrOutput
}

type templateHistogramFieldWellsPtrType TemplateHistogramFieldWellsArgs

func TemplateHistogramFieldWellsPtr(v *TemplateHistogramFieldWellsArgs) TemplateHistogramFieldWellsPtrInput {
	return (*templateHistogramFieldWellsPtrType)(v)
}

func (*templateHistogramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramFieldWells)(nil)).Elem()
}

func (i *templateHistogramFieldWellsPtrType) ToTemplateHistogramFieldWellsPtrOutput() TemplateHistogramFieldWellsPtrOutput {
	return i.ToTemplateHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateHistogramFieldWellsPtrType) ToTemplateHistogramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramFieldWellsPtrOutput)
}

type TemplateHistogramFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateHistogramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramFieldWells)(nil)).Elem()
}

func (o TemplateHistogramFieldWellsOutput) ToTemplateHistogramFieldWellsOutput() TemplateHistogramFieldWellsOutput {
	return o
}

func (o TemplateHistogramFieldWellsOutput) ToTemplateHistogramFieldWellsOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsOutput {
	return o
}

func (o TemplateHistogramFieldWellsOutput) ToTemplateHistogramFieldWellsPtrOutput() TemplateHistogramFieldWellsPtrOutput {
	return o.ToTemplateHistogramFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramFieldWellsOutput) ToTemplateHistogramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramFieldWells) *TemplateHistogramFieldWells {
		return &v
	}).(TemplateHistogramFieldWellsPtrOutput)
}

func (o TemplateHistogramFieldWellsOutput) HistogramAggregatedFieldWells() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramFieldWells) *TemplateHistogramAggregatedFieldWells {
		return v.HistogramAggregatedFieldWells
	}).(TemplateHistogramAggregatedFieldWellsPtrOutput)
}

type TemplateHistogramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramFieldWells)(nil)).Elem()
}

func (o TemplateHistogramFieldWellsPtrOutput) ToTemplateHistogramFieldWellsPtrOutput() TemplateHistogramFieldWellsPtrOutput {
	return o
}

func (o TemplateHistogramFieldWellsPtrOutput) ToTemplateHistogramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateHistogramFieldWellsPtrOutput {
	return o
}

func (o TemplateHistogramFieldWellsPtrOutput) Elem() TemplateHistogramFieldWellsOutput {
	return o.ApplyT(func(v *TemplateHistogramFieldWells) TemplateHistogramFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramFieldWells
		return ret
	}).(TemplateHistogramFieldWellsOutput)
}

func (o TemplateHistogramFieldWellsPtrOutput) HistogramAggregatedFieldWells() TemplateHistogramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramFieldWells) *TemplateHistogramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.HistogramAggregatedFieldWells
	}).(TemplateHistogramAggregatedFieldWellsPtrOutput)
}

type TemplateHistogramVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateHistogramConfiguration     `pulumi:"chartConfiguration"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateHistogramVisualInput is an input type that accepts TemplateHistogramVisualArgs and TemplateHistogramVisualOutput values.
// You can construct a concrete instance of `TemplateHistogramVisualInput` via:
//
//	TemplateHistogramVisualArgs{...}
type TemplateHistogramVisualInput interface {
	pulumi.Input

	ToTemplateHistogramVisualOutput() TemplateHistogramVisualOutput
	ToTemplateHistogramVisualOutputWithContext(context.Context) TemplateHistogramVisualOutput
}

type TemplateHistogramVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateHistogramConfigurationPtrInput     `pulumi:"chartConfiguration"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateHistogramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramVisual)(nil)).Elem()
}

func (i TemplateHistogramVisualArgs) ToTemplateHistogramVisualOutput() TemplateHistogramVisualOutput {
	return i.ToTemplateHistogramVisualOutputWithContext(context.Background())
}

func (i TemplateHistogramVisualArgs) ToTemplateHistogramVisualOutputWithContext(ctx context.Context) TemplateHistogramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramVisualOutput)
}

func (i TemplateHistogramVisualArgs) ToTemplateHistogramVisualPtrOutput() TemplateHistogramVisualPtrOutput {
	return i.ToTemplateHistogramVisualPtrOutputWithContext(context.Background())
}

func (i TemplateHistogramVisualArgs) ToTemplateHistogramVisualPtrOutputWithContext(ctx context.Context) TemplateHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramVisualOutput).ToTemplateHistogramVisualPtrOutputWithContext(ctx)
}

// TemplateHistogramVisualPtrInput is an input type that accepts TemplateHistogramVisualArgs, TemplateHistogramVisualPtr and TemplateHistogramVisualPtrOutput values.
// You can construct a concrete instance of `TemplateHistogramVisualPtrInput` via:
//
//	        TemplateHistogramVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateHistogramVisualPtrInput interface {
	pulumi.Input

	ToTemplateHistogramVisualPtrOutput() TemplateHistogramVisualPtrOutput
	ToTemplateHistogramVisualPtrOutputWithContext(context.Context) TemplateHistogramVisualPtrOutput
}

type templateHistogramVisualPtrType TemplateHistogramVisualArgs

func TemplateHistogramVisualPtr(v *TemplateHistogramVisualArgs) TemplateHistogramVisualPtrInput {
	return (*templateHistogramVisualPtrType)(v)
}

func (*templateHistogramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramVisual)(nil)).Elem()
}

func (i *templateHistogramVisualPtrType) ToTemplateHistogramVisualPtrOutput() TemplateHistogramVisualPtrOutput {
	return i.ToTemplateHistogramVisualPtrOutputWithContext(context.Background())
}

func (i *templateHistogramVisualPtrType) ToTemplateHistogramVisualPtrOutputWithContext(ctx context.Context) TemplateHistogramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateHistogramVisualPtrOutput)
}

type TemplateHistogramVisualOutput struct{ *pulumi.OutputState }

func (TemplateHistogramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateHistogramVisual)(nil)).Elem()
}

func (o TemplateHistogramVisualOutput) ToTemplateHistogramVisualOutput() TemplateHistogramVisualOutput {
	return o
}

func (o TemplateHistogramVisualOutput) ToTemplateHistogramVisualOutputWithContext(ctx context.Context) TemplateHistogramVisualOutput {
	return o
}

func (o TemplateHistogramVisualOutput) ToTemplateHistogramVisualPtrOutput() TemplateHistogramVisualPtrOutput {
	return o.ToTemplateHistogramVisualPtrOutputWithContext(context.Background())
}

func (o TemplateHistogramVisualOutput) ToTemplateHistogramVisualPtrOutputWithContext(ctx context.Context) TemplateHistogramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateHistogramVisual) *TemplateHistogramVisual {
		return &v
	}).(TemplateHistogramVisualPtrOutput)
}

func (o TemplateHistogramVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateHistogramVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateHistogramVisualOutput) ChartConfiguration() TemplateHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateHistogramVisual) *TemplateHistogramConfiguration { return v.ChartConfiguration }).(TemplateHistogramConfigurationPtrOutput)
}

func (o TemplateHistogramVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateHistogramVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateHistogramVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateHistogramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateHistogramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateHistogramVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateHistogramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateHistogramVisual)(nil)).Elem()
}

func (o TemplateHistogramVisualPtrOutput) ToTemplateHistogramVisualPtrOutput() TemplateHistogramVisualPtrOutput {
	return o
}

func (o TemplateHistogramVisualPtrOutput) ToTemplateHistogramVisualPtrOutputWithContext(ctx context.Context) TemplateHistogramVisualPtrOutput {
	return o
}

func (o TemplateHistogramVisualPtrOutput) Elem() TemplateHistogramVisualOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) TemplateHistogramVisual {
		if v != nil {
			return *v
		}
		var ret TemplateHistogramVisual
		return ret
	}).(TemplateHistogramVisualOutput)
}

func (o TemplateHistogramVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateHistogramVisualPtrOutput) ChartConfiguration() TemplateHistogramConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) *TemplateHistogramConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateHistogramConfigurationPtrOutput)
}

func (o TemplateHistogramVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateHistogramVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateHistogramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateHistogramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateInsightConfiguration struct {
	Computations    []TemplateComputation           `pulumi:"computations"`
	CustomNarrative *TemplateCustomNarrativeOptions `pulumi:"customNarrative"`
}

// TemplateInsightConfigurationInput is an input type that accepts TemplateInsightConfigurationArgs and TemplateInsightConfigurationOutput values.
// You can construct a concrete instance of `TemplateInsightConfigurationInput` via:
//
//	TemplateInsightConfigurationArgs{...}
type TemplateInsightConfigurationInput interface {
	pulumi.Input

	ToTemplateInsightConfigurationOutput() TemplateInsightConfigurationOutput
	ToTemplateInsightConfigurationOutputWithContext(context.Context) TemplateInsightConfigurationOutput
}

type TemplateInsightConfigurationArgs struct {
	Computations    TemplateComputationArrayInput          `pulumi:"computations"`
	CustomNarrative TemplateCustomNarrativeOptionsPtrInput `pulumi:"customNarrative"`
}

func (TemplateInsightConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateInsightConfiguration)(nil)).Elem()
}

func (i TemplateInsightConfigurationArgs) ToTemplateInsightConfigurationOutput() TemplateInsightConfigurationOutput {
	return i.ToTemplateInsightConfigurationOutputWithContext(context.Background())
}

func (i TemplateInsightConfigurationArgs) ToTemplateInsightConfigurationOutputWithContext(ctx context.Context) TemplateInsightConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightConfigurationOutput)
}

func (i TemplateInsightConfigurationArgs) ToTemplateInsightConfigurationPtrOutput() TemplateInsightConfigurationPtrOutput {
	return i.ToTemplateInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateInsightConfigurationArgs) ToTemplateInsightConfigurationPtrOutputWithContext(ctx context.Context) TemplateInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightConfigurationOutput).ToTemplateInsightConfigurationPtrOutputWithContext(ctx)
}

// TemplateInsightConfigurationPtrInput is an input type that accepts TemplateInsightConfigurationArgs, TemplateInsightConfigurationPtr and TemplateInsightConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateInsightConfigurationPtrInput` via:
//
//	        TemplateInsightConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateInsightConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateInsightConfigurationPtrOutput() TemplateInsightConfigurationPtrOutput
	ToTemplateInsightConfigurationPtrOutputWithContext(context.Context) TemplateInsightConfigurationPtrOutput
}

type templateInsightConfigurationPtrType TemplateInsightConfigurationArgs

func TemplateInsightConfigurationPtr(v *TemplateInsightConfigurationArgs) TemplateInsightConfigurationPtrInput {
	return (*templateInsightConfigurationPtrType)(v)
}

func (*templateInsightConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateInsightConfiguration)(nil)).Elem()
}

func (i *templateInsightConfigurationPtrType) ToTemplateInsightConfigurationPtrOutput() TemplateInsightConfigurationPtrOutput {
	return i.ToTemplateInsightConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateInsightConfigurationPtrType) ToTemplateInsightConfigurationPtrOutputWithContext(ctx context.Context) TemplateInsightConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightConfigurationPtrOutput)
}

type TemplateInsightConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateInsightConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateInsightConfiguration)(nil)).Elem()
}

func (o TemplateInsightConfigurationOutput) ToTemplateInsightConfigurationOutput() TemplateInsightConfigurationOutput {
	return o
}

func (o TemplateInsightConfigurationOutput) ToTemplateInsightConfigurationOutputWithContext(ctx context.Context) TemplateInsightConfigurationOutput {
	return o
}

func (o TemplateInsightConfigurationOutput) ToTemplateInsightConfigurationPtrOutput() TemplateInsightConfigurationPtrOutput {
	return o.ToTemplateInsightConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateInsightConfigurationOutput) ToTemplateInsightConfigurationPtrOutputWithContext(ctx context.Context) TemplateInsightConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateInsightConfiguration) *TemplateInsightConfiguration {
		return &v
	}).(TemplateInsightConfigurationPtrOutput)
}

func (o TemplateInsightConfigurationOutput) Computations() TemplateComputationArrayOutput {
	return o.ApplyT(func(v TemplateInsightConfiguration) []TemplateComputation { return v.Computations }).(TemplateComputationArrayOutput)
}

func (o TemplateInsightConfigurationOutput) CustomNarrative() TemplateCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateInsightConfiguration) *TemplateCustomNarrativeOptions { return v.CustomNarrative }).(TemplateCustomNarrativeOptionsPtrOutput)
}

type TemplateInsightConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateInsightConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateInsightConfiguration)(nil)).Elem()
}

func (o TemplateInsightConfigurationPtrOutput) ToTemplateInsightConfigurationPtrOutput() TemplateInsightConfigurationPtrOutput {
	return o
}

func (o TemplateInsightConfigurationPtrOutput) ToTemplateInsightConfigurationPtrOutputWithContext(ctx context.Context) TemplateInsightConfigurationPtrOutput {
	return o
}

func (o TemplateInsightConfigurationPtrOutput) Elem() TemplateInsightConfigurationOutput {
	return o.ApplyT(func(v *TemplateInsightConfiguration) TemplateInsightConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateInsightConfiguration
		return ret
	}).(TemplateInsightConfigurationOutput)
}

func (o TemplateInsightConfigurationPtrOutput) Computations() TemplateComputationArrayOutput {
	return o.ApplyT(func(v *TemplateInsightConfiguration) []TemplateComputation {
		if v == nil {
			return nil
		}
		return v.Computations
	}).(TemplateComputationArrayOutput)
}

func (o TemplateInsightConfigurationPtrOutput) CustomNarrative() TemplateCustomNarrativeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateInsightConfiguration) *TemplateCustomNarrativeOptions {
		if v == nil {
			return nil
		}
		return v.CustomNarrative
	}).(TemplateCustomNarrativeOptionsPtrOutput)
}

type TemplateInsightVisual struct {
	Actions              []TemplateVisualCustomAction        `pulumi:"actions"`
	DataSetIdentifier    string                              `pulumi:"dataSetIdentifier"`
	InsightConfiguration *TemplateInsightConfiguration       `pulumi:"insightConfiguration"`
	Subtitle             *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId             string                              `pulumi:"visualId"`
}

// TemplateInsightVisualInput is an input type that accepts TemplateInsightVisualArgs and TemplateInsightVisualOutput values.
// You can construct a concrete instance of `TemplateInsightVisualInput` via:
//
//	TemplateInsightVisualArgs{...}
type TemplateInsightVisualInput interface {
	pulumi.Input

	ToTemplateInsightVisualOutput() TemplateInsightVisualOutput
	ToTemplateInsightVisualOutputWithContext(context.Context) TemplateInsightVisualOutput
}

type TemplateInsightVisualArgs struct {
	Actions              TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	DataSetIdentifier    pulumi.StringInput                         `pulumi:"dataSetIdentifier"`
	InsightConfiguration TemplateInsightConfigurationPtrInput       `pulumi:"insightConfiguration"`
	Subtitle             TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId             pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateInsightVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateInsightVisual)(nil)).Elem()
}

func (i TemplateInsightVisualArgs) ToTemplateInsightVisualOutput() TemplateInsightVisualOutput {
	return i.ToTemplateInsightVisualOutputWithContext(context.Background())
}

func (i TemplateInsightVisualArgs) ToTemplateInsightVisualOutputWithContext(ctx context.Context) TemplateInsightVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightVisualOutput)
}

func (i TemplateInsightVisualArgs) ToTemplateInsightVisualPtrOutput() TemplateInsightVisualPtrOutput {
	return i.ToTemplateInsightVisualPtrOutputWithContext(context.Background())
}

func (i TemplateInsightVisualArgs) ToTemplateInsightVisualPtrOutputWithContext(ctx context.Context) TemplateInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightVisualOutput).ToTemplateInsightVisualPtrOutputWithContext(ctx)
}

// TemplateInsightVisualPtrInput is an input type that accepts TemplateInsightVisualArgs, TemplateInsightVisualPtr and TemplateInsightVisualPtrOutput values.
// You can construct a concrete instance of `TemplateInsightVisualPtrInput` via:
//
//	        TemplateInsightVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateInsightVisualPtrInput interface {
	pulumi.Input

	ToTemplateInsightVisualPtrOutput() TemplateInsightVisualPtrOutput
	ToTemplateInsightVisualPtrOutputWithContext(context.Context) TemplateInsightVisualPtrOutput
}

type templateInsightVisualPtrType TemplateInsightVisualArgs

func TemplateInsightVisualPtr(v *TemplateInsightVisualArgs) TemplateInsightVisualPtrInput {
	return (*templateInsightVisualPtrType)(v)
}

func (*templateInsightVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateInsightVisual)(nil)).Elem()
}

func (i *templateInsightVisualPtrType) ToTemplateInsightVisualPtrOutput() TemplateInsightVisualPtrOutput {
	return i.ToTemplateInsightVisualPtrOutputWithContext(context.Background())
}

func (i *templateInsightVisualPtrType) ToTemplateInsightVisualPtrOutputWithContext(ctx context.Context) TemplateInsightVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateInsightVisualPtrOutput)
}

type TemplateInsightVisualOutput struct{ *pulumi.OutputState }

func (TemplateInsightVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateInsightVisual)(nil)).Elem()
}

func (o TemplateInsightVisualOutput) ToTemplateInsightVisualOutput() TemplateInsightVisualOutput {
	return o
}

func (o TemplateInsightVisualOutput) ToTemplateInsightVisualOutputWithContext(ctx context.Context) TemplateInsightVisualOutput {
	return o
}

func (o TemplateInsightVisualOutput) ToTemplateInsightVisualPtrOutput() TemplateInsightVisualPtrOutput {
	return o.ToTemplateInsightVisualPtrOutputWithContext(context.Background())
}

func (o TemplateInsightVisualOutput) ToTemplateInsightVisualPtrOutputWithContext(ctx context.Context) TemplateInsightVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateInsightVisual) *TemplateInsightVisual {
		return &v
	}).(TemplateInsightVisualPtrOutput)
}

func (o TemplateInsightVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateInsightVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateInsightVisualOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateInsightVisual) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateInsightVisualOutput) InsightConfiguration() TemplateInsightConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateInsightVisual) *TemplateInsightConfiguration { return v.InsightConfiguration }).(TemplateInsightConfigurationPtrOutput)
}

func (o TemplateInsightVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateInsightVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateInsightVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateInsightVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateInsightVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateInsightVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateInsightVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateInsightVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateInsightVisual)(nil)).Elem()
}

func (o TemplateInsightVisualPtrOutput) ToTemplateInsightVisualPtrOutput() TemplateInsightVisualPtrOutput {
	return o
}

func (o TemplateInsightVisualPtrOutput) ToTemplateInsightVisualPtrOutputWithContext(ctx context.Context) TemplateInsightVisualPtrOutput {
	return o
}

func (o TemplateInsightVisualPtrOutput) Elem() TemplateInsightVisualOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) TemplateInsightVisual {
		if v != nil {
			return *v
		}
		var ret TemplateInsightVisual
		return ret
	}).(TemplateInsightVisualOutput)
}

func (o TemplateInsightVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateInsightVisualPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o TemplateInsightVisualPtrOutput) InsightConfiguration() TemplateInsightConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) *TemplateInsightConfiguration {
		if v == nil {
			return nil
		}
		return v.InsightConfiguration
	}).(TemplateInsightConfigurationPtrOutput)
}

func (o TemplateInsightVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateInsightVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateInsightVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateInsightVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateIntegerDefaultValues struct {
	DynamicValue *TemplateDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []float64                    `pulumi:"staticValues"`
}

// TemplateIntegerDefaultValuesInput is an input type that accepts TemplateIntegerDefaultValuesArgs and TemplateIntegerDefaultValuesOutput values.
// You can construct a concrete instance of `TemplateIntegerDefaultValuesInput` via:
//
//	TemplateIntegerDefaultValuesArgs{...}
type TemplateIntegerDefaultValuesInput interface {
	pulumi.Input

	ToTemplateIntegerDefaultValuesOutput() TemplateIntegerDefaultValuesOutput
	ToTemplateIntegerDefaultValuesOutputWithContext(context.Context) TemplateIntegerDefaultValuesOutput
}

type TemplateIntegerDefaultValuesArgs struct {
	DynamicValue TemplateDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.Float64ArrayInput            `pulumi:"staticValues"`
}

func (TemplateIntegerDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerDefaultValues)(nil)).Elem()
}

func (i TemplateIntegerDefaultValuesArgs) ToTemplateIntegerDefaultValuesOutput() TemplateIntegerDefaultValuesOutput {
	return i.ToTemplateIntegerDefaultValuesOutputWithContext(context.Background())
}

func (i TemplateIntegerDefaultValuesArgs) ToTemplateIntegerDefaultValuesOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerDefaultValuesOutput)
}

func (i TemplateIntegerDefaultValuesArgs) ToTemplateIntegerDefaultValuesPtrOutput() TemplateIntegerDefaultValuesPtrOutput {
	return i.ToTemplateIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i TemplateIntegerDefaultValuesArgs) ToTemplateIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerDefaultValuesOutput).ToTemplateIntegerDefaultValuesPtrOutputWithContext(ctx)
}

// TemplateIntegerDefaultValuesPtrInput is an input type that accepts TemplateIntegerDefaultValuesArgs, TemplateIntegerDefaultValuesPtr and TemplateIntegerDefaultValuesPtrOutput values.
// You can construct a concrete instance of `TemplateIntegerDefaultValuesPtrInput` via:
//
//	        TemplateIntegerDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateIntegerDefaultValuesPtrInput interface {
	pulumi.Input

	ToTemplateIntegerDefaultValuesPtrOutput() TemplateIntegerDefaultValuesPtrOutput
	ToTemplateIntegerDefaultValuesPtrOutputWithContext(context.Context) TemplateIntegerDefaultValuesPtrOutput
}

type templateIntegerDefaultValuesPtrType TemplateIntegerDefaultValuesArgs

func TemplateIntegerDefaultValuesPtr(v *TemplateIntegerDefaultValuesArgs) TemplateIntegerDefaultValuesPtrInput {
	return (*templateIntegerDefaultValuesPtrType)(v)
}

func (*templateIntegerDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerDefaultValues)(nil)).Elem()
}

func (i *templateIntegerDefaultValuesPtrType) ToTemplateIntegerDefaultValuesPtrOutput() TemplateIntegerDefaultValuesPtrOutput {
	return i.ToTemplateIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *templateIntegerDefaultValuesPtrType) ToTemplateIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerDefaultValuesPtrOutput)
}

type TemplateIntegerDefaultValuesOutput struct{ *pulumi.OutputState }

func (TemplateIntegerDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerDefaultValues)(nil)).Elem()
}

func (o TemplateIntegerDefaultValuesOutput) ToTemplateIntegerDefaultValuesOutput() TemplateIntegerDefaultValuesOutput {
	return o
}

func (o TemplateIntegerDefaultValuesOutput) ToTemplateIntegerDefaultValuesOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesOutput {
	return o
}

func (o TemplateIntegerDefaultValuesOutput) ToTemplateIntegerDefaultValuesPtrOutput() TemplateIntegerDefaultValuesPtrOutput {
	return o.ToTemplateIntegerDefaultValuesPtrOutputWithContext(context.Background())
}

func (o TemplateIntegerDefaultValuesOutput) ToTemplateIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateIntegerDefaultValues) *TemplateIntegerDefaultValues {
		return &v
	}).(TemplateIntegerDefaultValuesPtrOutput)
}

func (o TemplateIntegerDefaultValuesOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v TemplateIntegerDefaultValues) *TemplateDynamicDefaultValue { return v.DynamicValue }).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateIntegerDefaultValuesOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v TemplateIntegerDefaultValues) []float64 { return v.StaticValues }).(pulumi.Float64ArrayOutput)
}

type TemplateIntegerDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateIntegerDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerDefaultValues)(nil)).Elem()
}

func (o TemplateIntegerDefaultValuesPtrOutput) ToTemplateIntegerDefaultValuesPtrOutput() TemplateIntegerDefaultValuesPtrOutput {
	return o
}

func (o TemplateIntegerDefaultValuesPtrOutput) ToTemplateIntegerDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateIntegerDefaultValuesPtrOutput {
	return o
}

func (o TemplateIntegerDefaultValuesPtrOutput) Elem() TemplateIntegerDefaultValuesOutput {
	return o.ApplyT(func(v *TemplateIntegerDefaultValues) TemplateIntegerDefaultValues {
		if v != nil {
			return *v
		}
		var ret TemplateIntegerDefaultValues
		return ret
	}).(TemplateIntegerDefaultValuesOutput)
}

func (o TemplateIntegerDefaultValuesPtrOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *TemplateIntegerDefaultValues) *TemplateDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateIntegerDefaultValuesPtrOutput) StaticValues() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *TemplateIntegerDefaultValues) []float64 {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.Float64ArrayOutput)
}

type TemplateIntegerParameterDeclaration struct {
	DefaultValues           *TemplateIntegerDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []TemplateMappedDataSetParameter            `pulumi:"mappedDataSetParameters"`
	Name                    string                                      `pulumi:"name"`
	ParameterValueType      TemplateParameterValueType                  `pulumi:"parameterValueType"`
	ValueWhenUnset          *TemplateIntegerValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// TemplateIntegerParameterDeclarationInput is an input type that accepts TemplateIntegerParameterDeclarationArgs and TemplateIntegerParameterDeclarationOutput values.
// You can construct a concrete instance of `TemplateIntegerParameterDeclarationInput` via:
//
//	TemplateIntegerParameterDeclarationArgs{...}
type TemplateIntegerParameterDeclarationInput interface {
	pulumi.Input

	ToTemplateIntegerParameterDeclarationOutput() TemplateIntegerParameterDeclarationOutput
	ToTemplateIntegerParameterDeclarationOutputWithContext(context.Context) TemplateIntegerParameterDeclarationOutput
}

type TemplateIntegerParameterDeclarationArgs struct {
	DefaultValues           TemplateIntegerDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters TemplateMappedDataSetParameterArrayInput           `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                 `pulumi:"name"`
	ParameterValueType      TemplateParameterValueTypeInput                    `pulumi:"parameterValueType"`
	ValueWhenUnset          TemplateIntegerValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (TemplateIntegerParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerParameterDeclaration)(nil)).Elem()
}

func (i TemplateIntegerParameterDeclarationArgs) ToTemplateIntegerParameterDeclarationOutput() TemplateIntegerParameterDeclarationOutput {
	return i.ToTemplateIntegerParameterDeclarationOutputWithContext(context.Background())
}

func (i TemplateIntegerParameterDeclarationArgs) ToTemplateIntegerParameterDeclarationOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerParameterDeclarationOutput)
}

func (i TemplateIntegerParameterDeclarationArgs) ToTemplateIntegerParameterDeclarationPtrOutput() TemplateIntegerParameterDeclarationPtrOutput {
	return i.ToTemplateIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i TemplateIntegerParameterDeclarationArgs) ToTemplateIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerParameterDeclarationOutput).ToTemplateIntegerParameterDeclarationPtrOutputWithContext(ctx)
}

// TemplateIntegerParameterDeclarationPtrInput is an input type that accepts TemplateIntegerParameterDeclarationArgs, TemplateIntegerParameterDeclarationPtr and TemplateIntegerParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `TemplateIntegerParameterDeclarationPtrInput` via:
//
//	        TemplateIntegerParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type TemplateIntegerParameterDeclarationPtrInput interface {
	pulumi.Input

	ToTemplateIntegerParameterDeclarationPtrOutput() TemplateIntegerParameterDeclarationPtrOutput
	ToTemplateIntegerParameterDeclarationPtrOutputWithContext(context.Context) TemplateIntegerParameterDeclarationPtrOutput
}

type templateIntegerParameterDeclarationPtrType TemplateIntegerParameterDeclarationArgs

func TemplateIntegerParameterDeclarationPtr(v *TemplateIntegerParameterDeclarationArgs) TemplateIntegerParameterDeclarationPtrInput {
	return (*templateIntegerParameterDeclarationPtrType)(v)
}

func (*templateIntegerParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerParameterDeclaration)(nil)).Elem()
}

func (i *templateIntegerParameterDeclarationPtrType) ToTemplateIntegerParameterDeclarationPtrOutput() TemplateIntegerParameterDeclarationPtrOutput {
	return i.ToTemplateIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *templateIntegerParameterDeclarationPtrType) ToTemplateIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerParameterDeclarationPtrOutput)
}

type TemplateIntegerParameterDeclarationOutput struct{ *pulumi.OutputState }

func (TemplateIntegerParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerParameterDeclaration)(nil)).Elem()
}

func (o TemplateIntegerParameterDeclarationOutput) ToTemplateIntegerParameterDeclarationOutput() TemplateIntegerParameterDeclarationOutput {
	return o
}

func (o TemplateIntegerParameterDeclarationOutput) ToTemplateIntegerParameterDeclarationOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationOutput {
	return o
}

func (o TemplateIntegerParameterDeclarationOutput) ToTemplateIntegerParameterDeclarationPtrOutput() TemplateIntegerParameterDeclarationPtrOutput {
	return o.ToTemplateIntegerParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o TemplateIntegerParameterDeclarationOutput) ToTemplateIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateIntegerParameterDeclaration) *TemplateIntegerParameterDeclaration {
		return &v
	}).(TemplateIntegerParameterDeclarationPtrOutput)
}

func (o TemplateIntegerParameterDeclarationOutput) DefaultValues() TemplateIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v TemplateIntegerParameterDeclaration) *TemplateIntegerDefaultValues { return v.DefaultValues }).(TemplateIntegerDefaultValuesPtrOutput)
}

func (o TemplateIntegerParameterDeclarationOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v TemplateIntegerParameterDeclaration) []TemplateMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateIntegerParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateIntegerParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateIntegerParameterDeclarationOutput) ParameterValueType() TemplateParameterValueTypeOutput {
	return o.ApplyT(func(v TemplateIntegerParameterDeclaration) TemplateParameterValueType { return v.ParameterValueType }).(TemplateParameterValueTypeOutput)
}

func (o TemplateIntegerParameterDeclarationOutput) ValueWhenUnset() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateIntegerParameterDeclaration) *TemplateIntegerValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(TemplateIntegerValueWhenUnsetConfigurationPtrOutput)
}

type TemplateIntegerParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (TemplateIntegerParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerParameterDeclaration)(nil)).Elem()
}

func (o TemplateIntegerParameterDeclarationPtrOutput) ToTemplateIntegerParameterDeclarationPtrOutput() TemplateIntegerParameterDeclarationPtrOutput {
	return o
}

func (o TemplateIntegerParameterDeclarationPtrOutput) ToTemplateIntegerParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateIntegerParameterDeclarationPtrOutput {
	return o
}

func (o TemplateIntegerParameterDeclarationPtrOutput) Elem() TemplateIntegerParameterDeclarationOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) TemplateIntegerParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret TemplateIntegerParameterDeclaration
		return ret
	}).(TemplateIntegerParameterDeclarationOutput)
}

func (o TemplateIntegerParameterDeclarationPtrOutput) DefaultValues() TemplateIntegerDefaultValuesPtrOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) *TemplateIntegerDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(TemplateIntegerDefaultValuesPtrOutput)
}

func (o TemplateIntegerParameterDeclarationPtrOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) []TemplateMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateIntegerParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateIntegerParameterDeclarationPtrOutput) ParameterValueType() TemplateParameterValueTypePtrOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) *TemplateParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(TemplateParameterValueTypePtrOutput)
}

func (o TemplateIntegerParameterDeclarationPtrOutput) ValueWhenUnset() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateIntegerParameterDeclaration) *TemplateIntegerValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(TemplateIntegerValueWhenUnsetConfigurationPtrOutput)
}

type TemplateIntegerValueWhenUnsetConfiguration struct {
	CustomValue          *float64                      `pulumi:"customValue"`
	ValueWhenUnsetOption *TemplateValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// TemplateIntegerValueWhenUnsetConfigurationInput is an input type that accepts TemplateIntegerValueWhenUnsetConfigurationArgs and TemplateIntegerValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `TemplateIntegerValueWhenUnsetConfigurationInput` via:
//
//	TemplateIntegerValueWhenUnsetConfigurationArgs{...}
type TemplateIntegerValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToTemplateIntegerValueWhenUnsetConfigurationOutput() TemplateIntegerValueWhenUnsetConfigurationOutput
	ToTemplateIntegerValueWhenUnsetConfigurationOutputWithContext(context.Context) TemplateIntegerValueWhenUnsetConfigurationOutput
}

type TemplateIntegerValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.Float64PtrInput               `pulumi:"customValue"`
	ValueWhenUnsetOption TemplateValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (TemplateIntegerValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i TemplateIntegerValueWhenUnsetConfigurationArgs) ToTemplateIntegerValueWhenUnsetConfigurationOutput() TemplateIntegerValueWhenUnsetConfigurationOutput {
	return i.ToTemplateIntegerValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i TemplateIntegerValueWhenUnsetConfigurationArgs) ToTemplateIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerValueWhenUnsetConfigurationOutput)
}

func (i TemplateIntegerValueWhenUnsetConfigurationArgs) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutput() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateIntegerValueWhenUnsetConfigurationArgs) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerValueWhenUnsetConfigurationOutput).ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// TemplateIntegerValueWhenUnsetConfigurationPtrInput is an input type that accepts TemplateIntegerValueWhenUnsetConfigurationArgs, TemplateIntegerValueWhenUnsetConfigurationPtr and TemplateIntegerValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateIntegerValueWhenUnsetConfigurationPtrInput` via:
//
//	        TemplateIntegerValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateIntegerValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateIntegerValueWhenUnsetConfigurationPtrOutput() TemplateIntegerValueWhenUnsetConfigurationPtrOutput
	ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) TemplateIntegerValueWhenUnsetConfigurationPtrOutput
}

type templateIntegerValueWhenUnsetConfigurationPtrType TemplateIntegerValueWhenUnsetConfigurationArgs

func TemplateIntegerValueWhenUnsetConfigurationPtr(v *TemplateIntegerValueWhenUnsetConfigurationArgs) TemplateIntegerValueWhenUnsetConfigurationPtrInput {
	return (*templateIntegerValueWhenUnsetConfigurationPtrType)(v)
}

func (*templateIntegerValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *templateIntegerValueWhenUnsetConfigurationPtrType) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutput() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateIntegerValueWhenUnsetConfigurationPtrType) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateIntegerValueWhenUnsetConfigurationPtrOutput)
}

type TemplateIntegerValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateIntegerValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) ToTemplateIntegerValueWhenUnsetConfigurationOutput() TemplateIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) ToTemplateIntegerValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutput() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateIntegerValueWhenUnsetConfiguration) *TemplateIntegerValueWhenUnsetConfiguration {
		return &v
	}).(TemplateIntegerValueWhenUnsetConfigurationPtrOutput)
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateIntegerValueWhenUnsetConfiguration) *float64 { return v.CustomValue }).(pulumi.Float64PtrOutput)
}

func (o TemplateIntegerValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v TemplateIntegerValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateIntegerValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateIntegerValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateIntegerValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateIntegerValueWhenUnsetConfigurationPtrOutput) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutput() TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateIntegerValueWhenUnsetConfigurationPtrOutput) ToTemplateIntegerValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateIntegerValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateIntegerValueWhenUnsetConfigurationPtrOutput) Elem() TemplateIntegerValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *TemplateIntegerValueWhenUnsetConfiguration) TemplateIntegerValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateIntegerValueWhenUnsetConfiguration
		return ret
	}).(TemplateIntegerValueWhenUnsetConfigurationOutput)
}

func (o TemplateIntegerValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateIntegerValueWhenUnsetConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateIntegerValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *TemplateIntegerValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateItemsLimitConfiguration struct {
	ItemsLimit      *float64                 `pulumi:"itemsLimit"`
	OtherCategories *TemplateOtherCategories `pulumi:"otherCategories"`
}

// TemplateItemsLimitConfigurationInput is an input type that accepts TemplateItemsLimitConfigurationArgs and TemplateItemsLimitConfigurationOutput values.
// You can construct a concrete instance of `TemplateItemsLimitConfigurationInput` via:
//
//	TemplateItemsLimitConfigurationArgs{...}
type TemplateItemsLimitConfigurationInput interface {
	pulumi.Input

	ToTemplateItemsLimitConfigurationOutput() TemplateItemsLimitConfigurationOutput
	ToTemplateItemsLimitConfigurationOutputWithContext(context.Context) TemplateItemsLimitConfigurationOutput
}

type TemplateItemsLimitConfigurationArgs struct {
	ItemsLimit      pulumi.Float64PtrInput          `pulumi:"itemsLimit"`
	OtherCategories TemplateOtherCategoriesPtrInput `pulumi:"otherCategories"`
}

func (TemplateItemsLimitConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateItemsLimitConfiguration)(nil)).Elem()
}

func (i TemplateItemsLimitConfigurationArgs) ToTemplateItemsLimitConfigurationOutput() TemplateItemsLimitConfigurationOutput {
	return i.ToTemplateItemsLimitConfigurationOutputWithContext(context.Background())
}

func (i TemplateItemsLimitConfigurationArgs) ToTemplateItemsLimitConfigurationOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateItemsLimitConfigurationOutput)
}

func (i TemplateItemsLimitConfigurationArgs) ToTemplateItemsLimitConfigurationPtrOutput() TemplateItemsLimitConfigurationPtrOutput {
	return i.ToTemplateItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateItemsLimitConfigurationArgs) ToTemplateItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateItemsLimitConfigurationOutput).ToTemplateItemsLimitConfigurationPtrOutputWithContext(ctx)
}

// TemplateItemsLimitConfigurationPtrInput is an input type that accepts TemplateItemsLimitConfigurationArgs, TemplateItemsLimitConfigurationPtr and TemplateItemsLimitConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateItemsLimitConfigurationPtrInput` via:
//
//	        TemplateItemsLimitConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateItemsLimitConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateItemsLimitConfigurationPtrOutput() TemplateItemsLimitConfigurationPtrOutput
	ToTemplateItemsLimitConfigurationPtrOutputWithContext(context.Context) TemplateItemsLimitConfigurationPtrOutput
}

type templateItemsLimitConfigurationPtrType TemplateItemsLimitConfigurationArgs

func TemplateItemsLimitConfigurationPtr(v *TemplateItemsLimitConfigurationArgs) TemplateItemsLimitConfigurationPtrInput {
	return (*templateItemsLimitConfigurationPtrType)(v)
}

func (*templateItemsLimitConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateItemsLimitConfiguration)(nil)).Elem()
}

func (i *templateItemsLimitConfigurationPtrType) ToTemplateItemsLimitConfigurationPtrOutput() TemplateItemsLimitConfigurationPtrOutput {
	return i.ToTemplateItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateItemsLimitConfigurationPtrType) ToTemplateItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateItemsLimitConfigurationPtrOutput)
}

type TemplateItemsLimitConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateItemsLimitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateItemsLimitConfiguration)(nil)).Elem()
}

func (o TemplateItemsLimitConfigurationOutput) ToTemplateItemsLimitConfigurationOutput() TemplateItemsLimitConfigurationOutput {
	return o
}

func (o TemplateItemsLimitConfigurationOutput) ToTemplateItemsLimitConfigurationOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationOutput {
	return o
}

func (o TemplateItemsLimitConfigurationOutput) ToTemplateItemsLimitConfigurationPtrOutput() TemplateItemsLimitConfigurationPtrOutput {
	return o.ToTemplateItemsLimitConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateItemsLimitConfigurationOutput) ToTemplateItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateItemsLimitConfiguration) *TemplateItemsLimitConfiguration {
		return &v
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateItemsLimitConfigurationOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateItemsLimitConfiguration) *float64 { return v.ItemsLimit }).(pulumi.Float64PtrOutput)
}

func (o TemplateItemsLimitConfigurationOutput) OtherCategories() TemplateOtherCategoriesPtrOutput {
	return o.ApplyT(func(v TemplateItemsLimitConfiguration) *TemplateOtherCategories { return v.OtherCategories }).(TemplateOtherCategoriesPtrOutput)
}

type TemplateItemsLimitConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateItemsLimitConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateItemsLimitConfiguration)(nil)).Elem()
}

func (o TemplateItemsLimitConfigurationPtrOutput) ToTemplateItemsLimitConfigurationPtrOutput() TemplateItemsLimitConfigurationPtrOutput {
	return o
}

func (o TemplateItemsLimitConfigurationPtrOutput) ToTemplateItemsLimitConfigurationPtrOutputWithContext(ctx context.Context) TemplateItemsLimitConfigurationPtrOutput {
	return o
}

func (o TemplateItemsLimitConfigurationPtrOutput) Elem() TemplateItemsLimitConfigurationOutput {
	return o.ApplyT(func(v *TemplateItemsLimitConfiguration) TemplateItemsLimitConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateItemsLimitConfiguration
		return ret
	}).(TemplateItemsLimitConfigurationOutput)
}

func (o TemplateItemsLimitConfigurationPtrOutput) ItemsLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateItemsLimitConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.ItemsLimit
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateItemsLimitConfigurationPtrOutput) OtherCategories() TemplateOtherCategoriesPtrOutput {
	return o.ApplyT(func(v *TemplateItemsLimitConfiguration) *TemplateOtherCategories {
		if v == nil {
			return nil
		}
		return v.OtherCategories
	}).(TemplateOtherCategoriesPtrOutput)
}

type TemplateKpiActualValueConditionalFormatting struct {
	Icon      *TemplateConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateKpiActualValueConditionalFormattingInput is an input type that accepts TemplateKpiActualValueConditionalFormattingArgs and TemplateKpiActualValueConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateKpiActualValueConditionalFormattingInput` via:
//
//	TemplateKpiActualValueConditionalFormattingArgs{...}
type TemplateKpiActualValueConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateKpiActualValueConditionalFormattingOutput() TemplateKpiActualValueConditionalFormattingOutput
	ToTemplateKpiActualValueConditionalFormattingOutputWithContext(context.Context) TemplateKpiActualValueConditionalFormattingOutput
}

type TemplateKpiActualValueConditionalFormattingArgs struct {
	Icon      TemplateConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateKpiActualValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiActualValueConditionalFormatting)(nil)).Elem()
}

func (i TemplateKpiActualValueConditionalFormattingArgs) ToTemplateKpiActualValueConditionalFormattingOutput() TemplateKpiActualValueConditionalFormattingOutput {
	return i.ToTemplateKpiActualValueConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateKpiActualValueConditionalFormattingArgs) ToTemplateKpiActualValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiActualValueConditionalFormattingOutput)
}

func (i TemplateKpiActualValueConditionalFormattingArgs) ToTemplateKpiActualValueConditionalFormattingPtrOutput() TemplateKpiActualValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateKpiActualValueConditionalFormattingArgs) ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiActualValueConditionalFormattingOutput).ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateKpiActualValueConditionalFormattingPtrInput is an input type that accepts TemplateKpiActualValueConditionalFormattingArgs, TemplateKpiActualValueConditionalFormattingPtr and TemplateKpiActualValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateKpiActualValueConditionalFormattingPtrInput` via:
//
//	        TemplateKpiActualValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiActualValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateKpiActualValueConditionalFormattingPtrOutput() TemplateKpiActualValueConditionalFormattingPtrOutput
	ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(context.Context) TemplateKpiActualValueConditionalFormattingPtrOutput
}

type templateKpiActualValueConditionalFormattingPtrType TemplateKpiActualValueConditionalFormattingArgs

func TemplateKpiActualValueConditionalFormattingPtr(v *TemplateKpiActualValueConditionalFormattingArgs) TemplateKpiActualValueConditionalFormattingPtrInput {
	return (*templateKpiActualValueConditionalFormattingPtrType)(v)
}

func (*templateKpiActualValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiActualValueConditionalFormatting)(nil)).Elem()
}

func (i *templateKpiActualValueConditionalFormattingPtrType) ToTemplateKpiActualValueConditionalFormattingPtrOutput() TemplateKpiActualValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateKpiActualValueConditionalFormattingPtrType) ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiActualValueConditionalFormattingPtrOutput)
}

type TemplateKpiActualValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateKpiActualValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiActualValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiActualValueConditionalFormattingOutput) ToTemplateKpiActualValueConditionalFormattingOutput() TemplateKpiActualValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiActualValueConditionalFormattingOutput) ToTemplateKpiActualValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiActualValueConditionalFormattingOutput) ToTemplateKpiActualValueConditionalFormattingPtrOutput() TemplateKpiActualValueConditionalFormattingPtrOutput {
	return o.ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateKpiActualValueConditionalFormattingOutput) ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiActualValueConditionalFormatting) *TemplateKpiActualValueConditionalFormatting {
		return &v
	}).(TemplateKpiActualValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiActualValueConditionalFormattingOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v TemplateKpiActualValueConditionalFormatting) *TemplateConditionalFormattingIcon { return v.Icon }).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiActualValueConditionalFormattingOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateKpiActualValueConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiActualValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiActualValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiActualValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiActualValueConditionalFormattingPtrOutput) ToTemplateKpiActualValueConditionalFormattingPtrOutput() TemplateKpiActualValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiActualValueConditionalFormattingPtrOutput) ToTemplateKpiActualValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiActualValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiActualValueConditionalFormattingPtrOutput) Elem() TemplateKpiActualValueConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateKpiActualValueConditionalFormatting) TemplateKpiActualValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateKpiActualValueConditionalFormatting
		return ret
	}).(TemplateKpiActualValueConditionalFormattingOutput)
}

func (o TemplateKpiActualValueConditionalFormattingPtrOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *TemplateKpiActualValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiActualValueConditionalFormattingPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateKpiActualValueConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiComparisonValueConditionalFormatting struct {
	Icon      *TemplateConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateKpiComparisonValueConditionalFormattingInput is an input type that accepts TemplateKpiComparisonValueConditionalFormattingArgs and TemplateKpiComparisonValueConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateKpiComparisonValueConditionalFormattingInput` via:
//
//	TemplateKpiComparisonValueConditionalFormattingArgs{...}
type TemplateKpiComparisonValueConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateKpiComparisonValueConditionalFormattingOutput() TemplateKpiComparisonValueConditionalFormattingOutput
	ToTemplateKpiComparisonValueConditionalFormattingOutputWithContext(context.Context) TemplateKpiComparisonValueConditionalFormattingOutput
}

type TemplateKpiComparisonValueConditionalFormattingArgs struct {
	Icon      TemplateConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateKpiComparisonValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiComparisonValueConditionalFormatting)(nil)).Elem()
}

func (i TemplateKpiComparisonValueConditionalFormattingArgs) ToTemplateKpiComparisonValueConditionalFormattingOutput() TemplateKpiComparisonValueConditionalFormattingOutput {
	return i.ToTemplateKpiComparisonValueConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateKpiComparisonValueConditionalFormattingArgs) ToTemplateKpiComparisonValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiComparisonValueConditionalFormattingOutput)
}

func (i TemplateKpiComparisonValueConditionalFormattingArgs) ToTemplateKpiComparisonValueConditionalFormattingPtrOutput() TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateKpiComparisonValueConditionalFormattingArgs) ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiComparisonValueConditionalFormattingOutput).ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateKpiComparisonValueConditionalFormattingPtrInput is an input type that accepts TemplateKpiComparisonValueConditionalFormattingArgs, TemplateKpiComparisonValueConditionalFormattingPtr and TemplateKpiComparisonValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateKpiComparisonValueConditionalFormattingPtrInput` via:
//
//	        TemplateKpiComparisonValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiComparisonValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateKpiComparisonValueConditionalFormattingPtrOutput() TemplateKpiComparisonValueConditionalFormattingPtrOutput
	ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(context.Context) TemplateKpiComparisonValueConditionalFormattingPtrOutput
}

type templateKpiComparisonValueConditionalFormattingPtrType TemplateKpiComparisonValueConditionalFormattingArgs

func TemplateKpiComparisonValueConditionalFormattingPtr(v *TemplateKpiComparisonValueConditionalFormattingArgs) TemplateKpiComparisonValueConditionalFormattingPtrInput {
	return (*templateKpiComparisonValueConditionalFormattingPtrType)(v)
}

func (*templateKpiComparisonValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiComparisonValueConditionalFormatting)(nil)).Elem()
}

func (i *templateKpiComparisonValueConditionalFormattingPtrType) ToTemplateKpiComparisonValueConditionalFormattingPtrOutput() TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateKpiComparisonValueConditionalFormattingPtrType) ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiComparisonValueConditionalFormattingPtrOutput)
}

type TemplateKpiComparisonValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateKpiComparisonValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiComparisonValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) ToTemplateKpiComparisonValueConditionalFormattingOutput() TemplateKpiComparisonValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) ToTemplateKpiComparisonValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) ToTemplateKpiComparisonValueConditionalFormattingPtrOutput() TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return o.ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiComparisonValueConditionalFormatting) *TemplateKpiComparisonValueConditionalFormatting {
		return &v
	}).(TemplateKpiComparisonValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v TemplateKpiComparisonValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiComparisonValueConditionalFormattingOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateKpiComparisonValueConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiComparisonValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiComparisonValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiComparisonValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiComparisonValueConditionalFormattingPtrOutput) ToTemplateKpiComparisonValueConditionalFormattingPtrOutput() TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiComparisonValueConditionalFormattingPtrOutput) ToTemplateKpiComparisonValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiComparisonValueConditionalFormattingPtrOutput) Elem() TemplateKpiComparisonValueConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateKpiComparisonValueConditionalFormatting) TemplateKpiComparisonValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateKpiComparisonValueConditionalFormatting
		return ret
	}).(TemplateKpiComparisonValueConditionalFormattingOutput)
}

func (o TemplateKpiComparisonValueConditionalFormattingPtrOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *TemplateKpiComparisonValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiComparisonValueConditionalFormattingPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateKpiComparisonValueConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiConditionalFormatting struct {
	ConditionalFormattingOptions []TemplateKpiConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// TemplateKpiConditionalFormattingInput is an input type that accepts TemplateKpiConditionalFormattingArgs and TemplateKpiConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateKpiConditionalFormattingInput` via:
//
//	TemplateKpiConditionalFormattingArgs{...}
type TemplateKpiConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateKpiConditionalFormattingOutput() TemplateKpiConditionalFormattingOutput
	ToTemplateKpiConditionalFormattingOutputWithContext(context.Context) TemplateKpiConditionalFormattingOutput
}

type TemplateKpiConditionalFormattingArgs struct {
	ConditionalFormattingOptions TemplateKpiConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (TemplateKpiConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConditionalFormatting)(nil)).Elem()
}

func (i TemplateKpiConditionalFormattingArgs) ToTemplateKpiConditionalFormattingOutput() TemplateKpiConditionalFormattingOutput {
	return i.ToTemplateKpiConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateKpiConditionalFormattingArgs) ToTemplateKpiConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConditionalFormattingOutput)
}

func (i TemplateKpiConditionalFormattingArgs) ToTemplateKpiConditionalFormattingPtrOutput() TemplateKpiConditionalFormattingPtrOutput {
	return i.ToTemplateKpiConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateKpiConditionalFormattingArgs) ToTemplateKpiConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConditionalFormattingOutput).ToTemplateKpiConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateKpiConditionalFormattingPtrInput is an input type that accepts TemplateKpiConditionalFormattingArgs, TemplateKpiConditionalFormattingPtr and TemplateKpiConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateKpiConditionalFormattingPtrInput` via:
//
//	        TemplateKpiConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateKpiConditionalFormattingPtrOutput() TemplateKpiConditionalFormattingPtrOutput
	ToTemplateKpiConditionalFormattingPtrOutputWithContext(context.Context) TemplateKpiConditionalFormattingPtrOutput
}

type templateKpiConditionalFormattingPtrType TemplateKpiConditionalFormattingArgs

func TemplateKpiConditionalFormattingPtr(v *TemplateKpiConditionalFormattingArgs) TemplateKpiConditionalFormattingPtrInput {
	return (*templateKpiConditionalFormattingPtrType)(v)
}

func (*templateKpiConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiConditionalFormatting)(nil)).Elem()
}

func (i *templateKpiConditionalFormattingPtrType) ToTemplateKpiConditionalFormattingPtrOutput() TemplateKpiConditionalFormattingPtrOutput {
	return i.ToTemplateKpiConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateKpiConditionalFormattingPtrType) ToTemplateKpiConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConditionalFormattingPtrOutput)
}

type TemplateKpiConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateKpiConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiConditionalFormattingOutput) ToTemplateKpiConditionalFormattingOutput() TemplateKpiConditionalFormattingOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOutput) ToTemplateKpiConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOutput) ToTemplateKpiConditionalFormattingPtrOutput() TemplateKpiConditionalFormattingPtrOutput {
	return o.ToTemplateKpiConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateKpiConditionalFormattingOutput) ToTemplateKpiConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiConditionalFormatting) *TemplateKpiConditionalFormatting {
		return &v
	}).(TemplateKpiConditionalFormattingPtrOutput)
}

func (o TemplateKpiConditionalFormattingOutput) ConditionalFormattingOptions() TemplateKpiConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v TemplateKpiConditionalFormatting) []TemplateKpiConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(TemplateKpiConditionalFormattingOptionArrayOutput)
}

type TemplateKpiConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiConditionalFormattingPtrOutput) ToTemplateKpiConditionalFormattingPtrOutput() TemplateKpiConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiConditionalFormattingPtrOutput) ToTemplateKpiConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiConditionalFormattingPtrOutput) Elem() TemplateKpiConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateKpiConditionalFormatting) TemplateKpiConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateKpiConditionalFormatting
		return ret
	}).(TemplateKpiConditionalFormattingOutput)
}

func (o TemplateKpiConditionalFormattingPtrOutput) ConditionalFormattingOptions() TemplateKpiConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *TemplateKpiConditionalFormatting) []TemplateKpiConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(TemplateKpiConditionalFormattingOptionArrayOutput)
}

type TemplateKpiConditionalFormattingOption struct {
	ActualValue     *TemplateKpiActualValueConditionalFormatting     `pulumi:"actualValue"`
	ComparisonValue *TemplateKpiComparisonValueConditionalFormatting `pulumi:"comparisonValue"`
	PrimaryValue    *TemplateKpiPrimaryValueConditionalFormatting    `pulumi:"primaryValue"`
	ProgressBar     *TemplateKpiProgressBarConditionalFormatting     `pulumi:"progressBar"`
}

// TemplateKpiConditionalFormattingOptionInput is an input type that accepts TemplateKpiConditionalFormattingOptionArgs and TemplateKpiConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `TemplateKpiConditionalFormattingOptionInput` via:
//
//	TemplateKpiConditionalFormattingOptionArgs{...}
type TemplateKpiConditionalFormattingOptionInput interface {
	pulumi.Input

	ToTemplateKpiConditionalFormattingOptionOutput() TemplateKpiConditionalFormattingOptionOutput
	ToTemplateKpiConditionalFormattingOptionOutputWithContext(context.Context) TemplateKpiConditionalFormattingOptionOutput
}

type TemplateKpiConditionalFormattingOptionArgs struct {
	ActualValue     TemplateKpiActualValueConditionalFormattingPtrInput     `pulumi:"actualValue"`
	ComparisonValue TemplateKpiComparisonValueConditionalFormattingPtrInput `pulumi:"comparisonValue"`
	PrimaryValue    TemplateKpiPrimaryValueConditionalFormattingPtrInput    `pulumi:"primaryValue"`
	ProgressBar     TemplateKpiProgressBarConditionalFormattingPtrInput     `pulumi:"progressBar"`
}

func (TemplateKpiConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateKpiConditionalFormattingOptionArgs) ToTemplateKpiConditionalFormattingOptionOutput() TemplateKpiConditionalFormattingOptionOutput {
	return i.ToTemplateKpiConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i TemplateKpiConditionalFormattingOptionArgs) ToTemplateKpiConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConditionalFormattingOptionOutput)
}

// TemplateKpiConditionalFormattingOptionArrayInput is an input type that accepts TemplateKpiConditionalFormattingOptionArray and TemplateKpiConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `TemplateKpiConditionalFormattingOptionArrayInput` via:
//
//	TemplateKpiConditionalFormattingOptionArray{ TemplateKpiConditionalFormattingOptionArgs{...} }
type TemplateKpiConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToTemplateKpiConditionalFormattingOptionArrayOutput() TemplateKpiConditionalFormattingOptionArrayOutput
	ToTemplateKpiConditionalFormattingOptionArrayOutputWithContext(context.Context) TemplateKpiConditionalFormattingOptionArrayOutput
}

type TemplateKpiConditionalFormattingOptionArray []TemplateKpiConditionalFormattingOptionInput

func (TemplateKpiConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateKpiConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateKpiConditionalFormattingOptionArray) ToTemplateKpiConditionalFormattingOptionArrayOutput() TemplateKpiConditionalFormattingOptionArrayOutput {
	return i.ToTemplateKpiConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i TemplateKpiConditionalFormattingOptionArray) ToTemplateKpiConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConditionalFormattingOptionArrayOutput)
}

type TemplateKpiConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (TemplateKpiConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateKpiConditionalFormattingOptionOutput) ToTemplateKpiConditionalFormattingOptionOutput() TemplateKpiConditionalFormattingOptionOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOptionOutput) ToTemplateKpiConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOptionOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOptionOutput) ActualValue() TemplateKpiActualValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateKpiConditionalFormattingOption) *TemplateKpiActualValueConditionalFormatting {
		return v.ActualValue
	}).(TemplateKpiActualValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiConditionalFormattingOptionOutput) ComparisonValue() TemplateKpiComparisonValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateKpiConditionalFormattingOption) *TemplateKpiComparisonValueConditionalFormatting {
		return v.ComparisonValue
	}).(TemplateKpiComparisonValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiConditionalFormattingOptionOutput) PrimaryValue() TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateKpiConditionalFormattingOption) *TemplateKpiPrimaryValueConditionalFormatting {
		return v.PrimaryValue
	}).(TemplateKpiPrimaryValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiConditionalFormattingOptionOutput) ProgressBar() TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateKpiConditionalFormattingOption) *TemplateKpiProgressBarConditionalFormatting {
		return v.ProgressBar
	}).(TemplateKpiProgressBarConditionalFormattingPtrOutput)
}

type TemplateKpiConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateKpiConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateKpiConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateKpiConditionalFormattingOptionArrayOutput) ToTemplateKpiConditionalFormattingOptionArrayOutput() TemplateKpiConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOptionArrayOutput) ToTemplateKpiConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateKpiConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateKpiConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) TemplateKpiConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateKpiConditionalFormattingOption {
		return vs[0].([]TemplateKpiConditionalFormattingOption)[vs[1].(int)]
	}).(TemplateKpiConditionalFormattingOptionOutput)
}

type TemplateKpiConfiguration struct {
	FieldWells        *TemplateKpiFieldWells        `pulumi:"fieldWells"`
	KpiOptions        *TemplateKpiOptions           `pulumi:"kpiOptions"`
	SortConfiguration *TemplateKpiSortConfiguration `pulumi:"sortConfiguration"`
}

// TemplateKpiConfigurationInput is an input type that accepts TemplateKpiConfigurationArgs and TemplateKpiConfigurationOutput values.
// You can construct a concrete instance of `TemplateKpiConfigurationInput` via:
//
//	TemplateKpiConfigurationArgs{...}
type TemplateKpiConfigurationInput interface {
	pulumi.Input

	ToTemplateKpiConfigurationOutput() TemplateKpiConfigurationOutput
	ToTemplateKpiConfigurationOutputWithContext(context.Context) TemplateKpiConfigurationOutput
}

type TemplateKpiConfigurationArgs struct {
	FieldWells        TemplateKpiFieldWellsPtrInput        `pulumi:"fieldWells"`
	KpiOptions        TemplateKpiOptionsPtrInput           `pulumi:"kpiOptions"`
	SortConfiguration TemplateKpiSortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (TemplateKpiConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConfiguration)(nil)).Elem()
}

func (i TemplateKpiConfigurationArgs) ToTemplateKpiConfigurationOutput() TemplateKpiConfigurationOutput {
	return i.ToTemplateKpiConfigurationOutputWithContext(context.Background())
}

func (i TemplateKpiConfigurationArgs) ToTemplateKpiConfigurationOutputWithContext(ctx context.Context) TemplateKpiConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConfigurationOutput)
}

func (i TemplateKpiConfigurationArgs) ToTemplateKpiConfigurationPtrOutput() TemplateKpiConfigurationPtrOutput {
	return i.ToTemplateKpiConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateKpiConfigurationArgs) ToTemplateKpiConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConfigurationOutput).ToTemplateKpiConfigurationPtrOutputWithContext(ctx)
}

// TemplateKpiConfigurationPtrInput is an input type that accepts TemplateKpiConfigurationArgs, TemplateKpiConfigurationPtr and TemplateKpiConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateKpiConfigurationPtrInput` via:
//
//	        TemplateKpiConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateKpiConfigurationPtrOutput() TemplateKpiConfigurationPtrOutput
	ToTemplateKpiConfigurationPtrOutputWithContext(context.Context) TemplateKpiConfigurationPtrOutput
}

type templateKpiConfigurationPtrType TemplateKpiConfigurationArgs

func TemplateKpiConfigurationPtr(v *TemplateKpiConfigurationArgs) TemplateKpiConfigurationPtrInput {
	return (*templateKpiConfigurationPtrType)(v)
}

func (*templateKpiConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiConfiguration)(nil)).Elem()
}

func (i *templateKpiConfigurationPtrType) ToTemplateKpiConfigurationPtrOutput() TemplateKpiConfigurationPtrOutput {
	return i.ToTemplateKpiConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateKpiConfigurationPtrType) ToTemplateKpiConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiConfigurationPtrOutput)
}

type TemplateKpiConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateKpiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiConfiguration)(nil)).Elem()
}

func (o TemplateKpiConfigurationOutput) ToTemplateKpiConfigurationOutput() TemplateKpiConfigurationOutput {
	return o
}

func (o TemplateKpiConfigurationOutput) ToTemplateKpiConfigurationOutputWithContext(ctx context.Context) TemplateKpiConfigurationOutput {
	return o
}

func (o TemplateKpiConfigurationOutput) ToTemplateKpiConfigurationPtrOutput() TemplateKpiConfigurationPtrOutput {
	return o.ToTemplateKpiConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateKpiConfigurationOutput) ToTemplateKpiConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiConfiguration) *TemplateKpiConfiguration {
		return &v
	}).(TemplateKpiConfigurationPtrOutput)
}

func (o TemplateKpiConfigurationOutput) FieldWells() TemplateKpiFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateKpiConfiguration) *TemplateKpiFieldWells { return v.FieldWells }).(TemplateKpiFieldWellsPtrOutput)
}

func (o TemplateKpiConfigurationOutput) KpiOptions() TemplateKpiOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiConfiguration) *TemplateKpiOptions { return v.KpiOptions }).(TemplateKpiOptionsPtrOutput)
}

func (o TemplateKpiConfigurationOutput) SortConfiguration() TemplateKpiSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateKpiConfiguration) *TemplateKpiSortConfiguration { return v.SortConfiguration }).(TemplateKpiSortConfigurationPtrOutput)
}

type TemplateKpiConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiConfiguration)(nil)).Elem()
}

func (o TemplateKpiConfigurationPtrOutput) ToTemplateKpiConfigurationPtrOutput() TemplateKpiConfigurationPtrOutput {
	return o
}

func (o TemplateKpiConfigurationPtrOutput) ToTemplateKpiConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiConfigurationPtrOutput {
	return o
}

func (o TemplateKpiConfigurationPtrOutput) Elem() TemplateKpiConfigurationOutput {
	return o.ApplyT(func(v *TemplateKpiConfiguration) TemplateKpiConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateKpiConfiguration
		return ret
	}).(TemplateKpiConfigurationOutput)
}

func (o TemplateKpiConfigurationPtrOutput) FieldWells() TemplateKpiFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiConfiguration) *TemplateKpiFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateKpiFieldWellsPtrOutput)
}

func (o TemplateKpiConfigurationPtrOutput) KpiOptions() TemplateKpiOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiConfiguration) *TemplateKpiOptions {
		if v == nil {
			return nil
		}
		return v.KpiOptions
	}).(TemplateKpiOptionsPtrOutput)
}

func (o TemplateKpiConfigurationPtrOutput) SortConfiguration() TemplateKpiSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateKpiConfiguration) *TemplateKpiSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateKpiSortConfigurationPtrOutput)
}

type TemplateKpiFieldWells struct {
	TargetValues []TemplateMeasureField   `pulumi:"targetValues"`
	TrendGroups  []TemplateDimensionField `pulumi:"trendGroups"`
	Values       []TemplateMeasureField   `pulumi:"values"`
}

// TemplateKpiFieldWellsInput is an input type that accepts TemplateKpiFieldWellsArgs and TemplateKpiFieldWellsOutput values.
// You can construct a concrete instance of `TemplateKpiFieldWellsInput` via:
//
//	TemplateKpiFieldWellsArgs{...}
type TemplateKpiFieldWellsInput interface {
	pulumi.Input

	ToTemplateKpiFieldWellsOutput() TemplateKpiFieldWellsOutput
	ToTemplateKpiFieldWellsOutputWithContext(context.Context) TemplateKpiFieldWellsOutput
}

type TemplateKpiFieldWellsArgs struct {
	TargetValues TemplateMeasureFieldArrayInput   `pulumi:"targetValues"`
	TrendGroups  TemplateDimensionFieldArrayInput `pulumi:"trendGroups"`
	Values       TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateKpiFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiFieldWells)(nil)).Elem()
}

func (i TemplateKpiFieldWellsArgs) ToTemplateKpiFieldWellsOutput() TemplateKpiFieldWellsOutput {
	return i.ToTemplateKpiFieldWellsOutputWithContext(context.Background())
}

func (i TemplateKpiFieldWellsArgs) ToTemplateKpiFieldWellsOutputWithContext(ctx context.Context) TemplateKpiFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiFieldWellsOutput)
}

func (i TemplateKpiFieldWellsArgs) ToTemplateKpiFieldWellsPtrOutput() TemplateKpiFieldWellsPtrOutput {
	return i.ToTemplateKpiFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateKpiFieldWellsArgs) ToTemplateKpiFieldWellsPtrOutputWithContext(ctx context.Context) TemplateKpiFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiFieldWellsOutput).ToTemplateKpiFieldWellsPtrOutputWithContext(ctx)
}

// TemplateKpiFieldWellsPtrInput is an input type that accepts TemplateKpiFieldWellsArgs, TemplateKpiFieldWellsPtr and TemplateKpiFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateKpiFieldWellsPtrInput` via:
//
//	        TemplateKpiFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateKpiFieldWellsPtrOutput() TemplateKpiFieldWellsPtrOutput
	ToTemplateKpiFieldWellsPtrOutputWithContext(context.Context) TemplateKpiFieldWellsPtrOutput
}

type templateKpiFieldWellsPtrType TemplateKpiFieldWellsArgs

func TemplateKpiFieldWellsPtr(v *TemplateKpiFieldWellsArgs) TemplateKpiFieldWellsPtrInput {
	return (*templateKpiFieldWellsPtrType)(v)
}

func (*templateKpiFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiFieldWells)(nil)).Elem()
}

func (i *templateKpiFieldWellsPtrType) ToTemplateKpiFieldWellsPtrOutput() TemplateKpiFieldWellsPtrOutput {
	return i.ToTemplateKpiFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateKpiFieldWellsPtrType) ToTemplateKpiFieldWellsPtrOutputWithContext(ctx context.Context) TemplateKpiFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiFieldWellsPtrOutput)
}

type TemplateKpiFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateKpiFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiFieldWells)(nil)).Elem()
}

func (o TemplateKpiFieldWellsOutput) ToTemplateKpiFieldWellsOutput() TemplateKpiFieldWellsOutput {
	return o
}

func (o TemplateKpiFieldWellsOutput) ToTemplateKpiFieldWellsOutputWithContext(ctx context.Context) TemplateKpiFieldWellsOutput {
	return o
}

func (o TemplateKpiFieldWellsOutput) ToTemplateKpiFieldWellsPtrOutput() TemplateKpiFieldWellsPtrOutput {
	return o.ToTemplateKpiFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateKpiFieldWellsOutput) ToTemplateKpiFieldWellsPtrOutputWithContext(ctx context.Context) TemplateKpiFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiFieldWells) *TemplateKpiFieldWells {
		return &v
	}).(TemplateKpiFieldWellsPtrOutput)
}

func (o TemplateKpiFieldWellsOutput) TargetValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateKpiFieldWells) []TemplateMeasureField { return v.TargetValues }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateKpiFieldWellsOutput) TrendGroups() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateKpiFieldWells) []TemplateDimensionField { return v.TrendGroups }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateKpiFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateKpiFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateKpiFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiFieldWells)(nil)).Elem()
}

func (o TemplateKpiFieldWellsPtrOutput) ToTemplateKpiFieldWellsPtrOutput() TemplateKpiFieldWellsPtrOutput {
	return o
}

func (o TemplateKpiFieldWellsPtrOutput) ToTemplateKpiFieldWellsPtrOutputWithContext(ctx context.Context) TemplateKpiFieldWellsPtrOutput {
	return o
}

func (o TemplateKpiFieldWellsPtrOutput) Elem() TemplateKpiFieldWellsOutput {
	return o.ApplyT(func(v *TemplateKpiFieldWells) TemplateKpiFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateKpiFieldWells
		return ret
	}).(TemplateKpiFieldWellsOutput)
}

func (o TemplateKpiFieldWellsPtrOutput) TargetValues() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateKpiFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValues
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateKpiFieldWellsPtrOutput) TrendGroups() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateKpiFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.TrendGroups
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateKpiFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateKpiFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateKpiOptions struct {
	Comparison                      *TemplateComparisonConfiguration `pulumi:"comparison"`
	PrimaryValueDisplayType         *TemplatePrimaryValueDisplayType `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   *TemplateFontConfiguration       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     *TemplateProgressBarOptions      `pulumi:"progressBar"`
	SecondaryValue                  *TemplateSecondaryValueOptions   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration *TemplateFontConfiguration       `pulumi:"secondaryValueFontConfiguration"`
	Sparkline                       *TemplateKpiSparklineOptions     `pulumi:"sparkline"`
	TrendArrows                     *TemplateTrendArrowOptions       `pulumi:"trendArrows"`
	VisualLayoutOptions             *TemplateKpiVisualLayoutOptions  `pulumi:"visualLayoutOptions"`
}

// TemplateKpiOptionsInput is an input type that accepts TemplateKpiOptionsArgs and TemplateKpiOptionsOutput values.
// You can construct a concrete instance of `TemplateKpiOptionsInput` via:
//
//	TemplateKpiOptionsArgs{...}
type TemplateKpiOptionsInput interface {
	pulumi.Input

	ToTemplateKpiOptionsOutput() TemplateKpiOptionsOutput
	ToTemplateKpiOptionsOutputWithContext(context.Context) TemplateKpiOptionsOutput
}

type TemplateKpiOptionsArgs struct {
	Comparison                      TemplateComparisonConfigurationPtrInput `pulumi:"comparison"`
	PrimaryValueDisplayType         TemplatePrimaryValueDisplayTypePtrInput `pulumi:"primaryValueDisplayType"`
	PrimaryValueFontConfiguration   TemplateFontConfigurationPtrInput       `pulumi:"primaryValueFontConfiguration"`
	ProgressBar                     TemplateProgressBarOptionsPtrInput      `pulumi:"progressBar"`
	SecondaryValue                  TemplateSecondaryValueOptionsPtrInput   `pulumi:"secondaryValue"`
	SecondaryValueFontConfiguration TemplateFontConfigurationPtrInput       `pulumi:"secondaryValueFontConfiguration"`
	Sparkline                       TemplateKpiSparklineOptionsPtrInput     `pulumi:"sparkline"`
	TrendArrows                     TemplateTrendArrowOptionsPtrInput       `pulumi:"trendArrows"`
	VisualLayoutOptions             TemplateKpiVisualLayoutOptionsPtrInput  `pulumi:"visualLayoutOptions"`
}

func (TemplateKpiOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiOptions)(nil)).Elem()
}

func (i TemplateKpiOptionsArgs) ToTemplateKpiOptionsOutput() TemplateKpiOptionsOutput {
	return i.ToTemplateKpiOptionsOutputWithContext(context.Background())
}

func (i TemplateKpiOptionsArgs) ToTemplateKpiOptionsOutputWithContext(ctx context.Context) TemplateKpiOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiOptionsOutput)
}

func (i TemplateKpiOptionsArgs) ToTemplateKpiOptionsPtrOutput() TemplateKpiOptionsPtrOutput {
	return i.ToTemplateKpiOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateKpiOptionsArgs) ToTemplateKpiOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiOptionsOutput).ToTemplateKpiOptionsPtrOutputWithContext(ctx)
}

// TemplateKpiOptionsPtrInput is an input type that accepts TemplateKpiOptionsArgs, TemplateKpiOptionsPtr and TemplateKpiOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateKpiOptionsPtrInput` via:
//
//	        TemplateKpiOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiOptionsPtrInput interface {
	pulumi.Input

	ToTemplateKpiOptionsPtrOutput() TemplateKpiOptionsPtrOutput
	ToTemplateKpiOptionsPtrOutputWithContext(context.Context) TemplateKpiOptionsPtrOutput
}

type templateKpiOptionsPtrType TemplateKpiOptionsArgs

func TemplateKpiOptionsPtr(v *TemplateKpiOptionsArgs) TemplateKpiOptionsPtrInput {
	return (*templateKpiOptionsPtrType)(v)
}

func (*templateKpiOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiOptions)(nil)).Elem()
}

func (i *templateKpiOptionsPtrType) ToTemplateKpiOptionsPtrOutput() TemplateKpiOptionsPtrOutput {
	return i.ToTemplateKpiOptionsPtrOutputWithContext(context.Background())
}

func (i *templateKpiOptionsPtrType) ToTemplateKpiOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiOptionsPtrOutput)
}

type TemplateKpiOptionsOutput struct{ *pulumi.OutputState }

func (TemplateKpiOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiOptions)(nil)).Elem()
}

func (o TemplateKpiOptionsOutput) ToTemplateKpiOptionsOutput() TemplateKpiOptionsOutput {
	return o
}

func (o TemplateKpiOptionsOutput) ToTemplateKpiOptionsOutputWithContext(ctx context.Context) TemplateKpiOptionsOutput {
	return o
}

func (o TemplateKpiOptionsOutput) ToTemplateKpiOptionsPtrOutput() TemplateKpiOptionsPtrOutput {
	return o.ToTemplateKpiOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateKpiOptionsOutput) ToTemplateKpiOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiOptions) *TemplateKpiOptions {
		return &v
	}).(TemplateKpiOptionsPtrOutput)
}

func (o TemplateKpiOptionsOutput) Comparison() TemplateComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateComparisonConfiguration { return v.Comparison }).(TemplateComparisonConfigurationPtrOutput)
}

func (o TemplateKpiOptionsOutput) PrimaryValueDisplayType() TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplatePrimaryValueDisplayType { return v.PrimaryValueDisplayType }).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (o TemplateKpiOptionsOutput) PrimaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateFontConfiguration { return v.PrimaryValueFontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateKpiOptionsOutput) ProgressBar() TemplateProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateProgressBarOptions { return v.ProgressBar }).(TemplateProgressBarOptionsPtrOutput)
}

func (o TemplateKpiOptionsOutput) SecondaryValue() TemplateSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateSecondaryValueOptions { return v.SecondaryValue }).(TemplateSecondaryValueOptionsPtrOutput)
}

func (o TemplateKpiOptionsOutput) SecondaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateFontConfiguration { return v.SecondaryValueFontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateKpiOptionsOutput) Sparkline() TemplateKpiSparklineOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateKpiSparklineOptions { return v.Sparkline }).(TemplateKpiSparklineOptionsPtrOutput)
}

func (o TemplateKpiOptionsOutput) TrendArrows() TemplateTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateTrendArrowOptions { return v.TrendArrows }).(TemplateTrendArrowOptionsPtrOutput)
}

func (o TemplateKpiOptionsOutput) VisualLayoutOptions() TemplateKpiVisualLayoutOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiOptions) *TemplateKpiVisualLayoutOptions { return v.VisualLayoutOptions }).(TemplateKpiVisualLayoutOptionsPtrOutput)
}

type TemplateKpiOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiOptions)(nil)).Elem()
}

func (o TemplateKpiOptionsPtrOutput) ToTemplateKpiOptionsPtrOutput() TemplateKpiOptionsPtrOutput {
	return o
}

func (o TemplateKpiOptionsPtrOutput) ToTemplateKpiOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiOptionsPtrOutput {
	return o
}

func (o TemplateKpiOptionsPtrOutput) Elem() TemplateKpiOptionsOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) TemplateKpiOptions {
		if v != nil {
			return *v
		}
		var ret TemplateKpiOptions
		return ret
	}).(TemplateKpiOptionsOutput)
}

func (o TemplateKpiOptionsPtrOutput) Comparison() TemplateComparisonConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateComparisonConfiguration {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(TemplateComparisonConfigurationPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) PrimaryValueDisplayType() TemplatePrimaryValueDisplayTypePtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplatePrimaryValueDisplayType {
		if v == nil {
			return nil
		}
		return v.PrimaryValueDisplayType
	}).(TemplatePrimaryValueDisplayTypePtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) PrimaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.PrimaryValueFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) ProgressBar() TemplateProgressBarOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateProgressBarOptions {
		if v == nil {
			return nil
		}
		return v.ProgressBar
	}).(TemplateProgressBarOptionsPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) SecondaryValue() TemplateSecondaryValueOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateSecondaryValueOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryValue
	}).(TemplateSecondaryValueOptionsPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) SecondaryValueFontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.SecondaryValueFontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) Sparkline() TemplateKpiSparklineOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateKpiSparklineOptions {
		if v == nil {
			return nil
		}
		return v.Sparkline
	}).(TemplateKpiSparklineOptionsPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) TrendArrows() TemplateTrendArrowOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateTrendArrowOptions {
		if v == nil {
			return nil
		}
		return v.TrendArrows
	}).(TemplateTrendArrowOptionsPtrOutput)
}

func (o TemplateKpiOptionsPtrOutput) VisualLayoutOptions() TemplateKpiVisualLayoutOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiOptions) *TemplateKpiVisualLayoutOptions {
		if v == nil {
			return nil
		}
		return v.VisualLayoutOptions
	}).(TemplateKpiVisualLayoutOptionsPtrOutput)
}

type TemplateKpiPrimaryValueConditionalFormatting struct {
	Icon      *TemplateConditionalFormattingIcon  `pulumi:"icon"`
	TextColor *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateKpiPrimaryValueConditionalFormattingInput is an input type that accepts TemplateKpiPrimaryValueConditionalFormattingArgs and TemplateKpiPrimaryValueConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateKpiPrimaryValueConditionalFormattingInput` via:
//
//	TemplateKpiPrimaryValueConditionalFormattingArgs{...}
type TemplateKpiPrimaryValueConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateKpiPrimaryValueConditionalFormattingOutput() TemplateKpiPrimaryValueConditionalFormattingOutput
	ToTemplateKpiPrimaryValueConditionalFormattingOutputWithContext(context.Context) TemplateKpiPrimaryValueConditionalFormattingOutput
}

type TemplateKpiPrimaryValueConditionalFormattingArgs struct {
	Icon      TemplateConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateKpiPrimaryValueConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i TemplateKpiPrimaryValueConditionalFormattingArgs) ToTemplateKpiPrimaryValueConditionalFormattingOutput() TemplateKpiPrimaryValueConditionalFormattingOutput {
	return i.ToTemplateKpiPrimaryValueConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateKpiPrimaryValueConditionalFormattingArgs) ToTemplateKpiPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiPrimaryValueConditionalFormattingOutput)
}

func (i TemplateKpiPrimaryValueConditionalFormattingArgs) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutput() TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateKpiPrimaryValueConditionalFormattingArgs) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiPrimaryValueConditionalFormattingOutput).ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateKpiPrimaryValueConditionalFormattingPtrInput is an input type that accepts TemplateKpiPrimaryValueConditionalFormattingArgs, TemplateKpiPrimaryValueConditionalFormattingPtr and TemplateKpiPrimaryValueConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateKpiPrimaryValueConditionalFormattingPtrInput` via:
//
//	        TemplateKpiPrimaryValueConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiPrimaryValueConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateKpiPrimaryValueConditionalFormattingPtrOutput() TemplateKpiPrimaryValueConditionalFormattingPtrOutput
	ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(context.Context) TemplateKpiPrimaryValueConditionalFormattingPtrOutput
}

type templateKpiPrimaryValueConditionalFormattingPtrType TemplateKpiPrimaryValueConditionalFormattingArgs

func TemplateKpiPrimaryValueConditionalFormattingPtr(v *TemplateKpiPrimaryValueConditionalFormattingArgs) TemplateKpiPrimaryValueConditionalFormattingPtrInput {
	return (*templateKpiPrimaryValueConditionalFormattingPtrType)(v)
}

func (*templateKpiPrimaryValueConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (i *templateKpiPrimaryValueConditionalFormattingPtrType) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutput() TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return i.ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateKpiPrimaryValueConditionalFormattingPtrType) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiPrimaryValueConditionalFormattingPtrOutput)
}

type TemplateKpiPrimaryValueConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateKpiPrimaryValueConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) ToTemplateKpiPrimaryValueConditionalFormattingOutput() TemplateKpiPrimaryValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) ToTemplateKpiPrimaryValueConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingOutput {
	return o
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutput() TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return o.ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiPrimaryValueConditionalFormatting) *TemplateKpiPrimaryValueConditionalFormatting {
		return &v
	}).(TemplateKpiPrimaryValueConditionalFormattingPtrOutput)
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v TemplateKpiPrimaryValueConditionalFormatting) *TemplateConditionalFormattingIcon { return v.Icon }).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiPrimaryValueConditionalFormattingOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateKpiPrimaryValueConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiPrimaryValueConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiPrimaryValueConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiPrimaryValueConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiPrimaryValueConditionalFormattingPtrOutput) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutput() TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiPrimaryValueConditionalFormattingPtrOutput) ToTemplateKpiPrimaryValueConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiPrimaryValueConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiPrimaryValueConditionalFormattingPtrOutput) Elem() TemplateKpiPrimaryValueConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateKpiPrimaryValueConditionalFormatting) TemplateKpiPrimaryValueConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateKpiPrimaryValueConditionalFormatting
		return ret
	}).(TemplateKpiPrimaryValueConditionalFormattingOutput)
}

func (o TemplateKpiPrimaryValueConditionalFormattingPtrOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *TemplateKpiPrimaryValueConditionalFormatting) *TemplateConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateKpiPrimaryValueConditionalFormattingPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateKpiPrimaryValueConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiProgressBarConditionalFormatting struct {
	ForegroundColor *TemplateConditionalFormattingColor `pulumi:"foregroundColor"`
}

// TemplateKpiProgressBarConditionalFormattingInput is an input type that accepts TemplateKpiProgressBarConditionalFormattingArgs and TemplateKpiProgressBarConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateKpiProgressBarConditionalFormattingInput` via:
//
//	TemplateKpiProgressBarConditionalFormattingArgs{...}
type TemplateKpiProgressBarConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateKpiProgressBarConditionalFormattingOutput() TemplateKpiProgressBarConditionalFormattingOutput
	ToTemplateKpiProgressBarConditionalFormattingOutputWithContext(context.Context) TemplateKpiProgressBarConditionalFormattingOutput
}

type TemplateKpiProgressBarConditionalFormattingArgs struct {
	ForegroundColor TemplateConditionalFormattingColorPtrInput `pulumi:"foregroundColor"`
}

func (TemplateKpiProgressBarConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiProgressBarConditionalFormatting)(nil)).Elem()
}

func (i TemplateKpiProgressBarConditionalFormattingArgs) ToTemplateKpiProgressBarConditionalFormattingOutput() TemplateKpiProgressBarConditionalFormattingOutput {
	return i.ToTemplateKpiProgressBarConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateKpiProgressBarConditionalFormattingArgs) ToTemplateKpiProgressBarConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiProgressBarConditionalFormattingOutput)
}

func (i TemplateKpiProgressBarConditionalFormattingArgs) ToTemplateKpiProgressBarConditionalFormattingPtrOutput() TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return i.ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateKpiProgressBarConditionalFormattingArgs) ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiProgressBarConditionalFormattingOutput).ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateKpiProgressBarConditionalFormattingPtrInput is an input type that accepts TemplateKpiProgressBarConditionalFormattingArgs, TemplateKpiProgressBarConditionalFormattingPtr and TemplateKpiProgressBarConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateKpiProgressBarConditionalFormattingPtrInput` via:
//
//	        TemplateKpiProgressBarConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiProgressBarConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateKpiProgressBarConditionalFormattingPtrOutput() TemplateKpiProgressBarConditionalFormattingPtrOutput
	ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(context.Context) TemplateKpiProgressBarConditionalFormattingPtrOutput
}

type templateKpiProgressBarConditionalFormattingPtrType TemplateKpiProgressBarConditionalFormattingArgs

func TemplateKpiProgressBarConditionalFormattingPtr(v *TemplateKpiProgressBarConditionalFormattingArgs) TemplateKpiProgressBarConditionalFormattingPtrInput {
	return (*templateKpiProgressBarConditionalFormattingPtrType)(v)
}

func (*templateKpiProgressBarConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiProgressBarConditionalFormatting)(nil)).Elem()
}

func (i *templateKpiProgressBarConditionalFormattingPtrType) ToTemplateKpiProgressBarConditionalFormattingPtrOutput() TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return i.ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateKpiProgressBarConditionalFormattingPtrType) ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiProgressBarConditionalFormattingPtrOutput)
}

type TemplateKpiProgressBarConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateKpiProgressBarConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiProgressBarConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiProgressBarConditionalFormattingOutput) ToTemplateKpiProgressBarConditionalFormattingOutput() TemplateKpiProgressBarConditionalFormattingOutput {
	return o
}

func (o TemplateKpiProgressBarConditionalFormattingOutput) ToTemplateKpiProgressBarConditionalFormattingOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingOutput {
	return o
}

func (o TemplateKpiProgressBarConditionalFormattingOutput) ToTemplateKpiProgressBarConditionalFormattingPtrOutput() TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return o.ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateKpiProgressBarConditionalFormattingOutput) ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiProgressBarConditionalFormatting) *TemplateKpiProgressBarConditionalFormatting {
		return &v
	}).(TemplateKpiProgressBarConditionalFormattingPtrOutput)
}

func (o TemplateKpiProgressBarConditionalFormattingOutput) ForegroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateKpiProgressBarConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.ForegroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiProgressBarConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiProgressBarConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiProgressBarConditionalFormatting)(nil)).Elem()
}

func (o TemplateKpiProgressBarConditionalFormattingPtrOutput) ToTemplateKpiProgressBarConditionalFormattingPtrOutput() TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiProgressBarConditionalFormattingPtrOutput) ToTemplateKpiProgressBarConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateKpiProgressBarConditionalFormattingPtrOutput {
	return o
}

func (o TemplateKpiProgressBarConditionalFormattingPtrOutput) Elem() TemplateKpiProgressBarConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateKpiProgressBarConditionalFormatting) TemplateKpiProgressBarConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateKpiProgressBarConditionalFormatting
		return ret
	}).(TemplateKpiProgressBarConditionalFormattingOutput)
}

func (o TemplateKpiProgressBarConditionalFormattingPtrOutput) ForegroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateKpiProgressBarConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.ForegroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateKpiSortConfiguration struct {
	TrendGroupSort []TemplateFieldSortOptions `pulumi:"trendGroupSort"`
}

// TemplateKpiSortConfigurationInput is an input type that accepts TemplateKpiSortConfigurationArgs and TemplateKpiSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateKpiSortConfigurationInput` via:
//
//	TemplateKpiSortConfigurationArgs{...}
type TemplateKpiSortConfigurationInput interface {
	pulumi.Input

	ToTemplateKpiSortConfigurationOutput() TemplateKpiSortConfigurationOutput
	ToTemplateKpiSortConfigurationOutputWithContext(context.Context) TemplateKpiSortConfigurationOutput
}

type TemplateKpiSortConfigurationArgs struct {
	TrendGroupSort TemplateFieldSortOptionsArrayInput `pulumi:"trendGroupSort"`
}

func (TemplateKpiSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSortConfiguration)(nil)).Elem()
}

func (i TemplateKpiSortConfigurationArgs) ToTemplateKpiSortConfigurationOutput() TemplateKpiSortConfigurationOutput {
	return i.ToTemplateKpiSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateKpiSortConfigurationArgs) ToTemplateKpiSortConfigurationOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSortConfigurationOutput)
}

func (i TemplateKpiSortConfigurationArgs) ToTemplateKpiSortConfigurationPtrOutput() TemplateKpiSortConfigurationPtrOutput {
	return i.ToTemplateKpiSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateKpiSortConfigurationArgs) ToTemplateKpiSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSortConfigurationOutput).ToTemplateKpiSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateKpiSortConfigurationPtrInput is an input type that accepts TemplateKpiSortConfigurationArgs, TemplateKpiSortConfigurationPtr and TemplateKpiSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateKpiSortConfigurationPtrInput` via:
//
//	        TemplateKpiSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateKpiSortConfigurationPtrOutput() TemplateKpiSortConfigurationPtrOutput
	ToTemplateKpiSortConfigurationPtrOutputWithContext(context.Context) TemplateKpiSortConfigurationPtrOutput
}

type templateKpiSortConfigurationPtrType TemplateKpiSortConfigurationArgs

func TemplateKpiSortConfigurationPtr(v *TemplateKpiSortConfigurationArgs) TemplateKpiSortConfigurationPtrInput {
	return (*templateKpiSortConfigurationPtrType)(v)
}

func (*templateKpiSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiSortConfiguration)(nil)).Elem()
}

func (i *templateKpiSortConfigurationPtrType) ToTemplateKpiSortConfigurationPtrOutput() TemplateKpiSortConfigurationPtrOutput {
	return i.ToTemplateKpiSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateKpiSortConfigurationPtrType) ToTemplateKpiSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSortConfigurationPtrOutput)
}

type TemplateKpiSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateKpiSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSortConfiguration)(nil)).Elem()
}

func (o TemplateKpiSortConfigurationOutput) ToTemplateKpiSortConfigurationOutput() TemplateKpiSortConfigurationOutput {
	return o
}

func (o TemplateKpiSortConfigurationOutput) ToTemplateKpiSortConfigurationOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationOutput {
	return o
}

func (o TemplateKpiSortConfigurationOutput) ToTemplateKpiSortConfigurationPtrOutput() TemplateKpiSortConfigurationPtrOutput {
	return o.ToTemplateKpiSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateKpiSortConfigurationOutput) ToTemplateKpiSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiSortConfiguration) *TemplateKpiSortConfiguration {
		return &v
	}).(TemplateKpiSortConfigurationPtrOutput)
}

func (o TemplateKpiSortConfigurationOutput) TrendGroupSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateKpiSortConfiguration) []TemplateFieldSortOptions { return v.TrendGroupSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateKpiSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiSortConfiguration)(nil)).Elem()
}

func (o TemplateKpiSortConfigurationPtrOutput) ToTemplateKpiSortConfigurationPtrOutput() TemplateKpiSortConfigurationPtrOutput {
	return o
}

func (o TemplateKpiSortConfigurationPtrOutput) ToTemplateKpiSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateKpiSortConfigurationPtrOutput {
	return o
}

func (o TemplateKpiSortConfigurationPtrOutput) Elem() TemplateKpiSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateKpiSortConfiguration) TemplateKpiSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateKpiSortConfiguration
		return ret
	}).(TemplateKpiSortConfigurationOutput)
}

func (o TemplateKpiSortConfigurationPtrOutput) TrendGroupSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateKpiSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TrendGroupSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateKpiSparklineOptions struct {
	Color             *string                  `pulumi:"color"`
	TooltipVisibility *TemplateVisibility      `pulumi:"tooltipVisibility"`
	Type              TemplateKpiSparklineType `pulumi:"type"`
	Visibility        *TemplateVisibility      `pulumi:"visibility"`
}

// TemplateKpiSparklineOptionsInput is an input type that accepts TemplateKpiSparklineOptionsArgs and TemplateKpiSparklineOptionsOutput values.
// You can construct a concrete instance of `TemplateKpiSparklineOptionsInput` via:
//
//	TemplateKpiSparklineOptionsArgs{...}
type TemplateKpiSparklineOptionsInput interface {
	pulumi.Input

	ToTemplateKpiSparklineOptionsOutput() TemplateKpiSparklineOptionsOutput
	ToTemplateKpiSparklineOptionsOutputWithContext(context.Context) TemplateKpiSparklineOptionsOutput
}

type TemplateKpiSparklineOptionsArgs struct {
	Color             pulumi.StringPtrInput         `pulumi:"color"`
	TooltipVisibility TemplateVisibilityPtrInput    `pulumi:"tooltipVisibility"`
	Type              TemplateKpiSparklineTypeInput `pulumi:"type"`
	Visibility        TemplateVisibilityPtrInput    `pulumi:"visibility"`
}

func (TemplateKpiSparklineOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSparklineOptions)(nil)).Elem()
}

func (i TemplateKpiSparklineOptionsArgs) ToTemplateKpiSparklineOptionsOutput() TemplateKpiSparklineOptionsOutput {
	return i.ToTemplateKpiSparklineOptionsOutputWithContext(context.Background())
}

func (i TemplateKpiSparklineOptionsArgs) ToTemplateKpiSparklineOptionsOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSparklineOptionsOutput)
}

func (i TemplateKpiSparklineOptionsArgs) ToTemplateKpiSparklineOptionsPtrOutput() TemplateKpiSparklineOptionsPtrOutput {
	return i.ToTemplateKpiSparklineOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateKpiSparklineOptionsArgs) ToTemplateKpiSparklineOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSparklineOptionsOutput).ToTemplateKpiSparklineOptionsPtrOutputWithContext(ctx)
}

// TemplateKpiSparklineOptionsPtrInput is an input type that accepts TemplateKpiSparklineOptionsArgs, TemplateKpiSparklineOptionsPtr and TemplateKpiSparklineOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateKpiSparklineOptionsPtrInput` via:
//
//	        TemplateKpiSparklineOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiSparklineOptionsPtrInput interface {
	pulumi.Input

	ToTemplateKpiSparklineOptionsPtrOutput() TemplateKpiSparklineOptionsPtrOutput
	ToTemplateKpiSparklineOptionsPtrOutputWithContext(context.Context) TemplateKpiSparklineOptionsPtrOutput
}

type templateKpiSparklineOptionsPtrType TemplateKpiSparklineOptionsArgs

func TemplateKpiSparklineOptionsPtr(v *TemplateKpiSparklineOptionsArgs) TemplateKpiSparklineOptionsPtrInput {
	return (*templateKpiSparklineOptionsPtrType)(v)
}

func (*templateKpiSparklineOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiSparklineOptions)(nil)).Elem()
}

func (i *templateKpiSparklineOptionsPtrType) ToTemplateKpiSparklineOptionsPtrOutput() TemplateKpiSparklineOptionsPtrOutput {
	return i.ToTemplateKpiSparklineOptionsPtrOutputWithContext(context.Background())
}

func (i *templateKpiSparklineOptionsPtrType) ToTemplateKpiSparklineOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiSparklineOptionsPtrOutput)
}

type TemplateKpiSparklineOptionsOutput struct{ *pulumi.OutputState }

func (TemplateKpiSparklineOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiSparklineOptions)(nil)).Elem()
}

func (o TemplateKpiSparklineOptionsOutput) ToTemplateKpiSparklineOptionsOutput() TemplateKpiSparklineOptionsOutput {
	return o
}

func (o TemplateKpiSparklineOptionsOutput) ToTemplateKpiSparklineOptionsOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsOutput {
	return o
}

func (o TemplateKpiSparklineOptionsOutput) ToTemplateKpiSparklineOptionsPtrOutput() TemplateKpiSparklineOptionsPtrOutput {
	return o.ToTemplateKpiSparklineOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateKpiSparklineOptionsOutput) ToTemplateKpiSparklineOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiSparklineOptions) *TemplateKpiSparklineOptions {
		return &v
	}).(TemplateKpiSparklineOptionsPtrOutput)
}

func (o TemplateKpiSparklineOptionsOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateKpiSparklineOptions) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateKpiSparklineOptionsOutput) TooltipVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateKpiSparklineOptions) *TemplateVisibility { return v.TooltipVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateKpiSparklineOptionsOutput) Type() TemplateKpiSparklineTypeOutput {
	return o.ApplyT(func(v TemplateKpiSparklineOptions) TemplateKpiSparklineType { return v.Type }).(TemplateKpiSparklineTypeOutput)
}

func (o TemplateKpiSparklineOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateKpiSparklineOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateKpiSparklineOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiSparklineOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiSparklineOptions)(nil)).Elem()
}

func (o TemplateKpiSparklineOptionsPtrOutput) ToTemplateKpiSparklineOptionsPtrOutput() TemplateKpiSparklineOptionsPtrOutput {
	return o
}

func (o TemplateKpiSparklineOptionsPtrOutput) ToTemplateKpiSparklineOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiSparklineOptionsPtrOutput {
	return o
}

func (o TemplateKpiSparklineOptionsPtrOutput) Elem() TemplateKpiSparklineOptionsOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineOptions) TemplateKpiSparklineOptions {
		if v != nil {
			return *v
		}
		var ret TemplateKpiSparklineOptions
		return ret
	}).(TemplateKpiSparklineOptionsOutput)
}

func (o TemplateKpiSparklineOptionsPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineOptions) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateKpiSparklineOptionsPtrOutput) TooltipVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TooltipVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateKpiSparklineOptionsPtrOutput) Type() TemplateKpiSparklineTypePtrOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineOptions) *TemplateKpiSparklineType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(TemplateKpiSparklineTypePtrOutput)
}

func (o TemplateKpiSparklineOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateKpiSparklineOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateKpiVisual struct {
	Actions               []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *TemplateKpiConfiguration           `pulumi:"chartConfiguration"`
	ColumnHierarchies     []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	ConditionalFormatting *TemplateKpiConditionalFormatting   `pulumi:"conditionalFormatting"`
	Subtitle              *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                              `pulumi:"visualId"`
}

// TemplateKpiVisualInput is an input type that accepts TemplateKpiVisualArgs and TemplateKpiVisualOutput values.
// You can construct a concrete instance of `TemplateKpiVisualInput` via:
//
//	TemplateKpiVisualArgs{...}
type TemplateKpiVisualInput interface {
	pulumi.Input

	ToTemplateKpiVisualOutput() TemplateKpiVisualOutput
	ToTemplateKpiVisualOutputWithContext(context.Context) TemplateKpiVisualOutput
}

type TemplateKpiVisualArgs struct {
	Actions               TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    TemplateKpiConfigurationPtrInput           `pulumi:"chartConfiguration"`
	ColumnHierarchies     TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	ConditionalFormatting TemplateKpiConditionalFormattingPtrInput   `pulumi:"conditionalFormatting"`
	Subtitle              TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateKpiVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisual)(nil)).Elem()
}

func (i TemplateKpiVisualArgs) ToTemplateKpiVisualOutput() TemplateKpiVisualOutput {
	return i.ToTemplateKpiVisualOutputWithContext(context.Background())
}

func (i TemplateKpiVisualArgs) ToTemplateKpiVisualOutputWithContext(ctx context.Context) TemplateKpiVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualOutput)
}

func (i TemplateKpiVisualArgs) ToTemplateKpiVisualPtrOutput() TemplateKpiVisualPtrOutput {
	return i.ToTemplateKpiVisualPtrOutputWithContext(context.Background())
}

func (i TemplateKpiVisualArgs) ToTemplateKpiVisualPtrOutputWithContext(ctx context.Context) TemplateKpiVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualOutput).ToTemplateKpiVisualPtrOutputWithContext(ctx)
}

// TemplateKpiVisualPtrInput is an input type that accepts TemplateKpiVisualArgs, TemplateKpiVisualPtr and TemplateKpiVisualPtrOutput values.
// You can construct a concrete instance of `TemplateKpiVisualPtrInput` via:
//
//	        TemplateKpiVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiVisualPtrInput interface {
	pulumi.Input

	ToTemplateKpiVisualPtrOutput() TemplateKpiVisualPtrOutput
	ToTemplateKpiVisualPtrOutputWithContext(context.Context) TemplateKpiVisualPtrOutput
}

type templateKpiVisualPtrType TemplateKpiVisualArgs

func TemplateKpiVisualPtr(v *TemplateKpiVisualArgs) TemplateKpiVisualPtrInput {
	return (*templateKpiVisualPtrType)(v)
}

func (*templateKpiVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisual)(nil)).Elem()
}

func (i *templateKpiVisualPtrType) ToTemplateKpiVisualPtrOutput() TemplateKpiVisualPtrOutput {
	return i.ToTemplateKpiVisualPtrOutputWithContext(context.Background())
}

func (i *templateKpiVisualPtrType) ToTemplateKpiVisualPtrOutputWithContext(ctx context.Context) TemplateKpiVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualPtrOutput)
}

type TemplateKpiVisualOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisual)(nil)).Elem()
}

func (o TemplateKpiVisualOutput) ToTemplateKpiVisualOutput() TemplateKpiVisualOutput {
	return o
}

func (o TemplateKpiVisualOutput) ToTemplateKpiVisualOutputWithContext(ctx context.Context) TemplateKpiVisualOutput {
	return o
}

func (o TemplateKpiVisualOutput) ToTemplateKpiVisualPtrOutput() TemplateKpiVisualPtrOutput {
	return o.ToTemplateKpiVisualPtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualOutput) ToTemplateKpiVisualPtrOutputWithContext(ctx context.Context) TemplateKpiVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiVisual) *TemplateKpiVisual {
		return &v
	}).(TemplateKpiVisualPtrOutput)
}

func (o TemplateKpiVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateKpiVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateKpiVisualOutput) ChartConfiguration() TemplateKpiConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateKpiVisual) *TemplateKpiConfiguration { return v.ChartConfiguration }).(TemplateKpiConfigurationPtrOutput)
}

func (o TemplateKpiVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateKpiVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateKpiVisualOutput) ConditionalFormatting() TemplateKpiConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateKpiVisual) *TemplateKpiConditionalFormatting { return v.ConditionalFormatting }).(TemplateKpiConditionalFormattingPtrOutput)
}

func (o TemplateKpiVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateKpiVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateKpiVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateKpiVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateKpiVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateKpiVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisual)(nil)).Elem()
}

func (o TemplateKpiVisualPtrOutput) ToTemplateKpiVisualPtrOutput() TemplateKpiVisualPtrOutput {
	return o
}

func (o TemplateKpiVisualPtrOutput) ToTemplateKpiVisualPtrOutputWithContext(ctx context.Context) TemplateKpiVisualPtrOutput {
	return o
}

func (o TemplateKpiVisualPtrOutput) Elem() TemplateKpiVisualOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) TemplateKpiVisual {
		if v != nil {
			return *v
		}
		var ret TemplateKpiVisual
		return ret
	}).(TemplateKpiVisualOutput)
}

func (o TemplateKpiVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateKpiVisualPtrOutput) ChartConfiguration() TemplateKpiConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) *TemplateKpiConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateKpiConfigurationPtrOutput)
}

func (o TemplateKpiVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateKpiVisualPtrOutput) ConditionalFormatting() TemplateKpiConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) *TemplateKpiConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(TemplateKpiConditionalFormattingPtrOutput)
}

func (o TemplateKpiVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateKpiVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateKpiVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateKpiVisualLayoutOptions struct {
	StandardLayout *TemplateKpiVisualStandardLayout `pulumi:"standardLayout"`
}

// TemplateKpiVisualLayoutOptionsInput is an input type that accepts TemplateKpiVisualLayoutOptionsArgs and TemplateKpiVisualLayoutOptionsOutput values.
// You can construct a concrete instance of `TemplateKpiVisualLayoutOptionsInput` via:
//
//	TemplateKpiVisualLayoutOptionsArgs{...}
type TemplateKpiVisualLayoutOptionsInput interface {
	pulumi.Input

	ToTemplateKpiVisualLayoutOptionsOutput() TemplateKpiVisualLayoutOptionsOutput
	ToTemplateKpiVisualLayoutOptionsOutputWithContext(context.Context) TemplateKpiVisualLayoutOptionsOutput
}

type TemplateKpiVisualLayoutOptionsArgs struct {
	StandardLayout TemplateKpiVisualStandardLayoutPtrInput `pulumi:"standardLayout"`
}

func (TemplateKpiVisualLayoutOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualLayoutOptions)(nil)).Elem()
}

func (i TemplateKpiVisualLayoutOptionsArgs) ToTemplateKpiVisualLayoutOptionsOutput() TemplateKpiVisualLayoutOptionsOutput {
	return i.ToTemplateKpiVisualLayoutOptionsOutputWithContext(context.Background())
}

func (i TemplateKpiVisualLayoutOptionsArgs) ToTemplateKpiVisualLayoutOptionsOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualLayoutOptionsOutput)
}

func (i TemplateKpiVisualLayoutOptionsArgs) ToTemplateKpiVisualLayoutOptionsPtrOutput() TemplateKpiVisualLayoutOptionsPtrOutput {
	return i.ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateKpiVisualLayoutOptionsArgs) ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualLayoutOptionsOutput).ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(ctx)
}

// TemplateKpiVisualLayoutOptionsPtrInput is an input type that accepts TemplateKpiVisualLayoutOptionsArgs, TemplateKpiVisualLayoutOptionsPtr and TemplateKpiVisualLayoutOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateKpiVisualLayoutOptionsPtrInput` via:
//
//	        TemplateKpiVisualLayoutOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiVisualLayoutOptionsPtrInput interface {
	pulumi.Input

	ToTemplateKpiVisualLayoutOptionsPtrOutput() TemplateKpiVisualLayoutOptionsPtrOutput
	ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(context.Context) TemplateKpiVisualLayoutOptionsPtrOutput
}

type templateKpiVisualLayoutOptionsPtrType TemplateKpiVisualLayoutOptionsArgs

func TemplateKpiVisualLayoutOptionsPtr(v *TemplateKpiVisualLayoutOptionsArgs) TemplateKpiVisualLayoutOptionsPtrInput {
	return (*templateKpiVisualLayoutOptionsPtrType)(v)
}

func (*templateKpiVisualLayoutOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisualLayoutOptions)(nil)).Elem()
}

func (i *templateKpiVisualLayoutOptionsPtrType) ToTemplateKpiVisualLayoutOptionsPtrOutput() TemplateKpiVisualLayoutOptionsPtrOutput {
	return i.ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(context.Background())
}

func (i *templateKpiVisualLayoutOptionsPtrType) ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualLayoutOptionsPtrOutput)
}

type TemplateKpiVisualLayoutOptionsOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualLayoutOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualLayoutOptions)(nil)).Elem()
}

func (o TemplateKpiVisualLayoutOptionsOutput) ToTemplateKpiVisualLayoutOptionsOutput() TemplateKpiVisualLayoutOptionsOutput {
	return o
}

func (o TemplateKpiVisualLayoutOptionsOutput) ToTemplateKpiVisualLayoutOptionsOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsOutput {
	return o
}

func (o TemplateKpiVisualLayoutOptionsOutput) ToTemplateKpiVisualLayoutOptionsPtrOutput() TemplateKpiVisualLayoutOptionsPtrOutput {
	return o.ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualLayoutOptionsOutput) ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiVisualLayoutOptions) *TemplateKpiVisualLayoutOptions {
		return &v
	}).(TemplateKpiVisualLayoutOptionsPtrOutput)
}

func (o TemplateKpiVisualLayoutOptionsOutput) StandardLayout() TemplateKpiVisualStandardLayoutPtrOutput {
	return o.ApplyT(func(v TemplateKpiVisualLayoutOptions) *TemplateKpiVisualStandardLayout { return v.StandardLayout }).(TemplateKpiVisualStandardLayoutPtrOutput)
}

type TemplateKpiVisualLayoutOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualLayoutOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisualLayoutOptions)(nil)).Elem()
}

func (o TemplateKpiVisualLayoutOptionsPtrOutput) ToTemplateKpiVisualLayoutOptionsPtrOutput() TemplateKpiVisualLayoutOptionsPtrOutput {
	return o
}

func (o TemplateKpiVisualLayoutOptionsPtrOutput) ToTemplateKpiVisualLayoutOptionsPtrOutputWithContext(ctx context.Context) TemplateKpiVisualLayoutOptionsPtrOutput {
	return o
}

func (o TemplateKpiVisualLayoutOptionsPtrOutput) Elem() TemplateKpiVisualLayoutOptionsOutput {
	return o.ApplyT(func(v *TemplateKpiVisualLayoutOptions) TemplateKpiVisualLayoutOptions {
		if v != nil {
			return *v
		}
		var ret TemplateKpiVisualLayoutOptions
		return ret
	}).(TemplateKpiVisualLayoutOptionsOutput)
}

func (o TemplateKpiVisualLayoutOptionsPtrOutput) StandardLayout() TemplateKpiVisualStandardLayoutPtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisualLayoutOptions) *TemplateKpiVisualStandardLayout {
		if v == nil {
			return nil
		}
		return v.StandardLayout
	}).(TemplateKpiVisualStandardLayoutPtrOutput)
}

type TemplateKpiVisualStandardLayout struct {
	Type TemplateKpiVisualStandardLayoutType `pulumi:"type"`
}

// TemplateKpiVisualStandardLayoutInput is an input type that accepts TemplateKpiVisualStandardLayoutArgs and TemplateKpiVisualStandardLayoutOutput values.
// You can construct a concrete instance of `TemplateKpiVisualStandardLayoutInput` via:
//
//	TemplateKpiVisualStandardLayoutArgs{...}
type TemplateKpiVisualStandardLayoutInput interface {
	pulumi.Input

	ToTemplateKpiVisualStandardLayoutOutput() TemplateKpiVisualStandardLayoutOutput
	ToTemplateKpiVisualStandardLayoutOutputWithContext(context.Context) TemplateKpiVisualStandardLayoutOutput
}

type TemplateKpiVisualStandardLayoutArgs struct {
	Type TemplateKpiVisualStandardLayoutTypeInput `pulumi:"type"`
}

func (TemplateKpiVisualStandardLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualStandardLayout)(nil)).Elem()
}

func (i TemplateKpiVisualStandardLayoutArgs) ToTemplateKpiVisualStandardLayoutOutput() TemplateKpiVisualStandardLayoutOutput {
	return i.ToTemplateKpiVisualStandardLayoutOutputWithContext(context.Background())
}

func (i TemplateKpiVisualStandardLayoutArgs) ToTemplateKpiVisualStandardLayoutOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualStandardLayoutOutput)
}

func (i TemplateKpiVisualStandardLayoutArgs) ToTemplateKpiVisualStandardLayoutPtrOutput() TemplateKpiVisualStandardLayoutPtrOutput {
	return i.ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(context.Background())
}

func (i TemplateKpiVisualStandardLayoutArgs) ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualStandardLayoutOutput).ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(ctx)
}

// TemplateKpiVisualStandardLayoutPtrInput is an input type that accepts TemplateKpiVisualStandardLayoutArgs, TemplateKpiVisualStandardLayoutPtr and TemplateKpiVisualStandardLayoutPtrOutput values.
// You can construct a concrete instance of `TemplateKpiVisualStandardLayoutPtrInput` via:
//
//	        TemplateKpiVisualStandardLayoutArgs{...}
//
//	or:
//
//	        nil
type TemplateKpiVisualStandardLayoutPtrInput interface {
	pulumi.Input

	ToTemplateKpiVisualStandardLayoutPtrOutput() TemplateKpiVisualStandardLayoutPtrOutput
	ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(context.Context) TemplateKpiVisualStandardLayoutPtrOutput
}

type templateKpiVisualStandardLayoutPtrType TemplateKpiVisualStandardLayoutArgs

func TemplateKpiVisualStandardLayoutPtr(v *TemplateKpiVisualStandardLayoutArgs) TemplateKpiVisualStandardLayoutPtrInput {
	return (*templateKpiVisualStandardLayoutPtrType)(v)
}

func (*templateKpiVisualStandardLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisualStandardLayout)(nil)).Elem()
}

func (i *templateKpiVisualStandardLayoutPtrType) ToTemplateKpiVisualStandardLayoutPtrOutput() TemplateKpiVisualStandardLayoutPtrOutput {
	return i.ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(context.Background())
}

func (i *templateKpiVisualStandardLayoutPtrType) ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKpiVisualStandardLayoutPtrOutput)
}

type TemplateKpiVisualStandardLayoutOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualStandardLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKpiVisualStandardLayout)(nil)).Elem()
}

func (o TemplateKpiVisualStandardLayoutOutput) ToTemplateKpiVisualStandardLayoutOutput() TemplateKpiVisualStandardLayoutOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutOutput) ToTemplateKpiVisualStandardLayoutOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutOutput) ToTemplateKpiVisualStandardLayoutPtrOutput() TemplateKpiVisualStandardLayoutPtrOutput {
	return o.ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(context.Background())
}

func (o TemplateKpiVisualStandardLayoutOutput) ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKpiVisualStandardLayout) *TemplateKpiVisualStandardLayout {
		return &v
	}).(TemplateKpiVisualStandardLayoutPtrOutput)
}

func (o TemplateKpiVisualStandardLayoutOutput) Type() TemplateKpiVisualStandardLayoutTypeOutput {
	return o.ApplyT(func(v TemplateKpiVisualStandardLayout) TemplateKpiVisualStandardLayoutType { return v.Type }).(TemplateKpiVisualStandardLayoutTypeOutput)
}

type TemplateKpiVisualStandardLayoutPtrOutput struct{ *pulumi.OutputState }

func (TemplateKpiVisualStandardLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKpiVisualStandardLayout)(nil)).Elem()
}

func (o TemplateKpiVisualStandardLayoutPtrOutput) ToTemplateKpiVisualStandardLayoutPtrOutput() TemplateKpiVisualStandardLayoutPtrOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutPtrOutput) ToTemplateKpiVisualStandardLayoutPtrOutputWithContext(ctx context.Context) TemplateKpiVisualStandardLayoutPtrOutput {
	return o
}

func (o TemplateKpiVisualStandardLayoutPtrOutput) Elem() TemplateKpiVisualStandardLayoutOutput {
	return o.ApplyT(func(v *TemplateKpiVisualStandardLayout) TemplateKpiVisualStandardLayout {
		if v != nil {
			return *v
		}
		var ret TemplateKpiVisualStandardLayout
		return ret
	}).(TemplateKpiVisualStandardLayoutOutput)
}

func (o TemplateKpiVisualStandardLayoutPtrOutput) Type() TemplateKpiVisualStandardLayoutTypePtrOutput {
	return o.ApplyT(func(v *TemplateKpiVisualStandardLayout) *TemplateKpiVisualStandardLayoutType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(TemplateKpiVisualStandardLayoutTypePtrOutput)
}

type TemplateLabelOptions struct {
	CustomLabel       *string                    `pulumi:"customLabel"`
	FontConfiguration *TemplateFontConfiguration `pulumi:"fontConfiguration"`
	Visibility        *TemplateVisibility        `pulumi:"visibility"`
}

// TemplateLabelOptionsInput is an input type that accepts TemplateLabelOptionsArgs and TemplateLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateLabelOptionsInput` via:
//
//	TemplateLabelOptionsArgs{...}
type TemplateLabelOptionsInput interface {
	pulumi.Input

	ToTemplateLabelOptionsOutput() TemplateLabelOptionsOutput
	ToTemplateLabelOptionsOutputWithContext(context.Context) TemplateLabelOptionsOutput
}

type TemplateLabelOptionsArgs struct {
	CustomLabel       pulumi.StringPtrInput             `pulumi:"customLabel"`
	FontConfiguration TemplateFontConfigurationPtrInput `pulumi:"fontConfiguration"`
	Visibility        TemplateVisibilityPtrInput        `pulumi:"visibility"`
}

func (TemplateLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLabelOptions)(nil)).Elem()
}

func (i TemplateLabelOptionsArgs) ToTemplateLabelOptionsOutput() TemplateLabelOptionsOutput {
	return i.ToTemplateLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateLabelOptionsArgs) ToTemplateLabelOptionsOutputWithContext(ctx context.Context) TemplateLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLabelOptionsOutput)
}

func (i TemplateLabelOptionsArgs) ToTemplateLabelOptionsPtrOutput() TemplateLabelOptionsPtrOutput {
	return i.ToTemplateLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateLabelOptionsArgs) ToTemplateLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLabelOptionsOutput).ToTemplateLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateLabelOptionsPtrInput is an input type that accepts TemplateLabelOptionsArgs, TemplateLabelOptionsPtr and TemplateLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateLabelOptionsPtrInput` via:
//
//	        TemplateLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateLabelOptionsPtrOutput() TemplateLabelOptionsPtrOutput
	ToTemplateLabelOptionsPtrOutputWithContext(context.Context) TemplateLabelOptionsPtrOutput
}

type templateLabelOptionsPtrType TemplateLabelOptionsArgs

func TemplateLabelOptionsPtr(v *TemplateLabelOptionsArgs) TemplateLabelOptionsPtrInput {
	return (*templateLabelOptionsPtrType)(v)
}

func (*templateLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLabelOptions)(nil)).Elem()
}

func (i *templateLabelOptionsPtrType) ToTemplateLabelOptionsPtrOutput() TemplateLabelOptionsPtrOutput {
	return i.ToTemplateLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateLabelOptionsPtrType) ToTemplateLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLabelOptionsPtrOutput)
}

type TemplateLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLabelOptions)(nil)).Elem()
}

func (o TemplateLabelOptionsOutput) ToTemplateLabelOptionsOutput() TemplateLabelOptionsOutput {
	return o
}

func (o TemplateLabelOptionsOutput) ToTemplateLabelOptionsOutputWithContext(ctx context.Context) TemplateLabelOptionsOutput {
	return o
}

func (o TemplateLabelOptionsOutput) ToTemplateLabelOptionsPtrOutput() TemplateLabelOptionsPtrOutput {
	return o.ToTemplateLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateLabelOptionsOutput) ToTemplateLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLabelOptions) *TemplateLabelOptions {
		return &v
	}).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateLabelOptionsOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLabelOptions) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLabelOptions)(nil)).Elem()
}

func (o TemplateLabelOptionsPtrOutput) ToTemplateLabelOptionsPtrOutput() TemplateLabelOptionsPtrOutput {
	return o
}

func (o TemplateLabelOptionsPtrOutput) ToTemplateLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateLabelOptionsPtrOutput {
	return o
}

func (o TemplateLabelOptionsPtrOutput) Elem() TemplateLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateLabelOptions) TemplateLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateLabelOptions
		return ret
	}).(TemplateLabelOptionsOutput)
}

func (o TemplateLabelOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o TemplateLabelOptionsPtrOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLabelOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateLayout struct {
	Configuration TemplateLayoutConfiguration `pulumi:"configuration"`
}

// TemplateLayoutInput is an input type that accepts TemplateLayoutArgs and TemplateLayoutOutput values.
// You can construct a concrete instance of `TemplateLayoutInput` via:
//
//	TemplateLayoutArgs{...}
type TemplateLayoutInput interface {
	pulumi.Input

	ToTemplateLayoutOutput() TemplateLayoutOutput
	ToTemplateLayoutOutputWithContext(context.Context) TemplateLayoutOutput
}

type TemplateLayoutArgs struct {
	Configuration TemplateLayoutConfigurationInput `pulumi:"configuration"`
}

func (TemplateLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayout)(nil)).Elem()
}

func (i TemplateLayoutArgs) ToTemplateLayoutOutput() TemplateLayoutOutput {
	return i.ToTemplateLayoutOutputWithContext(context.Background())
}

func (i TemplateLayoutArgs) ToTemplateLayoutOutputWithContext(ctx context.Context) TemplateLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLayoutOutput)
}

// TemplateLayoutArrayInput is an input type that accepts TemplateLayoutArray and TemplateLayoutArrayOutput values.
// You can construct a concrete instance of `TemplateLayoutArrayInput` via:
//
//	TemplateLayoutArray{ TemplateLayoutArgs{...} }
type TemplateLayoutArrayInput interface {
	pulumi.Input

	ToTemplateLayoutArrayOutput() TemplateLayoutArrayOutput
	ToTemplateLayoutArrayOutputWithContext(context.Context) TemplateLayoutArrayOutput
}

type TemplateLayoutArray []TemplateLayoutInput

func (TemplateLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateLayout)(nil)).Elem()
}

func (i TemplateLayoutArray) ToTemplateLayoutArrayOutput() TemplateLayoutArrayOutput {
	return i.ToTemplateLayoutArrayOutputWithContext(context.Background())
}

func (i TemplateLayoutArray) ToTemplateLayoutArrayOutputWithContext(ctx context.Context) TemplateLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLayoutArrayOutput)
}

type TemplateLayoutOutput struct{ *pulumi.OutputState }

func (TemplateLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayout)(nil)).Elem()
}

func (o TemplateLayoutOutput) ToTemplateLayoutOutput() TemplateLayoutOutput {
	return o
}

func (o TemplateLayoutOutput) ToTemplateLayoutOutputWithContext(ctx context.Context) TemplateLayoutOutput {
	return o
}

func (o TemplateLayoutOutput) Configuration() TemplateLayoutConfigurationOutput {
	return o.ApplyT(func(v TemplateLayout) TemplateLayoutConfiguration { return v.Configuration }).(TemplateLayoutConfigurationOutput)
}

type TemplateLayoutArrayOutput struct{ *pulumi.OutputState }

func (TemplateLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateLayout)(nil)).Elem()
}

func (o TemplateLayoutArrayOutput) ToTemplateLayoutArrayOutput() TemplateLayoutArrayOutput {
	return o
}

func (o TemplateLayoutArrayOutput) ToTemplateLayoutArrayOutputWithContext(ctx context.Context) TemplateLayoutArrayOutput {
	return o
}

func (o TemplateLayoutArrayOutput) Index(i pulumi.IntInput) TemplateLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateLayout {
		return vs[0].([]TemplateLayout)[vs[1].(int)]
	}).(TemplateLayoutOutput)
}

type TemplateLayoutConfiguration struct {
	FreeFormLayout     *TemplateFreeFormLayoutConfiguration     `pulumi:"freeFormLayout"`
	GridLayout         *TemplateGridLayoutConfiguration         `pulumi:"gridLayout"`
	SectionBasedLayout *TemplateSectionBasedLayoutConfiguration `pulumi:"sectionBasedLayout"`
}

// TemplateLayoutConfigurationInput is an input type that accepts TemplateLayoutConfigurationArgs and TemplateLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateLayoutConfigurationInput` via:
//
//	TemplateLayoutConfigurationArgs{...}
type TemplateLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateLayoutConfigurationOutput() TemplateLayoutConfigurationOutput
	ToTemplateLayoutConfigurationOutputWithContext(context.Context) TemplateLayoutConfigurationOutput
}

type TemplateLayoutConfigurationArgs struct {
	FreeFormLayout     TemplateFreeFormLayoutConfigurationPtrInput     `pulumi:"freeFormLayout"`
	GridLayout         TemplateGridLayoutConfigurationPtrInput         `pulumi:"gridLayout"`
	SectionBasedLayout TemplateSectionBasedLayoutConfigurationPtrInput `pulumi:"sectionBasedLayout"`
}

func (TemplateLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayoutConfiguration)(nil)).Elem()
}

func (i TemplateLayoutConfigurationArgs) ToTemplateLayoutConfigurationOutput() TemplateLayoutConfigurationOutput {
	return i.ToTemplateLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateLayoutConfigurationArgs) ToTemplateLayoutConfigurationOutputWithContext(ctx context.Context) TemplateLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLayoutConfigurationOutput)
}

type TemplateLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLayoutConfiguration)(nil)).Elem()
}

func (o TemplateLayoutConfigurationOutput) ToTemplateLayoutConfigurationOutput() TemplateLayoutConfigurationOutput {
	return o
}

func (o TemplateLayoutConfigurationOutput) ToTemplateLayoutConfigurationOutputWithContext(ctx context.Context) TemplateLayoutConfigurationOutput {
	return o
}

func (o TemplateLayoutConfigurationOutput) FreeFormLayout() TemplateFreeFormLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLayoutConfiguration) *TemplateFreeFormLayoutConfiguration { return v.FreeFormLayout }).(TemplateFreeFormLayoutConfigurationPtrOutput)
}

func (o TemplateLayoutConfigurationOutput) GridLayout() TemplateGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLayoutConfiguration) *TemplateGridLayoutConfiguration { return v.GridLayout }).(TemplateGridLayoutConfigurationPtrOutput)
}

func (o TemplateLayoutConfigurationOutput) SectionBasedLayout() TemplateSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLayoutConfiguration) *TemplateSectionBasedLayoutConfiguration {
		return v.SectionBasedLayout
	}).(TemplateSectionBasedLayoutConfigurationPtrOutput)
}

type TemplateLegendOptions struct {
	// String based length that is composed of value and unit in px
	Height     *string                 `pulumi:"height"`
	Position   *TemplateLegendPosition `pulumi:"position"`
	Title      *TemplateLabelOptions   `pulumi:"title"`
	Visibility *TemplateVisibility     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// TemplateLegendOptionsInput is an input type that accepts TemplateLegendOptionsArgs and TemplateLegendOptionsOutput values.
// You can construct a concrete instance of `TemplateLegendOptionsInput` via:
//
//	TemplateLegendOptionsArgs{...}
type TemplateLegendOptionsInput interface {
	pulumi.Input

	ToTemplateLegendOptionsOutput() TemplateLegendOptionsOutput
	ToTemplateLegendOptionsOutputWithContext(context.Context) TemplateLegendOptionsOutput
}

type TemplateLegendOptionsArgs struct {
	// String based length that is composed of value and unit in px
	Height     pulumi.StringPtrInput          `pulumi:"height"`
	Position   TemplateLegendPositionPtrInput `pulumi:"position"`
	Title      TemplateLabelOptionsPtrInput   `pulumi:"title"`
	Visibility TemplateVisibilityPtrInput     `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (TemplateLegendOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLegendOptions)(nil)).Elem()
}

func (i TemplateLegendOptionsArgs) ToTemplateLegendOptionsOutput() TemplateLegendOptionsOutput {
	return i.ToTemplateLegendOptionsOutputWithContext(context.Background())
}

func (i TemplateLegendOptionsArgs) ToTemplateLegendOptionsOutputWithContext(ctx context.Context) TemplateLegendOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLegendOptionsOutput)
}

func (i TemplateLegendOptionsArgs) ToTemplateLegendOptionsPtrOutput() TemplateLegendOptionsPtrOutput {
	return i.ToTemplateLegendOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateLegendOptionsArgs) ToTemplateLegendOptionsPtrOutputWithContext(ctx context.Context) TemplateLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLegendOptionsOutput).ToTemplateLegendOptionsPtrOutputWithContext(ctx)
}

// TemplateLegendOptionsPtrInput is an input type that accepts TemplateLegendOptionsArgs, TemplateLegendOptionsPtr and TemplateLegendOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateLegendOptionsPtrInput` via:
//
//	        TemplateLegendOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateLegendOptionsPtrInput interface {
	pulumi.Input

	ToTemplateLegendOptionsPtrOutput() TemplateLegendOptionsPtrOutput
	ToTemplateLegendOptionsPtrOutputWithContext(context.Context) TemplateLegendOptionsPtrOutput
}

type templateLegendOptionsPtrType TemplateLegendOptionsArgs

func TemplateLegendOptionsPtr(v *TemplateLegendOptionsArgs) TemplateLegendOptionsPtrInput {
	return (*templateLegendOptionsPtrType)(v)
}

func (*templateLegendOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLegendOptions)(nil)).Elem()
}

func (i *templateLegendOptionsPtrType) ToTemplateLegendOptionsPtrOutput() TemplateLegendOptionsPtrOutput {
	return i.ToTemplateLegendOptionsPtrOutputWithContext(context.Background())
}

func (i *templateLegendOptionsPtrType) ToTemplateLegendOptionsPtrOutputWithContext(ctx context.Context) TemplateLegendOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLegendOptionsPtrOutput)
}

type TemplateLegendOptionsOutput struct{ *pulumi.OutputState }

func (TemplateLegendOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLegendOptions)(nil)).Elem()
}

func (o TemplateLegendOptionsOutput) ToTemplateLegendOptionsOutput() TemplateLegendOptionsOutput {
	return o
}

func (o TemplateLegendOptionsOutput) ToTemplateLegendOptionsOutputWithContext(ctx context.Context) TemplateLegendOptionsOutput {
	return o
}

func (o TemplateLegendOptionsOutput) ToTemplateLegendOptionsPtrOutput() TemplateLegendOptionsPtrOutput {
	return o.ToTemplateLegendOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateLegendOptionsOutput) ToTemplateLegendOptionsPtrOutputWithContext(ctx context.Context) TemplateLegendOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLegendOptions) *TemplateLegendOptions {
		return &v
	}).(TemplateLegendOptionsPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLegendOptionsOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLegendOptions) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o TemplateLegendOptionsOutput) Position() TemplateLegendPositionPtrOutput {
	return o.ApplyT(func(v TemplateLegendOptions) *TemplateLegendPosition { return v.Position }).(TemplateLegendPositionPtrOutput)
}

func (o TemplateLegendOptionsOutput) Title() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLegendOptions) *TemplateLabelOptions { return v.Title }).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateLegendOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateLegendOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLegendOptionsOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLegendOptions) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type TemplateLegendOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLegendOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLegendOptions)(nil)).Elem()
}

func (o TemplateLegendOptionsPtrOutput) ToTemplateLegendOptionsPtrOutput() TemplateLegendOptionsPtrOutput {
	return o
}

func (o TemplateLegendOptionsPtrOutput) ToTemplateLegendOptionsPtrOutputWithContext(ctx context.Context) TemplateLegendOptionsPtrOutput {
	return o
}

func (o TemplateLegendOptionsPtrOutput) Elem() TemplateLegendOptionsOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) TemplateLegendOptions {
		if v != nil {
			return *v
		}
		var ret TemplateLegendOptions
		return ret
	}).(TemplateLegendOptionsOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLegendOptionsPtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o TemplateLegendOptionsPtrOutput) Position() TemplateLegendPositionPtrOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) *TemplateLegendPosition {
		if v == nil {
			return nil
		}
		return v.Position
	}).(TemplateLegendPositionPtrOutput)
}

func (o TemplateLegendOptionsPtrOutput) Title() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateLabelOptionsPtrOutput)
}

func (o TemplateLegendOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLegendOptionsPtrOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLegendOptions) *string {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.StringPtrOutput)
}

type TemplateLineChartAggregatedFieldWells struct {
	Category       []TemplateDimensionField `pulumi:"category"`
	Colors         []TemplateDimensionField `pulumi:"colors"`
	SmallMultiples []TemplateDimensionField `pulumi:"smallMultiples"`
	Values         []TemplateMeasureField   `pulumi:"values"`
}

// TemplateLineChartAggregatedFieldWellsInput is an input type that accepts TemplateLineChartAggregatedFieldWellsArgs and TemplateLineChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateLineChartAggregatedFieldWellsInput` via:
//
//	TemplateLineChartAggregatedFieldWellsArgs{...}
type TemplateLineChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateLineChartAggregatedFieldWellsOutput() TemplateLineChartAggregatedFieldWellsOutput
	ToTemplateLineChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateLineChartAggregatedFieldWellsOutput
}

type TemplateLineChartAggregatedFieldWellsArgs struct {
	Category       TemplateDimensionFieldArrayInput `pulumi:"category"`
	Colors         TemplateDimensionFieldArrayInput `pulumi:"colors"`
	SmallMultiples TemplateDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateLineChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateLineChartAggregatedFieldWellsArgs) ToTemplateLineChartAggregatedFieldWellsOutput() TemplateLineChartAggregatedFieldWellsOutput {
	return i.ToTemplateLineChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateLineChartAggregatedFieldWellsArgs) ToTemplateLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartAggregatedFieldWellsOutput)
}

func (i TemplateLineChartAggregatedFieldWellsArgs) ToTemplateLineChartAggregatedFieldWellsPtrOutput() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartAggregatedFieldWellsArgs) ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartAggregatedFieldWellsOutput).ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateLineChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateLineChartAggregatedFieldWellsArgs, TemplateLineChartAggregatedFieldWellsPtr and TemplateLineChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateLineChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartAggregatedFieldWellsPtrOutput() TemplateLineChartAggregatedFieldWellsPtrOutput
	ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateLineChartAggregatedFieldWellsPtrOutput
}

type templateLineChartAggregatedFieldWellsPtrType TemplateLineChartAggregatedFieldWellsArgs

func TemplateLineChartAggregatedFieldWellsPtr(v *TemplateLineChartAggregatedFieldWellsArgs) TemplateLineChartAggregatedFieldWellsPtrInput {
	return (*templateLineChartAggregatedFieldWellsPtrType)(v)
}

func (*templateLineChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateLineChartAggregatedFieldWellsPtrType) ToTemplateLineChartAggregatedFieldWellsPtrOutput() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartAggregatedFieldWellsPtrType) ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartAggregatedFieldWellsPtrOutput)
}

type TemplateLineChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateLineChartAggregatedFieldWellsOutput) ToTemplateLineChartAggregatedFieldWellsOutput() TemplateLineChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateLineChartAggregatedFieldWellsOutput) ToTemplateLineChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateLineChartAggregatedFieldWellsOutput) ToTemplateLineChartAggregatedFieldWellsPtrOutput() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartAggregatedFieldWellsOutput) ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartAggregatedFieldWells) *TemplateLineChartAggregatedFieldWells {
		return &v
	}).(TemplateLineChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateLineChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateLineChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateLineChartAggregatedFieldWells) []TemplateDimensionField { return v.Colors }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateLineChartAggregatedFieldWells) []TemplateDimensionField { return v.SmallMultiples }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateLineChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateLineChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) ToTemplateLineChartAggregatedFieldWellsPtrOutput() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) ToTemplateLineChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) Elem() TemplateLineChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateLineChartAggregatedFieldWells) TemplateLineChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartAggregatedFieldWells
		return ret
	}).(TemplateLineChartAggregatedFieldWellsOutput)
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) Colors() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateLineChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateLineChartConfiguration struct {
	ContributionAnalysisDefaults []TemplateContributionAnalysisDefault   `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *TemplateDataLabelOptions               `pulumi:"dataLabels"`
	DefaultSeriesSettings        *TemplateLineChartDefaultSeriesSettings `pulumi:"defaultSeriesSettings"`
	FieldWells                   *TemplateLineChartFieldWells            `pulumi:"fieldWells"`
	ForecastConfigurations       []TemplateForecastConfiguration         `pulumi:"forecastConfigurations"`
	Legend                       *TemplateLegendOptions                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   *TemplateLineSeriesAxisDisplayOptions   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     *TemplateChartAxisLabelOptions          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               []TemplateReferenceLine                 `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions *TemplateLineSeriesAxisDisplayOptions   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   *TemplateChartAxisLabelOptions          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       []TemplateSeriesItem                    `pulumi:"series"`
	SmallMultiplesOptions        *TemplateSmallMultiplesOptions          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *TemplateLineChartSortConfiguration     `pulumi:"sortConfiguration"`
	Tooltip                      *TemplateTooltipOptions                 `pulumi:"tooltip"`
	Type                         *TemplateLineChartType                  `pulumi:"type"`
	VisualPalette                *TemplateVisualPalette                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          *TemplateAxisDisplayOptions             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            *TemplateChartAxisLabelOptions          `pulumi:"xAxisLabelOptions"`
}

// TemplateLineChartConfigurationInput is an input type that accepts TemplateLineChartConfigurationArgs and TemplateLineChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateLineChartConfigurationInput` via:
//
//	TemplateLineChartConfigurationArgs{...}
type TemplateLineChartConfigurationInput interface {
	pulumi.Input

	ToTemplateLineChartConfigurationOutput() TemplateLineChartConfigurationOutput
	ToTemplateLineChartConfigurationOutputWithContext(context.Context) TemplateLineChartConfigurationOutput
}

type TemplateLineChartConfigurationArgs struct {
	ContributionAnalysisDefaults TemplateContributionAnalysisDefaultArrayInput  `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   TemplateDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	DefaultSeriesSettings        TemplateLineChartDefaultSeriesSettingsPtrInput `pulumi:"defaultSeriesSettings"`
	FieldWells                   TemplateLineChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	ForecastConfigurations       TemplateForecastConfigurationArrayInput        `pulumi:"forecastConfigurations"`
	Legend                       TemplateLegendOptionsPtrInput                  `pulumi:"legend"`
	PrimaryYAxisDisplayOptions   TemplateLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"primaryYAxisDisplayOptions"`
	PrimaryYAxisLabelOptions     TemplateChartAxisLabelOptionsPtrInput          `pulumi:"primaryYAxisLabelOptions"`
	ReferenceLines               TemplateReferenceLineArrayInput                `pulumi:"referenceLines"`
	SecondaryYAxisDisplayOptions TemplateLineSeriesAxisDisplayOptionsPtrInput   `pulumi:"secondaryYAxisDisplayOptions"`
	SecondaryYAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput          `pulumi:"secondaryYAxisLabelOptions"`
	Series                       TemplateSeriesItemArrayInput                   `pulumi:"series"`
	SmallMultiplesOptions        TemplateSmallMultiplesOptionsPtrInput          `pulumi:"smallMultiplesOptions"`
	SortConfiguration            TemplateLineChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      TemplateTooltipOptionsPtrInput                 `pulumi:"tooltip"`
	Type                         TemplateLineChartTypePtrInput                  `pulumi:"type"`
	VisualPalette                TemplateVisualPalettePtrInput                  `pulumi:"visualPalette"`
	XAxisDisplayOptions          TemplateAxisDisplayOptionsPtrInput             `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions            TemplateChartAxisLabelOptionsPtrInput          `pulumi:"xAxisLabelOptions"`
}

func (TemplateLineChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartConfiguration)(nil)).Elem()
}

func (i TemplateLineChartConfigurationArgs) ToTemplateLineChartConfigurationOutput() TemplateLineChartConfigurationOutput {
	return i.ToTemplateLineChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateLineChartConfigurationArgs) ToTemplateLineChartConfigurationOutputWithContext(ctx context.Context) TemplateLineChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartConfigurationOutput)
}

func (i TemplateLineChartConfigurationArgs) ToTemplateLineChartConfigurationPtrOutput() TemplateLineChartConfigurationPtrOutput {
	return i.ToTemplateLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartConfigurationArgs) ToTemplateLineChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartConfigurationOutput).ToTemplateLineChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateLineChartConfigurationPtrInput is an input type that accepts TemplateLineChartConfigurationArgs, TemplateLineChartConfigurationPtr and TemplateLineChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartConfigurationPtrInput` via:
//
//	        TemplateLineChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateLineChartConfigurationPtrOutput() TemplateLineChartConfigurationPtrOutput
	ToTemplateLineChartConfigurationPtrOutputWithContext(context.Context) TemplateLineChartConfigurationPtrOutput
}

type templateLineChartConfigurationPtrType TemplateLineChartConfigurationArgs

func TemplateLineChartConfigurationPtr(v *TemplateLineChartConfigurationArgs) TemplateLineChartConfigurationPtrInput {
	return (*templateLineChartConfigurationPtrType)(v)
}

func (*templateLineChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartConfiguration)(nil)).Elem()
}

func (i *templateLineChartConfigurationPtrType) ToTemplateLineChartConfigurationPtrOutput() TemplateLineChartConfigurationPtrOutput {
	return i.ToTemplateLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateLineChartConfigurationPtrType) ToTemplateLineChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartConfigurationPtrOutput)
}

type TemplateLineChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateLineChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartConfiguration)(nil)).Elem()
}

func (o TemplateLineChartConfigurationOutput) ToTemplateLineChartConfigurationOutput() TemplateLineChartConfigurationOutput {
	return o
}

func (o TemplateLineChartConfigurationOutput) ToTemplateLineChartConfigurationOutputWithContext(ctx context.Context) TemplateLineChartConfigurationOutput {
	return o
}

func (o TemplateLineChartConfigurationOutput) ToTemplateLineChartConfigurationPtrOutput() TemplateLineChartConfigurationPtrOutput {
	return o.ToTemplateLineChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartConfigurationOutput) ToTemplateLineChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartConfiguration) *TemplateLineChartConfiguration {
		return &v
	}).(TemplateLineChartConfigurationPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) []TemplateContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateLineChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) DefaultSeriesSettings() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineChartDefaultSeriesSettings {
		return v.DefaultSeriesSettings
	}).(TemplateLineChartDefaultSeriesSettingsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) FieldWells() TemplateLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineChartFieldWells { return v.FieldWells }).(TemplateLineChartFieldWellsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) ForecastConfigurations() TemplateForecastConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) []TemplateForecastConfiguration {
		return v.ForecastConfigurations
	}).(TemplateForecastConfigurationArrayOutput)
}

func (o TemplateLineChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) PrimaryYAxisDisplayOptions() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineSeriesAxisDisplayOptions {
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) []TemplateReferenceLine { return v.ReferenceLines }).(TemplateReferenceLineArrayOutput)
}

func (o TemplateLineChartConfigurationOutput) SecondaryYAxisDisplayOptions() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineSeriesAxisDisplayOptions {
		return v.SecondaryYAxisDisplayOptions
	}).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) SecondaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions {
		return v.SecondaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) Series() TemplateSeriesItemArrayOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) []TemplateSeriesItem { return v.Series }).(TemplateSeriesItemArrayOutput)
}

func (o TemplateLineChartConfigurationOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateSmallMultiplesOptions { return v.SmallMultiplesOptions }).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) SortConfiguration() TemplateLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineChartSortConfiguration { return v.SortConfiguration }).(TemplateLineChartSortConfigurationPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) Type() TemplateLineChartTypePtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateLineChartType { return v.Type }).(TemplateLineChartTypePtrOutput)
}

func (o TemplateLineChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

func (o TemplateLineChartConfigurationOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateAxisDisplayOptions { return v.XAxisDisplayOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions { return v.XAxisLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

type TemplateLineChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartConfiguration)(nil)).Elem()
}

func (o TemplateLineChartConfigurationPtrOutput) ToTemplateLineChartConfigurationPtrOutput() TemplateLineChartConfigurationPtrOutput {
	return o
}

func (o TemplateLineChartConfigurationPtrOutput) ToTemplateLineChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartConfigurationPtrOutput {
	return o
}

func (o TemplateLineChartConfigurationPtrOutput) Elem() TemplateLineChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) TemplateLineChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartConfiguration
		return ret
	}).(TemplateLineChartConfigurationOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) []TemplateContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) DefaultSeriesSettings() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineChartDefaultSeriesSettings {
		if v == nil {
			return nil
		}
		return v.DefaultSeriesSettings
	}).(TemplateLineChartDefaultSeriesSettingsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) FieldWells() TemplateLineChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateLineChartFieldWellsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) ForecastConfigurations() TemplateForecastConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) []TemplateForecastConfiguration {
		if v == nil {
			return nil
		}
		return v.ForecastConfigurations
	}).(TemplateForecastConfigurationArrayOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) PrimaryYAxisDisplayOptions() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisDisplayOptions
	}).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) PrimaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.PrimaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) ReferenceLines() TemplateReferenceLineArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) []TemplateReferenceLine {
		if v == nil {
			return nil
		}
		return v.ReferenceLines
	}).(TemplateReferenceLineArrayOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) SecondaryYAxisDisplayOptions() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineSeriesAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisDisplayOptions
	}).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) SecondaryYAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SecondaryYAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) Series() TemplateSeriesItemArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) []TemplateSeriesItem {
		if v == nil {
			return nil
		}
		return v.Series
	}).(TemplateSeriesItemArrayOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) SortConfiguration() TemplateLineChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateLineChartSortConfigurationPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) Type() TemplateLineChartTypePtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateLineChartType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateLineChartTypePtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineChartConfigurationPtrOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

type TemplateLineChartDefaultSeriesSettings struct {
	AxisBinding         *TemplateAxisBinding                  `pulumi:"axisBinding"`
	LineStyleSettings   *TemplateLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *TemplateLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// TemplateLineChartDefaultSeriesSettingsInput is an input type that accepts TemplateLineChartDefaultSeriesSettingsArgs and TemplateLineChartDefaultSeriesSettingsOutput values.
// You can construct a concrete instance of `TemplateLineChartDefaultSeriesSettingsInput` via:
//
//	TemplateLineChartDefaultSeriesSettingsArgs{...}
type TemplateLineChartDefaultSeriesSettingsInput interface {
	pulumi.Input

	ToTemplateLineChartDefaultSeriesSettingsOutput() TemplateLineChartDefaultSeriesSettingsOutput
	ToTemplateLineChartDefaultSeriesSettingsOutputWithContext(context.Context) TemplateLineChartDefaultSeriesSettingsOutput
}

type TemplateLineChartDefaultSeriesSettingsArgs struct {
	AxisBinding         TemplateAxisBindingPtrInput                  `pulumi:"axisBinding"`
	LineStyleSettings   TemplateLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings TemplateLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (TemplateLineChartDefaultSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i TemplateLineChartDefaultSeriesSettingsArgs) ToTemplateLineChartDefaultSeriesSettingsOutput() TemplateLineChartDefaultSeriesSettingsOutput {
	return i.ToTemplateLineChartDefaultSeriesSettingsOutputWithContext(context.Background())
}

func (i TemplateLineChartDefaultSeriesSettingsArgs) ToTemplateLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartDefaultSeriesSettingsOutput)
}

func (i TemplateLineChartDefaultSeriesSettingsArgs) ToTemplateLineChartDefaultSeriesSettingsPtrOutput() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartDefaultSeriesSettingsArgs) ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartDefaultSeriesSettingsOutput).ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx)
}

// TemplateLineChartDefaultSeriesSettingsPtrInput is an input type that accepts TemplateLineChartDefaultSeriesSettingsArgs, TemplateLineChartDefaultSeriesSettingsPtr and TemplateLineChartDefaultSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartDefaultSeriesSettingsPtrInput` via:
//
//	        TemplateLineChartDefaultSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartDefaultSeriesSettingsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartDefaultSeriesSettingsPtrOutput() TemplateLineChartDefaultSeriesSettingsPtrOutput
	ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Context) TemplateLineChartDefaultSeriesSettingsPtrOutput
}

type templateLineChartDefaultSeriesSettingsPtrType TemplateLineChartDefaultSeriesSettingsArgs

func TemplateLineChartDefaultSeriesSettingsPtr(v *TemplateLineChartDefaultSeriesSettingsArgs) TemplateLineChartDefaultSeriesSettingsPtrInput {
	return (*templateLineChartDefaultSeriesSettingsPtrType)(v)
}

func (*templateLineChartDefaultSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (i *templateLineChartDefaultSeriesSettingsPtrType) ToTemplateLineChartDefaultSeriesSettingsPtrOutput() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return i.ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartDefaultSeriesSettingsPtrType) ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartDefaultSeriesSettingsPtrOutput)
}

type TemplateLineChartDefaultSeriesSettingsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartDefaultSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) ToTemplateLineChartDefaultSeriesSettingsOutput() TemplateLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) ToTemplateLineChartDefaultSeriesSettingsOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsOutput {
	return o
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) ToTemplateLineChartDefaultSeriesSettingsPtrOutput() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o.ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartDefaultSeriesSettings) *TemplateLineChartDefaultSeriesSettings {
		return &v
	}).(TemplateLineChartDefaultSeriesSettingsPtrOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) AxisBinding() TemplateAxisBindingPtrOutput {
	return o.ApplyT(func(v TemplateLineChartDefaultSeriesSettings) *TemplateAxisBinding { return v.AxisBinding }).(TemplateAxisBindingPtrOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) LineStyleSettings() TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartDefaultSeriesSettings) *TemplateLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(TemplateLineChartLineStyleSettingsPtrOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsOutput) MarkerStyleSettings() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartDefaultSeriesSettings) *TemplateLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

type TemplateLineChartDefaultSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartDefaultSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartDefaultSeriesSettings)(nil)).Elem()
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) ToTemplateLineChartDefaultSeriesSettingsPtrOutput() TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) ToTemplateLineChartDefaultSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartDefaultSeriesSettingsPtrOutput {
	return o
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) Elem() TemplateLineChartDefaultSeriesSettingsOutput {
	return o.ApplyT(func(v *TemplateLineChartDefaultSeriesSettings) TemplateLineChartDefaultSeriesSettings {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartDefaultSeriesSettings
		return ret
	}).(TemplateLineChartDefaultSeriesSettingsOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) AxisBinding() TemplateAxisBindingPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartDefaultSeriesSettings) *TemplateAxisBinding {
		if v == nil {
			return nil
		}
		return v.AxisBinding
	}).(TemplateAxisBindingPtrOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) LineStyleSettings() TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartDefaultSeriesSettings) *TemplateLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(TemplateLineChartLineStyleSettingsPtrOutput)
}

func (o TemplateLineChartDefaultSeriesSettingsPtrOutput) MarkerStyleSettings() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartDefaultSeriesSettings) *TemplateLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

type TemplateLineChartFieldWells struct {
	LineChartAggregatedFieldWells *TemplateLineChartAggregatedFieldWells `pulumi:"lineChartAggregatedFieldWells"`
}

// TemplateLineChartFieldWellsInput is an input type that accepts TemplateLineChartFieldWellsArgs and TemplateLineChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateLineChartFieldWellsInput` via:
//
//	TemplateLineChartFieldWellsArgs{...}
type TemplateLineChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateLineChartFieldWellsOutput() TemplateLineChartFieldWellsOutput
	ToTemplateLineChartFieldWellsOutputWithContext(context.Context) TemplateLineChartFieldWellsOutput
}

type TemplateLineChartFieldWellsArgs struct {
	LineChartAggregatedFieldWells TemplateLineChartAggregatedFieldWellsPtrInput `pulumi:"lineChartAggregatedFieldWells"`
}

func (TemplateLineChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartFieldWells)(nil)).Elem()
}

func (i TemplateLineChartFieldWellsArgs) ToTemplateLineChartFieldWellsOutput() TemplateLineChartFieldWellsOutput {
	return i.ToTemplateLineChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateLineChartFieldWellsArgs) ToTemplateLineChartFieldWellsOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartFieldWellsOutput)
}

func (i TemplateLineChartFieldWellsArgs) ToTemplateLineChartFieldWellsPtrOutput() TemplateLineChartFieldWellsPtrOutput {
	return i.ToTemplateLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartFieldWellsArgs) ToTemplateLineChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartFieldWellsOutput).ToTemplateLineChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateLineChartFieldWellsPtrInput is an input type that accepts TemplateLineChartFieldWellsArgs, TemplateLineChartFieldWellsPtr and TemplateLineChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartFieldWellsPtrInput` via:
//
//	        TemplateLineChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartFieldWellsPtrOutput() TemplateLineChartFieldWellsPtrOutput
	ToTemplateLineChartFieldWellsPtrOutputWithContext(context.Context) TemplateLineChartFieldWellsPtrOutput
}

type templateLineChartFieldWellsPtrType TemplateLineChartFieldWellsArgs

func TemplateLineChartFieldWellsPtr(v *TemplateLineChartFieldWellsArgs) TemplateLineChartFieldWellsPtrInput {
	return (*templateLineChartFieldWellsPtrType)(v)
}

func (*templateLineChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartFieldWells)(nil)).Elem()
}

func (i *templateLineChartFieldWellsPtrType) ToTemplateLineChartFieldWellsPtrOutput() TemplateLineChartFieldWellsPtrOutput {
	return i.ToTemplateLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartFieldWellsPtrType) ToTemplateLineChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartFieldWellsPtrOutput)
}

type TemplateLineChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartFieldWells)(nil)).Elem()
}

func (o TemplateLineChartFieldWellsOutput) ToTemplateLineChartFieldWellsOutput() TemplateLineChartFieldWellsOutput {
	return o
}

func (o TemplateLineChartFieldWellsOutput) ToTemplateLineChartFieldWellsOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsOutput {
	return o
}

func (o TemplateLineChartFieldWellsOutput) ToTemplateLineChartFieldWellsPtrOutput() TemplateLineChartFieldWellsPtrOutput {
	return o.ToTemplateLineChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartFieldWellsOutput) ToTemplateLineChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartFieldWells) *TemplateLineChartFieldWells {
		return &v
	}).(TemplateLineChartFieldWellsPtrOutput)
}

func (o TemplateLineChartFieldWellsOutput) LineChartAggregatedFieldWells() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartFieldWells) *TemplateLineChartAggregatedFieldWells {
		return v.LineChartAggregatedFieldWells
	}).(TemplateLineChartAggregatedFieldWellsPtrOutput)
}

type TemplateLineChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartFieldWells)(nil)).Elem()
}

func (o TemplateLineChartFieldWellsPtrOutput) ToTemplateLineChartFieldWellsPtrOutput() TemplateLineChartFieldWellsPtrOutput {
	return o
}

func (o TemplateLineChartFieldWellsPtrOutput) ToTemplateLineChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateLineChartFieldWellsPtrOutput {
	return o
}

func (o TemplateLineChartFieldWellsPtrOutput) Elem() TemplateLineChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateLineChartFieldWells) TemplateLineChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartFieldWells
		return ret
	}).(TemplateLineChartFieldWellsOutput)
}

func (o TemplateLineChartFieldWellsPtrOutput) LineChartAggregatedFieldWells() TemplateLineChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartFieldWells) *TemplateLineChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.LineChartAggregatedFieldWells
	}).(TemplateLineChartAggregatedFieldWellsPtrOutput)
}

type TemplateLineChartLineStyleSettings struct {
	LineInterpolation *TemplateLineInterpolation  `pulumi:"lineInterpolation"`
	LineStyle         *TemplateLineChartLineStyle `pulumi:"lineStyle"`
	LineVisibility    *TemplateVisibility         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth *string `pulumi:"lineWidth"`
}

// TemplateLineChartLineStyleSettingsInput is an input type that accepts TemplateLineChartLineStyleSettingsArgs and TemplateLineChartLineStyleSettingsOutput values.
// You can construct a concrete instance of `TemplateLineChartLineStyleSettingsInput` via:
//
//	TemplateLineChartLineStyleSettingsArgs{...}
type TemplateLineChartLineStyleSettingsInput interface {
	pulumi.Input

	ToTemplateLineChartLineStyleSettingsOutput() TemplateLineChartLineStyleSettingsOutput
	ToTemplateLineChartLineStyleSettingsOutputWithContext(context.Context) TemplateLineChartLineStyleSettingsOutput
}

type TemplateLineChartLineStyleSettingsArgs struct {
	LineInterpolation TemplateLineInterpolationPtrInput  `pulumi:"lineInterpolation"`
	LineStyle         TemplateLineChartLineStylePtrInput `pulumi:"lineStyle"`
	LineVisibility    TemplateVisibilityPtrInput         `pulumi:"lineVisibility"`
	// String based length that is composed of value and unit in px
	LineWidth pulumi.StringPtrInput `pulumi:"lineWidth"`
}

func (TemplateLineChartLineStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartLineStyleSettings)(nil)).Elem()
}

func (i TemplateLineChartLineStyleSettingsArgs) ToTemplateLineChartLineStyleSettingsOutput() TemplateLineChartLineStyleSettingsOutput {
	return i.ToTemplateLineChartLineStyleSettingsOutputWithContext(context.Background())
}

func (i TemplateLineChartLineStyleSettingsArgs) ToTemplateLineChartLineStyleSettingsOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartLineStyleSettingsOutput)
}

func (i TemplateLineChartLineStyleSettingsArgs) ToTemplateLineChartLineStyleSettingsPtrOutput() TemplateLineChartLineStyleSettingsPtrOutput {
	return i.ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartLineStyleSettingsArgs) ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartLineStyleSettingsOutput).ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(ctx)
}

// TemplateLineChartLineStyleSettingsPtrInput is an input type that accepts TemplateLineChartLineStyleSettingsArgs, TemplateLineChartLineStyleSettingsPtr and TemplateLineChartLineStyleSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartLineStyleSettingsPtrInput` via:
//
//	        TemplateLineChartLineStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartLineStyleSettingsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartLineStyleSettingsPtrOutput() TemplateLineChartLineStyleSettingsPtrOutput
	ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(context.Context) TemplateLineChartLineStyleSettingsPtrOutput
}

type templateLineChartLineStyleSettingsPtrType TemplateLineChartLineStyleSettingsArgs

func TemplateLineChartLineStyleSettingsPtr(v *TemplateLineChartLineStyleSettingsArgs) TemplateLineChartLineStyleSettingsPtrInput {
	return (*templateLineChartLineStyleSettingsPtrType)(v)
}

func (*templateLineChartLineStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartLineStyleSettings)(nil)).Elem()
}

func (i *templateLineChartLineStyleSettingsPtrType) ToTemplateLineChartLineStyleSettingsPtrOutput() TemplateLineChartLineStyleSettingsPtrOutput {
	return i.ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartLineStyleSettingsPtrType) ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartLineStyleSettingsPtrOutput)
}

type TemplateLineChartLineStyleSettingsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartLineStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartLineStyleSettings)(nil)).Elem()
}

func (o TemplateLineChartLineStyleSettingsOutput) ToTemplateLineChartLineStyleSettingsOutput() TemplateLineChartLineStyleSettingsOutput {
	return o
}

func (o TemplateLineChartLineStyleSettingsOutput) ToTemplateLineChartLineStyleSettingsOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsOutput {
	return o
}

func (o TemplateLineChartLineStyleSettingsOutput) ToTemplateLineChartLineStyleSettingsPtrOutput() TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartLineStyleSettingsOutput) ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartLineStyleSettings) *TemplateLineChartLineStyleSettings {
		return &v
	}).(TemplateLineChartLineStyleSettingsPtrOutput)
}

func (o TemplateLineChartLineStyleSettingsOutput) LineInterpolation() TemplateLineInterpolationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartLineStyleSettings) *TemplateLineInterpolation { return v.LineInterpolation }).(TemplateLineInterpolationPtrOutput)
}

func (o TemplateLineChartLineStyleSettingsOutput) LineStyle() TemplateLineChartLineStylePtrOutput {
	return o.ApplyT(func(v TemplateLineChartLineStyleSettings) *TemplateLineChartLineStyle { return v.LineStyle }).(TemplateLineChartLineStylePtrOutput)
}

func (o TemplateLineChartLineStyleSettingsOutput) LineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateLineChartLineStyleSettings) *TemplateVisibility { return v.LineVisibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLineChartLineStyleSettingsOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLineChartLineStyleSettings) *string { return v.LineWidth }).(pulumi.StringPtrOutput)
}

type TemplateLineChartLineStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartLineStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartLineStyleSettings)(nil)).Elem()
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) ToTemplateLineChartLineStyleSettingsPtrOutput() TemplateLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) ToTemplateLineChartLineStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartLineStyleSettingsPtrOutput {
	return o
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) Elem() TemplateLineChartLineStyleSettingsOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyleSettings) TemplateLineChartLineStyleSettings {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartLineStyleSettings
		return ret
	}).(TemplateLineChartLineStyleSettingsOutput)
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) LineInterpolation() TemplateLineInterpolationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyleSettings) *TemplateLineInterpolation {
		if v == nil {
			return nil
		}
		return v.LineInterpolation
	}).(TemplateLineInterpolationPtrOutput)
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) LineStyle() TemplateLineChartLineStylePtrOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyleSettings) *TemplateLineChartLineStyle {
		if v == nil {
			return nil
		}
		return v.LineStyle
	}).(TemplateLineChartLineStylePtrOutput)
}

func (o TemplateLineChartLineStyleSettingsPtrOutput) LineVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyleSettings) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.LineVisibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLineChartLineStyleSettingsPtrOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartLineStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.LineWidth
	}).(pulumi.StringPtrOutput)
}

type TemplateLineChartMarkerStyleSettings struct {
	MarkerColor *string                       `pulumi:"markerColor"`
	MarkerShape *TemplateLineChartMarkerShape `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       *string             `pulumi:"markerSize"`
	MarkerVisibility *TemplateVisibility `pulumi:"markerVisibility"`
}

// TemplateLineChartMarkerStyleSettingsInput is an input type that accepts TemplateLineChartMarkerStyleSettingsArgs and TemplateLineChartMarkerStyleSettingsOutput values.
// You can construct a concrete instance of `TemplateLineChartMarkerStyleSettingsInput` via:
//
//	TemplateLineChartMarkerStyleSettingsArgs{...}
type TemplateLineChartMarkerStyleSettingsInput interface {
	pulumi.Input

	ToTemplateLineChartMarkerStyleSettingsOutput() TemplateLineChartMarkerStyleSettingsOutput
	ToTemplateLineChartMarkerStyleSettingsOutputWithContext(context.Context) TemplateLineChartMarkerStyleSettingsOutput
}

type TemplateLineChartMarkerStyleSettingsArgs struct {
	MarkerColor pulumi.StringPtrInput                `pulumi:"markerColor"`
	MarkerShape TemplateLineChartMarkerShapePtrInput `pulumi:"markerShape"`
	// String based length that is composed of value and unit in px
	MarkerSize       pulumi.StringPtrInput      `pulumi:"markerSize"`
	MarkerVisibility TemplateVisibilityPtrInput `pulumi:"markerVisibility"`
}

func (TemplateLineChartMarkerStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i TemplateLineChartMarkerStyleSettingsArgs) ToTemplateLineChartMarkerStyleSettingsOutput() TemplateLineChartMarkerStyleSettingsOutput {
	return i.ToTemplateLineChartMarkerStyleSettingsOutputWithContext(context.Background())
}

func (i TemplateLineChartMarkerStyleSettingsArgs) ToTemplateLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartMarkerStyleSettingsOutput)
}

func (i TemplateLineChartMarkerStyleSettingsArgs) ToTemplateLineChartMarkerStyleSettingsPtrOutput() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return i.ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartMarkerStyleSettingsArgs) ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartMarkerStyleSettingsOutput).ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(ctx)
}

// TemplateLineChartMarkerStyleSettingsPtrInput is an input type that accepts TemplateLineChartMarkerStyleSettingsArgs, TemplateLineChartMarkerStyleSettingsPtr and TemplateLineChartMarkerStyleSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartMarkerStyleSettingsPtrInput` via:
//
//	        TemplateLineChartMarkerStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartMarkerStyleSettingsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartMarkerStyleSettingsPtrOutput() TemplateLineChartMarkerStyleSettingsPtrOutput
	ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(context.Context) TemplateLineChartMarkerStyleSettingsPtrOutput
}

type templateLineChartMarkerStyleSettingsPtrType TemplateLineChartMarkerStyleSettingsArgs

func TemplateLineChartMarkerStyleSettingsPtr(v *TemplateLineChartMarkerStyleSettingsArgs) TemplateLineChartMarkerStyleSettingsPtrInput {
	return (*templateLineChartMarkerStyleSettingsPtrType)(v)
}

func (*templateLineChartMarkerStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartMarkerStyleSettings)(nil)).Elem()
}

func (i *templateLineChartMarkerStyleSettingsPtrType) ToTemplateLineChartMarkerStyleSettingsPtrOutput() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return i.ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartMarkerStyleSettingsPtrType) ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

type TemplateLineChartMarkerStyleSettingsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartMarkerStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o TemplateLineChartMarkerStyleSettingsOutput) ToTemplateLineChartMarkerStyleSettingsOutput() TemplateLineChartMarkerStyleSettingsOutput {
	return o
}

func (o TemplateLineChartMarkerStyleSettingsOutput) ToTemplateLineChartMarkerStyleSettingsOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsOutput {
	return o
}

func (o TemplateLineChartMarkerStyleSettingsOutput) ToTemplateLineChartMarkerStyleSettingsPtrOutput() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartMarkerStyleSettingsOutput) ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartMarkerStyleSettings) *TemplateLineChartMarkerStyleSettings {
		return &v
	}).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

func (o TemplateLineChartMarkerStyleSettingsOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLineChartMarkerStyleSettings) *string { return v.MarkerColor }).(pulumi.StringPtrOutput)
}

func (o TemplateLineChartMarkerStyleSettingsOutput) MarkerShape() TemplateLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v TemplateLineChartMarkerStyleSettings) *TemplateLineChartMarkerShape { return v.MarkerShape }).(TemplateLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLineChartMarkerStyleSettingsOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLineChartMarkerStyleSettings) *string { return v.MarkerSize }).(pulumi.StringPtrOutput)
}

func (o TemplateLineChartMarkerStyleSettingsOutput) MarkerVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateLineChartMarkerStyleSettings) *TemplateVisibility { return v.MarkerVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateLineChartMarkerStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartMarkerStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartMarkerStyleSettings)(nil)).Elem()
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) ToTemplateLineChartMarkerStyleSettingsPtrOutput() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) ToTemplateLineChartMarkerStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) Elem() TemplateLineChartMarkerStyleSettingsOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerStyleSettings) TemplateLineChartMarkerStyleSettings {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartMarkerStyleSettings
		return ret
	}).(TemplateLineChartMarkerStyleSettingsOutput)
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) MarkerColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) MarkerShape() TemplateLineChartMarkerShapePtrOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerStyleSettings) *TemplateLineChartMarkerShape {
		if v == nil {
			return nil
		}
		return v.MarkerShape
	}).(TemplateLineChartMarkerShapePtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateLineChartMarkerStyleSettingsPtrOutput) MarkerSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerStyleSettings) *string {
		if v == nil {
			return nil
		}
		return v.MarkerSize
	}).(pulumi.StringPtrOutput)
}

func (o TemplateLineChartMarkerStyleSettingsPtrOutput) MarkerVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartMarkerStyleSettings) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.MarkerVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateLineChartSeriesSettings struct {
	LineStyleSettings   *TemplateLineChartLineStyleSettings   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings *TemplateLineChartMarkerStyleSettings `pulumi:"markerStyleSettings"`
}

// TemplateLineChartSeriesSettingsInput is an input type that accepts TemplateLineChartSeriesSettingsArgs and TemplateLineChartSeriesSettingsOutput values.
// You can construct a concrete instance of `TemplateLineChartSeriesSettingsInput` via:
//
//	TemplateLineChartSeriesSettingsArgs{...}
type TemplateLineChartSeriesSettingsInput interface {
	pulumi.Input

	ToTemplateLineChartSeriesSettingsOutput() TemplateLineChartSeriesSettingsOutput
	ToTemplateLineChartSeriesSettingsOutputWithContext(context.Context) TemplateLineChartSeriesSettingsOutput
}

type TemplateLineChartSeriesSettingsArgs struct {
	LineStyleSettings   TemplateLineChartLineStyleSettingsPtrInput   `pulumi:"lineStyleSettings"`
	MarkerStyleSettings TemplateLineChartMarkerStyleSettingsPtrInput `pulumi:"markerStyleSettings"`
}

func (TemplateLineChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartSeriesSettings)(nil)).Elem()
}

func (i TemplateLineChartSeriesSettingsArgs) ToTemplateLineChartSeriesSettingsOutput() TemplateLineChartSeriesSettingsOutput {
	return i.ToTemplateLineChartSeriesSettingsOutputWithContext(context.Background())
}

func (i TemplateLineChartSeriesSettingsArgs) ToTemplateLineChartSeriesSettingsOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSeriesSettingsOutput)
}

func (i TemplateLineChartSeriesSettingsArgs) ToTemplateLineChartSeriesSettingsPtrOutput() TemplateLineChartSeriesSettingsPtrOutput {
	return i.ToTemplateLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartSeriesSettingsArgs) ToTemplateLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSeriesSettingsOutput).ToTemplateLineChartSeriesSettingsPtrOutputWithContext(ctx)
}

// TemplateLineChartSeriesSettingsPtrInput is an input type that accepts TemplateLineChartSeriesSettingsArgs, TemplateLineChartSeriesSettingsPtr and TemplateLineChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartSeriesSettingsPtrInput` via:
//
//	        TemplateLineChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToTemplateLineChartSeriesSettingsPtrOutput() TemplateLineChartSeriesSettingsPtrOutput
	ToTemplateLineChartSeriesSettingsPtrOutputWithContext(context.Context) TemplateLineChartSeriesSettingsPtrOutput
}

type templateLineChartSeriesSettingsPtrType TemplateLineChartSeriesSettingsArgs

func TemplateLineChartSeriesSettingsPtr(v *TemplateLineChartSeriesSettingsArgs) TemplateLineChartSeriesSettingsPtrInput {
	return (*templateLineChartSeriesSettingsPtrType)(v)
}

func (*templateLineChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartSeriesSettings)(nil)).Elem()
}

func (i *templateLineChartSeriesSettingsPtrType) ToTemplateLineChartSeriesSettingsPtrOutput() TemplateLineChartSeriesSettingsPtrOutput {
	return i.ToTemplateLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *templateLineChartSeriesSettingsPtrType) ToTemplateLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSeriesSettingsPtrOutput)
}

type TemplateLineChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (TemplateLineChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartSeriesSettings)(nil)).Elem()
}

func (o TemplateLineChartSeriesSettingsOutput) ToTemplateLineChartSeriesSettingsOutput() TemplateLineChartSeriesSettingsOutput {
	return o
}

func (o TemplateLineChartSeriesSettingsOutput) ToTemplateLineChartSeriesSettingsOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsOutput {
	return o
}

func (o TemplateLineChartSeriesSettingsOutput) ToTemplateLineChartSeriesSettingsPtrOutput() TemplateLineChartSeriesSettingsPtrOutput {
	return o.ToTemplateLineChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartSeriesSettingsOutput) ToTemplateLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartSeriesSettings) *TemplateLineChartSeriesSettings {
		return &v
	}).(TemplateLineChartSeriesSettingsPtrOutput)
}

func (o TemplateLineChartSeriesSettingsOutput) LineStyleSettings() TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartSeriesSettings) *TemplateLineChartLineStyleSettings {
		return v.LineStyleSettings
	}).(TemplateLineChartLineStyleSettingsPtrOutput)
}

func (o TemplateLineChartSeriesSettingsOutput) MarkerStyleSettings() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartSeriesSettings) *TemplateLineChartMarkerStyleSettings {
		return v.MarkerStyleSettings
	}).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

type TemplateLineChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartSeriesSettings)(nil)).Elem()
}

func (o TemplateLineChartSeriesSettingsPtrOutput) ToTemplateLineChartSeriesSettingsPtrOutput() TemplateLineChartSeriesSettingsPtrOutput {
	return o
}

func (o TemplateLineChartSeriesSettingsPtrOutput) ToTemplateLineChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateLineChartSeriesSettingsPtrOutput {
	return o
}

func (o TemplateLineChartSeriesSettingsPtrOutput) Elem() TemplateLineChartSeriesSettingsOutput {
	return o.ApplyT(func(v *TemplateLineChartSeriesSettings) TemplateLineChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartSeriesSettings
		return ret
	}).(TemplateLineChartSeriesSettingsOutput)
}

func (o TemplateLineChartSeriesSettingsPtrOutput) LineStyleSettings() TemplateLineChartLineStyleSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartSeriesSettings) *TemplateLineChartLineStyleSettings {
		if v == nil {
			return nil
		}
		return v.LineStyleSettings
	}).(TemplateLineChartLineStyleSettingsPtrOutput)
}

func (o TemplateLineChartSeriesSettingsPtrOutput) MarkerStyleSettings() TemplateLineChartMarkerStyleSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartSeriesSettings) *TemplateLineChartMarkerStyleSettings {
		if v == nil {
			return nil
		}
		return v.MarkerStyleSettings
	}).(TemplateLineChartMarkerStyleSettingsPtrOutput)
}

type TemplateLineChartSortConfiguration struct {
	CategoryItemsLimitConfiguration  *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     []TemplateFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     *TemplateItemsLimitConfiguration `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []TemplateFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// TemplateLineChartSortConfigurationInput is an input type that accepts TemplateLineChartSortConfigurationArgs and TemplateLineChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateLineChartSortConfigurationInput` via:
//
//	TemplateLineChartSortConfigurationArgs{...}
type TemplateLineChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateLineChartSortConfigurationOutput() TemplateLineChartSortConfigurationOutput
	ToTemplateLineChartSortConfigurationOutputWithContext(context.Context) TemplateLineChartSortConfigurationOutput
}

type TemplateLineChartSortConfigurationArgs struct {
	CategoryItemsLimitConfiguration  TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimitConfiguration"`
	CategorySort                     TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimitConfiguration     TemplateItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimitConfiguration"`
	SmallMultiplesLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               TemplateFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (TemplateLineChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartSortConfiguration)(nil)).Elem()
}

func (i TemplateLineChartSortConfigurationArgs) ToTemplateLineChartSortConfigurationOutput() TemplateLineChartSortConfigurationOutput {
	return i.ToTemplateLineChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateLineChartSortConfigurationArgs) ToTemplateLineChartSortConfigurationOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSortConfigurationOutput)
}

func (i TemplateLineChartSortConfigurationArgs) ToTemplateLineChartSortConfigurationPtrOutput() TemplateLineChartSortConfigurationPtrOutput {
	return i.ToTemplateLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartSortConfigurationArgs) ToTemplateLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSortConfigurationOutput).ToTemplateLineChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateLineChartSortConfigurationPtrInput is an input type that accepts TemplateLineChartSortConfigurationArgs, TemplateLineChartSortConfigurationPtr and TemplateLineChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartSortConfigurationPtrInput` via:
//
//	        TemplateLineChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateLineChartSortConfigurationPtrOutput() TemplateLineChartSortConfigurationPtrOutput
	ToTemplateLineChartSortConfigurationPtrOutputWithContext(context.Context) TemplateLineChartSortConfigurationPtrOutput
}

type templateLineChartSortConfigurationPtrType TemplateLineChartSortConfigurationArgs

func TemplateLineChartSortConfigurationPtr(v *TemplateLineChartSortConfigurationArgs) TemplateLineChartSortConfigurationPtrInput {
	return (*templateLineChartSortConfigurationPtrType)(v)
}

func (*templateLineChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartSortConfiguration)(nil)).Elem()
}

func (i *templateLineChartSortConfigurationPtrType) ToTemplateLineChartSortConfigurationPtrOutput() TemplateLineChartSortConfigurationPtrOutput {
	return i.ToTemplateLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateLineChartSortConfigurationPtrType) ToTemplateLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartSortConfigurationPtrOutput)
}

type TemplateLineChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateLineChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartSortConfiguration)(nil)).Elem()
}

func (o TemplateLineChartSortConfigurationOutput) ToTemplateLineChartSortConfigurationOutput() TemplateLineChartSortConfigurationOutput {
	return o
}

func (o TemplateLineChartSortConfigurationOutput) ToTemplateLineChartSortConfigurationOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationOutput {
	return o
}

func (o TemplateLineChartSortConfigurationOutput) ToTemplateLineChartSortConfigurationPtrOutput() TemplateLineChartSortConfigurationPtrOutput {
	return o.ToTemplateLineChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartSortConfigurationOutput) ToTemplateLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartSortConfiguration) *TemplateLineChartSortConfiguration {
		return &v
	}).(TemplateLineChartSortConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationOutput) CategoryItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateLineChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateLineChartSortConfigurationOutput) ColorItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.ColorItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateLineChartSortConfiguration) []TemplateFieldSortOptions { return v.SmallMultiplesSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateLineChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartSortConfiguration)(nil)).Elem()
}

func (o TemplateLineChartSortConfigurationPtrOutput) ToTemplateLineChartSortConfigurationPtrOutput() TemplateLineChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateLineChartSortConfigurationPtrOutput) ToTemplateLineChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateLineChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateLineChartSortConfigurationPtrOutput) Elem() TemplateLineChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) TemplateLineChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartSortConfiguration
		return ret
	}).(TemplateLineChartSortConfigurationOutput)
}

func (o TemplateLineChartSortConfigurationPtrOutput) CategoryItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateLineChartSortConfigurationPtrOutput) ColorItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateLineChartSortConfigurationPtrOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateLineChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateLineChartConfiguration     `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateLineChartVisualInput is an input type that accepts TemplateLineChartVisualArgs and TemplateLineChartVisualOutput values.
// You can construct a concrete instance of `TemplateLineChartVisualInput` via:
//
//	TemplateLineChartVisualArgs{...}
type TemplateLineChartVisualInput interface {
	pulumi.Input

	ToTemplateLineChartVisualOutput() TemplateLineChartVisualOutput
	ToTemplateLineChartVisualOutputWithContext(context.Context) TemplateLineChartVisualOutput
}

type TemplateLineChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateLineChartConfigurationPtrInput     `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateLineChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartVisual)(nil)).Elem()
}

func (i TemplateLineChartVisualArgs) ToTemplateLineChartVisualOutput() TemplateLineChartVisualOutput {
	return i.ToTemplateLineChartVisualOutputWithContext(context.Background())
}

func (i TemplateLineChartVisualArgs) ToTemplateLineChartVisualOutputWithContext(ctx context.Context) TemplateLineChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartVisualOutput)
}

func (i TemplateLineChartVisualArgs) ToTemplateLineChartVisualPtrOutput() TemplateLineChartVisualPtrOutput {
	return i.ToTemplateLineChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateLineChartVisualArgs) ToTemplateLineChartVisualPtrOutputWithContext(ctx context.Context) TemplateLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartVisualOutput).ToTemplateLineChartVisualPtrOutputWithContext(ctx)
}

// TemplateLineChartVisualPtrInput is an input type that accepts TemplateLineChartVisualArgs, TemplateLineChartVisualPtr and TemplateLineChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateLineChartVisualPtrInput` via:
//
//	        TemplateLineChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateLineChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateLineChartVisualPtrOutput() TemplateLineChartVisualPtrOutput
	ToTemplateLineChartVisualPtrOutputWithContext(context.Context) TemplateLineChartVisualPtrOutput
}

type templateLineChartVisualPtrType TemplateLineChartVisualArgs

func TemplateLineChartVisualPtr(v *TemplateLineChartVisualArgs) TemplateLineChartVisualPtrInput {
	return (*templateLineChartVisualPtrType)(v)
}

func (*templateLineChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartVisual)(nil)).Elem()
}

func (i *templateLineChartVisualPtrType) ToTemplateLineChartVisualPtrOutput() TemplateLineChartVisualPtrOutput {
	return i.ToTemplateLineChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateLineChartVisualPtrType) ToTemplateLineChartVisualPtrOutputWithContext(ctx context.Context) TemplateLineChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineChartVisualPtrOutput)
}

type TemplateLineChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateLineChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineChartVisual)(nil)).Elem()
}

func (o TemplateLineChartVisualOutput) ToTemplateLineChartVisualOutput() TemplateLineChartVisualOutput {
	return o
}

func (o TemplateLineChartVisualOutput) ToTemplateLineChartVisualOutputWithContext(ctx context.Context) TemplateLineChartVisualOutput {
	return o
}

func (o TemplateLineChartVisualOutput) ToTemplateLineChartVisualPtrOutput() TemplateLineChartVisualPtrOutput {
	return o.ToTemplateLineChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateLineChartVisualOutput) ToTemplateLineChartVisualPtrOutputWithContext(ctx context.Context) TemplateLineChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineChartVisual) *TemplateLineChartVisual {
		return &v
	}).(TemplateLineChartVisualPtrOutput)
}

func (o TemplateLineChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateLineChartVisualOutput) ChartConfiguration() TemplateLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) *TemplateLineChartConfiguration { return v.ChartConfiguration }).(TemplateLineChartConfigurationPtrOutput)
}

func (o TemplateLineChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateLineChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateLineChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateLineChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateLineChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateLineChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineChartVisual)(nil)).Elem()
}

func (o TemplateLineChartVisualPtrOutput) ToTemplateLineChartVisualPtrOutput() TemplateLineChartVisualPtrOutput {
	return o
}

func (o TemplateLineChartVisualPtrOutput) ToTemplateLineChartVisualPtrOutputWithContext(ctx context.Context) TemplateLineChartVisualPtrOutput {
	return o
}

func (o TemplateLineChartVisualPtrOutput) Elem() TemplateLineChartVisualOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) TemplateLineChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateLineChartVisual
		return ret
	}).(TemplateLineChartVisualOutput)
}

func (o TemplateLineChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateLineChartVisualPtrOutput) ChartConfiguration() TemplateLineChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) *TemplateLineChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateLineChartConfigurationPtrOutput)
}

func (o TemplateLineChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateLineChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateLineChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateLineChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLineChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateLineSeriesAxisDisplayOptions struct {
	AxisOptions               *TemplateAxisDisplayOptions        `pulumi:"axisOptions"`
	MissingDataConfigurations []TemplateMissingDataConfiguration `pulumi:"missingDataConfigurations"`
}

// TemplateLineSeriesAxisDisplayOptionsInput is an input type that accepts TemplateLineSeriesAxisDisplayOptionsArgs and TemplateLineSeriesAxisDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateLineSeriesAxisDisplayOptionsInput` via:
//
//	TemplateLineSeriesAxisDisplayOptionsArgs{...}
type TemplateLineSeriesAxisDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateLineSeriesAxisDisplayOptionsOutput() TemplateLineSeriesAxisDisplayOptionsOutput
	ToTemplateLineSeriesAxisDisplayOptionsOutputWithContext(context.Context) TemplateLineSeriesAxisDisplayOptionsOutput
}

type TemplateLineSeriesAxisDisplayOptionsArgs struct {
	AxisOptions               TemplateAxisDisplayOptionsPtrInput         `pulumi:"axisOptions"`
	MissingDataConfigurations TemplateMissingDataConfigurationArrayInput `pulumi:"missingDataConfigurations"`
}

func (TemplateLineSeriesAxisDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i TemplateLineSeriesAxisDisplayOptionsArgs) ToTemplateLineSeriesAxisDisplayOptionsOutput() TemplateLineSeriesAxisDisplayOptionsOutput {
	return i.ToTemplateLineSeriesAxisDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateLineSeriesAxisDisplayOptionsArgs) ToTemplateLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineSeriesAxisDisplayOptionsOutput)
}

func (i TemplateLineSeriesAxisDisplayOptionsArgs) ToTemplateLineSeriesAxisDisplayOptionsPtrOutput() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateLineSeriesAxisDisplayOptionsArgs) ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineSeriesAxisDisplayOptionsOutput).ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateLineSeriesAxisDisplayOptionsPtrInput is an input type that accepts TemplateLineSeriesAxisDisplayOptionsArgs, TemplateLineSeriesAxisDisplayOptionsPtr and TemplateLineSeriesAxisDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateLineSeriesAxisDisplayOptionsPtrInput` via:
//
//	        TemplateLineSeriesAxisDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateLineSeriesAxisDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateLineSeriesAxisDisplayOptionsPtrOutput() TemplateLineSeriesAxisDisplayOptionsPtrOutput
	ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Context) TemplateLineSeriesAxisDisplayOptionsPtrOutput
}

type templateLineSeriesAxisDisplayOptionsPtrType TemplateLineSeriesAxisDisplayOptionsArgs

func TemplateLineSeriesAxisDisplayOptionsPtr(v *TemplateLineSeriesAxisDisplayOptionsArgs) TemplateLineSeriesAxisDisplayOptionsPtrInput {
	return (*templateLineSeriesAxisDisplayOptionsPtrType)(v)
}

func (*templateLineSeriesAxisDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (i *templateLineSeriesAxisDisplayOptionsPtrType) ToTemplateLineSeriesAxisDisplayOptionsPtrOutput() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return i.ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateLineSeriesAxisDisplayOptionsPtrType) ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

type TemplateLineSeriesAxisDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateLineSeriesAxisDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) ToTemplateLineSeriesAxisDisplayOptionsOutput() TemplateLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) ToTemplateLineSeriesAxisDisplayOptionsOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsOutput {
	return o
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) ToTemplateLineSeriesAxisDisplayOptionsPtrOutput() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLineSeriesAxisDisplayOptions) *TemplateLineSeriesAxisDisplayOptions {
		return &v
	}).(TemplateLineSeriesAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) AxisOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateLineSeriesAxisDisplayOptions) *TemplateAxisDisplayOptions { return v.AxisOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineSeriesAxisDisplayOptionsOutput) MissingDataConfigurations() TemplateMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateLineSeriesAxisDisplayOptions) []TemplateMissingDataConfiguration {
		return v.MissingDataConfigurations
	}).(TemplateMissingDataConfigurationArrayOutput)
}

type TemplateLineSeriesAxisDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateLineSeriesAxisDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLineSeriesAxisDisplayOptions)(nil)).Elem()
}

func (o TemplateLineSeriesAxisDisplayOptionsPtrOutput) ToTemplateLineSeriesAxisDisplayOptionsPtrOutput() TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateLineSeriesAxisDisplayOptionsPtrOutput) ToTemplateLineSeriesAxisDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateLineSeriesAxisDisplayOptionsPtrOutput {
	return o
}

func (o TemplateLineSeriesAxisDisplayOptionsPtrOutput) Elem() TemplateLineSeriesAxisDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateLineSeriesAxisDisplayOptions) TemplateLineSeriesAxisDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateLineSeriesAxisDisplayOptions
		return ret
	}).(TemplateLineSeriesAxisDisplayOptionsOutput)
}

func (o TemplateLineSeriesAxisDisplayOptionsPtrOutput) AxisOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateLineSeriesAxisDisplayOptions) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.AxisOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateLineSeriesAxisDisplayOptionsPtrOutput) MissingDataConfigurations() TemplateMissingDataConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateLineSeriesAxisDisplayOptions) []TemplateMissingDataConfiguration {
		if v == nil {
			return nil
		}
		return v.MissingDataConfigurations
	}).(TemplateMissingDataConfigurationArrayOutput)
}

type TemplateListControlDisplayOptions struct {
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	SearchOptions        *TemplateListControlSearchOptions         `pulumi:"searchOptions"`
	SelectAllOptions     *TemplateListControlSelectAllOptions      `pulumi:"selectAllOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateListControlDisplayOptionsInput is an input type that accepts TemplateListControlDisplayOptionsArgs and TemplateListControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateListControlDisplayOptionsInput` via:
//
//	TemplateListControlDisplayOptionsArgs{...}
type TemplateListControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateListControlDisplayOptionsOutput() TemplateListControlDisplayOptionsOutput
	ToTemplateListControlDisplayOptionsOutputWithContext(context.Context) TemplateListControlDisplayOptionsOutput
}

type TemplateListControlDisplayOptionsArgs struct {
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	SearchOptions        TemplateListControlSearchOptionsPtrInput         `pulumi:"searchOptions"`
	SelectAllOptions     TemplateListControlSelectAllOptionsPtrInput      `pulumi:"selectAllOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateListControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlDisplayOptions)(nil)).Elem()
}

func (i TemplateListControlDisplayOptionsArgs) ToTemplateListControlDisplayOptionsOutput() TemplateListControlDisplayOptionsOutput {
	return i.ToTemplateListControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateListControlDisplayOptionsArgs) ToTemplateListControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlDisplayOptionsOutput)
}

func (i TemplateListControlDisplayOptionsArgs) ToTemplateListControlDisplayOptionsPtrOutput() TemplateListControlDisplayOptionsPtrOutput {
	return i.ToTemplateListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateListControlDisplayOptionsArgs) ToTemplateListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlDisplayOptionsOutput).ToTemplateListControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateListControlDisplayOptionsPtrInput is an input type that accepts TemplateListControlDisplayOptionsArgs, TemplateListControlDisplayOptionsPtr and TemplateListControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateListControlDisplayOptionsPtrInput` via:
//
//	        TemplateListControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateListControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateListControlDisplayOptionsPtrOutput() TemplateListControlDisplayOptionsPtrOutput
	ToTemplateListControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateListControlDisplayOptionsPtrOutput
}

type templateListControlDisplayOptionsPtrType TemplateListControlDisplayOptionsArgs

func TemplateListControlDisplayOptionsPtr(v *TemplateListControlDisplayOptionsArgs) TemplateListControlDisplayOptionsPtrInput {
	return (*templateListControlDisplayOptionsPtrType)(v)
}

func (*templateListControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlDisplayOptions)(nil)).Elem()
}

func (i *templateListControlDisplayOptionsPtrType) ToTemplateListControlDisplayOptionsPtrOutput() TemplateListControlDisplayOptionsPtrOutput {
	return i.ToTemplateListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateListControlDisplayOptionsPtrType) ToTemplateListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlDisplayOptionsPtrOutput)
}

type TemplateListControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateListControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlDisplayOptions)(nil)).Elem()
}

func (o TemplateListControlDisplayOptionsOutput) ToTemplateListControlDisplayOptionsOutput() TemplateListControlDisplayOptionsOutput {
	return o
}

func (o TemplateListControlDisplayOptionsOutput) ToTemplateListControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsOutput {
	return o
}

func (o TemplateListControlDisplayOptionsOutput) ToTemplateListControlDisplayOptionsPtrOutput() TemplateListControlDisplayOptionsPtrOutput {
	return o.ToTemplateListControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateListControlDisplayOptionsOutput) ToTemplateListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateListControlDisplayOptions) *TemplateListControlDisplayOptions {
		return &v
	}).(TemplateListControlDisplayOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateListControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsOutput) SearchOptions() TemplateListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v TemplateListControlDisplayOptions) *TemplateListControlSearchOptions { return v.SearchOptions }).(TemplateListControlSearchOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsOutput) SelectAllOptions() TemplateListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateListControlDisplayOptions) *TemplateListControlSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateListControlSelectAllOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateListControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateListControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateListControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlDisplayOptions)(nil)).Elem()
}

func (o TemplateListControlDisplayOptionsPtrOutput) ToTemplateListControlDisplayOptionsPtrOutput() TemplateListControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateListControlDisplayOptionsPtrOutput) ToTemplateListControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateListControlDisplayOptionsPtrOutput) Elem() TemplateListControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateListControlDisplayOptions) TemplateListControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateListControlDisplayOptions
		return ret
	}).(TemplateListControlDisplayOptionsOutput)
}

func (o TemplateListControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateListControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsPtrOutput) SearchOptions() TemplateListControlSearchOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateListControlDisplayOptions) *TemplateListControlSearchOptions {
		if v == nil {
			return nil
		}
		return v.SearchOptions
	}).(TemplateListControlSearchOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsPtrOutput) SelectAllOptions() TemplateListControlSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateListControlDisplayOptions) *TemplateListControlSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateListControlSelectAllOptionsPtrOutput)
}

func (o TemplateListControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateListControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateListControlSearchOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateListControlSearchOptionsInput is an input type that accepts TemplateListControlSearchOptionsArgs and TemplateListControlSearchOptionsOutput values.
// You can construct a concrete instance of `TemplateListControlSearchOptionsInput` via:
//
//	TemplateListControlSearchOptionsArgs{...}
type TemplateListControlSearchOptionsInput interface {
	pulumi.Input

	ToTemplateListControlSearchOptionsOutput() TemplateListControlSearchOptionsOutput
	ToTemplateListControlSearchOptionsOutputWithContext(context.Context) TemplateListControlSearchOptionsOutput
}

type TemplateListControlSearchOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateListControlSearchOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlSearchOptions)(nil)).Elem()
}

func (i TemplateListControlSearchOptionsArgs) ToTemplateListControlSearchOptionsOutput() TemplateListControlSearchOptionsOutput {
	return i.ToTemplateListControlSearchOptionsOutputWithContext(context.Background())
}

func (i TemplateListControlSearchOptionsArgs) ToTemplateListControlSearchOptionsOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSearchOptionsOutput)
}

func (i TemplateListControlSearchOptionsArgs) ToTemplateListControlSearchOptionsPtrOutput() TemplateListControlSearchOptionsPtrOutput {
	return i.ToTemplateListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateListControlSearchOptionsArgs) ToTemplateListControlSearchOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSearchOptionsOutput).ToTemplateListControlSearchOptionsPtrOutputWithContext(ctx)
}

// TemplateListControlSearchOptionsPtrInput is an input type that accepts TemplateListControlSearchOptionsArgs, TemplateListControlSearchOptionsPtr and TemplateListControlSearchOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateListControlSearchOptionsPtrInput` via:
//
//	        TemplateListControlSearchOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateListControlSearchOptionsPtrInput interface {
	pulumi.Input

	ToTemplateListControlSearchOptionsPtrOutput() TemplateListControlSearchOptionsPtrOutput
	ToTemplateListControlSearchOptionsPtrOutputWithContext(context.Context) TemplateListControlSearchOptionsPtrOutput
}

type templateListControlSearchOptionsPtrType TemplateListControlSearchOptionsArgs

func TemplateListControlSearchOptionsPtr(v *TemplateListControlSearchOptionsArgs) TemplateListControlSearchOptionsPtrInput {
	return (*templateListControlSearchOptionsPtrType)(v)
}

func (*templateListControlSearchOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlSearchOptions)(nil)).Elem()
}

func (i *templateListControlSearchOptionsPtrType) ToTemplateListControlSearchOptionsPtrOutput() TemplateListControlSearchOptionsPtrOutput {
	return i.ToTemplateListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (i *templateListControlSearchOptionsPtrType) ToTemplateListControlSearchOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSearchOptionsPtrOutput)
}

type TemplateListControlSearchOptionsOutput struct{ *pulumi.OutputState }

func (TemplateListControlSearchOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlSearchOptions)(nil)).Elem()
}

func (o TemplateListControlSearchOptionsOutput) ToTemplateListControlSearchOptionsOutput() TemplateListControlSearchOptionsOutput {
	return o
}

func (o TemplateListControlSearchOptionsOutput) ToTemplateListControlSearchOptionsOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsOutput {
	return o
}

func (o TemplateListControlSearchOptionsOutput) ToTemplateListControlSearchOptionsPtrOutput() TemplateListControlSearchOptionsPtrOutput {
	return o.ToTemplateListControlSearchOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateListControlSearchOptionsOutput) ToTemplateListControlSearchOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateListControlSearchOptions) *TemplateListControlSearchOptions {
		return &v
	}).(TemplateListControlSearchOptionsPtrOutput)
}

func (o TemplateListControlSearchOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateListControlSearchOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateListControlSearchOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateListControlSearchOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlSearchOptions)(nil)).Elem()
}

func (o TemplateListControlSearchOptionsPtrOutput) ToTemplateListControlSearchOptionsPtrOutput() TemplateListControlSearchOptionsPtrOutput {
	return o
}

func (o TemplateListControlSearchOptionsPtrOutput) ToTemplateListControlSearchOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSearchOptionsPtrOutput {
	return o
}

func (o TemplateListControlSearchOptionsPtrOutput) Elem() TemplateListControlSearchOptionsOutput {
	return o.ApplyT(func(v *TemplateListControlSearchOptions) TemplateListControlSearchOptions {
		if v != nil {
			return *v
		}
		var ret TemplateListControlSearchOptions
		return ret
	}).(TemplateListControlSearchOptionsOutput)
}

func (o TemplateListControlSearchOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateListControlSearchOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateListControlSelectAllOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateListControlSelectAllOptionsInput is an input type that accepts TemplateListControlSelectAllOptionsArgs and TemplateListControlSelectAllOptionsOutput values.
// You can construct a concrete instance of `TemplateListControlSelectAllOptionsInput` via:
//
//	TemplateListControlSelectAllOptionsArgs{...}
type TemplateListControlSelectAllOptionsInput interface {
	pulumi.Input

	ToTemplateListControlSelectAllOptionsOutput() TemplateListControlSelectAllOptionsOutput
	ToTemplateListControlSelectAllOptionsOutputWithContext(context.Context) TemplateListControlSelectAllOptionsOutput
}

type TemplateListControlSelectAllOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateListControlSelectAllOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlSelectAllOptions)(nil)).Elem()
}

func (i TemplateListControlSelectAllOptionsArgs) ToTemplateListControlSelectAllOptionsOutput() TemplateListControlSelectAllOptionsOutput {
	return i.ToTemplateListControlSelectAllOptionsOutputWithContext(context.Background())
}

func (i TemplateListControlSelectAllOptionsArgs) ToTemplateListControlSelectAllOptionsOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSelectAllOptionsOutput)
}

func (i TemplateListControlSelectAllOptionsArgs) ToTemplateListControlSelectAllOptionsPtrOutput() TemplateListControlSelectAllOptionsPtrOutput {
	return i.ToTemplateListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateListControlSelectAllOptionsArgs) ToTemplateListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSelectAllOptionsOutput).ToTemplateListControlSelectAllOptionsPtrOutputWithContext(ctx)
}

// TemplateListControlSelectAllOptionsPtrInput is an input type that accepts TemplateListControlSelectAllOptionsArgs, TemplateListControlSelectAllOptionsPtr and TemplateListControlSelectAllOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateListControlSelectAllOptionsPtrInput` via:
//
//	        TemplateListControlSelectAllOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateListControlSelectAllOptionsPtrInput interface {
	pulumi.Input

	ToTemplateListControlSelectAllOptionsPtrOutput() TemplateListControlSelectAllOptionsPtrOutput
	ToTemplateListControlSelectAllOptionsPtrOutputWithContext(context.Context) TemplateListControlSelectAllOptionsPtrOutput
}

type templateListControlSelectAllOptionsPtrType TemplateListControlSelectAllOptionsArgs

func TemplateListControlSelectAllOptionsPtr(v *TemplateListControlSelectAllOptionsArgs) TemplateListControlSelectAllOptionsPtrInput {
	return (*templateListControlSelectAllOptionsPtrType)(v)
}

func (*templateListControlSelectAllOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlSelectAllOptions)(nil)).Elem()
}

func (i *templateListControlSelectAllOptionsPtrType) ToTemplateListControlSelectAllOptionsPtrOutput() TemplateListControlSelectAllOptionsPtrOutput {
	return i.ToTemplateListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (i *templateListControlSelectAllOptionsPtrType) ToTemplateListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateListControlSelectAllOptionsPtrOutput)
}

type TemplateListControlSelectAllOptionsOutput struct{ *pulumi.OutputState }

func (TemplateListControlSelectAllOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateListControlSelectAllOptions)(nil)).Elem()
}

func (o TemplateListControlSelectAllOptionsOutput) ToTemplateListControlSelectAllOptionsOutput() TemplateListControlSelectAllOptionsOutput {
	return o
}

func (o TemplateListControlSelectAllOptionsOutput) ToTemplateListControlSelectAllOptionsOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsOutput {
	return o
}

func (o TemplateListControlSelectAllOptionsOutput) ToTemplateListControlSelectAllOptionsPtrOutput() TemplateListControlSelectAllOptionsPtrOutput {
	return o.ToTemplateListControlSelectAllOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateListControlSelectAllOptionsOutput) ToTemplateListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateListControlSelectAllOptions) *TemplateListControlSelectAllOptions {
		return &v
	}).(TemplateListControlSelectAllOptionsPtrOutput)
}

func (o TemplateListControlSelectAllOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateListControlSelectAllOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateListControlSelectAllOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateListControlSelectAllOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateListControlSelectAllOptions)(nil)).Elem()
}

func (o TemplateListControlSelectAllOptionsPtrOutput) ToTemplateListControlSelectAllOptionsPtrOutput() TemplateListControlSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateListControlSelectAllOptionsPtrOutput) ToTemplateListControlSelectAllOptionsPtrOutputWithContext(ctx context.Context) TemplateListControlSelectAllOptionsPtrOutput {
	return o
}

func (o TemplateListControlSelectAllOptionsPtrOutput) Elem() TemplateListControlSelectAllOptionsOutput {
	return o.ApplyT(func(v *TemplateListControlSelectAllOptions) TemplateListControlSelectAllOptions {
		if v != nil {
			return *v
		}
		var ret TemplateListControlSelectAllOptions
		return ret
	}).(TemplateListControlSelectAllOptionsOutput)
}

func (o TemplateListControlSelectAllOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateListControlSelectAllOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateLoadingAnimation struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateLoadingAnimationInput is an input type that accepts TemplateLoadingAnimationArgs and TemplateLoadingAnimationOutput values.
// You can construct a concrete instance of `TemplateLoadingAnimationInput` via:
//
//	TemplateLoadingAnimationArgs{...}
type TemplateLoadingAnimationInput interface {
	pulumi.Input

	ToTemplateLoadingAnimationOutput() TemplateLoadingAnimationOutput
	ToTemplateLoadingAnimationOutputWithContext(context.Context) TemplateLoadingAnimationOutput
}

type TemplateLoadingAnimationArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateLoadingAnimationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLoadingAnimation)(nil)).Elem()
}

func (i TemplateLoadingAnimationArgs) ToTemplateLoadingAnimationOutput() TemplateLoadingAnimationOutput {
	return i.ToTemplateLoadingAnimationOutputWithContext(context.Background())
}

func (i TemplateLoadingAnimationArgs) ToTemplateLoadingAnimationOutputWithContext(ctx context.Context) TemplateLoadingAnimationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLoadingAnimationOutput)
}

func (i TemplateLoadingAnimationArgs) ToTemplateLoadingAnimationPtrOutput() TemplateLoadingAnimationPtrOutput {
	return i.ToTemplateLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i TemplateLoadingAnimationArgs) ToTemplateLoadingAnimationPtrOutputWithContext(ctx context.Context) TemplateLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLoadingAnimationOutput).ToTemplateLoadingAnimationPtrOutputWithContext(ctx)
}

// TemplateLoadingAnimationPtrInput is an input type that accepts TemplateLoadingAnimationArgs, TemplateLoadingAnimationPtr and TemplateLoadingAnimationPtrOutput values.
// You can construct a concrete instance of `TemplateLoadingAnimationPtrInput` via:
//
//	        TemplateLoadingAnimationArgs{...}
//
//	or:
//
//	        nil
type TemplateLoadingAnimationPtrInput interface {
	pulumi.Input

	ToTemplateLoadingAnimationPtrOutput() TemplateLoadingAnimationPtrOutput
	ToTemplateLoadingAnimationPtrOutputWithContext(context.Context) TemplateLoadingAnimationPtrOutput
}

type templateLoadingAnimationPtrType TemplateLoadingAnimationArgs

func TemplateLoadingAnimationPtr(v *TemplateLoadingAnimationArgs) TemplateLoadingAnimationPtrInput {
	return (*templateLoadingAnimationPtrType)(v)
}

func (*templateLoadingAnimationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLoadingAnimation)(nil)).Elem()
}

func (i *templateLoadingAnimationPtrType) ToTemplateLoadingAnimationPtrOutput() TemplateLoadingAnimationPtrOutput {
	return i.ToTemplateLoadingAnimationPtrOutputWithContext(context.Background())
}

func (i *templateLoadingAnimationPtrType) ToTemplateLoadingAnimationPtrOutputWithContext(ctx context.Context) TemplateLoadingAnimationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLoadingAnimationPtrOutput)
}

type TemplateLoadingAnimationOutput struct{ *pulumi.OutputState }

func (TemplateLoadingAnimationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLoadingAnimation)(nil)).Elem()
}

func (o TemplateLoadingAnimationOutput) ToTemplateLoadingAnimationOutput() TemplateLoadingAnimationOutput {
	return o
}

func (o TemplateLoadingAnimationOutput) ToTemplateLoadingAnimationOutputWithContext(ctx context.Context) TemplateLoadingAnimationOutput {
	return o
}

func (o TemplateLoadingAnimationOutput) ToTemplateLoadingAnimationPtrOutput() TemplateLoadingAnimationPtrOutput {
	return o.ToTemplateLoadingAnimationPtrOutputWithContext(context.Background())
}

func (o TemplateLoadingAnimationOutput) ToTemplateLoadingAnimationPtrOutputWithContext(ctx context.Context) TemplateLoadingAnimationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLoadingAnimation) *TemplateLoadingAnimation {
		return &v
	}).(TemplateLoadingAnimationPtrOutput)
}

func (o TemplateLoadingAnimationOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateLoadingAnimation) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateLoadingAnimationPtrOutput struct{ *pulumi.OutputState }

func (TemplateLoadingAnimationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLoadingAnimation)(nil)).Elem()
}

func (o TemplateLoadingAnimationPtrOutput) ToTemplateLoadingAnimationPtrOutput() TemplateLoadingAnimationPtrOutput {
	return o
}

func (o TemplateLoadingAnimationPtrOutput) ToTemplateLoadingAnimationPtrOutputWithContext(ctx context.Context) TemplateLoadingAnimationPtrOutput {
	return o
}

func (o TemplateLoadingAnimationPtrOutput) Elem() TemplateLoadingAnimationOutput {
	return o.ApplyT(func(v *TemplateLoadingAnimation) TemplateLoadingAnimation {
		if v != nil {
			return *v
		}
		var ret TemplateLoadingAnimation
		return ret
	}).(TemplateLoadingAnimationOutput)
}

func (o TemplateLoadingAnimationPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateLoadingAnimation) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateLocalNavigationConfiguration struct {
	TargetSheetId string `pulumi:"targetSheetId"`
}

// TemplateLocalNavigationConfigurationInput is an input type that accepts TemplateLocalNavigationConfigurationArgs and TemplateLocalNavigationConfigurationOutput values.
// You can construct a concrete instance of `TemplateLocalNavigationConfigurationInput` via:
//
//	TemplateLocalNavigationConfigurationArgs{...}
type TemplateLocalNavigationConfigurationInput interface {
	pulumi.Input

	ToTemplateLocalNavigationConfigurationOutput() TemplateLocalNavigationConfigurationOutput
	ToTemplateLocalNavigationConfigurationOutputWithContext(context.Context) TemplateLocalNavigationConfigurationOutput
}

type TemplateLocalNavigationConfigurationArgs struct {
	TargetSheetId pulumi.StringInput `pulumi:"targetSheetId"`
}

func (TemplateLocalNavigationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLocalNavigationConfiguration)(nil)).Elem()
}

func (i TemplateLocalNavigationConfigurationArgs) ToTemplateLocalNavigationConfigurationOutput() TemplateLocalNavigationConfigurationOutput {
	return i.ToTemplateLocalNavigationConfigurationOutputWithContext(context.Background())
}

func (i TemplateLocalNavigationConfigurationArgs) ToTemplateLocalNavigationConfigurationOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLocalNavigationConfigurationOutput)
}

func (i TemplateLocalNavigationConfigurationArgs) ToTemplateLocalNavigationConfigurationPtrOutput() TemplateLocalNavigationConfigurationPtrOutput {
	return i.ToTemplateLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateLocalNavigationConfigurationArgs) ToTemplateLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLocalNavigationConfigurationOutput).ToTemplateLocalNavigationConfigurationPtrOutputWithContext(ctx)
}

// TemplateLocalNavigationConfigurationPtrInput is an input type that accepts TemplateLocalNavigationConfigurationArgs, TemplateLocalNavigationConfigurationPtr and TemplateLocalNavigationConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateLocalNavigationConfigurationPtrInput` via:
//
//	        TemplateLocalNavigationConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateLocalNavigationConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateLocalNavigationConfigurationPtrOutput() TemplateLocalNavigationConfigurationPtrOutput
	ToTemplateLocalNavigationConfigurationPtrOutputWithContext(context.Context) TemplateLocalNavigationConfigurationPtrOutput
}

type templateLocalNavigationConfigurationPtrType TemplateLocalNavigationConfigurationArgs

func TemplateLocalNavigationConfigurationPtr(v *TemplateLocalNavigationConfigurationArgs) TemplateLocalNavigationConfigurationPtrInput {
	return (*templateLocalNavigationConfigurationPtrType)(v)
}

func (*templateLocalNavigationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLocalNavigationConfiguration)(nil)).Elem()
}

func (i *templateLocalNavigationConfigurationPtrType) ToTemplateLocalNavigationConfigurationPtrOutput() TemplateLocalNavigationConfigurationPtrOutput {
	return i.ToTemplateLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateLocalNavigationConfigurationPtrType) ToTemplateLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLocalNavigationConfigurationPtrOutput)
}

type TemplateLocalNavigationConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateLocalNavigationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLocalNavigationConfiguration)(nil)).Elem()
}

func (o TemplateLocalNavigationConfigurationOutput) ToTemplateLocalNavigationConfigurationOutput() TemplateLocalNavigationConfigurationOutput {
	return o
}

func (o TemplateLocalNavigationConfigurationOutput) ToTemplateLocalNavigationConfigurationOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationOutput {
	return o
}

func (o TemplateLocalNavigationConfigurationOutput) ToTemplateLocalNavigationConfigurationPtrOutput() TemplateLocalNavigationConfigurationPtrOutput {
	return o.ToTemplateLocalNavigationConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateLocalNavigationConfigurationOutput) ToTemplateLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLocalNavigationConfiguration) *TemplateLocalNavigationConfiguration {
		return &v
	}).(TemplateLocalNavigationConfigurationPtrOutput)
}

func (o TemplateLocalNavigationConfigurationOutput) TargetSheetId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateLocalNavigationConfiguration) string { return v.TargetSheetId }).(pulumi.StringOutput)
}

type TemplateLocalNavigationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateLocalNavigationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLocalNavigationConfiguration)(nil)).Elem()
}

func (o TemplateLocalNavigationConfigurationPtrOutput) ToTemplateLocalNavigationConfigurationPtrOutput() TemplateLocalNavigationConfigurationPtrOutput {
	return o
}

func (o TemplateLocalNavigationConfigurationPtrOutput) ToTemplateLocalNavigationConfigurationPtrOutputWithContext(ctx context.Context) TemplateLocalNavigationConfigurationPtrOutput {
	return o
}

func (o TemplateLocalNavigationConfigurationPtrOutput) Elem() TemplateLocalNavigationConfigurationOutput {
	return o.ApplyT(func(v *TemplateLocalNavigationConfiguration) TemplateLocalNavigationConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateLocalNavigationConfiguration
		return ret
	}).(TemplateLocalNavigationConfigurationOutput)
}

func (o TemplateLocalNavigationConfigurationPtrOutput) TargetSheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLocalNavigationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TargetSheetId
	}).(pulumi.StringPtrOutput)
}

type TemplateLongFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// TemplateLongFormatTextInput is an input type that accepts TemplateLongFormatTextArgs and TemplateLongFormatTextOutput values.
// You can construct a concrete instance of `TemplateLongFormatTextInput` via:
//
//	TemplateLongFormatTextArgs{...}
type TemplateLongFormatTextInput interface {
	pulumi.Input

	ToTemplateLongFormatTextOutput() TemplateLongFormatTextOutput
	ToTemplateLongFormatTextOutputWithContext(context.Context) TemplateLongFormatTextOutput
}

type TemplateLongFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (TemplateLongFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLongFormatText)(nil)).Elem()
}

func (i TemplateLongFormatTextArgs) ToTemplateLongFormatTextOutput() TemplateLongFormatTextOutput {
	return i.ToTemplateLongFormatTextOutputWithContext(context.Background())
}

func (i TemplateLongFormatTextArgs) ToTemplateLongFormatTextOutputWithContext(ctx context.Context) TemplateLongFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLongFormatTextOutput)
}

func (i TemplateLongFormatTextArgs) ToTemplateLongFormatTextPtrOutput() TemplateLongFormatTextPtrOutput {
	return i.ToTemplateLongFormatTextPtrOutputWithContext(context.Background())
}

func (i TemplateLongFormatTextArgs) ToTemplateLongFormatTextPtrOutputWithContext(ctx context.Context) TemplateLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLongFormatTextOutput).ToTemplateLongFormatTextPtrOutputWithContext(ctx)
}

// TemplateLongFormatTextPtrInput is an input type that accepts TemplateLongFormatTextArgs, TemplateLongFormatTextPtr and TemplateLongFormatTextPtrOutput values.
// You can construct a concrete instance of `TemplateLongFormatTextPtrInput` via:
//
//	        TemplateLongFormatTextArgs{...}
//
//	or:
//
//	        nil
type TemplateLongFormatTextPtrInput interface {
	pulumi.Input

	ToTemplateLongFormatTextPtrOutput() TemplateLongFormatTextPtrOutput
	ToTemplateLongFormatTextPtrOutputWithContext(context.Context) TemplateLongFormatTextPtrOutput
}

type templateLongFormatTextPtrType TemplateLongFormatTextArgs

func TemplateLongFormatTextPtr(v *TemplateLongFormatTextArgs) TemplateLongFormatTextPtrInput {
	return (*templateLongFormatTextPtrType)(v)
}

func (*templateLongFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLongFormatText)(nil)).Elem()
}

func (i *templateLongFormatTextPtrType) ToTemplateLongFormatTextPtrOutput() TemplateLongFormatTextPtrOutput {
	return i.ToTemplateLongFormatTextPtrOutputWithContext(context.Background())
}

func (i *templateLongFormatTextPtrType) ToTemplateLongFormatTextPtrOutputWithContext(ctx context.Context) TemplateLongFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateLongFormatTextPtrOutput)
}

type TemplateLongFormatTextOutput struct{ *pulumi.OutputState }

func (TemplateLongFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateLongFormatText)(nil)).Elem()
}

func (o TemplateLongFormatTextOutput) ToTemplateLongFormatTextOutput() TemplateLongFormatTextOutput {
	return o
}

func (o TemplateLongFormatTextOutput) ToTemplateLongFormatTextOutputWithContext(ctx context.Context) TemplateLongFormatTextOutput {
	return o
}

func (o TemplateLongFormatTextOutput) ToTemplateLongFormatTextPtrOutput() TemplateLongFormatTextPtrOutput {
	return o.ToTemplateLongFormatTextPtrOutputWithContext(context.Background())
}

func (o TemplateLongFormatTextOutput) ToTemplateLongFormatTextPtrOutputWithContext(ctx context.Context) TemplateLongFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateLongFormatText) *TemplateLongFormatText {
		return &v
	}).(TemplateLongFormatTextPtrOutput)
}

func (o TemplateLongFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLongFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o TemplateLongFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateLongFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type TemplateLongFormatTextPtrOutput struct{ *pulumi.OutputState }

func (TemplateLongFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateLongFormatText)(nil)).Elem()
}

func (o TemplateLongFormatTextPtrOutput) ToTemplateLongFormatTextPtrOutput() TemplateLongFormatTextPtrOutput {
	return o
}

func (o TemplateLongFormatTextPtrOutput) ToTemplateLongFormatTextPtrOutputWithContext(ctx context.Context) TemplateLongFormatTextPtrOutput {
	return o
}

func (o TemplateLongFormatTextPtrOutput) Elem() TemplateLongFormatTextOutput {
	return o.ApplyT(func(v *TemplateLongFormatText) TemplateLongFormatText {
		if v != nil {
			return *v
		}
		var ret TemplateLongFormatText
		return ret
	}).(TemplateLongFormatTextOutput)
}

func (o TemplateLongFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o TemplateLongFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateLongFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type TemplateMappedDataSetParameter struct {
	DataSetIdentifier    string `pulumi:"dataSetIdentifier"`
	DataSetParameterName string `pulumi:"dataSetParameterName"`
}

// TemplateMappedDataSetParameterInput is an input type that accepts TemplateMappedDataSetParameterArgs and TemplateMappedDataSetParameterOutput values.
// You can construct a concrete instance of `TemplateMappedDataSetParameterInput` via:
//
//	TemplateMappedDataSetParameterArgs{...}
type TemplateMappedDataSetParameterInput interface {
	pulumi.Input

	ToTemplateMappedDataSetParameterOutput() TemplateMappedDataSetParameterOutput
	ToTemplateMappedDataSetParameterOutputWithContext(context.Context) TemplateMappedDataSetParameterOutput
}

type TemplateMappedDataSetParameterArgs struct {
	DataSetIdentifier    pulumi.StringInput `pulumi:"dataSetIdentifier"`
	DataSetParameterName pulumi.StringInput `pulumi:"dataSetParameterName"`
}

func (TemplateMappedDataSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMappedDataSetParameter)(nil)).Elem()
}

func (i TemplateMappedDataSetParameterArgs) ToTemplateMappedDataSetParameterOutput() TemplateMappedDataSetParameterOutput {
	return i.ToTemplateMappedDataSetParameterOutputWithContext(context.Background())
}

func (i TemplateMappedDataSetParameterArgs) ToTemplateMappedDataSetParameterOutputWithContext(ctx context.Context) TemplateMappedDataSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMappedDataSetParameterOutput)
}

// TemplateMappedDataSetParameterArrayInput is an input type that accepts TemplateMappedDataSetParameterArray and TemplateMappedDataSetParameterArrayOutput values.
// You can construct a concrete instance of `TemplateMappedDataSetParameterArrayInput` via:
//
//	TemplateMappedDataSetParameterArray{ TemplateMappedDataSetParameterArgs{...} }
type TemplateMappedDataSetParameterArrayInput interface {
	pulumi.Input

	ToTemplateMappedDataSetParameterArrayOutput() TemplateMappedDataSetParameterArrayOutput
	ToTemplateMappedDataSetParameterArrayOutputWithContext(context.Context) TemplateMappedDataSetParameterArrayOutput
}

type TemplateMappedDataSetParameterArray []TemplateMappedDataSetParameterInput

func (TemplateMappedDataSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMappedDataSetParameter)(nil)).Elem()
}

func (i TemplateMappedDataSetParameterArray) ToTemplateMappedDataSetParameterArrayOutput() TemplateMappedDataSetParameterArrayOutput {
	return i.ToTemplateMappedDataSetParameterArrayOutputWithContext(context.Background())
}

func (i TemplateMappedDataSetParameterArray) ToTemplateMappedDataSetParameterArrayOutputWithContext(ctx context.Context) TemplateMappedDataSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMappedDataSetParameterArrayOutput)
}

type TemplateMappedDataSetParameterOutput struct{ *pulumi.OutputState }

func (TemplateMappedDataSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMappedDataSetParameter)(nil)).Elem()
}

func (o TemplateMappedDataSetParameterOutput) ToTemplateMappedDataSetParameterOutput() TemplateMappedDataSetParameterOutput {
	return o
}

func (o TemplateMappedDataSetParameterOutput) ToTemplateMappedDataSetParameterOutputWithContext(ctx context.Context) TemplateMappedDataSetParameterOutput {
	return o
}

func (o TemplateMappedDataSetParameterOutput) DataSetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateMappedDataSetParameter) string { return v.DataSetIdentifier }).(pulumi.StringOutput)
}

func (o TemplateMappedDataSetParameterOutput) DataSetParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateMappedDataSetParameter) string { return v.DataSetParameterName }).(pulumi.StringOutput)
}

type TemplateMappedDataSetParameterArrayOutput struct{ *pulumi.OutputState }

func (TemplateMappedDataSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMappedDataSetParameter)(nil)).Elem()
}

func (o TemplateMappedDataSetParameterArrayOutput) ToTemplateMappedDataSetParameterArrayOutput() TemplateMappedDataSetParameterArrayOutput {
	return o
}

func (o TemplateMappedDataSetParameterArrayOutput) ToTemplateMappedDataSetParameterArrayOutputWithContext(ctx context.Context) TemplateMappedDataSetParameterArrayOutput {
	return o
}

func (o TemplateMappedDataSetParameterArrayOutput) Index(i pulumi.IntInput) TemplateMappedDataSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateMappedDataSetParameter {
		return vs[0].([]TemplateMappedDataSetParameter)[vs[1].(int)]
	}).(TemplateMappedDataSetParameterOutput)
}

type TemplateMaximumLabelType struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateMaximumLabelTypeInput is an input type that accepts TemplateMaximumLabelTypeArgs and TemplateMaximumLabelTypeOutput values.
// You can construct a concrete instance of `TemplateMaximumLabelTypeInput` via:
//
//	TemplateMaximumLabelTypeArgs{...}
type TemplateMaximumLabelTypeInput interface {
	pulumi.Input

	ToTemplateMaximumLabelTypeOutput() TemplateMaximumLabelTypeOutput
	ToTemplateMaximumLabelTypeOutputWithContext(context.Context) TemplateMaximumLabelTypeOutput
}

type TemplateMaximumLabelTypeArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateMaximumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumLabelType)(nil)).Elem()
}

func (i TemplateMaximumLabelTypeArgs) ToTemplateMaximumLabelTypeOutput() TemplateMaximumLabelTypeOutput {
	return i.ToTemplateMaximumLabelTypeOutputWithContext(context.Background())
}

func (i TemplateMaximumLabelTypeArgs) ToTemplateMaximumLabelTypeOutputWithContext(ctx context.Context) TemplateMaximumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumLabelTypeOutput)
}

func (i TemplateMaximumLabelTypeArgs) ToTemplateMaximumLabelTypePtrOutput() TemplateMaximumLabelTypePtrOutput {
	return i.ToTemplateMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i TemplateMaximumLabelTypeArgs) ToTemplateMaximumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumLabelTypeOutput).ToTemplateMaximumLabelTypePtrOutputWithContext(ctx)
}

// TemplateMaximumLabelTypePtrInput is an input type that accepts TemplateMaximumLabelTypeArgs, TemplateMaximumLabelTypePtr and TemplateMaximumLabelTypePtrOutput values.
// You can construct a concrete instance of `TemplateMaximumLabelTypePtrInput` via:
//
//	        TemplateMaximumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateMaximumLabelTypePtrInput interface {
	pulumi.Input

	ToTemplateMaximumLabelTypePtrOutput() TemplateMaximumLabelTypePtrOutput
	ToTemplateMaximumLabelTypePtrOutputWithContext(context.Context) TemplateMaximumLabelTypePtrOutput
}

type templateMaximumLabelTypePtrType TemplateMaximumLabelTypeArgs

func TemplateMaximumLabelTypePtr(v *TemplateMaximumLabelTypeArgs) TemplateMaximumLabelTypePtrInput {
	return (*templateMaximumLabelTypePtrType)(v)
}

func (*templateMaximumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMaximumLabelType)(nil)).Elem()
}

func (i *templateMaximumLabelTypePtrType) ToTemplateMaximumLabelTypePtrOutput() TemplateMaximumLabelTypePtrOutput {
	return i.ToTemplateMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (i *templateMaximumLabelTypePtrType) ToTemplateMaximumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMaximumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumLabelTypePtrOutput)
}

type TemplateMaximumLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateMaximumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumLabelType)(nil)).Elem()
}

func (o TemplateMaximumLabelTypeOutput) ToTemplateMaximumLabelTypeOutput() TemplateMaximumLabelTypeOutput {
	return o
}

func (o TemplateMaximumLabelTypeOutput) ToTemplateMaximumLabelTypeOutputWithContext(ctx context.Context) TemplateMaximumLabelTypeOutput {
	return o
}

func (o TemplateMaximumLabelTypeOutput) ToTemplateMaximumLabelTypePtrOutput() TemplateMaximumLabelTypePtrOutput {
	return o.ToTemplateMaximumLabelTypePtrOutputWithContext(context.Background())
}

func (o TemplateMaximumLabelTypeOutput) ToTemplateMaximumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMaximumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMaximumLabelType) *TemplateMaximumLabelType {
		return &v
	}).(TemplateMaximumLabelTypePtrOutput)
}

func (o TemplateMaximumLabelTypeOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateMaximumLabelType) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateMaximumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateMaximumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMaximumLabelType)(nil)).Elem()
}

func (o TemplateMaximumLabelTypePtrOutput) ToTemplateMaximumLabelTypePtrOutput() TemplateMaximumLabelTypePtrOutput {
	return o
}

func (o TemplateMaximumLabelTypePtrOutput) ToTemplateMaximumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMaximumLabelTypePtrOutput {
	return o
}

func (o TemplateMaximumLabelTypePtrOutput) Elem() TemplateMaximumLabelTypeOutput {
	return o.ApplyT(func(v *TemplateMaximumLabelType) TemplateMaximumLabelType {
		if v != nil {
			return *v
		}
		var ret TemplateMaximumLabelType
		return ret
	}).(TemplateMaximumLabelTypeOutput)
}

func (o TemplateMaximumLabelTypePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateMaximumLabelType) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateMaximumMinimumComputation struct {
	ComputationId string                                `pulumi:"computationId"`
	Name          *string                               `pulumi:"name"`
	Time          *TemplateDimensionField               `pulumi:"time"`
	Type          TemplateMaximumMinimumComputationType `pulumi:"type"`
	Value         *TemplateMeasureField                 `pulumi:"value"`
}

// TemplateMaximumMinimumComputationInput is an input type that accepts TemplateMaximumMinimumComputationArgs and TemplateMaximumMinimumComputationOutput values.
// You can construct a concrete instance of `TemplateMaximumMinimumComputationInput` via:
//
//	TemplateMaximumMinimumComputationArgs{...}
type TemplateMaximumMinimumComputationInput interface {
	pulumi.Input

	ToTemplateMaximumMinimumComputationOutput() TemplateMaximumMinimumComputationOutput
	ToTemplateMaximumMinimumComputationOutputWithContext(context.Context) TemplateMaximumMinimumComputationOutput
}

type TemplateMaximumMinimumComputationArgs struct {
	ComputationId pulumi.StringInput                         `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                      `pulumi:"name"`
	Time          TemplateDimensionFieldPtrInput             `pulumi:"time"`
	Type          TemplateMaximumMinimumComputationTypeInput `pulumi:"type"`
	Value         TemplateMeasureFieldPtrInput               `pulumi:"value"`
}

func (TemplateMaximumMinimumComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumMinimumComputation)(nil)).Elem()
}

func (i TemplateMaximumMinimumComputationArgs) ToTemplateMaximumMinimumComputationOutput() TemplateMaximumMinimumComputationOutput {
	return i.ToTemplateMaximumMinimumComputationOutputWithContext(context.Background())
}

func (i TemplateMaximumMinimumComputationArgs) ToTemplateMaximumMinimumComputationOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumMinimumComputationOutput)
}

func (i TemplateMaximumMinimumComputationArgs) ToTemplateMaximumMinimumComputationPtrOutput() TemplateMaximumMinimumComputationPtrOutput {
	return i.ToTemplateMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i TemplateMaximumMinimumComputationArgs) ToTemplateMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumMinimumComputationOutput).ToTemplateMaximumMinimumComputationPtrOutputWithContext(ctx)
}

// TemplateMaximumMinimumComputationPtrInput is an input type that accepts TemplateMaximumMinimumComputationArgs, TemplateMaximumMinimumComputationPtr and TemplateMaximumMinimumComputationPtrOutput values.
// You can construct a concrete instance of `TemplateMaximumMinimumComputationPtrInput` via:
//
//	        TemplateMaximumMinimumComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateMaximumMinimumComputationPtrInput interface {
	pulumi.Input

	ToTemplateMaximumMinimumComputationPtrOutput() TemplateMaximumMinimumComputationPtrOutput
	ToTemplateMaximumMinimumComputationPtrOutputWithContext(context.Context) TemplateMaximumMinimumComputationPtrOutput
}

type templateMaximumMinimumComputationPtrType TemplateMaximumMinimumComputationArgs

func TemplateMaximumMinimumComputationPtr(v *TemplateMaximumMinimumComputationArgs) TemplateMaximumMinimumComputationPtrInput {
	return (*templateMaximumMinimumComputationPtrType)(v)
}

func (*templateMaximumMinimumComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMaximumMinimumComputation)(nil)).Elem()
}

func (i *templateMaximumMinimumComputationPtrType) ToTemplateMaximumMinimumComputationPtrOutput() TemplateMaximumMinimumComputationPtrOutput {
	return i.ToTemplateMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (i *templateMaximumMinimumComputationPtrType) ToTemplateMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMaximumMinimumComputationPtrOutput)
}

type TemplateMaximumMinimumComputationOutput struct{ *pulumi.OutputState }

func (TemplateMaximumMinimumComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMaximumMinimumComputation)(nil)).Elem()
}

func (o TemplateMaximumMinimumComputationOutput) ToTemplateMaximumMinimumComputationOutput() TemplateMaximumMinimumComputationOutput {
	return o
}

func (o TemplateMaximumMinimumComputationOutput) ToTemplateMaximumMinimumComputationOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationOutput {
	return o
}

func (o TemplateMaximumMinimumComputationOutput) ToTemplateMaximumMinimumComputationPtrOutput() TemplateMaximumMinimumComputationPtrOutput {
	return o.ToTemplateMaximumMinimumComputationPtrOutputWithContext(context.Background())
}

func (o TemplateMaximumMinimumComputationOutput) ToTemplateMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMaximumMinimumComputation) *TemplateMaximumMinimumComputation {
		return &v
	}).(TemplateMaximumMinimumComputationPtrOutput)
}

func (o TemplateMaximumMinimumComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateMaximumMinimumComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateMaximumMinimumComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateMaximumMinimumComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateMaximumMinimumComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateMaximumMinimumComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateMaximumMinimumComputationOutput) Type() TemplateMaximumMinimumComputationTypeOutput {
	return o.ApplyT(func(v TemplateMaximumMinimumComputation) TemplateMaximumMinimumComputationType { return v.Type }).(TemplateMaximumMinimumComputationTypeOutput)
}

func (o TemplateMaximumMinimumComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMaximumMinimumComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateMaximumMinimumComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateMaximumMinimumComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMaximumMinimumComputation)(nil)).Elem()
}

func (o TemplateMaximumMinimumComputationPtrOutput) ToTemplateMaximumMinimumComputationPtrOutput() TemplateMaximumMinimumComputationPtrOutput {
	return o
}

func (o TemplateMaximumMinimumComputationPtrOutput) ToTemplateMaximumMinimumComputationPtrOutputWithContext(ctx context.Context) TemplateMaximumMinimumComputationPtrOutput {
	return o
}

func (o TemplateMaximumMinimumComputationPtrOutput) Elem() TemplateMaximumMinimumComputationOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) TemplateMaximumMinimumComputation {
		if v != nil {
			return *v
		}
		var ret TemplateMaximumMinimumComputation
		return ret
	}).(TemplateMaximumMinimumComputationOutput)
}

func (o TemplateMaximumMinimumComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateMaximumMinimumComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateMaximumMinimumComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateMaximumMinimumComputationPtrOutput) Type() TemplateMaximumMinimumComputationTypePtrOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) *TemplateMaximumMinimumComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(TemplateMaximumMinimumComputationTypePtrOutput)
}

func (o TemplateMaximumMinimumComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMaximumMinimumComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateMeasureField struct {
	CalculatedMeasureField  *TemplateCalculatedMeasureField  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField *TemplateCategoricalMeasureField `pulumi:"categoricalMeasureField"`
	DateMeasureField        *TemplateDateMeasureField        `pulumi:"dateMeasureField"`
	NumericalMeasureField   *TemplateNumericalMeasureField   `pulumi:"numericalMeasureField"`
}

// TemplateMeasureFieldInput is an input type that accepts TemplateMeasureFieldArgs and TemplateMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateMeasureFieldInput` via:
//
//	TemplateMeasureFieldArgs{...}
type TemplateMeasureFieldInput interface {
	pulumi.Input

	ToTemplateMeasureFieldOutput() TemplateMeasureFieldOutput
	ToTemplateMeasureFieldOutputWithContext(context.Context) TemplateMeasureFieldOutput
}

type TemplateMeasureFieldArgs struct {
	CalculatedMeasureField  TemplateCalculatedMeasureFieldPtrInput  `pulumi:"calculatedMeasureField"`
	CategoricalMeasureField TemplateCategoricalMeasureFieldPtrInput `pulumi:"categoricalMeasureField"`
	DateMeasureField        TemplateDateMeasureFieldPtrInput        `pulumi:"dateMeasureField"`
	NumericalMeasureField   TemplateNumericalMeasureFieldPtrInput   `pulumi:"numericalMeasureField"`
}

func (TemplateMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMeasureField)(nil)).Elem()
}

func (i TemplateMeasureFieldArgs) ToTemplateMeasureFieldOutput() TemplateMeasureFieldOutput {
	return i.ToTemplateMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateMeasureFieldArgs) ToTemplateMeasureFieldOutputWithContext(ctx context.Context) TemplateMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMeasureFieldOutput)
}

func (i TemplateMeasureFieldArgs) ToTemplateMeasureFieldPtrOutput() TemplateMeasureFieldPtrOutput {
	return i.ToTemplateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateMeasureFieldArgs) ToTemplateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMeasureFieldOutput).ToTemplateMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateMeasureFieldPtrInput is an input type that accepts TemplateMeasureFieldArgs, TemplateMeasureFieldPtr and TemplateMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateMeasureFieldPtrInput` via:
//
//	        TemplateMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateMeasureFieldPtrOutput() TemplateMeasureFieldPtrOutput
	ToTemplateMeasureFieldPtrOutputWithContext(context.Context) TemplateMeasureFieldPtrOutput
}

type templateMeasureFieldPtrType TemplateMeasureFieldArgs

func TemplateMeasureFieldPtr(v *TemplateMeasureFieldArgs) TemplateMeasureFieldPtrInput {
	return (*templateMeasureFieldPtrType)(v)
}

func (*templateMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMeasureField)(nil)).Elem()
}

func (i *templateMeasureFieldPtrType) ToTemplateMeasureFieldPtrOutput() TemplateMeasureFieldPtrOutput {
	return i.ToTemplateMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateMeasureFieldPtrType) ToTemplateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMeasureFieldPtrOutput)
}

// TemplateMeasureFieldArrayInput is an input type that accepts TemplateMeasureFieldArray and TemplateMeasureFieldArrayOutput values.
// You can construct a concrete instance of `TemplateMeasureFieldArrayInput` via:
//
//	TemplateMeasureFieldArray{ TemplateMeasureFieldArgs{...} }
type TemplateMeasureFieldArrayInput interface {
	pulumi.Input

	ToTemplateMeasureFieldArrayOutput() TemplateMeasureFieldArrayOutput
	ToTemplateMeasureFieldArrayOutputWithContext(context.Context) TemplateMeasureFieldArrayOutput
}

type TemplateMeasureFieldArray []TemplateMeasureFieldInput

func (TemplateMeasureFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMeasureField)(nil)).Elem()
}

func (i TemplateMeasureFieldArray) ToTemplateMeasureFieldArrayOutput() TemplateMeasureFieldArrayOutput {
	return i.ToTemplateMeasureFieldArrayOutputWithContext(context.Background())
}

func (i TemplateMeasureFieldArray) ToTemplateMeasureFieldArrayOutputWithContext(ctx context.Context) TemplateMeasureFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMeasureFieldArrayOutput)
}

type TemplateMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMeasureField)(nil)).Elem()
}

func (o TemplateMeasureFieldOutput) ToTemplateMeasureFieldOutput() TemplateMeasureFieldOutput {
	return o
}

func (o TemplateMeasureFieldOutput) ToTemplateMeasureFieldOutputWithContext(ctx context.Context) TemplateMeasureFieldOutput {
	return o
}

func (o TemplateMeasureFieldOutput) ToTemplateMeasureFieldPtrOutput() TemplateMeasureFieldPtrOutput {
	return o.ToTemplateMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateMeasureFieldOutput) ToTemplateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMeasureField) *TemplateMeasureField {
		return &v
	}).(TemplateMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldOutput) CalculatedMeasureField() TemplateCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMeasureField) *TemplateCalculatedMeasureField { return v.CalculatedMeasureField }).(TemplateCalculatedMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldOutput) CategoricalMeasureField() TemplateCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMeasureField) *TemplateCategoricalMeasureField { return v.CategoricalMeasureField }).(TemplateCategoricalMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldOutput) DateMeasureField() TemplateDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMeasureField) *TemplateDateMeasureField { return v.DateMeasureField }).(TemplateDateMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldOutput) NumericalMeasureField() TemplateNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMeasureField) *TemplateNumericalMeasureField { return v.NumericalMeasureField }).(TemplateNumericalMeasureFieldPtrOutput)
}

type TemplateMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMeasureField)(nil)).Elem()
}

func (o TemplateMeasureFieldPtrOutput) ToTemplateMeasureFieldPtrOutput() TemplateMeasureFieldPtrOutput {
	return o
}

func (o TemplateMeasureFieldPtrOutput) ToTemplateMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateMeasureFieldPtrOutput {
	return o
}

func (o TemplateMeasureFieldPtrOutput) Elem() TemplateMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateMeasureField) TemplateMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateMeasureField
		return ret
	}).(TemplateMeasureFieldOutput)
}

func (o TemplateMeasureFieldPtrOutput) CalculatedMeasureField() TemplateCalculatedMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMeasureField) *TemplateCalculatedMeasureField {
		if v == nil {
			return nil
		}
		return v.CalculatedMeasureField
	}).(TemplateCalculatedMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldPtrOutput) CategoricalMeasureField() TemplateCategoricalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMeasureField) *TemplateCategoricalMeasureField {
		if v == nil {
			return nil
		}
		return v.CategoricalMeasureField
	}).(TemplateCategoricalMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldPtrOutput) DateMeasureField() TemplateDateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMeasureField) *TemplateDateMeasureField {
		if v == nil {
			return nil
		}
		return v.DateMeasureField
	}).(TemplateDateMeasureFieldPtrOutput)
}

func (o TemplateMeasureFieldPtrOutput) NumericalMeasureField() TemplateNumericalMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMeasureField) *TemplateNumericalMeasureField {
		if v == nil {
			return nil
		}
		return v.NumericalMeasureField
	}).(TemplateNumericalMeasureFieldPtrOutput)
}

type TemplateMeasureFieldArrayOutput struct{ *pulumi.OutputState }

func (TemplateMeasureFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMeasureField)(nil)).Elem()
}

func (o TemplateMeasureFieldArrayOutput) ToTemplateMeasureFieldArrayOutput() TemplateMeasureFieldArrayOutput {
	return o
}

func (o TemplateMeasureFieldArrayOutput) ToTemplateMeasureFieldArrayOutputWithContext(ctx context.Context) TemplateMeasureFieldArrayOutput {
	return o
}

func (o TemplateMeasureFieldArrayOutput) Index(i pulumi.IntInput) TemplateMeasureFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateMeasureField {
		return vs[0].([]TemplateMeasureField)[vs[1].(int)]
	}).(TemplateMeasureFieldOutput)
}

type TemplateMetricComparisonComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	FromValue     *TemplateMeasureField   `pulumi:"fromValue"`
	Name          *string                 `pulumi:"name"`
	TargetValue   *TemplateMeasureField   `pulumi:"targetValue"`
	Time          *TemplateDimensionField `pulumi:"time"`
}

// TemplateMetricComparisonComputationInput is an input type that accepts TemplateMetricComparisonComputationArgs and TemplateMetricComparisonComputationOutput values.
// You can construct a concrete instance of `TemplateMetricComparisonComputationInput` via:
//
//	TemplateMetricComparisonComputationArgs{...}
type TemplateMetricComparisonComputationInput interface {
	pulumi.Input

	ToTemplateMetricComparisonComputationOutput() TemplateMetricComparisonComputationOutput
	ToTemplateMetricComparisonComputationOutputWithContext(context.Context) TemplateMetricComparisonComputationOutput
}

type TemplateMetricComparisonComputationArgs struct {
	ComputationId pulumi.StringInput             `pulumi:"computationId"`
	FromValue     TemplateMeasureFieldPtrInput   `pulumi:"fromValue"`
	Name          pulumi.StringPtrInput          `pulumi:"name"`
	TargetValue   TemplateMeasureFieldPtrInput   `pulumi:"targetValue"`
	Time          TemplateDimensionFieldPtrInput `pulumi:"time"`
}

func (TemplateMetricComparisonComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMetricComparisonComputation)(nil)).Elem()
}

func (i TemplateMetricComparisonComputationArgs) ToTemplateMetricComparisonComputationOutput() TemplateMetricComparisonComputationOutput {
	return i.ToTemplateMetricComparisonComputationOutputWithContext(context.Background())
}

func (i TemplateMetricComparisonComputationArgs) ToTemplateMetricComparisonComputationOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMetricComparisonComputationOutput)
}

func (i TemplateMetricComparisonComputationArgs) ToTemplateMetricComparisonComputationPtrOutput() TemplateMetricComparisonComputationPtrOutput {
	return i.ToTemplateMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i TemplateMetricComparisonComputationArgs) ToTemplateMetricComparisonComputationPtrOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMetricComparisonComputationOutput).ToTemplateMetricComparisonComputationPtrOutputWithContext(ctx)
}

// TemplateMetricComparisonComputationPtrInput is an input type that accepts TemplateMetricComparisonComputationArgs, TemplateMetricComparisonComputationPtr and TemplateMetricComparisonComputationPtrOutput values.
// You can construct a concrete instance of `TemplateMetricComparisonComputationPtrInput` via:
//
//	        TemplateMetricComparisonComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateMetricComparisonComputationPtrInput interface {
	pulumi.Input

	ToTemplateMetricComparisonComputationPtrOutput() TemplateMetricComparisonComputationPtrOutput
	ToTemplateMetricComparisonComputationPtrOutputWithContext(context.Context) TemplateMetricComparisonComputationPtrOutput
}

type templateMetricComparisonComputationPtrType TemplateMetricComparisonComputationArgs

func TemplateMetricComparisonComputationPtr(v *TemplateMetricComparisonComputationArgs) TemplateMetricComparisonComputationPtrInput {
	return (*templateMetricComparisonComputationPtrType)(v)
}

func (*templateMetricComparisonComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMetricComparisonComputation)(nil)).Elem()
}

func (i *templateMetricComparisonComputationPtrType) ToTemplateMetricComparisonComputationPtrOutput() TemplateMetricComparisonComputationPtrOutput {
	return i.ToTemplateMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (i *templateMetricComparisonComputationPtrType) ToTemplateMetricComparisonComputationPtrOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMetricComparisonComputationPtrOutput)
}

type TemplateMetricComparisonComputationOutput struct{ *pulumi.OutputState }

func (TemplateMetricComparisonComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMetricComparisonComputation)(nil)).Elem()
}

func (o TemplateMetricComparisonComputationOutput) ToTemplateMetricComparisonComputationOutput() TemplateMetricComparisonComputationOutput {
	return o
}

func (o TemplateMetricComparisonComputationOutput) ToTemplateMetricComparisonComputationOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationOutput {
	return o
}

func (o TemplateMetricComparisonComputationOutput) ToTemplateMetricComparisonComputationPtrOutput() TemplateMetricComparisonComputationPtrOutput {
	return o.ToTemplateMetricComparisonComputationPtrOutputWithContext(context.Background())
}

func (o TemplateMetricComparisonComputationOutput) ToTemplateMetricComparisonComputationPtrOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMetricComparisonComputation) *TemplateMetricComparisonComputation {
		return &v
	}).(TemplateMetricComparisonComputationPtrOutput)
}

func (o TemplateMetricComparisonComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateMetricComparisonComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateMetricComparisonComputationOutput) FromValue() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMetricComparisonComputation) *TemplateMeasureField { return v.FromValue }).(TemplateMeasureFieldPtrOutput)
}

func (o TemplateMetricComparisonComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateMetricComparisonComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateMetricComparisonComputationOutput) TargetValue() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateMetricComparisonComputation) *TemplateMeasureField { return v.TargetValue }).(TemplateMeasureFieldPtrOutput)
}

func (o TemplateMetricComparisonComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateMetricComparisonComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

type TemplateMetricComparisonComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateMetricComparisonComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMetricComparisonComputation)(nil)).Elem()
}

func (o TemplateMetricComparisonComputationPtrOutput) ToTemplateMetricComparisonComputationPtrOutput() TemplateMetricComparisonComputationPtrOutput {
	return o
}

func (o TemplateMetricComparisonComputationPtrOutput) ToTemplateMetricComparisonComputationPtrOutputWithContext(ctx context.Context) TemplateMetricComparisonComputationPtrOutput {
	return o
}

func (o TemplateMetricComparisonComputationPtrOutput) Elem() TemplateMetricComparisonComputationOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) TemplateMetricComparisonComputation {
		if v != nil {
			return *v
		}
		var ret TemplateMetricComparisonComputation
		return ret
	}).(TemplateMetricComparisonComputationOutput)
}

func (o TemplateMetricComparisonComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateMetricComparisonComputationPtrOutput) FromValue() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.FromValue
	}).(TemplateMeasureFieldPtrOutput)
}

func (o TemplateMetricComparisonComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateMetricComparisonComputationPtrOutput) TargetValue() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.TargetValue
	}).(TemplateMeasureFieldPtrOutput)
}

func (o TemplateMetricComparisonComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateMetricComparisonComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

type TemplateMinimumLabelType struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateMinimumLabelTypeInput is an input type that accepts TemplateMinimumLabelTypeArgs and TemplateMinimumLabelTypeOutput values.
// You can construct a concrete instance of `TemplateMinimumLabelTypeInput` via:
//
//	TemplateMinimumLabelTypeArgs{...}
type TemplateMinimumLabelTypeInput interface {
	pulumi.Input

	ToTemplateMinimumLabelTypeOutput() TemplateMinimumLabelTypeOutput
	ToTemplateMinimumLabelTypeOutputWithContext(context.Context) TemplateMinimumLabelTypeOutput
}

type TemplateMinimumLabelTypeArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateMinimumLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMinimumLabelType)(nil)).Elem()
}

func (i TemplateMinimumLabelTypeArgs) ToTemplateMinimumLabelTypeOutput() TemplateMinimumLabelTypeOutput {
	return i.ToTemplateMinimumLabelTypeOutputWithContext(context.Background())
}

func (i TemplateMinimumLabelTypeArgs) ToTemplateMinimumLabelTypeOutputWithContext(ctx context.Context) TemplateMinimumLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMinimumLabelTypeOutput)
}

func (i TemplateMinimumLabelTypeArgs) ToTemplateMinimumLabelTypePtrOutput() TemplateMinimumLabelTypePtrOutput {
	return i.ToTemplateMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i TemplateMinimumLabelTypeArgs) ToTemplateMinimumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMinimumLabelTypeOutput).ToTemplateMinimumLabelTypePtrOutputWithContext(ctx)
}

// TemplateMinimumLabelTypePtrInput is an input type that accepts TemplateMinimumLabelTypeArgs, TemplateMinimumLabelTypePtr and TemplateMinimumLabelTypePtrOutput values.
// You can construct a concrete instance of `TemplateMinimumLabelTypePtrInput` via:
//
//	        TemplateMinimumLabelTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateMinimumLabelTypePtrInput interface {
	pulumi.Input

	ToTemplateMinimumLabelTypePtrOutput() TemplateMinimumLabelTypePtrOutput
	ToTemplateMinimumLabelTypePtrOutputWithContext(context.Context) TemplateMinimumLabelTypePtrOutput
}

type templateMinimumLabelTypePtrType TemplateMinimumLabelTypeArgs

func TemplateMinimumLabelTypePtr(v *TemplateMinimumLabelTypeArgs) TemplateMinimumLabelTypePtrInput {
	return (*templateMinimumLabelTypePtrType)(v)
}

func (*templateMinimumLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMinimumLabelType)(nil)).Elem()
}

func (i *templateMinimumLabelTypePtrType) ToTemplateMinimumLabelTypePtrOutput() TemplateMinimumLabelTypePtrOutput {
	return i.ToTemplateMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (i *templateMinimumLabelTypePtrType) ToTemplateMinimumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMinimumLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMinimumLabelTypePtrOutput)
}

type TemplateMinimumLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateMinimumLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMinimumLabelType)(nil)).Elem()
}

func (o TemplateMinimumLabelTypeOutput) ToTemplateMinimumLabelTypeOutput() TemplateMinimumLabelTypeOutput {
	return o
}

func (o TemplateMinimumLabelTypeOutput) ToTemplateMinimumLabelTypeOutputWithContext(ctx context.Context) TemplateMinimumLabelTypeOutput {
	return o
}

func (o TemplateMinimumLabelTypeOutput) ToTemplateMinimumLabelTypePtrOutput() TemplateMinimumLabelTypePtrOutput {
	return o.ToTemplateMinimumLabelTypePtrOutputWithContext(context.Background())
}

func (o TemplateMinimumLabelTypeOutput) ToTemplateMinimumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMinimumLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateMinimumLabelType) *TemplateMinimumLabelType {
		return &v
	}).(TemplateMinimumLabelTypePtrOutput)
}

func (o TemplateMinimumLabelTypeOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateMinimumLabelType) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateMinimumLabelTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateMinimumLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateMinimumLabelType)(nil)).Elem()
}

func (o TemplateMinimumLabelTypePtrOutput) ToTemplateMinimumLabelTypePtrOutput() TemplateMinimumLabelTypePtrOutput {
	return o
}

func (o TemplateMinimumLabelTypePtrOutput) ToTemplateMinimumLabelTypePtrOutputWithContext(ctx context.Context) TemplateMinimumLabelTypePtrOutput {
	return o
}

func (o TemplateMinimumLabelTypePtrOutput) Elem() TemplateMinimumLabelTypeOutput {
	return o.ApplyT(func(v *TemplateMinimumLabelType) TemplateMinimumLabelType {
		if v != nil {
			return *v
		}
		var ret TemplateMinimumLabelType
		return ret
	}).(TemplateMinimumLabelTypeOutput)
}

func (o TemplateMinimumLabelTypePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateMinimumLabelType) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateMissingDataConfiguration struct {
	TreatmentOption *TemplateMissingDataTreatmentOption `pulumi:"treatmentOption"`
}

// TemplateMissingDataConfigurationInput is an input type that accepts TemplateMissingDataConfigurationArgs and TemplateMissingDataConfigurationOutput values.
// You can construct a concrete instance of `TemplateMissingDataConfigurationInput` via:
//
//	TemplateMissingDataConfigurationArgs{...}
type TemplateMissingDataConfigurationInput interface {
	pulumi.Input

	ToTemplateMissingDataConfigurationOutput() TemplateMissingDataConfigurationOutput
	ToTemplateMissingDataConfigurationOutputWithContext(context.Context) TemplateMissingDataConfigurationOutput
}

type TemplateMissingDataConfigurationArgs struct {
	TreatmentOption TemplateMissingDataTreatmentOptionPtrInput `pulumi:"treatmentOption"`
}

func (TemplateMissingDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMissingDataConfiguration)(nil)).Elem()
}

func (i TemplateMissingDataConfigurationArgs) ToTemplateMissingDataConfigurationOutput() TemplateMissingDataConfigurationOutput {
	return i.ToTemplateMissingDataConfigurationOutputWithContext(context.Background())
}

func (i TemplateMissingDataConfigurationArgs) ToTemplateMissingDataConfigurationOutputWithContext(ctx context.Context) TemplateMissingDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMissingDataConfigurationOutput)
}

// TemplateMissingDataConfigurationArrayInput is an input type that accepts TemplateMissingDataConfigurationArray and TemplateMissingDataConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateMissingDataConfigurationArrayInput` via:
//
//	TemplateMissingDataConfigurationArray{ TemplateMissingDataConfigurationArgs{...} }
type TemplateMissingDataConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateMissingDataConfigurationArrayOutput() TemplateMissingDataConfigurationArrayOutput
	ToTemplateMissingDataConfigurationArrayOutputWithContext(context.Context) TemplateMissingDataConfigurationArrayOutput
}

type TemplateMissingDataConfigurationArray []TemplateMissingDataConfigurationInput

func (TemplateMissingDataConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMissingDataConfiguration)(nil)).Elem()
}

func (i TemplateMissingDataConfigurationArray) ToTemplateMissingDataConfigurationArrayOutput() TemplateMissingDataConfigurationArrayOutput {
	return i.ToTemplateMissingDataConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateMissingDataConfigurationArray) ToTemplateMissingDataConfigurationArrayOutputWithContext(ctx context.Context) TemplateMissingDataConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateMissingDataConfigurationArrayOutput)
}

type TemplateMissingDataConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateMissingDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateMissingDataConfiguration)(nil)).Elem()
}

func (o TemplateMissingDataConfigurationOutput) ToTemplateMissingDataConfigurationOutput() TemplateMissingDataConfigurationOutput {
	return o
}

func (o TemplateMissingDataConfigurationOutput) ToTemplateMissingDataConfigurationOutputWithContext(ctx context.Context) TemplateMissingDataConfigurationOutput {
	return o
}

func (o TemplateMissingDataConfigurationOutput) TreatmentOption() TemplateMissingDataTreatmentOptionPtrOutput {
	return o.ApplyT(func(v TemplateMissingDataConfiguration) *TemplateMissingDataTreatmentOption { return v.TreatmentOption }).(TemplateMissingDataTreatmentOptionPtrOutput)
}

type TemplateMissingDataConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateMissingDataConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateMissingDataConfiguration)(nil)).Elem()
}

func (o TemplateMissingDataConfigurationArrayOutput) ToTemplateMissingDataConfigurationArrayOutput() TemplateMissingDataConfigurationArrayOutput {
	return o
}

func (o TemplateMissingDataConfigurationArrayOutput) ToTemplateMissingDataConfigurationArrayOutputWithContext(ctx context.Context) TemplateMissingDataConfigurationArrayOutput {
	return o
}

func (o TemplateMissingDataConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateMissingDataConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateMissingDataConfiguration {
		return vs[0].([]TemplateMissingDataConfiguration)[vs[1].(int)]
	}).(TemplateMissingDataConfigurationOutput)
}

type TemplateNegativeValueConfiguration struct {
	DisplayMode TemplateNegativeValueDisplayMode `pulumi:"displayMode"`
}

// TemplateNegativeValueConfigurationInput is an input type that accepts TemplateNegativeValueConfigurationArgs and TemplateNegativeValueConfigurationOutput values.
// You can construct a concrete instance of `TemplateNegativeValueConfigurationInput` via:
//
//	TemplateNegativeValueConfigurationArgs{...}
type TemplateNegativeValueConfigurationInput interface {
	pulumi.Input

	ToTemplateNegativeValueConfigurationOutput() TemplateNegativeValueConfigurationOutput
	ToTemplateNegativeValueConfigurationOutputWithContext(context.Context) TemplateNegativeValueConfigurationOutput
}

type TemplateNegativeValueConfigurationArgs struct {
	DisplayMode TemplateNegativeValueDisplayModeInput `pulumi:"displayMode"`
}

func (TemplateNegativeValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNegativeValueConfiguration)(nil)).Elem()
}

func (i TemplateNegativeValueConfigurationArgs) ToTemplateNegativeValueConfigurationOutput() TemplateNegativeValueConfigurationOutput {
	return i.ToTemplateNegativeValueConfigurationOutputWithContext(context.Background())
}

func (i TemplateNegativeValueConfigurationArgs) ToTemplateNegativeValueConfigurationOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNegativeValueConfigurationOutput)
}

func (i TemplateNegativeValueConfigurationArgs) ToTemplateNegativeValueConfigurationPtrOutput() TemplateNegativeValueConfigurationPtrOutput {
	return i.ToTemplateNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNegativeValueConfigurationArgs) ToTemplateNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNegativeValueConfigurationOutput).ToTemplateNegativeValueConfigurationPtrOutputWithContext(ctx)
}

// TemplateNegativeValueConfigurationPtrInput is an input type that accepts TemplateNegativeValueConfigurationArgs, TemplateNegativeValueConfigurationPtr and TemplateNegativeValueConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNegativeValueConfigurationPtrInput` via:
//
//	        TemplateNegativeValueConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNegativeValueConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNegativeValueConfigurationPtrOutput() TemplateNegativeValueConfigurationPtrOutput
	ToTemplateNegativeValueConfigurationPtrOutputWithContext(context.Context) TemplateNegativeValueConfigurationPtrOutput
}

type templateNegativeValueConfigurationPtrType TemplateNegativeValueConfigurationArgs

func TemplateNegativeValueConfigurationPtr(v *TemplateNegativeValueConfigurationArgs) TemplateNegativeValueConfigurationPtrInput {
	return (*templateNegativeValueConfigurationPtrType)(v)
}

func (*templateNegativeValueConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNegativeValueConfiguration)(nil)).Elem()
}

func (i *templateNegativeValueConfigurationPtrType) ToTemplateNegativeValueConfigurationPtrOutput() TemplateNegativeValueConfigurationPtrOutput {
	return i.ToTemplateNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNegativeValueConfigurationPtrType) ToTemplateNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNegativeValueConfigurationPtrOutput)
}

type TemplateNegativeValueConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNegativeValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNegativeValueConfiguration)(nil)).Elem()
}

func (o TemplateNegativeValueConfigurationOutput) ToTemplateNegativeValueConfigurationOutput() TemplateNegativeValueConfigurationOutput {
	return o
}

func (o TemplateNegativeValueConfigurationOutput) ToTemplateNegativeValueConfigurationOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationOutput {
	return o
}

func (o TemplateNegativeValueConfigurationOutput) ToTemplateNegativeValueConfigurationPtrOutput() TemplateNegativeValueConfigurationPtrOutput {
	return o.ToTemplateNegativeValueConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNegativeValueConfigurationOutput) ToTemplateNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNegativeValueConfiguration) *TemplateNegativeValueConfiguration {
		return &v
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplateNegativeValueConfigurationOutput) DisplayMode() TemplateNegativeValueDisplayModeOutput {
	return o.ApplyT(func(v TemplateNegativeValueConfiguration) TemplateNegativeValueDisplayMode { return v.DisplayMode }).(TemplateNegativeValueDisplayModeOutput)
}

type TemplateNegativeValueConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNegativeValueConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNegativeValueConfiguration)(nil)).Elem()
}

func (o TemplateNegativeValueConfigurationPtrOutput) ToTemplateNegativeValueConfigurationPtrOutput() TemplateNegativeValueConfigurationPtrOutput {
	return o
}

func (o TemplateNegativeValueConfigurationPtrOutput) ToTemplateNegativeValueConfigurationPtrOutputWithContext(ctx context.Context) TemplateNegativeValueConfigurationPtrOutput {
	return o
}

func (o TemplateNegativeValueConfigurationPtrOutput) Elem() TemplateNegativeValueConfigurationOutput {
	return o.ApplyT(func(v *TemplateNegativeValueConfiguration) TemplateNegativeValueConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNegativeValueConfiguration
		return ret
	}).(TemplateNegativeValueConfigurationOutput)
}

func (o TemplateNegativeValueConfigurationPtrOutput) DisplayMode() TemplateNegativeValueDisplayModePtrOutput {
	return o.ApplyT(func(v *TemplateNegativeValueConfiguration) *TemplateNegativeValueDisplayMode {
		if v == nil {
			return nil
		}
		return &v.DisplayMode
	}).(TemplateNegativeValueDisplayModePtrOutput)
}

type TemplateNullValueFormatConfiguration struct {
	NullString string `pulumi:"nullString"`
}

// TemplateNullValueFormatConfigurationInput is an input type that accepts TemplateNullValueFormatConfigurationArgs and TemplateNullValueFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateNullValueFormatConfigurationInput` via:
//
//	TemplateNullValueFormatConfigurationArgs{...}
type TemplateNullValueFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateNullValueFormatConfigurationOutput() TemplateNullValueFormatConfigurationOutput
	ToTemplateNullValueFormatConfigurationOutputWithContext(context.Context) TemplateNullValueFormatConfigurationOutput
}

type TemplateNullValueFormatConfigurationArgs struct {
	NullString pulumi.StringInput `pulumi:"nullString"`
}

func (TemplateNullValueFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNullValueFormatConfiguration)(nil)).Elem()
}

func (i TemplateNullValueFormatConfigurationArgs) ToTemplateNullValueFormatConfigurationOutput() TemplateNullValueFormatConfigurationOutput {
	return i.ToTemplateNullValueFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateNullValueFormatConfigurationArgs) ToTemplateNullValueFormatConfigurationOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNullValueFormatConfigurationOutput)
}

func (i TemplateNullValueFormatConfigurationArgs) ToTemplateNullValueFormatConfigurationPtrOutput() TemplateNullValueFormatConfigurationPtrOutput {
	return i.ToTemplateNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNullValueFormatConfigurationArgs) ToTemplateNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNullValueFormatConfigurationOutput).ToTemplateNullValueFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateNullValueFormatConfigurationPtrInput is an input type that accepts TemplateNullValueFormatConfigurationArgs, TemplateNullValueFormatConfigurationPtr and TemplateNullValueFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNullValueFormatConfigurationPtrInput` via:
//
//	        TemplateNullValueFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNullValueFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNullValueFormatConfigurationPtrOutput() TemplateNullValueFormatConfigurationPtrOutput
	ToTemplateNullValueFormatConfigurationPtrOutputWithContext(context.Context) TemplateNullValueFormatConfigurationPtrOutput
}

type templateNullValueFormatConfigurationPtrType TemplateNullValueFormatConfigurationArgs

func TemplateNullValueFormatConfigurationPtr(v *TemplateNullValueFormatConfigurationArgs) TemplateNullValueFormatConfigurationPtrInput {
	return (*templateNullValueFormatConfigurationPtrType)(v)
}

func (*templateNullValueFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNullValueFormatConfiguration)(nil)).Elem()
}

func (i *templateNullValueFormatConfigurationPtrType) ToTemplateNullValueFormatConfigurationPtrOutput() TemplateNullValueFormatConfigurationPtrOutput {
	return i.ToTemplateNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNullValueFormatConfigurationPtrType) ToTemplateNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNullValueFormatConfigurationPtrOutput)
}

type TemplateNullValueFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNullValueFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNullValueFormatConfiguration)(nil)).Elem()
}

func (o TemplateNullValueFormatConfigurationOutput) ToTemplateNullValueFormatConfigurationOutput() TemplateNullValueFormatConfigurationOutput {
	return o
}

func (o TemplateNullValueFormatConfigurationOutput) ToTemplateNullValueFormatConfigurationOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationOutput {
	return o
}

func (o TemplateNullValueFormatConfigurationOutput) ToTemplateNullValueFormatConfigurationPtrOutput() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ToTemplateNullValueFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNullValueFormatConfigurationOutput) ToTemplateNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNullValueFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return &v
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateNullValueFormatConfigurationOutput) NullString() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateNullValueFormatConfiguration) string { return v.NullString }).(pulumi.StringOutput)
}

type TemplateNullValueFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNullValueFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNullValueFormatConfiguration)(nil)).Elem()
}

func (o TemplateNullValueFormatConfigurationPtrOutput) ToTemplateNullValueFormatConfigurationPtrOutput() TemplateNullValueFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNullValueFormatConfigurationPtrOutput) ToTemplateNullValueFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNullValueFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNullValueFormatConfigurationPtrOutput) Elem() TemplateNullValueFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateNullValueFormatConfiguration) TemplateNullValueFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNullValueFormatConfiguration
		return ret
	}).(TemplateNullValueFormatConfigurationOutput)
}

func (o TemplateNullValueFormatConfigurationPtrOutput) NullString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNullValueFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.NullString
	}).(pulumi.StringPtrOutput)
}

type TemplateNumberDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *TemplateDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *TemplateNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *TemplateNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  *TemplateNumberScale                   `pulumi:"numberScale"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *TemplateNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
}

// TemplateNumberDisplayFormatConfigurationInput is an input type that accepts TemplateNumberDisplayFormatConfigurationArgs and TemplateNumberDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateNumberDisplayFormatConfigurationInput` via:
//
//	TemplateNumberDisplayFormatConfigurationArgs{...}
type TemplateNumberDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateNumberDisplayFormatConfigurationOutput() TemplateNumberDisplayFormatConfigurationOutput
	ToTemplateNumberDisplayFormatConfigurationOutputWithContext(context.Context) TemplateNumberDisplayFormatConfigurationOutput
}

type TemplateNumberDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   TemplateDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   TemplateNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration TemplateNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	NumberScale                  TemplateNumberScalePtrInput                   `pulumi:"numberScale"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       TemplateNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
}

func (TemplateNumberDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i TemplateNumberDisplayFormatConfigurationArgs) ToTemplateNumberDisplayFormatConfigurationOutput() TemplateNumberDisplayFormatConfigurationOutput {
	return i.ToTemplateNumberDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateNumberDisplayFormatConfigurationArgs) ToTemplateNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberDisplayFormatConfigurationOutput)
}

func (i TemplateNumberDisplayFormatConfigurationArgs) ToTemplateNumberDisplayFormatConfigurationPtrOutput() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return i.ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNumberDisplayFormatConfigurationArgs) ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberDisplayFormatConfigurationOutput).ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateNumberDisplayFormatConfigurationPtrInput is an input type that accepts TemplateNumberDisplayFormatConfigurationArgs, TemplateNumberDisplayFormatConfigurationPtr and TemplateNumberDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNumberDisplayFormatConfigurationPtrInput` via:
//
//	        TemplateNumberDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNumberDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNumberDisplayFormatConfigurationPtrOutput() TemplateNumberDisplayFormatConfigurationPtrOutput
	ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(context.Context) TemplateNumberDisplayFormatConfigurationPtrOutput
}

type templateNumberDisplayFormatConfigurationPtrType TemplateNumberDisplayFormatConfigurationArgs

func TemplateNumberDisplayFormatConfigurationPtr(v *TemplateNumberDisplayFormatConfigurationArgs) TemplateNumberDisplayFormatConfigurationPtrInput {
	return (*templateNumberDisplayFormatConfigurationPtrType)(v)
}

func (*templateNumberDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (i *templateNumberDisplayFormatConfigurationPtrType) ToTemplateNumberDisplayFormatConfigurationPtrOutput() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return i.ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNumberDisplayFormatConfigurationPtrType) ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

type TemplateNumberDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNumberDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumberDisplayFormatConfigurationOutput) ToTemplateNumberDisplayFormatConfigurationOutput() TemplateNumberDisplayFormatConfigurationOutput {
	return o
}

func (o TemplateNumberDisplayFormatConfigurationOutput) ToTemplateNumberDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationOutput {
	return o
}

func (o TemplateNumberDisplayFormatConfigurationOutput) ToTemplateNumberDisplayFormatConfigurationPtrOutput() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNumberDisplayFormatConfigurationOutput) ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumberDisplayFormatConfiguration) *TemplateNumberDisplayFormatConfiguration {
		return &v
	}).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) NumberScale() TemplateNumberScalePtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *TemplateNumberScale { return v.NumberScale }).(TemplateNumberScalePtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateNumberDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type TemplateNumberDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumberDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumberDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) ToTemplateNumberDisplayFormatConfigurationPtrOutput() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) ToTemplateNumberDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) Elem() TemplateNumberDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) TemplateNumberDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNumberDisplayFormatConfiguration
		return ret
	}).(TemplateNumberDisplayFormatConfigurationOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) NumberScale() TemplateNumberScalePtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *TemplateNumberScale {
		if v == nil {
			return nil
		}
		return v.NumberScale
	}).(TemplateNumberScalePtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplateNumberDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumberDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type TemplateNumberFormatConfiguration struct {
	FormatConfiguration *TemplateNumericFormatConfiguration `pulumi:"formatConfiguration"`
}

// TemplateNumberFormatConfigurationInput is an input type that accepts TemplateNumberFormatConfigurationArgs and TemplateNumberFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateNumberFormatConfigurationInput` via:
//
//	TemplateNumberFormatConfigurationArgs{...}
type TemplateNumberFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateNumberFormatConfigurationOutput() TemplateNumberFormatConfigurationOutput
	ToTemplateNumberFormatConfigurationOutputWithContext(context.Context) TemplateNumberFormatConfigurationOutput
}

type TemplateNumberFormatConfigurationArgs struct {
	FormatConfiguration TemplateNumericFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (TemplateNumberFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberFormatConfiguration)(nil)).Elem()
}

func (i TemplateNumberFormatConfigurationArgs) ToTemplateNumberFormatConfigurationOutput() TemplateNumberFormatConfigurationOutput {
	return i.ToTemplateNumberFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateNumberFormatConfigurationArgs) ToTemplateNumberFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberFormatConfigurationOutput)
}

func (i TemplateNumberFormatConfigurationArgs) ToTemplateNumberFormatConfigurationPtrOutput() TemplateNumberFormatConfigurationPtrOutput {
	return i.ToTemplateNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNumberFormatConfigurationArgs) ToTemplateNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberFormatConfigurationOutput).ToTemplateNumberFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateNumberFormatConfigurationPtrInput is an input type that accepts TemplateNumberFormatConfigurationArgs, TemplateNumberFormatConfigurationPtr and TemplateNumberFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNumberFormatConfigurationPtrInput` via:
//
//	        TemplateNumberFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNumberFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNumberFormatConfigurationPtrOutput() TemplateNumberFormatConfigurationPtrOutput
	ToTemplateNumberFormatConfigurationPtrOutputWithContext(context.Context) TemplateNumberFormatConfigurationPtrOutput
}

type templateNumberFormatConfigurationPtrType TemplateNumberFormatConfigurationArgs

func TemplateNumberFormatConfigurationPtr(v *TemplateNumberFormatConfigurationArgs) TemplateNumberFormatConfigurationPtrInput {
	return (*templateNumberFormatConfigurationPtrType)(v)
}

func (*templateNumberFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumberFormatConfiguration)(nil)).Elem()
}

func (i *templateNumberFormatConfigurationPtrType) ToTemplateNumberFormatConfigurationPtrOutput() TemplateNumberFormatConfigurationPtrOutput {
	return i.ToTemplateNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNumberFormatConfigurationPtrType) ToTemplateNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumberFormatConfigurationPtrOutput)
}

type TemplateNumberFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNumberFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumberFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumberFormatConfigurationOutput) ToTemplateNumberFormatConfigurationOutput() TemplateNumberFormatConfigurationOutput {
	return o
}

func (o TemplateNumberFormatConfigurationOutput) ToTemplateNumberFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationOutput {
	return o
}

func (o TemplateNumberFormatConfigurationOutput) ToTemplateNumberFormatConfigurationPtrOutput() TemplateNumberFormatConfigurationPtrOutput {
	return o.ToTemplateNumberFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNumberFormatConfigurationOutput) ToTemplateNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumberFormatConfiguration) *TemplateNumberFormatConfiguration {
		return &v
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

func (o TemplateNumberFormatConfigurationOutput) FormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumberFormatConfiguration) *TemplateNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateNumberFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumberFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumberFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumberFormatConfigurationPtrOutput) ToTemplateNumberFormatConfigurationPtrOutput() TemplateNumberFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumberFormatConfigurationPtrOutput) ToTemplateNumberFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumberFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumberFormatConfigurationPtrOutput) Elem() TemplateNumberFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateNumberFormatConfiguration) TemplateNumberFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNumberFormatConfiguration
		return ret
	}).(TemplateNumberFormatConfigurationOutput)
}

func (o TemplateNumberFormatConfigurationPtrOutput) FormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumberFormatConfiguration) *TemplateNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateNumericAxisOptions struct {
	Range *TemplateAxisDisplayRange `pulumi:"range"`
	Scale *TemplateAxisScale        `pulumi:"scale"`
}

// TemplateNumericAxisOptionsInput is an input type that accepts TemplateNumericAxisOptionsArgs and TemplateNumericAxisOptionsOutput values.
// You can construct a concrete instance of `TemplateNumericAxisOptionsInput` via:
//
//	TemplateNumericAxisOptionsArgs{...}
type TemplateNumericAxisOptionsInput interface {
	pulumi.Input

	ToTemplateNumericAxisOptionsOutput() TemplateNumericAxisOptionsOutput
	ToTemplateNumericAxisOptionsOutputWithContext(context.Context) TemplateNumericAxisOptionsOutput
}

type TemplateNumericAxisOptionsArgs struct {
	Range TemplateAxisDisplayRangePtrInput `pulumi:"range"`
	Scale TemplateAxisScalePtrInput        `pulumi:"scale"`
}

func (TemplateNumericAxisOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericAxisOptions)(nil)).Elem()
}

func (i TemplateNumericAxisOptionsArgs) ToTemplateNumericAxisOptionsOutput() TemplateNumericAxisOptionsOutput {
	return i.ToTemplateNumericAxisOptionsOutputWithContext(context.Background())
}

func (i TemplateNumericAxisOptionsArgs) ToTemplateNumericAxisOptionsOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericAxisOptionsOutput)
}

func (i TemplateNumericAxisOptionsArgs) ToTemplateNumericAxisOptionsPtrOutput() TemplateNumericAxisOptionsPtrOutput {
	return i.ToTemplateNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateNumericAxisOptionsArgs) ToTemplateNumericAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericAxisOptionsOutput).ToTemplateNumericAxisOptionsPtrOutputWithContext(ctx)
}

// TemplateNumericAxisOptionsPtrInput is an input type that accepts TemplateNumericAxisOptionsArgs, TemplateNumericAxisOptionsPtr and TemplateNumericAxisOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateNumericAxisOptionsPtrInput` via:
//
//	        TemplateNumericAxisOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericAxisOptionsPtrInput interface {
	pulumi.Input

	ToTemplateNumericAxisOptionsPtrOutput() TemplateNumericAxisOptionsPtrOutput
	ToTemplateNumericAxisOptionsPtrOutputWithContext(context.Context) TemplateNumericAxisOptionsPtrOutput
}

type templateNumericAxisOptionsPtrType TemplateNumericAxisOptionsArgs

func TemplateNumericAxisOptionsPtr(v *TemplateNumericAxisOptionsArgs) TemplateNumericAxisOptionsPtrInput {
	return (*templateNumericAxisOptionsPtrType)(v)
}

func (*templateNumericAxisOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericAxisOptions)(nil)).Elem()
}

func (i *templateNumericAxisOptionsPtrType) ToTemplateNumericAxisOptionsPtrOutput() TemplateNumericAxisOptionsPtrOutput {
	return i.ToTemplateNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (i *templateNumericAxisOptionsPtrType) ToTemplateNumericAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericAxisOptionsPtrOutput)
}

type TemplateNumericAxisOptionsOutput struct{ *pulumi.OutputState }

func (TemplateNumericAxisOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericAxisOptions)(nil)).Elem()
}

func (o TemplateNumericAxisOptionsOutput) ToTemplateNumericAxisOptionsOutput() TemplateNumericAxisOptionsOutput {
	return o
}

func (o TemplateNumericAxisOptionsOutput) ToTemplateNumericAxisOptionsOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsOutput {
	return o
}

func (o TemplateNumericAxisOptionsOutput) ToTemplateNumericAxisOptionsPtrOutput() TemplateNumericAxisOptionsPtrOutput {
	return o.ToTemplateNumericAxisOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateNumericAxisOptionsOutput) ToTemplateNumericAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericAxisOptions) *TemplateNumericAxisOptions {
		return &v
	}).(TemplateNumericAxisOptionsPtrOutput)
}

func (o TemplateNumericAxisOptionsOutput) Range() TemplateAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v TemplateNumericAxisOptions) *TemplateAxisDisplayRange { return v.Range }).(TemplateAxisDisplayRangePtrOutput)
}

func (o TemplateNumericAxisOptionsOutput) Scale() TemplateAxisScalePtrOutput {
	return o.ApplyT(func(v TemplateNumericAxisOptions) *TemplateAxisScale { return v.Scale }).(TemplateAxisScalePtrOutput)
}

type TemplateNumericAxisOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericAxisOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericAxisOptions)(nil)).Elem()
}

func (o TemplateNumericAxisOptionsPtrOutput) ToTemplateNumericAxisOptionsPtrOutput() TemplateNumericAxisOptionsPtrOutput {
	return o
}

func (o TemplateNumericAxisOptionsPtrOutput) ToTemplateNumericAxisOptionsPtrOutputWithContext(ctx context.Context) TemplateNumericAxisOptionsPtrOutput {
	return o
}

func (o TemplateNumericAxisOptionsPtrOutput) Elem() TemplateNumericAxisOptionsOutput {
	return o.ApplyT(func(v *TemplateNumericAxisOptions) TemplateNumericAxisOptions {
		if v != nil {
			return *v
		}
		var ret TemplateNumericAxisOptions
		return ret
	}).(TemplateNumericAxisOptionsOutput)
}

func (o TemplateNumericAxisOptionsPtrOutput) Range() TemplateAxisDisplayRangePtrOutput {
	return o.ApplyT(func(v *TemplateNumericAxisOptions) *TemplateAxisDisplayRange {
		if v == nil {
			return nil
		}
		return v.Range
	}).(TemplateAxisDisplayRangePtrOutput)
}

func (o TemplateNumericAxisOptionsPtrOutput) Scale() TemplateAxisScalePtrOutput {
	return o.ApplyT(func(v *TemplateNumericAxisOptions) *TemplateAxisScale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(TemplateAxisScalePtrOutput)
}

type TemplateNumericEqualityDrillDownFilter struct {
	Column TemplateColumnIdentifier `pulumi:"column"`
	Value  float64                  `pulumi:"value"`
}

// TemplateNumericEqualityDrillDownFilterInput is an input type that accepts TemplateNumericEqualityDrillDownFilterArgs and TemplateNumericEqualityDrillDownFilterOutput values.
// You can construct a concrete instance of `TemplateNumericEqualityDrillDownFilterInput` via:
//
//	TemplateNumericEqualityDrillDownFilterArgs{...}
type TemplateNumericEqualityDrillDownFilterInput interface {
	pulumi.Input

	ToTemplateNumericEqualityDrillDownFilterOutput() TemplateNumericEqualityDrillDownFilterOutput
	ToTemplateNumericEqualityDrillDownFilterOutputWithContext(context.Context) TemplateNumericEqualityDrillDownFilterOutput
}

type TemplateNumericEqualityDrillDownFilterArgs struct {
	Column TemplateColumnIdentifierInput `pulumi:"column"`
	Value  pulumi.Float64Input           `pulumi:"value"`
}

func (TemplateNumericEqualityDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i TemplateNumericEqualityDrillDownFilterArgs) ToTemplateNumericEqualityDrillDownFilterOutput() TemplateNumericEqualityDrillDownFilterOutput {
	return i.ToTemplateNumericEqualityDrillDownFilterOutputWithContext(context.Background())
}

func (i TemplateNumericEqualityDrillDownFilterArgs) ToTemplateNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityDrillDownFilterOutput)
}

func (i TemplateNumericEqualityDrillDownFilterArgs) ToTemplateNumericEqualityDrillDownFilterPtrOutput() TemplateNumericEqualityDrillDownFilterPtrOutput {
	return i.ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i TemplateNumericEqualityDrillDownFilterArgs) ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityDrillDownFilterOutput).ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(ctx)
}

// TemplateNumericEqualityDrillDownFilterPtrInput is an input type that accepts TemplateNumericEqualityDrillDownFilterArgs, TemplateNumericEqualityDrillDownFilterPtr and TemplateNumericEqualityDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `TemplateNumericEqualityDrillDownFilterPtrInput` via:
//
//	        TemplateNumericEqualityDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericEqualityDrillDownFilterPtrInput interface {
	pulumi.Input

	ToTemplateNumericEqualityDrillDownFilterPtrOutput() TemplateNumericEqualityDrillDownFilterPtrOutput
	ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(context.Context) TemplateNumericEqualityDrillDownFilterPtrOutput
}

type templateNumericEqualityDrillDownFilterPtrType TemplateNumericEqualityDrillDownFilterArgs

func TemplateNumericEqualityDrillDownFilterPtr(v *TemplateNumericEqualityDrillDownFilterArgs) TemplateNumericEqualityDrillDownFilterPtrInput {
	return (*templateNumericEqualityDrillDownFilterPtrType)(v)
}

func (*templateNumericEqualityDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (i *templateNumericEqualityDrillDownFilterPtrType) ToTemplateNumericEqualityDrillDownFilterPtrOutput() TemplateNumericEqualityDrillDownFilterPtrOutput {
	return i.ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *templateNumericEqualityDrillDownFilterPtrType) ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityDrillDownFilterPtrOutput)
}

type TemplateNumericEqualityDrillDownFilterOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o TemplateNumericEqualityDrillDownFilterOutput) ToTemplateNumericEqualityDrillDownFilterOutput() TemplateNumericEqualityDrillDownFilterOutput {
	return o
}

func (o TemplateNumericEqualityDrillDownFilterOutput) ToTemplateNumericEqualityDrillDownFilterOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterOutput {
	return o
}

func (o TemplateNumericEqualityDrillDownFilterOutput) ToTemplateNumericEqualityDrillDownFilterPtrOutput() TemplateNumericEqualityDrillDownFilterPtrOutput {
	return o.ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityDrillDownFilterOutput) ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericEqualityDrillDownFilter) *TemplateNumericEqualityDrillDownFilter {
		return &v
	}).(TemplateNumericEqualityDrillDownFilterPtrOutput)
}

func (o TemplateNumericEqualityDrillDownFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateNumericEqualityDrillDownFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateNumericEqualityDrillDownFilterOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateNumericEqualityDrillDownFilter) float64 { return v.Value }).(pulumi.Float64Output)
}

type TemplateNumericEqualityDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericEqualityDrillDownFilter)(nil)).Elem()
}

func (o TemplateNumericEqualityDrillDownFilterPtrOutput) ToTemplateNumericEqualityDrillDownFilterPtrOutput() TemplateNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o TemplateNumericEqualityDrillDownFilterPtrOutput) ToTemplateNumericEqualityDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityDrillDownFilterPtrOutput {
	return o
}

func (o TemplateNumericEqualityDrillDownFilterPtrOutput) Elem() TemplateNumericEqualityDrillDownFilterOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityDrillDownFilter) TemplateNumericEqualityDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret TemplateNumericEqualityDrillDownFilter
		return ret
	}).(TemplateNumericEqualityDrillDownFilterOutput)
}

func (o TemplateNumericEqualityDrillDownFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityDrillDownFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateNumericEqualityDrillDownFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityDrillDownFilter) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateNumericEqualityFilter struct {
	AggregationFunction *TemplateAggregationFunction           `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier               `pulumi:"column"`
	FilterId            string                                 `pulumi:"filterId"`
	MatchOperator       TemplateNumericEqualityMatchOperator   `pulumi:"matchOperator"`
	NullOption          TemplateFilterNullOption               `pulumi:"nullOption"`
	ParameterName       *string                                `pulumi:"parameterName"`
	SelectAllOptions    *TemplateNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
	Value               *float64                               `pulumi:"value"`
}

// TemplateNumericEqualityFilterInput is an input type that accepts TemplateNumericEqualityFilterArgs and TemplateNumericEqualityFilterOutput values.
// You can construct a concrete instance of `TemplateNumericEqualityFilterInput` via:
//
//	TemplateNumericEqualityFilterArgs{...}
type TemplateNumericEqualityFilterInput interface {
	pulumi.Input

	ToTemplateNumericEqualityFilterOutput() TemplateNumericEqualityFilterOutput
	ToTemplateNumericEqualityFilterOutputWithContext(context.Context) TemplateNumericEqualityFilterOutput
}

type TemplateNumericEqualityFilterArgs struct {
	AggregationFunction TemplateAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                            `pulumi:"filterId"`
	MatchOperator       TemplateNumericEqualityMatchOperatorInput     `pulumi:"matchOperator"`
	NullOption          TemplateFilterNullOptionInput                 `pulumi:"nullOption"`
	ParameterName       pulumi.StringPtrInput                         `pulumi:"parameterName"`
	SelectAllOptions    TemplateNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
	Value               pulumi.Float64PtrInput                        `pulumi:"value"`
}

func (TemplateNumericEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityFilter)(nil)).Elem()
}

func (i TemplateNumericEqualityFilterArgs) ToTemplateNumericEqualityFilterOutput() TemplateNumericEqualityFilterOutput {
	return i.ToTemplateNumericEqualityFilterOutputWithContext(context.Background())
}

func (i TemplateNumericEqualityFilterArgs) ToTemplateNumericEqualityFilterOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityFilterOutput)
}

func (i TemplateNumericEqualityFilterArgs) ToTemplateNumericEqualityFilterPtrOutput() TemplateNumericEqualityFilterPtrOutput {
	return i.ToTemplateNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i TemplateNumericEqualityFilterArgs) ToTemplateNumericEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityFilterOutput).ToTemplateNumericEqualityFilterPtrOutputWithContext(ctx)
}

// TemplateNumericEqualityFilterPtrInput is an input type that accepts TemplateNumericEqualityFilterArgs, TemplateNumericEqualityFilterPtr and TemplateNumericEqualityFilterPtrOutput values.
// You can construct a concrete instance of `TemplateNumericEqualityFilterPtrInput` via:
//
//	        TemplateNumericEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericEqualityFilterPtrInput interface {
	pulumi.Input

	ToTemplateNumericEqualityFilterPtrOutput() TemplateNumericEqualityFilterPtrOutput
	ToTemplateNumericEqualityFilterPtrOutputWithContext(context.Context) TemplateNumericEqualityFilterPtrOutput
}

type templateNumericEqualityFilterPtrType TemplateNumericEqualityFilterArgs

func TemplateNumericEqualityFilterPtr(v *TemplateNumericEqualityFilterArgs) TemplateNumericEqualityFilterPtrInput {
	return (*templateNumericEqualityFilterPtrType)(v)
}

func (*templateNumericEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericEqualityFilter)(nil)).Elem()
}

func (i *templateNumericEqualityFilterPtrType) ToTemplateNumericEqualityFilterPtrOutput() TemplateNumericEqualityFilterPtrOutput {
	return i.ToTemplateNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *templateNumericEqualityFilterPtrType) ToTemplateNumericEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericEqualityFilterPtrOutput)
}

type TemplateNumericEqualityFilterOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericEqualityFilter)(nil)).Elem()
}

func (o TemplateNumericEqualityFilterOutput) ToTemplateNumericEqualityFilterOutput() TemplateNumericEqualityFilterOutput {
	return o
}

func (o TemplateNumericEqualityFilterOutput) ToTemplateNumericEqualityFilterOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterOutput {
	return o
}

func (o TemplateNumericEqualityFilterOutput) ToTemplateNumericEqualityFilterPtrOutput() TemplateNumericEqualityFilterPtrOutput {
	return o.ToTemplateNumericEqualityFilterPtrOutputWithContext(context.Background())
}

func (o TemplateNumericEqualityFilterOutput) ToTemplateNumericEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericEqualityFilter) *TemplateNumericEqualityFilter {
		return &v
	}).(TemplateNumericEqualityFilterPtrOutput)
}

func (o TemplateNumericEqualityFilterOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) *TemplateAggregationFunction { return v.AggregationFunction }).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateNumericEqualityFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateNumericEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateNumericEqualityFilterOutput) MatchOperator() TemplateNumericEqualityMatchOperatorOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) TemplateNumericEqualityMatchOperator { return v.MatchOperator }).(TemplateNumericEqualityMatchOperatorOutput)
}

func (o TemplateNumericEqualityFilterOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateNumericEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o TemplateNumericEqualityFilterOutput) SelectAllOptions() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) *TemplateNumericFilterSelectAllOptions {
		return v.SelectAllOptions
	}).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

func (o TemplateNumericEqualityFilterOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateNumericEqualityFilter) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type TemplateNumericEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericEqualityFilter)(nil)).Elem()
}

func (o TemplateNumericEqualityFilterPtrOutput) ToTemplateNumericEqualityFilterPtrOutput() TemplateNumericEqualityFilterPtrOutput {
	return o
}

func (o TemplateNumericEqualityFilterPtrOutput) ToTemplateNumericEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateNumericEqualityFilterPtrOutput {
	return o
}

func (o TemplateNumericEqualityFilterPtrOutput) Elem() TemplateNumericEqualityFilterOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) TemplateNumericEqualityFilter {
		if v != nil {
			return *v
		}
		var ret TemplateNumericEqualityFilter
		return ret
	}).(TemplateNumericEqualityFilterOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *TemplateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) MatchOperator() TemplateNumericEqualityMatchOperatorPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *TemplateNumericEqualityMatchOperator {
		if v == nil {
			return nil
		}
		return &v.MatchOperator
	}).(TemplateNumericEqualityMatchOperatorPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) SelectAllOptions() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *TemplateNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

func (o TemplateNumericEqualityFilterPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateNumericEqualityFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateNumericFormatConfiguration struct {
	CurrencyDisplayFormatConfiguration   *TemplateCurrencyDisplayFormatConfiguration   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     *TemplateNumberDisplayFormatConfiguration     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration *TemplatePercentageDisplayFormatConfiguration `pulumi:"percentageDisplayFormatConfiguration"`
}

// TemplateNumericFormatConfigurationInput is an input type that accepts TemplateNumericFormatConfigurationArgs and TemplateNumericFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateNumericFormatConfigurationInput` via:
//
//	TemplateNumericFormatConfigurationArgs{...}
type TemplateNumericFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateNumericFormatConfigurationOutput() TemplateNumericFormatConfigurationOutput
	ToTemplateNumericFormatConfigurationOutputWithContext(context.Context) TemplateNumericFormatConfigurationOutput
}

type TemplateNumericFormatConfigurationArgs struct {
	CurrencyDisplayFormatConfiguration   TemplateCurrencyDisplayFormatConfigurationPtrInput   `pulumi:"currencyDisplayFormatConfiguration"`
	NumberDisplayFormatConfiguration     TemplateNumberDisplayFormatConfigurationPtrInput     `pulumi:"numberDisplayFormatConfiguration"`
	PercentageDisplayFormatConfiguration TemplatePercentageDisplayFormatConfigurationPtrInput `pulumi:"percentageDisplayFormatConfiguration"`
}

func (TemplateNumericFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericFormatConfiguration)(nil)).Elem()
}

func (i TemplateNumericFormatConfigurationArgs) ToTemplateNumericFormatConfigurationOutput() TemplateNumericFormatConfigurationOutput {
	return i.ToTemplateNumericFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateNumericFormatConfigurationArgs) ToTemplateNumericFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericFormatConfigurationOutput)
}

func (i TemplateNumericFormatConfigurationArgs) ToTemplateNumericFormatConfigurationPtrOutput() TemplateNumericFormatConfigurationPtrOutput {
	return i.ToTemplateNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNumericFormatConfigurationArgs) ToTemplateNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericFormatConfigurationOutput).ToTemplateNumericFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateNumericFormatConfigurationPtrInput is an input type that accepts TemplateNumericFormatConfigurationArgs, TemplateNumericFormatConfigurationPtr and TemplateNumericFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNumericFormatConfigurationPtrInput` via:
//
//	        TemplateNumericFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNumericFormatConfigurationPtrOutput() TemplateNumericFormatConfigurationPtrOutput
	ToTemplateNumericFormatConfigurationPtrOutputWithContext(context.Context) TemplateNumericFormatConfigurationPtrOutput
}

type templateNumericFormatConfigurationPtrType TemplateNumericFormatConfigurationArgs

func TemplateNumericFormatConfigurationPtr(v *TemplateNumericFormatConfigurationArgs) TemplateNumericFormatConfigurationPtrInput {
	return (*templateNumericFormatConfigurationPtrType)(v)
}

func (*templateNumericFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericFormatConfiguration)(nil)).Elem()
}

func (i *templateNumericFormatConfigurationPtrType) ToTemplateNumericFormatConfigurationPtrOutput() TemplateNumericFormatConfigurationPtrOutput {
	return i.ToTemplateNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNumericFormatConfigurationPtrType) ToTemplateNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateNumericFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNumericFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumericFormatConfigurationOutput) ToTemplateNumericFormatConfigurationOutput() TemplateNumericFormatConfigurationOutput {
	return o
}

func (o TemplateNumericFormatConfigurationOutput) ToTemplateNumericFormatConfigurationOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationOutput {
	return o
}

func (o TemplateNumericFormatConfigurationOutput) ToTemplateNumericFormatConfigurationPtrOutput() TemplateNumericFormatConfigurationPtrOutput {
	return o.ToTemplateNumericFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNumericFormatConfigurationOutput) ToTemplateNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericFormatConfiguration) *TemplateNumericFormatConfiguration {
		return &v
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

func (o TemplateNumericFormatConfigurationOutput) CurrencyDisplayFormatConfiguration() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumericFormatConfiguration) *TemplateCurrencyDisplayFormatConfiguration {
		return v.CurrencyDisplayFormatConfiguration
	}).(TemplateCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o TemplateNumericFormatConfigurationOutput) NumberDisplayFormatConfiguration() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumericFormatConfiguration) *TemplateNumberDisplayFormatConfiguration {
		return v.NumberDisplayFormatConfiguration
	}).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

func (o TemplateNumericFormatConfigurationOutput) PercentageDisplayFormatConfiguration() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumericFormatConfiguration) *TemplatePercentageDisplayFormatConfiguration {
		return v.PercentageDisplayFormatConfiguration
	}).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

type TemplateNumericFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericFormatConfiguration)(nil)).Elem()
}

func (o TemplateNumericFormatConfigurationPtrOutput) ToTemplateNumericFormatConfigurationPtrOutput() TemplateNumericFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumericFormatConfigurationPtrOutput) ToTemplateNumericFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericFormatConfigurationPtrOutput {
	return o
}

func (o TemplateNumericFormatConfigurationPtrOutput) Elem() TemplateNumericFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateNumericFormatConfiguration) TemplateNumericFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNumericFormatConfiguration
		return ret
	}).(TemplateNumericFormatConfigurationOutput)
}

func (o TemplateNumericFormatConfigurationPtrOutput) CurrencyDisplayFormatConfiguration() TemplateCurrencyDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericFormatConfiguration) *TemplateCurrencyDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.CurrencyDisplayFormatConfiguration
	}).(TemplateCurrencyDisplayFormatConfigurationPtrOutput)
}

func (o TemplateNumericFormatConfigurationPtrOutput) NumberDisplayFormatConfiguration() TemplateNumberDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericFormatConfiguration) *TemplateNumberDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumberDisplayFormatConfiguration
	}).(TemplateNumberDisplayFormatConfigurationPtrOutput)
}

func (o TemplateNumericFormatConfigurationPtrOutput) PercentageDisplayFormatConfiguration() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericFormatConfiguration) *TemplatePercentageDisplayFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.PercentageDisplayFormatConfiguration
	}).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

type TemplateNumericRangeFilter struct {
	AggregationFunction *TemplateAggregationFunction           `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier               `pulumi:"column"`
	FilterId            string                                 `pulumi:"filterId"`
	IncludeMaximum      *bool                                  `pulumi:"includeMaximum"`
	IncludeMinimum      *bool                                  `pulumi:"includeMinimum"`
	NullOption          TemplateFilterNullOption               `pulumi:"nullOption"`
	RangeMaximum        *TemplateNumericRangeFilterValue       `pulumi:"rangeMaximum"`
	RangeMinimum        *TemplateNumericRangeFilterValue       `pulumi:"rangeMinimum"`
	SelectAllOptions    *TemplateNumericFilterSelectAllOptions `pulumi:"selectAllOptions"`
}

// TemplateNumericRangeFilterInput is an input type that accepts TemplateNumericRangeFilterArgs and TemplateNumericRangeFilterOutput values.
// You can construct a concrete instance of `TemplateNumericRangeFilterInput` via:
//
//	TemplateNumericRangeFilterArgs{...}
type TemplateNumericRangeFilterInput interface {
	pulumi.Input

	ToTemplateNumericRangeFilterOutput() TemplateNumericRangeFilterOutput
	ToTemplateNumericRangeFilterOutputWithContext(context.Context) TemplateNumericRangeFilterOutput
}

type TemplateNumericRangeFilterArgs struct {
	AggregationFunction TemplateAggregationFunctionPtrInput           `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput                 `pulumi:"column"`
	FilterId            pulumi.StringInput                            `pulumi:"filterId"`
	IncludeMaximum      pulumi.BoolPtrInput                           `pulumi:"includeMaximum"`
	IncludeMinimum      pulumi.BoolPtrInput                           `pulumi:"includeMinimum"`
	NullOption          TemplateFilterNullOptionInput                 `pulumi:"nullOption"`
	RangeMaximum        TemplateNumericRangeFilterValuePtrInput       `pulumi:"rangeMaximum"`
	RangeMinimum        TemplateNumericRangeFilterValuePtrInput       `pulumi:"rangeMinimum"`
	SelectAllOptions    TemplateNumericFilterSelectAllOptionsPtrInput `pulumi:"selectAllOptions"`
}

func (TemplateNumericRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericRangeFilter)(nil)).Elem()
}

func (i TemplateNumericRangeFilterArgs) ToTemplateNumericRangeFilterOutput() TemplateNumericRangeFilterOutput {
	return i.ToTemplateNumericRangeFilterOutputWithContext(context.Background())
}

func (i TemplateNumericRangeFilterArgs) ToTemplateNumericRangeFilterOutputWithContext(ctx context.Context) TemplateNumericRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterOutput)
}

func (i TemplateNumericRangeFilterArgs) ToTemplateNumericRangeFilterPtrOutput() TemplateNumericRangeFilterPtrOutput {
	return i.ToTemplateNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i TemplateNumericRangeFilterArgs) ToTemplateNumericRangeFilterPtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterOutput).ToTemplateNumericRangeFilterPtrOutputWithContext(ctx)
}

// TemplateNumericRangeFilterPtrInput is an input type that accepts TemplateNumericRangeFilterArgs, TemplateNumericRangeFilterPtr and TemplateNumericRangeFilterPtrOutput values.
// You can construct a concrete instance of `TemplateNumericRangeFilterPtrInput` via:
//
//	        TemplateNumericRangeFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericRangeFilterPtrInput interface {
	pulumi.Input

	ToTemplateNumericRangeFilterPtrOutput() TemplateNumericRangeFilterPtrOutput
	ToTemplateNumericRangeFilterPtrOutputWithContext(context.Context) TemplateNumericRangeFilterPtrOutput
}

type templateNumericRangeFilterPtrType TemplateNumericRangeFilterArgs

func TemplateNumericRangeFilterPtr(v *TemplateNumericRangeFilterArgs) TemplateNumericRangeFilterPtrInput {
	return (*templateNumericRangeFilterPtrType)(v)
}

func (*templateNumericRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericRangeFilter)(nil)).Elem()
}

func (i *templateNumericRangeFilterPtrType) ToTemplateNumericRangeFilterPtrOutput() TemplateNumericRangeFilterPtrOutput {
	return i.ToTemplateNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (i *templateNumericRangeFilterPtrType) ToTemplateNumericRangeFilterPtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterPtrOutput)
}

type TemplateNumericRangeFilterOutput struct{ *pulumi.OutputState }

func (TemplateNumericRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericRangeFilter)(nil)).Elem()
}

func (o TemplateNumericRangeFilterOutput) ToTemplateNumericRangeFilterOutput() TemplateNumericRangeFilterOutput {
	return o
}

func (o TemplateNumericRangeFilterOutput) ToTemplateNumericRangeFilterOutputWithContext(ctx context.Context) TemplateNumericRangeFilterOutput {
	return o
}

func (o TemplateNumericRangeFilterOutput) ToTemplateNumericRangeFilterPtrOutput() TemplateNumericRangeFilterPtrOutput {
	return o.ToTemplateNumericRangeFilterPtrOutputWithContext(context.Background())
}

func (o TemplateNumericRangeFilterOutput) ToTemplateNumericRangeFilterPtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericRangeFilter) *TemplateNumericRangeFilter {
		return &v
	}).(TemplateNumericRangeFilterPtrOutput)
}

func (o TemplateNumericRangeFilterOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *TemplateAggregationFunction { return v.AggregationFunction }).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateNumericRangeFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateNumericRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateNumericRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o TemplateNumericRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o TemplateNumericRangeFilterOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateNumericRangeFilterOutput) RangeMaximum() TemplateNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *TemplateNumericRangeFilterValue { return v.RangeMaximum }).(TemplateNumericRangeFilterValuePtrOutput)
}

func (o TemplateNumericRangeFilterOutput) RangeMinimum() TemplateNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *TemplateNumericRangeFilterValue { return v.RangeMinimum }).(TemplateNumericRangeFilterValuePtrOutput)
}

func (o TemplateNumericRangeFilterOutput) SelectAllOptions() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilter) *TemplateNumericFilterSelectAllOptions { return v.SelectAllOptions }).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

type TemplateNumericRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericRangeFilter)(nil)).Elem()
}

func (o TemplateNumericRangeFilterPtrOutput) ToTemplateNumericRangeFilterPtrOutput() TemplateNumericRangeFilterPtrOutput {
	return o
}

func (o TemplateNumericRangeFilterPtrOutput) ToTemplateNumericRangeFilterPtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterPtrOutput {
	return o
}

func (o TemplateNumericRangeFilterPtrOutput) Elem() TemplateNumericRangeFilterOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) TemplateNumericRangeFilter {
		if v != nil {
			return *v
		}
		var ret TemplateNumericRangeFilter
		return ret
	}).(TemplateNumericRangeFilterOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) AggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) RangeMaximum() TemplateNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximum
	}).(TemplateNumericRangeFilterValuePtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) RangeMinimum() TemplateNumericRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateNumericRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimum
	}).(TemplateNumericRangeFilterValuePtrOutput)
}

func (o TemplateNumericRangeFilterPtrOutput) SelectAllOptions() TemplateNumericFilterSelectAllOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilter) *TemplateNumericFilterSelectAllOptions {
		if v == nil {
			return nil
		}
		return v.SelectAllOptions
	}).(TemplateNumericFilterSelectAllOptionsPtrOutput)
}

type TemplateNumericRangeFilterValue struct {
	Parameter   *string  `pulumi:"parameter"`
	StaticValue *float64 `pulumi:"staticValue"`
}

// TemplateNumericRangeFilterValueInput is an input type that accepts TemplateNumericRangeFilterValueArgs and TemplateNumericRangeFilterValueOutput values.
// You can construct a concrete instance of `TemplateNumericRangeFilterValueInput` via:
//
//	TemplateNumericRangeFilterValueArgs{...}
type TemplateNumericRangeFilterValueInput interface {
	pulumi.Input

	ToTemplateNumericRangeFilterValueOutput() TemplateNumericRangeFilterValueOutput
	ToTemplateNumericRangeFilterValueOutputWithContext(context.Context) TemplateNumericRangeFilterValueOutput
}

type TemplateNumericRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput  `pulumi:"parameter"`
	StaticValue pulumi.Float64PtrInput `pulumi:"staticValue"`
}

func (TemplateNumericRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericRangeFilterValue)(nil)).Elem()
}

func (i TemplateNumericRangeFilterValueArgs) ToTemplateNumericRangeFilterValueOutput() TemplateNumericRangeFilterValueOutput {
	return i.ToTemplateNumericRangeFilterValueOutputWithContext(context.Background())
}

func (i TemplateNumericRangeFilterValueArgs) ToTemplateNumericRangeFilterValueOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterValueOutput)
}

func (i TemplateNumericRangeFilterValueArgs) ToTemplateNumericRangeFilterValuePtrOutput() TemplateNumericRangeFilterValuePtrOutput {
	return i.ToTemplateNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i TemplateNumericRangeFilterValueArgs) ToTemplateNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterValueOutput).ToTemplateNumericRangeFilterValuePtrOutputWithContext(ctx)
}

// TemplateNumericRangeFilterValuePtrInput is an input type that accepts TemplateNumericRangeFilterValueArgs, TemplateNumericRangeFilterValuePtr and TemplateNumericRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `TemplateNumericRangeFilterValuePtrInput` via:
//
//	        TemplateNumericRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericRangeFilterValuePtrInput interface {
	pulumi.Input

	ToTemplateNumericRangeFilterValuePtrOutput() TemplateNumericRangeFilterValuePtrOutput
	ToTemplateNumericRangeFilterValuePtrOutputWithContext(context.Context) TemplateNumericRangeFilterValuePtrOutput
}

type templateNumericRangeFilterValuePtrType TemplateNumericRangeFilterValueArgs

func TemplateNumericRangeFilterValuePtr(v *TemplateNumericRangeFilterValueArgs) TemplateNumericRangeFilterValuePtrInput {
	return (*templateNumericRangeFilterValuePtrType)(v)
}

func (*templateNumericRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericRangeFilterValue)(nil)).Elem()
}

func (i *templateNumericRangeFilterValuePtrType) ToTemplateNumericRangeFilterValuePtrOutput() TemplateNumericRangeFilterValuePtrOutput {
	return i.ToTemplateNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *templateNumericRangeFilterValuePtrType) ToTemplateNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericRangeFilterValuePtrOutput)
}

type TemplateNumericRangeFilterValueOutput struct{ *pulumi.OutputState }

func (TemplateNumericRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericRangeFilterValue)(nil)).Elem()
}

func (o TemplateNumericRangeFilterValueOutput) ToTemplateNumericRangeFilterValueOutput() TemplateNumericRangeFilterValueOutput {
	return o
}

func (o TemplateNumericRangeFilterValueOutput) ToTemplateNumericRangeFilterValueOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValueOutput {
	return o
}

func (o TemplateNumericRangeFilterValueOutput) ToTemplateNumericRangeFilterValuePtrOutput() TemplateNumericRangeFilterValuePtrOutput {
	return o.ToTemplateNumericRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o TemplateNumericRangeFilterValueOutput) ToTemplateNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericRangeFilterValue) *TemplateNumericRangeFilterValue {
		return &v
	}).(TemplateNumericRangeFilterValuePtrOutput)
}

func (o TemplateNumericRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o TemplateNumericRangeFilterValueOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateNumericRangeFilterValue) *float64 { return v.StaticValue }).(pulumi.Float64PtrOutput)
}

type TemplateNumericRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericRangeFilterValue)(nil)).Elem()
}

func (o TemplateNumericRangeFilterValuePtrOutput) ToTemplateNumericRangeFilterValuePtrOutput() TemplateNumericRangeFilterValuePtrOutput {
	return o
}

func (o TemplateNumericRangeFilterValuePtrOutput) ToTemplateNumericRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateNumericRangeFilterValuePtrOutput {
	return o
}

func (o TemplateNumericRangeFilterValuePtrOutput) Elem() TemplateNumericRangeFilterValueOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilterValue) TemplateNumericRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret TemplateNumericRangeFilterValue
		return ret
	}).(TemplateNumericRangeFilterValueOutput)
}

func (o TemplateNumericRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericRangeFilterValuePtrOutput) StaticValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateNumericRangeFilterValue) *float64 {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.Float64PtrOutput)
}

type TemplateNumericSeparatorConfiguration struct {
	DecimalSeparator   *TemplateNumericSeparatorSymbol   `pulumi:"decimalSeparator"`
	ThousandsSeparator *TemplateThousandSeparatorOptions `pulumi:"thousandsSeparator"`
}

// TemplateNumericSeparatorConfigurationInput is an input type that accepts TemplateNumericSeparatorConfigurationArgs and TemplateNumericSeparatorConfigurationOutput values.
// You can construct a concrete instance of `TemplateNumericSeparatorConfigurationInput` via:
//
//	TemplateNumericSeparatorConfigurationArgs{...}
type TemplateNumericSeparatorConfigurationInput interface {
	pulumi.Input

	ToTemplateNumericSeparatorConfigurationOutput() TemplateNumericSeparatorConfigurationOutput
	ToTemplateNumericSeparatorConfigurationOutputWithContext(context.Context) TemplateNumericSeparatorConfigurationOutput
}

type TemplateNumericSeparatorConfigurationArgs struct {
	DecimalSeparator   TemplateNumericSeparatorSymbolPtrInput   `pulumi:"decimalSeparator"`
	ThousandsSeparator TemplateThousandSeparatorOptionsPtrInput `pulumi:"thousandsSeparator"`
}

func (TemplateNumericSeparatorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericSeparatorConfiguration)(nil)).Elem()
}

func (i TemplateNumericSeparatorConfigurationArgs) ToTemplateNumericSeparatorConfigurationOutput() TemplateNumericSeparatorConfigurationOutput {
	return i.ToTemplateNumericSeparatorConfigurationOutputWithContext(context.Background())
}

func (i TemplateNumericSeparatorConfigurationArgs) ToTemplateNumericSeparatorConfigurationOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericSeparatorConfigurationOutput)
}

func (i TemplateNumericSeparatorConfigurationArgs) ToTemplateNumericSeparatorConfigurationPtrOutput() TemplateNumericSeparatorConfigurationPtrOutput {
	return i.ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateNumericSeparatorConfigurationArgs) ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericSeparatorConfigurationOutput).ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(ctx)
}

// TemplateNumericSeparatorConfigurationPtrInput is an input type that accepts TemplateNumericSeparatorConfigurationArgs, TemplateNumericSeparatorConfigurationPtr and TemplateNumericSeparatorConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateNumericSeparatorConfigurationPtrInput` via:
//
//	        TemplateNumericSeparatorConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericSeparatorConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateNumericSeparatorConfigurationPtrOutput() TemplateNumericSeparatorConfigurationPtrOutput
	ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(context.Context) TemplateNumericSeparatorConfigurationPtrOutput
}

type templateNumericSeparatorConfigurationPtrType TemplateNumericSeparatorConfigurationArgs

func TemplateNumericSeparatorConfigurationPtr(v *TemplateNumericSeparatorConfigurationArgs) TemplateNumericSeparatorConfigurationPtrInput {
	return (*templateNumericSeparatorConfigurationPtrType)(v)
}

func (*templateNumericSeparatorConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericSeparatorConfiguration)(nil)).Elem()
}

func (i *templateNumericSeparatorConfigurationPtrType) ToTemplateNumericSeparatorConfigurationPtrOutput() TemplateNumericSeparatorConfigurationPtrOutput {
	return i.ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateNumericSeparatorConfigurationPtrType) ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericSeparatorConfigurationPtrOutput)
}

type TemplateNumericSeparatorConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateNumericSeparatorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericSeparatorConfiguration)(nil)).Elem()
}

func (o TemplateNumericSeparatorConfigurationOutput) ToTemplateNumericSeparatorConfigurationOutput() TemplateNumericSeparatorConfigurationOutput {
	return o
}

func (o TemplateNumericSeparatorConfigurationOutput) ToTemplateNumericSeparatorConfigurationOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationOutput {
	return o
}

func (o TemplateNumericSeparatorConfigurationOutput) ToTemplateNumericSeparatorConfigurationPtrOutput() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateNumericSeparatorConfigurationOutput) ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericSeparatorConfiguration) *TemplateNumericSeparatorConfiguration {
		return &v
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplateNumericSeparatorConfigurationOutput) DecimalSeparator() TemplateNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v TemplateNumericSeparatorConfiguration) *TemplateNumericSeparatorSymbol {
		return v.DecimalSeparator
	}).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (o TemplateNumericSeparatorConfigurationOutput) ThousandsSeparator() TemplateThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v TemplateNumericSeparatorConfiguration) *TemplateThousandSeparatorOptions {
		return v.ThousandsSeparator
	}).(TemplateThousandSeparatorOptionsPtrOutput)
}

type TemplateNumericSeparatorConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericSeparatorConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericSeparatorConfiguration)(nil)).Elem()
}

func (o TemplateNumericSeparatorConfigurationPtrOutput) ToTemplateNumericSeparatorConfigurationPtrOutput() TemplateNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o TemplateNumericSeparatorConfigurationPtrOutput) ToTemplateNumericSeparatorConfigurationPtrOutputWithContext(ctx context.Context) TemplateNumericSeparatorConfigurationPtrOutput {
	return o
}

func (o TemplateNumericSeparatorConfigurationPtrOutput) Elem() TemplateNumericSeparatorConfigurationOutput {
	return o.ApplyT(func(v *TemplateNumericSeparatorConfiguration) TemplateNumericSeparatorConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateNumericSeparatorConfiguration
		return ret
	}).(TemplateNumericSeparatorConfigurationOutput)
}

func (o TemplateNumericSeparatorConfigurationPtrOutput) DecimalSeparator() TemplateNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *TemplateNumericSeparatorConfiguration) *TemplateNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.DecimalSeparator
	}).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (o TemplateNumericSeparatorConfigurationPtrOutput) ThousandsSeparator() TemplateThousandSeparatorOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateNumericSeparatorConfiguration) *TemplateThousandSeparatorOptions {
		if v == nil {
			return nil
		}
		return v.ThousandsSeparator
	}).(TemplateThousandSeparatorOptionsPtrOutput)
}

type TemplateNumericalAggregationFunction struct {
	PercentileAggregation      *TemplatePercentileAggregation              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation *TemplateSimpleNumericalAggregationFunction `pulumi:"simpleNumericalAggregation"`
}

// TemplateNumericalAggregationFunctionInput is an input type that accepts TemplateNumericalAggregationFunctionArgs and TemplateNumericalAggregationFunctionOutput values.
// You can construct a concrete instance of `TemplateNumericalAggregationFunctionInput` via:
//
//	TemplateNumericalAggregationFunctionArgs{...}
type TemplateNumericalAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateNumericalAggregationFunctionOutput() TemplateNumericalAggregationFunctionOutput
	ToTemplateNumericalAggregationFunctionOutputWithContext(context.Context) TemplateNumericalAggregationFunctionOutput
}

type TemplateNumericalAggregationFunctionArgs struct {
	PercentileAggregation      TemplatePercentileAggregationPtrInput              `pulumi:"percentileAggregation"`
	SimpleNumericalAggregation TemplateSimpleNumericalAggregationFunctionPtrInput `pulumi:"simpleNumericalAggregation"`
}

func (TemplateNumericalAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalAggregationFunction)(nil)).Elem()
}

func (i TemplateNumericalAggregationFunctionArgs) ToTemplateNumericalAggregationFunctionOutput() TemplateNumericalAggregationFunctionOutput {
	return i.ToTemplateNumericalAggregationFunctionOutputWithContext(context.Background())
}

func (i TemplateNumericalAggregationFunctionArgs) ToTemplateNumericalAggregationFunctionOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalAggregationFunctionOutput)
}

func (i TemplateNumericalAggregationFunctionArgs) ToTemplateNumericalAggregationFunctionPtrOutput() TemplateNumericalAggregationFunctionPtrOutput {
	return i.ToTemplateNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i TemplateNumericalAggregationFunctionArgs) ToTemplateNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalAggregationFunctionOutput).ToTemplateNumericalAggregationFunctionPtrOutputWithContext(ctx)
}

// TemplateNumericalAggregationFunctionPtrInput is an input type that accepts TemplateNumericalAggregationFunctionArgs, TemplateNumericalAggregationFunctionPtr and TemplateNumericalAggregationFunctionPtrOutput values.
// You can construct a concrete instance of `TemplateNumericalAggregationFunctionPtrInput` via:
//
//	        TemplateNumericalAggregationFunctionArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericalAggregationFunctionPtrInput interface {
	pulumi.Input

	ToTemplateNumericalAggregationFunctionPtrOutput() TemplateNumericalAggregationFunctionPtrOutput
	ToTemplateNumericalAggregationFunctionPtrOutputWithContext(context.Context) TemplateNumericalAggregationFunctionPtrOutput
}

type templateNumericalAggregationFunctionPtrType TemplateNumericalAggregationFunctionArgs

func TemplateNumericalAggregationFunctionPtr(v *TemplateNumericalAggregationFunctionArgs) TemplateNumericalAggregationFunctionPtrInput {
	return (*templateNumericalAggregationFunctionPtrType)(v)
}

func (*templateNumericalAggregationFunctionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalAggregationFunction)(nil)).Elem()
}

func (i *templateNumericalAggregationFunctionPtrType) ToTemplateNumericalAggregationFunctionPtrOutput() TemplateNumericalAggregationFunctionPtrOutput {
	return i.ToTemplateNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (i *templateNumericalAggregationFunctionPtrType) ToTemplateNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalAggregationFunctionPtrOutput)
}

type TemplateNumericalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateNumericalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalAggregationFunction)(nil)).Elem()
}

func (o TemplateNumericalAggregationFunctionOutput) ToTemplateNumericalAggregationFunctionOutput() TemplateNumericalAggregationFunctionOutput {
	return o
}

func (o TemplateNumericalAggregationFunctionOutput) ToTemplateNumericalAggregationFunctionOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionOutput {
	return o
}

func (o TemplateNumericalAggregationFunctionOutput) ToTemplateNumericalAggregationFunctionPtrOutput() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ToTemplateNumericalAggregationFunctionPtrOutputWithContext(context.Background())
}

func (o TemplateNumericalAggregationFunctionOutput) ToTemplateNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericalAggregationFunction) *TemplateNumericalAggregationFunction {
		return &v
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

func (o TemplateNumericalAggregationFunctionOutput) PercentileAggregation() TemplatePercentileAggregationPtrOutput {
	return o.ApplyT(func(v TemplateNumericalAggregationFunction) *TemplatePercentileAggregation {
		return v.PercentileAggregation
	}).(TemplatePercentileAggregationPtrOutput)
}

func (o TemplateNumericalAggregationFunctionOutput) SimpleNumericalAggregation() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateNumericalAggregationFunction) *TemplateSimpleNumericalAggregationFunction {
		return v.SimpleNumericalAggregation
	}).(TemplateSimpleNumericalAggregationFunctionPtrOutput)
}

type TemplateNumericalAggregationFunctionPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericalAggregationFunctionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalAggregationFunction)(nil)).Elem()
}

func (o TemplateNumericalAggregationFunctionPtrOutput) ToTemplateNumericalAggregationFunctionPtrOutput() TemplateNumericalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateNumericalAggregationFunctionPtrOutput) ToTemplateNumericalAggregationFunctionPtrOutputWithContext(ctx context.Context) TemplateNumericalAggregationFunctionPtrOutput {
	return o
}

func (o TemplateNumericalAggregationFunctionPtrOutput) Elem() TemplateNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v *TemplateNumericalAggregationFunction) TemplateNumericalAggregationFunction {
		if v != nil {
			return *v
		}
		var ret TemplateNumericalAggregationFunction
		return ret
	}).(TemplateNumericalAggregationFunctionOutput)
}

func (o TemplateNumericalAggregationFunctionPtrOutput) PercentileAggregation() TemplatePercentileAggregationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalAggregationFunction) *TemplatePercentileAggregation {
		if v == nil {
			return nil
		}
		return v.PercentileAggregation
	}).(TemplatePercentileAggregationPtrOutput)
}

func (o TemplateNumericalAggregationFunctionPtrOutput) SimpleNumericalAggregation() TemplateSimpleNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalAggregationFunction) *TemplateSimpleNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.SimpleNumericalAggregation
	}).(TemplateSimpleNumericalAggregationFunctionPtrOutput)
}

type TemplateNumericalDimensionField struct {
	Column              TemplateColumnIdentifier           `pulumi:"column"`
	FieldId             string                             `pulumi:"fieldId"`
	FormatConfiguration *TemplateNumberFormatConfiguration `pulumi:"formatConfiguration"`
	HierarchyId         *string                            `pulumi:"hierarchyId"`
}

// TemplateNumericalDimensionFieldInput is an input type that accepts TemplateNumericalDimensionFieldArgs and TemplateNumericalDimensionFieldOutput values.
// You can construct a concrete instance of `TemplateNumericalDimensionFieldInput` via:
//
//	TemplateNumericalDimensionFieldArgs{...}
type TemplateNumericalDimensionFieldInput interface {
	pulumi.Input

	ToTemplateNumericalDimensionFieldOutput() TemplateNumericalDimensionFieldOutput
	ToTemplateNumericalDimensionFieldOutputWithContext(context.Context) TemplateNumericalDimensionFieldOutput
}

type TemplateNumericalDimensionFieldArgs struct {
	Column              TemplateColumnIdentifierInput             `pulumi:"column"`
	FieldId             pulumi.StringInput                        `pulumi:"fieldId"`
	FormatConfiguration TemplateNumberFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
	HierarchyId         pulumi.StringPtrInput                     `pulumi:"hierarchyId"`
}

func (TemplateNumericalDimensionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalDimensionField)(nil)).Elem()
}

func (i TemplateNumericalDimensionFieldArgs) ToTemplateNumericalDimensionFieldOutput() TemplateNumericalDimensionFieldOutput {
	return i.ToTemplateNumericalDimensionFieldOutputWithContext(context.Background())
}

func (i TemplateNumericalDimensionFieldArgs) ToTemplateNumericalDimensionFieldOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalDimensionFieldOutput)
}

func (i TemplateNumericalDimensionFieldArgs) ToTemplateNumericalDimensionFieldPtrOutput() TemplateNumericalDimensionFieldPtrOutput {
	return i.ToTemplateNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i TemplateNumericalDimensionFieldArgs) ToTemplateNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalDimensionFieldOutput).ToTemplateNumericalDimensionFieldPtrOutputWithContext(ctx)
}

// TemplateNumericalDimensionFieldPtrInput is an input type that accepts TemplateNumericalDimensionFieldArgs, TemplateNumericalDimensionFieldPtr and TemplateNumericalDimensionFieldPtrOutput values.
// You can construct a concrete instance of `TemplateNumericalDimensionFieldPtrInput` via:
//
//	        TemplateNumericalDimensionFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericalDimensionFieldPtrInput interface {
	pulumi.Input

	ToTemplateNumericalDimensionFieldPtrOutput() TemplateNumericalDimensionFieldPtrOutput
	ToTemplateNumericalDimensionFieldPtrOutputWithContext(context.Context) TemplateNumericalDimensionFieldPtrOutput
}

type templateNumericalDimensionFieldPtrType TemplateNumericalDimensionFieldArgs

func TemplateNumericalDimensionFieldPtr(v *TemplateNumericalDimensionFieldArgs) TemplateNumericalDimensionFieldPtrInput {
	return (*templateNumericalDimensionFieldPtrType)(v)
}

func (*templateNumericalDimensionFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalDimensionField)(nil)).Elem()
}

func (i *templateNumericalDimensionFieldPtrType) ToTemplateNumericalDimensionFieldPtrOutput() TemplateNumericalDimensionFieldPtrOutput {
	return i.ToTemplateNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (i *templateNumericalDimensionFieldPtrType) ToTemplateNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalDimensionFieldPtrOutput)
}

type TemplateNumericalDimensionFieldOutput struct{ *pulumi.OutputState }

func (TemplateNumericalDimensionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalDimensionField)(nil)).Elem()
}

func (o TemplateNumericalDimensionFieldOutput) ToTemplateNumericalDimensionFieldOutput() TemplateNumericalDimensionFieldOutput {
	return o
}

func (o TemplateNumericalDimensionFieldOutput) ToTemplateNumericalDimensionFieldOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldOutput {
	return o
}

func (o TemplateNumericalDimensionFieldOutput) ToTemplateNumericalDimensionFieldPtrOutput() TemplateNumericalDimensionFieldPtrOutput {
	return o.ToTemplateNumericalDimensionFieldPtrOutputWithContext(context.Background())
}

func (o TemplateNumericalDimensionFieldOutput) ToTemplateNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericalDimensionField) *TemplateNumericalDimensionField {
		return &v
	}).(TemplateNumericalDimensionFieldPtrOutput)
}

func (o TemplateNumericalDimensionFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateNumericalDimensionField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateNumericalDimensionFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateNumericalDimensionField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateNumericalDimensionFieldOutput) FormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumericalDimensionField) *TemplateNumberFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

func (o TemplateNumericalDimensionFieldOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateNumericalDimensionField) *string { return v.HierarchyId }).(pulumi.StringPtrOutput)
}

type TemplateNumericalDimensionFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericalDimensionFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalDimensionField)(nil)).Elem()
}

func (o TemplateNumericalDimensionFieldPtrOutput) ToTemplateNumericalDimensionFieldPtrOutput() TemplateNumericalDimensionFieldPtrOutput {
	return o
}

func (o TemplateNumericalDimensionFieldPtrOutput) ToTemplateNumericalDimensionFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalDimensionFieldPtrOutput {
	return o
}

func (o TemplateNumericalDimensionFieldPtrOutput) Elem() TemplateNumericalDimensionFieldOutput {
	return o.ApplyT(func(v *TemplateNumericalDimensionField) TemplateNumericalDimensionField {
		if v != nil {
			return *v
		}
		var ret TemplateNumericalDimensionField
		return ret
	}).(TemplateNumericalDimensionFieldOutput)
}

func (o TemplateNumericalDimensionFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalDimensionField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateNumericalDimensionFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericalDimensionFieldPtrOutput) FormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalDimensionField) *TemplateNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

func (o TemplateNumericalDimensionFieldPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalDimensionField) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateNumericalMeasureField struct {
	AggregationFunction *TemplateNumericalAggregationFunction `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifier              `pulumi:"column"`
	FieldId             string                                `pulumi:"fieldId"`
	FormatConfiguration *TemplateNumberFormatConfiguration    `pulumi:"formatConfiguration"`
}

// TemplateNumericalMeasureFieldInput is an input type that accepts TemplateNumericalMeasureFieldArgs and TemplateNumericalMeasureFieldOutput values.
// You can construct a concrete instance of `TemplateNumericalMeasureFieldInput` via:
//
//	TemplateNumericalMeasureFieldArgs{...}
type TemplateNumericalMeasureFieldInput interface {
	pulumi.Input

	ToTemplateNumericalMeasureFieldOutput() TemplateNumericalMeasureFieldOutput
	ToTemplateNumericalMeasureFieldOutputWithContext(context.Context) TemplateNumericalMeasureFieldOutput
}

type TemplateNumericalMeasureFieldArgs struct {
	AggregationFunction TemplateNumericalAggregationFunctionPtrInput `pulumi:"aggregationFunction"`
	Column              TemplateColumnIdentifierInput                `pulumi:"column"`
	FieldId             pulumi.StringInput                           `pulumi:"fieldId"`
	FormatConfiguration TemplateNumberFormatConfigurationPtrInput    `pulumi:"formatConfiguration"`
}

func (TemplateNumericalMeasureFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalMeasureField)(nil)).Elem()
}

func (i TemplateNumericalMeasureFieldArgs) ToTemplateNumericalMeasureFieldOutput() TemplateNumericalMeasureFieldOutput {
	return i.ToTemplateNumericalMeasureFieldOutputWithContext(context.Background())
}

func (i TemplateNumericalMeasureFieldArgs) ToTemplateNumericalMeasureFieldOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalMeasureFieldOutput)
}

func (i TemplateNumericalMeasureFieldArgs) ToTemplateNumericalMeasureFieldPtrOutput() TemplateNumericalMeasureFieldPtrOutput {
	return i.ToTemplateNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i TemplateNumericalMeasureFieldArgs) ToTemplateNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalMeasureFieldOutput).ToTemplateNumericalMeasureFieldPtrOutputWithContext(ctx)
}

// TemplateNumericalMeasureFieldPtrInput is an input type that accepts TemplateNumericalMeasureFieldArgs, TemplateNumericalMeasureFieldPtr and TemplateNumericalMeasureFieldPtrOutput values.
// You can construct a concrete instance of `TemplateNumericalMeasureFieldPtrInput` via:
//
//	        TemplateNumericalMeasureFieldArgs{...}
//
//	or:
//
//	        nil
type TemplateNumericalMeasureFieldPtrInput interface {
	pulumi.Input

	ToTemplateNumericalMeasureFieldPtrOutput() TemplateNumericalMeasureFieldPtrOutput
	ToTemplateNumericalMeasureFieldPtrOutputWithContext(context.Context) TemplateNumericalMeasureFieldPtrOutput
}

type templateNumericalMeasureFieldPtrType TemplateNumericalMeasureFieldArgs

func TemplateNumericalMeasureFieldPtr(v *TemplateNumericalMeasureFieldArgs) TemplateNumericalMeasureFieldPtrInput {
	return (*templateNumericalMeasureFieldPtrType)(v)
}

func (*templateNumericalMeasureFieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalMeasureField)(nil)).Elem()
}

func (i *templateNumericalMeasureFieldPtrType) ToTemplateNumericalMeasureFieldPtrOutput() TemplateNumericalMeasureFieldPtrOutput {
	return i.ToTemplateNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (i *templateNumericalMeasureFieldPtrType) ToTemplateNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateNumericalMeasureFieldPtrOutput)
}

type TemplateNumericalMeasureFieldOutput struct{ *pulumi.OutputState }

func (TemplateNumericalMeasureFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateNumericalMeasureField)(nil)).Elem()
}

func (o TemplateNumericalMeasureFieldOutput) ToTemplateNumericalMeasureFieldOutput() TemplateNumericalMeasureFieldOutput {
	return o
}

func (o TemplateNumericalMeasureFieldOutput) ToTemplateNumericalMeasureFieldOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldOutput {
	return o
}

func (o TemplateNumericalMeasureFieldOutput) ToTemplateNumericalMeasureFieldPtrOutput() TemplateNumericalMeasureFieldPtrOutput {
	return o.ToTemplateNumericalMeasureFieldPtrOutputWithContext(context.Background())
}

func (o TemplateNumericalMeasureFieldOutput) ToTemplateNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateNumericalMeasureField) *TemplateNumericalMeasureField {
		return &v
	}).(TemplateNumericalMeasureFieldPtrOutput)
}

func (o TemplateNumericalMeasureFieldOutput) AggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateNumericalMeasureField) *TemplateNumericalAggregationFunction {
		return v.AggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

func (o TemplateNumericalMeasureFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateNumericalMeasureField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateNumericalMeasureFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateNumericalMeasureField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateNumericalMeasureFieldOutput) FormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateNumericalMeasureField) *TemplateNumberFormatConfiguration { return v.FormatConfiguration }).(TemplateNumberFormatConfigurationPtrOutput)
}

type TemplateNumericalMeasureFieldPtrOutput struct{ *pulumi.OutputState }

func (TemplateNumericalMeasureFieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateNumericalMeasureField)(nil)).Elem()
}

func (o TemplateNumericalMeasureFieldPtrOutput) ToTemplateNumericalMeasureFieldPtrOutput() TemplateNumericalMeasureFieldPtrOutput {
	return o
}

func (o TemplateNumericalMeasureFieldPtrOutput) ToTemplateNumericalMeasureFieldPtrOutputWithContext(ctx context.Context) TemplateNumericalMeasureFieldPtrOutput {
	return o
}

func (o TemplateNumericalMeasureFieldPtrOutput) Elem() TemplateNumericalMeasureFieldOutput {
	return o.ApplyT(func(v *TemplateNumericalMeasureField) TemplateNumericalMeasureField {
		if v != nil {
			return *v
		}
		var ret TemplateNumericalMeasureField
		return ret
	}).(TemplateNumericalMeasureFieldOutput)
}

func (o TemplateNumericalMeasureFieldPtrOutput) AggregationFunction() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalMeasureField) *TemplateNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return v.AggregationFunction
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

func (o TemplateNumericalMeasureFieldPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalMeasureField) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateNumericalMeasureFieldPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalMeasureField) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateNumericalMeasureFieldPtrOutput) FormatConfiguration() TemplateNumberFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateNumericalMeasureField) *TemplateNumberFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateNumberFormatConfigurationPtrOutput)
}

type TemplatePaginationConfiguration struct {
	PageNumber float64 `pulumi:"pageNumber"`
	PageSize   float64 `pulumi:"pageSize"`
}

// TemplatePaginationConfigurationInput is an input type that accepts TemplatePaginationConfigurationArgs and TemplatePaginationConfigurationOutput values.
// You can construct a concrete instance of `TemplatePaginationConfigurationInput` via:
//
//	TemplatePaginationConfigurationArgs{...}
type TemplatePaginationConfigurationInput interface {
	pulumi.Input

	ToTemplatePaginationConfigurationOutput() TemplatePaginationConfigurationOutput
	ToTemplatePaginationConfigurationOutputWithContext(context.Context) TemplatePaginationConfigurationOutput
}

type TemplatePaginationConfigurationArgs struct {
	PageNumber pulumi.Float64Input `pulumi:"pageNumber"`
	PageSize   pulumi.Float64Input `pulumi:"pageSize"`
}

func (TemplatePaginationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaginationConfiguration)(nil)).Elem()
}

func (i TemplatePaginationConfigurationArgs) ToTemplatePaginationConfigurationOutput() TemplatePaginationConfigurationOutput {
	return i.ToTemplatePaginationConfigurationOutputWithContext(context.Background())
}

func (i TemplatePaginationConfigurationArgs) ToTemplatePaginationConfigurationOutputWithContext(ctx context.Context) TemplatePaginationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePaginationConfigurationOutput)
}

func (i TemplatePaginationConfigurationArgs) ToTemplatePaginationConfigurationPtrOutput() TemplatePaginationConfigurationPtrOutput {
	return i.ToTemplatePaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePaginationConfigurationArgs) ToTemplatePaginationConfigurationPtrOutputWithContext(ctx context.Context) TemplatePaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePaginationConfigurationOutput).ToTemplatePaginationConfigurationPtrOutputWithContext(ctx)
}

// TemplatePaginationConfigurationPtrInput is an input type that accepts TemplatePaginationConfigurationArgs, TemplatePaginationConfigurationPtr and TemplatePaginationConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePaginationConfigurationPtrInput` via:
//
//	        TemplatePaginationConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePaginationConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePaginationConfigurationPtrOutput() TemplatePaginationConfigurationPtrOutput
	ToTemplatePaginationConfigurationPtrOutputWithContext(context.Context) TemplatePaginationConfigurationPtrOutput
}

type templatePaginationConfigurationPtrType TemplatePaginationConfigurationArgs

func TemplatePaginationConfigurationPtr(v *TemplatePaginationConfigurationArgs) TemplatePaginationConfigurationPtrInput {
	return (*templatePaginationConfigurationPtrType)(v)
}

func (*templatePaginationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePaginationConfiguration)(nil)).Elem()
}

func (i *templatePaginationConfigurationPtrType) ToTemplatePaginationConfigurationPtrOutput() TemplatePaginationConfigurationPtrOutput {
	return i.ToTemplatePaginationConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePaginationConfigurationPtrType) ToTemplatePaginationConfigurationPtrOutputWithContext(ctx context.Context) TemplatePaginationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePaginationConfigurationPtrOutput)
}

type TemplatePaginationConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePaginationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePaginationConfiguration)(nil)).Elem()
}

func (o TemplatePaginationConfigurationOutput) ToTemplatePaginationConfigurationOutput() TemplatePaginationConfigurationOutput {
	return o
}

func (o TemplatePaginationConfigurationOutput) ToTemplatePaginationConfigurationOutputWithContext(ctx context.Context) TemplatePaginationConfigurationOutput {
	return o
}

func (o TemplatePaginationConfigurationOutput) ToTemplatePaginationConfigurationPtrOutput() TemplatePaginationConfigurationPtrOutput {
	return o.ToTemplatePaginationConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePaginationConfigurationOutput) ToTemplatePaginationConfigurationPtrOutputWithContext(ctx context.Context) TemplatePaginationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePaginationConfiguration) *TemplatePaginationConfiguration {
		return &v
	}).(TemplatePaginationConfigurationPtrOutput)
}

func (o TemplatePaginationConfigurationOutput) PageNumber() pulumi.Float64Output {
	return o.ApplyT(func(v TemplatePaginationConfiguration) float64 { return v.PageNumber }).(pulumi.Float64Output)
}

func (o TemplatePaginationConfigurationOutput) PageSize() pulumi.Float64Output {
	return o.ApplyT(func(v TemplatePaginationConfiguration) float64 { return v.PageSize }).(pulumi.Float64Output)
}

type TemplatePaginationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePaginationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePaginationConfiguration)(nil)).Elem()
}

func (o TemplatePaginationConfigurationPtrOutput) ToTemplatePaginationConfigurationPtrOutput() TemplatePaginationConfigurationPtrOutput {
	return o
}

func (o TemplatePaginationConfigurationPtrOutput) ToTemplatePaginationConfigurationPtrOutputWithContext(ctx context.Context) TemplatePaginationConfigurationPtrOutput {
	return o
}

func (o TemplatePaginationConfigurationPtrOutput) Elem() TemplatePaginationConfigurationOutput {
	return o.ApplyT(func(v *TemplatePaginationConfiguration) TemplatePaginationConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePaginationConfiguration
		return ret
	}).(TemplatePaginationConfigurationOutput)
}

func (o TemplatePaginationConfigurationPtrOutput) PageNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplatePaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageNumber
	}).(pulumi.Float64PtrOutput)
}

func (o TemplatePaginationConfigurationPtrOutput) PageSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplatePaginationConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.PageSize
	}).(pulumi.Float64PtrOutput)
}

type TemplatePanelConfiguration struct {
	BackgroundColor      *string                   `pulumi:"backgroundColor"`
	BackgroundVisibility *TemplateVisibility       `pulumi:"backgroundVisibility"`
	BorderColor          *string                   `pulumi:"borderColor"`
	BorderStyle          *TemplatePanelBorderStyle `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  *string             `pulumi:"borderThickness"`
	BorderVisibility *TemplateVisibility `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    *string                    `pulumi:"gutterSpacing"`
	GutterVisibility *TemplateVisibility        `pulumi:"gutterVisibility"`
	Title            *TemplatePanelTitleOptions `pulumi:"title"`
}

// TemplatePanelConfigurationInput is an input type that accepts TemplatePanelConfigurationArgs and TemplatePanelConfigurationOutput values.
// You can construct a concrete instance of `TemplatePanelConfigurationInput` via:
//
//	TemplatePanelConfigurationArgs{...}
type TemplatePanelConfigurationInput interface {
	pulumi.Input

	ToTemplatePanelConfigurationOutput() TemplatePanelConfigurationOutput
	ToTemplatePanelConfigurationOutputWithContext(context.Context) TemplatePanelConfigurationOutput
}

type TemplatePanelConfigurationArgs struct {
	BackgroundColor      pulumi.StringPtrInput            `pulumi:"backgroundColor"`
	BackgroundVisibility TemplateVisibilityPtrInput       `pulumi:"backgroundVisibility"`
	BorderColor          pulumi.StringPtrInput            `pulumi:"borderColor"`
	BorderStyle          TemplatePanelBorderStylePtrInput `pulumi:"borderStyle"`
	// String based length that is composed of value and unit in px
	BorderThickness  pulumi.StringPtrInput      `pulumi:"borderThickness"`
	BorderVisibility TemplateVisibilityPtrInput `pulumi:"borderVisibility"`
	// String based length that is composed of value and unit in px
	GutterSpacing    pulumi.StringPtrInput             `pulumi:"gutterSpacing"`
	GutterVisibility TemplateVisibilityPtrInput        `pulumi:"gutterVisibility"`
	Title            TemplatePanelTitleOptionsPtrInput `pulumi:"title"`
}

func (TemplatePanelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelConfiguration)(nil)).Elem()
}

func (i TemplatePanelConfigurationArgs) ToTemplatePanelConfigurationOutput() TemplatePanelConfigurationOutput {
	return i.ToTemplatePanelConfigurationOutputWithContext(context.Background())
}

func (i TemplatePanelConfigurationArgs) ToTemplatePanelConfigurationOutputWithContext(ctx context.Context) TemplatePanelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelConfigurationOutput)
}

func (i TemplatePanelConfigurationArgs) ToTemplatePanelConfigurationPtrOutput() TemplatePanelConfigurationPtrOutput {
	return i.ToTemplatePanelConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePanelConfigurationArgs) ToTemplatePanelConfigurationPtrOutputWithContext(ctx context.Context) TemplatePanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelConfigurationOutput).ToTemplatePanelConfigurationPtrOutputWithContext(ctx)
}

// TemplatePanelConfigurationPtrInput is an input type that accepts TemplatePanelConfigurationArgs, TemplatePanelConfigurationPtr and TemplatePanelConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePanelConfigurationPtrInput` via:
//
//	        TemplatePanelConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePanelConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePanelConfigurationPtrOutput() TemplatePanelConfigurationPtrOutput
	ToTemplatePanelConfigurationPtrOutputWithContext(context.Context) TemplatePanelConfigurationPtrOutput
}

type templatePanelConfigurationPtrType TemplatePanelConfigurationArgs

func TemplatePanelConfigurationPtr(v *TemplatePanelConfigurationArgs) TemplatePanelConfigurationPtrInput {
	return (*templatePanelConfigurationPtrType)(v)
}

func (*templatePanelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePanelConfiguration)(nil)).Elem()
}

func (i *templatePanelConfigurationPtrType) ToTemplatePanelConfigurationPtrOutput() TemplatePanelConfigurationPtrOutput {
	return i.ToTemplatePanelConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePanelConfigurationPtrType) ToTemplatePanelConfigurationPtrOutputWithContext(ctx context.Context) TemplatePanelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelConfigurationPtrOutput)
}

type TemplatePanelConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePanelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelConfiguration)(nil)).Elem()
}

func (o TemplatePanelConfigurationOutput) ToTemplatePanelConfigurationOutput() TemplatePanelConfigurationOutput {
	return o
}

func (o TemplatePanelConfigurationOutput) ToTemplatePanelConfigurationOutputWithContext(ctx context.Context) TemplatePanelConfigurationOutput {
	return o
}

func (o TemplatePanelConfigurationOutput) ToTemplatePanelConfigurationPtrOutput() TemplatePanelConfigurationPtrOutput {
	return o.ToTemplatePanelConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePanelConfigurationOutput) ToTemplatePanelConfigurationPtrOutputWithContext(ctx context.Context) TemplatePanelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePanelConfiguration) *TemplatePanelConfiguration {
		return &v
	}).(TemplatePanelConfigurationPtrOutput)
}

func (o TemplatePanelConfigurationOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationOutput) BackgroundVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *TemplateVisibility { return v.BackgroundVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplatePanelConfigurationOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *string { return v.BorderColor }).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationOutput) BorderStyle() TemplatePanelBorderStylePtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *TemplatePanelBorderStyle { return v.BorderStyle }).(TemplatePanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePanelConfigurationOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *string { return v.BorderThickness }).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationOutput) BorderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *TemplateVisibility { return v.BorderVisibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePanelConfigurationOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *string { return v.GutterSpacing }).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationOutput) GutterVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *TemplateVisibility { return v.GutterVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplatePanelConfigurationOutput) Title() TemplatePanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePanelConfiguration) *TemplatePanelTitleOptions { return v.Title }).(TemplatePanelTitleOptionsPtrOutput)
}

type TemplatePanelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePanelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePanelConfiguration)(nil)).Elem()
}

func (o TemplatePanelConfigurationPtrOutput) ToTemplatePanelConfigurationPtrOutput() TemplatePanelConfigurationPtrOutput {
	return o
}

func (o TemplatePanelConfigurationPtrOutput) ToTemplatePanelConfigurationPtrOutputWithContext(ctx context.Context) TemplatePanelConfigurationPtrOutput {
	return o
}

func (o TemplatePanelConfigurationPtrOutput) Elem() TemplatePanelConfigurationOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) TemplatePanelConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePanelConfiguration
		return ret
	}).(TemplatePanelConfigurationOutput)
}

func (o TemplatePanelConfigurationPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) BackgroundVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.BackgroundVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) BorderColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) BorderStyle() TemplatePanelBorderStylePtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *TemplatePanelBorderStyle {
		if v == nil {
			return nil
		}
		return v.BorderStyle
	}).(TemplatePanelBorderStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePanelConfigurationPtrOutput) BorderThickness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BorderThickness
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) BorderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.BorderVisibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePanelConfigurationPtrOutput) GutterSpacing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GutterSpacing
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) GutterVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.GutterVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePanelConfigurationPtrOutput) Title() TemplatePanelTitleOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePanelConfiguration) *TemplatePanelTitleOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplatePanelTitleOptionsPtrOutput)
}

type TemplatePanelTitleOptions struct {
	FontConfiguration       *TemplateFontConfiguration       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment *TemplateHorizontalTextAlignment `pulumi:"horizontalTextAlignment"`
	Visibility              *TemplateVisibility              `pulumi:"visibility"`
}

// TemplatePanelTitleOptionsInput is an input type that accepts TemplatePanelTitleOptionsArgs and TemplatePanelTitleOptionsOutput values.
// You can construct a concrete instance of `TemplatePanelTitleOptionsInput` via:
//
//	TemplatePanelTitleOptionsArgs{...}
type TemplatePanelTitleOptionsInput interface {
	pulumi.Input

	ToTemplatePanelTitleOptionsOutput() TemplatePanelTitleOptionsOutput
	ToTemplatePanelTitleOptionsOutputWithContext(context.Context) TemplatePanelTitleOptionsOutput
}

type TemplatePanelTitleOptionsArgs struct {
	FontConfiguration       TemplateFontConfigurationPtrInput       `pulumi:"fontConfiguration"`
	HorizontalTextAlignment TemplateHorizontalTextAlignmentPtrInput `pulumi:"horizontalTextAlignment"`
	Visibility              TemplateVisibilityPtrInput              `pulumi:"visibility"`
}

func (TemplatePanelTitleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelTitleOptions)(nil)).Elem()
}

func (i TemplatePanelTitleOptionsArgs) ToTemplatePanelTitleOptionsOutput() TemplatePanelTitleOptionsOutput {
	return i.ToTemplatePanelTitleOptionsOutputWithContext(context.Background())
}

func (i TemplatePanelTitleOptionsArgs) ToTemplatePanelTitleOptionsOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelTitleOptionsOutput)
}

func (i TemplatePanelTitleOptionsArgs) ToTemplatePanelTitleOptionsPtrOutput() TemplatePanelTitleOptionsPtrOutput {
	return i.ToTemplatePanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePanelTitleOptionsArgs) ToTemplatePanelTitleOptionsPtrOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelTitleOptionsOutput).ToTemplatePanelTitleOptionsPtrOutputWithContext(ctx)
}

// TemplatePanelTitleOptionsPtrInput is an input type that accepts TemplatePanelTitleOptionsArgs, TemplatePanelTitleOptionsPtr and TemplatePanelTitleOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePanelTitleOptionsPtrInput` via:
//
//	        TemplatePanelTitleOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePanelTitleOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePanelTitleOptionsPtrOutput() TemplatePanelTitleOptionsPtrOutput
	ToTemplatePanelTitleOptionsPtrOutputWithContext(context.Context) TemplatePanelTitleOptionsPtrOutput
}

type templatePanelTitleOptionsPtrType TemplatePanelTitleOptionsArgs

func TemplatePanelTitleOptionsPtr(v *TemplatePanelTitleOptionsArgs) TemplatePanelTitleOptionsPtrInput {
	return (*templatePanelTitleOptionsPtrType)(v)
}

func (*templatePanelTitleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePanelTitleOptions)(nil)).Elem()
}

func (i *templatePanelTitleOptionsPtrType) ToTemplatePanelTitleOptionsPtrOutput() TemplatePanelTitleOptionsPtrOutput {
	return i.ToTemplatePanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePanelTitleOptionsPtrType) ToTemplatePanelTitleOptionsPtrOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePanelTitleOptionsPtrOutput)
}

type TemplatePanelTitleOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePanelTitleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePanelTitleOptions)(nil)).Elem()
}

func (o TemplatePanelTitleOptionsOutput) ToTemplatePanelTitleOptionsOutput() TemplatePanelTitleOptionsOutput {
	return o
}

func (o TemplatePanelTitleOptionsOutput) ToTemplatePanelTitleOptionsOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsOutput {
	return o
}

func (o TemplatePanelTitleOptionsOutput) ToTemplatePanelTitleOptionsPtrOutput() TemplatePanelTitleOptionsPtrOutput {
	return o.ToTemplatePanelTitleOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePanelTitleOptionsOutput) ToTemplatePanelTitleOptionsPtrOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePanelTitleOptions) *TemplatePanelTitleOptions {
		return &v
	}).(TemplatePanelTitleOptionsPtrOutput)
}

func (o TemplatePanelTitleOptionsOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePanelTitleOptions) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplatePanelTitleOptionsOutput) HorizontalTextAlignment() TemplateHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v TemplatePanelTitleOptions) *TemplateHorizontalTextAlignment { return v.HorizontalTextAlignment }).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (o TemplatePanelTitleOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePanelTitleOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplatePanelTitleOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePanelTitleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePanelTitleOptions)(nil)).Elem()
}

func (o TemplatePanelTitleOptionsPtrOutput) ToTemplatePanelTitleOptionsPtrOutput() TemplatePanelTitleOptionsPtrOutput {
	return o
}

func (o TemplatePanelTitleOptionsPtrOutput) ToTemplatePanelTitleOptionsPtrOutputWithContext(ctx context.Context) TemplatePanelTitleOptionsPtrOutput {
	return o
}

func (o TemplatePanelTitleOptionsPtrOutput) Elem() TemplatePanelTitleOptionsOutput {
	return o.ApplyT(func(v *TemplatePanelTitleOptions) TemplatePanelTitleOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePanelTitleOptions
		return ret
	}).(TemplatePanelTitleOptionsOutput)
}

func (o TemplatePanelTitleOptionsPtrOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePanelTitleOptions) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplatePanelTitleOptionsPtrOutput) HorizontalTextAlignment() TemplateHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *TemplatePanelTitleOptions) *TemplateHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (o TemplatePanelTitleOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePanelTitleOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateParameterControl struct {
	DateTimePicker *TemplateParameterDateTimePickerControl `pulumi:"dateTimePicker"`
	Dropdown       *TemplateParameterDropDownControl       `pulumi:"dropdown"`
	List           *TemplateParameterListControl           `pulumi:"list"`
	Slider         *TemplateParameterSliderControl         `pulumi:"slider"`
	TextArea       *TemplateParameterTextAreaControl       `pulumi:"textArea"`
	TextField      *TemplateParameterTextFieldControl      `pulumi:"textField"`
}

// TemplateParameterControlInput is an input type that accepts TemplateParameterControlArgs and TemplateParameterControlOutput values.
// You can construct a concrete instance of `TemplateParameterControlInput` via:
//
//	TemplateParameterControlArgs{...}
type TemplateParameterControlInput interface {
	pulumi.Input

	ToTemplateParameterControlOutput() TemplateParameterControlOutput
	ToTemplateParameterControlOutputWithContext(context.Context) TemplateParameterControlOutput
}

type TemplateParameterControlArgs struct {
	DateTimePicker TemplateParameterDateTimePickerControlPtrInput `pulumi:"dateTimePicker"`
	Dropdown       TemplateParameterDropDownControlPtrInput       `pulumi:"dropdown"`
	List           TemplateParameterListControlPtrInput           `pulumi:"list"`
	Slider         TemplateParameterSliderControlPtrInput         `pulumi:"slider"`
	TextArea       TemplateParameterTextAreaControlPtrInput       `pulumi:"textArea"`
	TextField      TemplateParameterTextFieldControlPtrInput      `pulumi:"textField"`
}

func (TemplateParameterControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterControl)(nil)).Elem()
}

func (i TemplateParameterControlArgs) ToTemplateParameterControlOutput() TemplateParameterControlOutput {
	return i.ToTemplateParameterControlOutputWithContext(context.Background())
}

func (i TemplateParameterControlArgs) ToTemplateParameterControlOutputWithContext(ctx context.Context) TemplateParameterControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterControlOutput)
}

// TemplateParameterControlArrayInput is an input type that accepts TemplateParameterControlArray and TemplateParameterControlArrayOutput values.
// You can construct a concrete instance of `TemplateParameterControlArrayInput` via:
//
//	TemplateParameterControlArray{ TemplateParameterControlArgs{...} }
type TemplateParameterControlArrayInput interface {
	pulumi.Input

	ToTemplateParameterControlArrayOutput() TemplateParameterControlArrayOutput
	ToTemplateParameterControlArrayOutputWithContext(context.Context) TemplateParameterControlArrayOutput
}

type TemplateParameterControlArray []TemplateParameterControlInput

func (TemplateParameterControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterControl)(nil)).Elem()
}

func (i TemplateParameterControlArray) ToTemplateParameterControlArrayOutput() TemplateParameterControlArrayOutput {
	return i.ToTemplateParameterControlArrayOutputWithContext(context.Background())
}

func (i TemplateParameterControlArray) ToTemplateParameterControlArrayOutputWithContext(ctx context.Context) TemplateParameterControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterControlArrayOutput)
}

type TemplateParameterControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterControl)(nil)).Elem()
}

func (o TemplateParameterControlOutput) ToTemplateParameterControlOutput() TemplateParameterControlOutput {
	return o
}

func (o TemplateParameterControlOutput) ToTemplateParameterControlOutputWithContext(ctx context.Context) TemplateParameterControlOutput {
	return o
}

func (o TemplateParameterControlOutput) DateTimePicker() TemplateParameterDateTimePickerControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterDateTimePickerControl { return v.DateTimePicker }).(TemplateParameterDateTimePickerControlPtrOutput)
}

func (o TemplateParameterControlOutput) Dropdown() TemplateParameterDropDownControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterDropDownControl { return v.Dropdown }).(TemplateParameterDropDownControlPtrOutput)
}

func (o TemplateParameterControlOutput) List() TemplateParameterListControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterListControl { return v.List }).(TemplateParameterListControlPtrOutput)
}

func (o TemplateParameterControlOutput) Slider() TemplateParameterSliderControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterSliderControl { return v.Slider }).(TemplateParameterSliderControlPtrOutput)
}

func (o TemplateParameterControlOutput) TextArea() TemplateParameterTextAreaControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterTextAreaControl { return v.TextArea }).(TemplateParameterTextAreaControlPtrOutput)
}

func (o TemplateParameterControlOutput) TextField() TemplateParameterTextFieldControlPtrOutput {
	return o.ApplyT(func(v TemplateParameterControl) *TemplateParameterTextFieldControl { return v.TextField }).(TemplateParameterTextFieldControlPtrOutput)
}

type TemplateParameterControlArrayOutput struct{ *pulumi.OutputState }

func (TemplateParameterControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterControl)(nil)).Elem()
}

func (o TemplateParameterControlArrayOutput) ToTemplateParameterControlArrayOutput() TemplateParameterControlArrayOutput {
	return o
}

func (o TemplateParameterControlArrayOutput) ToTemplateParameterControlArrayOutputWithContext(ctx context.Context) TemplateParameterControlArrayOutput {
	return o
}

func (o TemplateParameterControlArrayOutput) Index(i pulumi.IntInput) TemplateParameterControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateParameterControl {
		return vs[0].([]TemplateParameterControl)[vs[1].(int)]
	}).(TemplateParameterControlOutput)
}

type TemplateParameterDateTimePickerControl struct {
	DisplayOptions      *TemplateDateTimePickerControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                       `pulumi:"parameterControlId"`
	SourceParameterName string                                       `pulumi:"sourceParameterName"`
	Title               string                                       `pulumi:"title"`
}

// TemplateParameterDateTimePickerControlInput is an input type that accepts TemplateParameterDateTimePickerControlArgs and TemplateParameterDateTimePickerControlOutput values.
// You can construct a concrete instance of `TemplateParameterDateTimePickerControlInput` via:
//
//	TemplateParameterDateTimePickerControlArgs{...}
type TemplateParameterDateTimePickerControlInput interface {
	pulumi.Input

	ToTemplateParameterDateTimePickerControlOutput() TemplateParameterDateTimePickerControlOutput
	ToTemplateParameterDateTimePickerControlOutputWithContext(context.Context) TemplateParameterDateTimePickerControlOutput
}

type TemplateParameterDateTimePickerControlArgs struct {
	DisplayOptions      TemplateDateTimePickerControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                                  `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                                  `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                                  `pulumi:"title"`
}

func (TemplateParameterDateTimePickerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDateTimePickerControl)(nil)).Elem()
}

func (i TemplateParameterDateTimePickerControlArgs) ToTemplateParameterDateTimePickerControlOutput() TemplateParameterDateTimePickerControlOutput {
	return i.ToTemplateParameterDateTimePickerControlOutputWithContext(context.Background())
}

func (i TemplateParameterDateTimePickerControlArgs) ToTemplateParameterDateTimePickerControlOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDateTimePickerControlOutput)
}

func (i TemplateParameterDateTimePickerControlArgs) ToTemplateParameterDateTimePickerControlPtrOutput() TemplateParameterDateTimePickerControlPtrOutput {
	return i.ToTemplateParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterDateTimePickerControlArgs) ToTemplateParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDateTimePickerControlOutput).ToTemplateParameterDateTimePickerControlPtrOutputWithContext(ctx)
}

// TemplateParameterDateTimePickerControlPtrInput is an input type that accepts TemplateParameterDateTimePickerControlArgs, TemplateParameterDateTimePickerControlPtr and TemplateParameterDateTimePickerControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterDateTimePickerControlPtrInput` via:
//
//	        TemplateParameterDateTimePickerControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterDateTimePickerControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterDateTimePickerControlPtrOutput() TemplateParameterDateTimePickerControlPtrOutput
	ToTemplateParameterDateTimePickerControlPtrOutputWithContext(context.Context) TemplateParameterDateTimePickerControlPtrOutput
}

type templateParameterDateTimePickerControlPtrType TemplateParameterDateTimePickerControlArgs

func TemplateParameterDateTimePickerControlPtr(v *TemplateParameterDateTimePickerControlArgs) TemplateParameterDateTimePickerControlPtrInput {
	return (*templateParameterDateTimePickerControlPtrType)(v)
}

func (*templateParameterDateTimePickerControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterDateTimePickerControl)(nil)).Elem()
}

func (i *templateParameterDateTimePickerControlPtrType) ToTemplateParameterDateTimePickerControlPtrOutput() TemplateParameterDateTimePickerControlPtrOutput {
	return i.ToTemplateParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterDateTimePickerControlPtrType) ToTemplateParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDateTimePickerControlPtrOutput)
}

type TemplateParameterDateTimePickerControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterDateTimePickerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDateTimePickerControl)(nil)).Elem()
}

func (o TemplateParameterDateTimePickerControlOutput) ToTemplateParameterDateTimePickerControlOutput() TemplateParameterDateTimePickerControlOutput {
	return o
}

func (o TemplateParameterDateTimePickerControlOutput) ToTemplateParameterDateTimePickerControlOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlOutput {
	return o
}

func (o TemplateParameterDateTimePickerControlOutput) ToTemplateParameterDateTimePickerControlPtrOutput() TemplateParameterDateTimePickerControlPtrOutput {
	return o.ToTemplateParameterDateTimePickerControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterDateTimePickerControlOutput) ToTemplateParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterDateTimePickerControl) *TemplateParameterDateTimePickerControl {
		return &v
	}).(TemplateParameterDateTimePickerControlPtrOutput)
}

func (o TemplateParameterDateTimePickerControlOutput) DisplayOptions() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterDateTimePickerControl) *TemplateDateTimePickerControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterDateTimePickerControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDateTimePickerControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterDateTimePickerControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDateTimePickerControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterDateTimePickerControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDateTimePickerControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateParameterDateTimePickerControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterDateTimePickerControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterDateTimePickerControl)(nil)).Elem()
}

func (o TemplateParameterDateTimePickerControlPtrOutput) ToTemplateParameterDateTimePickerControlPtrOutput() TemplateParameterDateTimePickerControlPtrOutput {
	return o
}

func (o TemplateParameterDateTimePickerControlPtrOutput) ToTemplateParameterDateTimePickerControlPtrOutputWithContext(ctx context.Context) TemplateParameterDateTimePickerControlPtrOutput {
	return o
}

func (o TemplateParameterDateTimePickerControlPtrOutput) Elem() TemplateParameterDateTimePickerControlOutput {
	return o.ApplyT(func(v *TemplateParameterDateTimePickerControl) TemplateParameterDateTimePickerControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterDateTimePickerControl
		return ret
	}).(TemplateParameterDateTimePickerControlOutput)
}

func (o TemplateParameterDateTimePickerControlPtrOutput) DisplayOptions() TemplateDateTimePickerControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDateTimePickerControl) *TemplateDateTimePickerControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateDateTimePickerControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterDateTimePickerControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterDateTimePickerControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterDateTimePickerControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDateTimePickerControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateParameterDeclaration struct {
	DateTimeParameterDeclaration *TemplateDateTimeParameterDeclaration `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  *TemplateDecimalParameterDeclaration  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  *TemplateIntegerParameterDeclaration  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   *TemplateStringParameterDeclaration   `pulumi:"stringParameterDeclaration"`
}

// TemplateParameterDeclarationInput is an input type that accepts TemplateParameterDeclarationArgs and TemplateParameterDeclarationOutput values.
// You can construct a concrete instance of `TemplateParameterDeclarationInput` via:
//
//	TemplateParameterDeclarationArgs{...}
type TemplateParameterDeclarationInput interface {
	pulumi.Input

	ToTemplateParameterDeclarationOutput() TemplateParameterDeclarationOutput
	ToTemplateParameterDeclarationOutputWithContext(context.Context) TemplateParameterDeclarationOutput
}

type TemplateParameterDeclarationArgs struct {
	DateTimeParameterDeclaration TemplateDateTimeParameterDeclarationPtrInput `pulumi:"dateTimeParameterDeclaration"`
	DecimalParameterDeclaration  TemplateDecimalParameterDeclarationPtrInput  `pulumi:"decimalParameterDeclaration"`
	IntegerParameterDeclaration  TemplateIntegerParameterDeclarationPtrInput  `pulumi:"integerParameterDeclaration"`
	StringParameterDeclaration   TemplateStringParameterDeclarationPtrInput   `pulumi:"stringParameterDeclaration"`
}

func (TemplateParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDeclaration)(nil)).Elem()
}

func (i TemplateParameterDeclarationArgs) ToTemplateParameterDeclarationOutput() TemplateParameterDeclarationOutput {
	return i.ToTemplateParameterDeclarationOutputWithContext(context.Background())
}

func (i TemplateParameterDeclarationArgs) ToTemplateParameterDeclarationOutputWithContext(ctx context.Context) TemplateParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDeclarationOutput)
}

// TemplateParameterDeclarationArrayInput is an input type that accepts TemplateParameterDeclarationArray and TemplateParameterDeclarationArrayOutput values.
// You can construct a concrete instance of `TemplateParameterDeclarationArrayInput` via:
//
//	TemplateParameterDeclarationArray{ TemplateParameterDeclarationArgs{...} }
type TemplateParameterDeclarationArrayInput interface {
	pulumi.Input

	ToTemplateParameterDeclarationArrayOutput() TemplateParameterDeclarationArrayOutput
	ToTemplateParameterDeclarationArrayOutputWithContext(context.Context) TemplateParameterDeclarationArrayOutput
}

type TemplateParameterDeclarationArray []TemplateParameterDeclarationInput

func (TemplateParameterDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterDeclaration)(nil)).Elem()
}

func (i TemplateParameterDeclarationArray) ToTemplateParameterDeclarationArrayOutput() TemplateParameterDeclarationArrayOutput {
	return i.ToTemplateParameterDeclarationArrayOutputWithContext(context.Background())
}

func (i TemplateParameterDeclarationArray) ToTemplateParameterDeclarationArrayOutputWithContext(ctx context.Context) TemplateParameterDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDeclarationArrayOutput)
}

type TemplateParameterDeclarationOutput struct{ *pulumi.OutputState }

func (TemplateParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDeclaration)(nil)).Elem()
}

func (o TemplateParameterDeclarationOutput) ToTemplateParameterDeclarationOutput() TemplateParameterDeclarationOutput {
	return o
}

func (o TemplateParameterDeclarationOutput) ToTemplateParameterDeclarationOutputWithContext(ctx context.Context) TemplateParameterDeclarationOutput {
	return o
}

func (o TemplateParameterDeclarationOutput) DateTimeParameterDeclaration() TemplateDateTimeParameterDeclarationPtrOutput {
	return o.ApplyT(func(v TemplateParameterDeclaration) *TemplateDateTimeParameterDeclaration {
		return v.DateTimeParameterDeclaration
	}).(TemplateDateTimeParameterDeclarationPtrOutput)
}

func (o TemplateParameterDeclarationOutput) DecimalParameterDeclaration() TemplateDecimalParameterDeclarationPtrOutput {
	return o.ApplyT(func(v TemplateParameterDeclaration) *TemplateDecimalParameterDeclaration {
		return v.DecimalParameterDeclaration
	}).(TemplateDecimalParameterDeclarationPtrOutput)
}

func (o TemplateParameterDeclarationOutput) IntegerParameterDeclaration() TemplateIntegerParameterDeclarationPtrOutput {
	return o.ApplyT(func(v TemplateParameterDeclaration) *TemplateIntegerParameterDeclaration {
		return v.IntegerParameterDeclaration
	}).(TemplateIntegerParameterDeclarationPtrOutput)
}

func (o TemplateParameterDeclarationOutput) StringParameterDeclaration() TemplateStringParameterDeclarationPtrOutput {
	return o.ApplyT(func(v TemplateParameterDeclaration) *TemplateStringParameterDeclaration {
		return v.StringParameterDeclaration
	}).(TemplateStringParameterDeclarationPtrOutput)
}

type TemplateParameterDeclarationArrayOutput struct{ *pulumi.OutputState }

func (TemplateParameterDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateParameterDeclaration)(nil)).Elem()
}

func (o TemplateParameterDeclarationArrayOutput) ToTemplateParameterDeclarationArrayOutput() TemplateParameterDeclarationArrayOutput {
	return o
}

func (o TemplateParameterDeclarationArrayOutput) ToTemplateParameterDeclarationArrayOutputWithContext(ctx context.Context) TemplateParameterDeclarationArrayOutput {
	return o
}

func (o TemplateParameterDeclarationArrayOutput) Index(i pulumi.IntInput) TemplateParameterDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateParameterDeclaration {
		return vs[0].([]TemplateParameterDeclaration)[vs[1].(int)]
	}).(TemplateParameterDeclarationOutput)
}

type TemplateParameterDropDownControl struct {
	CascadingControlConfiguration *TemplateCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *TemplateDropDownControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId            string                                 `pulumi:"parameterControlId"`
	SelectableValues              *TemplateParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                 `pulumi:"sourceParameterName"`
	Title                         string                                 `pulumi:"title"`
	Type                          *TemplateSheetControlListType          `pulumi:"type"`
}

// TemplateParameterDropDownControlInput is an input type that accepts TemplateParameterDropDownControlArgs and TemplateParameterDropDownControlOutput values.
// You can construct a concrete instance of `TemplateParameterDropDownControlInput` via:
//
//	TemplateParameterDropDownControlArgs{...}
type TemplateParameterDropDownControlInput interface {
	pulumi.Input

	ToTemplateParameterDropDownControlOutput() TemplateParameterDropDownControlOutput
	ToTemplateParameterDropDownControlOutputWithContext(context.Context) TemplateParameterDropDownControlOutput
}

type TemplateParameterDropDownControlArgs struct {
	CascadingControlConfiguration TemplateCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                TemplateDropDownControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                            `pulumi:"parameterControlId"`
	SelectableValues              TemplateParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          TemplateSheetControlListTypePtrInput          `pulumi:"type"`
}

func (TemplateParameterDropDownControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDropDownControl)(nil)).Elem()
}

func (i TemplateParameterDropDownControlArgs) ToTemplateParameterDropDownControlOutput() TemplateParameterDropDownControlOutput {
	return i.ToTemplateParameterDropDownControlOutputWithContext(context.Background())
}

func (i TemplateParameterDropDownControlArgs) ToTemplateParameterDropDownControlOutputWithContext(ctx context.Context) TemplateParameterDropDownControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDropDownControlOutput)
}

func (i TemplateParameterDropDownControlArgs) ToTemplateParameterDropDownControlPtrOutput() TemplateParameterDropDownControlPtrOutput {
	return i.ToTemplateParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterDropDownControlArgs) ToTemplateParameterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDropDownControlOutput).ToTemplateParameterDropDownControlPtrOutputWithContext(ctx)
}

// TemplateParameterDropDownControlPtrInput is an input type that accepts TemplateParameterDropDownControlArgs, TemplateParameterDropDownControlPtr and TemplateParameterDropDownControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterDropDownControlPtrInput` via:
//
//	        TemplateParameterDropDownControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterDropDownControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterDropDownControlPtrOutput() TemplateParameterDropDownControlPtrOutput
	ToTemplateParameterDropDownControlPtrOutputWithContext(context.Context) TemplateParameterDropDownControlPtrOutput
}

type templateParameterDropDownControlPtrType TemplateParameterDropDownControlArgs

func TemplateParameterDropDownControlPtr(v *TemplateParameterDropDownControlArgs) TemplateParameterDropDownControlPtrInput {
	return (*templateParameterDropDownControlPtrType)(v)
}

func (*templateParameterDropDownControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterDropDownControl)(nil)).Elem()
}

func (i *templateParameterDropDownControlPtrType) ToTemplateParameterDropDownControlPtrOutput() TemplateParameterDropDownControlPtrOutput {
	return i.ToTemplateParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterDropDownControlPtrType) ToTemplateParameterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateParameterDropDownControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterDropDownControlPtrOutput)
}

type TemplateParameterDropDownControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterDropDownControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterDropDownControl)(nil)).Elem()
}

func (o TemplateParameterDropDownControlOutput) ToTemplateParameterDropDownControlOutput() TemplateParameterDropDownControlOutput {
	return o
}

func (o TemplateParameterDropDownControlOutput) ToTemplateParameterDropDownControlOutputWithContext(ctx context.Context) TemplateParameterDropDownControlOutput {
	return o
}

func (o TemplateParameterDropDownControlOutput) ToTemplateParameterDropDownControlPtrOutput() TemplateParameterDropDownControlPtrOutput {
	return o.ToTemplateParameterDropDownControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterDropDownControlOutput) ToTemplateParameterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateParameterDropDownControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterDropDownControl) *TemplateParameterDropDownControl {
		return &v
	}).(TemplateParameterDropDownControlPtrOutput)
}

func (o TemplateParameterDropDownControlOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) *TemplateCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateParameterDropDownControlOutput) DisplayOptions() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) *TemplateDropDownControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterDropDownControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterDropDownControlOutput) SelectableValues() TemplateParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) *TemplateParameterSelectableValues { return v.SelectableValues }).(TemplateParameterSelectableValuesPtrOutput)
}

func (o TemplateParameterDropDownControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterDropDownControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateParameterDropDownControlOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v TemplateParameterDropDownControl) *TemplateSheetControlListType { return v.Type }).(TemplateSheetControlListTypePtrOutput)
}

type TemplateParameterDropDownControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterDropDownControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterDropDownControl)(nil)).Elem()
}

func (o TemplateParameterDropDownControlPtrOutput) ToTemplateParameterDropDownControlPtrOutput() TemplateParameterDropDownControlPtrOutput {
	return o
}

func (o TemplateParameterDropDownControlPtrOutput) ToTemplateParameterDropDownControlPtrOutputWithContext(ctx context.Context) TemplateParameterDropDownControlPtrOutput {
	return o
}

func (o TemplateParameterDropDownControlPtrOutput) Elem() TemplateParameterDropDownControlOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) TemplateParameterDropDownControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterDropDownControl
		return ret
	}).(TemplateParameterDropDownControlOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *TemplateCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) DisplayOptions() TemplateDropDownControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *TemplateDropDownControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateDropDownControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) SelectableValues() TemplateParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *TemplateParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(TemplateParameterSelectableValuesPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterDropDownControlPtrOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *TemplateParameterDropDownControl) *TemplateSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlListTypePtrOutput)
}

type TemplateParameterListControl struct {
	CascadingControlConfiguration *TemplateCascadingControlConfiguration `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                *TemplateListControlDisplayOptions     `pulumi:"displayOptions"`
	ParameterControlId            string                                 `pulumi:"parameterControlId"`
	SelectableValues              *TemplateParameterSelectableValues     `pulumi:"selectableValues"`
	SourceParameterName           string                                 `pulumi:"sourceParameterName"`
	Title                         string                                 `pulumi:"title"`
	Type                          *TemplateSheetControlListType          `pulumi:"type"`
}

// TemplateParameterListControlInput is an input type that accepts TemplateParameterListControlArgs and TemplateParameterListControlOutput values.
// You can construct a concrete instance of `TemplateParameterListControlInput` via:
//
//	TemplateParameterListControlArgs{...}
type TemplateParameterListControlInput interface {
	pulumi.Input

	ToTemplateParameterListControlOutput() TemplateParameterListControlOutput
	ToTemplateParameterListControlOutputWithContext(context.Context) TemplateParameterListControlOutput
}

type TemplateParameterListControlArgs struct {
	CascadingControlConfiguration TemplateCascadingControlConfigurationPtrInput `pulumi:"cascadingControlConfiguration"`
	DisplayOptions                TemplateListControlDisplayOptionsPtrInput     `pulumi:"displayOptions"`
	ParameterControlId            pulumi.StringInput                            `pulumi:"parameterControlId"`
	SelectableValues              TemplateParameterSelectableValuesPtrInput     `pulumi:"selectableValues"`
	SourceParameterName           pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title                         pulumi.StringInput                            `pulumi:"title"`
	Type                          TemplateSheetControlListTypePtrInput          `pulumi:"type"`
}

func (TemplateParameterListControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterListControl)(nil)).Elem()
}

func (i TemplateParameterListControlArgs) ToTemplateParameterListControlOutput() TemplateParameterListControlOutput {
	return i.ToTemplateParameterListControlOutputWithContext(context.Background())
}

func (i TemplateParameterListControlArgs) ToTemplateParameterListControlOutputWithContext(ctx context.Context) TemplateParameterListControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterListControlOutput)
}

func (i TemplateParameterListControlArgs) ToTemplateParameterListControlPtrOutput() TemplateParameterListControlPtrOutput {
	return i.ToTemplateParameterListControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterListControlArgs) ToTemplateParameterListControlPtrOutputWithContext(ctx context.Context) TemplateParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterListControlOutput).ToTemplateParameterListControlPtrOutputWithContext(ctx)
}

// TemplateParameterListControlPtrInput is an input type that accepts TemplateParameterListControlArgs, TemplateParameterListControlPtr and TemplateParameterListControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterListControlPtrInput` via:
//
//	        TemplateParameterListControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterListControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterListControlPtrOutput() TemplateParameterListControlPtrOutput
	ToTemplateParameterListControlPtrOutputWithContext(context.Context) TemplateParameterListControlPtrOutput
}

type templateParameterListControlPtrType TemplateParameterListControlArgs

func TemplateParameterListControlPtr(v *TemplateParameterListControlArgs) TemplateParameterListControlPtrInput {
	return (*templateParameterListControlPtrType)(v)
}

func (*templateParameterListControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterListControl)(nil)).Elem()
}

func (i *templateParameterListControlPtrType) ToTemplateParameterListControlPtrOutput() TemplateParameterListControlPtrOutput {
	return i.ToTemplateParameterListControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterListControlPtrType) ToTemplateParameterListControlPtrOutputWithContext(ctx context.Context) TemplateParameterListControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterListControlPtrOutput)
}

type TemplateParameterListControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterListControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterListControl)(nil)).Elem()
}

func (o TemplateParameterListControlOutput) ToTemplateParameterListControlOutput() TemplateParameterListControlOutput {
	return o
}

func (o TemplateParameterListControlOutput) ToTemplateParameterListControlOutputWithContext(ctx context.Context) TemplateParameterListControlOutput {
	return o
}

func (o TemplateParameterListControlOutput) ToTemplateParameterListControlPtrOutput() TemplateParameterListControlPtrOutput {
	return o.ToTemplateParameterListControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterListControlOutput) ToTemplateParameterListControlPtrOutputWithContext(ctx context.Context) TemplateParameterListControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterListControl) *TemplateParameterListControl {
		return &v
	}).(TemplateParameterListControlPtrOutput)
}

func (o TemplateParameterListControlOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateParameterListControl) *TemplateCascadingControlConfiguration {
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateParameterListControlOutput) DisplayOptions() TemplateListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterListControl) *TemplateListControlDisplayOptions { return v.DisplayOptions }).(TemplateListControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterListControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterListControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterListControlOutput) SelectableValues() TemplateParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v TemplateParameterListControl) *TemplateParameterSelectableValues { return v.SelectableValues }).(TemplateParameterSelectableValuesPtrOutput)
}

func (o TemplateParameterListControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterListControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterListControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterListControl) string { return v.Title }).(pulumi.StringOutput)
}

func (o TemplateParameterListControlOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v TemplateParameterListControl) *TemplateSheetControlListType { return v.Type }).(TemplateSheetControlListTypePtrOutput)
}

type TemplateParameterListControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterListControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterListControl)(nil)).Elem()
}

func (o TemplateParameterListControlPtrOutput) ToTemplateParameterListControlPtrOutput() TemplateParameterListControlPtrOutput {
	return o
}

func (o TemplateParameterListControlPtrOutput) ToTemplateParameterListControlPtrOutputWithContext(ctx context.Context) TemplateParameterListControlPtrOutput {
	return o
}

func (o TemplateParameterListControlPtrOutput) Elem() TemplateParameterListControlOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) TemplateParameterListControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterListControl
		return ret
	}).(TemplateParameterListControlOutput)
}

func (o TemplateParameterListControlPtrOutput) CascadingControlConfiguration() TemplateCascadingControlConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *TemplateCascadingControlConfiguration {
		if v == nil {
			return nil
		}
		return v.CascadingControlConfiguration
	}).(TemplateCascadingControlConfigurationPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) DisplayOptions() TemplateListControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *TemplateListControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateListControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) SelectableValues() TemplateParameterSelectableValuesPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *TemplateParameterSelectableValues {
		if v == nil {
			return nil
		}
		return v.SelectableValues
	}).(TemplateParameterSelectableValuesPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterListControlPtrOutput) Type() TemplateSheetControlListTypePtrOutput {
	return o.ApplyT(func(v *TemplateParameterListControl) *TemplateSheetControlListType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(TemplateSheetControlListTypePtrOutput)
}

type TemplateParameterSelectableValues struct {
	LinkToDataSetColumn *TemplateColumnIdentifier `pulumi:"linkToDataSetColumn"`
	Values              []string                  `pulumi:"values"`
}

// TemplateParameterSelectableValuesInput is an input type that accepts TemplateParameterSelectableValuesArgs and TemplateParameterSelectableValuesOutput values.
// You can construct a concrete instance of `TemplateParameterSelectableValuesInput` via:
//
//	TemplateParameterSelectableValuesArgs{...}
type TemplateParameterSelectableValuesInput interface {
	pulumi.Input

	ToTemplateParameterSelectableValuesOutput() TemplateParameterSelectableValuesOutput
	ToTemplateParameterSelectableValuesOutputWithContext(context.Context) TemplateParameterSelectableValuesOutput
}

type TemplateParameterSelectableValuesArgs struct {
	LinkToDataSetColumn TemplateColumnIdentifierPtrInput `pulumi:"linkToDataSetColumn"`
	Values              pulumi.StringArrayInput          `pulumi:"values"`
}

func (TemplateParameterSelectableValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterSelectableValues)(nil)).Elem()
}

func (i TemplateParameterSelectableValuesArgs) ToTemplateParameterSelectableValuesOutput() TemplateParameterSelectableValuesOutput {
	return i.ToTemplateParameterSelectableValuesOutputWithContext(context.Background())
}

func (i TemplateParameterSelectableValuesArgs) ToTemplateParameterSelectableValuesOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSelectableValuesOutput)
}

func (i TemplateParameterSelectableValuesArgs) ToTemplateParameterSelectableValuesPtrOutput() TemplateParameterSelectableValuesPtrOutput {
	return i.ToTemplateParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i TemplateParameterSelectableValuesArgs) ToTemplateParameterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSelectableValuesOutput).ToTemplateParameterSelectableValuesPtrOutputWithContext(ctx)
}

// TemplateParameterSelectableValuesPtrInput is an input type that accepts TemplateParameterSelectableValuesArgs, TemplateParameterSelectableValuesPtr and TemplateParameterSelectableValuesPtrOutput values.
// You can construct a concrete instance of `TemplateParameterSelectableValuesPtrInput` via:
//
//	        TemplateParameterSelectableValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterSelectableValuesPtrInput interface {
	pulumi.Input

	ToTemplateParameterSelectableValuesPtrOutput() TemplateParameterSelectableValuesPtrOutput
	ToTemplateParameterSelectableValuesPtrOutputWithContext(context.Context) TemplateParameterSelectableValuesPtrOutput
}

type templateParameterSelectableValuesPtrType TemplateParameterSelectableValuesArgs

func TemplateParameterSelectableValuesPtr(v *TemplateParameterSelectableValuesArgs) TemplateParameterSelectableValuesPtrInput {
	return (*templateParameterSelectableValuesPtrType)(v)
}

func (*templateParameterSelectableValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterSelectableValues)(nil)).Elem()
}

func (i *templateParameterSelectableValuesPtrType) ToTemplateParameterSelectableValuesPtrOutput() TemplateParameterSelectableValuesPtrOutput {
	return i.ToTemplateParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (i *templateParameterSelectableValuesPtrType) ToTemplateParameterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSelectableValuesPtrOutput)
}

type TemplateParameterSelectableValuesOutput struct{ *pulumi.OutputState }

func (TemplateParameterSelectableValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterSelectableValues)(nil)).Elem()
}

func (o TemplateParameterSelectableValuesOutput) ToTemplateParameterSelectableValuesOutput() TemplateParameterSelectableValuesOutput {
	return o
}

func (o TemplateParameterSelectableValuesOutput) ToTemplateParameterSelectableValuesOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesOutput {
	return o
}

func (o TemplateParameterSelectableValuesOutput) ToTemplateParameterSelectableValuesPtrOutput() TemplateParameterSelectableValuesPtrOutput {
	return o.ToTemplateParameterSelectableValuesPtrOutputWithContext(context.Background())
}

func (o TemplateParameterSelectableValuesOutput) ToTemplateParameterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterSelectableValues) *TemplateParameterSelectableValues {
		return &v
	}).(TemplateParameterSelectableValuesPtrOutput)
}

func (o TemplateParameterSelectableValuesOutput) LinkToDataSetColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v TemplateParameterSelectableValues) *TemplateColumnIdentifier { return v.LinkToDataSetColumn }).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateParameterSelectableValuesOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateParameterSelectableValues) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type TemplateParameterSelectableValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterSelectableValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterSelectableValues)(nil)).Elem()
}

func (o TemplateParameterSelectableValuesPtrOutput) ToTemplateParameterSelectableValuesPtrOutput() TemplateParameterSelectableValuesPtrOutput {
	return o
}

func (o TemplateParameterSelectableValuesPtrOutput) ToTemplateParameterSelectableValuesPtrOutputWithContext(ctx context.Context) TemplateParameterSelectableValuesPtrOutput {
	return o
}

func (o TemplateParameterSelectableValuesPtrOutput) Elem() TemplateParameterSelectableValuesOutput {
	return o.ApplyT(func(v *TemplateParameterSelectableValues) TemplateParameterSelectableValues {
		if v != nil {
			return *v
		}
		var ret TemplateParameterSelectableValues
		return ret
	}).(TemplateParameterSelectableValuesOutput)
}

func (o TemplateParameterSelectableValuesPtrOutput) LinkToDataSetColumn() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateParameterSelectableValues) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.LinkToDataSetColumn
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateParameterSelectableValuesPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateParameterSelectableValues) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type TemplateParameterSliderControl struct {
	DisplayOptions      *TemplateSliderControlDisplayOptions `pulumi:"displayOptions"`
	MaximumValue        float64                              `pulumi:"maximumValue"`
	MinimumValue        float64                              `pulumi:"minimumValue"`
	ParameterControlId  string                               `pulumi:"parameterControlId"`
	SourceParameterName string                               `pulumi:"sourceParameterName"`
	StepSize            float64                              `pulumi:"stepSize"`
	Title               string                               `pulumi:"title"`
}

// TemplateParameterSliderControlInput is an input type that accepts TemplateParameterSliderControlArgs and TemplateParameterSliderControlOutput values.
// You can construct a concrete instance of `TemplateParameterSliderControlInput` via:
//
//	TemplateParameterSliderControlArgs{...}
type TemplateParameterSliderControlInput interface {
	pulumi.Input

	ToTemplateParameterSliderControlOutput() TemplateParameterSliderControlOutput
	ToTemplateParameterSliderControlOutputWithContext(context.Context) TemplateParameterSliderControlOutput
}

type TemplateParameterSliderControlArgs struct {
	DisplayOptions      TemplateSliderControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	MaximumValue        pulumi.Float64Input                         `pulumi:"maximumValue"`
	MinimumValue        pulumi.Float64Input                         `pulumi:"minimumValue"`
	ParameterControlId  pulumi.StringInput                          `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                          `pulumi:"sourceParameterName"`
	StepSize            pulumi.Float64Input                         `pulumi:"stepSize"`
	Title               pulumi.StringInput                          `pulumi:"title"`
}

func (TemplateParameterSliderControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterSliderControl)(nil)).Elem()
}

func (i TemplateParameterSliderControlArgs) ToTemplateParameterSliderControlOutput() TemplateParameterSliderControlOutput {
	return i.ToTemplateParameterSliderControlOutputWithContext(context.Background())
}

func (i TemplateParameterSliderControlArgs) ToTemplateParameterSliderControlOutputWithContext(ctx context.Context) TemplateParameterSliderControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSliderControlOutput)
}

func (i TemplateParameterSliderControlArgs) ToTemplateParameterSliderControlPtrOutput() TemplateParameterSliderControlPtrOutput {
	return i.ToTemplateParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterSliderControlArgs) ToTemplateParameterSliderControlPtrOutputWithContext(ctx context.Context) TemplateParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSliderControlOutput).ToTemplateParameterSliderControlPtrOutputWithContext(ctx)
}

// TemplateParameterSliderControlPtrInput is an input type that accepts TemplateParameterSliderControlArgs, TemplateParameterSliderControlPtr and TemplateParameterSliderControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterSliderControlPtrInput` via:
//
//	        TemplateParameterSliderControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterSliderControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterSliderControlPtrOutput() TemplateParameterSliderControlPtrOutput
	ToTemplateParameterSliderControlPtrOutputWithContext(context.Context) TemplateParameterSliderControlPtrOutput
}

type templateParameterSliderControlPtrType TemplateParameterSliderControlArgs

func TemplateParameterSliderControlPtr(v *TemplateParameterSliderControlArgs) TemplateParameterSliderControlPtrInput {
	return (*templateParameterSliderControlPtrType)(v)
}

func (*templateParameterSliderControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterSliderControl)(nil)).Elem()
}

func (i *templateParameterSliderControlPtrType) ToTemplateParameterSliderControlPtrOutput() TemplateParameterSliderControlPtrOutput {
	return i.ToTemplateParameterSliderControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterSliderControlPtrType) ToTemplateParameterSliderControlPtrOutputWithContext(ctx context.Context) TemplateParameterSliderControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterSliderControlPtrOutput)
}

type TemplateParameterSliderControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterSliderControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterSliderControl)(nil)).Elem()
}

func (o TemplateParameterSliderControlOutput) ToTemplateParameterSliderControlOutput() TemplateParameterSliderControlOutput {
	return o
}

func (o TemplateParameterSliderControlOutput) ToTemplateParameterSliderControlOutputWithContext(ctx context.Context) TemplateParameterSliderControlOutput {
	return o
}

func (o TemplateParameterSliderControlOutput) ToTemplateParameterSliderControlPtrOutput() TemplateParameterSliderControlPtrOutput {
	return o.ToTemplateParameterSliderControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterSliderControlOutput) ToTemplateParameterSliderControlPtrOutputWithContext(ctx context.Context) TemplateParameterSliderControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterSliderControl) *TemplateParameterSliderControl {
		return &v
	}).(TemplateParameterSliderControlPtrOutput)
}

func (o TemplateParameterSliderControlOutput) DisplayOptions() TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterSliderControl) *TemplateSliderControlDisplayOptions { return v.DisplayOptions }).(TemplateSliderControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterSliderControlOutput) MaximumValue() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateParameterSliderControl) float64 { return v.MaximumValue }).(pulumi.Float64Output)
}

func (o TemplateParameterSliderControlOutput) MinimumValue() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateParameterSliderControl) float64 { return v.MinimumValue }).(pulumi.Float64Output)
}

func (o TemplateParameterSliderControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterSliderControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterSliderControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterSliderControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterSliderControlOutput) StepSize() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateParameterSliderControl) float64 { return v.StepSize }).(pulumi.Float64Output)
}

func (o TemplateParameterSliderControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterSliderControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateParameterSliderControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterSliderControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterSliderControl)(nil)).Elem()
}

func (o TemplateParameterSliderControlPtrOutput) ToTemplateParameterSliderControlPtrOutput() TemplateParameterSliderControlPtrOutput {
	return o
}

func (o TemplateParameterSliderControlPtrOutput) ToTemplateParameterSliderControlPtrOutputWithContext(ctx context.Context) TemplateParameterSliderControlPtrOutput {
	return o
}

func (o TemplateParameterSliderControlPtrOutput) Elem() TemplateParameterSliderControlOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) TemplateParameterSliderControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterSliderControl
		return ret
	}).(TemplateParameterSliderControlOutput)
}

func (o TemplateParameterSliderControlPtrOutput) DisplayOptions() TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *TemplateSliderControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateSliderControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) MaximumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaximumValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) MinimumValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinimumValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) StepSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *float64 {
		if v == nil {
			return nil
		}
		return &v.StepSize
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateParameterSliderControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterSliderControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateParameterTextAreaControl struct {
	Delimiter           *string                                `pulumi:"delimiter"`
	DisplayOptions      *TemplateTextAreaControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                 `pulumi:"parameterControlId"`
	SourceParameterName string                                 `pulumi:"sourceParameterName"`
	Title               string                                 `pulumi:"title"`
}

// TemplateParameterTextAreaControlInput is an input type that accepts TemplateParameterTextAreaControlArgs and TemplateParameterTextAreaControlOutput values.
// You can construct a concrete instance of `TemplateParameterTextAreaControlInput` via:
//
//	TemplateParameterTextAreaControlArgs{...}
type TemplateParameterTextAreaControlInput interface {
	pulumi.Input

	ToTemplateParameterTextAreaControlOutput() TemplateParameterTextAreaControlOutput
	ToTemplateParameterTextAreaControlOutputWithContext(context.Context) TemplateParameterTextAreaControlOutput
}

type TemplateParameterTextAreaControlArgs struct {
	Delimiter           pulumi.StringPtrInput                         `pulumi:"delimiter"`
	DisplayOptions      TemplateTextAreaControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                            `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                            `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                            `pulumi:"title"`
}

func (TemplateParameterTextAreaControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterTextAreaControl)(nil)).Elem()
}

func (i TemplateParameterTextAreaControlArgs) ToTemplateParameterTextAreaControlOutput() TemplateParameterTextAreaControlOutput {
	return i.ToTemplateParameterTextAreaControlOutputWithContext(context.Background())
}

func (i TemplateParameterTextAreaControlArgs) ToTemplateParameterTextAreaControlOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextAreaControlOutput)
}

func (i TemplateParameterTextAreaControlArgs) ToTemplateParameterTextAreaControlPtrOutput() TemplateParameterTextAreaControlPtrOutput {
	return i.ToTemplateParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterTextAreaControlArgs) ToTemplateParameterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextAreaControlOutput).ToTemplateParameterTextAreaControlPtrOutputWithContext(ctx)
}

// TemplateParameterTextAreaControlPtrInput is an input type that accepts TemplateParameterTextAreaControlArgs, TemplateParameterTextAreaControlPtr and TemplateParameterTextAreaControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterTextAreaControlPtrInput` via:
//
//	        TemplateParameterTextAreaControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterTextAreaControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterTextAreaControlPtrOutput() TemplateParameterTextAreaControlPtrOutput
	ToTemplateParameterTextAreaControlPtrOutputWithContext(context.Context) TemplateParameterTextAreaControlPtrOutput
}

type templateParameterTextAreaControlPtrType TemplateParameterTextAreaControlArgs

func TemplateParameterTextAreaControlPtr(v *TemplateParameterTextAreaControlArgs) TemplateParameterTextAreaControlPtrInput {
	return (*templateParameterTextAreaControlPtrType)(v)
}

func (*templateParameterTextAreaControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterTextAreaControl)(nil)).Elem()
}

func (i *templateParameterTextAreaControlPtrType) ToTemplateParameterTextAreaControlPtrOutput() TemplateParameterTextAreaControlPtrOutput {
	return i.ToTemplateParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterTextAreaControlPtrType) ToTemplateParameterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextAreaControlPtrOutput)
}

type TemplateParameterTextAreaControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterTextAreaControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterTextAreaControl)(nil)).Elem()
}

func (o TemplateParameterTextAreaControlOutput) ToTemplateParameterTextAreaControlOutput() TemplateParameterTextAreaControlOutput {
	return o
}

func (o TemplateParameterTextAreaControlOutput) ToTemplateParameterTextAreaControlOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlOutput {
	return o
}

func (o TemplateParameterTextAreaControlOutput) ToTemplateParameterTextAreaControlPtrOutput() TemplateParameterTextAreaControlPtrOutput {
	return o.ToTemplateParameterTextAreaControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterTextAreaControlOutput) ToTemplateParameterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterTextAreaControl) *TemplateParameterTextAreaControl {
		return &v
	}).(TemplateParameterTextAreaControlPtrOutput)
}

func (o TemplateParameterTextAreaControlOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateParameterTextAreaControl) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextAreaControlOutput) DisplayOptions() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterTextAreaControl) *TemplateTextAreaControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterTextAreaControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextAreaControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterTextAreaControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextAreaControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterTextAreaControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextAreaControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateParameterTextAreaControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterTextAreaControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterTextAreaControl)(nil)).Elem()
}

func (o TemplateParameterTextAreaControlPtrOutput) ToTemplateParameterTextAreaControlPtrOutput() TemplateParameterTextAreaControlPtrOutput {
	return o
}

func (o TemplateParameterTextAreaControlPtrOutput) ToTemplateParameterTextAreaControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextAreaControlPtrOutput {
	return o
}

func (o TemplateParameterTextAreaControlPtrOutput) Elem() TemplateParameterTextAreaControlOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) TemplateParameterTextAreaControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterTextAreaControl
		return ret
	}).(TemplateParameterTextAreaControlOutput)
}

func (o TemplateParameterTextAreaControlPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextAreaControlPtrOutput) DisplayOptions() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) *TemplateTextAreaControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterTextAreaControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextAreaControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextAreaControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextAreaControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplateParameterTextFieldControl struct {
	DisplayOptions      *TemplateTextFieldControlDisplayOptions `pulumi:"displayOptions"`
	ParameterControlId  string                                  `pulumi:"parameterControlId"`
	SourceParameterName string                                  `pulumi:"sourceParameterName"`
	Title               string                                  `pulumi:"title"`
}

// TemplateParameterTextFieldControlInput is an input type that accepts TemplateParameterTextFieldControlArgs and TemplateParameterTextFieldControlOutput values.
// You can construct a concrete instance of `TemplateParameterTextFieldControlInput` via:
//
//	TemplateParameterTextFieldControlArgs{...}
type TemplateParameterTextFieldControlInput interface {
	pulumi.Input

	ToTemplateParameterTextFieldControlOutput() TemplateParameterTextFieldControlOutput
	ToTemplateParameterTextFieldControlOutputWithContext(context.Context) TemplateParameterTextFieldControlOutput
}

type TemplateParameterTextFieldControlArgs struct {
	DisplayOptions      TemplateTextFieldControlDisplayOptionsPtrInput `pulumi:"displayOptions"`
	ParameterControlId  pulumi.StringInput                             `pulumi:"parameterControlId"`
	SourceParameterName pulumi.StringInput                             `pulumi:"sourceParameterName"`
	Title               pulumi.StringInput                             `pulumi:"title"`
}

func (TemplateParameterTextFieldControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterTextFieldControl)(nil)).Elem()
}

func (i TemplateParameterTextFieldControlArgs) ToTemplateParameterTextFieldControlOutput() TemplateParameterTextFieldControlOutput {
	return i.ToTemplateParameterTextFieldControlOutputWithContext(context.Background())
}

func (i TemplateParameterTextFieldControlArgs) ToTemplateParameterTextFieldControlOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextFieldControlOutput)
}

func (i TemplateParameterTextFieldControlArgs) ToTemplateParameterTextFieldControlPtrOutput() TemplateParameterTextFieldControlPtrOutput {
	return i.ToTemplateParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i TemplateParameterTextFieldControlArgs) ToTemplateParameterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextFieldControlOutput).ToTemplateParameterTextFieldControlPtrOutputWithContext(ctx)
}

// TemplateParameterTextFieldControlPtrInput is an input type that accepts TemplateParameterTextFieldControlArgs, TemplateParameterTextFieldControlPtr and TemplateParameterTextFieldControlPtrOutput values.
// You can construct a concrete instance of `TemplateParameterTextFieldControlPtrInput` via:
//
//	        TemplateParameterTextFieldControlArgs{...}
//
//	or:
//
//	        nil
type TemplateParameterTextFieldControlPtrInput interface {
	pulumi.Input

	ToTemplateParameterTextFieldControlPtrOutput() TemplateParameterTextFieldControlPtrOutput
	ToTemplateParameterTextFieldControlPtrOutputWithContext(context.Context) TemplateParameterTextFieldControlPtrOutput
}

type templateParameterTextFieldControlPtrType TemplateParameterTextFieldControlArgs

func TemplateParameterTextFieldControlPtr(v *TemplateParameterTextFieldControlArgs) TemplateParameterTextFieldControlPtrInput {
	return (*templateParameterTextFieldControlPtrType)(v)
}

func (*templateParameterTextFieldControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterTextFieldControl)(nil)).Elem()
}

func (i *templateParameterTextFieldControlPtrType) ToTemplateParameterTextFieldControlPtrOutput() TemplateParameterTextFieldControlPtrOutput {
	return i.ToTemplateParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (i *templateParameterTextFieldControlPtrType) ToTemplateParameterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateParameterTextFieldControlPtrOutput)
}

type TemplateParameterTextFieldControlOutput struct{ *pulumi.OutputState }

func (TemplateParameterTextFieldControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateParameterTextFieldControl)(nil)).Elem()
}

func (o TemplateParameterTextFieldControlOutput) ToTemplateParameterTextFieldControlOutput() TemplateParameterTextFieldControlOutput {
	return o
}

func (o TemplateParameterTextFieldControlOutput) ToTemplateParameterTextFieldControlOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlOutput {
	return o
}

func (o TemplateParameterTextFieldControlOutput) ToTemplateParameterTextFieldControlPtrOutput() TemplateParameterTextFieldControlPtrOutput {
	return o.ToTemplateParameterTextFieldControlPtrOutputWithContext(context.Background())
}

func (o TemplateParameterTextFieldControlOutput) ToTemplateParameterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateParameterTextFieldControl) *TemplateParameterTextFieldControl {
		return &v
	}).(TemplateParameterTextFieldControlPtrOutput)
}

func (o TemplateParameterTextFieldControlOutput) DisplayOptions() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateParameterTextFieldControl) *TemplateTextFieldControlDisplayOptions {
		return v.DisplayOptions
	}).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterTextFieldControlOutput) ParameterControlId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextFieldControl) string { return v.ParameterControlId }).(pulumi.StringOutput)
}

func (o TemplateParameterTextFieldControlOutput) SourceParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextFieldControl) string { return v.SourceParameterName }).(pulumi.StringOutput)
}

func (o TemplateParameterTextFieldControlOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateParameterTextFieldControl) string { return v.Title }).(pulumi.StringOutput)
}

type TemplateParameterTextFieldControlPtrOutput struct{ *pulumi.OutputState }

func (TemplateParameterTextFieldControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateParameterTextFieldControl)(nil)).Elem()
}

func (o TemplateParameterTextFieldControlPtrOutput) ToTemplateParameterTextFieldControlPtrOutput() TemplateParameterTextFieldControlPtrOutput {
	return o
}

func (o TemplateParameterTextFieldControlPtrOutput) ToTemplateParameterTextFieldControlPtrOutputWithContext(ctx context.Context) TemplateParameterTextFieldControlPtrOutput {
	return o
}

func (o TemplateParameterTextFieldControlPtrOutput) Elem() TemplateParameterTextFieldControlOutput {
	return o.ApplyT(func(v *TemplateParameterTextFieldControl) TemplateParameterTextFieldControl {
		if v != nil {
			return *v
		}
		var ret TemplateParameterTextFieldControl
		return ret
	}).(TemplateParameterTextFieldControlOutput)
}

func (o TemplateParameterTextFieldControlPtrOutput) DisplayOptions() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextFieldControl) *TemplateTextFieldControlDisplayOptions {
		if v == nil {
			return nil
		}
		return v.DisplayOptions
	}).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

func (o TemplateParameterTextFieldControlPtrOutput) ParameterControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.ParameterControlId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextFieldControlPtrOutput) SourceParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.SourceParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateParameterTextFieldControlPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateParameterTextFieldControl) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type TemplatePercentVisibleRange struct {
	From *float64 `pulumi:"from"`
	To   *float64 `pulumi:"to"`
}

// TemplatePercentVisibleRangeInput is an input type that accepts TemplatePercentVisibleRangeArgs and TemplatePercentVisibleRangeOutput values.
// You can construct a concrete instance of `TemplatePercentVisibleRangeInput` via:
//
//	TemplatePercentVisibleRangeArgs{...}
type TemplatePercentVisibleRangeInput interface {
	pulumi.Input

	ToTemplatePercentVisibleRangeOutput() TemplatePercentVisibleRangeOutput
	ToTemplatePercentVisibleRangeOutputWithContext(context.Context) TemplatePercentVisibleRangeOutput
}

type TemplatePercentVisibleRangeArgs struct {
	From pulumi.Float64PtrInput `pulumi:"from"`
	To   pulumi.Float64PtrInput `pulumi:"to"`
}

func (TemplatePercentVisibleRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentVisibleRange)(nil)).Elem()
}

func (i TemplatePercentVisibleRangeArgs) ToTemplatePercentVisibleRangeOutput() TemplatePercentVisibleRangeOutput {
	return i.ToTemplatePercentVisibleRangeOutputWithContext(context.Background())
}

func (i TemplatePercentVisibleRangeArgs) ToTemplatePercentVisibleRangeOutputWithContext(ctx context.Context) TemplatePercentVisibleRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentVisibleRangeOutput)
}

func (i TemplatePercentVisibleRangeArgs) ToTemplatePercentVisibleRangePtrOutput() TemplatePercentVisibleRangePtrOutput {
	return i.ToTemplatePercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i TemplatePercentVisibleRangeArgs) ToTemplatePercentVisibleRangePtrOutputWithContext(ctx context.Context) TemplatePercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentVisibleRangeOutput).ToTemplatePercentVisibleRangePtrOutputWithContext(ctx)
}

// TemplatePercentVisibleRangePtrInput is an input type that accepts TemplatePercentVisibleRangeArgs, TemplatePercentVisibleRangePtr and TemplatePercentVisibleRangePtrOutput values.
// You can construct a concrete instance of `TemplatePercentVisibleRangePtrInput` via:
//
//	        TemplatePercentVisibleRangeArgs{...}
//
//	or:
//
//	        nil
type TemplatePercentVisibleRangePtrInput interface {
	pulumi.Input

	ToTemplatePercentVisibleRangePtrOutput() TemplatePercentVisibleRangePtrOutput
	ToTemplatePercentVisibleRangePtrOutputWithContext(context.Context) TemplatePercentVisibleRangePtrOutput
}

type templatePercentVisibleRangePtrType TemplatePercentVisibleRangeArgs

func TemplatePercentVisibleRangePtr(v *TemplatePercentVisibleRangeArgs) TemplatePercentVisibleRangePtrInput {
	return (*templatePercentVisibleRangePtrType)(v)
}

func (*templatePercentVisibleRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentVisibleRange)(nil)).Elem()
}

func (i *templatePercentVisibleRangePtrType) ToTemplatePercentVisibleRangePtrOutput() TemplatePercentVisibleRangePtrOutput {
	return i.ToTemplatePercentVisibleRangePtrOutputWithContext(context.Background())
}

func (i *templatePercentVisibleRangePtrType) ToTemplatePercentVisibleRangePtrOutputWithContext(ctx context.Context) TemplatePercentVisibleRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentVisibleRangePtrOutput)
}

type TemplatePercentVisibleRangeOutput struct{ *pulumi.OutputState }

func (TemplatePercentVisibleRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentVisibleRange)(nil)).Elem()
}

func (o TemplatePercentVisibleRangeOutput) ToTemplatePercentVisibleRangeOutput() TemplatePercentVisibleRangeOutput {
	return o
}

func (o TemplatePercentVisibleRangeOutput) ToTemplatePercentVisibleRangeOutputWithContext(ctx context.Context) TemplatePercentVisibleRangeOutput {
	return o
}

func (o TemplatePercentVisibleRangeOutput) ToTemplatePercentVisibleRangePtrOutput() TemplatePercentVisibleRangePtrOutput {
	return o.ToTemplatePercentVisibleRangePtrOutputWithContext(context.Background())
}

func (o TemplatePercentVisibleRangeOutput) ToTemplatePercentVisibleRangePtrOutputWithContext(ctx context.Context) TemplatePercentVisibleRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePercentVisibleRange) *TemplatePercentVisibleRange {
		return &v
	}).(TemplatePercentVisibleRangePtrOutput)
}

func (o TemplatePercentVisibleRangeOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplatePercentVisibleRange) *float64 { return v.From }).(pulumi.Float64PtrOutput)
}

func (o TemplatePercentVisibleRangeOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplatePercentVisibleRange) *float64 { return v.To }).(pulumi.Float64PtrOutput)
}

type TemplatePercentVisibleRangePtrOutput struct{ *pulumi.OutputState }

func (TemplatePercentVisibleRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentVisibleRange)(nil)).Elem()
}

func (o TemplatePercentVisibleRangePtrOutput) ToTemplatePercentVisibleRangePtrOutput() TemplatePercentVisibleRangePtrOutput {
	return o
}

func (o TemplatePercentVisibleRangePtrOutput) ToTemplatePercentVisibleRangePtrOutputWithContext(ctx context.Context) TemplatePercentVisibleRangePtrOutput {
	return o
}

func (o TemplatePercentVisibleRangePtrOutput) Elem() TemplatePercentVisibleRangeOutput {
	return o.ApplyT(func(v *TemplatePercentVisibleRange) TemplatePercentVisibleRange {
		if v != nil {
			return *v
		}
		var ret TemplatePercentVisibleRange
		return ret
	}).(TemplatePercentVisibleRangeOutput)
}

func (o TemplatePercentVisibleRangePtrOutput) From() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplatePercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.Float64PtrOutput)
}

func (o TemplatePercentVisibleRangePtrOutput) To() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplatePercentVisibleRange) *float64 {
		if v == nil {
			return nil
		}
		return v.To
	}).(pulumi.Float64PtrOutput)
}

type TemplatePercentageDisplayFormatConfiguration struct {
	DecimalPlacesConfiguration   *TemplateDecimalPlacesConfiguration    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   *TemplateNegativeValueConfiguration    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration *TemplateNullValueFormatConfiguration  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       *string                                `pulumi:"prefix"`
	SeparatorConfiguration       *TemplateNumericSeparatorConfiguration `pulumi:"separatorConfiguration"`
	Suffix                       *string                                `pulumi:"suffix"`
}

// TemplatePercentageDisplayFormatConfigurationInput is an input type that accepts TemplatePercentageDisplayFormatConfigurationArgs and TemplatePercentageDisplayFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplatePercentageDisplayFormatConfigurationInput` via:
//
//	TemplatePercentageDisplayFormatConfigurationArgs{...}
type TemplatePercentageDisplayFormatConfigurationInput interface {
	pulumi.Input

	ToTemplatePercentageDisplayFormatConfigurationOutput() TemplatePercentageDisplayFormatConfigurationOutput
	ToTemplatePercentageDisplayFormatConfigurationOutputWithContext(context.Context) TemplatePercentageDisplayFormatConfigurationOutput
}

type TemplatePercentageDisplayFormatConfigurationArgs struct {
	DecimalPlacesConfiguration   TemplateDecimalPlacesConfigurationPtrInput    `pulumi:"decimalPlacesConfiguration"`
	NegativeValueConfiguration   TemplateNegativeValueConfigurationPtrInput    `pulumi:"negativeValueConfiguration"`
	NullValueFormatConfiguration TemplateNullValueFormatConfigurationPtrInput  `pulumi:"nullValueFormatConfiguration"`
	Prefix                       pulumi.StringPtrInput                         `pulumi:"prefix"`
	SeparatorConfiguration       TemplateNumericSeparatorConfigurationPtrInput `pulumi:"separatorConfiguration"`
	Suffix                       pulumi.StringPtrInput                         `pulumi:"suffix"`
}

func (TemplatePercentageDisplayFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i TemplatePercentageDisplayFormatConfigurationArgs) ToTemplatePercentageDisplayFormatConfigurationOutput() TemplatePercentageDisplayFormatConfigurationOutput {
	return i.ToTemplatePercentageDisplayFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplatePercentageDisplayFormatConfigurationArgs) ToTemplatePercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentageDisplayFormatConfigurationOutput)
}

func (i TemplatePercentageDisplayFormatConfigurationArgs) ToTemplatePercentageDisplayFormatConfigurationPtrOutput() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return i.ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePercentageDisplayFormatConfigurationArgs) ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentageDisplayFormatConfigurationOutput).ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplatePercentageDisplayFormatConfigurationPtrInput is an input type that accepts TemplatePercentageDisplayFormatConfigurationArgs, TemplatePercentageDisplayFormatConfigurationPtr and TemplatePercentageDisplayFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePercentageDisplayFormatConfigurationPtrInput` via:
//
//	        TemplatePercentageDisplayFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePercentageDisplayFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePercentageDisplayFormatConfigurationPtrOutput() TemplatePercentageDisplayFormatConfigurationPtrOutput
	ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(context.Context) TemplatePercentageDisplayFormatConfigurationPtrOutput
}

type templatePercentageDisplayFormatConfigurationPtrType TemplatePercentageDisplayFormatConfigurationArgs

func TemplatePercentageDisplayFormatConfigurationPtr(v *TemplatePercentageDisplayFormatConfigurationArgs) TemplatePercentageDisplayFormatConfigurationPtrInput {
	return (*templatePercentageDisplayFormatConfigurationPtrType)(v)
}

func (*templatePercentageDisplayFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (i *templatePercentageDisplayFormatConfigurationPtrType) ToTemplatePercentageDisplayFormatConfigurationPtrOutput() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return i.ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePercentageDisplayFormatConfigurationPtrType) ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

type TemplatePercentageDisplayFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePercentageDisplayFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) ToTemplatePercentageDisplayFormatConfigurationOutput() TemplatePercentageDisplayFormatConfigurationOutput {
	return o
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) ToTemplatePercentageDisplayFormatConfigurationOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationOutput {
	return o
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) ToTemplatePercentageDisplayFormatConfigurationPtrOutput() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePercentageDisplayFormatConfiguration) *TemplatePercentageDisplayFormatConfiguration {
		return &v
	}).(TemplatePercentageDisplayFormatConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePercentageDisplayFormatConfiguration) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type TemplatePercentageDisplayFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePercentageDisplayFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentageDisplayFormatConfiguration)(nil)).Elem()
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) ToTemplatePercentageDisplayFormatConfigurationPtrOutput() TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) ToTemplatePercentageDisplayFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplatePercentageDisplayFormatConfigurationPtrOutput {
	return o
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) Elem() TemplatePercentageDisplayFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) TemplatePercentageDisplayFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePercentageDisplayFormatConfiguration
		return ret
	}).(TemplatePercentageDisplayFormatConfigurationOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) DecimalPlacesConfiguration() TemplateDecimalPlacesConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *TemplateDecimalPlacesConfiguration {
		if v == nil {
			return nil
		}
		return v.DecimalPlacesConfiguration
	}).(TemplateDecimalPlacesConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) NegativeValueConfiguration() TemplateNegativeValueConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *TemplateNegativeValueConfiguration {
		if v == nil {
			return nil
		}
		return v.NegativeValueConfiguration
	}).(TemplateNegativeValueConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *TemplateNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) SeparatorConfiguration() TemplateNumericSeparatorConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *TemplateNumericSeparatorConfiguration {
		if v == nil {
			return nil
		}
		return v.SeparatorConfiguration
	}).(TemplateNumericSeparatorConfigurationPtrOutput)
}

func (o TemplatePercentageDisplayFormatConfigurationPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePercentageDisplayFormatConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type TemplatePercentileAggregation struct {
	PercentileValue *float64 `pulumi:"percentileValue"`
}

// TemplatePercentileAggregationInput is an input type that accepts TemplatePercentileAggregationArgs and TemplatePercentileAggregationOutput values.
// You can construct a concrete instance of `TemplatePercentileAggregationInput` via:
//
//	TemplatePercentileAggregationArgs{...}
type TemplatePercentileAggregationInput interface {
	pulumi.Input

	ToTemplatePercentileAggregationOutput() TemplatePercentileAggregationOutput
	ToTemplatePercentileAggregationOutputWithContext(context.Context) TemplatePercentileAggregationOutput
}

type TemplatePercentileAggregationArgs struct {
	PercentileValue pulumi.Float64PtrInput `pulumi:"percentileValue"`
}

func (TemplatePercentileAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentileAggregation)(nil)).Elem()
}

func (i TemplatePercentileAggregationArgs) ToTemplatePercentileAggregationOutput() TemplatePercentileAggregationOutput {
	return i.ToTemplatePercentileAggregationOutputWithContext(context.Background())
}

func (i TemplatePercentileAggregationArgs) ToTemplatePercentileAggregationOutputWithContext(ctx context.Context) TemplatePercentileAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentileAggregationOutput)
}

func (i TemplatePercentileAggregationArgs) ToTemplatePercentileAggregationPtrOutput() TemplatePercentileAggregationPtrOutput {
	return i.ToTemplatePercentileAggregationPtrOutputWithContext(context.Background())
}

func (i TemplatePercentileAggregationArgs) ToTemplatePercentileAggregationPtrOutputWithContext(ctx context.Context) TemplatePercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentileAggregationOutput).ToTemplatePercentileAggregationPtrOutputWithContext(ctx)
}

// TemplatePercentileAggregationPtrInput is an input type that accepts TemplatePercentileAggregationArgs, TemplatePercentileAggregationPtr and TemplatePercentileAggregationPtrOutput values.
// You can construct a concrete instance of `TemplatePercentileAggregationPtrInput` via:
//
//	        TemplatePercentileAggregationArgs{...}
//
//	or:
//
//	        nil
type TemplatePercentileAggregationPtrInput interface {
	pulumi.Input

	ToTemplatePercentileAggregationPtrOutput() TemplatePercentileAggregationPtrOutput
	ToTemplatePercentileAggregationPtrOutputWithContext(context.Context) TemplatePercentileAggregationPtrOutput
}

type templatePercentileAggregationPtrType TemplatePercentileAggregationArgs

func TemplatePercentileAggregationPtr(v *TemplatePercentileAggregationArgs) TemplatePercentileAggregationPtrInput {
	return (*templatePercentileAggregationPtrType)(v)
}

func (*templatePercentileAggregationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentileAggregation)(nil)).Elem()
}

func (i *templatePercentileAggregationPtrType) ToTemplatePercentileAggregationPtrOutput() TemplatePercentileAggregationPtrOutput {
	return i.ToTemplatePercentileAggregationPtrOutputWithContext(context.Background())
}

func (i *templatePercentileAggregationPtrType) ToTemplatePercentileAggregationPtrOutputWithContext(ctx context.Context) TemplatePercentileAggregationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePercentileAggregationPtrOutput)
}

type TemplatePercentileAggregationOutput struct{ *pulumi.OutputState }

func (TemplatePercentileAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePercentileAggregation)(nil)).Elem()
}

func (o TemplatePercentileAggregationOutput) ToTemplatePercentileAggregationOutput() TemplatePercentileAggregationOutput {
	return o
}

func (o TemplatePercentileAggregationOutput) ToTemplatePercentileAggregationOutputWithContext(ctx context.Context) TemplatePercentileAggregationOutput {
	return o
}

func (o TemplatePercentileAggregationOutput) ToTemplatePercentileAggregationPtrOutput() TemplatePercentileAggregationPtrOutput {
	return o.ToTemplatePercentileAggregationPtrOutputWithContext(context.Background())
}

func (o TemplatePercentileAggregationOutput) ToTemplatePercentileAggregationPtrOutputWithContext(ctx context.Context) TemplatePercentileAggregationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePercentileAggregation) *TemplatePercentileAggregation {
		return &v
	}).(TemplatePercentileAggregationPtrOutput)
}

func (o TemplatePercentileAggregationOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplatePercentileAggregation) *float64 { return v.PercentileValue }).(pulumi.Float64PtrOutput)
}

type TemplatePercentileAggregationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePercentileAggregationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePercentileAggregation)(nil)).Elem()
}

func (o TemplatePercentileAggregationPtrOutput) ToTemplatePercentileAggregationPtrOutput() TemplatePercentileAggregationPtrOutput {
	return o
}

func (o TemplatePercentileAggregationPtrOutput) ToTemplatePercentileAggregationPtrOutputWithContext(ctx context.Context) TemplatePercentileAggregationPtrOutput {
	return o
}

func (o TemplatePercentileAggregationPtrOutput) Elem() TemplatePercentileAggregationOutput {
	return o.ApplyT(func(v *TemplatePercentileAggregation) TemplatePercentileAggregation {
		if v != nil {
			return *v
		}
		var ret TemplatePercentileAggregation
		return ret
	}).(TemplatePercentileAggregationOutput)
}

func (o TemplatePercentileAggregationPtrOutput) PercentileValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplatePercentileAggregation) *float64 {
		if v == nil {
			return nil
		}
		return v.PercentileValue
	}).(pulumi.Float64PtrOutput)
}

type TemplatePeriodOverPeriodComputation struct {
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
	Time          *TemplateDimensionField `pulumi:"time"`
	Value         *TemplateMeasureField   `pulumi:"value"`
}

// TemplatePeriodOverPeriodComputationInput is an input type that accepts TemplatePeriodOverPeriodComputationArgs and TemplatePeriodOverPeriodComputationOutput values.
// You can construct a concrete instance of `TemplatePeriodOverPeriodComputationInput` via:
//
//	TemplatePeriodOverPeriodComputationArgs{...}
type TemplatePeriodOverPeriodComputationInput interface {
	pulumi.Input

	ToTemplatePeriodOverPeriodComputationOutput() TemplatePeriodOverPeriodComputationOutput
	ToTemplatePeriodOverPeriodComputationOutputWithContext(context.Context) TemplatePeriodOverPeriodComputationOutput
}

type TemplatePeriodOverPeriodComputationArgs struct {
	ComputationId pulumi.StringInput             `pulumi:"computationId"`
	Name          pulumi.StringPtrInput          `pulumi:"name"`
	Time          TemplateDimensionFieldPtrInput `pulumi:"time"`
	Value         TemplateMeasureFieldPtrInput   `pulumi:"value"`
}

func (TemplatePeriodOverPeriodComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePeriodOverPeriodComputation)(nil)).Elem()
}

func (i TemplatePeriodOverPeriodComputationArgs) ToTemplatePeriodOverPeriodComputationOutput() TemplatePeriodOverPeriodComputationOutput {
	return i.ToTemplatePeriodOverPeriodComputationOutputWithContext(context.Background())
}

func (i TemplatePeriodOverPeriodComputationArgs) ToTemplatePeriodOverPeriodComputationOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodOverPeriodComputationOutput)
}

func (i TemplatePeriodOverPeriodComputationArgs) ToTemplatePeriodOverPeriodComputationPtrOutput() TemplatePeriodOverPeriodComputationPtrOutput {
	return i.ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i TemplatePeriodOverPeriodComputationArgs) ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodOverPeriodComputationOutput).ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(ctx)
}

// TemplatePeriodOverPeriodComputationPtrInput is an input type that accepts TemplatePeriodOverPeriodComputationArgs, TemplatePeriodOverPeriodComputationPtr and TemplatePeriodOverPeriodComputationPtrOutput values.
// You can construct a concrete instance of `TemplatePeriodOverPeriodComputationPtrInput` via:
//
//	        TemplatePeriodOverPeriodComputationArgs{...}
//
//	or:
//
//	        nil
type TemplatePeriodOverPeriodComputationPtrInput interface {
	pulumi.Input

	ToTemplatePeriodOverPeriodComputationPtrOutput() TemplatePeriodOverPeriodComputationPtrOutput
	ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(context.Context) TemplatePeriodOverPeriodComputationPtrOutput
}

type templatePeriodOverPeriodComputationPtrType TemplatePeriodOverPeriodComputationArgs

func TemplatePeriodOverPeriodComputationPtr(v *TemplatePeriodOverPeriodComputationArgs) TemplatePeriodOverPeriodComputationPtrInput {
	return (*templatePeriodOverPeriodComputationPtrType)(v)
}

func (*templatePeriodOverPeriodComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePeriodOverPeriodComputation)(nil)).Elem()
}

func (i *templatePeriodOverPeriodComputationPtrType) ToTemplatePeriodOverPeriodComputationPtrOutput() TemplatePeriodOverPeriodComputationPtrOutput {
	return i.ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (i *templatePeriodOverPeriodComputationPtrType) ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodOverPeriodComputationPtrOutput)
}

type TemplatePeriodOverPeriodComputationOutput struct{ *pulumi.OutputState }

func (TemplatePeriodOverPeriodComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePeriodOverPeriodComputation)(nil)).Elem()
}

func (o TemplatePeriodOverPeriodComputationOutput) ToTemplatePeriodOverPeriodComputationOutput() TemplatePeriodOverPeriodComputationOutput {
	return o
}

func (o TemplatePeriodOverPeriodComputationOutput) ToTemplatePeriodOverPeriodComputationOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationOutput {
	return o
}

func (o TemplatePeriodOverPeriodComputationOutput) ToTemplatePeriodOverPeriodComputationPtrOutput() TemplatePeriodOverPeriodComputationPtrOutput {
	return o.ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(context.Background())
}

func (o TemplatePeriodOverPeriodComputationOutput) ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePeriodOverPeriodComputation) *TemplatePeriodOverPeriodComputation {
		return &v
	}).(TemplatePeriodOverPeriodComputationPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePeriodOverPeriodComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplatePeriodOverPeriodComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePeriodOverPeriodComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplatePeriodOverPeriodComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplatePeriodOverPeriodComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplatePeriodOverPeriodComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePeriodOverPeriodComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePeriodOverPeriodComputation)(nil)).Elem()
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) ToTemplatePeriodOverPeriodComputationPtrOutput() TemplatePeriodOverPeriodComputationPtrOutput {
	return o
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) ToTemplatePeriodOverPeriodComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodOverPeriodComputationPtrOutput {
	return o
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) Elem() TemplatePeriodOverPeriodComputationOutput {
	return o.ApplyT(func(v *TemplatePeriodOverPeriodComputation) TemplatePeriodOverPeriodComputation {
		if v != nil {
			return *v
		}
		var ret TemplatePeriodOverPeriodComputation
		return ret
	}).(TemplatePeriodOverPeriodComputationOutput)
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodOverPeriodComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodOverPeriodComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplatePeriodOverPeriodComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodOverPeriodComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplatePeriodToDateComputation struct {
	ComputationId         string                   `pulumi:"computationId"`
	Name                  *string                  `pulumi:"name"`
	PeriodTimeGranularity *TemplateTimeGranularity `pulumi:"periodTimeGranularity"`
	Time                  *TemplateDimensionField  `pulumi:"time"`
	Value                 *TemplateMeasureField    `pulumi:"value"`
}

// TemplatePeriodToDateComputationInput is an input type that accepts TemplatePeriodToDateComputationArgs and TemplatePeriodToDateComputationOutput values.
// You can construct a concrete instance of `TemplatePeriodToDateComputationInput` via:
//
//	TemplatePeriodToDateComputationArgs{...}
type TemplatePeriodToDateComputationInput interface {
	pulumi.Input

	ToTemplatePeriodToDateComputationOutput() TemplatePeriodToDateComputationOutput
	ToTemplatePeriodToDateComputationOutputWithContext(context.Context) TemplatePeriodToDateComputationOutput
}

type TemplatePeriodToDateComputationArgs struct {
	ComputationId         pulumi.StringInput              `pulumi:"computationId"`
	Name                  pulumi.StringPtrInput           `pulumi:"name"`
	PeriodTimeGranularity TemplateTimeGranularityPtrInput `pulumi:"periodTimeGranularity"`
	Time                  TemplateDimensionFieldPtrInput  `pulumi:"time"`
	Value                 TemplateMeasureFieldPtrInput    `pulumi:"value"`
}

func (TemplatePeriodToDateComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePeriodToDateComputation)(nil)).Elem()
}

func (i TemplatePeriodToDateComputationArgs) ToTemplatePeriodToDateComputationOutput() TemplatePeriodToDateComputationOutput {
	return i.ToTemplatePeriodToDateComputationOutputWithContext(context.Background())
}

func (i TemplatePeriodToDateComputationArgs) ToTemplatePeriodToDateComputationOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodToDateComputationOutput)
}

func (i TemplatePeriodToDateComputationArgs) ToTemplatePeriodToDateComputationPtrOutput() TemplatePeriodToDateComputationPtrOutput {
	return i.ToTemplatePeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i TemplatePeriodToDateComputationArgs) ToTemplatePeriodToDateComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodToDateComputationOutput).ToTemplatePeriodToDateComputationPtrOutputWithContext(ctx)
}

// TemplatePeriodToDateComputationPtrInput is an input type that accepts TemplatePeriodToDateComputationArgs, TemplatePeriodToDateComputationPtr and TemplatePeriodToDateComputationPtrOutput values.
// You can construct a concrete instance of `TemplatePeriodToDateComputationPtrInput` via:
//
//	        TemplatePeriodToDateComputationArgs{...}
//
//	or:
//
//	        nil
type TemplatePeriodToDateComputationPtrInput interface {
	pulumi.Input

	ToTemplatePeriodToDateComputationPtrOutput() TemplatePeriodToDateComputationPtrOutput
	ToTemplatePeriodToDateComputationPtrOutputWithContext(context.Context) TemplatePeriodToDateComputationPtrOutput
}

type templatePeriodToDateComputationPtrType TemplatePeriodToDateComputationArgs

func TemplatePeriodToDateComputationPtr(v *TemplatePeriodToDateComputationArgs) TemplatePeriodToDateComputationPtrInput {
	return (*templatePeriodToDateComputationPtrType)(v)
}

func (*templatePeriodToDateComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePeriodToDateComputation)(nil)).Elem()
}

func (i *templatePeriodToDateComputationPtrType) ToTemplatePeriodToDateComputationPtrOutput() TemplatePeriodToDateComputationPtrOutput {
	return i.ToTemplatePeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (i *templatePeriodToDateComputationPtrType) ToTemplatePeriodToDateComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePeriodToDateComputationPtrOutput)
}

type TemplatePeriodToDateComputationOutput struct{ *pulumi.OutputState }

func (TemplatePeriodToDateComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePeriodToDateComputation)(nil)).Elem()
}

func (o TemplatePeriodToDateComputationOutput) ToTemplatePeriodToDateComputationOutput() TemplatePeriodToDateComputationOutput {
	return o
}

func (o TemplatePeriodToDateComputationOutput) ToTemplatePeriodToDateComputationOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationOutput {
	return o
}

func (o TemplatePeriodToDateComputationOutput) ToTemplatePeriodToDateComputationPtrOutput() TemplatePeriodToDateComputationPtrOutput {
	return o.ToTemplatePeriodToDateComputationPtrOutputWithContext(context.Background())
}

func (o TemplatePeriodToDateComputationOutput) ToTemplatePeriodToDateComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePeriodToDateComputation) *TemplatePeriodToDateComputation {
		return &v
	}).(TemplatePeriodToDateComputationPtrOutput)
}

func (o TemplatePeriodToDateComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePeriodToDateComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplatePeriodToDateComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePeriodToDateComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodToDateComputationOutput) PeriodTimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplatePeriodToDateComputation) *TemplateTimeGranularity { return v.PeriodTimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

func (o TemplatePeriodToDateComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplatePeriodToDateComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplatePeriodToDateComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplatePeriodToDateComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplatePeriodToDateComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePeriodToDateComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePeriodToDateComputation)(nil)).Elem()
}

func (o TemplatePeriodToDateComputationPtrOutput) ToTemplatePeriodToDateComputationPtrOutput() TemplatePeriodToDateComputationPtrOutput {
	return o
}

func (o TemplatePeriodToDateComputationPtrOutput) ToTemplatePeriodToDateComputationPtrOutputWithContext(ctx context.Context) TemplatePeriodToDateComputationPtrOutput {
	return o
}

func (o TemplatePeriodToDateComputationPtrOutput) Elem() TemplatePeriodToDateComputationOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) TemplatePeriodToDateComputation {
		if v != nil {
			return *v
		}
		var ret TemplatePeriodToDateComputation
		return ret
	}).(TemplatePeriodToDateComputationOutput)
}

func (o TemplatePeriodToDateComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodToDateComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePeriodToDateComputationPtrOutput) PeriodTimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.PeriodTimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplatePeriodToDateComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplatePeriodToDateComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplatePeriodToDateComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplatePieChartAggregatedFieldWells struct {
	Category       []TemplateDimensionField `pulumi:"category"`
	SmallMultiples []TemplateDimensionField `pulumi:"smallMultiples"`
	Values         []TemplateMeasureField   `pulumi:"values"`
}

// TemplatePieChartAggregatedFieldWellsInput is an input type that accepts TemplatePieChartAggregatedFieldWellsArgs and TemplatePieChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplatePieChartAggregatedFieldWellsInput` via:
//
//	TemplatePieChartAggregatedFieldWellsArgs{...}
type TemplatePieChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplatePieChartAggregatedFieldWellsOutput() TemplatePieChartAggregatedFieldWellsOutput
	ToTemplatePieChartAggregatedFieldWellsOutputWithContext(context.Context) TemplatePieChartAggregatedFieldWellsOutput
}

type TemplatePieChartAggregatedFieldWellsArgs struct {
	Category       TemplateDimensionFieldArrayInput `pulumi:"category"`
	SmallMultiples TemplateDimensionFieldArrayInput `pulumi:"smallMultiples"`
	Values         TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplatePieChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplatePieChartAggregatedFieldWellsArgs) ToTemplatePieChartAggregatedFieldWellsOutput() TemplatePieChartAggregatedFieldWellsOutput {
	return i.ToTemplatePieChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplatePieChartAggregatedFieldWellsArgs) ToTemplatePieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartAggregatedFieldWellsOutput)
}

func (i TemplatePieChartAggregatedFieldWellsArgs) ToTemplatePieChartAggregatedFieldWellsPtrOutput() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplatePieChartAggregatedFieldWellsArgs) ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartAggregatedFieldWellsOutput).ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplatePieChartAggregatedFieldWellsPtrInput is an input type that accepts TemplatePieChartAggregatedFieldWellsArgs, TemplatePieChartAggregatedFieldWellsPtr and TemplatePieChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplatePieChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplatePieChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplatePieChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplatePieChartAggregatedFieldWellsPtrOutput() TemplatePieChartAggregatedFieldWellsPtrOutput
	ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplatePieChartAggregatedFieldWellsPtrOutput
}

type templatePieChartAggregatedFieldWellsPtrType TemplatePieChartAggregatedFieldWellsArgs

func TemplatePieChartAggregatedFieldWellsPtr(v *TemplatePieChartAggregatedFieldWellsArgs) TemplatePieChartAggregatedFieldWellsPtrInput {
	return (*templatePieChartAggregatedFieldWellsPtrType)(v)
}

func (*templatePieChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templatePieChartAggregatedFieldWellsPtrType) ToTemplatePieChartAggregatedFieldWellsPtrOutput() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templatePieChartAggregatedFieldWellsPtrType) ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartAggregatedFieldWellsPtrOutput)
}

type TemplatePieChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplatePieChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplatePieChartAggregatedFieldWellsOutput) ToTemplatePieChartAggregatedFieldWellsOutput() TemplatePieChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplatePieChartAggregatedFieldWellsOutput) ToTemplatePieChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplatePieChartAggregatedFieldWellsOutput) ToTemplatePieChartAggregatedFieldWellsPtrOutput() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplatePieChartAggregatedFieldWellsOutput) ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePieChartAggregatedFieldWells) *TemplatePieChartAggregatedFieldWells {
		return &v
	}).(TemplatePieChartAggregatedFieldWellsPtrOutput)
}

func (o TemplatePieChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplatePieChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePieChartAggregatedFieldWellsOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplatePieChartAggregatedFieldWells) []TemplateDimensionField { return v.SmallMultiples }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePieChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplatePieChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplatePieChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePieChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) ToTemplatePieChartAggregatedFieldWellsPtrOutput() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) ToTemplatePieChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) Elem() TemplatePieChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplatePieChartAggregatedFieldWells) TemplatePieChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplatePieChartAggregatedFieldWells
		return ret
	}).(TemplatePieChartAggregatedFieldWellsOutput)
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) SmallMultiples() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.SmallMultiples
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePieChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplatePieChartConfiguration struct {
	CategoryLabelOptions         *TemplateChartAxisLabelOptions        `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults []TemplateContributionAnalysisDefault `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   *TemplateDataLabelOptions             `pulumi:"dataLabels"`
	DonutOptions                 *TemplateDonutOptions                 `pulumi:"donutOptions"`
	FieldWells                   *TemplatePieChartFieldWells           `pulumi:"fieldWells"`
	Legend                       *TemplateLegendOptions                `pulumi:"legend"`
	SmallMultiplesOptions        *TemplateSmallMultiplesOptions        `pulumi:"smallMultiplesOptions"`
	SortConfiguration            *TemplatePieChartSortConfiguration    `pulumi:"sortConfiguration"`
	Tooltip                      *TemplateTooltipOptions               `pulumi:"tooltip"`
	ValueLabelOptions            *TemplateChartAxisLabelOptions        `pulumi:"valueLabelOptions"`
	VisualPalette                *TemplateVisualPalette                `pulumi:"visualPalette"`
}

// TemplatePieChartConfigurationInput is an input type that accepts TemplatePieChartConfigurationArgs and TemplatePieChartConfigurationOutput values.
// You can construct a concrete instance of `TemplatePieChartConfigurationInput` via:
//
//	TemplatePieChartConfigurationArgs{...}
type TemplatePieChartConfigurationInput interface {
	pulumi.Input

	ToTemplatePieChartConfigurationOutput() TemplatePieChartConfigurationOutput
	ToTemplatePieChartConfigurationOutputWithContext(context.Context) TemplatePieChartConfigurationOutput
}

type TemplatePieChartConfigurationArgs struct {
	CategoryLabelOptions         TemplateChartAxisLabelOptionsPtrInput         `pulumi:"categoryLabelOptions"`
	ContributionAnalysisDefaults TemplateContributionAnalysisDefaultArrayInput `pulumi:"contributionAnalysisDefaults"`
	DataLabels                   TemplateDataLabelOptionsPtrInput              `pulumi:"dataLabels"`
	DonutOptions                 TemplateDonutOptionsPtrInput                  `pulumi:"donutOptions"`
	FieldWells                   TemplatePieChartFieldWellsPtrInput            `pulumi:"fieldWells"`
	Legend                       TemplateLegendOptionsPtrInput                 `pulumi:"legend"`
	SmallMultiplesOptions        TemplateSmallMultiplesOptionsPtrInput         `pulumi:"smallMultiplesOptions"`
	SortConfiguration            TemplatePieChartSortConfigurationPtrInput     `pulumi:"sortConfiguration"`
	Tooltip                      TemplateTooltipOptionsPtrInput                `pulumi:"tooltip"`
	ValueLabelOptions            TemplateChartAxisLabelOptionsPtrInput         `pulumi:"valueLabelOptions"`
	VisualPalette                TemplateVisualPalettePtrInput                 `pulumi:"visualPalette"`
}

func (TemplatePieChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartConfiguration)(nil)).Elem()
}

func (i TemplatePieChartConfigurationArgs) ToTemplatePieChartConfigurationOutput() TemplatePieChartConfigurationOutput {
	return i.ToTemplatePieChartConfigurationOutputWithContext(context.Background())
}

func (i TemplatePieChartConfigurationArgs) ToTemplatePieChartConfigurationOutputWithContext(ctx context.Context) TemplatePieChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartConfigurationOutput)
}

func (i TemplatePieChartConfigurationArgs) ToTemplatePieChartConfigurationPtrOutput() TemplatePieChartConfigurationPtrOutput {
	return i.ToTemplatePieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePieChartConfigurationArgs) ToTemplatePieChartConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartConfigurationOutput).ToTemplatePieChartConfigurationPtrOutputWithContext(ctx)
}

// TemplatePieChartConfigurationPtrInput is an input type that accepts TemplatePieChartConfigurationArgs, TemplatePieChartConfigurationPtr and TemplatePieChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePieChartConfigurationPtrInput` via:
//
//	        TemplatePieChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePieChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePieChartConfigurationPtrOutput() TemplatePieChartConfigurationPtrOutput
	ToTemplatePieChartConfigurationPtrOutputWithContext(context.Context) TemplatePieChartConfigurationPtrOutput
}

type templatePieChartConfigurationPtrType TemplatePieChartConfigurationArgs

func TemplatePieChartConfigurationPtr(v *TemplatePieChartConfigurationArgs) TemplatePieChartConfigurationPtrInput {
	return (*templatePieChartConfigurationPtrType)(v)
}

func (*templatePieChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartConfiguration)(nil)).Elem()
}

func (i *templatePieChartConfigurationPtrType) ToTemplatePieChartConfigurationPtrOutput() TemplatePieChartConfigurationPtrOutput {
	return i.ToTemplatePieChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePieChartConfigurationPtrType) ToTemplatePieChartConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartConfigurationPtrOutput)
}

type TemplatePieChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePieChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartConfiguration)(nil)).Elem()
}

func (o TemplatePieChartConfigurationOutput) ToTemplatePieChartConfigurationOutput() TemplatePieChartConfigurationOutput {
	return o
}

func (o TemplatePieChartConfigurationOutput) ToTemplatePieChartConfigurationOutputWithContext(ctx context.Context) TemplatePieChartConfigurationOutput {
	return o
}

func (o TemplatePieChartConfigurationOutput) ToTemplatePieChartConfigurationPtrOutput() TemplatePieChartConfigurationPtrOutput {
	return o.ToTemplatePieChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePieChartConfigurationOutput) ToTemplatePieChartConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePieChartConfiguration) *TemplatePieChartConfiguration {
		return &v
	}).(TemplatePieChartConfigurationPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) []TemplateContributionAnalysisDefault {
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplatePieChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) DonutOptions() TemplateDonutOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateDonutOptions { return v.DonutOptions }).(TemplateDonutOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) FieldWells() TemplatePieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplatePieChartFieldWells { return v.FieldWells }).(TemplatePieChartFieldWellsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateSmallMultiplesOptions { return v.SmallMultiplesOptions }).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) SortConfiguration() TemplatePieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplatePieChartSortConfiguration { return v.SortConfiguration }).(TemplatePieChartSortConfigurationPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateChartAxisLabelOptions { return v.ValueLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplatePieChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplatePieChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePieChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartConfiguration)(nil)).Elem()
}

func (o TemplatePieChartConfigurationPtrOutput) ToTemplatePieChartConfigurationPtrOutput() TemplatePieChartConfigurationPtrOutput {
	return o
}

func (o TemplatePieChartConfigurationPtrOutput) ToTemplatePieChartConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartConfigurationPtrOutput {
	return o
}

func (o TemplatePieChartConfigurationPtrOutput) Elem() TemplatePieChartConfigurationOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) TemplatePieChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePieChartConfiguration
		return ret
	}).(TemplatePieChartConfigurationOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) ContributionAnalysisDefaults() TemplateContributionAnalysisDefaultArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) []TemplateContributionAnalysisDefault {
		if v == nil {
			return nil
		}
		return v.ContributionAnalysisDefaults
	}).(TemplateContributionAnalysisDefaultArrayOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) DonutOptions() TemplateDonutOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateDonutOptions {
		if v == nil {
			return nil
		}
		return v.DonutOptions
	}).(TemplateDonutOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) FieldWells() TemplatePieChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplatePieChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplatePieChartFieldWellsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) SmallMultiplesOptions() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateSmallMultiplesOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesOptions
	}).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) SortConfiguration() TemplatePieChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplatePieChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplatePieChartSortConfigurationPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) ValueLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ValueLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplatePieChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplatePieChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplatePieChartFieldWells struct {
	PieChartAggregatedFieldWells *TemplatePieChartAggregatedFieldWells `pulumi:"pieChartAggregatedFieldWells"`
}

// TemplatePieChartFieldWellsInput is an input type that accepts TemplatePieChartFieldWellsArgs and TemplatePieChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplatePieChartFieldWellsInput` via:
//
//	TemplatePieChartFieldWellsArgs{...}
type TemplatePieChartFieldWellsInput interface {
	pulumi.Input

	ToTemplatePieChartFieldWellsOutput() TemplatePieChartFieldWellsOutput
	ToTemplatePieChartFieldWellsOutputWithContext(context.Context) TemplatePieChartFieldWellsOutput
}

type TemplatePieChartFieldWellsArgs struct {
	PieChartAggregatedFieldWells TemplatePieChartAggregatedFieldWellsPtrInput `pulumi:"pieChartAggregatedFieldWells"`
}

func (TemplatePieChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartFieldWells)(nil)).Elem()
}

func (i TemplatePieChartFieldWellsArgs) ToTemplatePieChartFieldWellsOutput() TemplatePieChartFieldWellsOutput {
	return i.ToTemplatePieChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplatePieChartFieldWellsArgs) ToTemplatePieChartFieldWellsOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartFieldWellsOutput)
}

func (i TemplatePieChartFieldWellsArgs) ToTemplatePieChartFieldWellsPtrOutput() TemplatePieChartFieldWellsPtrOutput {
	return i.ToTemplatePieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplatePieChartFieldWellsArgs) ToTemplatePieChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartFieldWellsOutput).ToTemplatePieChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplatePieChartFieldWellsPtrInput is an input type that accepts TemplatePieChartFieldWellsArgs, TemplatePieChartFieldWellsPtr and TemplatePieChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplatePieChartFieldWellsPtrInput` via:
//
//	        TemplatePieChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplatePieChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplatePieChartFieldWellsPtrOutput() TemplatePieChartFieldWellsPtrOutput
	ToTemplatePieChartFieldWellsPtrOutputWithContext(context.Context) TemplatePieChartFieldWellsPtrOutput
}

type templatePieChartFieldWellsPtrType TemplatePieChartFieldWellsArgs

func TemplatePieChartFieldWellsPtr(v *TemplatePieChartFieldWellsArgs) TemplatePieChartFieldWellsPtrInput {
	return (*templatePieChartFieldWellsPtrType)(v)
}

func (*templatePieChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartFieldWells)(nil)).Elem()
}

func (i *templatePieChartFieldWellsPtrType) ToTemplatePieChartFieldWellsPtrOutput() TemplatePieChartFieldWellsPtrOutput {
	return i.ToTemplatePieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templatePieChartFieldWellsPtrType) ToTemplatePieChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartFieldWellsPtrOutput)
}

type TemplatePieChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplatePieChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartFieldWells)(nil)).Elem()
}

func (o TemplatePieChartFieldWellsOutput) ToTemplatePieChartFieldWellsOutput() TemplatePieChartFieldWellsOutput {
	return o
}

func (o TemplatePieChartFieldWellsOutput) ToTemplatePieChartFieldWellsOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsOutput {
	return o
}

func (o TemplatePieChartFieldWellsOutput) ToTemplatePieChartFieldWellsPtrOutput() TemplatePieChartFieldWellsPtrOutput {
	return o.ToTemplatePieChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplatePieChartFieldWellsOutput) ToTemplatePieChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePieChartFieldWells) *TemplatePieChartFieldWells {
		return &v
	}).(TemplatePieChartFieldWellsPtrOutput)
}

func (o TemplatePieChartFieldWellsOutput) PieChartAggregatedFieldWells() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartFieldWells) *TemplatePieChartAggregatedFieldWells {
		return v.PieChartAggregatedFieldWells
	}).(TemplatePieChartAggregatedFieldWellsPtrOutput)
}

type TemplatePieChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePieChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartFieldWells)(nil)).Elem()
}

func (o TemplatePieChartFieldWellsPtrOutput) ToTemplatePieChartFieldWellsPtrOutput() TemplatePieChartFieldWellsPtrOutput {
	return o
}

func (o TemplatePieChartFieldWellsPtrOutput) ToTemplatePieChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePieChartFieldWellsPtrOutput {
	return o
}

func (o TemplatePieChartFieldWellsPtrOutput) Elem() TemplatePieChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplatePieChartFieldWells) TemplatePieChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplatePieChartFieldWells
		return ret
	}).(TemplatePieChartFieldWellsOutput)
}

func (o TemplatePieChartFieldWellsPtrOutput) PieChartAggregatedFieldWells() TemplatePieChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartFieldWells) *TemplatePieChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PieChartAggregatedFieldWells
	}).(TemplatePieChartAggregatedFieldWellsPtrOutput)
}

type TemplatePieChartSortConfiguration struct {
	CategoryItemsLimit               *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort                     []TemplateFieldSortOptions       `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               []TemplateFieldSortOptions       `pulumi:"smallMultiplesSort"`
}

// TemplatePieChartSortConfigurationInput is an input type that accepts TemplatePieChartSortConfigurationArgs and TemplatePieChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplatePieChartSortConfigurationInput` via:
//
//	TemplatePieChartSortConfigurationArgs{...}
type TemplatePieChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplatePieChartSortConfigurationOutput() TemplatePieChartSortConfigurationOutput
	ToTemplatePieChartSortConfigurationOutputWithContext(context.Context) TemplatePieChartSortConfigurationOutput
}

type TemplatePieChartSortConfigurationArgs struct {
	CategoryItemsLimit               TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort                     TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	SmallMultiplesLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"smallMultiplesLimitConfiguration"`
	SmallMultiplesSort               TemplateFieldSortOptionsArrayInput      `pulumi:"smallMultiplesSort"`
}

func (TemplatePieChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartSortConfiguration)(nil)).Elem()
}

func (i TemplatePieChartSortConfigurationArgs) ToTemplatePieChartSortConfigurationOutput() TemplatePieChartSortConfigurationOutput {
	return i.ToTemplatePieChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplatePieChartSortConfigurationArgs) ToTemplatePieChartSortConfigurationOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartSortConfigurationOutput)
}

func (i TemplatePieChartSortConfigurationArgs) ToTemplatePieChartSortConfigurationPtrOutput() TemplatePieChartSortConfigurationPtrOutput {
	return i.ToTemplatePieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePieChartSortConfigurationArgs) ToTemplatePieChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartSortConfigurationOutput).ToTemplatePieChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplatePieChartSortConfigurationPtrInput is an input type that accepts TemplatePieChartSortConfigurationArgs, TemplatePieChartSortConfigurationPtr and TemplatePieChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePieChartSortConfigurationPtrInput` via:
//
//	        TemplatePieChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePieChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePieChartSortConfigurationPtrOutput() TemplatePieChartSortConfigurationPtrOutput
	ToTemplatePieChartSortConfigurationPtrOutputWithContext(context.Context) TemplatePieChartSortConfigurationPtrOutput
}

type templatePieChartSortConfigurationPtrType TemplatePieChartSortConfigurationArgs

func TemplatePieChartSortConfigurationPtr(v *TemplatePieChartSortConfigurationArgs) TemplatePieChartSortConfigurationPtrInput {
	return (*templatePieChartSortConfigurationPtrType)(v)
}

func (*templatePieChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartSortConfiguration)(nil)).Elem()
}

func (i *templatePieChartSortConfigurationPtrType) ToTemplatePieChartSortConfigurationPtrOutput() TemplatePieChartSortConfigurationPtrOutput {
	return i.ToTemplatePieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePieChartSortConfigurationPtrType) ToTemplatePieChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartSortConfigurationPtrOutput)
}

type TemplatePieChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePieChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartSortConfiguration)(nil)).Elem()
}

func (o TemplatePieChartSortConfigurationOutput) ToTemplatePieChartSortConfigurationOutput() TemplatePieChartSortConfigurationOutput {
	return o
}

func (o TemplatePieChartSortConfigurationOutput) ToTemplatePieChartSortConfigurationOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationOutput {
	return o
}

func (o TemplatePieChartSortConfigurationOutput) ToTemplatePieChartSortConfigurationPtrOutput() TemplatePieChartSortConfigurationPtrOutput {
	return o.ToTemplatePieChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePieChartSortConfigurationOutput) ToTemplatePieChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePieChartSortConfiguration) *TemplatePieChartSortConfiguration {
		return &v
	}).(TemplatePieChartSortConfigurationPtrOutput)
}

func (o TemplatePieChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePieChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplatePieChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplatePieChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplatePieChartSortConfigurationOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePieChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplatePieChartSortConfigurationOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplatePieChartSortConfiguration) []TemplateFieldSortOptions { return v.SmallMultiplesSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplatePieChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePieChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartSortConfiguration)(nil)).Elem()
}

func (o TemplatePieChartSortConfigurationPtrOutput) ToTemplatePieChartSortConfigurationPtrOutput() TemplatePieChartSortConfigurationPtrOutput {
	return o
}

func (o TemplatePieChartSortConfigurationPtrOutput) ToTemplatePieChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePieChartSortConfigurationPtrOutput {
	return o
}

func (o TemplatePieChartSortConfigurationPtrOutput) Elem() TemplatePieChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplatePieChartSortConfiguration) TemplatePieChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePieChartSortConfiguration
		return ret
	}).(TemplatePieChartSortConfigurationOutput)
}

func (o TemplatePieChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplatePieChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplatePieChartSortConfigurationPtrOutput) SmallMultiplesLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplatePieChartSortConfigurationPtrOutput) SmallMultiplesSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.SmallMultiplesSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplatePieChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplatePieChartConfiguration      `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplatePieChartVisualInput is an input type that accepts TemplatePieChartVisualArgs and TemplatePieChartVisualOutput values.
// You can construct a concrete instance of `TemplatePieChartVisualInput` via:
//
//	TemplatePieChartVisualArgs{...}
type TemplatePieChartVisualInput interface {
	pulumi.Input

	ToTemplatePieChartVisualOutput() TemplatePieChartVisualOutput
	ToTemplatePieChartVisualOutputWithContext(context.Context) TemplatePieChartVisualOutput
}

type TemplatePieChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplatePieChartConfigurationPtrInput      `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplatePieChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartVisual)(nil)).Elem()
}

func (i TemplatePieChartVisualArgs) ToTemplatePieChartVisualOutput() TemplatePieChartVisualOutput {
	return i.ToTemplatePieChartVisualOutputWithContext(context.Background())
}

func (i TemplatePieChartVisualArgs) ToTemplatePieChartVisualOutputWithContext(ctx context.Context) TemplatePieChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartVisualOutput)
}

func (i TemplatePieChartVisualArgs) ToTemplatePieChartVisualPtrOutput() TemplatePieChartVisualPtrOutput {
	return i.ToTemplatePieChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplatePieChartVisualArgs) ToTemplatePieChartVisualPtrOutputWithContext(ctx context.Context) TemplatePieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartVisualOutput).ToTemplatePieChartVisualPtrOutputWithContext(ctx)
}

// TemplatePieChartVisualPtrInput is an input type that accepts TemplatePieChartVisualArgs, TemplatePieChartVisualPtr and TemplatePieChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplatePieChartVisualPtrInput` via:
//
//	        TemplatePieChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplatePieChartVisualPtrInput interface {
	pulumi.Input

	ToTemplatePieChartVisualPtrOutput() TemplatePieChartVisualPtrOutput
	ToTemplatePieChartVisualPtrOutputWithContext(context.Context) TemplatePieChartVisualPtrOutput
}

type templatePieChartVisualPtrType TemplatePieChartVisualArgs

func TemplatePieChartVisualPtr(v *TemplatePieChartVisualArgs) TemplatePieChartVisualPtrInput {
	return (*templatePieChartVisualPtrType)(v)
}

func (*templatePieChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartVisual)(nil)).Elem()
}

func (i *templatePieChartVisualPtrType) ToTemplatePieChartVisualPtrOutput() TemplatePieChartVisualPtrOutput {
	return i.ToTemplatePieChartVisualPtrOutputWithContext(context.Background())
}

func (i *templatePieChartVisualPtrType) ToTemplatePieChartVisualPtrOutputWithContext(ctx context.Context) TemplatePieChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePieChartVisualPtrOutput)
}

type TemplatePieChartVisualOutput struct{ *pulumi.OutputState }

func (TemplatePieChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePieChartVisual)(nil)).Elem()
}

func (o TemplatePieChartVisualOutput) ToTemplatePieChartVisualOutput() TemplatePieChartVisualOutput {
	return o
}

func (o TemplatePieChartVisualOutput) ToTemplatePieChartVisualOutputWithContext(ctx context.Context) TemplatePieChartVisualOutput {
	return o
}

func (o TemplatePieChartVisualOutput) ToTemplatePieChartVisualPtrOutput() TemplatePieChartVisualPtrOutput {
	return o.ToTemplatePieChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplatePieChartVisualOutput) ToTemplatePieChartVisualPtrOutputWithContext(ctx context.Context) TemplatePieChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePieChartVisual) *TemplatePieChartVisual {
		return &v
	}).(TemplatePieChartVisualPtrOutput)
}

func (o TemplatePieChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplatePieChartVisualOutput) ChartConfiguration() TemplatePieChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) *TemplatePieChartConfiguration { return v.ChartConfiguration }).(TemplatePieChartConfigurationPtrOutput)
}

func (o TemplatePieChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplatePieChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplatePieChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplatePieChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePieChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplatePieChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplatePieChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePieChartVisual)(nil)).Elem()
}

func (o TemplatePieChartVisualPtrOutput) ToTemplatePieChartVisualPtrOutput() TemplatePieChartVisualPtrOutput {
	return o
}

func (o TemplatePieChartVisualPtrOutput) ToTemplatePieChartVisualPtrOutputWithContext(ctx context.Context) TemplatePieChartVisualPtrOutput {
	return o
}

func (o TemplatePieChartVisualPtrOutput) Elem() TemplatePieChartVisualOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) TemplatePieChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplatePieChartVisual
		return ret
	}).(TemplatePieChartVisualOutput)
}

func (o TemplatePieChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplatePieChartVisualPtrOutput) ChartConfiguration() TemplatePieChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) *TemplatePieChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplatePieChartConfigurationPtrOutput)
}

func (o TemplatePieChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplatePieChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplatePieChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplatePieChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePieChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotFieldSortOptions struct {
	FieldId string                   `pulumi:"fieldId"`
	SortBy  TemplatePivotTableSortBy `pulumi:"sortBy"`
}

// TemplatePivotFieldSortOptionsInput is an input type that accepts TemplatePivotFieldSortOptionsArgs and TemplatePivotFieldSortOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotFieldSortOptionsInput` via:
//
//	TemplatePivotFieldSortOptionsArgs{...}
type TemplatePivotFieldSortOptionsInput interface {
	pulumi.Input

	ToTemplatePivotFieldSortOptionsOutput() TemplatePivotFieldSortOptionsOutput
	ToTemplatePivotFieldSortOptionsOutputWithContext(context.Context) TemplatePivotFieldSortOptionsOutput
}

type TemplatePivotFieldSortOptionsArgs struct {
	FieldId pulumi.StringInput            `pulumi:"fieldId"`
	SortBy  TemplatePivotTableSortByInput `pulumi:"sortBy"`
}

func (TemplatePivotFieldSortOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotFieldSortOptions)(nil)).Elem()
}

func (i TemplatePivotFieldSortOptionsArgs) ToTemplatePivotFieldSortOptionsOutput() TemplatePivotFieldSortOptionsOutput {
	return i.ToTemplatePivotFieldSortOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotFieldSortOptionsArgs) ToTemplatePivotFieldSortOptionsOutputWithContext(ctx context.Context) TemplatePivotFieldSortOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotFieldSortOptionsOutput)
}

// TemplatePivotFieldSortOptionsArrayInput is an input type that accepts TemplatePivotFieldSortOptionsArray and TemplatePivotFieldSortOptionsArrayOutput values.
// You can construct a concrete instance of `TemplatePivotFieldSortOptionsArrayInput` via:
//
//	TemplatePivotFieldSortOptionsArray{ TemplatePivotFieldSortOptionsArgs{...} }
type TemplatePivotFieldSortOptionsArrayInput interface {
	pulumi.Input

	ToTemplatePivotFieldSortOptionsArrayOutput() TemplatePivotFieldSortOptionsArrayOutput
	ToTemplatePivotFieldSortOptionsArrayOutputWithContext(context.Context) TemplatePivotFieldSortOptionsArrayOutput
}

type TemplatePivotFieldSortOptionsArray []TemplatePivotFieldSortOptionsInput

func (TemplatePivotFieldSortOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotFieldSortOptions)(nil)).Elem()
}

func (i TemplatePivotFieldSortOptionsArray) ToTemplatePivotFieldSortOptionsArrayOutput() TemplatePivotFieldSortOptionsArrayOutput {
	return i.ToTemplatePivotFieldSortOptionsArrayOutputWithContext(context.Background())
}

func (i TemplatePivotFieldSortOptionsArray) ToTemplatePivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) TemplatePivotFieldSortOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotFieldSortOptionsArrayOutput)
}

type TemplatePivotFieldSortOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotFieldSortOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotFieldSortOptions)(nil)).Elem()
}

func (o TemplatePivotFieldSortOptionsOutput) ToTemplatePivotFieldSortOptionsOutput() TemplatePivotFieldSortOptionsOutput {
	return o
}

func (o TemplatePivotFieldSortOptionsOutput) ToTemplatePivotFieldSortOptionsOutputWithContext(ctx context.Context) TemplatePivotFieldSortOptionsOutput {
	return o
}

func (o TemplatePivotFieldSortOptionsOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePivotFieldSortOptions) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplatePivotFieldSortOptionsOutput) SortBy() TemplatePivotTableSortByOutput {
	return o.ApplyT(func(v TemplatePivotFieldSortOptions) TemplatePivotTableSortBy { return v.SortBy }).(TemplatePivotTableSortByOutput)
}

type TemplatePivotFieldSortOptionsArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotFieldSortOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotFieldSortOptions)(nil)).Elem()
}

func (o TemplatePivotFieldSortOptionsArrayOutput) ToTemplatePivotFieldSortOptionsArrayOutput() TemplatePivotFieldSortOptionsArrayOutput {
	return o
}

func (o TemplatePivotFieldSortOptionsArrayOutput) ToTemplatePivotFieldSortOptionsArrayOutputWithContext(ctx context.Context) TemplatePivotFieldSortOptionsArrayOutput {
	return o
}

func (o TemplatePivotFieldSortOptionsArrayOutput) Index(i pulumi.IntInput) TemplatePivotFieldSortOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotFieldSortOptions {
		return vs[0].([]TemplatePivotFieldSortOptions)[vs[1].(int)]
	}).(TemplatePivotFieldSortOptionsOutput)
}

type TemplatePivotTableAggregatedFieldWells struct {
	Columns []TemplateDimensionField `pulumi:"columns"`
	Rows    []TemplateDimensionField `pulumi:"rows"`
	Values  []TemplateMeasureField   `pulumi:"values"`
}

// TemplatePivotTableAggregatedFieldWellsInput is an input type that accepts TemplatePivotTableAggregatedFieldWellsArgs and TemplatePivotTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplatePivotTableAggregatedFieldWellsInput` via:
//
//	TemplatePivotTableAggregatedFieldWellsArgs{...}
type TemplatePivotTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplatePivotTableAggregatedFieldWellsOutput() TemplatePivotTableAggregatedFieldWellsOutput
	ToTemplatePivotTableAggregatedFieldWellsOutputWithContext(context.Context) TemplatePivotTableAggregatedFieldWellsOutput
}

type TemplatePivotTableAggregatedFieldWellsArgs struct {
	Columns TemplateDimensionFieldArrayInput `pulumi:"columns"`
	Rows    TemplateDimensionFieldArrayInput `pulumi:"rows"`
	Values  TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplatePivotTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i TemplatePivotTableAggregatedFieldWellsArgs) ToTemplatePivotTableAggregatedFieldWellsOutput() TemplatePivotTableAggregatedFieldWellsOutput {
	return i.ToTemplatePivotTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplatePivotTableAggregatedFieldWellsArgs) ToTemplatePivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableAggregatedFieldWellsOutput)
}

func (i TemplatePivotTableAggregatedFieldWellsArgs) ToTemplatePivotTableAggregatedFieldWellsPtrOutput() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return i.ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableAggregatedFieldWellsArgs) ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableAggregatedFieldWellsOutput).ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplatePivotTableAggregatedFieldWellsPtrInput is an input type that accepts TemplatePivotTableAggregatedFieldWellsArgs, TemplatePivotTableAggregatedFieldWellsPtr and TemplatePivotTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableAggregatedFieldWellsPtrInput` via:
//
//	        TemplatePivotTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableAggregatedFieldWellsPtrOutput() TemplatePivotTableAggregatedFieldWellsPtrOutput
	ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplatePivotTableAggregatedFieldWellsPtrOutput
}

type templatePivotTableAggregatedFieldWellsPtrType TemplatePivotTableAggregatedFieldWellsArgs

func TemplatePivotTableAggregatedFieldWellsPtr(v *TemplatePivotTableAggregatedFieldWellsArgs) TemplatePivotTableAggregatedFieldWellsPtrInput {
	return (*templatePivotTableAggregatedFieldWellsPtrType)(v)
}

func (*templatePivotTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableAggregatedFieldWells)(nil)).Elem()
}

func (i *templatePivotTableAggregatedFieldWellsPtrType) ToTemplatePivotTableAggregatedFieldWellsPtrOutput() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return i.ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableAggregatedFieldWellsPtrType) ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableAggregatedFieldWellsPtrOutput)
}

type TemplatePivotTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) ToTemplatePivotTableAggregatedFieldWellsOutput() TemplatePivotTableAggregatedFieldWellsOutput {
	return o
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) ToTemplatePivotTableAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsOutput {
	return o
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) ToTemplatePivotTableAggregatedFieldWellsPtrOutput() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o.ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableAggregatedFieldWells) *TemplatePivotTableAggregatedFieldWells {
		return &v
	}).(TemplatePivotTableAggregatedFieldWellsPtrOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) Columns() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableAggregatedFieldWells) []TemplateDimensionField { return v.Columns }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) Rows() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableAggregatedFieldWells) []TemplateDimensionField { return v.Rows }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplatePivotTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableAggregatedFieldWells)(nil)).Elem()
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) ToTemplatePivotTableAggregatedFieldWellsPtrOutput() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) ToTemplatePivotTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) Elem() TemplatePivotTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplatePivotTableAggregatedFieldWells) TemplatePivotTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableAggregatedFieldWells
		return ret
	}).(TemplatePivotTableAggregatedFieldWellsOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) Columns() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) Rows() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplatePivotTableAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplatePivotTableCellConditionalFormatting struct {
	FieldId    string                                         `pulumi:"fieldId"`
	Scope      *TemplatePivotTableConditionalFormattingScope  `pulumi:"scope"`
	Scopes     []TemplatePivotTableConditionalFormattingScope `pulumi:"scopes"`
	TextFormat *TemplateTextConditionalFormat                 `pulumi:"textFormat"`
}

// TemplatePivotTableCellConditionalFormattingInput is an input type that accepts TemplatePivotTableCellConditionalFormattingArgs and TemplatePivotTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplatePivotTableCellConditionalFormattingInput` via:
//
//	TemplatePivotTableCellConditionalFormattingArgs{...}
type TemplatePivotTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToTemplatePivotTableCellConditionalFormattingOutput() TemplatePivotTableCellConditionalFormattingOutput
	ToTemplatePivotTableCellConditionalFormattingOutputWithContext(context.Context) TemplatePivotTableCellConditionalFormattingOutput
}

type TemplatePivotTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                                     `pulumi:"fieldId"`
	Scope      TemplatePivotTableConditionalFormattingScopePtrInput   `pulumi:"scope"`
	Scopes     TemplatePivotTableConditionalFormattingScopeArrayInput `pulumi:"scopes"`
	TextFormat TemplateTextConditionalFormatPtrInput                  `pulumi:"textFormat"`
}

func (TemplatePivotTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i TemplatePivotTableCellConditionalFormattingArgs) ToTemplatePivotTableCellConditionalFormattingOutput() TemplatePivotTableCellConditionalFormattingOutput {
	return i.ToTemplatePivotTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplatePivotTableCellConditionalFormattingArgs) ToTemplatePivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableCellConditionalFormattingOutput)
}

func (i TemplatePivotTableCellConditionalFormattingArgs) ToTemplatePivotTableCellConditionalFormattingPtrOutput() TemplatePivotTableCellConditionalFormattingPtrOutput {
	return i.ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableCellConditionalFormattingArgs) ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableCellConditionalFormattingOutput).ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplatePivotTableCellConditionalFormattingPtrInput is an input type that accepts TemplatePivotTableCellConditionalFormattingArgs, TemplatePivotTableCellConditionalFormattingPtr and TemplatePivotTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableCellConditionalFormattingPtrInput` via:
//
//	        TemplatePivotTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableCellConditionalFormattingPtrOutput() TemplatePivotTableCellConditionalFormattingPtrOutput
	ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(context.Context) TemplatePivotTableCellConditionalFormattingPtrOutput
}

type templatePivotTableCellConditionalFormattingPtrType TemplatePivotTableCellConditionalFormattingArgs

func TemplatePivotTableCellConditionalFormattingPtr(v *TemplatePivotTableCellConditionalFormattingArgs) TemplatePivotTableCellConditionalFormattingPtrInput {
	return (*templatePivotTableCellConditionalFormattingPtrType)(v)
}

func (*templatePivotTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableCellConditionalFormatting)(nil)).Elem()
}

func (i *templatePivotTableCellConditionalFormattingPtrType) ToTemplatePivotTableCellConditionalFormattingPtrOutput() TemplatePivotTableCellConditionalFormattingPtrOutput {
	return i.ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableCellConditionalFormattingPtrType) ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableCellConditionalFormattingPtrOutput)
}

type TemplatePivotTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o TemplatePivotTableCellConditionalFormattingOutput) ToTemplatePivotTableCellConditionalFormattingOutput() TemplatePivotTableCellConditionalFormattingOutput {
	return o
}

func (o TemplatePivotTableCellConditionalFormattingOutput) ToTemplatePivotTableCellConditionalFormattingOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingOutput {
	return o
}

func (o TemplatePivotTableCellConditionalFormattingOutput) ToTemplatePivotTableCellConditionalFormattingPtrOutput() TemplatePivotTableCellConditionalFormattingPtrOutput {
	return o.ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableCellConditionalFormattingOutput) ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableCellConditionalFormatting) *TemplatePivotTableCellConditionalFormatting {
		return &v
	}).(TemplatePivotTableCellConditionalFormattingPtrOutput)
}

func (o TemplatePivotTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePivotTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplatePivotTableCellConditionalFormattingOutput) Scope() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableCellConditionalFormatting) *TemplatePivotTableConditionalFormattingScope {
		return v.Scope
	}).(TemplatePivotTableConditionalFormattingScopePtrOutput)
}

func (o TemplatePivotTableCellConditionalFormattingOutput) Scopes() TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableCellConditionalFormatting) []TemplatePivotTableConditionalFormattingScope {
		return v.Scopes
	}).(TemplatePivotTableConditionalFormattingScopeArrayOutput)
}

func (o TemplatePivotTableCellConditionalFormattingOutput) TextFormat() TemplateTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableCellConditionalFormatting) *TemplateTextConditionalFormat {
		return v.TextFormat
	}).(TemplateTextConditionalFormatPtrOutput)
}

type TemplatePivotTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableCellConditionalFormatting)(nil)).Elem()
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) ToTemplatePivotTableCellConditionalFormattingPtrOutput() TemplatePivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) ToTemplatePivotTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableCellConditionalFormattingPtrOutput {
	return o
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) Elem() TemplatePivotTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplatePivotTableCellConditionalFormatting) TemplatePivotTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableCellConditionalFormatting
		return ret
	}).(TemplatePivotTableCellConditionalFormattingOutput)
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) Scope() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableCellConditionalFormatting) *TemplatePivotTableConditionalFormattingScope {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(TemplatePivotTableConditionalFormattingScopePtrOutput)
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) Scopes() TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableCellConditionalFormatting) []TemplatePivotTableConditionalFormattingScope {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(TemplatePivotTableConditionalFormattingScopeArrayOutput)
}

func (o TemplatePivotTableCellConditionalFormattingPtrOutput) TextFormat() TemplateTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableCellConditionalFormatting) *TemplateTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(TemplateTextConditionalFormatPtrOutput)
}

type TemplatePivotTableConditionalFormatting struct {
	ConditionalFormattingOptions []TemplatePivotTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// TemplatePivotTableConditionalFormattingInput is an input type that accepts TemplatePivotTableConditionalFormattingArgs and TemplatePivotTableConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingInput` via:
//
//	TemplatePivotTableConditionalFormattingArgs{...}
type TemplatePivotTableConditionalFormattingInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingOutput() TemplatePivotTableConditionalFormattingOutput
	ToTemplatePivotTableConditionalFormattingOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingOutput
}

type TemplatePivotTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions TemplatePivotTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (TemplatePivotTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormatting)(nil)).Elem()
}

func (i TemplatePivotTableConditionalFormattingArgs) ToTemplatePivotTableConditionalFormattingOutput() TemplatePivotTableConditionalFormattingOutput {
	return i.ToTemplatePivotTableConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingArgs) ToTemplatePivotTableConditionalFormattingOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingOutput)
}

func (i TemplatePivotTableConditionalFormattingArgs) ToTemplatePivotTableConditionalFormattingPtrOutput() TemplatePivotTableConditionalFormattingPtrOutput {
	return i.ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingArgs) ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingOutput).ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplatePivotTableConditionalFormattingPtrInput is an input type that accepts TemplatePivotTableConditionalFormattingArgs, TemplatePivotTableConditionalFormattingPtr and TemplatePivotTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingPtrInput` via:
//
//	        TemplatePivotTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingPtrOutput() TemplatePivotTableConditionalFormattingPtrOutput
	ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingPtrOutput
}

type templatePivotTableConditionalFormattingPtrType TemplatePivotTableConditionalFormattingArgs

func TemplatePivotTableConditionalFormattingPtr(v *TemplatePivotTableConditionalFormattingArgs) TemplatePivotTableConditionalFormattingPtrInput {
	return (*templatePivotTableConditionalFormattingPtrType)(v)
}

func (*templatePivotTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConditionalFormatting)(nil)).Elem()
}

func (i *templatePivotTableConditionalFormattingPtrType) ToTemplatePivotTableConditionalFormattingPtrOutput() TemplatePivotTableConditionalFormattingPtrOutput {
	return i.ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableConditionalFormattingPtrType) ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingPtrOutput)
}

type TemplatePivotTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormatting)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingOutput) ToTemplatePivotTableConditionalFormattingOutput() TemplatePivotTableConditionalFormattingOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOutput) ToTemplatePivotTableConditionalFormattingOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOutput) ToTemplatePivotTableConditionalFormattingPtrOutput() TemplatePivotTableConditionalFormattingPtrOutput {
	return o.ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingOutput) ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableConditionalFormatting) *TemplatePivotTableConditionalFormatting {
		return &v
	}).(TemplatePivotTableConditionalFormattingPtrOutput)
}

func (o TemplatePivotTableConditionalFormattingOutput) ConditionalFormattingOptions() TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableConditionalFormatting) []TemplatePivotTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(TemplatePivotTableConditionalFormattingOptionArrayOutput)
}

type TemplatePivotTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConditionalFormatting)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingPtrOutput) ToTemplatePivotTableConditionalFormattingPtrOutput() TemplatePivotTableConditionalFormattingPtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingPtrOutput) ToTemplatePivotTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingPtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingPtrOutput) Elem() TemplatePivotTableConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplatePivotTableConditionalFormatting) TemplatePivotTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableConditionalFormatting
		return ret
	}).(TemplatePivotTableConditionalFormattingOutput)
}

func (o TemplatePivotTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableConditionalFormatting) []TemplatePivotTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(TemplatePivotTableConditionalFormattingOptionArrayOutput)
}

type TemplatePivotTableConditionalFormattingOption struct {
	Cell *TemplatePivotTableCellConditionalFormatting `pulumi:"cell"`
}

// TemplatePivotTableConditionalFormattingOptionInput is an input type that accepts TemplatePivotTableConditionalFormattingOptionArgs and TemplatePivotTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingOptionInput` via:
//
//	TemplatePivotTableConditionalFormattingOptionArgs{...}
type TemplatePivotTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingOptionOutput() TemplatePivotTableConditionalFormattingOptionOutput
	ToTemplatePivotTableConditionalFormattingOptionOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingOptionOutput
}

type TemplatePivotTableConditionalFormattingOptionArgs struct {
	Cell TemplatePivotTableCellConditionalFormattingPtrInput `pulumi:"cell"`
}

func (TemplatePivotTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i TemplatePivotTableConditionalFormattingOptionArgs) ToTemplatePivotTableConditionalFormattingOptionOutput() TemplatePivotTableConditionalFormattingOptionOutput {
	return i.ToTemplatePivotTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingOptionArgs) ToTemplatePivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingOptionOutput)
}

// TemplatePivotTableConditionalFormattingOptionArrayInput is an input type that accepts TemplatePivotTableConditionalFormattingOptionArray and TemplatePivotTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingOptionArrayInput` via:
//
//	TemplatePivotTableConditionalFormattingOptionArray{ TemplatePivotTableConditionalFormattingOptionArgs{...} }
type TemplatePivotTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingOptionArrayOutput() TemplatePivotTableConditionalFormattingOptionArrayOutput
	ToTemplatePivotTableConditionalFormattingOptionArrayOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingOptionArrayOutput
}

type TemplatePivotTableConditionalFormattingOptionArray []TemplatePivotTableConditionalFormattingOptionInput

func (TemplatePivotTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableConditionalFormattingOption)(nil)).Elem()
}

func (i TemplatePivotTableConditionalFormattingOptionArray) ToTemplatePivotTableConditionalFormattingOptionArrayOutput() TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return i.ToTemplatePivotTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingOptionArray) ToTemplatePivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingOptionArrayOutput)
}

type TemplatePivotTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingOptionOutput) ToTemplatePivotTableConditionalFormattingOptionOutput() TemplatePivotTableConditionalFormattingOptionOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOptionOutput) ToTemplatePivotTableConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOptionOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOptionOutput) Cell() TemplatePivotTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConditionalFormattingOption) *TemplatePivotTableCellConditionalFormatting {
		return v.Cell
	}).(TemplatePivotTableCellConditionalFormattingPtrOutput)
}

type TemplatePivotTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableConditionalFormattingOption)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingOptionArrayOutput) ToTemplatePivotTableConditionalFormattingOptionArrayOutput() TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOptionArrayOutput) ToTemplatePivotTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableConditionalFormattingOption {
		return vs[0].([]TemplatePivotTableConditionalFormattingOption)[vs[1].(int)]
	}).(TemplatePivotTableConditionalFormattingOptionOutput)
}

type TemplatePivotTableConditionalFormattingScope struct {
	Role *TemplatePivotTableConditionalFormattingScopeRole `pulumi:"role"`
}

// TemplatePivotTableConditionalFormattingScopeInput is an input type that accepts TemplatePivotTableConditionalFormattingScopeArgs and TemplatePivotTableConditionalFormattingScopeOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingScopeInput` via:
//
//	TemplatePivotTableConditionalFormattingScopeArgs{...}
type TemplatePivotTableConditionalFormattingScopeInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingScopeOutput() TemplatePivotTableConditionalFormattingScopeOutput
	ToTemplatePivotTableConditionalFormattingScopeOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingScopeOutput
}

type TemplatePivotTableConditionalFormattingScopeArgs struct {
	Role TemplatePivotTableConditionalFormattingScopeRolePtrInput `pulumi:"role"`
}

func (TemplatePivotTableConditionalFormattingScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i TemplatePivotTableConditionalFormattingScopeArgs) ToTemplatePivotTableConditionalFormattingScopeOutput() TemplatePivotTableConditionalFormattingScopeOutput {
	return i.ToTemplatePivotTableConditionalFormattingScopeOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingScopeArgs) ToTemplatePivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingScopeOutput)
}

func (i TemplatePivotTableConditionalFormattingScopeArgs) ToTemplatePivotTableConditionalFormattingScopePtrOutput() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return i.ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingScopeArgs) ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingScopeOutput).ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(ctx)
}

// TemplatePivotTableConditionalFormattingScopePtrInput is an input type that accepts TemplatePivotTableConditionalFormattingScopeArgs, TemplatePivotTableConditionalFormattingScopePtr and TemplatePivotTableConditionalFormattingScopePtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingScopePtrInput` via:
//
//	        TemplatePivotTableConditionalFormattingScopeArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableConditionalFormattingScopePtrInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingScopePtrOutput() TemplatePivotTableConditionalFormattingScopePtrOutput
	ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingScopePtrOutput
}

type templatePivotTableConditionalFormattingScopePtrType TemplatePivotTableConditionalFormattingScopeArgs

func TemplatePivotTableConditionalFormattingScopePtr(v *TemplatePivotTableConditionalFormattingScopeArgs) TemplatePivotTableConditionalFormattingScopePtrInput {
	return (*templatePivotTableConditionalFormattingScopePtrType)(v)
}

func (*templatePivotTableConditionalFormattingScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i *templatePivotTableConditionalFormattingScopePtrType) ToTemplatePivotTableConditionalFormattingScopePtrOutput() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return i.ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (i *templatePivotTableConditionalFormattingScopePtrType) ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingScopePtrOutput)
}

// TemplatePivotTableConditionalFormattingScopeArrayInput is an input type that accepts TemplatePivotTableConditionalFormattingScopeArray and TemplatePivotTableConditionalFormattingScopeArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableConditionalFormattingScopeArrayInput` via:
//
//	TemplatePivotTableConditionalFormattingScopeArray{ TemplatePivotTableConditionalFormattingScopeArgs{...} }
type TemplatePivotTableConditionalFormattingScopeArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableConditionalFormattingScopeArrayOutput() TemplatePivotTableConditionalFormattingScopeArrayOutput
	ToTemplatePivotTableConditionalFormattingScopeArrayOutputWithContext(context.Context) TemplatePivotTableConditionalFormattingScopeArrayOutput
}

type TemplatePivotTableConditionalFormattingScopeArray []TemplatePivotTableConditionalFormattingScopeInput

func (TemplatePivotTableConditionalFormattingScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (i TemplatePivotTableConditionalFormattingScopeArray) ToTemplatePivotTableConditionalFormattingScopeArrayOutput() TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return i.ToTemplatePivotTableConditionalFormattingScopeArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableConditionalFormattingScopeArray) ToTemplatePivotTableConditionalFormattingScopeArrayOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConditionalFormattingScopeArrayOutput)
}

type TemplatePivotTableConditionalFormattingScopeOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingScopeOutput) ToTemplatePivotTableConditionalFormattingScopeOutput() TemplatePivotTableConditionalFormattingScopeOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeOutput) ToTemplatePivotTableConditionalFormattingScopeOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeOutput) ToTemplatePivotTableConditionalFormattingScopePtrOutput() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o.ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConditionalFormattingScopeOutput) ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableConditionalFormattingScope) *TemplatePivotTableConditionalFormattingScope {
		return &v
	}).(TemplatePivotTableConditionalFormattingScopePtrOutput)
}

func (o TemplatePivotTableConditionalFormattingScopeOutput) Role() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConditionalFormattingScope) *TemplatePivotTableConditionalFormattingScopeRole {
		return v.Role
	}).(TemplatePivotTableConditionalFormattingScopeRolePtrOutput)
}

type TemplatePivotTableConditionalFormattingScopePtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingScopePtrOutput) ToTemplatePivotTableConditionalFormattingScopePtrOutput() TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopePtrOutput) ToTemplatePivotTableConditionalFormattingScopePtrOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopePtrOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopePtrOutput) Elem() TemplatePivotTableConditionalFormattingScopeOutput {
	return o.ApplyT(func(v *TemplatePivotTableConditionalFormattingScope) TemplatePivotTableConditionalFormattingScope {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableConditionalFormattingScope
		return ret
	}).(TemplatePivotTableConditionalFormattingScopeOutput)
}

func (o TemplatePivotTableConditionalFormattingScopePtrOutput) Role() TemplatePivotTableConditionalFormattingScopeRolePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConditionalFormattingScope) *TemplatePivotTableConditionalFormattingScopeRole {
		if v == nil {
			return nil
		}
		return v.Role
	}).(TemplatePivotTableConditionalFormattingScopeRolePtrOutput)
}

type TemplatePivotTableConditionalFormattingScopeArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConditionalFormattingScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableConditionalFormattingScope)(nil)).Elem()
}

func (o TemplatePivotTableConditionalFormattingScopeArrayOutput) ToTemplatePivotTableConditionalFormattingScopeArrayOutput() TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeArrayOutput) ToTemplatePivotTableConditionalFormattingScopeArrayOutputWithContext(ctx context.Context) TemplatePivotTableConditionalFormattingScopeArrayOutput {
	return o
}

func (o TemplatePivotTableConditionalFormattingScopeArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableConditionalFormattingScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableConditionalFormattingScope {
		return vs[0].([]TemplatePivotTableConditionalFormattingScope)[vs[1].(int)]
	}).(TemplatePivotTableConditionalFormattingScopeOutput)
}

type TemplatePivotTableConfiguration struct {
	FieldOptions           *TemplatePivotTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells             *TemplatePivotTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions *TemplatePivotTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration      *TemplatePivotTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableOptions           *TemplatePivotTableOptions                `pulumi:"tableOptions"`
	TotalOptions           *TemplatePivotTableTotalOptions           `pulumi:"totalOptions"`
}

// TemplatePivotTableConfigurationInput is an input type that accepts TemplatePivotTableConfigurationArgs and TemplatePivotTableConfigurationOutput values.
// You can construct a concrete instance of `TemplatePivotTableConfigurationInput` via:
//
//	TemplatePivotTableConfigurationArgs{...}
type TemplatePivotTableConfigurationInput interface {
	pulumi.Input

	ToTemplatePivotTableConfigurationOutput() TemplatePivotTableConfigurationOutput
	ToTemplatePivotTableConfigurationOutputWithContext(context.Context) TemplatePivotTableConfigurationOutput
}

type TemplatePivotTableConfigurationArgs struct {
	FieldOptions           TemplatePivotTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells             TemplatePivotTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions TemplatePivotTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration      TemplatePivotTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableOptions           TemplatePivotTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions           TemplatePivotTableTotalOptionsPtrInput           `pulumi:"totalOptions"`
}

func (TemplatePivotTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConfiguration)(nil)).Elem()
}

func (i TemplatePivotTableConfigurationArgs) ToTemplatePivotTableConfigurationOutput() TemplatePivotTableConfigurationOutput {
	return i.ToTemplatePivotTableConfigurationOutputWithContext(context.Background())
}

func (i TemplatePivotTableConfigurationArgs) ToTemplatePivotTableConfigurationOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConfigurationOutput)
}

func (i TemplatePivotTableConfigurationArgs) ToTemplatePivotTableConfigurationPtrOutput() TemplatePivotTableConfigurationPtrOutput {
	return i.ToTemplatePivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableConfigurationArgs) ToTemplatePivotTableConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConfigurationOutput).ToTemplatePivotTableConfigurationPtrOutputWithContext(ctx)
}

// TemplatePivotTableConfigurationPtrInput is an input type that accepts TemplatePivotTableConfigurationArgs, TemplatePivotTableConfigurationPtr and TemplatePivotTableConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableConfigurationPtrInput` via:
//
//	        TemplatePivotTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableConfigurationPtrOutput() TemplatePivotTableConfigurationPtrOutput
	ToTemplatePivotTableConfigurationPtrOutputWithContext(context.Context) TemplatePivotTableConfigurationPtrOutput
}

type templatePivotTableConfigurationPtrType TemplatePivotTableConfigurationArgs

func TemplatePivotTableConfigurationPtr(v *TemplatePivotTableConfigurationArgs) TemplatePivotTableConfigurationPtrInput {
	return (*templatePivotTableConfigurationPtrType)(v)
}

func (*templatePivotTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConfiguration)(nil)).Elem()
}

func (i *templatePivotTableConfigurationPtrType) ToTemplatePivotTableConfigurationPtrOutput() TemplatePivotTableConfigurationPtrOutput {
	return i.ToTemplatePivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableConfigurationPtrType) ToTemplatePivotTableConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableConfigurationPtrOutput)
}

type TemplatePivotTableConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableConfiguration)(nil)).Elem()
}

func (o TemplatePivotTableConfigurationOutput) ToTemplatePivotTableConfigurationOutput() TemplatePivotTableConfigurationOutput {
	return o
}

func (o TemplatePivotTableConfigurationOutput) ToTemplatePivotTableConfigurationOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationOutput {
	return o
}

func (o TemplatePivotTableConfigurationOutput) ToTemplatePivotTableConfigurationPtrOutput() TemplatePivotTableConfigurationPtrOutput {
	return o.ToTemplatePivotTableConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableConfigurationOutput) ToTemplatePivotTableConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableConfiguration) *TemplatePivotTableConfiguration {
		return &v
	}).(TemplatePivotTableConfigurationPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) FieldOptions() TemplatePivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTableFieldOptions { return v.FieldOptions }).(TemplatePivotTableFieldOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) FieldWells() TemplatePivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTableFieldWells { return v.FieldWells }).(TemplatePivotTableFieldWellsPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) PaginatedReportOptions() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(TemplatePivotTablePaginatedReportOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) SortConfiguration() TemplatePivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTableSortConfiguration {
		return v.SortConfiguration
	}).(TemplatePivotTableSortConfigurationPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) TableOptions() TemplatePivotTableOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTableOptions { return v.TableOptions }).(TemplatePivotTableOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationOutput) TotalOptions() TemplatePivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableConfiguration) *TemplatePivotTableTotalOptions { return v.TotalOptions }).(TemplatePivotTableTotalOptionsPtrOutput)
}

type TemplatePivotTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableConfiguration)(nil)).Elem()
}

func (o TemplatePivotTableConfigurationPtrOutput) ToTemplatePivotTableConfigurationPtrOutput() TemplatePivotTableConfigurationPtrOutput {
	return o
}

func (o TemplatePivotTableConfigurationPtrOutput) ToTemplatePivotTableConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableConfigurationPtrOutput {
	return o
}

func (o TemplatePivotTableConfigurationPtrOutput) Elem() TemplatePivotTableConfigurationOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) TemplatePivotTableConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableConfiguration
		return ret
	}).(TemplatePivotTableConfigurationOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) FieldOptions() TemplatePivotTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(TemplatePivotTableFieldOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) FieldWells() TemplatePivotTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplatePivotTableFieldWellsPtrOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) PaginatedReportOptions() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(TemplatePivotTablePaginatedReportOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) SortConfiguration() TemplatePivotTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplatePivotTableSortConfigurationPtrOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) TableOptions() TemplatePivotTableOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(TemplatePivotTableOptionsPtrOutput)
}

func (o TemplatePivotTableConfigurationPtrOutput) TotalOptions() TemplatePivotTableTotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableConfiguration) *TemplatePivotTableTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(TemplatePivotTableTotalOptionsPtrOutput)
}

type TemplatePivotTableDataPathOption struct {
	DataPathList []TemplateDataPathValue `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// TemplatePivotTableDataPathOptionInput is an input type that accepts TemplatePivotTableDataPathOptionArgs and TemplatePivotTableDataPathOptionOutput values.
// You can construct a concrete instance of `TemplatePivotTableDataPathOptionInput` via:
//
//	TemplatePivotTableDataPathOptionArgs{...}
type TemplatePivotTableDataPathOptionInput interface {
	pulumi.Input

	ToTemplatePivotTableDataPathOptionOutput() TemplatePivotTableDataPathOptionOutput
	ToTemplatePivotTableDataPathOptionOutputWithContext(context.Context) TemplatePivotTableDataPathOptionOutput
}

type TemplatePivotTableDataPathOptionArgs struct {
	DataPathList TemplateDataPathValueArrayInput `pulumi:"dataPathList"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (TemplatePivotTableDataPathOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableDataPathOption)(nil)).Elem()
}

func (i TemplatePivotTableDataPathOptionArgs) ToTemplatePivotTableDataPathOptionOutput() TemplatePivotTableDataPathOptionOutput {
	return i.ToTemplatePivotTableDataPathOptionOutputWithContext(context.Background())
}

func (i TemplatePivotTableDataPathOptionArgs) ToTemplatePivotTableDataPathOptionOutputWithContext(ctx context.Context) TemplatePivotTableDataPathOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableDataPathOptionOutput)
}

// TemplatePivotTableDataPathOptionArrayInput is an input type that accepts TemplatePivotTableDataPathOptionArray and TemplatePivotTableDataPathOptionArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableDataPathOptionArrayInput` via:
//
//	TemplatePivotTableDataPathOptionArray{ TemplatePivotTableDataPathOptionArgs{...} }
type TemplatePivotTableDataPathOptionArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableDataPathOptionArrayOutput() TemplatePivotTableDataPathOptionArrayOutput
	ToTemplatePivotTableDataPathOptionArrayOutputWithContext(context.Context) TemplatePivotTableDataPathOptionArrayOutput
}

type TemplatePivotTableDataPathOptionArray []TemplatePivotTableDataPathOptionInput

func (TemplatePivotTableDataPathOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableDataPathOption)(nil)).Elem()
}

func (i TemplatePivotTableDataPathOptionArray) ToTemplatePivotTableDataPathOptionArrayOutput() TemplatePivotTableDataPathOptionArrayOutput {
	return i.ToTemplatePivotTableDataPathOptionArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableDataPathOptionArray) ToTemplatePivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableDataPathOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableDataPathOptionArrayOutput)
}

type TemplatePivotTableDataPathOptionOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableDataPathOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableDataPathOption)(nil)).Elem()
}

func (o TemplatePivotTableDataPathOptionOutput) ToTemplatePivotTableDataPathOptionOutput() TemplatePivotTableDataPathOptionOutput {
	return o
}

func (o TemplatePivotTableDataPathOptionOutput) ToTemplatePivotTableDataPathOptionOutputWithContext(ctx context.Context) TemplatePivotTableDataPathOptionOutput {
	return o
}

func (o TemplatePivotTableDataPathOptionOutput) DataPathList() TemplateDataPathValueArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableDataPathOption) []TemplateDataPathValue { return v.DataPathList }).(TemplateDataPathValueArrayOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePivotTableDataPathOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableDataPathOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type TemplatePivotTableDataPathOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableDataPathOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableDataPathOption)(nil)).Elem()
}

func (o TemplatePivotTableDataPathOptionArrayOutput) ToTemplatePivotTableDataPathOptionArrayOutput() TemplatePivotTableDataPathOptionArrayOutput {
	return o
}

func (o TemplatePivotTableDataPathOptionArrayOutput) ToTemplatePivotTableDataPathOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableDataPathOptionArrayOutput {
	return o
}

func (o TemplatePivotTableDataPathOptionArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableDataPathOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableDataPathOption {
		return vs[0].([]TemplatePivotTableDataPathOption)[vs[1].(int)]
	}).(TemplatePivotTableDataPathOptionOutput)
}

type TemplatePivotTableFieldCollapseStateOption struct {
	State  *TemplatePivotTableFieldCollapseState      `pulumi:"state"`
	Target TemplatePivotTableFieldCollapseStateTarget `pulumi:"target"`
}

// TemplatePivotTableFieldCollapseStateOptionInput is an input type that accepts TemplatePivotTableFieldCollapseStateOptionArgs and TemplatePivotTableFieldCollapseStateOptionOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldCollapseStateOptionInput` via:
//
//	TemplatePivotTableFieldCollapseStateOptionArgs{...}
type TemplatePivotTableFieldCollapseStateOptionInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldCollapseStateOptionOutput() TemplatePivotTableFieldCollapseStateOptionOutput
	ToTemplatePivotTableFieldCollapseStateOptionOutputWithContext(context.Context) TemplatePivotTableFieldCollapseStateOptionOutput
}

type TemplatePivotTableFieldCollapseStateOptionArgs struct {
	State  TemplatePivotTableFieldCollapseStatePtrInput    `pulumi:"state"`
	Target TemplatePivotTableFieldCollapseStateTargetInput `pulumi:"target"`
}

func (TemplatePivotTableFieldCollapseStateOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseStateOption)(nil)).Elem()
}

func (i TemplatePivotTableFieldCollapseStateOptionArgs) ToTemplatePivotTableFieldCollapseStateOptionOutput() TemplatePivotTableFieldCollapseStateOptionOutput {
	return i.ToTemplatePivotTableFieldCollapseStateOptionOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldCollapseStateOptionArgs) ToTemplatePivotTableFieldCollapseStateOptionOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldCollapseStateOptionOutput)
}

// TemplatePivotTableFieldCollapseStateOptionArrayInput is an input type that accepts TemplatePivotTableFieldCollapseStateOptionArray and TemplatePivotTableFieldCollapseStateOptionArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldCollapseStateOptionArrayInput` via:
//
//	TemplatePivotTableFieldCollapseStateOptionArray{ TemplatePivotTableFieldCollapseStateOptionArgs{...} }
type TemplatePivotTableFieldCollapseStateOptionArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldCollapseStateOptionArrayOutput() TemplatePivotTableFieldCollapseStateOptionArrayOutput
	ToTemplatePivotTableFieldCollapseStateOptionArrayOutputWithContext(context.Context) TemplatePivotTableFieldCollapseStateOptionArrayOutput
}

type TemplatePivotTableFieldCollapseStateOptionArray []TemplatePivotTableFieldCollapseStateOptionInput

func (TemplatePivotTableFieldCollapseStateOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldCollapseStateOption)(nil)).Elem()
}

func (i TemplatePivotTableFieldCollapseStateOptionArray) ToTemplatePivotTableFieldCollapseStateOptionArrayOutput() TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return i.ToTemplatePivotTableFieldCollapseStateOptionArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldCollapseStateOptionArray) ToTemplatePivotTableFieldCollapseStateOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldCollapseStateOptionArrayOutput)
}

type TemplatePivotTableFieldCollapseStateOptionOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldCollapseStateOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseStateOption)(nil)).Elem()
}

func (o TemplatePivotTableFieldCollapseStateOptionOutput) ToTemplatePivotTableFieldCollapseStateOptionOutput() TemplatePivotTableFieldCollapseStateOptionOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOptionOutput) ToTemplatePivotTableFieldCollapseStateOptionOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOptionOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOptionOutput) State() TemplatePivotTableFieldCollapseStatePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldCollapseStateOption) *TemplatePivotTableFieldCollapseState {
		return v.State
	}).(TemplatePivotTableFieldCollapseStatePtrOutput)
}

func (o TemplatePivotTableFieldCollapseStateOptionOutput) Target() TemplatePivotTableFieldCollapseStateTargetOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldCollapseStateOption) TemplatePivotTableFieldCollapseStateTarget {
		return v.Target
	}).(TemplatePivotTableFieldCollapseStateTargetOutput)
}

type TemplatePivotTableFieldCollapseStateOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldCollapseStateOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldCollapseStateOption)(nil)).Elem()
}

func (o TemplatePivotTableFieldCollapseStateOptionArrayOutput) ToTemplatePivotTableFieldCollapseStateOptionArrayOutput() TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOptionArrayOutput) ToTemplatePivotTableFieldCollapseStateOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateOptionArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableFieldCollapseStateOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableFieldCollapseStateOption {
		return vs[0].([]TemplatePivotTableFieldCollapseStateOption)[vs[1].(int)]
	}).(TemplatePivotTableFieldCollapseStateOptionOutput)
}

type TemplatePivotTableFieldCollapseStateTarget struct {
	FieldDataPathValues []TemplateDataPathValue `pulumi:"fieldDataPathValues"`
	FieldId             *string                 `pulumi:"fieldId"`
}

// TemplatePivotTableFieldCollapseStateTargetInput is an input type that accepts TemplatePivotTableFieldCollapseStateTargetArgs and TemplatePivotTableFieldCollapseStateTargetOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldCollapseStateTargetInput` via:
//
//	TemplatePivotTableFieldCollapseStateTargetArgs{...}
type TemplatePivotTableFieldCollapseStateTargetInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldCollapseStateTargetOutput() TemplatePivotTableFieldCollapseStateTargetOutput
	ToTemplatePivotTableFieldCollapseStateTargetOutputWithContext(context.Context) TemplatePivotTableFieldCollapseStateTargetOutput
}

type TemplatePivotTableFieldCollapseStateTargetArgs struct {
	FieldDataPathValues TemplateDataPathValueArrayInput `pulumi:"fieldDataPathValues"`
	FieldId             pulumi.StringPtrInput           `pulumi:"fieldId"`
}

func (TemplatePivotTableFieldCollapseStateTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseStateTarget)(nil)).Elem()
}

func (i TemplatePivotTableFieldCollapseStateTargetArgs) ToTemplatePivotTableFieldCollapseStateTargetOutput() TemplatePivotTableFieldCollapseStateTargetOutput {
	return i.ToTemplatePivotTableFieldCollapseStateTargetOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldCollapseStateTargetArgs) ToTemplatePivotTableFieldCollapseStateTargetOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldCollapseStateTargetOutput)
}

type TemplatePivotTableFieldCollapseStateTargetOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldCollapseStateTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldCollapseStateTarget)(nil)).Elem()
}

func (o TemplatePivotTableFieldCollapseStateTargetOutput) ToTemplatePivotTableFieldCollapseStateTargetOutput() TemplatePivotTableFieldCollapseStateTargetOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateTargetOutput) ToTemplatePivotTableFieldCollapseStateTargetOutputWithContext(ctx context.Context) TemplatePivotTableFieldCollapseStateTargetOutput {
	return o
}

func (o TemplatePivotTableFieldCollapseStateTargetOutput) FieldDataPathValues() TemplateDataPathValueArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldCollapseStateTarget) []TemplateDataPathValue {
		return v.FieldDataPathValues
	}).(TemplateDataPathValueArrayOutput)
}

func (o TemplatePivotTableFieldCollapseStateTargetOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldCollapseStateTarget) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type TemplatePivotTableFieldOption struct {
	CustomLabel *string             `pulumi:"customLabel"`
	FieldId     string              `pulumi:"fieldId"`
	Visibility  *TemplateVisibility `pulumi:"visibility"`
}

// TemplatePivotTableFieldOptionInput is an input type that accepts TemplatePivotTableFieldOptionArgs and TemplatePivotTableFieldOptionOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldOptionInput` via:
//
//	TemplatePivotTableFieldOptionArgs{...}
type TemplatePivotTableFieldOptionInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldOptionOutput() TemplatePivotTableFieldOptionOutput
	ToTemplatePivotTableFieldOptionOutputWithContext(context.Context) TemplatePivotTableFieldOptionOutput
}

type TemplatePivotTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput      `pulumi:"customLabel"`
	FieldId     pulumi.StringInput         `pulumi:"fieldId"`
	Visibility  TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplatePivotTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldOption)(nil)).Elem()
}

func (i TemplatePivotTableFieldOptionArgs) ToTemplatePivotTableFieldOptionOutput() TemplatePivotTableFieldOptionOutput {
	return i.ToTemplatePivotTableFieldOptionOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldOptionArgs) ToTemplatePivotTableFieldOptionOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldOptionOutput)
}

// TemplatePivotTableFieldOptionArrayInput is an input type that accepts TemplatePivotTableFieldOptionArray and TemplatePivotTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldOptionArrayInput` via:
//
//	TemplatePivotTableFieldOptionArray{ TemplatePivotTableFieldOptionArgs{...} }
type TemplatePivotTableFieldOptionArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldOptionArrayOutput() TemplatePivotTableFieldOptionArrayOutput
	ToTemplatePivotTableFieldOptionArrayOutputWithContext(context.Context) TemplatePivotTableFieldOptionArrayOutput
}

type TemplatePivotTableFieldOptionArray []TemplatePivotTableFieldOptionInput

func (TemplatePivotTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldOption)(nil)).Elem()
}

func (i TemplatePivotTableFieldOptionArray) ToTemplatePivotTableFieldOptionArrayOutput() TemplatePivotTableFieldOptionArrayOutput {
	return i.ToTemplatePivotTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldOptionArray) ToTemplatePivotTableFieldOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldOptionArrayOutput)
}

type TemplatePivotTableFieldOptionOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldOption)(nil)).Elem()
}

func (o TemplatePivotTableFieldOptionOutput) ToTemplatePivotTableFieldOptionOutput() TemplatePivotTableFieldOptionOutput {
	return o
}

func (o TemplatePivotTableFieldOptionOutput) ToTemplatePivotTableFieldOptionOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionOutput {
	return o
}

func (o TemplatePivotTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplatePivotTableFieldOptionOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOption) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldOption)(nil)).Elem()
}

func (o TemplatePivotTableFieldOptionArrayOutput) ToTemplatePivotTableFieldOptionArrayOutput() TemplatePivotTableFieldOptionArrayOutput {
	return o
}

func (o TemplatePivotTableFieldOptionArrayOutput) ToTemplatePivotTableFieldOptionArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionArrayOutput {
	return o
}

func (o TemplatePivotTableFieldOptionArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableFieldOption {
		return vs[0].([]TemplatePivotTableFieldOption)[vs[1].(int)]
	}).(TemplatePivotTableFieldOptionOutput)
}

type TemplatePivotTableFieldOptions struct {
	CollapseStateOptions []TemplatePivotTableFieldCollapseStateOption `pulumi:"collapseStateOptions"`
	DataPathOptions      []TemplatePivotTableDataPathOption           `pulumi:"dataPathOptions"`
	SelectedFieldOptions []TemplatePivotTableFieldOption              `pulumi:"selectedFieldOptions"`
}

// TemplatePivotTableFieldOptionsInput is an input type that accepts TemplatePivotTableFieldOptionsArgs and TemplatePivotTableFieldOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldOptionsInput` via:
//
//	TemplatePivotTableFieldOptionsArgs{...}
type TemplatePivotTableFieldOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldOptionsOutput() TemplatePivotTableFieldOptionsOutput
	ToTemplatePivotTableFieldOptionsOutputWithContext(context.Context) TemplatePivotTableFieldOptionsOutput
}

type TemplatePivotTableFieldOptionsArgs struct {
	CollapseStateOptions TemplatePivotTableFieldCollapseStateOptionArrayInput `pulumi:"collapseStateOptions"`
	DataPathOptions      TemplatePivotTableDataPathOptionArrayInput           `pulumi:"dataPathOptions"`
	SelectedFieldOptions TemplatePivotTableFieldOptionArrayInput              `pulumi:"selectedFieldOptions"`
}

func (TemplatePivotTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldOptions)(nil)).Elem()
}

func (i TemplatePivotTableFieldOptionsArgs) ToTemplatePivotTableFieldOptionsOutput() TemplatePivotTableFieldOptionsOutput {
	return i.ToTemplatePivotTableFieldOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldOptionsArgs) ToTemplatePivotTableFieldOptionsOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldOptionsOutput)
}

func (i TemplatePivotTableFieldOptionsArgs) ToTemplatePivotTableFieldOptionsPtrOutput() TemplatePivotTableFieldOptionsPtrOutput {
	return i.ToTemplatePivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldOptionsArgs) ToTemplatePivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldOptionsOutput).ToTemplatePivotTableFieldOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTableFieldOptionsPtrInput is an input type that accepts TemplatePivotTableFieldOptionsArgs, TemplatePivotTableFieldOptionsPtr and TemplatePivotTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldOptionsPtrInput` via:
//
//	        TemplatePivotTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldOptionsPtrOutput() TemplatePivotTableFieldOptionsPtrOutput
	ToTemplatePivotTableFieldOptionsPtrOutputWithContext(context.Context) TemplatePivotTableFieldOptionsPtrOutput
}

type templatePivotTableFieldOptionsPtrType TemplatePivotTableFieldOptionsArgs

func TemplatePivotTableFieldOptionsPtr(v *TemplatePivotTableFieldOptionsArgs) TemplatePivotTableFieldOptionsPtrInput {
	return (*templatePivotTableFieldOptionsPtrType)(v)
}

func (*templatePivotTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableFieldOptions)(nil)).Elem()
}

func (i *templatePivotTableFieldOptionsPtrType) ToTemplatePivotTableFieldOptionsPtrOutput() TemplatePivotTableFieldOptionsPtrOutput {
	return i.ToTemplatePivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableFieldOptionsPtrType) ToTemplatePivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldOptionsPtrOutput)
}

type TemplatePivotTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldOptions)(nil)).Elem()
}

func (o TemplatePivotTableFieldOptionsOutput) ToTemplatePivotTableFieldOptionsOutput() TemplatePivotTableFieldOptionsOutput {
	return o
}

func (o TemplatePivotTableFieldOptionsOutput) ToTemplatePivotTableFieldOptionsOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsOutput {
	return o
}

func (o TemplatePivotTableFieldOptionsOutput) ToTemplatePivotTableFieldOptionsPtrOutput() TemplatePivotTableFieldOptionsPtrOutput {
	return o.ToTemplatePivotTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldOptionsOutput) ToTemplatePivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableFieldOptions) *TemplatePivotTableFieldOptions {
		return &v
	}).(TemplatePivotTableFieldOptionsPtrOutput)
}

func (o TemplatePivotTableFieldOptionsOutput) CollapseStateOptions() TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOptions) []TemplatePivotTableFieldCollapseStateOption {
		return v.CollapseStateOptions
	}).(TemplatePivotTableFieldCollapseStateOptionArrayOutput)
}

func (o TemplatePivotTableFieldOptionsOutput) DataPathOptions() TemplatePivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOptions) []TemplatePivotTableDataPathOption { return v.DataPathOptions }).(TemplatePivotTableDataPathOptionArrayOutput)
}

func (o TemplatePivotTableFieldOptionsOutput) SelectedFieldOptions() TemplatePivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldOptions) []TemplatePivotTableFieldOption { return v.SelectedFieldOptions }).(TemplatePivotTableFieldOptionArrayOutput)
}

type TemplatePivotTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableFieldOptions)(nil)).Elem()
}

func (o TemplatePivotTableFieldOptionsPtrOutput) ToTemplatePivotTableFieldOptionsPtrOutput() TemplatePivotTableFieldOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableFieldOptionsPtrOutput) ToTemplatePivotTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableFieldOptionsPtrOutput) Elem() TemplatePivotTableFieldOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldOptions) TemplatePivotTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableFieldOptions
		return ret
	}).(TemplatePivotTableFieldOptionsOutput)
}

func (o TemplatePivotTableFieldOptionsPtrOutput) CollapseStateOptions() TemplatePivotTableFieldCollapseStateOptionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldOptions) []TemplatePivotTableFieldCollapseStateOption {
		if v == nil {
			return nil
		}
		return v.CollapseStateOptions
	}).(TemplatePivotTableFieldCollapseStateOptionArrayOutput)
}

func (o TemplatePivotTableFieldOptionsPtrOutput) DataPathOptions() TemplatePivotTableDataPathOptionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldOptions) []TemplatePivotTableDataPathOption {
		if v == nil {
			return nil
		}
		return v.DataPathOptions
	}).(TemplatePivotTableDataPathOptionArrayOutput)
}

func (o TemplatePivotTableFieldOptionsPtrOutput) SelectedFieldOptions() TemplatePivotTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldOptions) []TemplatePivotTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(TemplatePivotTableFieldOptionArrayOutput)
}

type TemplatePivotTableFieldSubtotalOptions struct {
	FieldId *string `pulumi:"fieldId"`
}

// TemplatePivotTableFieldSubtotalOptionsInput is an input type that accepts TemplatePivotTableFieldSubtotalOptionsArgs and TemplatePivotTableFieldSubtotalOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldSubtotalOptionsInput` via:
//
//	TemplatePivotTableFieldSubtotalOptionsArgs{...}
type TemplatePivotTableFieldSubtotalOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldSubtotalOptionsOutput() TemplatePivotTableFieldSubtotalOptionsOutput
	ToTemplatePivotTableFieldSubtotalOptionsOutputWithContext(context.Context) TemplatePivotTableFieldSubtotalOptionsOutput
}

type TemplatePivotTableFieldSubtotalOptionsArgs struct {
	FieldId pulumi.StringPtrInput `pulumi:"fieldId"`
}

func (TemplatePivotTableFieldSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i TemplatePivotTableFieldSubtotalOptionsArgs) ToTemplatePivotTableFieldSubtotalOptionsOutput() TemplatePivotTableFieldSubtotalOptionsOutput {
	return i.ToTemplatePivotTableFieldSubtotalOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldSubtotalOptionsArgs) ToTemplatePivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTableFieldSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldSubtotalOptionsOutput)
}

// TemplatePivotTableFieldSubtotalOptionsArrayInput is an input type that accepts TemplatePivotTableFieldSubtotalOptionsArray and TemplatePivotTableFieldSubtotalOptionsArrayOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldSubtotalOptionsArrayInput` via:
//
//	TemplatePivotTableFieldSubtotalOptionsArray{ TemplatePivotTableFieldSubtotalOptionsArgs{...} }
type TemplatePivotTableFieldSubtotalOptionsArrayInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldSubtotalOptionsArrayOutput() TemplatePivotTableFieldSubtotalOptionsArrayOutput
	ToTemplatePivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Context) TemplatePivotTableFieldSubtotalOptionsArrayOutput
}

type TemplatePivotTableFieldSubtotalOptionsArray []TemplatePivotTableFieldSubtotalOptionsInput

func (TemplatePivotTableFieldSubtotalOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (i TemplatePivotTableFieldSubtotalOptionsArray) ToTemplatePivotTableFieldSubtotalOptionsArrayOutput() TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return i.ToTemplatePivotTableFieldSubtotalOptionsArrayOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldSubtotalOptionsArray) ToTemplatePivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldSubtotalOptionsArrayOutput)
}

type TemplatePivotTableFieldSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o TemplatePivotTableFieldSubtotalOptionsOutput) ToTemplatePivotTableFieldSubtotalOptionsOutput() TemplatePivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o TemplatePivotTableFieldSubtotalOptionsOutput) ToTemplatePivotTableFieldSubtotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTableFieldSubtotalOptionsOutput {
	return o
}

func (o TemplatePivotTableFieldSubtotalOptionsOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldSubtotalOptions) *string { return v.FieldId }).(pulumi.StringPtrOutput)
}

type TemplatePivotTableFieldSubtotalOptionsArrayOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldSubtotalOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplatePivotTableFieldSubtotalOptions)(nil)).Elem()
}

func (o TemplatePivotTableFieldSubtotalOptionsArrayOutput) ToTemplatePivotTableFieldSubtotalOptionsArrayOutput() TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o TemplatePivotTableFieldSubtotalOptionsArrayOutput) ToTemplatePivotTableFieldSubtotalOptionsArrayOutputWithContext(ctx context.Context) TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return o
}

func (o TemplatePivotTableFieldSubtotalOptionsArrayOutput) Index(i pulumi.IntInput) TemplatePivotTableFieldSubtotalOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplatePivotTableFieldSubtotalOptions {
		return vs[0].([]TemplatePivotTableFieldSubtotalOptions)[vs[1].(int)]
	}).(TemplatePivotTableFieldSubtotalOptionsOutput)
}

type TemplatePivotTableFieldWells struct {
	PivotTableAggregatedFieldWells *TemplatePivotTableAggregatedFieldWells `pulumi:"pivotTableAggregatedFieldWells"`
}

// TemplatePivotTableFieldWellsInput is an input type that accepts TemplatePivotTableFieldWellsArgs and TemplatePivotTableFieldWellsOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldWellsInput` via:
//
//	TemplatePivotTableFieldWellsArgs{...}
type TemplatePivotTableFieldWellsInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldWellsOutput() TemplatePivotTableFieldWellsOutput
	ToTemplatePivotTableFieldWellsOutputWithContext(context.Context) TemplatePivotTableFieldWellsOutput
}

type TemplatePivotTableFieldWellsArgs struct {
	PivotTableAggregatedFieldWells TemplatePivotTableAggregatedFieldWellsPtrInput `pulumi:"pivotTableAggregatedFieldWells"`
}

func (TemplatePivotTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldWells)(nil)).Elem()
}

func (i TemplatePivotTableFieldWellsArgs) ToTemplatePivotTableFieldWellsOutput() TemplatePivotTableFieldWellsOutput {
	return i.ToTemplatePivotTableFieldWellsOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldWellsArgs) ToTemplatePivotTableFieldWellsOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldWellsOutput)
}

func (i TemplatePivotTableFieldWellsArgs) ToTemplatePivotTableFieldWellsPtrOutput() TemplatePivotTableFieldWellsPtrOutput {
	return i.ToTemplatePivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableFieldWellsArgs) ToTemplatePivotTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldWellsOutput).ToTemplatePivotTableFieldWellsPtrOutputWithContext(ctx)
}

// TemplatePivotTableFieldWellsPtrInput is an input type that accepts TemplatePivotTableFieldWellsArgs, TemplatePivotTableFieldWellsPtr and TemplatePivotTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableFieldWellsPtrInput` via:
//
//	        TemplatePivotTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableFieldWellsPtrOutput() TemplatePivotTableFieldWellsPtrOutput
	ToTemplatePivotTableFieldWellsPtrOutputWithContext(context.Context) TemplatePivotTableFieldWellsPtrOutput
}

type templatePivotTableFieldWellsPtrType TemplatePivotTableFieldWellsArgs

func TemplatePivotTableFieldWellsPtr(v *TemplatePivotTableFieldWellsArgs) TemplatePivotTableFieldWellsPtrInput {
	return (*templatePivotTableFieldWellsPtrType)(v)
}

func (*templatePivotTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableFieldWells)(nil)).Elem()
}

func (i *templatePivotTableFieldWellsPtrType) ToTemplatePivotTableFieldWellsPtrOutput() TemplatePivotTableFieldWellsPtrOutput {
	return i.ToTemplatePivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableFieldWellsPtrType) ToTemplatePivotTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableFieldWellsPtrOutput)
}

type TemplatePivotTableFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableFieldWells)(nil)).Elem()
}

func (o TemplatePivotTableFieldWellsOutput) ToTemplatePivotTableFieldWellsOutput() TemplatePivotTableFieldWellsOutput {
	return o
}

func (o TemplatePivotTableFieldWellsOutput) ToTemplatePivotTableFieldWellsOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsOutput {
	return o
}

func (o TemplatePivotTableFieldWellsOutput) ToTemplatePivotTableFieldWellsPtrOutput() TemplatePivotTableFieldWellsPtrOutput {
	return o.ToTemplatePivotTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableFieldWellsOutput) ToTemplatePivotTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableFieldWells) *TemplatePivotTableFieldWells {
		return &v
	}).(TemplatePivotTableFieldWellsPtrOutput)
}

func (o TemplatePivotTableFieldWellsOutput) PivotTableAggregatedFieldWells() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableFieldWells) *TemplatePivotTableAggregatedFieldWells {
		return v.PivotTableAggregatedFieldWells
	}).(TemplatePivotTableAggregatedFieldWellsPtrOutput)
}

type TemplatePivotTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableFieldWells)(nil)).Elem()
}

func (o TemplatePivotTableFieldWellsPtrOutput) ToTemplatePivotTableFieldWellsPtrOutput() TemplatePivotTableFieldWellsPtrOutput {
	return o
}

func (o TemplatePivotTableFieldWellsPtrOutput) ToTemplatePivotTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplatePivotTableFieldWellsPtrOutput {
	return o
}

func (o TemplatePivotTableFieldWellsPtrOutput) Elem() TemplatePivotTableFieldWellsOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldWells) TemplatePivotTableFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableFieldWells
		return ret
	}).(TemplatePivotTableFieldWellsOutput)
}

func (o TemplatePivotTableFieldWellsPtrOutput) PivotTableAggregatedFieldWells() TemplatePivotTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableFieldWells) *TemplatePivotTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.PivotTableAggregatedFieldWells
	}).(TemplatePivotTableAggregatedFieldWellsPtrOutput)
}

type TemplatePivotTableOptions struct {
	CellStyle                        *TemplateTableCellStyle `pulumi:"cellStyle"`
	CollapsedRowDimensionsVisibility *TemplateVisibility     `pulumi:"collapsedRowDimensionsVisibility"`
	ColumnHeaderStyle                *TemplateTableCellStyle `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility            *TemplateVisibility     `pulumi:"columnNamesVisibility"`
	// String based length that is composed of value and unit in px
	DefaultCellWidth         *string                             `pulumi:"defaultCellWidth"`
	MetricPlacement          *TemplatePivotTableMetricPlacement  `pulumi:"metricPlacement"`
	RowAlternateColorOptions *TemplateRowAlternateColorOptions   `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       *TemplateTableCellStyle             `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           *TemplateTableCellStyle             `pulumi:"rowHeaderStyle"`
	RowsLabelOptions         *TemplatePivotTableRowsLabelOptions `pulumi:"rowsLabelOptions"`
	RowsLayout               *TemplatePivotTableRowsLayout       `pulumi:"rowsLayout"`
	SingleMetricVisibility   *TemplateVisibility                 `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  *TemplateVisibility                 `pulumi:"toggleButtonsVisibility"`
}

// TemplatePivotTableOptionsInput is an input type that accepts TemplatePivotTableOptionsArgs and TemplatePivotTableOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTableOptionsInput` via:
//
//	TemplatePivotTableOptionsArgs{...}
type TemplatePivotTableOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTableOptionsOutput() TemplatePivotTableOptionsOutput
	ToTemplatePivotTableOptionsOutputWithContext(context.Context) TemplatePivotTableOptionsOutput
}

type TemplatePivotTableOptionsArgs struct {
	CellStyle                        TemplateTableCellStylePtrInput `pulumi:"cellStyle"`
	CollapsedRowDimensionsVisibility TemplateVisibilityPtrInput     `pulumi:"collapsedRowDimensionsVisibility"`
	ColumnHeaderStyle                TemplateTableCellStylePtrInput `pulumi:"columnHeaderStyle"`
	ColumnNamesVisibility            TemplateVisibilityPtrInput     `pulumi:"columnNamesVisibility"`
	// String based length that is composed of value and unit in px
	DefaultCellWidth         pulumi.StringPtrInput                      `pulumi:"defaultCellWidth"`
	MetricPlacement          TemplatePivotTableMetricPlacementPtrInput  `pulumi:"metricPlacement"`
	RowAlternateColorOptions TemplateRowAlternateColorOptionsPtrInput   `pulumi:"rowAlternateColorOptions"`
	RowFieldNamesStyle       TemplateTableCellStylePtrInput             `pulumi:"rowFieldNamesStyle"`
	RowHeaderStyle           TemplateTableCellStylePtrInput             `pulumi:"rowHeaderStyle"`
	RowsLabelOptions         TemplatePivotTableRowsLabelOptionsPtrInput `pulumi:"rowsLabelOptions"`
	RowsLayout               TemplatePivotTableRowsLayoutPtrInput       `pulumi:"rowsLayout"`
	SingleMetricVisibility   TemplateVisibilityPtrInput                 `pulumi:"singleMetricVisibility"`
	ToggleButtonsVisibility  TemplateVisibilityPtrInput                 `pulumi:"toggleButtonsVisibility"`
}

func (TemplatePivotTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableOptions)(nil)).Elem()
}

func (i TemplatePivotTableOptionsArgs) ToTemplatePivotTableOptionsOutput() TemplatePivotTableOptionsOutput {
	return i.ToTemplatePivotTableOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTableOptionsArgs) ToTemplatePivotTableOptionsOutputWithContext(ctx context.Context) TemplatePivotTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableOptionsOutput)
}

func (i TemplatePivotTableOptionsArgs) ToTemplatePivotTableOptionsPtrOutput() TemplatePivotTableOptionsPtrOutput {
	return i.ToTemplatePivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableOptionsArgs) ToTemplatePivotTableOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableOptionsOutput).ToTemplatePivotTableOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTableOptionsPtrInput is an input type that accepts TemplatePivotTableOptionsArgs, TemplatePivotTableOptionsPtr and TemplatePivotTableOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableOptionsPtrInput` via:
//
//	        TemplatePivotTableOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableOptionsPtrOutput() TemplatePivotTableOptionsPtrOutput
	ToTemplatePivotTableOptionsPtrOutputWithContext(context.Context) TemplatePivotTableOptionsPtrOutput
}

type templatePivotTableOptionsPtrType TemplatePivotTableOptionsArgs

func TemplatePivotTableOptionsPtr(v *TemplatePivotTableOptionsArgs) TemplatePivotTableOptionsPtrInput {
	return (*templatePivotTableOptionsPtrType)(v)
}

func (*templatePivotTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableOptions)(nil)).Elem()
}

func (i *templatePivotTableOptionsPtrType) ToTemplatePivotTableOptionsPtrOutput() TemplatePivotTableOptionsPtrOutput {
	return i.ToTemplatePivotTableOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableOptionsPtrType) ToTemplatePivotTableOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableOptionsPtrOutput)
}

type TemplatePivotTableOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableOptions)(nil)).Elem()
}

func (o TemplatePivotTableOptionsOutput) ToTemplatePivotTableOptionsOutput() TemplatePivotTableOptionsOutput {
	return o
}

func (o TemplatePivotTableOptionsOutput) ToTemplatePivotTableOptionsOutputWithContext(ctx context.Context) TemplatePivotTableOptionsOutput {
	return o
}

func (o TemplatePivotTableOptionsOutput) ToTemplatePivotTableOptionsPtrOutput() TemplatePivotTableOptionsPtrOutput {
	return o.ToTemplatePivotTableOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableOptionsOutput) ToTemplatePivotTableOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableOptions) *TemplatePivotTableOptions {
		return &v
	}).(TemplatePivotTableOptionsPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) CellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateTableCellStyle { return v.CellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsOutput) CollapsedRowDimensionsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateVisibility { return v.CollapsedRowDimensionsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) ColumnHeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateTableCellStyle { return v.ColumnHeaderStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsOutput) ColumnNamesVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateVisibility { return v.ColumnNamesVisibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePivotTableOptionsOutput) DefaultCellWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *string { return v.DefaultCellWidth }).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) MetricPlacement() TemplatePivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplatePivotTableMetricPlacement { return v.MetricPlacement }).(TemplatePivotTableMetricPlacementPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) RowAlternateColorOptions() TemplateRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateRowAlternateColorOptions { return v.RowAlternateColorOptions }).(TemplateRowAlternateColorOptionsPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) RowFieldNamesStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateTableCellStyle { return v.RowFieldNamesStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsOutput) RowHeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateTableCellStyle { return v.RowHeaderStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsOutput) RowsLabelOptions() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplatePivotTableRowsLabelOptions { return v.RowsLabelOptions }).(TemplatePivotTableRowsLabelOptionsPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) RowsLayout() TemplatePivotTableRowsLayoutPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplatePivotTableRowsLayout { return v.RowsLayout }).(TemplatePivotTableRowsLayoutPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) SingleMetricVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateVisibility { return v.SingleMetricVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTableOptionsOutput) ToggleButtonsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableOptions) *TemplateVisibility { return v.ToggleButtonsVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableOptions)(nil)).Elem()
}

func (o TemplatePivotTableOptionsPtrOutput) ToTemplatePivotTableOptionsPtrOutput() TemplatePivotTableOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableOptionsPtrOutput) ToTemplatePivotTableOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableOptionsPtrOutput) Elem() TemplatePivotTableOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) TemplatePivotTableOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableOptions
		return ret
	}).(TemplatePivotTableOptionsOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) CellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) CollapsedRowDimensionsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.CollapsedRowDimensionsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) ColumnHeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ColumnHeaderStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) ColumnNamesVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.ColumnNamesVisibility
	}).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplatePivotTableOptionsPtrOutput) DefaultCellWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *string {
		if v == nil {
			return nil
		}
		return v.DefaultCellWidth
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) MetricPlacement() TemplatePivotTableMetricPlacementPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplatePivotTableMetricPlacement {
		if v == nil {
			return nil
		}
		return v.MetricPlacement
	}).(TemplatePivotTableMetricPlacementPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) RowAlternateColorOptions() TemplateRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(TemplateRowAlternateColorOptionsPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) RowFieldNamesStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowFieldNamesStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) RowHeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.RowHeaderStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) RowsLabelOptions() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplatePivotTableRowsLabelOptions {
		if v == nil {
			return nil
		}
		return v.RowsLabelOptions
	}).(TemplatePivotTableRowsLabelOptionsPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) RowsLayout() TemplatePivotTableRowsLayoutPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplatePivotTableRowsLayout {
		if v == nil {
			return nil
		}
		return v.RowsLayout
	}).(TemplatePivotTableRowsLayoutPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) SingleMetricVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.SingleMetricVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTableOptionsPtrOutput) ToggleButtonsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.ToggleButtonsVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *TemplateVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *TemplateVisibility `pulumi:"verticalOverflowVisibility"`
}

// TemplatePivotTablePaginatedReportOptionsInput is an input type that accepts TemplatePivotTablePaginatedReportOptionsArgs and TemplatePivotTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTablePaginatedReportOptionsInput` via:
//
//	TemplatePivotTablePaginatedReportOptionsArgs{...}
type TemplatePivotTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTablePaginatedReportOptionsOutput() TemplatePivotTablePaginatedReportOptionsOutput
	ToTemplatePivotTablePaginatedReportOptionsOutputWithContext(context.Context) TemplatePivotTablePaginatedReportOptionsOutput
}

type TemplatePivotTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility TemplateVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     TemplateVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (TemplatePivotTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i TemplatePivotTablePaginatedReportOptionsArgs) ToTemplatePivotTablePaginatedReportOptionsOutput() TemplatePivotTablePaginatedReportOptionsOutput {
	return i.ToTemplatePivotTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTablePaginatedReportOptionsArgs) ToTemplatePivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTablePaginatedReportOptionsOutput)
}

func (i TemplatePivotTablePaginatedReportOptionsArgs) ToTemplatePivotTablePaginatedReportOptionsPtrOutput() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return i.ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTablePaginatedReportOptionsArgs) ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTablePaginatedReportOptionsOutput).ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTablePaginatedReportOptionsPtrInput is an input type that accepts TemplatePivotTablePaginatedReportOptionsArgs, TemplatePivotTablePaginatedReportOptionsPtr and TemplatePivotTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTablePaginatedReportOptionsPtrInput` via:
//
//	        TemplatePivotTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTablePaginatedReportOptionsPtrOutput() TemplatePivotTablePaginatedReportOptionsPtrOutput
	ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(context.Context) TemplatePivotTablePaginatedReportOptionsPtrOutput
}

type templatePivotTablePaginatedReportOptionsPtrType TemplatePivotTablePaginatedReportOptionsArgs

func TemplatePivotTablePaginatedReportOptionsPtr(v *TemplatePivotTablePaginatedReportOptionsArgs) TemplatePivotTablePaginatedReportOptionsPtrInput {
	return (*templatePivotTablePaginatedReportOptionsPtrType)(v)
}

func (*templatePivotTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTablePaginatedReportOptions)(nil)).Elem()
}

func (i *templatePivotTablePaginatedReportOptionsPtrType) ToTemplatePivotTablePaginatedReportOptionsPtrOutput() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return i.ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTablePaginatedReportOptionsPtrType) ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTablePaginatedReportOptionsPtrOutput)
}

type TemplatePivotTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) ToTemplatePivotTablePaginatedReportOptionsOutput() TemplatePivotTablePaginatedReportOptionsOutput {
	return o
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) ToTemplatePivotTablePaginatedReportOptionsOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsOutput {
	return o
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) ToTemplatePivotTablePaginatedReportOptionsPtrOutput() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o.ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTablePaginatedReportOptions) *TemplatePivotTablePaginatedReportOptions {
		return &v
	}).(TemplatePivotTablePaginatedReportOptionsPtrOutput)
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTablePaginatedReportOptions) *TemplateVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTablePaginatedReportOptions) *TemplateVisibility {
		return v.VerticalOverflowVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTablePaginatedReportOptions)(nil)).Elem()
}

func (o TemplatePivotTablePaginatedReportOptionsPtrOutput) ToTemplatePivotTablePaginatedReportOptionsPtrOutput() TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o TemplatePivotTablePaginatedReportOptionsPtrOutput) ToTemplatePivotTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o TemplatePivotTablePaginatedReportOptionsPtrOutput) Elem() TemplatePivotTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTablePaginatedReportOptions) TemplatePivotTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTablePaginatedReportOptions
		return ret
	}).(TemplatePivotTablePaginatedReportOptionsOutput)
}

func (o TemplatePivotTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTablePaginatedReportOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTablePaginatedReportOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTableRowsLabelOptions struct {
	CustomLabel *string             `pulumi:"customLabel"`
	Visibility  *TemplateVisibility `pulumi:"visibility"`
}

// TemplatePivotTableRowsLabelOptionsInput is an input type that accepts TemplatePivotTableRowsLabelOptionsArgs and TemplatePivotTableRowsLabelOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTableRowsLabelOptionsInput` via:
//
//	TemplatePivotTableRowsLabelOptionsArgs{...}
type TemplatePivotTableRowsLabelOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTableRowsLabelOptionsOutput() TemplatePivotTableRowsLabelOptionsOutput
	ToTemplatePivotTableRowsLabelOptionsOutputWithContext(context.Context) TemplatePivotTableRowsLabelOptionsOutput
}

type TemplatePivotTableRowsLabelOptionsArgs struct {
	CustomLabel pulumi.StringPtrInput      `pulumi:"customLabel"`
	Visibility  TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplatePivotTableRowsLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableRowsLabelOptions)(nil)).Elem()
}

func (i TemplatePivotTableRowsLabelOptionsArgs) ToTemplatePivotTableRowsLabelOptionsOutput() TemplatePivotTableRowsLabelOptionsOutput {
	return i.ToTemplatePivotTableRowsLabelOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTableRowsLabelOptionsArgs) ToTemplatePivotTableRowsLabelOptionsOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableRowsLabelOptionsOutput)
}

func (i TemplatePivotTableRowsLabelOptionsArgs) ToTemplatePivotTableRowsLabelOptionsPtrOutput() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return i.ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableRowsLabelOptionsArgs) ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableRowsLabelOptionsOutput).ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTableRowsLabelOptionsPtrInput is an input type that accepts TemplatePivotTableRowsLabelOptionsArgs, TemplatePivotTableRowsLabelOptionsPtr and TemplatePivotTableRowsLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableRowsLabelOptionsPtrInput` via:
//
//	        TemplatePivotTableRowsLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableRowsLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableRowsLabelOptionsPtrOutput() TemplatePivotTableRowsLabelOptionsPtrOutput
	ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(context.Context) TemplatePivotTableRowsLabelOptionsPtrOutput
}

type templatePivotTableRowsLabelOptionsPtrType TemplatePivotTableRowsLabelOptionsArgs

func TemplatePivotTableRowsLabelOptionsPtr(v *TemplatePivotTableRowsLabelOptionsArgs) TemplatePivotTableRowsLabelOptionsPtrInput {
	return (*templatePivotTableRowsLabelOptionsPtrType)(v)
}

func (*templatePivotTableRowsLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableRowsLabelOptions)(nil)).Elem()
}

func (i *templatePivotTableRowsLabelOptionsPtrType) ToTemplatePivotTableRowsLabelOptionsPtrOutput() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return i.ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableRowsLabelOptionsPtrType) ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableRowsLabelOptionsPtrOutput)
}

type TemplatePivotTableRowsLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableRowsLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableRowsLabelOptions)(nil)).Elem()
}

func (o TemplatePivotTableRowsLabelOptionsOutput) ToTemplatePivotTableRowsLabelOptionsOutput() TemplatePivotTableRowsLabelOptionsOutput {
	return o
}

func (o TemplatePivotTableRowsLabelOptionsOutput) ToTemplatePivotTableRowsLabelOptionsOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsOutput {
	return o
}

func (o TemplatePivotTableRowsLabelOptionsOutput) ToTemplatePivotTableRowsLabelOptionsPtrOutput() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o.ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableRowsLabelOptionsOutput) ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableRowsLabelOptions) *TemplatePivotTableRowsLabelOptions {
		return &v
	}).(TemplatePivotTableRowsLabelOptionsPtrOutput)
}

func (o TemplatePivotTableRowsLabelOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableRowsLabelOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableRowsLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableRowsLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTableRowsLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableRowsLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableRowsLabelOptions)(nil)).Elem()
}

func (o TemplatePivotTableRowsLabelOptionsPtrOutput) ToTemplatePivotTableRowsLabelOptionsPtrOutput() TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableRowsLabelOptionsPtrOutput) ToTemplatePivotTableRowsLabelOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableRowsLabelOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableRowsLabelOptionsPtrOutput) Elem() TemplatePivotTableRowsLabelOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTableRowsLabelOptions) TemplatePivotTableRowsLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableRowsLabelOptions
		return ret
	}).(TemplatePivotTableRowsLabelOptionsOutput)
}

func (o TemplatePivotTableRowsLabelOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableRowsLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTableRowsLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableRowsLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplatePivotTableSortBy struct {
	Column   *TemplateColumnSort   `pulumi:"column"`
	DataPath *TemplateDataPathSort `pulumi:"dataPath"`
	Field    *TemplateFieldSort    `pulumi:"field"`
}

// TemplatePivotTableSortByInput is an input type that accepts TemplatePivotTableSortByArgs and TemplatePivotTableSortByOutput values.
// You can construct a concrete instance of `TemplatePivotTableSortByInput` via:
//
//	TemplatePivotTableSortByArgs{...}
type TemplatePivotTableSortByInput interface {
	pulumi.Input

	ToTemplatePivotTableSortByOutput() TemplatePivotTableSortByOutput
	ToTemplatePivotTableSortByOutputWithContext(context.Context) TemplatePivotTableSortByOutput
}

type TemplatePivotTableSortByArgs struct {
	Column   TemplateColumnSortPtrInput   `pulumi:"column"`
	DataPath TemplateDataPathSortPtrInput `pulumi:"dataPath"`
	Field    TemplateFieldSortPtrInput    `pulumi:"field"`
}

func (TemplatePivotTableSortByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSortBy)(nil)).Elem()
}

func (i TemplatePivotTableSortByArgs) ToTemplatePivotTableSortByOutput() TemplatePivotTableSortByOutput {
	return i.ToTemplatePivotTableSortByOutputWithContext(context.Background())
}

func (i TemplatePivotTableSortByArgs) ToTemplatePivotTableSortByOutputWithContext(ctx context.Context) TemplatePivotTableSortByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableSortByOutput)
}

type TemplatePivotTableSortByOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableSortByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSortBy)(nil)).Elem()
}

func (o TemplatePivotTableSortByOutput) ToTemplatePivotTableSortByOutput() TemplatePivotTableSortByOutput {
	return o
}

func (o TemplatePivotTableSortByOutput) ToTemplatePivotTableSortByOutputWithContext(ctx context.Context) TemplatePivotTableSortByOutput {
	return o
}

func (o TemplatePivotTableSortByOutput) Column() TemplateColumnSortPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableSortBy) *TemplateColumnSort { return v.Column }).(TemplateColumnSortPtrOutput)
}

func (o TemplatePivotTableSortByOutput) DataPath() TemplateDataPathSortPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableSortBy) *TemplateDataPathSort { return v.DataPath }).(TemplateDataPathSortPtrOutput)
}

func (o TemplatePivotTableSortByOutput) Field() TemplateFieldSortPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableSortBy) *TemplateFieldSort { return v.Field }).(TemplateFieldSortPtrOutput)
}

type TemplatePivotTableSortConfiguration struct {
	FieldSortOptions []TemplatePivotFieldSortOptions `pulumi:"fieldSortOptions"`
}

// TemplatePivotTableSortConfigurationInput is an input type that accepts TemplatePivotTableSortConfigurationArgs and TemplatePivotTableSortConfigurationOutput values.
// You can construct a concrete instance of `TemplatePivotTableSortConfigurationInput` via:
//
//	TemplatePivotTableSortConfigurationArgs{...}
type TemplatePivotTableSortConfigurationInput interface {
	pulumi.Input

	ToTemplatePivotTableSortConfigurationOutput() TemplatePivotTableSortConfigurationOutput
	ToTemplatePivotTableSortConfigurationOutputWithContext(context.Context) TemplatePivotTableSortConfigurationOutput
}

type TemplatePivotTableSortConfigurationArgs struct {
	FieldSortOptions TemplatePivotFieldSortOptionsArrayInput `pulumi:"fieldSortOptions"`
}

func (TemplatePivotTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSortConfiguration)(nil)).Elem()
}

func (i TemplatePivotTableSortConfigurationArgs) ToTemplatePivotTableSortConfigurationOutput() TemplatePivotTableSortConfigurationOutput {
	return i.ToTemplatePivotTableSortConfigurationOutputWithContext(context.Background())
}

func (i TemplatePivotTableSortConfigurationArgs) ToTemplatePivotTableSortConfigurationOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableSortConfigurationOutput)
}

func (i TemplatePivotTableSortConfigurationArgs) ToTemplatePivotTableSortConfigurationPtrOutput() TemplatePivotTableSortConfigurationPtrOutput {
	return i.ToTemplatePivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableSortConfigurationArgs) ToTemplatePivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableSortConfigurationOutput).ToTemplatePivotTableSortConfigurationPtrOutputWithContext(ctx)
}

// TemplatePivotTableSortConfigurationPtrInput is an input type that accepts TemplatePivotTableSortConfigurationArgs, TemplatePivotTableSortConfigurationPtr and TemplatePivotTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableSortConfigurationPtrInput` via:
//
//	        TemplatePivotTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableSortConfigurationPtrOutput() TemplatePivotTableSortConfigurationPtrOutput
	ToTemplatePivotTableSortConfigurationPtrOutputWithContext(context.Context) TemplatePivotTableSortConfigurationPtrOutput
}

type templatePivotTableSortConfigurationPtrType TemplatePivotTableSortConfigurationArgs

func TemplatePivotTableSortConfigurationPtr(v *TemplatePivotTableSortConfigurationArgs) TemplatePivotTableSortConfigurationPtrInput {
	return (*templatePivotTableSortConfigurationPtrType)(v)
}

func (*templatePivotTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableSortConfiguration)(nil)).Elem()
}

func (i *templatePivotTableSortConfigurationPtrType) ToTemplatePivotTableSortConfigurationPtrOutput() TemplatePivotTableSortConfigurationPtrOutput {
	return i.ToTemplatePivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableSortConfigurationPtrType) ToTemplatePivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableSortConfigurationPtrOutput)
}

type TemplatePivotTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableSortConfiguration)(nil)).Elem()
}

func (o TemplatePivotTableSortConfigurationOutput) ToTemplatePivotTableSortConfigurationOutput() TemplatePivotTableSortConfigurationOutput {
	return o
}

func (o TemplatePivotTableSortConfigurationOutput) ToTemplatePivotTableSortConfigurationOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationOutput {
	return o
}

func (o TemplatePivotTableSortConfigurationOutput) ToTemplatePivotTableSortConfigurationPtrOutput() TemplatePivotTableSortConfigurationPtrOutput {
	return o.ToTemplatePivotTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableSortConfigurationOutput) ToTemplatePivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableSortConfiguration) *TemplatePivotTableSortConfiguration {
		return &v
	}).(TemplatePivotTableSortConfigurationPtrOutput)
}

func (o TemplatePivotTableSortConfigurationOutput) FieldSortOptions() TemplatePivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableSortConfiguration) []TemplatePivotFieldSortOptions { return v.FieldSortOptions }).(TemplatePivotFieldSortOptionsArrayOutput)
}

type TemplatePivotTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableSortConfiguration)(nil)).Elem()
}

func (o TemplatePivotTableSortConfigurationPtrOutput) ToTemplatePivotTableSortConfigurationPtrOutput() TemplatePivotTableSortConfigurationPtrOutput {
	return o
}

func (o TemplatePivotTableSortConfigurationPtrOutput) ToTemplatePivotTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplatePivotTableSortConfigurationPtrOutput {
	return o
}

func (o TemplatePivotTableSortConfigurationPtrOutput) Elem() TemplatePivotTableSortConfigurationOutput {
	return o.ApplyT(func(v *TemplatePivotTableSortConfiguration) TemplatePivotTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableSortConfiguration
		return ret
	}).(TemplatePivotTableSortConfigurationOutput)
}

func (o TemplatePivotTableSortConfigurationPtrOutput) FieldSortOptions() TemplatePivotFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableSortConfiguration) []TemplatePivotFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.FieldSortOptions
	}).(TemplatePivotFieldSortOptionsArrayOutput)
}

type TemplatePivotTableTotalOptions struct {
	ColumnSubtotalOptions *TemplateSubtotalOptions   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    *TemplatePivotTotalOptions `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    *TemplateSubtotalOptions   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       *TemplatePivotTotalOptions `pulumi:"rowTotalOptions"`
}

// TemplatePivotTableTotalOptionsInput is an input type that accepts TemplatePivotTableTotalOptionsArgs and TemplatePivotTableTotalOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTableTotalOptionsInput` via:
//
//	TemplatePivotTableTotalOptionsArgs{...}
type TemplatePivotTableTotalOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTableTotalOptionsOutput() TemplatePivotTableTotalOptionsOutput
	ToTemplatePivotTableTotalOptionsOutputWithContext(context.Context) TemplatePivotTableTotalOptionsOutput
}

type TemplatePivotTableTotalOptionsArgs struct {
	ColumnSubtotalOptions TemplateSubtotalOptionsPtrInput   `pulumi:"columnSubtotalOptions"`
	ColumnTotalOptions    TemplatePivotTotalOptionsPtrInput `pulumi:"columnTotalOptions"`
	RowSubtotalOptions    TemplateSubtotalOptionsPtrInput   `pulumi:"rowSubtotalOptions"`
	RowTotalOptions       TemplatePivotTotalOptionsPtrInput `pulumi:"rowTotalOptions"`
}

func (TemplatePivotTableTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableTotalOptions)(nil)).Elem()
}

func (i TemplatePivotTableTotalOptionsArgs) ToTemplatePivotTableTotalOptionsOutput() TemplatePivotTableTotalOptionsOutput {
	return i.ToTemplatePivotTableTotalOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTableTotalOptionsArgs) ToTemplatePivotTableTotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableTotalOptionsOutput)
}

func (i TemplatePivotTableTotalOptionsArgs) ToTemplatePivotTableTotalOptionsPtrOutput() TemplatePivotTableTotalOptionsPtrOutput {
	return i.ToTemplatePivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableTotalOptionsArgs) ToTemplatePivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableTotalOptionsOutput).ToTemplatePivotTableTotalOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTableTotalOptionsPtrInput is an input type that accepts TemplatePivotTableTotalOptionsArgs, TemplatePivotTableTotalOptionsPtr and TemplatePivotTableTotalOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableTotalOptionsPtrInput` via:
//
//	        TemplatePivotTableTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableTotalOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableTotalOptionsPtrOutput() TemplatePivotTableTotalOptionsPtrOutput
	ToTemplatePivotTableTotalOptionsPtrOutputWithContext(context.Context) TemplatePivotTableTotalOptionsPtrOutput
}

type templatePivotTableTotalOptionsPtrType TemplatePivotTableTotalOptionsArgs

func TemplatePivotTableTotalOptionsPtr(v *TemplatePivotTableTotalOptionsArgs) TemplatePivotTableTotalOptionsPtrInput {
	return (*templatePivotTableTotalOptionsPtrType)(v)
}

func (*templatePivotTableTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableTotalOptions)(nil)).Elem()
}

func (i *templatePivotTableTotalOptionsPtrType) ToTemplatePivotTableTotalOptionsPtrOutput() TemplatePivotTableTotalOptionsPtrOutput {
	return i.ToTemplatePivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableTotalOptionsPtrType) ToTemplatePivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableTotalOptionsPtrOutput)
}

type TemplatePivotTableTotalOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableTotalOptions)(nil)).Elem()
}

func (o TemplatePivotTableTotalOptionsOutput) ToTemplatePivotTableTotalOptionsOutput() TemplatePivotTableTotalOptionsOutput {
	return o
}

func (o TemplatePivotTableTotalOptionsOutput) ToTemplatePivotTableTotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsOutput {
	return o
}

func (o TemplatePivotTableTotalOptionsOutput) ToTemplatePivotTableTotalOptionsPtrOutput() TemplatePivotTableTotalOptionsPtrOutput {
	return o.ToTemplatePivotTableTotalOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableTotalOptionsOutput) ToTemplatePivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableTotalOptions) *TemplatePivotTableTotalOptions {
		return &v
	}).(TemplatePivotTableTotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsOutput) ColumnSubtotalOptions() TemplateSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableTotalOptions) *TemplateSubtotalOptions { return v.ColumnSubtotalOptions }).(TemplateSubtotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsOutput) ColumnTotalOptions() TemplatePivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableTotalOptions) *TemplatePivotTotalOptions { return v.ColumnTotalOptions }).(TemplatePivotTotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsOutput) RowSubtotalOptions() TemplateSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableTotalOptions) *TemplateSubtotalOptions { return v.RowSubtotalOptions }).(TemplateSubtotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsOutput) RowTotalOptions() TemplatePivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableTotalOptions) *TemplatePivotTotalOptions { return v.RowTotalOptions }).(TemplatePivotTotalOptionsPtrOutput)
}

type TemplatePivotTableTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableTotalOptions)(nil)).Elem()
}

func (o TemplatePivotTableTotalOptionsPtrOutput) ToTemplatePivotTableTotalOptionsPtrOutput() TemplatePivotTableTotalOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableTotalOptionsPtrOutput) ToTemplatePivotTableTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTableTotalOptionsPtrOutput {
	return o
}

func (o TemplatePivotTableTotalOptionsPtrOutput) Elem() TemplatePivotTableTotalOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTableTotalOptions) TemplatePivotTableTotalOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableTotalOptions
		return ret
	}).(TemplatePivotTableTotalOptionsOutput)
}

func (o TemplatePivotTableTotalOptionsPtrOutput) ColumnSubtotalOptions() TemplateSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableTotalOptions) *TemplateSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnSubtotalOptions
	}).(TemplateSubtotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsPtrOutput) ColumnTotalOptions() TemplatePivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableTotalOptions) *TemplatePivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.ColumnTotalOptions
	}).(TemplatePivotTotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsPtrOutput) RowSubtotalOptions() TemplateSubtotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableTotalOptions) *TemplateSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.RowSubtotalOptions
	}).(TemplateSubtotalOptionsPtrOutput)
}

func (o TemplatePivotTableTotalOptionsPtrOutput) RowTotalOptions() TemplatePivotTotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableTotalOptions) *TemplatePivotTotalOptions {
		if v == nil {
			return nil
		}
		return v.RowTotalOptions
	}).(TemplatePivotTotalOptionsPtrOutput)
}

type TemplatePivotTableVisual struct {
	Actions               []TemplateVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration    *TemplatePivotTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *TemplatePivotTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *TemplateVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title                 *TemplateVisualTitleLabelOptions         `pulumi:"title"`
	VisualId              string                                   `pulumi:"visualId"`
}

// TemplatePivotTableVisualInput is an input type that accepts TemplatePivotTableVisualArgs and TemplatePivotTableVisualOutput values.
// You can construct a concrete instance of `TemplatePivotTableVisualInput` via:
//
//	TemplatePivotTableVisualArgs{...}
type TemplatePivotTableVisualInput interface {
	pulumi.Input

	ToTemplatePivotTableVisualOutput() TemplatePivotTableVisualOutput
	ToTemplatePivotTableVisualOutputWithContext(context.Context) TemplatePivotTableVisualOutput
}

type TemplatePivotTableVisualArgs struct {
	Actions               TemplateVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration    TemplatePivotTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting TemplatePivotTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              TemplateVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title                 TemplateVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId              pulumi.StringInput                              `pulumi:"visualId"`
}

func (TemplatePivotTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableVisual)(nil)).Elem()
}

func (i TemplatePivotTableVisualArgs) ToTemplatePivotTableVisualOutput() TemplatePivotTableVisualOutput {
	return i.ToTemplatePivotTableVisualOutputWithContext(context.Background())
}

func (i TemplatePivotTableVisualArgs) ToTemplatePivotTableVisualOutputWithContext(ctx context.Context) TemplatePivotTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableVisualOutput)
}

func (i TemplatePivotTableVisualArgs) ToTemplatePivotTableVisualPtrOutput() TemplatePivotTableVisualPtrOutput {
	return i.ToTemplatePivotTableVisualPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTableVisualArgs) ToTemplatePivotTableVisualPtrOutputWithContext(ctx context.Context) TemplatePivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableVisualOutput).ToTemplatePivotTableVisualPtrOutputWithContext(ctx)
}

// TemplatePivotTableVisualPtrInput is an input type that accepts TemplatePivotTableVisualArgs, TemplatePivotTableVisualPtr and TemplatePivotTableVisualPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTableVisualPtrInput` via:
//
//	        TemplatePivotTableVisualArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTableVisualPtrInput interface {
	pulumi.Input

	ToTemplatePivotTableVisualPtrOutput() TemplatePivotTableVisualPtrOutput
	ToTemplatePivotTableVisualPtrOutputWithContext(context.Context) TemplatePivotTableVisualPtrOutput
}

type templatePivotTableVisualPtrType TemplatePivotTableVisualArgs

func TemplatePivotTableVisualPtr(v *TemplatePivotTableVisualArgs) TemplatePivotTableVisualPtrInput {
	return (*templatePivotTableVisualPtrType)(v)
}

func (*templatePivotTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableVisual)(nil)).Elem()
}

func (i *templatePivotTableVisualPtrType) ToTemplatePivotTableVisualPtrOutput() TemplatePivotTableVisualPtrOutput {
	return i.ToTemplatePivotTableVisualPtrOutputWithContext(context.Background())
}

func (i *templatePivotTableVisualPtrType) ToTemplatePivotTableVisualPtrOutputWithContext(ctx context.Context) TemplatePivotTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTableVisualPtrOutput)
}

type TemplatePivotTableVisualOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTableVisual)(nil)).Elem()
}

func (o TemplatePivotTableVisualOutput) ToTemplatePivotTableVisualOutput() TemplatePivotTableVisualOutput {
	return o
}

func (o TemplatePivotTableVisualOutput) ToTemplatePivotTableVisualOutputWithContext(ctx context.Context) TemplatePivotTableVisualOutput {
	return o
}

func (o TemplatePivotTableVisualOutput) ToTemplatePivotTableVisualPtrOutput() TemplatePivotTableVisualPtrOutput {
	return o.ToTemplatePivotTableVisualPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTableVisualOutput) ToTemplatePivotTableVisualPtrOutputWithContext(ctx context.Context) TemplatePivotTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTableVisual) *TemplatePivotTableVisual {
		return &v
	}).(TemplatePivotTableVisualPtrOutput)
}

func (o TemplatePivotTableVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplatePivotTableVisualOutput) ChartConfiguration() TemplatePivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) *TemplatePivotTableConfiguration { return v.ChartConfiguration }).(TemplatePivotTableConfigurationPtrOutput)
}

func (o TemplatePivotTableVisualOutput) ConditionalFormatting() TemplatePivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) *TemplatePivotTableConditionalFormatting {
		return v.ConditionalFormatting
	}).(TemplatePivotTableConditionalFormattingPtrOutput)
}

func (o TemplatePivotTableVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplatePivotTableVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplatePivotTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePivotTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplatePivotTableVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTableVisual)(nil)).Elem()
}

func (o TemplatePivotTableVisualPtrOutput) ToTemplatePivotTableVisualPtrOutput() TemplatePivotTableVisualPtrOutput {
	return o
}

func (o TemplatePivotTableVisualPtrOutput) ToTemplatePivotTableVisualPtrOutputWithContext(ctx context.Context) TemplatePivotTableVisualPtrOutput {
	return o
}

func (o TemplatePivotTableVisualPtrOutput) Elem() TemplatePivotTableVisualOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) TemplatePivotTableVisual {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTableVisual
		return ret
	}).(TemplatePivotTableVisualOutput)
}

func (o TemplatePivotTableVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplatePivotTableVisualPtrOutput) ChartConfiguration() TemplatePivotTableConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) *TemplatePivotTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplatePivotTableConfigurationPtrOutput)
}

func (o TemplatePivotTableVisualPtrOutput) ConditionalFormatting() TemplatePivotTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) *TemplatePivotTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(TemplatePivotTableConditionalFormattingPtrOutput)
}

func (o TemplatePivotTableVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplatePivotTableVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplatePivotTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplatePivotTotalOptions struct {
	CustomLabel             *string                          `pulumi:"customLabel"`
	MetricHeaderCellStyle   *TemplateTableCellStyle          `pulumi:"metricHeaderCellStyle"`
	Placement               *TemplateTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus            *TemplateTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalAggregationOptions []TemplateTotalAggregationOption `pulumi:"totalAggregationOptions"`
	TotalCellStyle          *TemplateTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility        *TemplateVisibility              `pulumi:"totalsVisibility"`
	ValueCellStyle          *TemplateTableCellStyle          `pulumi:"valueCellStyle"`
}

// TemplatePivotTotalOptionsInput is an input type that accepts TemplatePivotTotalOptionsArgs and TemplatePivotTotalOptionsOutput values.
// You can construct a concrete instance of `TemplatePivotTotalOptionsInput` via:
//
//	TemplatePivotTotalOptionsArgs{...}
type TemplatePivotTotalOptionsInput interface {
	pulumi.Input

	ToTemplatePivotTotalOptionsOutput() TemplatePivotTotalOptionsOutput
	ToTemplatePivotTotalOptionsOutputWithContext(context.Context) TemplatePivotTotalOptionsOutput
}

type TemplatePivotTotalOptionsArgs struct {
	CustomLabel             pulumi.StringPtrInput                    `pulumi:"customLabel"`
	MetricHeaderCellStyle   TemplateTableCellStylePtrInput           `pulumi:"metricHeaderCellStyle"`
	Placement               TemplateTableTotalsPlacementPtrInput     `pulumi:"placement"`
	ScrollStatus            TemplateTableTotalsScrollStatusPtrInput  `pulumi:"scrollStatus"`
	TotalAggregationOptions TemplateTotalAggregationOptionArrayInput `pulumi:"totalAggregationOptions"`
	TotalCellStyle          TemplateTableCellStylePtrInput           `pulumi:"totalCellStyle"`
	TotalsVisibility        TemplateVisibilityPtrInput               `pulumi:"totalsVisibility"`
	ValueCellStyle          TemplateTableCellStylePtrInput           `pulumi:"valueCellStyle"`
}

func (TemplatePivotTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTotalOptions)(nil)).Elem()
}

func (i TemplatePivotTotalOptionsArgs) ToTemplatePivotTotalOptionsOutput() TemplatePivotTotalOptionsOutput {
	return i.ToTemplatePivotTotalOptionsOutputWithContext(context.Background())
}

func (i TemplatePivotTotalOptionsArgs) ToTemplatePivotTotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTotalOptionsOutput)
}

func (i TemplatePivotTotalOptionsArgs) ToTemplatePivotTotalOptionsPtrOutput() TemplatePivotTotalOptionsPtrOutput {
	return i.ToTemplatePivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i TemplatePivotTotalOptionsArgs) ToTemplatePivotTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTotalOptionsOutput).ToTemplatePivotTotalOptionsPtrOutputWithContext(ctx)
}

// TemplatePivotTotalOptionsPtrInput is an input type that accepts TemplatePivotTotalOptionsArgs, TemplatePivotTotalOptionsPtr and TemplatePivotTotalOptionsPtrOutput values.
// You can construct a concrete instance of `TemplatePivotTotalOptionsPtrInput` via:
//
//	        TemplatePivotTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplatePivotTotalOptionsPtrInput interface {
	pulumi.Input

	ToTemplatePivotTotalOptionsPtrOutput() TemplatePivotTotalOptionsPtrOutput
	ToTemplatePivotTotalOptionsPtrOutputWithContext(context.Context) TemplatePivotTotalOptionsPtrOutput
}

type templatePivotTotalOptionsPtrType TemplatePivotTotalOptionsArgs

func TemplatePivotTotalOptionsPtr(v *TemplatePivotTotalOptionsArgs) TemplatePivotTotalOptionsPtrInput {
	return (*templatePivotTotalOptionsPtrType)(v)
}

func (*templatePivotTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTotalOptions)(nil)).Elem()
}

func (i *templatePivotTotalOptionsPtrType) ToTemplatePivotTotalOptionsPtrOutput() TemplatePivotTotalOptionsPtrOutput {
	return i.ToTemplatePivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *templatePivotTotalOptionsPtrType) ToTemplatePivotTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePivotTotalOptionsPtrOutput)
}

type TemplatePivotTotalOptionsOutput struct{ *pulumi.OutputState }

func (TemplatePivotTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePivotTotalOptions)(nil)).Elem()
}

func (o TemplatePivotTotalOptionsOutput) ToTemplatePivotTotalOptionsOutput() TemplatePivotTotalOptionsOutput {
	return o
}

func (o TemplatePivotTotalOptionsOutput) ToTemplatePivotTotalOptionsOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsOutput {
	return o
}

func (o TemplatePivotTotalOptionsOutput) ToTemplatePivotTotalOptionsPtrOutput() TemplatePivotTotalOptionsPtrOutput {
	return o.ToTemplatePivotTotalOptionsPtrOutputWithContext(context.Background())
}

func (o TemplatePivotTotalOptionsOutput) ToTemplatePivotTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePivotTotalOptions) *TemplatePivotTotalOptions {
		return &v
	}).(TemplatePivotTotalOptionsPtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) MetricHeaderCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateTableCellStyle { return v.MetricHeaderCellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) Placement() TemplateTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateTableTotalsPlacement { return v.Placement }).(TemplateTableTotalsPlacementPtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) ScrollStatus() TemplateTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateTableTotalsScrollStatus { return v.ScrollStatus }).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) TotalAggregationOptions() TemplateTotalAggregationOptionArrayOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) []TemplateTotalAggregationOption { return v.TotalAggregationOptions }).(TemplateTotalAggregationOptionArrayOutput)
}

func (o TemplatePivotTotalOptionsOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateTableCellStyle { return v.TotalCellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateVisibility { return v.TotalsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTotalOptionsOutput) ValueCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplatePivotTotalOptions) *TemplateTableCellStyle { return v.ValueCellStyle }).(TemplateTableCellStylePtrOutput)
}

type TemplatePivotTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplatePivotTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePivotTotalOptions)(nil)).Elem()
}

func (o TemplatePivotTotalOptionsPtrOutput) ToTemplatePivotTotalOptionsPtrOutput() TemplatePivotTotalOptionsPtrOutput {
	return o
}

func (o TemplatePivotTotalOptionsPtrOutput) ToTemplatePivotTotalOptionsPtrOutputWithContext(ctx context.Context) TemplatePivotTotalOptionsPtrOutput {
	return o
}

func (o TemplatePivotTotalOptionsPtrOutput) Elem() TemplatePivotTotalOptionsOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) TemplatePivotTotalOptions {
		if v != nil {
			return *v
		}
		var ret TemplatePivotTotalOptions
		return ret
	}).(TemplatePivotTotalOptionsOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) MetricHeaderCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) Placement() TemplateTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(TemplateTableTotalsPlacementPtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) ScrollStatus() TemplateTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) TotalAggregationOptions() TemplateTotalAggregationOptionArrayOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) []TemplateTotalAggregationOption {
		if v == nil {
			return nil
		}
		return v.TotalAggregationOptions
	}).(TemplateTotalAggregationOptionArrayOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplatePivotTotalOptionsPtrOutput) ValueCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplatePivotTotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

type TemplatePredefinedHierarchy struct {
	Columns          []TemplateColumnIdentifier `pulumi:"columns"`
	DrillDownFilters []TemplateDrillDownFilter  `pulumi:"drillDownFilters"`
	HierarchyId      string                     `pulumi:"hierarchyId"`
}

// TemplatePredefinedHierarchyInput is an input type that accepts TemplatePredefinedHierarchyArgs and TemplatePredefinedHierarchyOutput values.
// You can construct a concrete instance of `TemplatePredefinedHierarchyInput` via:
//
//	TemplatePredefinedHierarchyArgs{...}
type TemplatePredefinedHierarchyInput interface {
	pulumi.Input

	ToTemplatePredefinedHierarchyOutput() TemplatePredefinedHierarchyOutput
	ToTemplatePredefinedHierarchyOutputWithContext(context.Context) TemplatePredefinedHierarchyOutput
}

type TemplatePredefinedHierarchyArgs struct {
	Columns          TemplateColumnIdentifierArrayInput `pulumi:"columns"`
	DrillDownFilters TemplateDrillDownFilterArrayInput  `pulumi:"drillDownFilters"`
	HierarchyId      pulumi.StringInput                 `pulumi:"hierarchyId"`
}

func (TemplatePredefinedHierarchyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePredefinedHierarchy)(nil)).Elem()
}

func (i TemplatePredefinedHierarchyArgs) ToTemplatePredefinedHierarchyOutput() TemplatePredefinedHierarchyOutput {
	return i.ToTemplatePredefinedHierarchyOutputWithContext(context.Background())
}

func (i TemplatePredefinedHierarchyArgs) ToTemplatePredefinedHierarchyOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePredefinedHierarchyOutput)
}

func (i TemplatePredefinedHierarchyArgs) ToTemplatePredefinedHierarchyPtrOutput() TemplatePredefinedHierarchyPtrOutput {
	return i.ToTemplatePredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i TemplatePredefinedHierarchyArgs) ToTemplatePredefinedHierarchyPtrOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePredefinedHierarchyOutput).ToTemplatePredefinedHierarchyPtrOutputWithContext(ctx)
}

// TemplatePredefinedHierarchyPtrInput is an input type that accepts TemplatePredefinedHierarchyArgs, TemplatePredefinedHierarchyPtr and TemplatePredefinedHierarchyPtrOutput values.
// You can construct a concrete instance of `TemplatePredefinedHierarchyPtrInput` via:
//
//	        TemplatePredefinedHierarchyArgs{...}
//
//	or:
//
//	        nil
type TemplatePredefinedHierarchyPtrInput interface {
	pulumi.Input

	ToTemplatePredefinedHierarchyPtrOutput() TemplatePredefinedHierarchyPtrOutput
	ToTemplatePredefinedHierarchyPtrOutputWithContext(context.Context) TemplatePredefinedHierarchyPtrOutput
}

type templatePredefinedHierarchyPtrType TemplatePredefinedHierarchyArgs

func TemplatePredefinedHierarchyPtr(v *TemplatePredefinedHierarchyArgs) TemplatePredefinedHierarchyPtrInput {
	return (*templatePredefinedHierarchyPtrType)(v)
}

func (*templatePredefinedHierarchyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePredefinedHierarchy)(nil)).Elem()
}

func (i *templatePredefinedHierarchyPtrType) ToTemplatePredefinedHierarchyPtrOutput() TemplatePredefinedHierarchyPtrOutput {
	return i.ToTemplatePredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (i *templatePredefinedHierarchyPtrType) ToTemplatePredefinedHierarchyPtrOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePredefinedHierarchyPtrOutput)
}

type TemplatePredefinedHierarchyOutput struct{ *pulumi.OutputState }

func (TemplatePredefinedHierarchyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePredefinedHierarchy)(nil)).Elem()
}

func (o TemplatePredefinedHierarchyOutput) ToTemplatePredefinedHierarchyOutput() TemplatePredefinedHierarchyOutput {
	return o
}

func (o TemplatePredefinedHierarchyOutput) ToTemplatePredefinedHierarchyOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyOutput {
	return o
}

func (o TemplatePredefinedHierarchyOutput) ToTemplatePredefinedHierarchyPtrOutput() TemplatePredefinedHierarchyPtrOutput {
	return o.ToTemplatePredefinedHierarchyPtrOutputWithContext(context.Background())
}

func (o TemplatePredefinedHierarchyOutput) ToTemplatePredefinedHierarchyPtrOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplatePredefinedHierarchy) *TemplatePredefinedHierarchy {
		return &v
	}).(TemplatePredefinedHierarchyPtrOutput)
}

func (o TemplatePredefinedHierarchyOutput) Columns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v TemplatePredefinedHierarchy) []TemplateColumnIdentifier { return v.Columns }).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplatePredefinedHierarchyOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v TemplatePredefinedHierarchy) []TemplateDrillDownFilter { return v.DrillDownFilters }).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplatePredefinedHierarchyOutput) HierarchyId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplatePredefinedHierarchy) string { return v.HierarchyId }).(pulumi.StringOutput)
}

type TemplatePredefinedHierarchyPtrOutput struct{ *pulumi.OutputState }

func (TemplatePredefinedHierarchyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatePredefinedHierarchy)(nil)).Elem()
}

func (o TemplatePredefinedHierarchyPtrOutput) ToTemplatePredefinedHierarchyPtrOutput() TemplatePredefinedHierarchyPtrOutput {
	return o
}

func (o TemplatePredefinedHierarchyPtrOutput) ToTemplatePredefinedHierarchyPtrOutputWithContext(ctx context.Context) TemplatePredefinedHierarchyPtrOutput {
	return o
}

func (o TemplatePredefinedHierarchyPtrOutput) Elem() TemplatePredefinedHierarchyOutput {
	return o.ApplyT(func(v *TemplatePredefinedHierarchy) TemplatePredefinedHierarchy {
		if v != nil {
			return *v
		}
		var ret TemplatePredefinedHierarchy
		return ret
	}).(TemplatePredefinedHierarchyOutput)
}

func (o TemplatePredefinedHierarchyPtrOutput) Columns() TemplateColumnIdentifierArrayOutput {
	return o.ApplyT(func(v *TemplatePredefinedHierarchy) []TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(TemplateColumnIdentifierArrayOutput)
}

func (o TemplatePredefinedHierarchyPtrOutput) DrillDownFilters() TemplateDrillDownFilterArrayOutput {
	return o.ApplyT(func(v *TemplatePredefinedHierarchy) []TemplateDrillDownFilter {
		if v == nil {
			return nil
		}
		return v.DrillDownFilters
	}).(TemplateDrillDownFilterArrayOutput)
}

func (o TemplatePredefinedHierarchyPtrOutput) HierarchyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplatePredefinedHierarchy) *string {
		if v == nil {
			return nil
		}
		return &v.HierarchyId
	}).(pulumi.StringPtrOutput)
}

type TemplateProgressBarOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateProgressBarOptionsInput is an input type that accepts TemplateProgressBarOptionsArgs and TemplateProgressBarOptionsOutput values.
// You can construct a concrete instance of `TemplateProgressBarOptionsInput` via:
//
//	TemplateProgressBarOptionsArgs{...}
type TemplateProgressBarOptionsInput interface {
	pulumi.Input

	ToTemplateProgressBarOptionsOutput() TemplateProgressBarOptionsOutput
	ToTemplateProgressBarOptionsOutputWithContext(context.Context) TemplateProgressBarOptionsOutput
}

type TemplateProgressBarOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateProgressBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateProgressBarOptions)(nil)).Elem()
}

func (i TemplateProgressBarOptionsArgs) ToTemplateProgressBarOptionsOutput() TemplateProgressBarOptionsOutput {
	return i.ToTemplateProgressBarOptionsOutputWithContext(context.Background())
}

func (i TemplateProgressBarOptionsArgs) ToTemplateProgressBarOptionsOutputWithContext(ctx context.Context) TemplateProgressBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateProgressBarOptionsOutput)
}

func (i TemplateProgressBarOptionsArgs) ToTemplateProgressBarOptionsPtrOutput() TemplateProgressBarOptionsPtrOutput {
	return i.ToTemplateProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateProgressBarOptionsArgs) ToTemplateProgressBarOptionsPtrOutputWithContext(ctx context.Context) TemplateProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateProgressBarOptionsOutput).ToTemplateProgressBarOptionsPtrOutputWithContext(ctx)
}

// TemplateProgressBarOptionsPtrInput is an input type that accepts TemplateProgressBarOptionsArgs, TemplateProgressBarOptionsPtr and TemplateProgressBarOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateProgressBarOptionsPtrInput` via:
//
//	        TemplateProgressBarOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateProgressBarOptionsPtrInput interface {
	pulumi.Input

	ToTemplateProgressBarOptionsPtrOutput() TemplateProgressBarOptionsPtrOutput
	ToTemplateProgressBarOptionsPtrOutputWithContext(context.Context) TemplateProgressBarOptionsPtrOutput
}

type templateProgressBarOptionsPtrType TemplateProgressBarOptionsArgs

func TemplateProgressBarOptionsPtr(v *TemplateProgressBarOptionsArgs) TemplateProgressBarOptionsPtrInput {
	return (*templateProgressBarOptionsPtrType)(v)
}

func (*templateProgressBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateProgressBarOptions)(nil)).Elem()
}

func (i *templateProgressBarOptionsPtrType) ToTemplateProgressBarOptionsPtrOutput() TemplateProgressBarOptionsPtrOutput {
	return i.ToTemplateProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (i *templateProgressBarOptionsPtrType) ToTemplateProgressBarOptionsPtrOutputWithContext(ctx context.Context) TemplateProgressBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateProgressBarOptionsPtrOutput)
}

type TemplateProgressBarOptionsOutput struct{ *pulumi.OutputState }

func (TemplateProgressBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateProgressBarOptions)(nil)).Elem()
}

func (o TemplateProgressBarOptionsOutput) ToTemplateProgressBarOptionsOutput() TemplateProgressBarOptionsOutput {
	return o
}

func (o TemplateProgressBarOptionsOutput) ToTemplateProgressBarOptionsOutputWithContext(ctx context.Context) TemplateProgressBarOptionsOutput {
	return o
}

func (o TemplateProgressBarOptionsOutput) ToTemplateProgressBarOptionsPtrOutput() TemplateProgressBarOptionsPtrOutput {
	return o.ToTemplateProgressBarOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateProgressBarOptionsOutput) ToTemplateProgressBarOptionsPtrOutputWithContext(ctx context.Context) TemplateProgressBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateProgressBarOptions) *TemplateProgressBarOptions {
		return &v
	}).(TemplateProgressBarOptionsPtrOutput)
}

func (o TemplateProgressBarOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateProgressBarOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateProgressBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateProgressBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateProgressBarOptions)(nil)).Elem()
}

func (o TemplateProgressBarOptionsPtrOutput) ToTemplateProgressBarOptionsPtrOutput() TemplateProgressBarOptionsPtrOutput {
	return o
}

func (o TemplateProgressBarOptionsPtrOutput) ToTemplateProgressBarOptionsPtrOutputWithContext(ctx context.Context) TemplateProgressBarOptionsPtrOutput {
	return o
}

func (o TemplateProgressBarOptionsPtrOutput) Elem() TemplateProgressBarOptionsOutput {
	return o.ApplyT(func(v *TemplateProgressBarOptions) TemplateProgressBarOptions {
		if v != nil {
			return *v
		}
		var ret TemplateProgressBarOptions
		return ret
	}).(TemplateProgressBarOptionsOutput)
}

func (o TemplateProgressBarOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateProgressBarOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateRadarChartAggregatedFieldWells struct {
	Category []TemplateDimensionField `pulumi:"category"`
	Color    []TemplateDimensionField `pulumi:"color"`
	Values   []TemplateMeasureField   `pulumi:"values"`
}

// TemplateRadarChartAggregatedFieldWellsInput is an input type that accepts TemplateRadarChartAggregatedFieldWellsArgs and TemplateRadarChartAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateRadarChartAggregatedFieldWellsInput` via:
//
//	TemplateRadarChartAggregatedFieldWellsArgs{...}
type TemplateRadarChartAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateRadarChartAggregatedFieldWellsOutput() TemplateRadarChartAggregatedFieldWellsOutput
	ToTemplateRadarChartAggregatedFieldWellsOutputWithContext(context.Context) TemplateRadarChartAggregatedFieldWellsOutput
}

type TemplateRadarChartAggregatedFieldWellsArgs struct {
	Category TemplateDimensionFieldArrayInput `pulumi:"category"`
	Color    TemplateDimensionFieldArrayInput `pulumi:"color"`
	Values   TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateRadarChartAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateRadarChartAggregatedFieldWellsArgs) ToTemplateRadarChartAggregatedFieldWellsOutput() TemplateRadarChartAggregatedFieldWellsOutput {
	return i.ToTemplateRadarChartAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateRadarChartAggregatedFieldWellsArgs) ToTemplateRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAggregatedFieldWellsOutput)
}

func (i TemplateRadarChartAggregatedFieldWellsArgs) ToTemplateRadarChartAggregatedFieldWellsPtrOutput() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartAggregatedFieldWellsArgs) ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAggregatedFieldWellsOutput).ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateRadarChartAggregatedFieldWellsPtrInput is an input type that accepts TemplateRadarChartAggregatedFieldWellsArgs, TemplateRadarChartAggregatedFieldWellsPtr and TemplateRadarChartAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartAggregatedFieldWellsPtrInput` via:
//
//	        TemplateRadarChartAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartAggregatedFieldWellsPtrOutput() TemplateRadarChartAggregatedFieldWellsPtrOutput
	ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateRadarChartAggregatedFieldWellsPtrOutput
}

type templateRadarChartAggregatedFieldWellsPtrType TemplateRadarChartAggregatedFieldWellsArgs

func TemplateRadarChartAggregatedFieldWellsPtr(v *TemplateRadarChartAggregatedFieldWellsArgs) TemplateRadarChartAggregatedFieldWellsPtrInput {
	return (*templateRadarChartAggregatedFieldWellsPtrType)(v)
}

func (*templateRadarChartAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (i *templateRadarChartAggregatedFieldWellsPtrType) ToTemplateRadarChartAggregatedFieldWellsPtrOutput() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return i.ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartAggregatedFieldWellsPtrType) ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAggregatedFieldWellsPtrOutput)
}

type TemplateRadarChartAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) ToTemplateRadarChartAggregatedFieldWellsOutput() TemplateRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) ToTemplateRadarChartAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsOutput {
	return o
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) ToTemplateRadarChartAggregatedFieldWellsPtrOutput() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o.ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartAggregatedFieldWells) *TemplateRadarChartAggregatedFieldWells {
		return &v
	}).(TemplateRadarChartAggregatedFieldWellsPtrOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartAggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) Color() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartAggregatedFieldWells) []TemplateDimensionField { return v.Color }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateRadarChartAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) ToTemplateRadarChartAggregatedFieldWellsPtrOutput() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) ToTemplateRadarChartAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) Elem() TemplateRadarChartAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateRadarChartAggregatedFieldWells) TemplateRadarChartAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartAggregatedFieldWells
		return ret
	}).(TemplateRadarChartAggregatedFieldWellsOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) Color() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Color
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateRadarChartAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateRadarChartAreaStyleSettings struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateRadarChartAreaStyleSettingsInput is an input type that accepts TemplateRadarChartAreaStyleSettingsArgs and TemplateRadarChartAreaStyleSettingsOutput values.
// You can construct a concrete instance of `TemplateRadarChartAreaStyleSettingsInput` via:
//
//	TemplateRadarChartAreaStyleSettingsArgs{...}
type TemplateRadarChartAreaStyleSettingsInput interface {
	pulumi.Input

	ToTemplateRadarChartAreaStyleSettingsOutput() TemplateRadarChartAreaStyleSettingsOutput
	ToTemplateRadarChartAreaStyleSettingsOutputWithContext(context.Context) TemplateRadarChartAreaStyleSettingsOutput
}

type TemplateRadarChartAreaStyleSettingsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateRadarChartAreaStyleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i TemplateRadarChartAreaStyleSettingsArgs) ToTemplateRadarChartAreaStyleSettingsOutput() TemplateRadarChartAreaStyleSettingsOutput {
	return i.ToTemplateRadarChartAreaStyleSettingsOutputWithContext(context.Background())
}

func (i TemplateRadarChartAreaStyleSettingsArgs) ToTemplateRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAreaStyleSettingsOutput)
}

func (i TemplateRadarChartAreaStyleSettingsArgs) ToTemplateRadarChartAreaStyleSettingsPtrOutput() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return i.ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartAreaStyleSettingsArgs) ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAreaStyleSettingsOutput).ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(ctx)
}

// TemplateRadarChartAreaStyleSettingsPtrInput is an input type that accepts TemplateRadarChartAreaStyleSettingsArgs, TemplateRadarChartAreaStyleSettingsPtr and TemplateRadarChartAreaStyleSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartAreaStyleSettingsPtrInput` via:
//
//	        TemplateRadarChartAreaStyleSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartAreaStyleSettingsPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartAreaStyleSettingsPtrOutput() TemplateRadarChartAreaStyleSettingsPtrOutput
	ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(context.Context) TemplateRadarChartAreaStyleSettingsPtrOutput
}

type templateRadarChartAreaStyleSettingsPtrType TemplateRadarChartAreaStyleSettingsArgs

func TemplateRadarChartAreaStyleSettingsPtr(v *TemplateRadarChartAreaStyleSettingsArgs) TemplateRadarChartAreaStyleSettingsPtrInput {
	return (*templateRadarChartAreaStyleSettingsPtrType)(v)
}

func (*templateRadarChartAreaStyleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartAreaStyleSettings)(nil)).Elem()
}

func (i *templateRadarChartAreaStyleSettingsPtrType) ToTemplateRadarChartAreaStyleSettingsPtrOutput() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return i.ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartAreaStyleSettingsPtrType) ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartAreaStyleSettingsPtrOutput)
}

type TemplateRadarChartAreaStyleSettingsOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAreaStyleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o TemplateRadarChartAreaStyleSettingsOutput) ToTemplateRadarChartAreaStyleSettingsOutput() TemplateRadarChartAreaStyleSettingsOutput {
	return o
}

func (o TemplateRadarChartAreaStyleSettingsOutput) ToTemplateRadarChartAreaStyleSettingsOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsOutput {
	return o
}

func (o TemplateRadarChartAreaStyleSettingsOutput) ToTemplateRadarChartAreaStyleSettingsPtrOutput() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o.ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartAreaStyleSettingsOutput) ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartAreaStyleSettings) *TemplateRadarChartAreaStyleSettings {
		return &v
	}).(TemplateRadarChartAreaStyleSettingsPtrOutput)
}

func (o TemplateRadarChartAreaStyleSettingsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartAreaStyleSettings) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateRadarChartAreaStyleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartAreaStyleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartAreaStyleSettings)(nil)).Elem()
}

func (o TemplateRadarChartAreaStyleSettingsPtrOutput) ToTemplateRadarChartAreaStyleSettingsPtrOutput() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o TemplateRadarChartAreaStyleSettingsPtrOutput) ToTemplateRadarChartAreaStyleSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o
}

func (o TemplateRadarChartAreaStyleSettingsPtrOutput) Elem() TemplateRadarChartAreaStyleSettingsOutput {
	return o.ApplyT(func(v *TemplateRadarChartAreaStyleSettings) TemplateRadarChartAreaStyleSettings {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartAreaStyleSettings
		return ret
	}).(TemplateRadarChartAreaStyleSettingsOutput)
}

func (o TemplateRadarChartAreaStyleSettingsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartAreaStyleSettings) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateRadarChartConfiguration struct {
	AlternateBandColorsVisibility *TemplateVisibility                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        *string                              `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         *string                              `pulumi:"alternateBandOddColor"`
	AxesRangeScale                *TemplateRadarChartAxesRangeScale    `pulumi:"axesRangeScale"`
	BaseSeriesSettings            *TemplateRadarChartSeriesSettings    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  *TemplateAxisDisplayOptions          `pulumi:"categoryAxis"`
	CategoryLabelOptions          *TemplateChartAxisLabelOptions       `pulumi:"categoryLabelOptions"`
	ColorAxis                     *TemplateAxisDisplayOptions          `pulumi:"colorAxis"`
	ColorLabelOptions             *TemplateChartAxisLabelOptions       `pulumi:"colorLabelOptions"`
	FieldWells                    *TemplateRadarChartFieldWells        `pulumi:"fieldWells"`
	Legend                        *TemplateLegendOptions               `pulumi:"legend"`
	Shape                         *TemplateRadarChartShape             `pulumi:"shape"`
	SortConfiguration             *TemplateRadarChartSortConfiguration `pulumi:"sortConfiguration"`
	StartAngle                    *float64                             `pulumi:"startAngle"`
	VisualPalette                 *TemplateVisualPalette               `pulumi:"visualPalette"`
}

// TemplateRadarChartConfigurationInput is an input type that accepts TemplateRadarChartConfigurationArgs and TemplateRadarChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateRadarChartConfigurationInput` via:
//
//	TemplateRadarChartConfigurationArgs{...}
type TemplateRadarChartConfigurationInput interface {
	pulumi.Input

	ToTemplateRadarChartConfigurationOutput() TemplateRadarChartConfigurationOutput
	ToTemplateRadarChartConfigurationOutputWithContext(context.Context) TemplateRadarChartConfigurationOutput
}

type TemplateRadarChartConfigurationArgs struct {
	AlternateBandColorsVisibility TemplateVisibilityPtrInput                  `pulumi:"alternateBandColorsVisibility"`
	AlternateBandEvenColor        pulumi.StringPtrInput                       `pulumi:"alternateBandEvenColor"`
	AlternateBandOddColor         pulumi.StringPtrInput                       `pulumi:"alternateBandOddColor"`
	AxesRangeScale                TemplateRadarChartAxesRangeScalePtrInput    `pulumi:"axesRangeScale"`
	BaseSeriesSettings            TemplateRadarChartSeriesSettingsPtrInput    `pulumi:"baseSeriesSettings"`
	CategoryAxis                  TemplateAxisDisplayOptionsPtrInput          `pulumi:"categoryAxis"`
	CategoryLabelOptions          TemplateChartAxisLabelOptionsPtrInput       `pulumi:"categoryLabelOptions"`
	ColorAxis                     TemplateAxisDisplayOptionsPtrInput          `pulumi:"colorAxis"`
	ColorLabelOptions             TemplateChartAxisLabelOptionsPtrInput       `pulumi:"colorLabelOptions"`
	FieldWells                    TemplateRadarChartFieldWellsPtrInput        `pulumi:"fieldWells"`
	Legend                        TemplateLegendOptionsPtrInput               `pulumi:"legend"`
	Shape                         TemplateRadarChartShapePtrInput             `pulumi:"shape"`
	SortConfiguration             TemplateRadarChartSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	StartAngle                    pulumi.Float64PtrInput                      `pulumi:"startAngle"`
	VisualPalette                 TemplateVisualPalettePtrInput               `pulumi:"visualPalette"`
}

func (TemplateRadarChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartConfiguration)(nil)).Elem()
}

func (i TemplateRadarChartConfigurationArgs) ToTemplateRadarChartConfigurationOutput() TemplateRadarChartConfigurationOutput {
	return i.ToTemplateRadarChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateRadarChartConfigurationArgs) ToTemplateRadarChartConfigurationOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartConfigurationOutput)
}

func (i TemplateRadarChartConfigurationArgs) ToTemplateRadarChartConfigurationPtrOutput() TemplateRadarChartConfigurationPtrOutput {
	return i.ToTemplateRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartConfigurationArgs) ToTemplateRadarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartConfigurationOutput).ToTemplateRadarChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateRadarChartConfigurationPtrInput is an input type that accepts TemplateRadarChartConfigurationArgs, TemplateRadarChartConfigurationPtr and TemplateRadarChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartConfigurationPtrInput` via:
//
//	        TemplateRadarChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartConfigurationPtrOutput() TemplateRadarChartConfigurationPtrOutput
	ToTemplateRadarChartConfigurationPtrOutputWithContext(context.Context) TemplateRadarChartConfigurationPtrOutput
}

type templateRadarChartConfigurationPtrType TemplateRadarChartConfigurationArgs

func TemplateRadarChartConfigurationPtr(v *TemplateRadarChartConfigurationArgs) TemplateRadarChartConfigurationPtrInput {
	return (*templateRadarChartConfigurationPtrType)(v)
}

func (*templateRadarChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartConfiguration)(nil)).Elem()
}

func (i *templateRadarChartConfigurationPtrType) ToTemplateRadarChartConfigurationPtrOutput() TemplateRadarChartConfigurationPtrOutput {
	return i.ToTemplateRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartConfigurationPtrType) ToTemplateRadarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartConfigurationPtrOutput)
}

type TemplateRadarChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartConfiguration)(nil)).Elem()
}

func (o TemplateRadarChartConfigurationOutput) ToTemplateRadarChartConfigurationOutput() TemplateRadarChartConfigurationOutput {
	return o
}

func (o TemplateRadarChartConfigurationOutput) ToTemplateRadarChartConfigurationOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationOutput {
	return o
}

func (o TemplateRadarChartConfigurationOutput) ToTemplateRadarChartConfigurationPtrOutput() TemplateRadarChartConfigurationPtrOutput {
	return o.ToTemplateRadarChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartConfigurationOutput) ToTemplateRadarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartConfiguration) *TemplateRadarChartConfiguration {
		return &v
	}).(TemplateRadarChartConfigurationPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) AlternateBandColorsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateVisibility { return v.AlternateBandColorsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *string { return v.AlternateBandEvenColor }).(pulumi.StringPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *string { return v.AlternateBandOddColor }).(pulumi.StringPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) AxesRangeScale() TemplateRadarChartAxesRangeScalePtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateRadarChartAxesRangeScale { return v.AxesRangeScale }).(TemplateRadarChartAxesRangeScalePtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) BaseSeriesSettings() TemplateRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateRadarChartSeriesSettings { return v.BaseSeriesSettings }).(TemplateRadarChartSeriesSettingsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateAxisDisplayOptions { return v.CategoryAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateChartAxisLabelOptions { return v.CategoryLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) ColorAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateAxisDisplayOptions { return v.ColorAxis }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateChartAxisLabelOptions { return v.ColorLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) FieldWells() TemplateRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateRadarChartFieldWells { return v.FieldWells }).(TemplateRadarChartFieldWellsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) Shape() TemplateRadarChartShapePtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateRadarChartShape { return v.Shape }).(TemplateRadarChartShapePtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) SortConfiguration() TemplateRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateRadarChartSortConfiguration {
		return v.SortConfiguration
	}).(TemplateRadarChartSortConfigurationPtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *float64 { return v.StartAngle }).(pulumi.Float64PtrOutput)
}

func (o TemplateRadarChartConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateRadarChartConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

type TemplateRadarChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartConfiguration)(nil)).Elem()
}

func (o TemplateRadarChartConfigurationPtrOutput) ToTemplateRadarChartConfigurationPtrOutput() TemplateRadarChartConfigurationPtrOutput {
	return o
}

func (o TemplateRadarChartConfigurationPtrOutput) ToTemplateRadarChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartConfigurationPtrOutput {
	return o
}

func (o TemplateRadarChartConfigurationPtrOutput) Elem() TemplateRadarChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) TemplateRadarChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartConfiguration
		return ret
	}).(TemplateRadarChartConfigurationOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) AlternateBandColorsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.AlternateBandColorsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) AlternateBandEvenColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandEvenColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) AlternateBandOddColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AlternateBandOddColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) AxesRangeScale() TemplateRadarChartAxesRangeScalePtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateRadarChartAxesRangeScale {
		if v == nil {
			return nil
		}
		return v.AxesRangeScale
	}).(TemplateRadarChartAxesRangeScalePtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) BaseSeriesSettings() TemplateRadarChartSeriesSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateRadarChartSeriesSettings {
		if v == nil {
			return nil
		}
		return v.BaseSeriesSettings
	}).(TemplateRadarChartSeriesSettingsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) CategoryAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.CategoryAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) CategoryLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.CategoryLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) ColorAxis() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.ColorAxis
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) FieldWells() TemplateRadarChartFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateRadarChartFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateRadarChartFieldWellsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) Shape() TemplateRadarChartShapePtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateRadarChartShape {
		if v == nil {
			return nil
		}
		return v.Shape
	}).(TemplateRadarChartShapePtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) SortConfiguration() TemplateRadarChartSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateRadarChartSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateRadarChartSortConfigurationPtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) StartAngle() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.StartAngle
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateRadarChartConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

type TemplateRadarChartFieldWells struct {
	RadarChartAggregatedFieldWells *TemplateRadarChartAggregatedFieldWells `pulumi:"radarChartAggregatedFieldWells"`
}

// TemplateRadarChartFieldWellsInput is an input type that accepts TemplateRadarChartFieldWellsArgs and TemplateRadarChartFieldWellsOutput values.
// You can construct a concrete instance of `TemplateRadarChartFieldWellsInput` via:
//
//	TemplateRadarChartFieldWellsArgs{...}
type TemplateRadarChartFieldWellsInput interface {
	pulumi.Input

	ToTemplateRadarChartFieldWellsOutput() TemplateRadarChartFieldWellsOutput
	ToTemplateRadarChartFieldWellsOutputWithContext(context.Context) TemplateRadarChartFieldWellsOutput
}

type TemplateRadarChartFieldWellsArgs struct {
	RadarChartAggregatedFieldWells TemplateRadarChartAggregatedFieldWellsPtrInput `pulumi:"radarChartAggregatedFieldWells"`
}

func (TemplateRadarChartFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartFieldWells)(nil)).Elem()
}

func (i TemplateRadarChartFieldWellsArgs) ToTemplateRadarChartFieldWellsOutput() TemplateRadarChartFieldWellsOutput {
	return i.ToTemplateRadarChartFieldWellsOutputWithContext(context.Background())
}

func (i TemplateRadarChartFieldWellsArgs) ToTemplateRadarChartFieldWellsOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartFieldWellsOutput)
}

func (i TemplateRadarChartFieldWellsArgs) ToTemplateRadarChartFieldWellsPtrOutput() TemplateRadarChartFieldWellsPtrOutput {
	return i.ToTemplateRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartFieldWellsArgs) ToTemplateRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartFieldWellsOutput).ToTemplateRadarChartFieldWellsPtrOutputWithContext(ctx)
}

// TemplateRadarChartFieldWellsPtrInput is an input type that accepts TemplateRadarChartFieldWellsArgs, TemplateRadarChartFieldWellsPtr and TemplateRadarChartFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartFieldWellsPtrInput` via:
//
//	        TemplateRadarChartFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartFieldWellsPtrOutput() TemplateRadarChartFieldWellsPtrOutput
	ToTemplateRadarChartFieldWellsPtrOutputWithContext(context.Context) TemplateRadarChartFieldWellsPtrOutput
}

type templateRadarChartFieldWellsPtrType TemplateRadarChartFieldWellsArgs

func TemplateRadarChartFieldWellsPtr(v *TemplateRadarChartFieldWellsArgs) TemplateRadarChartFieldWellsPtrInput {
	return (*templateRadarChartFieldWellsPtrType)(v)
}

func (*templateRadarChartFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartFieldWells)(nil)).Elem()
}

func (i *templateRadarChartFieldWellsPtrType) ToTemplateRadarChartFieldWellsPtrOutput() TemplateRadarChartFieldWellsPtrOutput {
	return i.ToTemplateRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartFieldWellsPtrType) ToTemplateRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartFieldWellsPtrOutput)
}

type TemplateRadarChartFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartFieldWells)(nil)).Elem()
}

func (o TemplateRadarChartFieldWellsOutput) ToTemplateRadarChartFieldWellsOutput() TemplateRadarChartFieldWellsOutput {
	return o
}

func (o TemplateRadarChartFieldWellsOutput) ToTemplateRadarChartFieldWellsOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsOutput {
	return o
}

func (o TemplateRadarChartFieldWellsOutput) ToTemplateRadarChartFieldWellsPtrOutput() TemplateRadarChartFieldWellsPtrOutput {
	return o.ToTemplateRadarChartFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartFieldWellsOutput) ToTemplateRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartFieldWells) *TemplateRadarChartFieldWells {
		return &v
	}).(TemplateRadarChartFieldWellsPtrOutput)
}

func (o TemplateRadarChartFieldWellsOutput) RadarChartAggregatedFieldWells() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartFieldWells) *TemplateRadarChartAggregatedFieldWells {
		return v.RadarChartAggregatedFieldWells
	}).(TemplateRadarChartAggregatedFieldWellsPtrOutput)
}

type TemplateRadarChartFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartFieldWells)(nil)).Elem()
}

func (o TemplateRadarChartFieldWellsPtrOutput) ToTemplateRadarChartFieldWellsPtrOutput() TemplateRadarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateRadarChartFieldWellsPtrOutput) ToTemplateRadarChartFieldWellsPtrOutputWithContext(ctx context.Context) TemplateRadarChartFieldWellsPtrOutput {
	return o
}

func (o TemplateRadarChartFieldWellsPtrOutput) Elem() TemplateRadarChartFieldWellsOutput {
	return o.ApplyT(func(v *TemplateRadarChartFieldWells) TemplateRadarChartFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartFieldWells
		return ret
	}).(TemplateRadarChartFieldWellsOutput)
}

func (o TemplateRadarChartFieldWellsPtrOutput) RadarChartAggregatedFieldWells() TemplateRadarChartAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartFieldWells) *TemplateRadarChartAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.RadarChartAggregatedFieldWells
	}).(TemplateRadarChartAggregatedFieldWellsPtrOutput)
}

type TemplateRadarChartSeriesSettings struct {
	AreaStyleSettings *TemplateRadarChartAreaStyleSettings `pulumi:"areaStyleSettings"`
}

// TemplateRadarChartSeriesSettingsInput is an input type that accepts TemplateRadarChartSeriesSettingsArgs and TemplateRadarChartSeriesSettingsOutput values.
// You can construct a concrete instance of `TemplateRadarChartSeriesSettingsInput` via:
//
//	TemplateRadarChartSeriesSettingsArgs{...}
type TemplateRadarChartSeriesSettingsInput interface {
	pulumi.Input

	ToTemplateRadarChartSeriesSettingsOutput() TemplateRadarChartSeriesSettingsOutput
	ToTemplateRadarChartSeriesSettingsOutputWithContext(context.Context) TemplateRadarChartSeriesSettingsOutput
}

type TemplateRadarChartSeriesSettingsArgs struct {
	AreaStyleSettings TemplateRadarChartAreaStyleSettingsPtrInput `pulumi:"areaStyleSettings"`
}

func (TemplateRadarChartSeriesSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartSeriesSettings)(nil)).Elem()
}

func (i TemplateRadarChartSeriesSettingsArgs) ToTemplateRadarChartSeriesSettingsOutput() TemplateRadarChartSeriesSettingsOutput {
	return i.ToTemplateRadarChartSeriesSettingsOutputWithContext(context.Background())
}

func (i TemplateRadarChartSeriesSettingsArgs) ToTemplateRadarChartSeriesSettingsOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSeriesSettingsOutput)
}

func (i TemplateRadarChartSeriesSettingsArgs) ToTemplateRadarChartSeriesSettingsPtrOutput() TemplateRadarChartSeriesSettingsPtrOutput {
	return i.ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartSeriesSettingsArgs) ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSeriesSettingsOutput).ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(ctx)
}

// TemplateRadarChartSeriesSettingsPtrInput is an input type that accepts TemplateRadarChartSeriesSettingsArgs, TemplateRadarChartSeriesSettingsPtr and TemplateRadarChartSeriesSettingsPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartSeriesSettingsPtrInput` via:
//
//	        TemplateRadarChartSeriesSettingsArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartSeriesSettingsPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartSeriesSettingsPtrOutput() TemplateRadarChartSeriesSettingsPtrOutput
	ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(context.Context) TemplateRadarChartSeriesSettingsPtrOutput
}

type templateRadarChartSeriesSettingsPtrType TemplateRadarChartSeriesSettingsArgs

func TemplateRadarChartSeriesSettingsPtr(v *TemplateRadarChartSeriesSettingsArgs) TemplateRadarChartSeriesSettingsPtrInput {
	return (*templateRadarChartSeriesSettingsPtrType)(v)
}

func (*templateRadarChartSeriesSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartSeriesSettings)(nil)).Elem()
}

func (i *templateRadarChartSeriesSettingsPtrType) ToTemplateRadarChartSeriesSettingsPtrOutput() TemplateRadarChartSeriesSettingsPtrOutput {
	return i.ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartSeriesSettingsPtrType) ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSeriesSettingsPtrOutput)
}

type TemplateRadarChartSeriesSettingsOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartSeriesSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartSeriesSettings)(nil)).Elem()
}

func (o TemplateRadarChartSeriesSettingsOutput) ToTemplateRadarChartSeriesSettingsOutput() TemplateRadarChartSeriesSettingsOutput {
	return o
}

func (o TemplateRadarChartSeriesSettingsOutput) ToTemplateRadarChartSeriesSettingsOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsOutput {
	return o
}

func (o TemplateRadarChartSeriesSettingsOutput) ToTemplateRadarChartSeriesSettingsPtrOutput() TemplateRadarChartSeriesSettingsPtrOutput {
	return o.ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartSeriesSettingsOutput) ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartSeriesSettings) *TemplateRadarChartSeriesSettings {
		return &v
	}).(TemplateRadarChartSeriesSettingsPtrOutput)
}

func (o TemplateRadarChartSeriesSettingsOutput) AreaStyleSettings() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartSeriesSettings) *TemplateRadarChartAreaStyleSettings {
		return v.AreaStyleSettings
	}).(TemplateRadarChartAreaStyleSettingsPtrOutput)
}

type TemplateRadarChartSeriesSettingsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartSeriesSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartSeriesSettings)(nil)).Elem()
}

func (o TemplateRadarChartSeriesSettingsPtrOutput) ToTemplateRadarChartSeriesSettingsPtrOutput() TemplateRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o TemplateRadarChartSeriesSettingsPtrOutput) ToTemplateRadarChartSeriesSettingsPtrOutputWithContext(ctx context.Context) TemplateRadarChartSeriesSettingsPtrOutput {
	return o
}

func (o TemplateRadarChartSeriesSettingsPtrOutput) Elem() TemplateRadarChartSeriesSettingsOutput {
	return o.ApplyT(func(v *TemplateRadarChartSeriesSettings) TemplateRadarChartSeriesSettings {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartSeriesSettings
		return ret
	}).(TemplateRadarChartSeriesSettingsOutput)
}

func (o TemplateRadarChartSeriesSettingsPtrOutput) AreaStyleSettings() TemplateRadarChartAreaStyleSettingsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartSeriesSettings) *TemplateRadarChartAreaStyleSettings {
		if v == nil {
			return nil
		}
		return v.AreaStyleSettings
	}).(TemplateRadarChartAreaStyleSettingsPtrOutput)
}

type TemplateRadarChartSortConfiguration struct {
	CategoryItemsLimit *TemplateItemsLimitConfiguration `pulumi:"categoryItemsLimit"`
	CategorySort       []TemplateFieldSortOptions       `pulumi:"categorySort"`
	ColorItemsLimit    *TemplateItemsLimitConfiguration `pulumi:"colorItemsLimit"`
	ColorSort          []TemplateFieldSortOptions       `pulumi:"colorSort"`
}

// TemplateRadarChartSortConfigurationInput is an input type that accepts TemplateRadarChartSortConfigurationArgs and TemplateRadarChartSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateRadarChartSortConfigurationInput` via:
//
//	TemplateRadarChartSortConfigurationArgs{...}
type TemplateRadarChartSortConfigurationInput interface {
	pulumi.Input

	ToTemplateRadarChartSortConfigurationOutput() TemplateRadarChartSortConfigurationOutput
	ToTemplateRadarChartSortConfigurationOutputWithContext(context.Context) TemplateRadarChartSortConfigurationOutput
}

type TemplateRadarChartSortConfigurationArgs struct {
	CategoryItemsLimit TemplateItemsLimitConfigurationPtrInput `pulumi:"categoryItemsLimit"`
	CategorySort       TemplateFieldSortOptionsArrayInput      `pulumi:"categorySort"`
	ColorItemsLimit    TemplateItemsLimitConfigurationPtrInput `pulumi:"colorItemsLimit"`
	ColorSort          TemplateFieldSortOptionsArrayInput      `pulumi:"colorSort"`
}

func (TemplateRadarChartSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartSortConfiguration)(nil)).Elem()
}

func (i TemplateRadarChartSortConfigurationArgs) ToTemplateRadarChartSortConfigurationOutput() TemplateRadarChartSortConfigurationOutput {
	return i.ToTemplateRadarChartSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateRadarChartSortConfigurationArgs) ToTemplateRadarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSortConfigurationOutput)
}

func (i TemplateRadarChartSortConfigurationArgs) ToTemplateRadarChartSortConfigurationPtrOutput() TemplateRadarChartSortConfigurationPtrOutput {
	return i.ToTemplateRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartSortConfigurationArgs) ToTemplateRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSortConfigurationOutput).ToTemplateRadarChartSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateRadarChartSortConfigurationPtrInput is an input type that accepts TemplateRadarChartSortConfigurationArgs, TemplateRadarChartSortConfigurationPtr and TemplateRadarChartSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartSortConfigurationPtrInput` via:
//
//	        TemplateRadarChartSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartSortConfigurationPtrOutput() TemplateRadarChartSortConfigurationPtrOutput
	ToTemplateRadarChartSortConfigurationPtrOutputWithContext(context.Context) TemplateRadarChartSortConfigurationPtrOutput
}

type templateRadarChartSortConfigurationPtrType TemplateRadarChartSortConfigurationArgs

func TemplateRadarChartSortConfigurationPtr(v *TemplateRadarChartSortConfigurationArgs) TemplateRadarChartSortConfigurationPtrInput {
	return (*templateRadarChartSortConfigurationPtrType)(v)
}

func (*templateRadarChartSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartSortConfiguration)(nil)).Elem()
}

func (i *templateRadarChartSortConfigurationPtrType) ToTemplateRadarChartSortConfigurationPtrOutput() TemplateRadarChartSortConfigurationPtrOutput {
	return i.ToTemplateRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartSortConfigurationPtrType) ToTemplateRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartSortConfigurationPtrOutput)
}

type TemplateRadarChartSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateRadarChartSortConfigurationOutput) ToTemplateRadarChartSortConfigurationOutput() TemplateRadarChartSortConfigurationOutput {
	return o
}

func (o TemplateRadarChartSortConfigurationOutput) ToTemplateRadarChartSortConfigurationOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationOutput {
	return o
}

func (o TemplateRadarChartSortConfigurationOutput) ToTemplateRadarChartSortConfigurationPtrOutput() TemplateRadarChartSortConfigurationPtrOutput {
	return o.ToTemplateRadarChartSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartSortConfigurationOutput) ToTemplateRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartSortConfiguration) *TemplateRadarChartSortConfiguration {
		return &v
	}).(TemplateRadarChartSortConfigurationPtrOutput)
}

func (o TemplateRadarChartSortConfigurationOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateRadarChartSortConfigurationOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartSortConfiguration) []TemplateFieldSortOptions { return v.CategorySort }).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateRadarChartSortConfigurationOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartSortConfiguration) *TemplateItemsLimitConfiguration { return v.ColorItemsLimit }).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateRadarChartSortConfigurationOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartSortConfiguration) []TemplateFieldSortOptions { return v.ColorSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateRadarChartSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartSortConfiguration)(nil)).Elem()
}

func (o TemplateRadarChartSortConfigurationPtrOutput) ToTemplateRadarChartSortConfigurationPtrOutput() TemplateRadarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateRadarChartSortConfigurationPtrOutput) ToTemplateRadarChartSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateRadarChartSortConfigurationPtrOutput {
	return o
}

func (o TemplateRadarChartSortConfigurationPtrOutput) Elem() TemplateRadarChartSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateRadarChartSortConfiguration) TemplateRadarChartSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartSortConfiguration
		return ret
	}).(TemplateRadarChartSortConfigurationOutput)
}

func (o TemplateRadarChartSortConfigurationPtrOutput) CategoryItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.CategoryItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateRadarChartSortConfigurationPtrOutput) CategorySort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.CategorySort
	}).(TemplateFieldSortOptionsArrayOutput)
}

func (o TemplateRadarChartSortConfigurationPtrOutput) ColorItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.ColorItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateRadarChartSortConfigurationPtrOutput) ColorSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.ColorSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateRadarChartVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateRadarChartConfiguration    `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateRadarChartVisualInput is an input type that accepts TemplateRadarChartVisualArgs and TemplateRadarChartVisualOutput values.
// You can construct a concrete instance of `TemplateRadarChartVisualInput` via:
//
//	TemplateRadarChartVisualArgs{...}
type TemplateRadarChartVisualInput interface {
	pulumi.Input

	ToTemplateRadarChartVisualOutput() TemplateRadarChartVisualOutput
	ToTemplateRadarChartVisualOutputWithContext(context.Context) TemplateRadarChartVisualOutput
}

type TemplateRadarChartVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateRadarChartConfigurationPtrInput    `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateRadarChartVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartVisual)(nil)).Elem()
}

func (i TemplateRadarChartVisualArgs) ToTemplateRadarChartVisualOutput() TemplateRadarChartVisualOutput {
	return i.ToTemplateRadarChartVisualOutputWithContext(context.Background())
}

func (i TemplateRadarChartVisualArgs) ToTemplateRadarChartVisualOutputWithContext(ctx context.Context) TemplateRadarChartVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartVisualOutput)
}

func (i TemplateRadarChartVisualArgs) ToTemplateRadarChartVisualPtrOutput() TemplateRadarChartVisualPtrOutput {
	return i.ToTemplateRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i TemplateRadarChartVisualArgs) ToTemplateRadarChartVisualPtrOutputWithContext(ctx context.Context) TemplateRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartVisualOutput).ToTemplateRadarChartVisualPtrOutputWithContext(ctx)
}

// TemplateRadarChartVisualPtrInput is an input type that accepts TemplateRadarChartVisualArgs, TemplateRadarChartVisualPtr and TemplateRadarChartVisualPtrOutput values.
// You can construct a concrete instance of `TemplateRadarChartVisualPtrInput` via:
//
//	        TemplateRadarChartVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateRadarChartVisualPtrInput interface {
	pulumi.Input

	ToTemplateRadarChartVisualPtrOutput() TemplateRadarChartVisualPtrOutput
	ToTemplateRadarChartVisualPtrOutputWithContext(context.Context) TemplateRadarChartVisualPtrOutput
}

type templateRadarChartVisualPtrType TemplateRadarChartVisualArgs

func TemplateRadarChartVisualPtr(v *TemplateRadarChartVisualArgs) TemplateRadarChartVisualPtrInput {
	return (*templateRadarChartVisualPtrType)(v)
}

func (*templateRadarChartVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartVisual)(nil)).Elem()
}

func (i *templateRadarChartVisualPtrType) ToTemplateRadarChartVisualPtrOutput() TemplateRadarChartVisualPtrOutput {
	return i.ToTemplateRadarChartVisualPtrOutputWithContext(context.Background())
}

func (i *templateRadarChartVisualPtrType) ToTemplateRadarChartVisualPtrOutputWithContext(ctx context.Context) TemplateRadarChartVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRadarChartVisualPtrOutput)
}

type TemplateRadarChartVisualOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRadarChartVisual)(nil)).Elem()
}

func (o TemplateRadarChartVisualOutput) ToTemplateRadarChartVisualOutput() TemplateRadarChartVisualOutput {
	return o
}

func (o TemplateRadarChartVisualOutput) ToTemplateRadarChartVisualOutputWithContext(ctx context.Context) TemplateRadarChartVisualOutput {
	return o
}

func (o TemplateRadarChartVisualOutput) ToTemplateRadarChartVisualPtrOutput() TemplateRadarChartVisualPtrOutput {
	return o.ToTemplateRadarChartVisualPtrOutputWithContext(context.Background())
}

func (o TemplateRadarChartVisualOutput) ToTemplateRadarChartVisualPtrOutputWithContext(ctx context.Context) TemplateRadarChartVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRadarChartVisual) *TemplateRadarChartVisual {
		return &v
	}).(TemplateRadarChartVisualPtrOutput)
}

func (o TemplateRadarChartVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateRadarChartVisualOutput) ChartConfiguration() TemplateRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) *TemplateRadarChartConfiguration { return v.ChartConfiguration }).(TemplateRadarChartConfigurationPtrOutput)
}

func (o TemplateRadarChartVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateRadarChartVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateRadarChartVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateRadarChartVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateRadarChartVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateRadarChartVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateRadarChartVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRadarChartVisual)(nil)).Elem()
}

func (o TemplateRadarChartVisualPtrOutput) ToTemplateRadarChartVisualPtrOutput() TemplateRadarChartVisualPtrOutput {
	return o
}

func (o TemplateRadarChartVisualPtrOutput) ToTemplateRadarChartVisualPtrOutputWithContext(ctx context.Context) TemplateRadarChartVisualPtrOutput {
	return o
}

func (o TemplateRadarChartVisualPtrOutput) Elem() TemplateRadarChartVisualOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) TemplateRadarChartVisual {
		if v != nil {
			return *v
		}
		var ret TemplateRadarChartVisual
		return ret
	}).(TemplateRadarChartVisualOutput)
}

func (o TemplateRadarChartVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateRadarChartVisualPtrOutput) ChartConfiguration() TemplateRadarChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) *TemplateRadarChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateRadarChartConfigurationPtrOutput)
}

func (o TemplateRadarChartVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateRadarChartVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateRadarChartVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateRadarChartVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRadarChartVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateRangeEndsLabelType struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateRangeEndsLabelTypeInput is an input type that accepts TemplateRangeEndsLabelTypeArgs and TemplateRangeEndsLabelTypeOutput values.
// You can construct a concrete instance of `TemplateRangeEndsLabelTypeInput` via:
//
//	TemplateRangeEndsLabelTypeArgs{...}
type TemplateRangeEndsLabelTypeInput interface {
	pulumi.Input

	ToTemplateRangeEndsLabelTypeOutput() TemplateRangeEndsLabelTypeOutput
	ToTemplateRangeEndsLabelTypeOutputWithContext(context.Context) TemplateRangeEndsLabelTypeOutput
}

type TemplateRangeEndsLabelTypeArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateRangeEndsLabelTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRangeEndsLabelType)(nil)).Elem()
}

func (i TemplateRangeEndsLabelTypeArgs) ToTemplateRangeEndsLabelTypeOutput() TemplateRangeEndsLabelTypeOutput {
	return i.ToTemplateRangeEndsLabelTypeOutputWithContext(context.Background())
}

func (i TemplateRangeEndsLabelTypeArgs) ToTemplateRangeEndsLabelTypeOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRangeEndsLabelTypeOutput)
}

func (i TemplateRangeEndsLabelTypeArgs) ToTemplateRangeEndsLabelTypePtrOutput() TemplateRangeEndsLabelTypePtrOutput {
	return i.ToTemplateRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i TemplateRangeEndsLabelTypeArgs) ToTemplateRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRangeEndsLabelTypeOutput).ToTemplateRangeEndsLabelTypePtrOutputWithContext(ctx)
}

// TemplateRangeEndsLabelTypePtrInput is an input type that accepts TemplateRangeEndsLabelTypeArgs, TemplateRangeEndsLabelTypePtr and TemplateRangeEndsLabelTypePtrOutput values.
// You can construct a concrete instance of `TemplateRangeEndsLabelTypePtrInput` via:
//
//	        TemplateRangeEndsLabelTypeArgs{...}
//
//	or:
//
//	        nil
type TemplateRangeEndsLabelTypePtrInput interface {
	pulumi.Input

	ToTemplateRangeEndsLabelTypePtrOutput() TemplateRangeEndsLabelTypePtrOutput
	ToTemplateRangeEndsLabelTypePtrOutputWithContext(context.Context) TemplateRangeEndsLabelTypePtrOutput
}

type templateRangeEndsLabelTypePtrType TemplateRangeEndsLabelTypeArgs

func TemplateRangeEndsLabelTypePtr(v *TemplateRangeEndsLabelTypeArgs) TemplateRangeEndsLabelTypePtrInput {
	return (*templateRangeEndsLabelTypePtrType)(v)
}

func (*templateRangeEndsLabelTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRangeEndsLabelType)(nil)).Elem()
}

func (i *templateRangeEndsLabelTypePtrType) ToTemplateRangeEndsLabelTypePtrOutput() TemplateRangeEndsLabelTypePtrOutput {
	return i.ToTemplateRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (i *templateRangeEndsLabelTypePtrType) ToTemplateRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRangeEndsLabelTypePtrOutput)
}

type TemplateRangeEndsLabelTypeOutput struct{ *pulumi.OutputState }

func (TemplateRangeEndsLabelTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRangeEndsLabelType)(nil)).Elem()
}

func (o TemplateRangeEndsLabelTypeOutput) ToTemplateRangeEndsLabelTypeOutput() TemplateRangeEndsLabelTypeOutput {
	return o
}

func (o TemplateRangeEndsLabelTypeOutput) ToTemplateRangeEndsLabelTypeOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypeOutput {
	return o
}

func (o TemplateRangeEndsLabelTypeOutput) ToTemplateRangeEndsLabelTypePtrOutput() TemplateRangeEndsLabelTypePtrOutput {
	return o.ToTemplateRangeEndsLabelTypePtrOutputWithContext(context.Background())
}

func (o TemplateRangeEndsLabelTypeOutput) ToTemplateRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRangeEndsLabelType) *TemplateRangeEndsLabelType {
		return &v
	}).(TemplateRangeEndsLabelTypePtrOutput)
}

func (o TemplateRangeEndsLabelTypeOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateRangeEndsLabelType) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateRangeEndsLabelTypePtrOutput struct{ *pulumi.OutputState }

func (TemplateRangeEndsLabelTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRangeEndsLabelType)(nil)).Elem()
}

func (o TemplateRangeEndsLabelTypePtrOutput) ToTemplateRangeEndsLabelTypePtrOutput() TemplateRangeEndsLabelTypePtrOutput {
	return o
}

func (o TemplateRangeEndsLabelTypePtrOutput) ToTemplateRangeEndsLabelTypePtrOutputWithContext(ctx context.Context) TemplateRangeEndsLabelTypePtrOutput {
	return o
}

func (o TemplateRangeEndsLabelTypePtrOutput) Elem() TemplateRangeEndsLabelTypeOutput {
	return o.ApplyT(func(v *TemplateRangeEndsLabelType) TemplateRangeEndsLabelType {
		if v != nil {
			return *v
		}
		var ret TemplateRangeEndsLabelType
		return ret
	}).(TemplateRangeEndsLabelTypeOutput)
}

func (o TemplateRangeEndsLabelTypePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateRangeEndsLabelType) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateReferenceLine struct {
	DataConfiguration  TemplateReferenceLineDataConfiguration   `pulumi:"dataConfiguration"`
	LabelConfiguration *TemplateReferenceLineLabelConfiguration `pulumi:"labelConfiguration"`
	Status             *TemplateWidgetStatus                    `pulumi:"status"`
	StyleConfiguration *TemplateReferenceLineStyleConfiguration `pulumi:"styleConfiguration"`
}

// TemplateReferenceLineInput is an input type that accepts TemplateReferenceLineArgs and TemplateReferenceLineOutput values.
// You can construct a concrete instance of `TemplateReferenceLineInput` via:
//
//	TemplateReferenceLineArgs{...}
type TemplateReferenceLineInput interface {
	pulumi.Input

	ToTemplateReferenceLineOutput() TemplateReferenceLineOutput
	ToTemplateReferenceLineOutputWithContext(context.Context) TemplateReferenceLineOutput
}

type TemplateReferenceLineArgs struct {
	DataConfiguration  TemplateReferenceLineDataConfigurationInput     `pulumi:"dataConfiguration"`
	LabelConfiguration TemplateReferenceLineLabelConfigurationPtrInput `pulumi:"labelConfiguration"`
	Status             TemplateWidgetStatusPtrInput                    `pulumi:"status"`
	StyleConfiguration TemplateReferenceLineStyleConfigurationPtrInput `pulumi:"styleConfiguration"`
}

func (TemplateReferenceLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLine)(nil)).Elem()
}

func (i TemplateReferenceLineArgs) ToTemplateReferenceLineOutput() TemplateReferenceLineOutput {
	return i.ToTemplateReferenceLineOutputWithContext(context.Background())
}

func (i TemplateReferenceLineArgs) ToTemplateReferenceLineOutputWithContext(ctx context.Context) TemplateReferenceLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineOutput)
}

// TemplateReferenceLineArrayInput is an input type that accepts TemplateReferenceLineArray and TemplateReferenceLineArrayOutput values.
// You can construct a concrete instance of `TemplateReferenceLineArrayInput` via:
//
//	TemplateReferenceLineArray{ TemplateReferenceLineArgs{...} }
type TemplateReferenceLineArrayInput interface {
	pulumi.Input

	ToTemplateReferenceLineArrayOutput() TemplateReferenceLineArrayOutput
	ToTemplateReferenceLineArrayOutputWithContext(context.Context) TemplateReferenceLineArrayOutput
}

type TemplateReferenceLineArray []TemplateReferenceLineInput

func (TemplateReferenceLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateReferenceLine)(nil)).Elem()
}

func (i TemplateReferenceLineArray) ToTemplateReferenceLineArrayOutput() TemplateReferenceLineArrayOutput {
	return i.ToTemplateReferenceLineArrayOutputWithContext(context.Background())
}

func (i TemplateReferenceLineArray) ToTemplateReferenceLineArrayOutputWithContext(ctx context.Context) TemplateReferenceLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineArrayOutput)
}

type TemplateReferenceLineOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLine)(nil)).Elem()
}

func (o TemplateReferenceLineOutput) ToTemplateReferenceLineOutput() TemplateReferenceLineOutput {
	return o
}

func (o TemplateReferenceLineOutput) ToTemplateReferenceLineOutputWithContext(ctx context.Context) TemplateReferenceLineOutput {
	return o
}

func (o TemplateReferenceLineOutput) DataConfiguration() TemplateReferenceLineDataConfigurationOutput {
	return o.ApplyT(func(v TemplateReferenceLine) TemplateReferenceLineDataConfiguration { return v.DataConfiguration }).(TemplateReferenceLineDataConfigurationOutput)
}

func (o TemplateReferenceLineOutput) LabelConfiguration() TemplateReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLine) *TemplateReferenceLineLabelConfiguration { return v.LabelConfiguration }).(TemplateReferenceLineLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLine) *TemplateWidgetStatus { return v.Status }).(TemplateWidgetStatusPtrOutput)
}

func (o TemplateReferenceLineOutput) StyleConfiguration() TemplateReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLine) *TemplateReferenceLineStyleConfiguration { return v.StyleConfiguration }).(TemplateReferenceLineStyleConfigurationPtrOutput)
}

type TemplateReferenceLineArrayOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateReferenceLine)(nil)).Elem()
}

func (o TemplateReferenceLineArrayOutput) ToTemplateReferenceLineArrayOutput() TemplateReferenceLineArrayOutput {
	return o
}

func (o TemplateReferenceLineArrayOutput) ToTemplateReferenceLineArrayOutputWithContext(ctx context.Context) TemplateReferenceLineArrayOutput {
	return o
}

func (o TemplateReferenceLineArrayOutput) Index(i pulumi.IntInput) TemplateReferenceLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateReferenceLine {
		return vs[0].([]TemplateReferenceLine)[vs[1].(int)]
	}).(TemplateReferenceLineOutput)
}

type TemplateReferenceLineCustomLabelConfiguration struct {
	CustomLabel string `pulumi:"customLabel"`
}

// TemplateReferenceLineCustomLabelConfigurationInput is an input type that accepts TemplateReferenceLineCustomLabelConfigurationArgs and TemplateReferenceLineCustomLabelConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineCustomLabelConfigurationInput` via:
//
//	TemplateReferenceLineCustomLabelConfigurationArgs{...}
type TemplateReferenceLineCustomLabelConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineCustomLabelConfigurationOutput() TemplateReferenceLineCustomLabelConfigurationOutput
	ToTemplateReferenceLineCustomLabelConfigurationOutputWithContext(context.Context) TemplateReferenceLineCustomLabelConfigurationOutput
}

type TemplateReferenceLineCustomLabelConfigurationArgs struct {
	CustomLabel pulumi.StringInput `pulumi:"customLabel"`
}

func (TemplateReferenceLineCustomLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineCustomLabelConfigurationArgs) ToTemplateReferenceLineCustomLabelConfigurationOutput() TemplateReferenceLineCustomLabelConfigurationOutput {
	return i.ToTemplateReferenceLineCustomLabelConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineCustomLabelConfigurationArgs) ToTemplateReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineCustomLabelConfigurationOutput)
}

func (i TemplateReferenceLineCustomLabelConfigurationArgs) ToTemplateReferenceLineCustomLabelConfigurationPtrOutput() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineCustomLabelConfigurationArgs) ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineCustomLabelConfigurationOutput).ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineCustomLabelConfigurationPtrInput is an input type that accepts TemplateReferenceLineCustomLabelConfigurationArgs, TemplateReferenceLineCustomLabelConfigurationPtr and TemplateReferenceLineCustomLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineCustomLabelConfigurationPtrInput` via:
//
//	        TemplateReferenceLineCustomLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineCustomLabelConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineCustomLabelConfigurationPtrOutput() TemplateReferenceLineCustomLabelConfigurationPtrOutput
	ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineCustomLabelConfigurationPtrOutput
}

type templateReferenceLineCustomLabelConfigurationPtrType TemplateReferenceLineCustomLabelConfigurationArgs

func TemplateReferenceLineCustomLabelConfigurationPtr(v *TemplateReferenceLineCustomLabelConfigurationArgs) TemplateReferenceLineCustomLabelConfigurationPtrInput {
	return (*templateReferenceLineCustomLabelConfigurationPtrType)(v)
}

func (*templateReferenceLineCustomLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineCustomLabelConfigurationPtrType) ToTemplateReferenceLineCustomLabelConfigurationPtrOutput() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineCustomLabelConfigurationPtrType) ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineCustomLabelConfigurationPtrOutput)
}

type TemplateReferenceLineCustomLabelConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineCustomLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineCustomLabelConfigurationOutput) ToTemplateReferenceLineCustomLabelConfigurationOutput() TemplateReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineCustomLabelConfigurationOutput) ToTemplateReferenceLineCustomLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineCustomLabelConfigurationOutput) ToTemplateReferenceLineCustomLabelConfigurationPtrOutput() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineCustomLabelConfigurationOutput) ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineCustomLabelConfiguration) *TemplateReferenceLineCustomLabelConfiguration {
		return &v
	}).(TemplateReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineCustomLabelConfigurationOutput) CustomLabel() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateReferenceLineCustomLabelConfiguration) string { return v.CustomLabel }).(pulumi.StringOutput)
}

type TemplateReferenceLineCustomLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineCustomLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineCustomLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineCustomLabelConfigurationPtrOutput) ToTemplateReferenceLineCustomLabelConfigurationPtrOutput() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineCustomLabelConfigurationPtrOutput) ToTemplateReferenceLineCustomLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineCustomLabelConfigurationPtrOutput) Elem() TemplateReferenceLineCustomLabelConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineCustomLabelConfiguration) TemplateReferenceLineCustomLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineCustomLabelConfiguration
		return ret
	}).(TemplateReferenceLineCustomLabelConfigurationOutput)
}

func (o TemplateReferenceLineCustomLabelConfigurationPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineCustomLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

type TemplateReferenceLineDataConfiguration struct {
	AxisBinding          *TemplateAxisBinding                           `pulumi:"axisBinding"`
	DynamicConfiguration *TemplateReferenceLineDynamicDataConfiguration `pulumi:"dynamicConfiguration"`
	SeriesType           *TemplateReferenceLineSeriesType               `pulumi:"seriesType"`
	StaticConfiguration  *TemplateReferenceLineStaticDataConfiguration  `pulumi:"staticConfiguration"`
}

// TemplateReferenceLineDataConfigurationInput is an input type that accepts TemplateReferenceLineDataConfigurationArgs and TemplateReferenceLineDataConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineDataConfigurationInput` via:
//
//	TemplateReferenceLineDataConfigurationArgs{...}
type TemplateReferenceLineDataConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineDataConfigurationOutput() TemplateReferenceLineDataConfigurationOutput
	ToTemplateReferenceLineDataConfigurationOutputWithContext(context.Context) TemplateReferenceLineDataConfigurationOutput
}

type TemplateReferenceLineDataConfigurationArgs struct {
	AxisBinding          TemplateAxisBindingPtrInput                           `pulumi:"axisBinding"`
	DynamicConfiguration TemplateReferenceLineDynamicDataConfigurationPtrInput `pulumi:"dynamicConfiguration"`
	SeriesType           TemplateReferenceLineSeriesTypePtrInput               `pulumi:"seriesType"`
	StaticConfiguration  TemplateReferenceLineStaticDataConfigurationPtrInput  `pulumi:"staticConfiguration"`
}

func (TemplateReferenceLineDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineDataConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineDataConfigurationArgs) ToTemplateReferenceLineDataConfigurationOutput() TemplateReferenceLineDataConfigurationOutput {
	return i.ToTemplateReferenceLineDataConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineDataConfigurationArgs) ToTemplateReferenceLineDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineDataConfigurationOutput)
}

type TemplateReferenceLineDataConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineDataConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineDataConfigurationOutput) ToTemplateReferenceLineDataConfigurationOutput() TemplateReferenceLineDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineDataConfigurationOutput) ToTemplateReferenceLineDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineDataConfigurationOutput) AxisBinding() TemplateAxisBindingPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineDataConfiguration) *TemplateAxisBinding { return v.AxisBinding }).(TemplateAxisBindingPtrOutput)
}

func (o TemplateReferenceLineDataConfigurationOutput) DynamicConfiguration() TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineDataConfiguration) *TemplateReferenceLineDynamicDataConfiguration {
		return v.DynamicConfiguration
	}).(TemplateReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o TemplateReferenceLineDataConfigurationOutput) SeriesType() TemplateReferenceLineSeriesTypePtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineDataConfiguration) *TemplateReferenceLineSeriesType { return v.SeriesType }).(TemplateReferenceLineSeriesTypePtrOutput)
}

func (o TemplateReferenceLineDataConfigurationOutput) StaticConfiguration() TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineDataConfiguration) *TemplateReferenceLineStaticDataConfiguration {
		return v.StaticConfiguration
	}).(TemplateReferenceLineStaticDataConfigurationPtrOutput)
}

type TemplateReferenceLineDynamicDataConfiguration struct {
	Calculation                TemplateNumericalAggregationFunction `pulumi:"calculation"`
	Column                     TemplateColumnIdentifier             `pulumi:"column"`
	MeasureAggregationFunction *TemplateAggregationFunction         `pulumi:"measureAggregationFunction"`
}

// TemplateReferenceLineDynamicDataConfigurationInput is an input type that accepts TemplateReferenceLineDynamicDataConfigurationArgs and TemplateReferenceLineDynamicDataConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineDynamicDataConfigurationInput` via:
//
//	TemplateReferenceLineDynamicDataConfigurationArgs{...}
type TemplateReferenceLineDynamicDataConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineDynamicDataConfigurationOutput() TemplateReferenceLineDynamicDataConfigurationOutput
	ToTemplateReferenceLineDynamicDataConfigurationOutputWithContext(context.Context) TemplateReferenceLineDynamicDataConfigurationOutput
}

type TemplateReferenceLineDynamicDataConfigurationArgs struct {
	Calculation                TemplateNumericalAggregationFunctionInput `pulumi:"calculation"`
	Column                     TemplateColumnIdentifierInput             `pulumi:"column"`
	MeasureAggregationFunction TemplateAggregationFunctionPtrInput       `pulumi:"measureAggregationFunction"`
}

func (TemplateReferenceLineDynamicDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineDynamicDataConfigurationArgs) ToTemplateReferenceLineDynamicDataConfigurationOutput() TemplateReferenceLineDynamicDataConfigurationOutput {
	return i.ToTemplateReferenceLineDynamicDataConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineDynamicDataConfigurationArgs) ToTemplateReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineDynamicDataConfigurationOutput)
}

func (i TemplateReferenceLineDynamicDataConfigurationArgs) ToTemplateReferenceLineDynamicDataConfigurationPtrOutput() TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineDynamicDataConfigurationArgs) ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineDynamicDataConfigurationOutput).ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineDynamicDataConfigurationPtrInput is an input type that accepts TemplateReferenceLineDynamicDataConfigurationArgs, TemplateReferenceLineDynamicDataConfigurationPtr and TemplateReferenceLineDynamicDataConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineDynamicDataConfigurationPtrInput` via:
//
//	        TemplateReferenceLineDynamicDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineDynamicDataConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineDynamicDataConfigurationPtrOutput() TemplateReferenceLineDynamicDataConfigurationPtrOutput
	ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineDynamicDataConfigurationPtrOutput
}

type templateReferenceLineDynamicDataConfigurationPtrType TemplateReferenceLineDynamicDataConfigurationArgs

func TemplateReferenceLineDynamicDataConfigurationPtr(v *TemplateReferenceLineDynamicDataConfigurationArgs) TemplateReferenceLineDynamicDataConfigurationPtrInput {
	return (*templateReferenceLineDynamicDataConfigurationPtrType)(v)
}

func (*templateReferenceLineDynamicDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineDynamicDataConfigurationPtrType) ToTemplateReferenceLineDynamicDataConfigurationPtrOutput() TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return i.ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineDynamicDataConfigurationPtrType) ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineDynamicDataConfigurationPtrOutput)
}

type TemplateReferenceLineDynamicDataConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineDynamicDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) ToTemplateReferenceLineDynamicDataConfigurationOutput() TemplateReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) ToTemplateReferenceLineDynamicDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) ToTemplateReferenceLineDynamicDataConfigurationPtrOutput() TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineDynamicDataConfiguration) *TemplateReferenceLineDynamicDataConfiguration {
		return &v
	}).(TemplateReferenceLineDynamicDataConfigurationPtrOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) Calculation() TemplateNumericalAggregationFunctionOutput {
	return o.ApplyT(func(v TemplateReferenceLineDynamicDataConfiguration) TemplateNumericalAggregationFunction {
		return v.Calculation
	}).(TemplateNumericalAggregationFunctionOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateReferenceLineDynamicDataConfiguration) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationOutput) MeasureAggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineDynamicDataConfiguration) *TemplateAggregationFunction {
		return v.MeasureAggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

type TemplateReferenceLineDynamicDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineDynamicDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineDynamicDataConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) ToTemplateReferenceLineDynamicDataConfigurationPtrOutput() TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) ToTemplateReferenceLineDynamicDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineDynamicDataConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) Elem() TemplateReferenceLineDynamicDataConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineDynamicDataConfiguration) TemplateReferenceLineDynamicDataConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineDynamicDataConfiguration
		return ret
	}).(TemplateReferenceLineDynamicDataConfigurationOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) Calculation() TemplateNumericalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineDynamicDataConfiguration) *TemplateNumericalAggregationFunction {
		if v == nil {
			return nil
		}
		return &v.Calculation
	}).(TemplateNumericalAggregationFunctionPtrOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineDynamicDataConfiguration) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateReferenceLineDynamicDataConfigurationPtrOutput) MeasureAggregationFunction() TemplateAggregationFunctionPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineDynamicDataConfiguration) *TemplateAggregationFunction {
		if v == nil {
			return nil
		}
		return v.MeasureAggregationFunction
	}).(TemplateAggregationFunctionPtrOutput)
}

type TemplateReferenceLineLabelConfiguration struct {
	CustomLabelConfiguration *TemplateReferenceLineCustomLabelConfiguration `pulumi:"customLabelConfiguration"`
	FontColor                *string                                        `pulumi:"fontColor"`
	FontConfiguration        *TemplateFontConfiguration                     `pulumi:"fontConfiguration"`
	HorizontalPosition       *TemplateReferenceLineLabelHorizontalPosition  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  *TemplateReferenceLineValueLabelConfiguration  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         *TemplateReferenceLineLabelVerticalPosition    `pulumi:"verticalPosition"`
}

// TemplateReferenceLineLabelConfigurationInput is an input type that accepts TemplateReferenceLineLabelConfigurationArgs and TemplateReferenceLineLabelConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineLabelConfigurationInput` via:
//
//	TemplateReferenceLineLabelConfigurationArgs{...}
type TemplateReferenceLineLabelConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelConfigurationOutput() TemplateReferenceLineLabelConfigurationOutput
	ToTemplateReferenceLineLabelConfigurationOutputWithContext(context.Context) TemplateReferenceLineLabelConfigurationOutput
}

type TemplateReferenceLineLabelConfigurationArgs struct {
	CustomLabelConfiguration TemplateReferenceLineCustomLabelConfigurationPtrInput `pulumi:"customLabelConfiguration"`
	FontColor                pulumi.StringPtrInput                                 `pulumi:"fontColor"`
	FontConfiguration        TemplateFontConfigurationPtrInput                     `pulumi:"fontConfiguration"`
	HorizontalPosition       TemplateReferenceLineLabelHorizontalPositionPtrInput  `pulumi:"horizontalPosition"`
	ValueLabelConfiguration  TemplateReferenceLineValueLabelConfigurationPtrInput  `pulumi:"valueLabelConfiguration"`
	VerticalPosition         TemplateReferenceLineLabelVerticalPositionPtrInput    `pulumi:"verticalPosition"`
}

func (TemplateReferenceLineLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineLabelConfigurationArgs) ToTemplateReferenceLineLabelConfigurationOutput() TemplateReferenceLineLabelConfigurationOutput {
	return i.ToTemplateReferenceLineLabelConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineLabelConfigurationArgs) ToTemplateReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineLabelConfigurationOutput)
}

func (i TemplateReferenceLineLabelConfigurationArgs) ToTemplateReferenceLineLabelConfigurationPtrOutput() TemplateReferenceLineLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineLabelConfigurationArgs) ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineLabelConfigurationOutput).ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineLabelConfigurationPtrInput is an input type that accepts TemplateReferenceLineLabelConfigurationArgs, TemplateReferenceLineLabelConfigurationPtr and TemplateReferenceLineLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineLabelConfigurationPtrInput` via:
//
//	        TemplateReferenceLineLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineLabelConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineLabelConfigurationPtrOutput() TemplateReferenceLineLabelConfigurationPtrOutput
	ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineLabelConfigurationPtrOutput
}

type templateReferenceLineLabelConfigurationPtrType TemplateReferenceLineLabelConfigurationArgs

func TemplateReferenceLineLabelConfigurationPtr(v *TemplateReferenceLineLabelConfigurationArgs) TemplateReferenceLineLabelConfigurationPtrInput {
	return (*templateReferenceLineLabelConfigurationPtrType)(v)
}

func (*templateReferenceLineLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineLabelConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineLabelConfigurationPtrType) ToTemplateReferenceLineLabelConfigurationPtrOutput() TemplateReferenceLineLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineLabelConfigurationPtrType) ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineLabelConfigurationPtrOutput)
}

type TemplateReferenceLineLabelConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineLabelConfigurationOutput) ToTemplateReferenceLineLabelConfigurationOutput() TemplateReferenceLineLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineLabelConfigurationOutput) ToTemplateReferenceLineLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineLabelConfigurationOutput) ToTemplateReferenceLineLabelConfigurationPtrOutput() TemplateReferenceLineLabelConfigurationPtrOutput {
	return o.ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineLabelConfigurationOutput) ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineLabelConfiguration {
		return &v
	}).(TemplateReferenceLineLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) CustomLabelConfiguration() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineCustomLabelConfiguration {
		return v.CustomLabelConfiguration
	}).(TemplateReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *string { return v.FontColor }).(pulumi.StringPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) HorizontalPosition() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineLabelHorizontalPosition {
		return v.HorizontalPosition
	}).(TemplateReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) ValueLabelConfiguration() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineValueLabelConfiguration {
		return v.ValueLabelConfiguration
	}).(TemplateReferenceLineValueLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationOutput) VerticalPosition() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineLabelVerticalPosition {
		return v.VerticalPosition
	}).(TemplateReferenceLineLabelVerticalPositionPtrOutput)
}

type TemplateReferenceLineLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) ToTemplateReferenceLineLabelConfigurationPtrOutput() TemplateReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) ToTemplateReferenceLineLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) Elem() TemplateReferenceLineLabelConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) TemplateReferenceLineLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineLabelConfiguration
		return ret
	}).(TemplateReferenceLineLabelConfigurationOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) CustomLabelConfiguration() TemplateReferenceLineCustomLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineCustomLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomLabelConfiguration
	}).(TemplateReferenceLineCustomLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) FontColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FontColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) HorizontalPosition() TemplateReferenceLineLabelHorizontalPositionPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineLabelHorizontalPosition {
		if v == nil {
			return nil
		}
		return v.HorizontalPosition
	}).(TemplateReferenceLineLabelHorizontalPositionPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) ValueLabelConfiguration() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineValueLabelConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueLabelConfiguration
	}).(TemplateReferenceLineValueLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineLabelConfigurationPtrOutput) VerticalPosition() TemplateReferenceLineLabelVerticalPositionPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineLabelConfiguration) *TemplateReferenceLineLabelVerticalPosition {
		if v == nil {
			return nil
		}
		return v.VerticalPosition
	}).(TemplateReferenceLineLabelVerticalPositionPtrOutput)
}

type TemplateReferenceLineStaticDataConfiguration struct {
	Value float64 `pulumi:"value"`
}

// TemplateReferenceLineStaticDataConfigurationInput is an input type that accepts TemplateReferenceLineStaticDataConfigurationArgs and TemplateReferenceLineStaticDataConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineStaticDataConfigurationInput` via:
//
//	TemplateReferenceLineStaticDataConfigurationArgs{...}
type TemplateReferenceLineStaticDataConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineStaticDataConfigurationOutput() TemplateReferenceLineStaticDataConfigurationOutput
	ToTemplateReferenceLineStaticDataConfigurationOutputWithContext(context.Context) TemplateReferenceLineStaticDataConfigurationOutput
}

type TemplateReferenceLineStaticDataConfigurationArgs struct {
	Value pulumi.Float64Input `pulumi:"value"`
}

func (TemplateReferenceLineStaticDataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineStaticDataConfigurationArgs) ToTemplateReferenceLineStaticDataConfigurationOutput() TemplateReferenceLineStaticDataConfigurationOutput {
	return i.ToTemplateReferenceLineStaticDataConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineStaticDataConfigurationArgs) ToTemplateReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStaticDataConfigurationOutput)
}

func (i TemplateReferenceLineStaticDataConfigurationArgs) ToTemplateReferenceLineStaticDataConfigurationPtrOutput() TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineStaticDataConfigurationArgs) ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStaticDataConfigurationOutput).ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineStaticDataConfigurationPtrInput is an input type that accepts TemplateReferenceLineStaticDataConfigurationArgs, TemplateReferenceLineStaticDataConfigurationPtr and TemplateReferenceLineStaticDataConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineStaticDataConfigurationPtrInput` via:
//
//	        TemplateReferenceLineStaticDataConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineStaticDataConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineStaticDataConfigurationPtrOutput() TemplateReferenceLineStaticDataConfigurationPtrOutput
	ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineStaticDataConfigurationPtrOutput
}

type templateReferenceLineStaticDataConfigurationPtrType TemplateReferenceLineStaticDataConfigurationArgs

func TemplateReferenceLineStaticDataConfigurationPtr(v *TemplateReferenceLineStaticDataConfigurationArgs) TemplateReferenceLineStaticDataConfigurationPtrInput {
	return (*templateReferenceLineStaticDataConfigurationPtrType)(v)
}

func (*templateReferenceLineStaticDataConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineStaticDataConfigurationPtrType) ToTemplateReferenceLineStaticDataConfigurationPtrOutput() TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return i.ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineStaticDataConfigurationPtrType) ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStaticDataConfigurationPtrOutput)
}

type TemplateReferenceLineStaticDataConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineStaticDataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineStaticDataConfigurationOutput) ToTemplateReferenceLineStaticDataConfigurationOutput() TemplateReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineStaticDataConfigurationOutput) ToTemplateReferenceLineStaticDataConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationOutput {
	return o
}

func (o TemplateReferenceLineStaticDataConfigurationOutput) ToTemplateReferenceLineStaticDataConfigurationPtrOutput() TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return o.ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineStaticDataConfigurationOutput) ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineStaticDataConfiguration) *TemplateReferenceLineStaticDataConfiguration {
		return &v
	}).(TemplateReferenceLineStaticDataConfigurationPtrOutput)
}

func (o TemplateReferenceLineStaticDataConfigurationOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateReferenceLineStaticDataConfiguration) float64 { return v.Value }).(pulumi.Float64Output)
}

type TemplateReferenceLineStaticDataConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineStaticDataConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineStaticDataConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineStaticDataConfigurationPtrOutput) ToTemplateReferenceLineStaticDataConfigurationPtrOutput() TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineStaticDataConfigurationPtrOutput) ToTemplateReferenceLineStaticDataConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStaticDataConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineStaticDataConfigurationPtrOutput) Elem() TemplateReferenceLineStaticDataConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineStaticDataConfiguration) TemplateReferenceLineStaticDataConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineStaticDataConfiguration
		return ret
	}).(TemplateReferenceLineStaticDataConfigurationOutput)
}

func (o TemplateReferenceLineStaticDataConfigurationPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineStaticDataConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type TemplateReferenceLineStyleConfiguration struct {
	Color   *string                           `pulumi:"color"`
	Pattern *TemplateReferenceLinePatternType `pulumi:"pattern"`
}

// TemplateReferenceLineStyleConfigurationInput is an input type that accepts TemplateReferenceLineStyleConfigurationArgs and TemplateReferenceLineStyleConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineStyleConfigurationInput` via:
//
//	TemplateReferenceLineStyleConfigurationArgs{...}
type TemplateReferenceLineStyleConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineStyleConfigurationOutput() TemplateReferenceLineStyleConfigurationOutput
	ToTemplateReferenceLineStyleConfigurationOutputWithContext(context.Context) TemplateReferenceLineStyleConfigurationOutput
}

type TemplateReferenceLineStyleConfigurationArgs struct {
	Color   pulumi.StringPtrInput                    `pulumi:"color"`
	Pattern TemplateReferenceLinePatternTypePtrInput `pulumi:"pattern"`
}

func (TemplateReferenceLineStyleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineStyleConfigurationArgs) ToTemplateReferenceLineStyleConfigurationOutput() TemplateReferenceLineStyleConfigurationOutput {
	return i.ToTemplateReferenceLineStyleConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineStyleConfigurationArgs) ToTemplateReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStyleConfigurationOutput)
}

func (i TemplateReferenceLineStyleConfigurationArgs) ToTemplateReferenceLineStyleConfigurationPtrOutput() TemplateReferenceLineStyleConfigurationPtrOutput {
	return i.ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineStyleConfigurationArgs) ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStyleConfigurationOutput).ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineStyleConfigurationPtrInput is an input type that accepts TemplateReferenceLineStyleConfigurationArgs, TemplateReferenceLineStyleConfigurationPtr and TemplateReferenceLineStyleConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineStyleConfigurationPtrInput` via:
//
//	        TemplateReferenceLineStyleConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineStyleConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineStyleConfigurationPtrOutput() TemplateReferenceLineStyleConfigurationPtrOutput
	ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineStyleConfigurationPtrOutput
}

type templateReferenceLineStyleConfigurationPtrType TemplateReferenceLineStyleConfigurationArgs

func TemplateReferenceLineStyleConfigurationPtr(v *TemplateReferenceLineStyleConfigurationArgs) TemplateReferenceLineStyleConfigurationPtrInput {
	return (*templateReferenceLineStyleConfigurationPtrType)(v)
}

func (*templateReferenceLineStyleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineStyleConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineStyleConfigurationPtrType) ToTemplateReferenceLineStyleConfigurationPtrOutput() TemplateReferenceLineStyleConfigurationPtrOutput {
	return i.ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineStyleConfigurationPtrType) ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineStyleConfigurationPtrOutput)
}

type TemplateReferenceLineStyleConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineStyleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineStyleConfigurationOutput) ToTemplateReferenceLineStyleConfigurationOutput() TemplateReferenceLineStyleConfigurationOutput {
	return o
}

func (o TemplateReferenceLineStyleConfigurationOutput) ToTemplateReferenceLineStyleConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationOutput {
	return o
}

func (o TemplateReferenceLineStyleConfigurationOutput) ToTemplateReferenceLineStyleConfigurationPtrOutput() TemplateReferenceLineStyleConfigurationPtrOutput {
	return o.ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineStyleConfigurationOutput) ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineStyleConfiguration) *TemplateReferenceLineStyleConfiguration {
		return &v
	}).(TemplateReferenceLineStyleConfigurationPtrOutput)
}

func (o TemplateReferenceLineStyleConfigurationOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineStyleConfiguration) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateReferenceLineStyleConfigurationOutput) Pattern() TemplateReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineStyleConfiguration) *TemplateReferenceLinePatternType { return v.Pattern }).(TemplateReferenceLinePatternTypePtrOutput)
}

type TemplateReferenceLineStyleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineStyleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineStyleConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineStyleConfigurationPtrOutput) ToTemplateReferenceLineStyleConfigurationPtrOutput() TemplateReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineStyleConfigurationPtrOutput) ToTemplateReferenceLineStyleConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineStyleConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineStyleConfigurationPtrOutput) Elem() TemplateReferenceLineStyleConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineStyleConfiguration) TemplateReferenceLineStyleConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineStyleConfiguration
		return ret
	}).(TemplateReferenceLineStyleConfigurationOutput)
}

func (o TemplateReferenceLineStyleConfigurationPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineStyleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateReferenceLineStyleConfigurationPtrOutput) Pattern() TemplateReferenceLinePatternTypePtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineStyleConfiguration) *TemplateReferenceLinePatternType {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(TemplateReferenceLinePatternTypePtrOutput)
}

type TemplateReferenceLineValueLabelConfiguration struct {
	FormatConfiguration *TemplateNumericFormatConfiguration              `pulumi:"formatConfiguration"`
	RelativePosition    *TemplateReferenceLineValueLabelRelativePosition `pulumi:"relativePosition"`
}

// TemplateReferenceLineValueLabelConfigurationInput is an input type that accepts TemplateReferenceLineValueLabelConfigurationArgs and TemplateReferenceLineValueLabelConfigurationOutput values.
// You can construct a concrete instance of `TemplateReferenceLineValueLabelConfigurationInput` via:
//
//	TemplateReferenceLineValueLabelConfigurationArgs{...}
type TemplateReferenceLineValueLabelConfigurationInput interface {
	pulumi.Input

	ToTemplateReferenceLineValueLabelConfigurationOutput() TemplateReferenceLineValueLabelConfigurationOutput
	ToTemplateReferenceLineValueLabelConfigurationOutputWithContext(context.Context) TemplateReferenceLineValueLabelConfigurationOutput
}

type TemplateReferenceLineValueLabelConfigurationArgs struct {
	FormatConfiguration TemplateNumericFormatConfigurationPtrInput              `pulumi:"formatConfiguration"`
	RelativePosition    TemplateReferenceLineValueLabelRelativePositionPtrInput `pulumi:"relativePosition"`
}

func (TemplateReferenceLineValueLabelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i TemplateReferenceLineValueLabelConfigurationArgs) ToTemplateReferenceLineValueLabelConfigurationOutput() TemplateReferenceLineValueLabelConfigurationOutput {
	return i.ToTemplateReferenceLineValueLabelConfigurationOutputWithContext(context.Background())
}

func (i TemplateReferenceLineValueLabelConfigurationArgs) ToTemplateReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineValueLabelConfigurationOutput)
}

func (i TemplateReferenceLineValueLabelConfigurationArgs) ToTemplateReferenceLineValueLabelConfigurationPtrOutput() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateReferenceLineValueLabelConfigurationArgs) ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineValueLabelConfigurationOutput).ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx)
}

// TemplateReferenceLineValueLabelConfigurationPtrInput is an input type that accepts TemplateReferenceLineValueLabelConfigurationArgs, TemplateReferenceLineValueLabelConfigurationPtr and TemplateReferenceLineValueLabelConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateReferenceLineValueLabelConfigurationPtrInput` via:
//
//	        TemplateReferenceLineValueLabelConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateReferenceLineValueLabelConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateReferenceLineValueLabelConfigurationPtrOutput() TemplateReferenceLineValueLabelConfigurationPtrOutput
	ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Context) TemplateReferenceLineValueLabelConfigurationPtrOutput
}

type templateReferenceLineValueLabelConfigurationPtrType TemplateReferenceLineValueLabelConfigurationArgs

func TemplateReferenceLineValueLabelConfigurationPtr(v *TemplateReferenceLineValueLabelConfigurationArgs) TemplateReferenceLineValueLabelConfigurationPtrInput {
	return (*templateReferenceLineValueLabelConfigurationPtrType)(v)
}

func (*templateReferenceLineValueLabelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (i *templateReferenceLineValueLabelConfigurationPtrType) ToTemplateReferenceLineValueLabelConfigurationPtrOutput() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return i.ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateReferenceLineValueLabelConfigurationPtrType) ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateReferenceLineValueLabelConfigurationPtrOutput)
}

type TemplateReferenceLineValueLabelConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineValueLabelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) ToTemplateReferenceLineValueLabelConfigurationOutput() TemplateReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) ToTemplateReferenceLineValueLabelConfigurationOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationOutput {
	return o
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) ToTemplateReferenceLineValueLabelConfigurationPtrOutput() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o.ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateReferenceLineValueLabelConfiguration) *TemplateReferenceLineValueLabelConfiguration {
		return &v
	}).(TemplateReferenceLineValueLabelConfigurationPtrOutput)
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) FormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineValueLabelConfiguration) *TemplateNumericFormatConfiguration {
		return v.FormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

func (o TemplateReferenceLineValueLabelConfigurationOutput) RelativePosition() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v TemplateReferenceLineValueLabelConfiguration) *TemplateReferenceLineValueLabelRelativePosition {
		return v.RelativePosition
	}).(TemplateReferenceLineValueLabelRelativePositionPtrOutput)
}

type TemplateReferenceLineValueLabelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateReferenceLineValueLabelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateReferenceLineValueLabelConfiguration)(nil)).Elem()
}

func (o TemplateReferenceLineValueLabelConfigurationPtrOutput) ToTemplateReferenceLineValueLabelConfigurationPtrOutput() TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineValueLabelConfigurationPtrOutput) ToTemplateReferenceLineValueLabelConfigurationPtrOutputWithContext(ctx context.Context) TemplateReferenceLineValueLabelConfigurationPtrOutput {
	return o
}

func (o TemplateReferenceLineValueLabelConfigurationPtrOutput) Elem() TemplateReferenceLineValueLabelConfigurationOutput {
	return o.ApplyT(func(v *TemplateReferenceLineValueLabelConfiguration) TemplateReferenceLineValueLabelConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateReferenceLineValueLabelConfiguration
		return ret
	}).(TemplateReferenceLineValueLabelConfigurationOutput)
}

func (o TemplateReferenceLineValueLabelConfigurationPtrOutput) FormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineValueLabelConfiguration) *TemplateNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.FormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

func (o TemplateReferenceLineValueLabelConfigurationPtrOutput) RelativePosition() TemplateReferenceLineValueLabelRelativePositionPtrOutput {
	return o.ApplyT(func(v *TemplateReferenceLineValueLabelConfiguration) *TemplateReferenceLineValueLabelRelativePosition {
		if v == nil {
			return nil
		}
		return v.RelativePosition
	}).(TemplateReferenceLineValueLabelRelativePositionPtrOutput)
}

type TemplateRelativeDateTimeControlDisplayOptions struct {
	DateTimeFormat       *string                                   `pulumi:"dateTimeFormat"`
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateRelativeDateTimeControlDisplayOptionsInput is an input type that accepts TemplateRelativeDateTimeControlDisplayOptionsArgs and TemplateRelativeDateTimeControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateRelativeDateTimeControlDisplayOptionsInput` via:
//
//	TemplateRelativeDateTimeControlDisplayOptionsArgs{...}
type TemplateRelativeDateTimeControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateRelativeDateTimeControlDisplayOptionsOutput() TemplateRelativeDateTimeControlDisplayOptionsOutput
	ToTemplateRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Context) TemplateRelativeDateTimeControlDisplayOptionsOutput
}

type TemplateRelativeDateTimeControlDisplayOptionsArgs struct {
	DateTimeFormat       pulumi.StringPtrInput                            `pulumi:"dateTimeFormat"`
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateRelativeDateTimeControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i TemplateRelativeDateTimeControlDisplayOptionsArgs) ToTemplateRelativeDateTimeControlDisplayOptionsOutput() TemplateRelativeDateTimeControlDisplayOptionsOutput {
	return i.ToTemplateRelativeDateTimeControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateRelativeDateTimeControlDisplayOptionsArgs) ToTemplateRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDateTimeControlDisplayOptionsOutput)
}

func (i TemplateRelativeDateTimeControlDisplayOptionsArgs) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutput() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateRelativeDateTimeControlDisplayOptionsArgs) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDateTimeControlDisplayOptionsOutput).ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateRelativeDateTimeControlDisplayOptionsPtrInput is an input type that accepts TemplateRelativeDateTimeControlDisplayOptionsArgs, TemplateRelativeDateTimeControlDisplayOptionsPtr and TemplateRelativeDateTimeControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateRelativeDateTimeControlDisplayOptionsPtrInput` via:
//
//	        TemplateRelativeDateTimeControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateRelativeDateTimeControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutput() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput
	ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateRelativeDateTimeControlDisplayOptionsPtrOutput
}

type templateRelativeDateTimeControlDisplayOptionsPtrType TemplateRelativeDateTimeControlDisplayOptionsArgs

func TemplateRelativeDateTimeControlDisplayOptionsPtr(v *TemplateRelativeDateTimeControlDisplayOptionsArgs) TemplateRelativeDateTimeControlDisplayOptionsPtrInput {
	return (*templateRelativeDateTimeControlDisplayOptionsPtrType)(v)
}

func (*templateRelativeDateTimeControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (i *templateRelativeDateTimeControlDisplayOptionsPtrType) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutput() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return i.ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateRelativeDateTimeControlDisplayOptionsPtrType) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDateTimeControlDisplayOptionsPtrOutput)
}

type TemplateRelativeDateTimeControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDateTimeControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) ToTemplateRelativeDateTimeControlDisplayOptionsOutput() TemplateRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) ToTemplateRelativeDateTimeControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsOutput {
	return o
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutput() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRelativeDateTimeControlDisplayOptions) *TemplateRelativeDateTimeControlDisplayOptions {
		return &v
	}).(TemplateRelativeDateTimeControlDisplayOptionsPtrOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDateTimeControlDisplayOptions) *string { return v.DateTimeFormat }).(pulumi.StringPtrOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDateTimeControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDateTimeControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateRelativeDateTimeControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeDateTimeControlDisplayOptions)(nil)).Elem()
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutput() TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) ToTemplateRelativeDateTimeControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateRelativeDateTimeControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) Elem() TemplateRelativeDateTimeControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateRelativeDateTimeControlDisplayOptions) TemplateRelativeDateTimeControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateRelativeDateTimeControlDisplayOptions
		return ret
	}).(TemplateRelativeDateTimeControlDisplayOptionsOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) DateTimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDateTimeControlDisplayOptions) *string {
		if v == nil {
			return nil
		}
		return v.DateTimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDateTimeControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateRelativeDateTimeControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDateTimeControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateRelativeDatesFilter struct {
	AnchorDateConfiguration    TemplateAnchorDateConfiguration     `pulumi:"anchorDateConfiguration"`
	Column                     TemplateColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *TemplateExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                              `pulumi:"filterId"`
	MinimumGranularity         *TemplateTimeGranularity            `pulumi:"minimumGranularity"`
	NullOption                 TemplateFilterNullOption            `pulumi:"nullOption"`
	ParameterName              *string                             `pulumi:"parameterName"`
	RelativeDateType           TemplateRelativeDateType            `pulumi:"relativeDateType"`
	RelativeDateValue          *float64                            `pulumi:"relativeDateValue"`
	TimeGranularity            TemplateTimeGranularity             `pulumi:"timeGranularity"`
}

// TemplateRelativeDatesFilterInput is an input type that accepts TemplateRelativeDatesFilterArgs and TemplateRelativeDatesFilterOutput values.
// You can construct a concrete instance of `TemplateRelativeDatesFilterInput` via:
//
//	TemplateRelativeDatesFilterArgs{...}
type TemplateRelativeDatesFilterInput interface {
	pulumi.Input

	ToTemplateRelativeDatesFilterOutput() TemplateRelativeDatesFilterOutput
	ToTemplateRelativeDatesFilterOutputWithContext(context.Context) TemplateRelativeDatesFilterOutput
}

type TemplateRelativeDatesFilterArgs struct {
	AnchorDateConfiguration    TemplateAnchorDateConfigurationInput       `pulumi:"anchorDateConfiguration"`
	Column                     TemplateColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration TemplateExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                         `pulumi:"filterId"`
	MinimumGranularity         TemplateTimeGranularityPtrInput            `pulumi:"minimumGranularity"`
	NullOption                 TemplateFilterNullOptionInput              `pulumi:"nullOption"`
	ParameterName              pulumi.StringPtrInput                      `pulumi:"parameterName"`
	RelativeDateType           TemplateRelativeDateTypeInput              `pulumi:"relativeDateType"`
	RelativeDateValue          pulumi.Float64PtrInput                     `pulumi:"relativeDateValue"`
	TimeGranularity            TemplateTimeGranularityInput               `pulumi:"timeGranularity"`
}

func (TemplateRelativeDatesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDatesFilter)(nil)).Elem()
}

func (i TemplateRelativeDatesFilterArgs) ToTemplateRelativeDatesFilterOutput() TemplateRelativeDatesFilterOutput {
	return i.ToTemplateRelativeDatesFilterOutputWithContext(context.Background())
}

func (i TemplateRelativeDatesFilterArgs) ToTemplateRelativeDatesFilterOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDatesFilterOutput)
}

func (i TemplateRelativeDatesFilterArgs) ToTemplateRelativeDatesFilterPtrOutput() TemplateRelativeDatesFilterPtrOutput {
	return i.ToTemplateRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i TemplateRelativeDatesFilterArgs) ToTemplateRelativeDatesFilterPtrOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDatesFilterOutput).ToTemplateRelativeDatesFilterPtrOutputWithContext(ctx)
}

// TemplateRelativeDatesFilterPtrInput is an input type that accepts TemplateRelativeDatesFilterArgs, TemplateRelativeDatesFilterPtr and TemplateRelativeDatesFilterPtrOutput values.
// You can construct a concrete instance of `TemplateRelativeDatesFilterPtrInput` via:
//
//	        TemplateRelativeDatesFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateRelativeDatesFilterPtrInput interface {
	pulumi.Input

	ToTemplateRelativeDatesFilterPtrOutput() TemplateRelativeDatesFilterPtrOutput
	ToTemplateRelativeDatesFilterPtrOutputWithContext(context.Context) TemplateRelativeDatesFilterPtrOutput
}

type templateRelativeDatesFilterPtrType TemplateRelativeDatesFilterArgs

func TemplateRelativeDatesFilterPtr(v *TemplateRelativeDatesFilterArgs) TemplateRelativeDatesFilterPtrInput {
	return (*templateRelativeDatesFilterPtrType)(v)
}

func (*templateRelativeDatesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeDatesFilter)(nil)).Elem()
}

func (i *templateRelativeDatesFilterPtrType) ToTemplateRelativeDatesFilterPtrOutput() TemplateRelativeDatesFilterPtrOutput {
	return i.ToTemplateRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (i *templateRelativeDatesFilterPtrType) ToTemplateRelativeDatesFilterPtrOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRelativeDatesFilterPtrOutput)
}

type TemplateRelativeDatesFilterOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDatesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRelativeDatesFilter)(nil)).Elem()
}

func (o TemplateRelativeDatesFilterOutput) ToTemplateRelativeDatesFilterOutput() TemplateRelativeDatesFilterOutput {
	return o
}

func (o TemplateRelativeDatesFilterOutput) ToTemplateRelativeDatesFilterOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterOutput {
	return o
}

func (o TemplateRelativeDatesFilterOutput) ToTemplateRelativeDatesFilterPtrOutput() TemplateRelativeDatesFilterPtrOutput {
	return o.ToTemplateRelativeDatesFilterPtrOutputWithContext(context.Background())
}

func (o TemplateRelativeDatesFilterOutput) ToTemplateRelativeDatesFilterPtrOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRelativeDatesFilter) *TemplateRelativeDatesFilter {
		return &v
	}).(TemplateRelativeDatesFilterPtrOutput)
}

func (o TemplateRelativeDatesFilterOutput) AnchorDateConfiguration() TemplateAnchorDateConfigurationOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) TemplateAnchorDateConfiguration { return v.AnchorDateConfiguration }).(TemplateAnchorDateConfigurationOutput)
}

func (o TemplateRelativeDatesFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateRelativeDatesFilterOutput) ExcludePeriodConfiguration() TemplateExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) *TemplateExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(TemplateExcludePeriodConfigurationPtrOutput)
}

func (o TemplateRelativeDatesFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateRelativeDatesFilterOutput) MinimumGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) *TemplateTimeGranularity { return v.MinimumGranularity }).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateRelativeDatesFilterOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateRelativeDatesFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o TemplateRelativeDatesFilterOutput) RelativeDateType() TemplateRelativeDateTypeOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) TemplateRelativeDateType { return v.RelativeDateType }).(TemplateRelativeDateTypeOutput)
}

func (o TemplateRelativeDatesFilterOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) *float64 { return v.RelativeDateValue }).(pulumi.Float64PtrOutput)
}

func (o TemplateRelativeDatesFilterOutput) TimeGranularity() TemplateTimeGranularityOutput {
	return o.ApplyT(func(v TemplateRelativeDatesFilter) TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityOutput)
}

type TemplateRelativeDatesFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateRelativeDatesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRelativeDatesFilter)(nil)).Elem()
}

func (o TemplateRelativeDatesFilterPtrOutput) ToTemplateRelativeDatesFilterPtrOutput() TemplateRelativeDatesFilterPtrOutput {
	return o
}

func (o TemplateRelativeDatesFilterPtrOutput) ToTemplateRelativeDatesFilterPtrOutputWithContext(ctx context.Context) TemplateRelativeDatesFilterPtrOutput {
	return o
}

func (o TemplateRelativeDatesFilterPtrOutput) Elem() TemplateRelativeDatesFilterOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) TemplateRelativeDatesFilter {
		if v != nil {
			return *v
		}
		var ret TemplateRelativeDatesFilter
		return ret
	}).(TemplateRelativeDatesFilterOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) AnchorDateConfiguration() TemplateAnchorDateConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateAnchorDateConfiguration {
		if v == nil {
			return nil
		}
		return &v.AnchorDateConfiguration
	}).(TemplateAnchorDateConfigurationPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) ExcludePeriodConfiguration() TemplateExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(TemplateExcludePeriodConfigurationPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) MinimumGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.MinimumGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) RelativeDateType() TemplateRelativeDateTypePtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateRelativeDateType {
		if v == nil {
			return nil
		}
		return &v.RelativeDateType
	}).(TemplateRelativeDateTypePtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) RelativeDateValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.RelativeDateValue
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateRelativeDatesFilterPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateRelativeDatesFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

type TemplateResourcePermission struct {
	Actions   []string `pulumi:"actions"`
	Principal string   `pulumi:"principal"`
}

// TemplateResourcePermissionInput is an input type that accepts TemplateResourcePermissionArgs and TemplateResourcePermissionOutput values.
// You can construct a concrete instance of `TemplateResourcePermissionInput` via:
//
//	TemplateResourcePermissionArgs{...}
type TemplateResourcePermissionInput interface {
	pulumi.Input

	ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput
	ToTemplateResourcePermissionOutputWithContext(context.Context) TemplateResourcePermissionOutput
}

type TemplateResourcePermissionArgs struct {
	Actions   pulumi.StringArrayInput `pulumi:"actions"`
	Principal pulumi.StringInput      `pulumi:"principal"`
}

func (TemplateResourcePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourcePermission)(nil)).Elem()
}

func (i TemplateResourcePermissionArgs) ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput {
	return i.ToTemplateResourcePermissionOutputWithContext(context.Background())
}

func (i TemplateResourcePermissionArgs) ToTemplateResourcePermissionOutputWithContext(ctx context.Context) TemplateResourcePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateResourcePermissionOutput)
}

// TemplateResourcePermissionArrayInput is an input type that accepts TemplateResourcePermissionArray and TemplateResourcePermissionArrayOutput values.
// You can construct a concrete instance of `TemplateResourcePermissionArrayInput` via:
//
//	TemplateResourcePermissionArray{ TemplateResourcePermissionArgs{...} }
type TemplateResourcePermissionArrayInput interface {
	pulumi.Input

	ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput
	ToTemplateResourcePermissionArrayOutputWithContext(context.Context) TemplateResourcePermissionArrayOutput
}

type TemplateResourcePermissionArray []TemplateResourcePermissionInput

func (TemplateResourcePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateResourcePermission)(nil)).Elem()
}

func (i TemplateResourcePermissionArray) ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput {
	return i.ToTemplateResourcePermissionArrayOutputWithContext(context.Background())
}

func (i TemplateResourcePermissionArray) ToTemplateResourcePermissionArrayOutputWithContext(ctx context.Context) TemplateResourcePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateResourcePermissionArrayOutput)
}

type TemplateResourcePermissionOutput struct{ *pulumi.OutputState }

func (TemplateResourcePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResourcePermission)(nil)).Elem()
}

func (o TemplateResourcePermissionOutput) ToTemplateResourcePermissionOutput() TemplateResourcePermissionOutput {
	return o
}

func (o TemplateResourcePermissionOutput) ToTemplateResourcePermissionOutputWithContext(ctx context.Context) TemplateResourcePermissionOutput {
	return o
}

func (o TemplateResourcePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateResourcePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o TemplateResourcePermissionOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateResourcePermission) string { return v.Principal }).(pulumi.StringOutput)
}

type TemplateResourcePermissionArrayOutput struct{ *pulumi.OutputState }

func (TemplateResourcePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateResourcePermission)(nil)).Elem()
}

func (o TemplateResourcePermissionArrayOutput) ToTemplateResourcePermissionArrayOutput() TemplateResourcePermissionArrayOutput {
	return o
}

func (o TemplateResourcePermissionArrayOutput) ToTemplateResourcePermissionArrayOutputWithContext(ctx context.Context) TemplateResourcePermissionArrayOutput {
	return o
}

func (o TemplateResourcePermissionArrayOutput) Index(i pulumi.IntInput) TemplateResourcePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateResourcePermission {
		return vs[0].([]TemplateResourcePermission)[vs[1].(int)]
	}).(TemplateResourcePermissionOutput)
}

type TemplateRollingDateConfiguration struct {
	DataSetIdentifier *string `pulumi:"dataSetIdentifier"`
	Expression        string  `pulumi:"expression"`
}

// TemplateRollingDateConfigurationInput is an input type that accepts TemplateRollingDateConfigurationArgs and TemplateRollingDateConfigurationOutput values.
// You can construct a concrete instance of `TemplateRollingDateConfigurationInput` via:
//
//	TemplateRollingDateConfigurationArgs{...}
type TemplateRollingDateConfigurationInput interface {
	pulumi.Input

	ToTemplateRollingDateConfigurationOutput() TemplateRollingDateConfigurationOutput
	ToTemplateRollingDateConfigurationOutputWithContext(context.Context) TemplateRollingDateConfigurationOutput
}

type TemplateRollingDateConfigurationArgs struct {
	DataSetIdentifier pulumi.StringPtrInput `pulumi:"dataSetIdentifier"`
	Expression        pulumi.StringInput    `pulumi:"expression"`
}

func (TemplateRollingDateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRollingDateConfiguration)(nil)).Elem()
}

func (i TemplateRollingDateConfigurationArgs) ToTemplateRollingDateConfigurationOutput() TemplateRollingDateConfigurationOutput {
	return i.ToTemplateRollingDateConfigurationOutputWithContext(context.Background())
}

func (i TemplateRollingDateConfigurationArgs) ToTemplateRollingDateConfigurationOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRollingDateConfigurationOutput)
}

func (i TemplateRollingDateConfigurationArgs) ToTemplateRollingDateConfigurationPtrOutput() TemplateRollingDateConfigurationPtrOutput {
	return i.ToTemplateRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateRollingDateConfigurationArgs) ToTemplateRollingDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRollingDateConfigurationOutput).ToTemplateRollingDateConfigurationPtrOutputWithContext(ctx)
}

// TemplateRollingDateConfigurationPtrInput is an input type that accepts TemplateRollingDateConfigurationArgs, TemplateRollingDateConfigurationPtr and TemplateRollingDateConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateRollingDateConfigurationPtrInput` via:
//
//	        TemplateRollingDateConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateRollingDateConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateRollingDateConfigurationPtrOutput() TemplateRollingDateConfigurationPtrOutput
	ToTemplateRollingDateConfigurationPtrOutputWithContext(context.Context) TemplateRollingDateConfigurationPtrOutput
}

type templateRollingDateConfigurationPtrType TemplateRollingDateConfigurationArgs

func TemplateRollingDateConfigurationPtr(v *TemplateRollingDateConfigurationArgs) TemplateRollingDateConfigurationPtrInput {
	return (*templateRollingDateConfigurationPtrType)(v)
}

func (*templateRollingDateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRollingDateConfiguration)(nil)).Elem()
}

func (i *templateRollingDateConfigurationPtrType) ToTemplateRollingDateConfigurationPtrOutput() TemplateRollingDateConfigurationPtrOutput {
	return i.ToTemplateRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateRollingDateConfigurationPtrType) ToTemplateRollingDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRollingDateConfigurationPtrOutput)
}

type TemplateRollingDateConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateRollingDateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRollingDateConfiguration)(nil)).Elem()
}

func (o TemplateRollingDateConfigurationOutput) ToTemplateRollingDateConfigurationOutput() TemplateRollingDateConfigurationOutput {
	return o
}

func (o TemplateRollingDateConfigurationOutput) ToTemplateRollingDateConfigurationOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationOutput {
	return o
}

func (o TemplateRollingDateConfigurationOutput) ToTemplateRollingDateConfigurationPtrOutput() TemplateRollingDateConfigurationPtrOutput {
	return o.ToTemplateRollingDateConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateRollingDateConfigurationOutput) ToTemplateRollingDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRollingDateConfiguration) *TemplateRollingDateConfiguration {
		return &v
	}).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateRollingDateConfigurationOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateRollingDateConfiguration) *string { return v.DataSetIdentifier }).(pulumi.StringPtrOutput)
}

func (o TemplateRollingDateConfigurationOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateRollingDateConfiguration) string { return v.Expression }).(pulumi.StringOutput)
}

type TemplateRollingDateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateRollingDateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRollingDateConfiguration)(nil)).Elem()
}

func (o TemplateRollingDateConfigurationPtrOutput) ToTemplateRollingDateConfigurationPtrOutput() TemplateRollingDateConfigurationPtrOutput {
	return o
}

func (o TemplateRollingDateConfigurationPtrOutput) ToTemplateRollingDateConfigurationPtrOutputWithContext(ctx context.Context) TemplateRollingDateConfigurationPtrOutput {
	return o
}

func (o TemplateRollingDateConfigurationPtrOutput) Elem() TemplateRollingDateConfigurationOutput {
	return o.ApplyT(func(v *TemplateRollingDateConfiguration) TemplateRollingDateConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateRollingDateConfiguration
		return ret
	}).(TemplateRollingDateConfigurationOutput)
}

func (o TemplateRollingDateConfigurationPtrOutput) DataSetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataSetIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o TemplateRollingDateConfigurationPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateRollingDateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

type TemplateRowAlternateColorOptions struct {
	RowAlternateColors        []string              `pulumi:"rowAlternateColors"`
	Status                    *TemplateWidgetStatus `pulumi:"status"`
	UsePrimaryBackgroundColor *TemplateWidgetStatus `pulumi:"usePrimaryBackgroundColor"`
}

// TemplateRowAlternateColorOptionsInput is an input type that accepts TemplateRowAlternateColorOptionsArgs and TemplateRowAlternateColorOptionsOutput values.
// You can construct a concrete instance of `TemplateRowAlternateColorOptionsInput` via:
//
//	TemplateRowAlternateColorOptionsArgs{...}
type TemplateRowAlternateColorOptionsInput interface {
	pulumi.Input

	ToTemplateRowAlternateColorOptionsOutput() TemplateRowAlternateColorOptionsOutput
	ToTemplateRowAlternateColorOptionsOutputWithContext(context.Context) TemplateRowAlternateColorOptionsOutput
}

type TemplateRowAlternateColorOptionsArgs struct {
	RowAlternateColors        pulumi.StringArrayInput      `pulumi:"rowAlternateColors"`
	Status                    TemplateWidgetStatusPtrInput `pulumi:"status"`
	UsePrimaryBackgroundColor TemplateWidgetStatusPtrInput `pulumi:"usePrimaryBackgroundColor"`
}

func (TemplateRowAlternateColorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRowAlternateColorOptions)(nil)).Elem()
}

func (i TemplateRowAlternateColorOptionsArgs) ToTemplateRowAlternateColorOptionsOutput() TemplateRowAlternateColorOptionsOutput {
	return i.ToTemplateRowAlternateColorOptionsOutputWithContext(context.Background())
}

func (i TemplateRowAlternateColorOptionsArgs) ToTemplateRowAlternateColorOptionsOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRowAlternateColorOptionsOutput)
}

func (i TemplateRowAlternateColorOptionsArgs) ToTemplateRowAlternateColorOptionsPtrOutput() TemplateRowAlternateColorOptionsPtrOutput {
	return i.ToTemplateRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateRowAlternateColorOptionsArgs) ToTemplateRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRowAlternateColorOptionsOutput).ToTemplateRowAlternateColorOptionsPtrOutputWithContext(ctx)
}

// TemplateRowAlternateColorOptionsPtrInput is an input type that accepts TemplateRowAlternateColorOptionsArgs, TemplateRowAlternateColorOptionsPtr and TemplateRowAlternateColorOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateRowAlternateColorOptionsPtrInput` via:
//
//	        TemplateRowAlternateColorOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateRowAlternateColorOptionsPtrInput interface {
	pulumi.Input

	ToTemplateRowAlternateColorOptionsPtrOutput() TemplateRowAlternateColorOptionsPtrOutput
	ToTemplateRowAlternateColorOptionsPtrOutputWithContext(context.Context) TemplateRowAlternateColorOptionsPtrOutput
}

type templateRowAlternateColorOptionsPtrType TemplateRowAlternateColorOptionsArgs

func TemplateRowAlternateColorOptionsPtr(v *TemplateRowAlternateColorOptionsArgs) TemplateRowAlternateColorOptionsPtrInput {
	return (*templateRowAlternateColorOptionsPtrType)(v)
}

func (*templateRowAlternateColorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRowAlternateColorOptions)(nil)).Elem()
}

func (i *templateRowAlternateColorOptionsPtrType) ToTemplateRowAlternateColorOptionsPtrOutput() TemplateRowAlternateColorOptionsPtrOutput {
	return i.ToTemplateRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (i *templateRowAlternateColorOptionsPtrType) ToTemplateRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateRowAlternateColorOptionsPtrOutput)
}

type TemplateRowAlternateColorOptionsOutput struct{ *pulumi.OutputState }

func (TemplateRowAlternateColorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateRowAlternateColorOptions)(nil)).Elem()
}

func (o TemplateRowAlternateColorOptionsOutput) ToTemplateRowAlternateColorOptionsOutput() TemplateRowAlternateColorOptionsOutput {
	return o
}

func (o TemplateRowAlternateColorOptionsOutput) ToTemplateRowAlternateColorOptionsOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsOutput {
	return o
}

func (o TemplateRowAlternateColorOptionsOutput) ToTemplateRowAlternateColorOptionsPtrOutput() TemplateRowAlternateColorOptionsPtrOutput {
	return o.ToTemplateRowAlternateColorOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateRowAlternateColorOptionsOutput) ToTemplateRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateRowAlternateColorOptions) *TemplateRowAlternateColorOptions {
		return &v
	}).(TemplateRowAlternateColorOptionsPtrOutput)
}

func (o TemplateRowAlternateColorOptionsOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateRowAlternateColorOptions) []string { return v.RowAlternateColors }).(pulumi.StringArrayOutput)
}

func (o TemplateRowAlternateColorOptionsOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateRowAlternateColorOptions) *TemplateWidgetStatus { return v.Status }).(TemplateWidgetStatusPtrOutput)
}

func (o TemplateRowAlternateColorOptionsOutput) UsePrimaryBackgroundColor() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateRowAlternateColorOptions) *TemplateWidgetStatus { return v.UsePrimaryBackgroundColor }).(TemplateWidgetStatusPtrOutput)
}

type TemplateRowAlternateColorOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateRowAlternateColorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateRowAlternateColorOptions)(nil)).Elem()
}

func (o TemplateRowAlternateColorOptionsPtrOutput) ToTemplateRowAlternateColorOptionsPtrOutput() TemplateRowAlternateColorOptionsPtrOutput {
	return o
}

func (o TemplateRowAlternateColorOptionsPtrOutput) ToTemplateRowAlternateColorOptionsPtrOutputWithContext(ctx context.Context) TemplateRowAlternateColorOptionsPtrOutput {
	return o
}

func (o TemplateRowAlternateColorOptionsPtrOutput) Elem() TemplateRowAlternateColorOptionsOutput {
	return o.ApplyT(func(v *TemplateRowAlternateColorOptions) TemplateRowAlternateColorOptions {
		if v != nil {
			return *v
		}
		var ret TemplateRowAlternateColorOptions
		return ret
	}).(TemplateRowAlternateColorOptionsOutput)
}

func (o TemplateRowAlternateColorOptionsPtrOutput) RowAlternateColors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateRowAlternateColorOptions) []string {
		if v == nil {
			return nil
		}
		return v.RowAlternateColors
	}).(pulumi.StringArrayOutput)
}

func (o TemplateRowAlternateColorOptionsPtrOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v *TemplateRowAlternateColorOptions) *TemplateWidgetStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TemplateWidgetStatusPtrOutput)
}

func (o TemplateRowAlternateColorOptionsPtrOutput) UsePrimaryBackgroundColor() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v *TemplateRowAlternateColorOptions) *TemplateWidgetStatus {
		if v == nil {
			return nil
		}
		return v.UsePrimaryBackgroundColor
	}).(TemplateWidgetStatusPtrOutput)
}

type TemplateSameSheetTargetVisualConfiguration struct {
	TargetVisualOptions *TemplateTargetVisualOptions `pulumi:"targetVisualOptions"`
	TargetVisuals       []string                     `pulumi:"targetVisuals"`
}

// TemplateSameSheetTargetVisualConfigurationInput is an input type that accepts TemplateSameSheetTargetVisualConfigurationArgs and TemplateSameSheetTargetVisualConfigurationOutput values.
// You can construct a concrete instance of `TemplateSameSheetTargetVisualConfigurationInput` via:
//
//	TemplateSameSheetTargetVisualConfigurationArgs{...}
type TemplateSameSheetTargetVisualConfigurationInput interface {
	pulumi.Input

	ToTemplateSameSheetTargetVisualConfigurationOutput() TemplateSameSheetTargetVisualConfigurationOutput
	ToTemplateSameSheetTargetVisualConfigurationOutputWithContext(context.Context) TemplateSameSheetTargetVisualConfigurationOutput
}

type TemplateSameSheetTargetVisualConfigurationArgs struct {
	TargetVisualOptions TemplateTargetVisualOptionsPtrInput `pulumi:"targetVisualOptions"`
	TargetVisuals       pulumi.StringArrayInput             `pulumi:"targetVisuals"`
}

func (TemplateSameSheetTargetVisualConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i TemplateSameSheetTargetVisualConfigurationArgs) ToTemplateSameSheetTargetVisualConfigurationOutput() TemplateSameSheetTargetVisualConfigurationOutput {
	return i.ToTemplateSameSheetTargetVisualConfigurationOutputWithContext(context.Background())
}

func (i TemplateSameSheetTargetVisualConfigurationArgs) ToTemplateSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSameSheetTargetVisualConfigurationOutput)
}

func (i TemplateSameSheetTargetVisualConfigurationArgs) ToTemplateSameSheetTargetVisualConfigurationPtrOutput() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSameSheetTargetVisualConfigurationArgs) ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSameSheetTargetVisualConfigurationOutput).ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx)
}

// TemplateSameSheetTargetVisualConfigurationPtrInput is an input type that accepts TemplateSameSheetTargetVisualConfigurationArgs, TemplateSameSheetTargetVisualConfigurationPtr and TemplateSameSheetTargetVisualConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSameSheetTargetVisualConfigurationPtrInput` via:
//
//	        TemplateSameSheetTargetVisualConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSameSheetTargetVisualConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSameSheetTargetVisualConfigurationPtrOutput() TemplateSameSheetTargetVisualConfigurationPtrOutput
	ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Context) TemplateSameSheetTargetVisualConfigurationPtrOutput
}

type templateSameSheetTargetVisualConfigurationPtrType TemplateSameSheetTargetVisualConfigurationArgs

func TemplateSameSheetTargetVisualConfigurationPtr(v *TemplateSameSheetTargetVisualConfigurationArgs) TemplateSameSheetTargetVisualConfigurationPtrInput {
	return (*templateSameSheetTargetVisualConfigurationPtrType)(v)
}

func (*templateSameSheetTargetVisualConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (i *templateSameSheetTargetVisualConfigurationPtrType) ToTemplateSameSheetTargetVisualConfigurationPtrOutput() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return i.ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSameSheetTargetVisualConfigurationPtrType) ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSameSheetTargetVisualConfigurationPtrOutput)
}

type TemplateSameSheetTargetVisualConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSameSheetTargetVisualConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) ToTemplateSameSheetTargetVisualConfigurationOutput() TemplateSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) ToTemplateSameSheetTargetVisualConfigurationOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationOutput {
	return o
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) ToTemplateSameSheetTargetVisualConfigurationPtrOutput() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o.ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSameSheetTargetVisualConfiguration) *TemplateSameSheetTargetVisualConfiguration {
		return &v
	}).(TemplateSameSheetTargetVisualConfigurationPtrOutput)
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) TargetVisualOptions() TemplateTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSameSheetTargetVisualConfiguration) *TemplateTargetVisualOptions {
		return v.TargetVisualOptions
	}).(TemplateTargetVisualOptionsPtrOutput)
}

func (o TemplateSameSheetTargetVisualConfigurationOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateSameSheetTargetVisualConfiguration) []string { return v.TargetVisuals }).(pulumi.StringArrayOutput)
}

type TemplateSameSheetTargetVisualConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSameSheetTargetVisualConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSameSheetTargetVisualConfiguration)(nil)).Elem()
}

func (o TemplateSameSheetTargetVisualConfigurationPtrOutput) ToTemplateSameSheetTargetVisualConfigurationPtrOutput() TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o TemplateSameSheetTargetVisualConfigurationPtrOutput) ToTemplateSameSheetTargetVisualConfigurationPtrOutputWithContext(ctx context.Context) TemplateSameSheetTargetVisualConfigurationPtrOutput {
	return o
}

func (o TemplateSameSheetTargetVisualConfigurationPtrOutput) Elem() TemplateSameSheetTargetVisualConfigurationOutput {
	return o.ApplyT(func(v *TemplateSameSheetTargetVisualConfiguration) TemplateSameSheetTargetVisualConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSameSheetTargetVisualConfiguration
		return ret
	}).(TemplateSameSheetTargetVisualConfigurationOutput)
}

func (o TemplateSameSheetTargetVisualConfigurationPtrOutput) TargetVisualOptions() TemplateTargetVisualOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSameSheetTargetVisualConfiguration) *TemplateTargetVisualOptions {
		if v == nil {
			return nil
		}
		return v.TargetVisualOptions
	}).(TemplateTargetVisualOptionsPtrOutput)
}

func (o TemplateSameSheetTargetVisualConfigurationPtrOutput) TargetVisuals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateSameSheetTargetVisualConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.TargetVisuals
	}).(pulumi.StringArrayOutput)
}

type TemplateSankeyDiagramAggregatedFieldWells struct {
	Destination []TemplateDimensionField `pulumi:"destination"`
	Source      []TemplateDimensionField `pulumi:"source"`
	Weight      []TemplateMeasureField   `pulumi:"weight"`
}

// TemplateSankeyDiagramAggregatedFieldWellsInput is an input type that accepts TemplateSankeyDiagramAggregatedFieldWellsArgs and TemplateSankeyDiagramAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramAggregatedFieldWellsInput` via:
//
//	TemplateSankeyDiagramAggregatedFieldWellsArgs{...}
type TemplateSankeyDiagramAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramAggregatedFieldWellsOutput() TemplateSankeyDiagramAggregatedFieldWellsOutput
	ToTemplateSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Context) TemplateSankeyDiagramAggregatedFieldWellsOutput
}

type TemplateSankeyDiagramAggregatedFieldWellsArgs struct {
	Destination TemplateDimensionFieldArrayInput `pulumi:"destination"`
	Source      TemplateDimensionFieldArrayInput `pulumi:"source"`
	Weight      TemplateMeasureFieldArrayInput   `pulumi:"weight"`
}

func (TemplateSankeyDiagramAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateSankeyDiagramAggregatedFieldWellsArgs) ToTemplateSankeyDiagramAggregatedFieldWellsOutput() TemplateSankeyDiagramAggregatedFieldWellsOutput {
	return i.ToTemplateSankeyDiagramAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramAggregatedFieldWellsArgs) ToTemplateSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramAggregatedFieldWellsOutput)
}

func (i TemplateSankeyDiagramAggregatedFieldWellsArgs) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutput() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramAggregatedFieldWellsArgs) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramAggregatedFieldWellsOutput).ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateSankeyDiagramAggregatedFieldWellsPtrInput is an input type that accepts TemplateSankeyDiagramAggregatedFieldWellsArgs, TemplateSankeyDiagramAggregatedFieldWellsPtr and TemplateSankeyDiagramAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramAggregatedFieldWellsPtrInput` via:
//
//	        TemplateSankeyDiagramAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateSankeyDiagramAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutput() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput
	ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateSankeyDiagramAggregatedFieldWellsPtrOutput
}

type templateSankeyDiagramAggregatedFieldWellsPtrType TemplateSankeyDiagramAggregatedFieldWellsArgs

func TemplateSankeyDiagramAggregatedFieldWellsPtr(v *TemplateSankeyDiagramAggregatedFieldWellsArgs) TemplateSankeyDiagramAggregatedFieldWellsPtrInput {
	return (*templateSankeyDiagramAggregatedFieldWellsPtrType)(v)
}

func (*templateSankeyDiagramAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (i *templateSankeyDiagramAggregatedFieldWellsPtrType) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutput() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return i.ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateSankeyDiagramAggregatedFieldWellsPtrType) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type TemplateSankeyDiagramAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) ToTemplateSankeyDiagramAggregatedFieldWellsOutput() TemplateSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) ToTemplateSankeyDiagramAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsOutput {
	return o
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutput() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSankeyDiagramAggregatedFieldWells) *TemplateSankeyDiagramAggregatedFieldWells {
		return &v
	}).(TemplateSankeyDiagramAggregatedFieldWellsPtrOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) Destination() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramAggregatedFieldWells) []TemplateDimensionField { return v.Destination }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) Source() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramAggregatedFieldWells) []TemplateDimensionField { return v.Source }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsOutput) Weight() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramAggregatedFieldWells) []TemplateMeasureField { return v.Weight }).(TemplateMeasureFieldArrayOutput)
}

type TemplateSankeyDiagramAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutput() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) ToTemplateSankeyDiagramAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) Elem() TemplateSankeyDiagramAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramAggregatedFieldWells) TemplateSankeyDiagramAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateSankeyDiagramAggregatedFieldWells
		return ret
	}).(TemplateSankeyDiagramAggregatedFieldWellsOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) Destination() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) Source() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Source
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateSankeyDiagramAggregatedFieldWellsPtrOutput) Weight() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateSankeyDiagramChartConfiguration struct {
	DataLabels        *TemplateDataLabelOptions               `pulumi:"dataLabels"`
	FieldWells        *TemplateSankeyDiagramFieldWells        `pulumi:"fieldWells"`
	SortConfiguration *TemplateSankeyDiagramSortConfiguration `pulumi:"sortConfiguration"`
}

// TemplateSankeyDiagramChartConfigurationInput is an input type that accepts TemplateSankeyDiagramChartConfigurationArgs and TemplateSankeyDiagramChartConfigurationOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramChartConfigurationInput` via:
//
//	TemplateSankeyDiagramChartConfigurationArgs{...}
type TemplateSankeyDiagramChartConfigurationInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramChartConfigurationOutput() TemplateSankeyDiagramChartConfigurationOutput
	ToTemplateSankeyDiagramChartConfigurationOutputWithContext(context.Context) TemplateSankeyDiagramChartConfigurationOutput
}

type TemplateSankeyDiagramChartConfigurationArgs struct {
	DataLabels        TemplateDataLabelOptionsPtrInput               `pulumi:"dataLabels"`
	FieldWells        TemplateSankeyDiagramFieldWellsPtrInput        `pulumi:"fieldWells"`
	SortConfiguration TemplateSankeyDiagramSortConfigurationPtrInput `pulumi:"sortConfiguration"`
}

func (TemplateSankeyDiagramChartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i TemplateSankeyDiagramChartConfigurationArgs) ToTemplateSankeyDiagramChartConfigurationOutput() TemplateSankeyDiagramChartConfigurationOutput {
	return i.ToTemplateSankeyDiagramChartConfigurationOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramChartConfigurationArgs) ToTemplateSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramChartConfigurationOutput)
}

func (i TemplateSankeyDiagramChartConfigurationArgs) ToTemplateSankeyDiagramChartConfigurationPtrOutput() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return i.ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramChartConfigurationArgs) ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramChartConfigurationOutput).ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(ctx)
}

// TemplateSankeyDiagramChartConfigurationPtrInput is an input type that accepts TemplateSankeyDiagramChartConfigurationArgs, TemplateSankeyDiagramChartConfigurationPtr and TemplateSankeyDiagramChartConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramChartConfigurationPtrInput` via:
//
//	        TemplateSankeyDiagramChartConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSankeyDiagramChartConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramChartConfigurationPtrOutput() TemplateSankeyDiagramChartConfigurationPtrOutput
	ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(context.Context) TemplateSankeyDiagramChartConfigurationPtrOutput
}

type templateSankeyDiagramChartConfigurationPtrType TemplateSankeyDiagramChartConfigurationArgs

func TemplateSankeyDiagramChartConfigurationPtr(v *TemplateSankeyDiagramChartConfigurationArgs) TemplateSankeyDiagramChartConfigurationPtrInput {
	return (*templateSankeyDiagramChartConfigurationPtrType)(v)
}

func (*templateSankeyDiagramChartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (i *templateSankeyDiagramChartConfigurationPtrType) ToTemplateSankeyDiagramChartConfigurationPtrOutput() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return i.ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSankeyDiagramChartConfigurationPtrType) ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramChartConfigurationPtrOutput)
}

type TemplateSankeyDiagramChartConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramChartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o TemplateSankeyDiagramChartConfigurationOutput) ToTemplateSankeyDiagramChartConfigurationOutput() TemplateSankeyDiagramChartConfigurationOutput {
	return o
}

func (o TemplateSankeyDiagramChartConfigurationOutput) ToTemplateSankeyDiagramChartConfigurationOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationOutput {
	return o
}

func (o TemplateSankeyDiagramChartConfigurationOutput) ToTemplateSankeyDiagramChartConfigurationPtrOutput() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o.ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSankeyDiagramChartConfigurationOutput) ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSankeyDiagramChartConfiguration) *TemplateSankeyDiagramChartConfiguration {
		return &v
	}).(TemplateSankeyDiagramChartConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramChartConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramChartConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramChartConfigurationOutput) FieldWells() TemplateSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramChartConfiguration) *TemplateSankeyDiagramFieldWells { return v.FieldWells }).(TemplateSankeyDiagramFieldWellsPtrOutput)
}

func (o TemplateSankeyDiagramChartConfigurationOutput) SortConfiguration() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramChartConfiguration) *TemplateSankeyDiagramSortConfiguration {
		return v.SortConfiguration
	}).(TemplateSankeyDiagramSortConfigurationPtrOutput)
}

type TemplateSankeyDiagramChartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramChartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramChartConfiguration)(nil)).Elem()
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) ToTemplateSankeyDiagramChartConfigurationPtrOutput() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) ToTemplateSankeyDiagramChartConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) Elem() TemplateSankeyDiagramChartConfigurationOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramChartConfiguration) TemplateSankeyDiagramChartConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSankeyDiagramChartConfiguration
		return ret
	}).(TemplateSankeyDiagramChartConfigurationOutput)
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramChartConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) FieldWells() TemplateSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramChartConfiguration) *TemplateSankeyDiagramFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateSankeyDiagramFieldWellsPtrOutput)
}

func (o TemplateSankeyDiagramChartConfigurationPtrOutput) SortConfiguration() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramChartConfiguration) *TemplateSankeyDiagramSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateSankeyDiagramSortConfigurationPtrOutput)
}

type TemplateSankeyDiagramFieldWells struct {
	SankeyDiagramAggregatedFieldWells *TemplateSankeyDiagramAggregatedFieldWells `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

// TemplateSankeyDiagramFieldWellsInput is an input type that accepts TemplateSankeyDiagramFieldWellsArgs and TemplateSankeyDiagramFieldWellsOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramFieldWellsInput` via:
//
//	TemplateSankeyDiagramFieldWellsArgs{...}
type TemplateSankeyDiagramFieldWellsInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramFieldWellsOutput() TemplateSankeyDiagramFieldWellsOutput
	ToTemplateSankeyDiagramFieldWellsOutputWithContext(context.Context) TemplateSankeyDiagramFieldWellsOutput
}

type TemplateSankeyDiagramFieldWellsArgs struct {
	SankeyDiagramAggregatedFieldWells TemplateSankeyDiagramAggregatedFieldWellsPtrInput `pulumi:"sankeyDiagramAggregatedFieldWells"`
}

func (TemplateSankeyDiagramFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramFieldWells)(nil)).Elem()
}

func (i TemplateSankeyDiagramFieldWellsArgs) ToTemplateSankeyDiagramFieldWellsOutput() TemplateSankeyDiagramFieldWellsOutput {
	return i.ToTemplateSankeyDiagramFieldWellsOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramFieldWellsArgs) ToTemplateSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramFieldWellsOutput)
}

func (i TemplateSankeyDiagramFieldWellsArgs) ToTemplateSankeyDiagramFieldWellsPtrOutput() TemplateSankeyDiagramFieldWellsPtrOutput {
	return i.ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramFieldWellsArgs) ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramFieldWellsOutput).ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(ctx)
}

// TemplateSankeyDiagramFieldWellsPtrInput is an input type that accepts TemplateSankeyDiagramFieldWellsArgs, TemplateSankeyDiagramFieldWellsPtr and TemplateSankeyDiagramFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramFieldWellsPtrInput` via:
//
//	        TemplateSankeyDiagramFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateSankeyDiagramFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramFieldWellsPtrOutput() TemplateSankeyDiagramFieldWellsPtrOutput
	ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(context.Context) TemplateSankeyDiagramFieldWellsPtrOutput
}

type templateSankeyDiagramFieldWellsPtrType TemplateSankeyDiagramFieldWellsArgs

func TemplateSankeyDiagramFieldWellsPtr(v *TemplateSankeyDiagramFieldWellsArgs) TemplateSankeyDiagramFieldWellsPtrInput {
	return (*templateSankeyDiagramFieldWellsPtrType)(v)
}

func (*templateSankeyDiagramFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramFieldWells)(nil)).Elem()
}

func (i *templateSankeyDiagramFieldWellsPtrType) ToTemplateSankeyDiagramFieldWellsPtrOutput() TemplateSankeyDiagramFieldWellsPtrOutput {
	return i.ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateSankeyDiagramFieldWellsPtrType) ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramFieldWellsPtrOutput)
}

type TemplateSankeyDiagramFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramFieldWells)(nil)).Elem()
}

func (o TemplateSankeyDiagramFieldWellsOutput) ToTemplateSankeyDiagramFieldWellsOutput() TemplateSankeyDiagramFieldWellsOutput {
	return o
}

func (o TemplateSankeyDiagramFieldWellsOutput) ToTemplateSankeyDiagramFieldWellsOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsOutput {
	return o
}

func (o TemplateSankeyDiagramFieldWellsOutput) ToTemplateSankeyDiagramFieldWellsPtrOutput() TemplateSankeyDiagramFieldWellsPtrOutput {
	return o.ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateSankeyDiagramFieldWellsOutput) ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSankeyDiagramFieldWells) *TemplateSankeyDiagramFieldWells {
		return &v
	}).(TemplateSankeyDiagramFieldWellsPtrOutput)
}

func (o TemplateSankeyDiagramFieldWellsOutput) SankeyDiagramAggregatedFieldWells() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramFieldWells) *TemplateSankeyDiagramAggregatedFieldWells {
		return v.SankeyDiagramAggregatedFieldWells
	}).(TemplateSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type TemplateSankeyDiagramFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramFieldWells)(nil)).Elem()
}

func (o TemplateSankeyDiagramFieldWellsPtrOutput) ToTemplateSankeyDiagramFieldWellsPtrOutput() TemplateSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o TemplateSankeyDiagramFieldWellsPtrOutput) ToTemplateSankeyDiagramFieldWellsPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramFieldWellsPtrOutput {
	return o
}

func (o TemplateSankeyDiagramFieldWellsPtrOutput) Elem() TemplateSankeyDiagramFieldWellsOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramFieldWells) TemplateSankeyDiagramFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateSankeyDiagramFieldWells
		return ret
	}).(TemplateSankeyDiagramFieldWellsOutput)
}

func (o TemplateSankeyDiagramFieldWellsPtrOutput) SankeyDiagramAggregatedFieldWells() TemplateSankeyDiagramAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramFieldWells) *TemplateSankeyDiagramAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.SankeyDiagramAggregatedFieldWells
	}).(TemplateSankeyDiagramAggregatedFieldWellsPtrOutput)
}

type TemplateSankeyDiagramSortConfiguration struct {
	DestinationItemsLimit *TemplateItemsLimitConfiguration `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      *TemplateItemsLimitConfiguration `pulumi:"sourceItemsLimit"`
	WeightSort            []TemplateFieldSortOptions       `pulumi:"weightSort"`
}

// TemplateSankeyDiagramSortConfigurationInput is an input type that accepts TemplateSankeyDiagramSortConfigurationArgs and TemplateSankeyDiagramSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramSortConfigurationInput` via:
//
//	TemplateSankeyDiagramSortConfigurationArgs{...}
type TemplateSankeyDiagramSortConfigurationInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramSortConfigurationOutput() TemplateSankeyDiagramSortConfigurationOutput
	ToTemplateSankeyDiagramSortConfigurationOutputWithContext(context.Context) TemplateSankeyDiagramSortConfigurationOutput
}

type TemplateSankeyDiagramSortConfigurationArgs struct {
	DestinationItemsLimit TemplateItemsLimitConfigurationPtrInput `pulumi:"destinationItemsLimit"`
	SourceItemsLimit      TemplateItemsLimitConfigurationPtrInput `pulumi:"sourceItemsLimit"`
	WeightSort            TemplateFieldSortOptionsArrayInput      `pulumi:"weightSort"`
}

func (TemplateSankeyDiagramSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i TemplateSankeyDiagramSortConfigurationArgs) ToTemplateSankeyDiagramSortConfigurationOutput() TemplateSankeyDiagramSortConfigurationOutput {
	return i.ToTemplateSankeyDiagramSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramSortConfigurationArgs) ToTemplateSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramSortConfigurationOutput)
}

func (i TemplateSankeyDiagramSortConfigurationArgs) ToTemplateSankeyDiagramSortConfigurationPtrOutput() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return i.ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramSortConfigurationArgs) ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramSortConfigurationOutput).ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateSankeyDiagramSortConfigurationPtrInput is an input type that accepts TemplateSankeyDiagramSortConfigurationArgs, TemplateSankeyDiagramSortConfigurationPtr and TemplateSankeyDiagramSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramSortConfigurationPtrInput` via:
//
//	        TemplateSankeyDiagramSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSankeyDiagramSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramSortConfigurationPtrOutput() TemplateSankeyDiagramSortConfigurationPtrOutput
	ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(context.Context) TemplateSankeyDiagramSortConfigurationPtrOutput
}

type templateSankeyDiagramSortConfigurationPtrType TemplateSankeyDiagramSortConfigurationArgs

func TemplateSankeyDiagramSortConfigurationPtr(v *TemplateSankeyDiagramSortConfigurationArgs) TemplateSankeyDiagramSortConfigurationPtrInput {
	return (*templateSankeyDiagramSortConfigurationPtrType)(v)
}

func (*templateSankeyDiagramSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (i *templateSankeyDiagramSortConfigurationPtrType) ToTemplateSankeyDiagramSortConfigurationPtrOutput() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return i.ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSankeyDiagramSortConfigurationPtrType) ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramSortConfigurationPtrOutput)
}

type TemplateSankeyDiagramSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o TemplateSankeyDiagramSortConfigurationOutput) ToTemplateSankeyDiagramSortConfigurationOutput() TemplateSankeyDiagramSortConfigurationOutput {
	return o
}

func (o TemplateSankeyDiagramSortConfigurationOutput) ToTemplateSankeyDiagramSortConfigurationOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationOutput {
	return o
}

func (o TemplateSankeyDiagramSortConfigurationOutput) ToTemplateSankeyDiagramSortConfigurationPtrOutput() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o.ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSankeyDiagramSortConfigurationOutput) ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSankeyDiagramSortConfiguration) *TemplateSankeyDiagramSortConfiguration {
		return &v
	}).(TemplateSankeyDiagramSortConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramSortConfigurationOutput) DestinationItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.DestinationItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramSortConfigurationOutput) SourceItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.SourceItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramSortConfigurationOutput) WeightSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramSortConfiguration) []TemplateFieldSortOptions { return v.WeightSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateSankeyDiagramSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramSortConfiguration)(nil)).Elem()
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) ToTemplateSankeyDiagramSortConfigurationPtrOutput() TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) ToTemplateSankeyDiagramSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramSortConfigurationPtrOutput {
	return o
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) Elem() TemplateSankeyDiagramSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramSortConfiguration) TemplateSankeyDiagramSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSankeyDiagramSortConfiguration
		return ret
	}).(TemplateSankeyDiagramSortConfigurationOutput)
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) DestinationItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) SourceItemsLimit() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.SourceItemsLimit
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramSortConfigurationPtrOutput) WeightSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.WeightSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateSankeyDiagramVisual struct {
	Actions            []TemplateVisualCustomAction             `pulumi:"actions"`
	ChartConfiguration *TemplateSankeyDiagramChartConfiguration `pulumi:"chartConfiguration"`
	Subtitle           *TemplateVisualSubtitleLabelOptions      `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions         `pulumi:"title"`
	VisualId           string                                   `pulumi:"visualId"`
}

// TemplateSankeyDiagramVisualInput is an input type that accepts TemplateSankeyDiagramVisualArgs and TemplateSankeyDiagramVisualOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramVisualInput` via:
//
//	TemplateSankeyDiagramVisualArgs{...}
type TemplateSankeyDiagramVisualInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramVisualOutput() TemplateSankeyDiagramVisualOutput
	ToTemplateSankeyDiagramVisualOutputWithContext(context.Context) TemplateSankeyDiagramVisualOutput
}

type TemplateSankeyDiagramVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput            `pulumi:"actions"`
	ChartConfiguration TemplateSankeyDiagramChartConfigurationPtrInput `pulumi:"chartConfiguration"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput      `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput         `pulumi:"title"`
	VisualId           pulumi.StringInput                              `pulumi:"visualId"`
}

func (TemplateSankeyDiagramVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramVisual)(nil)).Elem()
}

func (i TemplateSankeyDiagramVisualArgs) ToTemplateSankeyDiagramVisualOutput() TemplateSankeyDiagramVisualOutput {
	return i.ToTemplateSankeyDiagramVisualOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramVisualArgs) ToTemplateSankeyDiagramVisualOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramVisualOutput)
}

func (i TemplateSankeyDiagramVisualArgs) ToTemplateSankeyDiagramVisualPtrOutput() TemplateSankeyDiagramVisualPtrOutput {
	return i.ToTemplateSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i TemplateSankeyDiagramVisualArgs) ToTemplateSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramVisualOutput).ToTemplateSankeyDiagramVisualPtrOutputWithContext(ctx)
}

// TemplateSankeyDiagramVisualPtrInput is an input type that accepts TemplateSankeyDiagramVisualArgs, TemplateSankeyDiagramVisualPtr and TemplateSankeyDiagramVisualPtrOutput values.
// You can construct a concrete instance of `TemplateSankeyDiagramVisualPtrInput` via:
//
//	        TemplateSankeyDiagramVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateSankeyDiagramVisualPtrInput interface {
	pulumi.Input

	ToTemplateSankeyDiagramVisualPtrOutput() TemplateSankeyDiagramVisualPtrOutput
	ToTemplateSankeyDiagramVisualPtrOutputWithContext(context.Context) TemplateSankeyDiagramVisualPtrOutput
}

type templateSankeyDiagramVisualPtrType TemplateSankeyDiagramVisualArgs

func TemplateSankeyDiagramVisualPtr(v *TemplateSankeyDiagramVisualArgs) TemplateSankeyDiagramVisualPtrInput {
	return (*templateSankeyDiagramVisualPtrType)(v)
}

func (*templateSankeyDiagramVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramVisual)(nil)).Elem()
}

func (i *templateSankeyDiagramVisualPtrType) ToTemplateSankeyDiagramVisualPtrOutput() TemplateSankeyDiagramVisualPtrOutput {
	return i.ToTemplateSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (i *templateSankeyDiagramVisualPtrType) ToTemplateSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSankeyDiagramVisualPtrOutput)
}

type TemplateSankeyDiagramVisualOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSankeyDiagramVisual)(nil)).Elem()
}

func (o TemplateSankeyDiagramVisualOutput) ToTemplateSankeyDiagramVisualOutput() TemplateSankeyDiagramVisualOutput {
	return o
}

func (o TemplateSankeyDiagramVisualOutput) ToTemplateSankeyDiagramVisualOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualOutput {
	return o
}

func (o TemplateSankeyDiagramVisualOutput) ToTemplateSankeyDiagramVisualPtrOutput() TemplateSankeyDiagramVisualPtrOutput {
	return o.ToTemplateSankeyDiagramVisualPtrOutputWithContext(context.Background())
}

func (o TemplateSankeyDiagramVisualOutput) ToTemplateSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSankeyDiagramVisual) *TemplateSankeyDiagramVisual {
		return &v
	}).(TemplateSankeyDiagramVisualPtrOutput)
}

func (o TemplateSankeyDiagramVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateSankeyDiagramVisualOutput) ChartConfiguration() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramVisual) *TemplateSankeyDiagramChartConfiguration {
		return v.ChartConfiguration
	}).(TemplateSankeyDiagramChartConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSankeyDiagramVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateSankeyDiagramVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateSankeyDiagramVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSankeyDiagramVisual)(nil)).Elem()
}

func (o TemplateSankeyDiagramVisualPtrOutput) ToTemplateSankeyDiagramVisualPtrOutput() TemplateSankeyDiagramVisualPtrOutput {
	return o
}

func (o TemplateSankeyDiagramVisualPtrOutput) ToTemplateSankeyDiagramVisualPtrOutputWithContext(ctx context.Context) TemplateSankeyDiagramVisualPtrOutput {
	return o
}

func (o TemplateSankeyDiagramVisualPtrOutput) Elem() TemplateSankeyDiagramVisualOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) TemplateSankeyDiagramVisual {
		if v != nil {
			return *v
		}
		var ret TemplateSankeyDiagramVisual
		return ret
	}).(TemplateSankeyDiagramVisualOutput)
}

func (o TemplateSankeyDiagramVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateSankeyDiagramVisualPtrOutput) ChartConfiguration() TemplateSankeyDiagramChartConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) *TemplateSankeyDiagramChartConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateSankeyDiagramChartConfigurationPtrOutput)
}

func (o TemplateSankeyDiagramVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateSankeyDiagramVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSankeyDiagramVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateScatterPlotCategoricallyAggregatedFieldWells struct {
	Category []TemplateDimensionField `pulumi:"category"`
	Label    []TemplateDimensionField `pulumi:"label"`
	Size     []TemplateMeasureField   `pulumi:"size"`
	XAxis    []TemplateMeasureField   `pulumi:"xAxis"`
	YAxis    []TemplateMeasureField   `pulumi:"yAxis"`
}

// TemplateScatterPlotCategoricallyAggregatedFieldWellsInput is an input type that accepts TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs and TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateScatterPlotCategoricallyAggregatedFieldWellsInput` via:
//
//	TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
type TemplateScatterPlotCategoricallyAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput
	ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput
}

type TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs struct {
	Category TemplateDimensionFieldArrayInput `pulumi:"category"`
	Label    TemplateDimensionFieldArrayInput `pulumi:"label"`
	Size     TemplateMeasureFieldArrayInput   `pulumi:"size"`
	XAxis    TemplateMeasureFieldArrayInput   `pulumi:"xAxis"`
	YAxis    TemplateMeasureFieldArrayInput   `pulumi:"yAxis"`
}

func (TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return i.ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (i TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput).ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput is an input type that accepts TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs, TemplateScatterPlotCategoricallyAggregatedFieldWellsPtr and TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput` via:
//
//	        TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
	ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput
}

type templateScatterPlotCategoricallyAggregatedFieldWellsPtrType TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs

func TemplateScatterPlotCategoricallyAggregatedFieldWellsPtr(v *TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput {
	return (*templateScatterPlotCategoricallyAggregatedFieldWellsPtrType)(v)
}

func (*templateScatterPlotCategoricallyAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (i *templateScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateScatterPlotCategoricallyAggregatedFieldWellsPtrType) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

type TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScatterPlotCategoricallyAggregatedFieldWells) *TemplateScatterPlotCategoricallyAggregatedFieldWells {
		return &v
	}).(TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateDimensionField {
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) Label() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateDimensionField { return v.Label }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) Size() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField { return v.Size }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) XAxis() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField { return v.XAxis }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput) YAxis() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField { return v.YAxis }).(TemplateMeasureFieldArrayOutput)
}

type TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotCategoricallyAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) ToTemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Elem() TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) TemplateScatterPlotCategoricallyAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateScatterPlotCategoricallyAggregatedFieldWells
		return ret
	}).(TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Label() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Label
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) Size() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) XAxis() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput) YAxis() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotCategoricallyAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateScatterPlotConfiguration struct {
	DataLabels          *TemplateDataLabelOptions      `pulumi:"dataLabels"`
	FieldWells          *TemplateScatterPlotFieldWells `pulumi:"fieldWells"`
	Legend              *TemplateLegendOptions         `pulumi:"legend"`
	Tooltip             *TemplateTooltipOptions        `pulumi:"tooltip"`
	VisualPalette       *TemplateVisualPalette         `pulumi:"visualPalette"`
	XAxisDisplayOptions *TemplateAxisDisplayOptions    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   *TemplateChartAxisLabelOptions `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions *TemplateAxisDisplayOptions    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   *TemplateChartAxisLabelOptions `pulumi:"yAxisLabelOptions"`
}

// TemplateScatterPlotConfigurationInput is an input type that accepts TemplateScatterPlotConfigurationArgs and TemplateScatterPlotConfigurationOutput values.
// You can construct a concrete instance of `TemplateScatterPlotConfigurationInput` via:
//
//	TemplateScatterPlotConfigurationArgs{...}
type TemplateScatterPlotConfigurationInput interface {
	pulumi.Input

	ToTemplateScatterPlotConfigurationOutput() TemplateScatterPlotConfigurationOutput
	ToTemplateScatterPlotConfigurationOutputWithContext(context.Context) TemplateScatterPlotConfigurationOutput
}

type TemplateScatterPlotConfigurationArgs struct {
	DataLabels          TemplateDataLabelOptionsPtrInput      `pulumi:"dataLabels"`
	FieldWells          TemplateScatterPlotFieldWellsPtrInput `pulumi:"fieldWells"`
	Legend              TemplateLegendOptionsPtrInput         `pulumi:"legend"`
	Tooltip             TemplateTooltipOptionsPtrInput        `pulumi:"tooltip"`
	VisualPalette       TemplateVisualPalettePtrInput         `pulumi:"visualPalette"`
	XAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput    `pulumi:"xAxisDisplayOptions"`
	XAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput `pulumi:"xAxisLabelOptions"`
	YAxisDisplayOptions TemplateAxisDisplayOptionsPtrInput    `pulumi:"yAxisDisplayOptions"`
	YAxisLabelOptions   TemplateChartAxisLabelOptionsPtrInput `pulumi:"yAxisLabelOptions"`
}

func (TemplateScatterPlotConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotConfiguration)(nil)).Elem()
}

func (i TemplateScatterPlotConfigurationArgs) ToTemplateScatterPlotConfigurationOutput() TemplateScatterPlotConfigurationOutput {
	return i.ToTemplateScatterPlotConfigurationOutputWithContext(context.Background())
}

func (i TemplateScatterPlotConfigurationArgs) ToTemplateScatterPlotConfigurationOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotConfigurationOutput)
}

func (i TemplateScatterPlotConfigurationArgs) ToTemplateScatterPlotConfigurationPtrOutput() TemplateScatterPlotConfigurationPtrOutput {
	return i.ToTemplateScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateScatterPlotConfigurationArgs) ToTemplateScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotConfigurationOutput).ToTemplateScatterPlotConfigurationPtrOutputWithContext(ctx)
}

// TemplateScatterPlotConfigurationPtrInput is an input type that accepts TemplateScatterPlotConfigurationArgs, TemplateScatterPlotConfigurationPtr and TemplateScatterPlotConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateScatterPlotConfigurationPtrInput` via:
//
//	        TemplateScatterPlotConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateScatterPlotConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateScatterPlotConfigurationPtrOutput() TemplateScatterPlotConfigurationPtrOutput
	ToTemplateScatterPlotConfigurationPtrOutputWithContext(context.Context) TemplateScatterPlotConfigurationPtrOutput
}

type templateScatterPlotConfigurationPtrType TemplateScatterPlotConfigurationArgs

func TemplateScatterPlotConfigurationPtr(v *TemplateScatterPlotConfigurationArgs) TemplateScatterPlotConfigurationPtrInput {
	return (*templateScatterPlotConfigurationPtrType)(v)
}

func (*templateScatterPlotConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotConfiguration)(nil)).Elem()
}

func (i *templateScatterPlotConfigurationPtrType) ToTemplateScatterPlotConfigurationPtrOutput() TemplateScatterPlotConfigurationPtrOutput {
	return i.ToTemplateScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateScatterPlotConfigurationPtrType) ToTemplateScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotConfigurationPtrOutput)
}

type TemplateScatterPlotConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotConfiguration)(nil)).Elem()
}

func (o TemplateScatterPlotConfigurationOutput) ToTemplateScatterPlotConfigurationOutput() TemplateScatterPlotConfigurationOutput {
	return o
}

func (o TemplateScatterPlotConfigurationOutput) ToTemplateScatterPlotConfigurationOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationOutput {
	return o
}

func (o TemplateScatterPlotConfigurationOutput) ToTemplateScatterPlotConfigurationPtrOutput() TemplateScatterPlotConfigurationPtrOutput {
	return o.ToTemplateScatterPlotConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateScatterPlotConfigurationOutput) ToTemplateScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScatterPlotConfiguration) *TemplateScatterPlotConfiguration {
		return &v
	}).(TemplateScatterPlotConfigurationPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) FieldWells() TemplateScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateScatterPlotFieldWells { return v.FieldWells }).(TemplateScatterPlotFieldWellsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateVisualPalette { return v.VisualPalette }).(TemplateVisualPalettePtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateAxisDisplayOptions { return v.XAxisDisplayOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateChartAxisLabelOptions { return v.XAxisLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) YAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateAxisDisplayOptions { return v.YAxisDisplayOptions }).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationOutput) YAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotConfiguration) *TemplateChartAxisLabelOptions { return v.YAxisLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

type TemplateScatterPlotConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotConfiguration)(nil)).Elem()
}

func (o TemplateScatterPlotConfigurationPtrOutput) ToTemplateScatterPlotConfigurationPtrOutput() TemplateScatterPlotConfigurationPtrOutput {
	return o
}

func (o TemplateScatterPlotConfigurationPtrOutput) ToTemplateScatterPlotConfigurationPtrOutputWithContext(ctx context.Context) TemplateScatterPlotConfigurationPtrOutput {
	return o
}

func (o TemplateScatterPlotConfigurationPtrOutput) Elem() TemplateScatterPlotConfigurationOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) TemplateScatterPlotConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateScatterPlotConfiguration
		return ret
	}).(TemplateScatterPlotConfigurationOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) FieldWells() TemplateScatterPlotFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateScatterPlotFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateScatterPlotFieldWellsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) VisualPalette() TemplateVisualPalettePtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateVisualPalette {
		if v == nil {
			return nil
		}
		return v.VisualPalette
	}).(TemplateVisualPalettePtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) XAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.XAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) XAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.XAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) YAxisDisplayOptions() TemplateAxisDisplayOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateAxisDisplayOptions {
		if v == nil {
			return nil
		}
		return v.YAxisDisplayOptions
	}).(TemplateAxisDisplayOptionsPtrOutput)
}

func (o TemplateScatterPlotConfigurationPtrOutput) YAxisLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.YAxisLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

type TemplateScatterPlotFieldWells struct {
	ScatterPlotCategoricallyAggregatedFieldWells *TemplateScatterPlotCategoricallyAggregatedFieldWells `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            *TemplateScatterPlotUnaggregatedFieldWells            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

// TemplateScatterPlotFieldWellsInput is an input type that accepts TemplateScatterPlotFieldWellsArgs and TemplateScatterPlotFieldWellsOutput values.
// You can construct a concrete instance of `TemplateScatterPlotFieldWellsInput` via:
//
//	TemplateScatterPlotFieldWellsArgs{...}
type TemplateScatterPlotFieldWellsInput interface {
	pulumi.Input

	ToTemplateScatterPlotFieldWellsOutput() TemplateScatterPlotFieldWellsOutput
	ToTemplateScatterPlotFieldWellsOutputWithContext(context.Context) TemplateScatterPlotFieldWellsOutput
}

type TemplateScatterPlotFieldWellsArgs struct {
	ScatterPlotCategoricallyAggregatedFieldWells TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput `pulumi:"scatterPlotCategoricallyAggregatedFieldWells"`
	ScatterPlotUnaggregatedFieldWells            TemplateScatterPlotUnaggregatedFieldWellsPtrInput            `pulumi:"scatterPlotUnaggregatedFieldWells"`
}

func (TemplateScatterPlotFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotFieldWells)(nil)).Elem()
}

func (i TemplateScatterPlotFieldWellsArgs) ToTemplateScatterPlotFieldWellsOutput() TemplateScatterPlotFieldWellsOutput {
	return i.ToTemplateScatterPlotFieldWellsOutputWithContext(context.Background())
}

func (i TemplateScatterPlotFieldWellsArgs) ToTemplateScatterPlotFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotFieldWellsOutput)
}

func (i TemplateScatterPlotFieldWellsArgs) ToTemplateScatterPlotFieldWellsPtrOutput() TemplateScatterPlotFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateScatterPlotFieldWellsArgs) ToTemplateScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotFieldWellsOutput).ToTemplateScatterPlotFieldWellsPtrOutputWithContext(ctx)
}

// TemplateScatterPlotFieldWellsPtrInput is an input type that accepts TemplateScatterPlotFieldWellsArgs, TemplateScatterPlotFieldWellsPtr and TemplateScatterPlotFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateScatterPlotFieldWellsPtrInput` via:
//
//	        TemplateScatterPlotFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateScatterPlotFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateScatterPlotFieldWellsPtrOutput() TemplateScatterPlotFieldWellsPtrOutput
	ToTemplateScatterPlotFieldWellsPtrOutputWithContext(context.Context) TemplateScatterPlotFieldWellsPtrOutput
}

type templateScatterPlotFieldWellsPtrType TemplateScatterPlotFieldWellsArgs

func TemplateScatterPlotFieldWellsPtr(v *TemplateScatterPlotFieldWellsArgs) TemplateScatterPlotFieldWellsPtrInput {
	return (*templateScatterPlotFieldWellsPtrType)(v)
}

func (*templateScatterPlotFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotFieldWells)(nil)).Elem()
}

func (i *templateScatterPlotFieldWellsPtrType) ToTemplateScatterPlotFieldWellsPtrOutput() TemplateScatterPlotFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateScatterPlotFieldWellsPtrType) ToTemplateScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotFieldWellsPtrOutput)
}

type TemplateScatterPlotFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotFieldWellsOutput) ToTemplateScatterPlotFieldWellsOutput() TemplateScatterPlotFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotFieldWellsOutput) ToTemplateScatterPlotFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotFieldWellsOutput) ToTemplateScatterPlotFieldWellsPtrOutput() TemplateScatterPlotFieldWellsPtrOutput {
	return o.ToTemplateScatterPlotFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateScatterPlotFieldWellsOutput) ToTemplateScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScatterPlotFieldWells) *TemplateScatterPlotFieldWells {
		return &v
	}).(TemplateScatterPlotFieldWellsPtrOutput)
}

func (o TemplateScatterPlotFieldWellsOutput) ScatterPlotCategoricallyAggregatedFieldWells() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotFieldWells) *TemplateScatterPlotCategoricallyAggregatedFieldWells {
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o TemplateScatterPlotFieldWellsOutput) ScatterPlotUnaggregatedFieldWells() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotFieldWells) *TemplateScatterPlotUnaggregatedFieldWells {
		return v.ScatterPlotUnaggregatedFieldWells
	}).(TemplateScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type TemplateScatterPlotFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotFieldWellsPtrOutput) ToTemplateScatterPlotFieldWellsPtrOutput() TemplateScatterPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotFieldWellsPtrOutput) ToTemplateScatterPlotFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotFieldWellsPtrOutput) Elem() TemplateScatterPlotFieldWellsOutput {
	return o.ApplyT(func(v *TemplateScatterPlotFieldWells) TemplateScatterPlotFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateScatterPlotFieldWells
		return ret
	}).(TemplateScatterPlotFieldWellsOutput)
}

func (o TemplateScatterPlotFieldWellsPtrOutput) ScatterPlotCategoricallyAggregatedFieldWells() TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotFieldWells) *TemplateScatterPlotCategoricallyAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotCategoricallyAggregatedFieldWells
	}).(TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput)
}

func (o TemplateScatterPlotFieldWellsPtrOutput) ScatterPlotUnaggregatedFieldWells() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotFieldWells) *TemplateScatterPlotUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.ScatterPlotUnaggregatedFieldWells
	}).(TemplateScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type TemplateScatterPlotUnaggregatedFieldWells struct {
	Category []TemplateDimensionField `pulumi:"category"`
	Label    []TemplateDimensionField `pulumi:"label"`
	Size     []TemplateMeasureField   `pulumi:"size"`
	XAxis    []TemplateDimensionField `pulumi:"xAxis"`
	YAxis    []TemplateDimensionField `pulumi:"yAxis"`
}

// TemplateScatterPlotUnaggregatedFieldWellsInput is an input type that accepts TemplateScatterPlotUnaggregatedFieldWellsArgs and TemplateScatterPlotUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateScatterPlotUnaggregatedFieldWellsInput` via:
//
//	TemplateScatterPlotUnaggregatedFieldWellsArgs{...}
type TemplateScatterPlotUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateScatterPlotUnaggregatedFieldWellsOutput() TemplateScatterPlotUnaggregatedFieldWellsOutput
	ToTemplateScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Context) TemplateScatterPlotUnaggregatedFieldWellsOutput
}

type TemplateScatterPlotUnaggregatedFieldWellsArgs struct {
	Category TemplateDimensionFieldArrayInput `pulumi:"category"`
	Label    TemplateDimensionFieldArrayInput `pulumi:"label"`
	Size     TemplateMeasureFieldArrayInput   `pulumi:"size"`
	XAxis    TemplateDimensionFieldArrayInput `pulumi:"xAxis"`
	YAxis    TemplateDimensionFieldArrayInput `pulumi:"yAxis"`
}

func (TemplateScatterPlotUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i TemplateScatterPlotUnaggregatedFieldWellsArgs) ToTemplateScatterPlotUnaggregatedFieldWellsOutput() TemplateScatterPlotUnaggregatedFieldWellsOutput {
	return i.ToTemplateScatterPlotUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateScatterPlotUnaggregatedFieldWellsArgs) ToTemplateScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotUnaggregatedFieldWellsOutput)
}

func (i TemplateScatterPlotUnaggregatedFieldWellsArgs) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutput() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateScatterPlotUnaggregatedFieldWellsArgs) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotUnaggregatedFieldWellsOutput).ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateScatterPlotUnaggregatedFieldWellsPtrInput is an input type that accepts TemplateScatterPlotUnaggregatedFieldWellsArgs, TemplateScatterPlotUnaggregatedFieldWellsPtr and TemplateScatterPlotUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateScatterPlotUnaggregatedFieldWellsPtrInput` via:
//
//	        TemplateScatterPlotUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateScatterPlotUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutput() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput
	ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateScatterPlotUnaggregatedFieldWellsPtrOutput
}

type templateScatterPlotUnaggregatedFieldWellsPtrType TemplateScatterPlotUnaggregatedFieldWellsArgs

func TemplateScatterPlotUnaggregatedFieldWellsPtr(v *TemplateScatterPlotUnaggregatedFieldWellsArgs) TemplateScatterPlotUnaggregatedFieldWellsPtrInput {
	return (*templateScatterPlotUnaggregatedFieldWellsPtrType)(v)
}

func (*templateScatterPlotUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (i *templateScatterPlotUnaggregatedFieldWellsPtrType) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutput() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return i.ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateScatterPlotUnaggregatedFieldWellsPtrType) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotUnaggregatedFieldWellsPtrOutput)
}

type TemplateScatterPlotUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) ToTemplateScatterPlotUnaggregatedFieldWellsOutput() TemplateScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) ToTemplateScatterPlotUnaggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsOutput {
	return o
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutput() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScatterPlotUnaggregatedFieldWells) *TemplateScatterPlotUnaggregatedFieldWells {
		return &v
	}).(TemplateScatterPlotUnaggregatedFieldWellsPtrOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField { return v.Category }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) Label() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField { return v.Label }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) Size() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotUnaggregatedFieldWells) []TemplateMeasureField { return v.Size }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) XAxis() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField { return v.XAxis }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsOutput) YAxis() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField { return v.YAxis }).(TemplateDimensionFieldArrayOutput)
}

type TemplateScatterPlotUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotUnaggregatedFieldWells)(nil)).Elem()
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutput() TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) ToTemplateScatterPlotUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateScatterPlotUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) Elem() TemplateScatterPlotUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) TemplateScatterPlotUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateScatterPlotUnaggregatedFieldWells
		return ret
	}).(TemplateScatterPlotUnaggregatedFieldWellsOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) Category() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) Label() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Label
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) Size() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Size
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) XAxis() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateScatterPlotUnaggregatedFieldWellsPtrOutput) YAxis() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotUnaggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(TemplateDimensionFieldArrayOutput)
}

type TemplateScatterPlotVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateScatterPlotConfiguration   `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateScatterPlotVisualInput is an input type that accepts TemplateScatterPlotVisualArgs and TemplateScatterPlotVisualOutput values.
// You can construct a concrete instance of `TemplateScatterPlotVisualInput` via:
//
//	TemplateScatterPlotVisualArgs{...}
type TemplateScatterPlotVisualInput interface {
	pulumi.Input

	ToTemplateScatterPlotVisualOutput() TemplateScatterPlotVisualOutput
	ToTemplateScatterPlotVisualOutputWithContext(context.Context) TemplateScatterPlotVisualOutput
}

type TemplateScatterPlotVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateScatterPlotConfigurationPtrInput   `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateScatterPlotVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotVisual)(nil)).Elem()
}

func (i TemplateScatterPlotVisualArgs) ToTemplateScatterPlotVisualOutput() TemplateScatterPlotVisualOutput {
	return i.ToTemplateScatterPlotVisualOutputWithContext(context.Background())
}

func (i TemplateScatterPlotVisualArgs) ToTemplateScatterPlotVisualOutputWithContext(ctx context.Context) TemplateScatterPlotVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotVisualOutput)
}

func (i TemplateScatterPlotVisualArgs) ToTemplateScatterPlotVisualPtrOutput() TemplateScatterPlotVisualPtrOutput {
	return i.ToTemplateScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i TemplateScatterPlotVisualArgs) ToTemplateScatterPlotVisualPtrOutputWithContext(ctx context.Context) TemplateScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotVisualOutput).ToTemplateScatterPlotVisualPtrOutputWithContext(ctx)
}

// TemplateScatterPlotVisualPtrInput is an input type that accepts TemplateScatterPlotVisualArgs, TemplateScatterPlotVisualPtr and TemplateScatterPlotVisualPtrOutput values.
// You can construct a concrete instance of `TemplateScatterPlotVisualPtrInput` via:
//
//	        TemplateScatterPlotVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateScatterPlotVisualPtrInput interface {
	pulumi.Input

	ToTemplateScatterPlotVisualPtrOutput() TemplateScatterPlotVisualPtrOutput
	ToTemplateScatterPlotVisualPtrOutputWithContext(context.Context) TemplateScatterPlotVisualPtrOutput
}

type templateScatterPlotVisualPtrType TemplateScatterPlotVisualArgs

func TemplateScatterPlotVisualPtr(v *TemplateScatterPlotVisualArgs) TemplateScatterPlotVisualPtrInput {
	return (*templateScatterPlotVisualPtrType)(v)
}

func (*templateScatterPlotVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotVisual)(nil)).Elem()
}

func (i *templateScatterPlotVisualPtrType) ToTemplateScatterPlotVisualPtrOutput() TemplateScatterPlotVisualPtrOutput {
	return i.ToTemplateScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (i *templateScatterPlotVisualPtrType) ToTemplateScatterPlotVisualPtrOutputWithContext(ctx context.Context) TemplateScatterPlotVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScatterPlotVisualPtrOutput)
}

type TemplateScatterPlotVisualOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScatterPlotVisual)(nil)).Elem()
}

func (o TemplateScatterPlotVisualOutput) ToTemplateScatterPlotVisualOutput() TemplateScatterPlotVisualOutput {
	return o
}

func (o TemplateScatterPlotVisualOutput) ToTemplateScatterPlotVisualOutputWithContext(ctx context.Context) TemplateScatterPlotVisualOutput {
	return o
}

func (o TemplateScatterPlotVisualOutput) ToTemplateScatterPlotVisualPtrOutput() TemplateScatterPlotVisualPtrOutput {
	return o.ToTemplateScatterPlotVisualPtrOutputWithContext(context.Background())
}

func (o TemplateScatterPlotVisualOutput) ToTemplateScatterPlotVisualPtrOutputWithContext(ctx context.Context) TemplateScatterPlotVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScatterPlotVisual) *TemplateScatterPlotVisual {
		return &v
	}).(TemplateScatterPlotVisualPtrOutput)
}

func (o TemplateScatterPlotVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateScatterPlotVisualOutput) ChartConfiguration() TemplateScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) *TemplateScatterPlotConfiguration { return v.ChartConfiguration }).(TemplateScatterPlotConfigurationPtrOutput)
}

func (o TemplateScatterPlotVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateScatterPlotVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateScatterPlotVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateScatterPlotVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateScatterPlotVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScatterPlotVisual)(nil)).Elem()
}

func (o TemplateScatterPlotVisualPtrOutput) ToTemplateScatterPlotVisualPtrOutput() TemplateScatterPlotVisualPtrOutput {
	return o
}

func (o TemplateScatterPlotVisualPtrOutput) ToTemplateScatterPlotVisualPtrOutputWithContext(ctx context.Context) TemplateScatterPlotVisualPtrOutput {
	return o
}

func (o TemplateScatterPlotVisualPtrOutput) Elem() TemplateScatterPlotVisualOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) TemplateScatterPlotVisual {
		if v != nil {
			return *v
		}
		var ret TemplateScatterPlotVisual
		return ret
	}).(TemplateScatterPlotVisualOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) ChartConfiguration() TemplateScatterPlotConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) *TemplateScatterPlotConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateScatterPlotConfigurationPtrOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateScatterPlotVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateScatterPlotVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateScrollBarOptions struct {
	Visibility   *TemplateVisibility          `pulumi:"visibility"`
	VisibleRange *TemplateVisibleRangeOptions `pulumi:"visibleRange"`
}

// TemplateScrollBarOptionsInput is an input type that accepts TemplateScrollBarOptionsArgs and TemplateScrollBarOptionsOutput values.
// You can construct a concrete instance of `TemplateScrollBarOptionsInput` via:
//
//	TemplateScrollBarOptionsArgs{...}
type TemplateScrollBarOptionsInput interface {
	pulumi.Input

	ToTemplateScrollBarOptionsOutput() TemplateScrollBarOptionsOutput
	ToTemplateScrollBarOptionsOutputWithContext(context.Context) TemplateScrollBarOptionsOutput
}

type TemplateScrollBarOptionsArgs struct {
	Visibility   TemplateVisibilityPtrInput          `pulumi:"visibility"`
	VisibleRange TemplateVisibleRangeOptionsPtrInput `pulumi:"visibleRange"`
}

func (TemplateScrollBarOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScrollBarOptions)(nil)).Elem()
}

func (i TemplateScrollBarOptionsArgs) ToTemplateScrollBarOptionsOutput() TemplateScrollBarOptionsOutput {
	return i.ToTemplateScrollBarOptionsOutputWithContext(context.Background())
}

func (i TemplateScrollBarOptionsArgs) ToTemplateScrollBarOptionsOutputWithContext(ctx context.Context) TemplateScrollBarOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScrollBarOptionsOutput)
}

func (i TemplateScrollBarOptionsArgs) ToTemplateScrollBarOptionsPtrOutput() TemplateScrollBarOptionsPtrOutput {
	return i.ToTemplateScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateScrollBarOptionsArgs) ToTemplateScrollBarOptionsPtrOutputWithContext(ctx context.Context) TemplateScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScrollBarOptionsOutput).ToTemplateScrollBarOptionsPtrOutputWithContext(ctx)
}

// TemplateScrollBarOptionsPtrInput is an input type that accepts TemplateScrollBarOptionsArgs, TemplateScrollBarOptionsPtr and TemplateScrollBarOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateScrollBarOptionsPtrInput` via:
//
//	        TemplateScrollBarOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateScrollBarOptionsPtrInput interface {
	pulumi.Input

	ToTemplateScrollBarOptionsPtrOutput() TemplateScrollBarOptionsPtrOutput
	ToTemplateScrollBarOptionsPtrOutputWithContext(context.Context) TemplateScrollBarOptionsPtrOutput
}

type templateScrollBarOptionsPtrType TemplateScrollBarOptionsArgs

func TemplateScrollBarOptionsPtr(v *TemplateScrollBarOptionsArgs) TemplateScrollBarOptionsPtrInput {
	return (*templateScrollBarOptionsPtrType)(v)
}

func (*templateScrollBarOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScrollBarOptions)(nil)).Elem()
}

func (i *templateScrollBarOptionsPtrType) ToTemplateScrollBarOptionsPtrOutput() TemplateScrollBarOptionsPtrOutput {
	return i.ToTemplateScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (i *templateScrollBarOptionsPtrType) ToTemplateScrollBarOptionsPtrOutputWithContext(ctx context.Context) TemplateScrollBarOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateScrollBarOptionsPtrOutput)
}

type TemplateScrollBarOptionsOutput struct{ *pulumi.OutputState }

func (TemplateScrollBarOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateScrollBarOptions)(nil)).Elem()
}

func (o TemplateScrollBarOptionsOutput) ToTemplateScrollBarOptionsOutput() TemplateScrollBarOptionsOutput {
	return o
}

func (o TemplateScrollBarOptionsOutput) ToTemplateScrollBarOptionsOutputWithContext(ctx context.Context) TemplateScrollBarOptionsOutput {
	return o
}

func (o TemplateScrollBarOptionsOutput) ToTemplateScrollBarOptionsPtrOutput() TemplateScrollBarOptionsPtrOutput {
	return o.ToTemplateScrollBarOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateScrollBarOptionsOutput) ToTemplateScrollBarOptionsPtrOutputWithContext(ctx context.Context) TemplateScrollBarOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateScrollBarOptions) *TemplateScrollBarOptions {
		return &v
	}).(TemplateScrollBarOptionsPtrOutput)
}

func (o TemplateScrollBarOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateScrollBarOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateScrollBarOptionsOutput) VisibleRange() TemplateVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateScrollBarOptions) *TemplateVisibleRangeOptions { return v.VisibleRange }).(TemplateVisibleRangeOptionsPtrOutput)
}

type TemplateScrollBarOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateScrollBarOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateScrollBarOptions)(nil)).Elem()
}

func (o TemplateScrollBarOptionsPtrOutput) ToTemplateScrollBarOptionsPtrOutput() TemplateScrollBarOptionsPtrOutput {
	return o
}

func (o TemplateScrollBarOptionsPtrOutput) ToTemplateScrollBarOptionsPtrOutputWithContext(ctx context.Context) TemplateScrollBarOptionsPtrOutput {
	return o
}

func (o TemplateScrollBarOptionsPtrOutput) Elem() TemplateScrollBarOptionsOutput {
	return o.ApplyT(func(v *TemplateScrollBarOptions) TemplateScrollBarOptions {
		if v != nil {
			return *v
		}
		var ret TemplateScrollBarOptions
		return ret
	}).(TemplateScrollBarOptionsOutput)
}

func (o TemplateScrollBarOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateScrollBarOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateScrollBarOptionsPtrOutput) VisibleRange() TemplateVisibleRangeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateScrollBarOptions) *TemplateVisibleRangeOptions {
		if v == nil {
			return nil
		}
		return v.VisibleRange
	}).(TemplateVisibleRangeOptionsPtrOutput)
}

type TemplateSecondaryValueOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateSecondaryValueOptionsInput is an input type that accepts TemplateSecondaryValueOptionsArgs and TemplateSecondaryValueOptionsOutput values.
// You can construct a concrete instance of `TemplateSecondaryValueOptionsInput` via:
//
//	TemplateSecondaryValueOptionsArgs{...}
type TemplateSecondaryValueOptionsInput interface {
	pulumi.Input

	ToTemplateSecondaryValueOptionsOutput() TemplateSecondaryValueOptionsOutput
	ToTemplateSecondaryValueOptionsOutputWithContext(context.Context) TemplateSecondaryValueOptionsOutput
}

type TemplateSecondaryValueOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateSecondaryValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSecondaryValueOptions)(nil)).Elem()
}

func (i TemplateSecondaryValueOptionsArgs) ToTemplateSecondaryValueOptionsOutput() TemplateSecondaryValueOptionsOutput {
	return i.ToTemplateSecondaryValueOptionsOutputWithContext(context.Background())
}

func (i TemplateSecondaryValueOptionsArgs) ToTemplateSecondaryValueOptionsOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSecondaryValueOptionsOutput)
}

func (i TemplateSecondaryValueOptionsArgs) ToTemplateSecondaryValueOptionsPtrOutput() TemplateSecondaryValueOptionsPtrOutput {
	return i.ToTemplateSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSecondaryValueOptionsArgs) ToTemplateSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSecondaryValueOptionsOutput).ToTemplateSecondaryValueOptionsPtrOutputWithContext(ctx)
}

// TemplateSecondaryValueOptionsPtrInput is an input type that accepts TemplateSecondaryValueOptionsArgs, TemplateSecondaryValueOptionsPtr and TemplateSecondaryValueOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSecondaryValueOptionsPtrInput` via:
//
//	        TemplateSecondaryValueOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSecondaryValueOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSecondaryValueOptionsPtrOutput() TemplateSecondaryValueOptionsPtrOutput
	ToTemplateSecondaryValueOptionsPtrOutputWithContext(context.Context) TemplateSecondaryValueOptionsPtrOutput
}

type templateSecondaryValueOptionsPtrType TemplateSecondaryValueOptionsArgs

func TemplateSecondaryValueOptionsPtr(v *TemplateSecondaryValueOptionsArgs) TemplateSecondaryValueOptionsPtrInput {
	return (*templateSecondaryValueOptionsPtrType)(v)
}

func (*templateSecondaryValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSecondaryValueOptions)(nil)).Elem()
}

func (i *templateSecondaryValueOptionsPtrType) ToTemplateSecondaryValueOptionsPtrOutput() TemplateSecondaryValueOptionsPtrOutput {
	return i.ToTemplateSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSecondaryValueOptionsPtrType) ToTemplateSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSecondaryValueOptionsPtrOutput)
}

type TemplateSecondaryValueOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSecondaryValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSecondaryValueOptions)(nil)).Elem()
}

func (o TemplateSecondaryValueOptionsOutput) ToTemplateSecondaryValueOptionsOutput() TemplateSecondaryValueOptionsOutput {
	return o
}

func (o TemplateSecondaryValueOptionsOutput) ToTemplateSecondaryValueOptionsOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsOutput {
	return o
}

func (o TemplateSecondaryValueOptionsOutput) ToTemplateSecondaryValueOptionsPtrOutput() TemplateSecondaryValueOptionsPtrOutput {
	return o.ToTemplateSecondaryValueOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSecondaryValueOptionsOutput) ToTemplateSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSecondaryValueOptions) *TemplateSecondaryValueOptions {
		return &v
	}).(TemplateSecondaryValueOptionsPtrOutput)
}

func (o TemplateSecondaryValueOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateSecondaryValueOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateSecondaryValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSecondaryValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSecondaryValueOptions)(nil)).Elem()
}

func (o TemplateSecondaryValueOptionsPtrOutput) ToTemplateSecondaryValueOptionsPtrOutput() TemplateSecondaryValueOptionsPtrOutput {
	return o
}

func (o TemplateSecondaryValueOptionsPtrOutput) ToTemplateSecondaryValueOptionsPtrOutputWithContext(ctx context.Context) TemplateSecondaryValueOptionsPtrOutput {
	return o
}

func (o TemplateSecondaryValueOptionsPtrOutput) Elem() TemplateSecondaryValueOptionsOutput {
	return o.ApplyT(func(v *TemplateSecondaryValueOptions) TemplateSecondaryValueOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSecondaryValueOptions
		return ret
	}).(TemplateSecondaryValueOptionsOutput)
}

func (o TemplateSecondaryValueOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateSecondaryValueOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateSectionAfterPageBreak struct {
	Status *TemplateSectionPageBreakStatus `pulumi:"status"`
}

// TemplateSectionAfterPageBreakInput is an input type that accepts TemplateSectionAfterPageBreakArgs and TemplateSectionAfterPageBreakOutput values.
// You can construct a concrete instance of `TemplateSectionAfterPageBreakInput` via:
//
//	TemplateSectionAfterPageBreakArgs{...}
type TemplateSectionAfterPageBreakInput interface {
	pulumi.Input

	ToTemplateSectionAfterPageBreakOutput() TemplateSectionAfterPageBreakOutput
	ToTemplateSectionAfterPageBreakOutputWithContext(context.Context) TemplateSectionAfterPageBreakOutput
}

type TemplateSectionAfterPageBreakArgs struct {
	Status TemplateSectionPageBreakStatusPtrInput `pulumi:"status"`
}

func (TemplateSectionAfterPageBreakArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionAfterPageBreak)(nil)).Elem()
}

func (i TemplateSectionAfterPageBreakArgs) ToTemplateSectionAfterPageBreakOutput() TemplateSectionAfterPageBreakOutput {
	return i.ToTemplateSectionAfterPageBreakOutputWithContext(context.Background())
}

func (i TemplateSectionAfterPageBreakArgs) ToTemplateSectionAfterPageBreakOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionAfterPageBreakOutput)
}

func (i TemplateSectionAfterPageBreakArgs) ToTemplateSectionAfterPageBreakPtrOutput() TemplateSectionAfterPageBreakPtrOutput {
	return i.ToTemplateSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i TemplateSectionAfterPageBreakArgs) ToTemplateSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionAfterPageBreakOutput).ToTemplateSectionAfterPageBreakPtrOutputWithContext(ctx)
}

// TemplateSectionAfterPageBreakPtrInput is an input type that accepts TemplateSectionAfterPageBreakArgs, TemplateSectionAfterPageBreakPtr and TemplateSectionAfterPageBreakPtrOutput values.
// You can construct a concrete instance of `TemplateSectionAfterPageBreakPtrInput` via:
//
//	        TemplateSectionAfterPageBreakArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionAfterPageBreakPtrInput interface {
	pulumi.Input

	ToTemplateSectionAfterPageBreakPtrOutput() TemplateSectionAfterPageBreakPtrOutput
	ToTemplateSectionAfterPageBreakPtrOutputWithContext(context.Context) TemplateSectionAfterPageBreakPtrOutput
}

type templateSectionAfterPageBreakPtrType TemplateSectionAfterPageBreakArgs

func TemplateSectionAfterPageBreakPtr(v *TemplateSectionAfterPageBreakArgs) TemplateSectionAfterPageBreakPtrInput {
	return (*templateSectionAfterPageBreakPtrType)(v)
}

func (*templateSectionAfterPageBreakPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionAfterPageBreak)(nil)).Elem()
}

func (i *templateSectionAfterPageBreakPtrType) ToTemplateSectionAfterPageBreakPtrOutput() TemplateSectionAfterPageBreakPtrOutput {
	return i.ToTemplateSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (i *templateSectionAfterPageBreakPtrType) ToTemplateSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionAfterPageBreakPtrOutput)
}

type TemplateSectionAfterPageBreakOutput struct{ *pulumi.OutputState }

func (TemplateSectionAfterPageBreakOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionAfterPageBreak)(nil)).Elem()
}

func (o TemplateSectionAfterPageBreakOutput) ToTemplateSectionAfterPageBreakOutput() TemplateSectionAfterPageBreakOutput {
	return o
}

func (o TemplateSectionAfterPageBreakOutput) ToTemplateSectionAfterPageBreakOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakOutput {
	return o
}

func (o TemplateSectionAfterPageBreakOutput) ToTemplateSectionAfterPageBreakPtrOutput() TemplateSectionAfterPageBreakPtrOutput {
	return o.ToTemplateSectionAfterPageBreakPtrOutputWithContext(context.Background())
}

func (o TemplateSectionAfterPageBreakOutput) ToTemplateSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionAfterPageBreak) *TemplateSectionAfterPageBreak {
		return &v
	}).(TemplateSectionAfterPageBreakPtrOutput)
}

func (o TemplateSectionAfterPageBreakOutput) Status() TemplateSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v TemplateSectionAfterPageBreak) *TemplateSectionPageBreakStatus { return v.Status }).(TemplateSectionPageBreakStatusPtrOutput)
}

type TemplateSectionAfterPageBreakPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionAfterPageBreakPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionAfterPageBreak)(nil)).Elem()
}

func (o TemplateSectionAfterPageBreakPtrOutput) ToTemplateSectionAfterPageBreakPtrOutput() TemplateSectionAfterPageBreakPtrOutput {
	return o
}

func (o TemplateSectionAfterPageBreakPtrOutput) ToTemplateSectionAfterPageBreakPtrOutputWithContext(ctx context.Context) TemplateSectionAfterPageBreakPtrOutput {
	return o
}

func (o TemplateSectionAfterPageBreakPtrOutput) Elem() TemplateSectionAfterPageBreakOutput {
	return o.ApplyT(func(v *TemplateSectionAfterPageBreak) TemplateSectionAfterPageBreak {
		if v != nil {
			return *v
		}
		var ret TemplateSectionAfterPageBreak
		return ret
	}).(TemplateSectionAfterPageBreakOutput)
}

func (o TemplateSectionAfterPageBreakPtrOutput) Status() TemplateSectionPageBreakStatusPtrOutput {
	return o.ApplyT(func(v *TemplateSectionAfterPageBreak) *TemplateSectionPageBreakStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TemplateSectionPageBreakStatusPtrOutput)
}

type TemplateSectionBasedLayoutCanvasSizeOptions struct {
	PaperCanvasSizeOptions *TemplateSectionBasedLayoutPaperCanvasSizeOptions `pulumi:"paperCanvasSizeOptions"`
}

// TemplateSectionBasedLayoutCanvasSizeOptionsInput is an input type that accepts TemplateSectionBasedLayoutCanvasSizeOptionsArgs and TemplateSectionBasedLayoutCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutCanvasSizeOptionsInput` via:
//
//	TemplateSectionBasedLayoutCanvasSizeOptionsArgs{...}
type TemplateSectionBasedLayoutCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutCanvasSizeOptionsOutput() TemplateSectionBasedLayoutCanvasSizeOptionsOutput
	ToTemplateSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsOutput
}

type TemplateSectionBasedLayoutCanvasSizeOptionsArgs struct {
	PaperCanvasSizeOptions TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput `pulumi:"paperCanvasSizeOptions"`
}

func (TemplateSectionBasedLayoutCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateSectionBasedLayoutCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutCanvasSizeOptionsOutput() TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return i.ToTemplateSectionBasedLayoutCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (i TemplateSectionBasedLayoutCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutCanvasSizeOptionsOutput).ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateSectionBasedLayoutCanvasSizeOptionsPtrInput is an input type that accepts TemplateSectionBasedLayoutCanvasSizeOptionsArgs, TemplateSectionBasedLayoutCanvasSizeOptionsPtr and TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutCanvasSizeOptionsPtrInput` via:
//
//	        TemplateSectionBasedLayoutCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionBasedLayoutCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput
	ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput
}

type templateSectionBasedLayoutCanvasSizeOptionsPtrType TemplateSectionBasedLayoutCanvasSizeOptionsArgs

func TemplateSectionBasedLayoutCanvasSizeOptionsPtr(v *TemplateSectionBasedLayoutCanvasSizeOptionsArgs) TemplateSectionBasedLayoutCanvasSizeOptionsPtrInput {
	return (*templateSectionBasedLayoutCanvasSizeOptionsPtrType)(v)
}

func (*templateSectionBasedLayoutCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (i *templateSectionBasedLayoutCanvasSizeOptionsPtrType) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return i.ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSectionBasedLayoutCanvasSizeOptionsPtrType) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

type TemplateSectionBasedLayoutCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsOutput() TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return o
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionBasedLayoutCanvasSizeOptions) *TemplateSectionBasedLayoutCanvasSizeOptions {
		return &v
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsOutput) PaperCanvasSizeOptions() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutCanvasSizeOptions) *TemplateSectionBasedLayoutPaperCanvasSizeOptions {
		return v.PaperCanvasSizeOptions
	}).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput) ToTemplateSectionBasedLayoutCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput) Elem() TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutCanvasSizeOptions) TemplateSectionBasedLayoutCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSectionBasedLayoutCanvasSizeOptions
		return ret
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput) PaperCanvasSizeOptions() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutCanvasSizeOptions) *TemplateSectionBasedLayoutPaperCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return v.PaperCanvasSizeOptions
	}).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type TemplateSectionBasedLayoutConfiguration struct {
	BodySections      []TemplateBodySectionConfiguration          `pulumi:"bodySections"`
	CanvasSizeOptions TemplateSectionBasedLayoutCanvasSizeOptions `pulumi:"canvasSizeOptions"`
	FooterSections    []TemplateHeaderFooterSectionConfiguration  `pulumi:"footerSections"`
	HeaderSections    []TemplateHeaderFooterSectionConfiguration  `pulumi:"headerSections"`
}

// TemplateSectionBasedLayoutConfigurationInput is an input type that accepts TemplateSectionBasedLayoutConfigurationArgs and TemplateSectionBasedLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutConfigurationInput` via:
//
//	TemplateSectionBasedLayoutConfigurationArgs{...}
type TemplateSectionBasedLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutConfigurationOutput() TemplateSectionBasedLayoutConfigurationOutput
	ToTemplateSectionBasedLayoutConfigurationOutputWithContext(context.Context) TemplateSectionBasedLayoutConfigurationOutput
}

type TemplateSectionBasedLayoutConfigurationArgs struct {
	BodySections      TemplateBodySectionConfigurationArrayInput         `pulumi:"bodySections"`
	CanvasSizeOptions TemplateSectionBasedLayoutCanvasSizeOptionsInput   `pulumi:"canvasSizeOptions"`
	FooterSections    TemplateHeaderFooterSectionConfigurationArrayInput `pulumi:"footerSections"`
	HeaderSections    TemplateHeaderFooterSectionConfigurationArrayInput `pulumi:"headerSections"`
}

func (TemplateSectionBasedLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i TemplateSectionBasedLayoutConfigurationArgs) ToTemplateSectionBasedLayoutConfigurationOutput() TemplateSectionBasedLayoutConfigurationOutput {
	return i.ToTemplateSectionBasedLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutConfigurationArgs) ToTemplateSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutConfigurationOutput)
}

func (i TemplateSectionBasedLayoutConfigurationArgs) ToTemplateSectionBasedLayoutConfigurationPtrOutput() TemplateSectionBasedLayoutConfigurationPtrOutput {
	return i.ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutConfigurationArgs) ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutConfigurationOutput).ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateSectionBasedLayoutConfigurationPtrInput is an input type that accepts TemplateSectionBasedLayoutConfigurationArgs, TemplateSectionBasedLayoutConfigurationPtr and TemplateSectionBasedLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutConfigurationPtrInput` via:
//
//	        TemplateSectionBasedLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionBasedLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutConfigurationPtrOutput() TemplateSectionBasedLayoutConfigurationPtrOutput
	ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(context.Context) TemplateSectionBasedLayoutConfigurationPtrOutput
}

type templateSectionBasedLayoutConfigurationPtrType TemplateSectionBasedLayoutConfigurationArgs

func TemplateSectionBasedLayoutConfigurationPtr(v *TemplateSectionBasedLayoutConfigurationArgs) TemplateSectionBasedLayoutConfigurationPtrInput {
	return (*templateSectionBasedLayoutConfigurationPtrType)(v)
}

func (*templateSectionBasedLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (i *templateSectionBasedLayoutConfigurationPtrType) ToTemplateSectionBasedLayoutConfigurationPtrOutput() TemplateSectionBasedLayoutConfigurationPtrOutput {
	return i.ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSectionBasedLayoutConfigurationPtrType) ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutConfigurationPtrOutput)
}

type TemplateSectionBasedLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutConfigurationOutput) ToTemplateSectionBasedLayoutConfigurationOutput() TemplateSectionBasedLayoutConfigurationOutput {
	return o
}

func (o TemplateSectionBasedLayoutConfigurationOutput) ToTemplateSectionBasedLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationOutput {
	return o
}

func (o TemplateSectionBasedLayoutConfigurationOutput) ToTemplateSectionBasedLayoutConfigurationPtrOutput() TemplateSectionBasedLayoutConfigurationPtrOutput {
	return o.ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSectionBasedLayoutConfigurationOutput) ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionBasedLayoutConfiguration) *TemplateSectionBasedLayoutConfiguration {
		return &v
	}).(TemplateSectionBasedLayoutConfigurationPtrOutput)
}

func (o TemplateSectionBasedLayoutConfigurationOutput) BodySections() TemplateBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutConfiguration) []TemplateBodySectionConfiguration {
		return v.BodySections
	}).(TemplateBodySectionConfigurationArrayOutput)
}

func (o TemplateSectionBasedLayoutConfigurationOutput) CanvasSizeOptions() TemplateSectionBasedLayoutCanvasSizeOptionsOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutConfiguration) TemplateSectionBasedLayoutCanvasSizeOptions {
		return v.CanvasSizeOptions
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsOutput)
}

func (o TemplateSectionBasedLayoutConfigurationOutput) FooterSections() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutConfiguration) []TemplateHeaderFooterSectionConfiguration {
		return v.FooterSections
	}).(TemplateHeaderFooterSectionConfigurationArrayOutput)
}

func (o TemplateSectionBasedLayoutConfigurationOutput) HeaderSections() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutConfiguration) []TemplateHeaderFooterSectionConfiguration {
		return v.HeaderSections
	}).(TemplateHeaderFooterSectionConfigurationArrayOutput)
}

type TemplateSectionBasedLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutConfiguration)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) ToTemplateSectionBasedLayoutConfigurationPtrOutput() TemplateSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) ToTemplateSectionBasedLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) Elem() TemplateSectionBasedLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutConfiguration) TemplateSectionBasedLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSectionBasedLayoutConfiguration
		return ret
	}).(TemplateSectionBasedLayoutConfigurationOutput)
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) BodySections() TemplateBodySectionConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutConfiguration) []TemplateBodySectionConfiguration {
		if v == nil {
			return nil
		}
		return v.BodySections
	}).(TemplateBodySectionConfigurationArrayOutput)
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) CanvasSizeOptions() TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutConfiguration) *TemplateSectionBasedLayoutCanvasSizeOptions {
		if v == nil {
			return nil
		}
		return &v.CanvasSizeOptions
	}).(TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput)
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) FooterSections() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutConfiguration) []TemplateHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.FooterSections
	}).(TemplateHeaderFooterSectionConfigurationArrayOutput)
}

func (o TemplateSectionBasedLayoutConfigurationPtrOutput) HeaderSections() TemplateHeaderFooterSectionConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutConfiguration) []TemplateHeaderFooterSectionConfiguration {
		if v == nil {
			return nil
		}
		return v.HeaderSections
	}).(TemplateHeaderFooterSectionConfigurationArrayOutput)
}

type TemplateSectionBasedLayoutPaperCanvasSizeOptions struct {
	PaperMargin      *TemplateSpacing          `pulumi:"paperMargin"`
	PaperOrientation *TemplatePaperOrientation `pulumi:"paperOrientation"`
	PaperSize        *TemplatePaperSize        `pulumi:"paperSize"`
}

// TemplateSectionBasedLayoutPaperCanvasSizeOptionsInput is an input type that accepts TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs and TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutPaperCanvasSizeOptionsInput` via:
//
//	TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
type TemplateSectionBasedLayoutPaperCanvasSizeOptionsInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput
	ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput
}

type TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs struct {
	PaperMargin      TemplateSpacingPtrInput          `pulumi:"paperMargin"`
	PaperOrientation TemplatePaperOrientationPtrInput `pulumi:"paperOrientation"`
	PaperSize        TemplatePaperSizePtrInput        `pulumi:"paperSize"`
}

func (TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return i.ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (i TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput).ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx)
}

// TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput is an input type that accepts TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs, TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtr and TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput` via:
//
//	        TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
	ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput
}

type templateSectionBasedLayoutPaperCanvasSizeOptionsPtrType TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs

func TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtr(v *TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput {
	return (*templateSectionBasedLayoutPaperCanvasSizeOptionsPtrType)(v)
}

func (*templateSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (i *templateSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return i.ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSectionBasedLayoutPaperCanvasSizeOptionsPtrType) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

type TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplateSectionBasedLayoutPaperCanvasSizeOptions {
		return &v
	}).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperMargin() TemplateSpacingPtrOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplateSpacing { return v.PaperMargin }).(TemplateSpacingPtrOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperOrientation() TemplatePaperOrientationPtrOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplatePaperOrientation {
		return v.PaperOrientation
	}).(TemplatePaperOrientationPtrOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput) PaperSize() TemplatePaperSizePtrOutput {
	return o.ApplyT(func(v TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplatePaperSize { return v.PaperSize }).(TemplatePaperSizePtrOutput)
}

type TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionBasedLayoutPaperCanvasSizeOptions)(nil)).Elem()
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput() TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) ToTemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutputWithContext(ctx context.Context) TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput {
	return o
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) Elem() TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutPaperCanvasSizeOptions) TemplateSectionBasedLayoutPaperCanvasSizeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSectionBasedLayoutPaperCanvasSizeOptions
		return ret
	}).(TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperMargin() TemplateSpacingPtrOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplateSpacing {
		if v == nil {
			return nil
		}
		return v.PaperMargin
	}).(TemplateSpacingPtrOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperOrientation() TemplatePaperOrientationPtrOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplatePaperOrientation {
		if v == nil {
			return nil
		}
		return v.PaperOrientation
	}).(TemplatePaperOrientationPtrOutput)
}

func (o TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput) PaperSize() TemplatePaperSizePtrOutput {
	return o.ApplyT(func(v *TemplateSectionBasedLayoutPaperCanvasSizeOptions) *TemplatePaperSize {
		if v == nil {
			return nil
		}
		return v.PaperSize
	}).(TemplatePaperSizePtrOutput)
}

type TemplateSectionLayoutConfiguration struct {
	FreeFormLayout TemplateFreeFormSectionLayoutConfiguration `pulumi:"freeFormLayout"`
}

// TemplateSectionLayoutConfigurationInput is an input type that accepts TemplateSectionLayoutConfigurationArgs and TemplateSectionLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateSectionLayoutConfigurationInput` via:
//
//	TemplateSectionLayoutConfigurationArgs{...}
type TemplateSectionLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateSectionLayoutConfigurationOutput() TemplateSectionLayoutConfigurationOutput
	ToTemplateSectionLayoutConfigurationOutputWithContext(context.Context) TemplateSectionLayoutConfigurationOutput
}

type TemplateSectionLayoutConfigurationArgs struct {
	FreeFormLayout TemplateFreeFormSectionLayoutConfigurationInput `pulumi:"freeFormLayout"`
}

func (TemplateSectionLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionLayoutConfiguration)(nil)).Elem()
}

func (i TemplateSectionLayoutConfigurationArgs) ToTemplateSectionLayoutConfigurationOutput() TemplateSectionLayoutConfigurationOutput {
	return i.ToTemplateSectionLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateSectionLayoutConfigurationArgs) ToTemplateSectionLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionLayoutConfigurationOutput)
}

func (i TemplateSectionLayoutConfigurationArgs) ToTemplateSectionLayoutConfigurationPtrOutput() TemplateSectionLayoutConfigurationPtrOutput {
	return i.ToTemplateSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSectionLayoutConfigurationArgs) ToTemplateSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionLayoutConfigurationOutput).ToTemplateSectionLayoutConfigurationPtrOutputWithContext(ctx)
}

// TemplateSectionLayoutConfigurationPtrInput is an input type that accepts TemplateSectionLayoutConfigurationArgs, TemplateSectionLayoutConfigurationPtr and TemplateSectionLayoutConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSectionLayoutConfigurationPtrInput` via:
//
//	        TemplateSectionLayoutConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionLayoutConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSectionLayoutConfigurationPtrOutput() TemplateSectionLayoutConfigurationPtrOutput
	ToTemplateSectionLayoutConfigurationPtrOutputWithContext(context.Context) TemplateSectionLayoutConfigurationPtrOutput
}

type templateSectionLayoutConfigurationPtrType TemplateSectionLayoutConfigurationArgs

func TemplateSectionLayoutConfigurationPtr(v *TemplateSectionLayoutConfigurationArgs) TemplateSectionLayoutConfigurationPtrInput {
	return (*templateSectionLayoutConfigurationPtrType)(v)
}

func (*templateSectionLayoutConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionLayoutConfiguration)(nil)).Elem()
}

func (i *templateSectionLayoutConfigurationPtrType) ToTemplateSectionLayoutConfigurationPtrOutput() TemplateSectionLayoutConfigurationPtrOutput {
	return i.ToTemplateSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSectionLayoutConfigurationPtrType) ToTemplateSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionLayoutConfigurationPtrOutput)
}

type TemplateSectionLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSectionLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionLayoutConfiguration)(nil)).Elem()
}

func (o TemplateSectionLayoutConfigurationOutput) ToTemplateSectionLayoutConfigurationOutput() TemplateSectionLayoutConfigurationOutput {
	return o
}

func (o TemplateSectionLayoutConfigurationOutput) ToTemplateSectionLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationOutput {
	return o
}

func (o TemplateSectionLayoutConfigurationOutput) ToTemplateSectionLayoutConfigurationPtrOutput() TemplateSectionLayoutConfigurationPtrOutput {
	return o.ToTemplateSectionLayoutConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSectionLayoutConfigurationOutput) ToTemplateSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionLayoutConfiguration) *TemplateSectionLayoutConfiguration {
		return &v
	}).(TemplateSectionLayoutConfigurationPtrOutput)
}

func (o TemplateSectionLayoutConfigurationOutput) FreeFormLayout() TemplateFreeFormSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v TemplateSectionLayoutConfiguration) TemplateFreeFormSectionLayoutConfiguration {
		return v.FreeFormLayout
	}).(TemplateFreeFormSectionLayoutConfigurationOutput)
}

type TemplateSectionLayoutConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionLayoutConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionLayoutConfiguration)(nil)).Elem()
}

func (o TemplateSectionLayoutConfigurationPtrOutput) ToTemplateSectionLayoutConfigurationPtrOutput() TemplateSectionLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateSectionLayoutConfigurationPtrOutput) ToTemplateSectionLayoutConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionLayoutConfigurationPtrOutput {
	return o
}

func (o TemplateSectionLayoutConfigurationPtrOutput) Elem() TemplateSectionLayoutConfigurationOutput {
	return o.ApplyT(func(v *TemplateSectionLayoutConfiguration) TemplateSectionLayoutConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSectionLayoutConfiguration
		return ret
	}).(TemplateSectionLayoutConfigurationOutput)
}

func (o TemplateSectionLayoutConfigurationPtrOutput) FreeFormLayout() TemplateFreeFormSectionLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSectionLayoutConfiguration) *TemplateFreeFormSectionLayoutConfiguration {
		if v == nil {
			return nil
		}
		return &v.FreeFormLayout
	}).(TemplateFreeFormSectionLayoutConfigurationPtrOutput)
}

type TemplateSectionPageBreakConfiguration struct {
	After *TemplateSectionAfterPageBreak `pulumi:"after"`
}

// TemplateSectionPageBreakConfigurationInput is an input type that accepts TemplateSectionPageBreakConfigurationArgs and TemplateSectionPageBreakConfigurationOutput values.
// You can construct a concrete instance of `TemplateSectionPageBreakConfigurationInput` via:
//
//	TemplateSectionPageBreakConfigurationArgs{...}
type TemplateSectionPageBreakConfigurationInput interface {
	pulumi.Input

	ToTemplateSectionPageBreakConfigurationOutput() TemplateSectionPageBreakConfigurationOutput
	ToTemplateSectionPageBreakConfigurationOutputWithContext(context.Context) TemplateSectionPageBreakConfigurationOutput
}

type TemplateSectionPageBreakConfigurationArgs struct {
	After TemplateSectionAfterPageBreakPtrInput `pulumi:"after"`
}

func (TemplateSectionPageBreakConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionPageBreakConfiguration)(nil)).Elem()
}

func (i TemplateSectionPageBreakConfigurationArgs) ToTemplateSectionPageBreakConfigurationOutput() TemplateSectionPageBreakConfigurationOutput {
	return i.ToTemplateSectionPageBreakConfigurationOutputWithContext(context.Background())
}

func (i TemplateSectionPageBreakConfigurationArgs) ToTemplateSectionPageBreakConfigurationOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionPageBreakConfigurationOutput)
}

func (i TemplateSectionPageBreakConfigurationArgs) ToTemplateSectionPageBreakConfigurationPtrOutput() TemplateSectionPageBreakConfigurationPtrOutput {
	return i.ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSectionPageBreakConfigurationArgs) ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionPageBreakConfigurationOutput).ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(ctx)
}

// TemplateSectionPageBreakConfigurationPtrInput is an input type that accepts TemplateSectionPageBreakConfigurationArgs, TemplateSectionPageBreakConfigurationPtr and TemplateSectionPageBreakConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSectionPageBreakConfigurationPtrInput` via:
//
//	        TemplateSectionPageBreakConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionPageBreakConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSectionPageBreakConfigurationPtrOutput() TemplateSectionPageBreakConfigurationPtrOutput
	ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(context.Context) TemplateSectionPageBreakConfigurationPtrOutput
}

type templateSectionPageBreakConfigurationPtrType TemplateSectionPageBreakConfigurationArgs

func TemplateSectionPageBreakConfigurationPtr(v *TemplateSectionPageBreakConfigurationArgs) TemplateSectionPageBreakConfigurationPtrInput {
	return (*templateSectionPageBreakConfigurationPtrType)(v)
}

func (*templateSectionPageBreakConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionPageBreakConfiguration)(nil)).Elem()
}

func (i *templateSectionPageBreakConfigurationPtrType) ToTemplateSectionPageBreakConfigurationPtrOutput() TemplateSectionPageBreakConfigurationPtrOutput {
	return i.ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSectionPageBreakConfigurationPtrType) ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionPageBreakConfigurationPtrOutput)
}

type TemplateSectionPageBreakConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSectionPageBreakConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionPageBreakConfiguration)(nil)).Elem()
}

func (o TemplateSectionPageBreakConfigurationOutput) ToTemplateSectionPageBreakConfigurationOutput() TemplateSectionPageBreakConfigurationOutput {
	return o
}

func (o TemplateSectionPageBreakConfigurationOutput) ToTemplateSectionPageBreakConfigurationOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationOutput {
	return o
}

func (o TemplateSectionPageBreakConfigurationOutput) ToTemplateSectionPageBreakConfigurationPtrOutput() TemplateSectionPageBreakConfigurationPtrOutput {
	return o.ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSectionPageBreakConfigurationOutput) ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionPageBreakConfiguration) *TemplateSectionPageBreakConfiguration {
		return &v
	}).(TemplateSectionPageBreakConfigurationPtrOutput)
}

func (o TemplateSectionPageBreakConfigurationOutput) After() TemplateSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v TemplateSectionPageBreakConfiguration) *TemplateSectionAfterPageBreak { return v.After }).(TemplateSectionAfterPageBreakPtrOutput)
}

type TemplateSectionPageBreakConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionPageBreakConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionPageBreakConfiguration)(nil)).Elem()
}

func (o TemplateSectionPageBreakConfigurationPtrOutput) ToTemplateSectionPageBreakConfigurationPtrOutput() TemplateSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o TemplateSectionPageBreakConfigurationPtrOutput) ToTemplateSectionPageBreakConfigurationPtrOutputWithContext(ctx context.Context) TemplateSectionPageBreakConfigurationPtrOutput {
	return o
}

func (o TemplateSectionPageBreakConfigurationPtrOutput) Elem() TemplateSectionPageBreakConfigurationOutput {
	return o.ApplyT(func(v *TemplateSectionPageBreakConfiguration) TemplateSectionPageBreakConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSectionPageBreakConfiguration
		return ret
	}).(TemplateSectionPageBreakConfigurationOutput)
}

func (o TemplateSectionPageBreakConfigurationPtrOutput) After() TemplateSectionAfterPageBreakPtrOutput {
	return o.ApplyT(func(v *TemplateSectionPageBreakConfiguration) *TemplateSectionAfterPageBreak {
		if v == nil {
			return nil
		}
		return v.After
	}).(TemplateSectionAfterPageBreakPtrOutput)
}

type TemplateSectionStyle struct {
	// String based length that is composed of value and unit in px
	Height  *string          `pulumi:"height"`
	Padding *TemplateSpacing `pulumi:"padding"`
}

// TemplateSectionStyleInput is an input type that accepts TemplateSectionStyleArgs and TemplateSectionStyleOutput values.
// You can construct a concrete instance of `TemplateSectionStyleInput` via:
//
//	TemplateSectionStyleArgs{...}
type TemplateSectionStyleInput interface {
	pulumi.Input

	ToTemplateSectionStyleOutput() TemplateSectionStyleOutput
	ToTemplateSectionStyleOutputWithContext(context.Context) TemplateSectionStyleOutput
}

type TemplateSectionStyleArgs struct {
	// String based length that is composed of value and unit in px
	Height  pulumi.StringPtrInput   `pulumi:"height"`
	Padding TemplateSpacingPtrInput `pulumi:"padding"`
}

func (TemplateSectionStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionStyle)(nil)).Elem()
}

func (i TemplateSectionStyleArgs) ToTemplateSectionStyleOutput() TemplateSectionStyleOutput {
	return i.ToTemplateSectionStyleOutputWithContext(context.Background())
}

func (i TemplateSectionStyleArgs) ToTemplateSectionStyleOutputWithContext(ctx context.Context) TemplateSectionStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionStyleOutput)
}

func (i TemplateSectionStyleArgs) ToTemplateSectionStylePtrOutput() TemplateSectionStylePtrOutput {
	return i.ToTemplateSectionStylePtrOutputWithContext(context.Background())
}

func (i TemplateSectionStyleArgs) ToTemplateSectionStylePtrOutputWithContext(ctx context.Context) TemplateSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionStyleOutput).ToTemplateSectionStylePtrOutputWithContext(ctx)
}

// TemplateSectionStylePtrInput is an input type that accepts TemplateSectionStyleArgs, TemplateSectionStylePtr and TemplateSectionStylePtrOutput values.
// You can construct a concrete instance of `TemplateSectionStylePtrInput` via:
//
//	        TemplateSectionStyleArgs{...}
//
//	or:
//
//	        nil
type TemplateSectionStylePtrInput interface {
	pulumi.Input

	ToTemplateSectionStylePtrOutput() TemplateSectionStylePtrOutput
	ToTemplateSectionStylePtrOutputWithContext(context.Context) TemplateSectionStylePtrOutput
}

type templateSectionStylePtrType TemplateSectionStyleArgs

func TemplateSectionStylePtr(v *TemplateSectionStyleArgs) TemplateSectionStylePtrInput {
	return (*templateSectionStylePtrType)(v)
}

func (*templateSectionStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionStyle)(nil)).Elem()
}

func (i *templateSectionStylePtrType) ToTemplateSectionStylePtrOutput() TemplateSectionStylePtrOutput {
	return i.ToTemplateSectionStylePtrOutputWithContext(context.Background())
}

func (i *templateSectionStylePtrType) ToTemplateSectionStylePtrOutputWithContext(ctx context.Context) TemplateSectionStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSectionStylePtrOutput)
}

type TemplateSectionStyleOutput struct{ *pulumi.OutputState }

func (TemplateSectionStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSectionStyle)(nil)).Elem()
}

func (o TemplateSectionStyleOutput) ToTemplateSectionStyleOutput() TemplateSectionStyleOutput {
	return o
}

func (o TemplateSectionStyleOutput) ToTemplateSectionStyleOutputWithContext(ctx context.Context) TemplateSectionStyleOutput {
	return o
}

func (o TemplateSectionStyleOutput) ToTemplateSectionStylePtrOutput() TemplateSectionStylePtrOutput {
	return o.ToTemplateSectionStylePtrOutputWithContext(context.Background())
}

func (o TemplateSectionStyleOutput) ToTemplateSectionStylePtrOutputWithContext(ctx context.Context) TemplateSectionStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSectionStyle) *TemplateSectionStyle {
		return &v
	}).(TemplateSectionStylePtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateSectionStyleOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSectionStyle) *string { return v.Height }).(pulumi.StringPtrOutput)
}

func (o TemplateSectionStyleOutput) Padding() TemplateSpacingPtrOutput {
	return o.ApplyT(func(v TemplateSectionStyle) *TemplateSpacing { return v.Padding }).(TemplateSpacingPtrOutput)
}

type TemplateSectionStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateSectionStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSectionStyle)(nil)).Elem()
}

func (o TemplateSectionStylePtrOutput) ToTemplateSectionStylePtrOutput() TemplateSectionStylePtrOutput {
	return o
}

func (o TemplateSectionStylePtrOutput) ToTemplateSectionStylePtrOutputWithContext(ctx context.Context) TemplateSectionStylePtrOutput {
	return o
}

func (o TemplateSectionStylePtrOutput) Elem() TemplateSectionStyleOutput {
	return o.ApplyT(func(v *TemplateSectionStyle) TemplateSectionStyle {
		if v != nil {
			return *v
		}
		var ret TemplateSectionStyle
		return ret
	}).(TemplateSectionStyleOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateSectionStylePtrOutput) Height() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSectionStyle) *string {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.StringPtrOutput)
}

func (o TemplateSectionStylePtrOutput) Padding() TemplateSpacingPtrOutput {
	return o.ApplyT(func(v *TemplateSectionStyle) *TemplateSpacing {
		if v == nil {
			return nil
		}
		return v.Padding
	}).(TemplateSpacingPtrOutput)
}

type TemplateSelectedSheetsFilterScopeConfiguration struct {
	SheetVisualScopingConfigurations []TemplateSheetVisualScopingConfiguration `pulumi:"sheetVisualScopingConfigurations"`
}

// TemplateSelectedSheetsFilterScopeConfigurationInput is an input type that accepts TemplateSelectedSheetsFilterScopeConfigurationArgs and TemplateSelectedSheetsFilterScopeConfigurationOutput values.
// You can construct a concrete instance of `TemplateSelectedSheetsFilterScopeConfigurationInput` via:
//
//	TemplateSelectedSheetsFilterScopeConfigurationArgs{...}
type TemplateSelectedSheetsFilterScopeConfigurationInput interface {
	pulumi.Input

	ToTemplateSelectedSheetsFilterScopeConfigurationOutput() TemplateSelectedSheetsFilterScopeConfigurationOutput
	ToTemplateSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Context) TemplateSelectedSheetsFilterScopeConfigurationOutput
}

type TemplateSelectedSheetsFilterScopeConfigurationArgs struct {
	SheetVisualScopingConfigurations TemplateSheetVisualScopingConfigurationArrayInput `pulumi:"sheetVisualScopingConfigurations"`
}

func (TemplateSelectedSheetsFilterScopeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i TemplateSelectedSheetsFilterScopeConfigurationArgs) ToTemplateSelectedSheetsFilterScopeConfigurationOutput() TemplateSelectedSheetsFilterScopeConfigurationOutput {
	return i.ToTemplateSelectedSheetsFilterScopeConfigurationOutputWithContext(context.Background())
}

func (i TemplateSelectedSheetsFilterScopeConfigurationArgs) ToTemplateSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSelectedSheetsFilterScopeConfigurationOutput)
}

func (i TemplateSelectedSheetsFilterScopeConfigurationArgs) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutput() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateSelectedSheetsFilterScopeConfigurationArgs) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSelectedSheetsFilterScopeConfigurationOutput).ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx)
}

// TemplateSelectedSheetsFilterScopeConfigurationPtrInput is an input type that accepts TemplateSelectedSheetsFilterScopeConfigurationArgs, TemplateSelectedSheetsFilterScopeConfigurationPtr and TemplateSelectedSheetsFilterScopeConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateSelectedSheetsFilterScopeConfigurationPtrInput` via:
//
//	        TemplateSelectedSheetsFilterScopeConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateSelectedSheetsFilterScopeConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutput() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput
	ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Context) TemplateSelectedSheetsFilterScopeConfigurationPtrOutput
}

type templateSelectedSheetsFilterScopeConfigurationPtrType TemplateSelectedSheetsFilterScopeConfigurationArgs

func TemplateSelectedSheetsFilterScopeConfigurationPtr(v *TemplateSelectedSheetsFilterScopeConfigurationArgs) TemplateSelectedSheetsFilterScopeConfigurationPtrInput {
	return (*templateSelectedSheetsFilterScopeConfigurationPtrType)(v)
}

func (*templateSelectedSheetsFilterScopeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (i *templateSelectedSheetsFilterScopeConfigurationPtrType) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutput() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return i.ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateSelectedSheetsFilterScopeConfigurationPtrType) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSelectedSheetsFilterScopeConfigurationPtrOutput)
}

type TemplateSelectedSheetsFilterScopeConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSelectedSheetsFilterScopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o TemplateSelectedSheetsFilterScopeConfigurationOutput) ToTemplateSelectedSheetsFilterScopeConfigurationOutput() TemplateSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o TemplateSelectedSheetsFilterScopeConfigurationOutput) ToTemplateSelectedSheetsFilterScopeConfigurationOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationOutput {
	return o
}

func (o TemplateSelectedSheetsFilterScopeConfigurationOutput) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutput() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateSelectedSheetsFilterScopeConfigurationOutput) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSelectedSheetsFilterScopeConfiguration) *TemplateSelectedSheetsFilterScopeConfiguration {
		return &v
	}).(TemplateSelectedSheetsFilterScopeConfigurationPtrOutput)
}

func (o TemplateSelectedSheetsFilterScopeConfigurationOutput) SheetVisualScopingConfigurations() TemplateSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateSelectedSheetsFilterScopeConfiguration) []TemplateSheetVisualScopingConfiguration {
		return v.SheetVisualScopingConfigurations
	}).(TemplateSheetVisualScopingConfigurationArrayOutput)
}

type TemplateSelectedSheetsFilterScopeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateSelectedSheetsFilterScopeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSelectedSheetsFilterScopeConfiguration)(nil)).Elem()
}

func (o TemplateSelectedSheetsFilterScopeConfigurationPtrOutput) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutput() TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o TemplateSelectedSheetsFilterScopeConfigurationPtrOutput) ToTemplateSelectedSheetsFilterScopeConfigurationPtrOutputWithContext(ctx context.Context) TemplateSelectedSheetsFilterScopeConfigurationPtrOutput {
	return o
}

func (o TemplateSelectedSheetsFilterScopeConfigurationPtrOutput) Elem() TemplateSelectedSheetsFilterScopeConfigurationOutput {
	return o.ApplyT(func(v *TemplateSelectedSheetsFilterScopeConfiguration) TemplateSelectedSheetsFilterScopeConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateSelectedSheetsFilterScopeConfiguration
		return ret
	}).(TemplateSelectedSheetsFilterScopeConfigurationOutput)
}

func (o TemplateSelectedSheetsFilterScopeConfigurationPtrOutput) SheetVisualScopingConfigurations() TemplateSheetVisualScopingConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateSelectedSheetsFilterScopeConfiguration) []TemplateSheetVisualScopingConfiguration {
		if v == nil {
			return nil
		}
		return v.SheetVisualScopingConfigurations
	}).(TemplateSheetVisualScopingConfigurationArrayOutput)
}

type TemplateSeriesItem struct {
	DataFieldSeriesItem *TemplateDataFieldSeriesItem `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     *TemplateFieldSeriesItem     `pulumi:"fieldSeriesItem"`
}

// TemplateSeriesItemInput is an input type that accepts TemplateSeriesItemArgs and TemplateSeriesItemOutput values.
// You can construct a concrete instance of `TemplateSeriesItemInput` via:
//
//	TemplateSeriesItemArgs{...}
type TemplateSeriesItemInput interface {
	pulumi.Input

	ToTemplateSeriesItemOutput() TemplateSeriesItemOutput
	ToTemplateSeriesItemOutputWithContext(context.Context) TemplateSeriesItemOutput
}

type TemplateSeriesItemArgs struct {
	DataFieldSeriesItem TemplateDataFieldSeriesItemPtrInput `pulumi:"dataFieldSeriesItem"`
	FieldSeriesItem     TemplateFieldSeriesItemPtrInput     `pulumi:"fieldSeriesItem"`
}

func (TemplateSeriesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSeriesItem)(nil)).Elem()
}

func (i TemplateSeriesItemArgs) ToTemplateSeriesItemOutput() TemplateSeriesItemOutput {
	return i.ToTemplateSeriesItemOutputWithContext(context.Background())
}

func (i TemplateSeriesItemArgs) ToTemplateSeriesItemOutputWithContext(ctx context.Context) TemplateSeriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSeriesItemOutput)
}

// TemplateSeriesItemArrayInput is an input type that accepts TemplateSeriesItemArray and TemplateSeriesItemArrayOutput values.
// You can construct a concrete instance of `TemplateSeriesItemArrayInput` via:
//
//	TemplateSeriesItemArray{ TemplateSeriesItemArgs{...} }
type TemplateSeriesItemArrayInput interface {
	pulumi.Input

	ToTemplateSeriesItemArrayOutput() TemplateSeriesItemArrayOutput
	ToTemplateSeriesItemArrayOutputWithContext(context.Context) TemplateSeriesItemArrayOutput
}

type TemplateSeriesItemArray []TemplateSeriesItemInput

func (TemplateSeriesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSeriesItem)(nil)).Elem()
}

func (i TemplateSeriesItemArray) ToTemplateSeriesItemArrayOutput() TemplateSeriesItemArrayOutput {
	return i.ToTemplateSeriesItemArrayOutputWithContext(context.Background())
}

func (i TemplateSeriesItemArray) ToTemplateSeriesItemArrayOutputWithContext(ctx context.Context) TemplateSeriesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSeriesItemArrayOutput)
}

type TemplateSeriesItemOutput struct{ *pulumi.OutputState }

func (TemplateSeriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSeriesItem)(nil)).Elem()
}

func (o TemplateSeriesItemOutput) ToTemplateSeriesItemOutput() TemplateSeriesItemOutput {
	return o
}

func (o TemplateSeriesItemOutput) ToTemplateSeriesItemOutputWithContext(ctx context.Context) TemplateSeriesItemOutput {
	return o
}

func (o TemplateSeriesItemOutput) DataFieldSeriesItem() TemplateDataFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v TemplateSeriesItem) *TemplateDataFieldSeriesItem { return v.DataFieldSeriesItem }).(TemplateDataFieldSeriesItemPtrOutput)
}

func (o TemplateSeriesItemOutput) FieldSeriesItem() TemplateFieldSeriesItemPtrOutput {
	return o.ApplyT(func(v TemplateSeriesItem) *TemplateFieldSeriesItem { return v.FieldSeriesItem }).(TemplateFieldSeriesItemPtrOutput)
}

type TemplateSeriesItemArrayOutput struct{ *pulumi.OutputState }

func (TemplateSeriesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSeriesItem)(nil)).Elem()
}

func (o TemplateSeriesItemArrayOutput) ToTemplateSeriesItemArrayOutput() TemplateSeriesItemArrayOutput {
	return o
}

func (o TemplateSeriesItemArrayOutput) ToTemplateSeriesItemArrayOutputWithContext(ctx context.Context) TemplateSeriesItemArrayOutput {
	return o
}

func (o TemplateSeriesItemArrayOutput) Index(i pulumi.IntInput) TemplateSeriesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSeriesItem {
		return vs[0].([]TemplateSeriesItem)[vs[1].(int)]
	}).(TemplateSeriesItemOutput)
}

type TemplateSetParameterValueConfiguration struct {
	DestinationParameterName string                                         `pulumi:"destinationParameterName"`
	Value                    TemplateDestinationParameterValueConfiguration `pulumi:"value"`
}

// TemplateSetParameterValueConfigurationInput is an input type that accepts TemplateSetParameterValueConfigurationArgs and TemplateSetParameterValueConfigurationOutput values.
// You can construct a concrete instance of `TemplateSetParameterValueConfigurationInput` via:
//
//	TemplateSetParameterValueConfigurationArgs{...}
type TemplateSetParameterValueConfigurationInput interface {
	pulumi.Input

	ToTemplateSetParameterValueConfigurationOutput() TemplateSetParameterValueConfigurationOutput
	ToTemplateSetParameterValueConfigurationOutputWithContext(context.Context) TemplateSetParameterValueConfigurationOutput
}

type TemplateSetParameterValueConfigurationArgs struct {
	DestinationParameterName pulumi.StringInput                                  `pulumi:"destinationParameterName"`
	Value                    TemplateDestinationParameterValueConfigurationInput `pulumi:"value"`
}

func (TemplateSetParameterValueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSetParameterValueConfiguration)(nil)).Elem()
}

func (i TemplateSetParameterValueConfigurationArgs) ToTemplateSetParameterValueConfigurationOutput() TemplateSetParameterValueConfigurationOutput {
	return i.ToTemplateSetParameterValueConfigurationOutputWithContext(context.Background())
}

func (i TemplateSetParameterValueConfigurationArgs) ToTemplateSetParameterValueConfigurationOutputWithContext(ctx context.Context) TemplateSetParameterValueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSetParameterValueConfigurationOutput)
}

// TemplateSetParameterValueConfigurationArrayInput is an input type that accepts TemplateSetParameterValueConfigurationArray and TemplateSetParameterValueConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateSetParameterValueConfigurationArrayInput` via:
//
//	TemplateSetParameterValueConfigurationArray{ TemplateSetParameterValueConfigurationArgs{...} }
type TemplateSetParameterValueConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateSetParameterValueConfigurationArrayOutput() TemplateSetParameterValueConfigurationArrayOutput
	ToTemplateSetParameterValueConfigurationArrayOutputWithContext(context.Context) TemplateSetParameterValueConfigurationArrayOutput
}

type TemplateSetParameterValueConfigurationArray []TemplateSetParameterValueConfigurationInput

func (TemplateSetParameterValueConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSetParameterValueConfiguration)(nil)).Elem()
}

func (i TemplateSetParameterValueConfigurationArray) ToTemplateSetParameterValueConfigurationArrayOutput() TemplateSetParameterValueConfigurationArrayOutput {
	return i.ToTemplateSetParameterValueConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateSetParameterValueConfigurationArray) ToTemplateSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) TemplateSetParameterValueConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSetParameterValueConfigurationArrayOutput)
}

type TemplateSetParameterValueConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSetParameterValueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSetParameterValueConfiguration)(nil)).Elem()
}

func (o TemplateSetParameterValueConfigurationOutput) ToTemplateSetParameterValueConfigurationOutput() TemplateSetParameterValueConfigurationOutput {
	return o
}

func (o TemplateSetParameterValueConfigurationOutput) ToTemplateSetParameterValueConfigurationOutputWithContext(ctx context.Context) TemplateSetParameterValueConfigurationOutput {
	return o
}

func (o TemplateSetParameterValueConfigurationOutput) DestinationParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSetParameterValueConfiguration) string { return v.DestinationParameterName }).(pulumi.StringOutput)
}

func (o TemplateSetParameterValueConfigurationOutput) Value() TemplateDestinationParameterValueConfigurationOutput {
	return o.ApplyT(func(v TemplateSetParameterValueConfiguration) TemplateDestinationParameterValueConfiguration {
		return v.Value
	}).(TemplateDestinationParameterValueConfigurationOutput)
}

type TemplateSetParameterValueConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateSetParameterValueConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSetParameterValueConfiguration)(nil)).Elem()
}

func (o TemplateSetParameterValueConfigurationArrayOutput) ToTemplateSetParameterValueConfigurationArrayOutput() TemplateSetParameterValueConfigurationArrayOutput {
	return o
}

func (o TemplateSetParameterValueConfigurationArrayOutput) ToTemplateSetParameterValueConfigurationArrayOutputWithContext(ctx context.Context) TemplateSetParameterValueConfigurationArrayOutput {
	return o
}

func (o TemplateSetParameterValueConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateSetParameterValueConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSetParameterValueConfiguration {
		return vs[0].([]TemplateSetParameterValueConfiguration)[vs[1].(int)]
	}).(TemplateSetParameterValueConfigurationOutput)
}

type TemplateShapeConditionalFormat struct {
	BackgroundColor TemplateConditionalFormattingColor `pulumi:"backgroundColor"`
}

// TemplateShapeConditionalFormatInput is an input type that accepts TemplateShapeConditionalFormatArgs and TemplateShapeConditionalFormatOutput values.
// You can construct a concrete instance of `TemplateShapeConditionalFormatInput` via:
//
//	TemplateShapeConditionalFormatArgs{...}
type TemplateShapeConditionalFormatInput interface {
	pulumi.Input

	ToTemplateShapeConditionalFormatOutput() TemplateShapeConditionalFormatOutput
	ToTemplateShapeConditionalFormatOutputWithContext(context.Context) TemplateShapeConditionalFormatOutput
}

type TemplateShapeConditionalFormatArgs struct {
	BackgroundColor TemplateConditionalFormattingColorInput `pulumi:"backgroundColor"`
}

func (TemplateShapeConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateShapeConditionalFormat)(nil)).Elem()
}

func (i TemplateShapeConditionalFormatArgs) ToTemplateShapeConditionalFormatOutput() TemplateShapeConditionalFormatOutput {
	return i.ToTemplateShapeConditionalFormatOutputWithContext(context.Background())
}

func (i TemplateShapeConditionalFormatArgs) ToTemplateShapeConditionalFormatOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShapeConditionalFormatOutput)
}

func (i TemplateShapeConditionalFormatArgs) ToTemplateShapeConditionalFormatPtrOutput() TemplateShapeConditionalFormatPtrOutput {
	return i.ToTemplateShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i TemplateShapeConditionalFormatArgs) ToTemplateShapeConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShapeConditionalFormatOutput).ToTemplateShapeConditionalFormatPtrOutputWithContext(ctx)
}

// TemplateShapeConditionalFormatPtrInput is an input type that accepts TemplateShapeConditionalFormatArgs, TemplateShapeConditionalFormatPtr and TemplateShapeConditionalFormatPtrOutput values.
// You can construct a concrete instance of `TemplateShapeConditionalFormatPtrInput` via:
//
//	        TemplateShapeConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type TemplateShapeConditionalFormatPtrInput interface {
	pulumi.Input

	ToTemplateShapeConditionalFormatPtrOutput() TemplateShapeConditionalFormatPtrOutput
	ToTemplateShapeConditionalFormatPtrOutputWithContext(context.Context) TemplateShapeConditionalFormatPtrOutput
}

type templateShapeConditionalFormatPtrType TemplateShapeConditionalFormatArgs

func TemplateShapeConditionalFormatPtr(v *TemplateShapeConditionalFormatArgs) TemplateShapeConditionalFormatPtrInput {
	return (*templateShapeConditionalFormatPtrType)(v)
}

func (*templateShapeConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateShapeConditionalFormat)(nil)).Elem()
}

func (i *templateShapeConditionalFormatPtrType) ToTemplateShapeConditionalFormatPtrOutput() TemplateShapeConditionalFormatPtrOutput {
	return i.ToTemplateShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *templateShapeConditionalFormatPtrType) ToTemplateShapeConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShapeConditionalFormatPtrOutput)
}

type TemplateShapeConditionalFormatOutput struct{ *pulumi.OutputState }

func (TemplateShapeConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateShapeConditionalFormat)(nil)).Elem()
}

func (o TemplateShapeConditionalFormatOutput) ToTemplateShapeConditionalFormatOutput() TemplateShapeConditionalFormatOutput {
	return o
}

func (o TemplateShapeConditionalFormatOutput) ToTemplateShapeConditionalFormatOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatOutput {
	return o
}

func (o TemplateShapeConditionalFormatOutput) ToTemplateShapeConditionalFormatPtrOutput() TemplateShapeConditionalFormatPtrOutput {
	return o.ToTemplateShapeConditionalFormatPtrOutputWithContext(context.Background())
}

func (o TemplateShapeConditionalFormatOutput) ToTemplateShapeConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateShapeConditionalFormat) *TemplateShapeConditionalFormat {
		return &v
	}).(TemplateShapeConditionalFormatPtrOutput)
}

func (o TemplateShapeConditionalFormatOutput) BackgroundColor() TemplateConditionalFormattingColorOutput {
	return o.ApplyT(func(v TemplateShapeConditionalFormat) TemplateConditionalFormattingColor { return v.BackgroundColor }).(TemplateConditionalFormattingColorOutput)
}

type TemplateShapeConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (TemplateShapeConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateShapeConditionalFormat)(nil)).Elem()
}

func (o TemplateShapeConditionalFormatPtrOutput) ToTemplateShapeConditionalFormatPtrOutput() TemplateShapeConditionalFormatPtrOutput {
	return o
}

func (o TemplateShapeConditionalFormatPtrOutput) ToTemplateShapeConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateShapeConditionalFormatPtrOutput {
	return o
}

func (o TemplateShapeConditionalFormatPtrOutput) Elem() TemplateShapeConditionalFormatOutput {
	return o.ApplyT(func(v *TemplateShapeConditionalFormat) TemplateShapeConditionalFormat {
		if v != nil {
			return *v
		}
		var ret TemplateShapeConditionalFormat
		return ret
	}).(TemplateShapeConditionalFormatOutput)
}

func (o TemplateShapeConditionalFormatPtrOutput) BackgroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateShapeConditionalFormat) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return &v.BackgroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateSheet struct {
	Name    *string `pulumi:"name"`
	SheetId *string `pulumi:"sheetId"`
}

type TemplateSheetOutput struct{ *pulumi.OutputState }

func (TemplateSheetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheet)(nil)).Elem()
}

func (o TemplateSheetOutput) ToTemplateSheetOutput() TemplateSheetOutput {
	return o
}

func (o TemplateSheetOutput) ToTemplateSheetOutputWithContext(ctx context.Context) TemplateSheetOutput {
	return o
}

func (o TemplateSheetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetOutput) SheetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheet) *string { return v.SheetId }).(pulumi.StringPtrOutput)
}

type TemplateSheetArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheet)(nil)).Elem()
}

func (o TemplateSheetArrayOutput) ToTemplateSheetArrayOutput() TemplateSheetArrayOutput {
	return o
}

func (o TemplateSheetArrayOutput) ToTemplateSheetArrayOutputWithContext(ctx context.Context) TemplateSheetArrayOutput {
	return o
}

func (o TemplateSheetArrayOutput) Index(i pulumi.IntInput) TemplateSheetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheet {
		return vs[0].([]TemplateSheet)[vs[1].(int)]
	}).(TemplateSheetOutput)
}

type TemplateSheetControlInfoIconLabelOptions struct {
	InfoIconText *string             `pulumi:"infoIconText"`
	Visibility   *TemplateVisibility `pulumi:"visibility"`
}

// TemplateSheetControlInfoIconLabelOptionsInput is an input type that accepts TemplateSheetControlInfoIconLabelOptionsArgs and TemplateSheetControlInfoIconLabelOptionsOutput values.
// You can construct a concrete instance of `TemplateSheetControlInfoIconLabelOptionsInput` via:
//
//	TemplateSheetControlInfoIconLabelOptionsArgs{...}
type TemplateSheetControlInfoIconLabelOptionsInput interface {
	pulumi.Input

	ToTemplateSheetControlInfoIconLabelOptionsOutput() TemplateSheetControlInfoIconLabelOptionsOutput
	ToTemplateSheetControlInfoIconLabelOptionsOutputWithContext(context.Context) TemplateSheetControlInfoIconLabelOptionsOutput
}

type TemplateSheetControlInfoIconLabelOptionsArgs struct {
	InfoIconText pulumi.StringPtrInput      `pulumi:"infoIconText"`
	Visibility   TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateSheetControlInfoIconLabelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlInfoIconLabelOptions)(nil)).Elem()
}

func (i TemplateSheetControlInfoIconLabelOptionsArgs) ToTemplateSheetControlInfoIconLabelOptionsOutput() TemplateSheetControlInfoIconLabelOptionsOutput {
	return i.ToTemplateSheetControlInfoIconLabelOptionsOutputWithContext(context.Background())
}

func (i TemplateSheetControlInfoIconLabelOptionsArgs) ToTemplateSheetControlInfoIconLabelOptionsOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlInfoIconLabelOptionsOutput)
}

func (i TemplateSheetControlInfoIconLabelOptionsArgs) ToTemplateSheetControlInfoIconLabelOptionsPtrOutput() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return i.ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSheetControlInfoIconLabelOptionsArgs) ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlInfoIconLabelOptionsOutput).ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(ctx)
}

// TemplateSheetControlInfoIconLabelOptionsPtrInput is an input type that accepts TemplateSheetControlInfoIconLabelOptionsArgs, TemplateSheetControlInfoIconLabelOptionsPtr and TemplateSheetControlInfoIconLabelOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSheetControlInfoIconLabelOptionsPtrInput` via:
//
//	        TemplateSheetControlInfoIconLabelOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSheetControlInfoIconLabelOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSheetControlInfoIconLabelOptionsPtrOutput() TemplateSheetControlInfoIconLabelOptionsPtrOutput
	ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(context.Context) TemplateSheetControlInfoIconLabelOptionsPtrOutput
}

type templateSheetControlInfoIconLabelOptionsPtrType TemplateSheetControlInfoIconLabelOptionsArgs

func TemplateSheetControlInfoIconLabelOptionsPtr(v *TemplateSheetControlInfoIconLabelOptionsArgs) TemplateSheetControlInfoIconLabelOptionsPtrInput {
	return (*templateSheetControlInfoIconLabelOptionsPtrType)(v)
}

func (*templateSheetControlInfoIconLabelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetControlInfoIconLabelOptions)(nil)).Elem()
}

func (i *templateSheetControlInfoIconLabelOptionsPtrType) ToTemplateSheetControlInfoIconLabelOptionsPtrOutput() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return i.ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSheetControlInfoIconLabelOptionsPtrType) ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

type TemplateSheetControlInfoIconLabelOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlInfoIconLabelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlInfoIconLabelOptions)(nil)).Elem()
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) ToTemplateSheetControlInfoIconLabelOptionsOutput() TemplateSheetControlInfoIconLabelOptionsOutput {
	return o
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) ToTemplateSheetControlInfoIconLabelOptionsOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsOutput {
	return o
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) ToTemplateSheetControlInfoIconLabelOptionsPtrOutput() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSheetControlInfoIconLabelOptions) *TemplateSheetControlInfoIconLabelOptions {
		return &v
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) InfoIconText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheetControlInfoIconLabelOptions) *string { return v.InfoIconText }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetControlInfoIconLabelOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateSheetControlInfoIconLabelOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateSheetControlInfoIconLabelOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlInfoIconLabelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSheetControlInfoIconLabelOptions)(nil)).Elem()
}

func (o TemplateSheetControlInfoIconLabelOptionsPtrOutput) ToTemplateSheetControlInfoIconLabelOptionsPtrOutput() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o
}

func (o TemplateSheetControlInfoIconLabelOptionsPtrOutput) ToTemplateSheetControlInfoIconLabelOptionsPtrOutputWithContext(ctx context.Context) TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o
}

func (o TemplateSheetControlInfoIconLabelOptionsPtrOutput) Elem() TemplateSheetControlInfoIconLabelOptionsOutput {
	return o.ApplyT(func(v *TemplateSheetControlInfoIconLabelOptions) TemplateSheetControlInfoIconLabelOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSheetControlInfoIconLabelOptions
		return ret
	}).(TemplateSheetControlInfoIconLabelOptionsOutput)
}

func (o TemplateSheetControlInfoIconLabelOptionsPtrOutput) InfoIconText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSheetControlInfoIconLabelOptions) *string {
		if v == nil {
			return nil
		}
		return v.InfoIconText
	}).(pulumi.StringPtrOutput)
}

func (o TemplateSheetControlInfoIconLabelOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateSheetControlInfoIconLabelOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateSheetControlLayout struct {
	Configuration TemplateSheetControlLayoutConfiguration `pulumi:"configuration"`
}

// TemplateSheetControlLayoutInput is an input type that accepts TemplateSheetControlLayoutArgs and TemplateSheetControlLayoutOutput values.
// You can construct a concrete instance of `TemplateSheetControlLayoutInput` via:
//
//	TemplateSheetControlLayoutArgs{...}
type TemplateSheetControlLayoutInput interface {
	pulumi.Input

	ToTemplateSheetControlLayoutOutput() TemplateSheetControlLayoutOutput
	ToTemplateSheetControlLayoutOutputWithContext(context.Context) TemplateSheetControlLayoutOutput
}

type TemplateSheetControlLayoutArgs struct {
	Configuration TemplateSheetControlLayoutConfigurationInput `pulumi:"configuration"`
}

func (TemplateSheetControlLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlLayout)(nil)).Elem()
}

func (i TemplateSheetControlLayoutArgs) ToTemplateSheetControlLayoutOutput() TemplateSheetControlLayoutOutput {
	return i.ToTemplateSheetControlLayoutOutputWithContext(context.Background())
}

func (i TemplateSheetControlLayoutArgs) ToTemplateSheetControlLayoutOutputWithContext(ctx context.Context) TemplateSheetControlLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlLayoutOutput)
}

// TemplateSheetControlLayoutArrayInput is an input type that accepts TemplateSheetControlLayoutArray and TemplateSheetControlLayoutArrayOutput values.
// You can construct a concrete instance of `TemplateSheetControlLayoutArrayInput` via:
//
//	TemplateSheetControlLayoutArray{ TemplateSheetControlLayoutArgs{...} }
type TemplateSheetControlLayoutArrayInput interface {
	pulumi.Input

	ToTemplateSheetControlLayoutArrayOutput() TemplateSheetControlLayoutArrayOutput
	ToTemplateSheetControlLayoutArrayOutputWithContext(context.Context) TemplateSheetControlLayoutArrayOutput
}

type TemplateSheetControlLayoutArray []TemplateSheetControlLayoutInput

func (TemplateSheetControlLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetControlLayout)(nil)).Elem()
}

func (i TemplateSheetControlLayoutArray) ToTemplateSheetControlLayoutArrayOutput() TemplateSheetControlLayoutArrayOutput {
	return i.ToTemplateSheetControlLayoutArrayOutputWithContext(context.Background())
}

func (i TemplateSheetControlLayoutArray) ToTemplateSheetControlLayoutArrayOutputWithContext(ctx context.Context) TemplateSheetControlLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlLayoutArrayOutput)
}

type TemplateSheetControlLayoutOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlLayout)(nil)).Elem()
}

func (o TemplateSheetControlLayoutOutput) ToTemplateSheetControlLayoutOutput() TemplateSheetControlLayoutOutput {
	return o
}

func (o TemplateSheetControlLayoutOutput) ToTemplateSheetControlLayoutOutputWithContext(ctx context.Context) TemplateSheetControlLayoutOutput {
	return o
}

func (o TemplateSheetControlLayoutOutput) Configuration() TemplateSheetControlLayoutConfigurationOutput {
	return o.ApplyT(func(v TemplateSheetControlLayout) TemplateSheetControlLayoutConfiguration { return v.Configuration }).(TemplateSheetControlLayoutConfigurationOutput)
}

type TemplateSheetControlLayoutArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetControlLayout)(nil)).Elem()
}

func (o TemplateSheetControlLayoutArrayOutput) ToTemplateSheetControlLayoutArrayOutput() TemplateSheetControlLayoutArrayOutput {
	return o
}

func (o TemplateSheetControlLayoutArrayOutput) ToTemplateSheetControlLayoutArrayOutputWithContext(ctx context.Context) TemplateSheetControlLayoutArrayOutput {
	return o
}

func (o TemplateSheetControlLayoutArrayOutput) Index(i pulumi.IntInput) TemplateSheetControlLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheetControlLayout {
		return vs[0].([]TemplateSheetControlLayout)[vs[1].(int)]
	}).(TemplateSheetControlLayoutOutput)
}

type TemplateSheetControlLayoutConfiguration struct {
	GridLayout *TemplateGridLayoutConfiguration `pulumi:"gridLayout"`
}

// TemplateSheetControlLayoutConfigurationInput is an input type that accepts TemplateSheetControlLayoutConfigurationArgs and TemplateSheetControlLayoutConfigurationOutput values.
// You can construct a concrete instance of `TemplateSheetControlLayoutConfigurationInput` via:
//
//	TemplateSheetControlLayoutConfigurationArgs{...}
type TemplateSheetControlLayoutConfigurationInput interface {
	pulumi.Input

	ToTemplateSheetControlLayoutConfigurationOutput() TemplateSheetControlLayoutConfigurationOutput
	ToTemplateSheetControlLayoutConfigurationOutputWithContext(context.Context) TemplateSheetControlLayoutConfigurationOutput
}

type TemplateSheetControlLayoutConfigurationArgs struct {
	GridLayout TemplateGridLayoutConfigurationPtrInput `pulumi:"gridLayout"`
}

func (TemplateSheetControlLayoutConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlLayoutConfiguration)(nil)).Elem()
}

func (i TemplateSheetControlLayoutConfigurationArgs) ToTemplateSheetControlLayoutConfigurationOutput() TemplateSheetControlLayoutConfigurationOutput {
	return i.ToTemplateSheetControlLayoutConfigurationOutputWithContext(context.Background())
}

func (i TemplateSheetControlLayoutConfigurationArgs) ToTemplateSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSheetControlLayoutConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetControlLayoutConfigurationOutput)
}

type TemplateSheetControlLayoutConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSheetControlLayoutConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetControlLayoutConfiguration)(nil)).Elem()
}

func (o TemplateSheetControlLayoutConfigurationOutput) ToTemplateSheetControlLayoutConfigurationOutput() TemplateSheetControlLayoutConfigurationOutput {
	return o
}

func (o TemplateSheetControlLayoutConfigurationOutput) ToTemplateSheetControlLayoutConfigurationOutputWithContext(ctx context.Context) TemplateSheetControlLayoutConfigurationOutput {
	return o
}

func (o TemplateSheetControlLayoutConfigurationOutput) GridLayout() TemplateGridLayoutConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSheetControlLayoutConfiguration) *TemplateGridLayoutConfiguration { return v.GridLayout }).(TemplateGridLayoutConfigurationPtrOutput)
}

type TemplateSheetDefinition struct {
	ContentType         *TemplateSheetContentType    `pulumi:"contentType"`
	Description         *string                      `pulumi:"description"`
	FilterControls      []TemplateFilterControl      `pulumi:"filterControls"`
	Layouts             []TemplateLayout             `pulumi:"layouts"`
	Name                *string                      `pulumi:"name"`
	ParameterControls   []TemplateParameterControl   `pulumi:"parameterControls"`
	SheetControlLayouts []TemplateSheetControlLayout `pulumi:"sheetControlLayouts"`
	SheetId             string                       `pulumi:"sheetId"`
	TextBoxes           []TemplateSheetTextBox       `pulumi:"textBoxes"`
	Title               *string                      `pulumi:"title"`
	Visuals             []TemplateVisual             `pulumi:"visuals"`
}

// TemplateSheetDefinitionInput is an input type that accepts TemplateSheetDefinitionArgs and TemplateSheetDefinitionOutput values.
// You can construct a concrete instance of `TemplateSheetDefinitionInput` via:
//
//	TemplateSheetDefinitionArgs{...}
type TemplateSheetDefinitionInput interface {
	pulumi.Input

	ToTemplateSheetDefinitionOutput() TemplateSheetDefinitionOutput
	ToTemplateSheetDefinitionOutputWithContext(context.Context) TemplateSheetDefinitionOutput
}

type TemplateSheetDefinitionArgs struct {
	ContentType         TemplateSheetContentTypePtrInput     `pulumi:"contentType"`
	Description         pulumi.StringPtrInput                `pulumi:"description"`
	FilterControls      TemplateFilterControlArrayInput      `pulumi:"filterControls"`
	Layouts             TemplateLayoutArrayInput             `pulumi:"layouts"`
	Name                pulumi.StringPtrInput                `pulumi:"name"`
	ParameterControls   TemplateParameterControlArrayInput   `pulumi:"parameterControls"`
	SheetControlLayouts TemplateSheetControlLayoutArrayInput `pulumi:"sheetControlLayouts"`
	SheetId             pulumi.StringInput                   `pulumi:"sheetId"`
	TextBoxes           TemplateSheetTextBoxArrayInput       `pulumi:"textBoxes"`
	Title               pulumi.StringPtrInput                `pulumi:"title"`
	Visuals             TemplateVisualArrayInput             `pulumi:"visuals"`
}

func (TemplateSheetDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetDefinition)(nil)).Elem()
}

func (i TemplateSheetDefinitionArgs) ToTemplateSheetDefinitionOutput() TemplateSheetDefinitionOutput {
	return i.ToTemplateSheetDefinitionOutputWithContext(context.Background())
}

func (i TemplateSheetDefinitionArgs) ToTemplateSheetDefinitionOutputWithContext(ctx context.Context) TemplateSheetDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetDefinitionOutput)
}

// TemplateSheetDefinitionArrayInput is an input type that accepts TemplateSheetDefinitionArray and TemplateSheetDefinitionArrayOutput values.
// You can construct a concrete instance of `TemplateSheetDefinitionArrayInput` via:
//
//	TemplateSheetDefinitionArray{ TemplateSheetDefinitionArgs{...} }
type TemplateSheetDefinitionArrayInput interface {
	pulumi.Input

	ToTemplateSheetDefinitionArrayOutput() TemplateSheetDefinitionArrayOutput
	ToTemplateSheetDefinitionArrayOutputWithContext(context.Context) TemplateSheetDefinitionArrayOutput
}

type TemplateSheetDefinitionArray []TemplateSheetDefinitionInput

func (TemplateSheetDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetDefinition)(nil)).Elem()
}

func (i TemplateSheetDefinitionArray) ToTemplateSheetDefinitionArrayOutput() TemplateSheetDefinitionArrayOutput {
	return i.ToTemplateSheetDefinitionArrayOutputWithContext(context.Background())
}

func (i TemplateSheetDefinitionArray) ToTemplateSheetDefinitionArrayOutputWithContext(ctx context.Context) TemplateSheetDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetDefinitionArrayOutput)
}

type TemplateSheetDefinitionOutput struct{ *pulumi.OutputState }

func (TemplateSheetDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetDefinition)(nil)).Elem()
}

func (o TemplateSheetDefinitionOutput) ToTemplateSheetDefinitionOutput() TemplateSheetDefinitionOutput {
	return o
}

func (o TemplateSheetDefinitionOutput) ToTemplateSheetDefinitionOutputWithContext(ctx context.Context) TemplateSheetDefinitionOutput {
	return o
}

func (o TemplateSheetDefinitionOutput) ContentType() TemplateSheetContentTypePtrOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) *TemplateSheetContentType { return v.ContentType }).(TemplateSheetContentTypePtrOutput)
}

func (o TemplateSheetDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetDefinitionOutput) FilterControls() TemplateFilterControlArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateFilterControl { return v.FilterControls }).(TemplateFilterControlArrayOutput)
}

func (o TemplateSheetDefinitionOutput) Layouts() TemplateLayoutArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateLayout { return v.Layouts }).(TemplateLayoutArrayOutput)
}

func (o TemplateSheetDefinitionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetDefinitionOutput) ParameterControls() TemplateParameterControlArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateParameterControl { return v.ParameterControls }).(TemplateParameterControlArrayOutput)
}

func (o TemplateSheetDefinitionOutput) SheetControlLayouts() TemplateSheetControlLayoutArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateSheetControlLayout { return v.SheetControlLayouts }).(TemplateSheetControlLayoutArrayOutput)
}

func (o TemplateSheetDefinitionOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o TemplateSheetDefinitionOutput) TextBoxes() TemplateSheetTextBoxArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateSheetTextBox { return v.TextBoxes }).(TemplateSheetTextBoxArrayOutput)
}

func (o TemplateSheetDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetDefinitionOutput) Visuals() TemplateVisualArrayOutput {
	return o.ApplyT(func(v TemplateSheetDefinition) []TemplateVisual { return v.Visuals }).(TemplateVisualArrayOutput)
}

type TemplateSheetDefinitionArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetDefinition)(nil)).Elem()
}

func (o TemplateSheetDefinitionArrayOutput) ToTemplateSheetDefinitionArrayOutput() TemplateSheetDefinitionArrayOutput {
	return o
}

func (o TemplateSheetDefinitionArrayOutput) ToTemplateSheetDefinitionArrayOutputWithContext(ctx context.Context) TemplateSheetDefinitionArrayOutput {
	return o
}

func (o TemplateSheetDefinitionArrayOutput) Index(i pulumi.IntInput) TemplateSheetDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheetDefinition {
		return vs[0].([]TemplateSheetDefinition)[vs[1].(int)]
	}).(TemplateSheetDefinitionOutput)
}

type TemplateSheetElementConfigurationOverrides struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateSheetElementConfigurationOverridesInput is an input type that accepts TemplateSheetElementConfigurationOverridesArgs and TemplateSheetElementConfigurationOverridesOutput values.
// You can construct a concrete instance of `TemplateSheetElementConfigurationOverridesInput` via:
//
//	TemplateSheetElementConfigurationOverridesArgs{...}
type TemplateSheetElementConfigurationOverridesInput interface {
	pulumi.Input

	ToTemplateSheetElementConfigurationOverridesOutput() TemplateSheetElementConfigurationOverridesOutput
	ToTemplateSheetElementConfigurationOverridesOutputWithContext(context.Context) TemplateSheetElementConfigurationOverridesOutput
}

type TemplateSheetElementConfigurationOverridesArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateSheetElementConfigurationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetElementConfigurationOverrides)(nil)).Elem()
}

func (i TemplateSheetElementConfigurationOverridesArgs) ToTemplateSheetElementConfigurationOverridesOutput() TemplateSheetElementConfigurationOverridesOutput {
	return i.ToTemplateSheetElementConfigurationOverridesOutputWithContext(context.Background())
}

func (i TemplateSheetElementConfigurationOverridesArgs) ToTemplateSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) TemplateSheetElementConfigurationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetElementConfigurationOverridesOutput)
}

type TemplateSheetElementConfigurationOverridesOutput struct{ *pulumi.OutputState }

func (TemplateSheetElementConfigurationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetElementConfigurationOverrides)(nil)).Elem()
}

func (o TemplateSheetElementConfigurationOverridesOutput) ToTemplateSheetElementConfigurationOverridesOutput() TemplateSheetElementConfigurationOverridesOutput {
	return o
}

func (o TemplateSheetElementConfigurationOverridesOutput) ToTemplateSheetElementConfigurationOverridesOutputWithContext(ctx context.Context) TemplateSheetElementConfigurationOverridesOutput {
	return o
}

func (o TemplateSheetElementConfigurationOverridesOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateSheetElementConfigurationOverrides) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateSheetElementRenderingRule struct {
	ConfigurationOverrides TemplateSheetElementConfigurationOverrides `pulumi:"configurationOverrides"`
	Expression             string                                     `pulumi:"expression"`
}

// TemplateSheetElementRenderingRuleInput is an input type that accepts TemplateSheetElementRenderingRuleArgs and TemplateSheetElementRenderingRuleOutput values.
// You can construct a concrete instance of `TemplateSheetElementRenderingRuleInput` via:
//
//	TemplateSheetElementRenderingRuleArgs{...}
type TemplateSheetElementRenderingRuleInput interface {
	pulumi.Input

	ToTemplateSheetElementRenderingRuleOutput() TemplateSheetElementRenderingRuleOutput
	ToTemplateSheetElementRenderingRuleOutputWithContext(context.Context) TemplateSheetElementRenderingRuleOutput
}

type TemplateSheetElementRenderingRuleArgs struct {
	ConfigurationOverrides TemplateSheetElementConfigurationOverridesInput `pulumi:"configurationOverrides"`
	Expression             pulumi.StringInput                              `pulumi:"expression"`
}

func (TemplateSheetElementRenderingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetElementRenderingRule)(nil)).Elem()
}

func (i TemplateSheetElementRenderingRuleArgs) ToTemplateSheetElementRenderingRuleOutput() TemplateSheetElementRenderingRuleOutput {
	return i.ToTemplateSheetElementRenderingRuleOutputWithContext(context.Background())
}

func (i TemplateSheetElementRenderingRuleArgs) ToTemplateSheetElementRenderingRuleOutputWithContext(ctx context.Context) TemplateSheetElementRenderingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetElementRenderingRuleOutput)
}

// TemplateSheetElementRenderingRuleArrayInput is an input type that accepts TemplateSheetElementRenderingRuleArray and TemplateSheetElementRenderingRuleArrayOutput values.
// You can construct a concrete instance of `TemplateSheetElementRenderingRuleArrayInput` via:
//
//	TemplateSheetElementRenderingRuleArray{ TemplateSheetElementRenderingRuleArgs{...} }
type TemplateSheetElementRenderingRuleArrayInput interface {
	pulumi.Input

	ToTemplateSheetElementRenderingRuleArrayOutput() TemplateSheetElementRenderingRuleArrayOutput
	ToTemplateSheetElementRenderingRuleArrayOutputWithContext(context.Context) TemplateSheetElementRenderingRuleArrayOutput
}

type TemplateSheetElementRenderingRuleArray []TemplateSheetElementRenderingRuleInput

func (TemplateSheetElementRenderingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetElementRenderingRule)(nil)).Elem()
}

func (i TemplateSheetElementRenderingRuleArray) ToTemplateSheetElementRenderingRuleArrayOutput() TemplateSheetElementRenderingRuleArrayOutput {
	return i.ToTemplateSheetElementRenderingRuleArrayOutputWithContext(context.Background())
}

func (i TemplateSheetElementRenderingRuleArray) ToTemplateSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) TemplateSheetElementRenderingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetElementRenderingRuleArrayOutput)
}

type TemplateSheetElementRenderingRuleOutput struct{ *pulumi.OutputState }

func (TemplateSheetElementRenderingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetElementRenderingRule)(nil)).Elem()
}

func (o TemplateSheetElementRenderingRuleOutput) ToTemplateSheetElementRenderingRuleOutput() TemplateSheetElementRenderingRuleOutput {
	return o
}

func (o TemplateSheetElementRenderingRuleOutput) ToTemplateSheetElementRenderingRuleOutputWithContext(ctx context.Context) TemplateSheetElementRenderingRuleOutput {
	return o
}

func (o TemplateSheetElementRenderingRuleOutput) ConfigurationOverrides() TemplateSheetElementConfigurationOverridesOutput {
	return o.ApplyT(func(v TemplateSheetElementRenderingRule) TemplateSheetElementConfigurationOverrides {
		return v.ConfigurationOverrides
	}).(TemplateSheetElementConfigurationOverridesOutput)
}

func (o TemplateSheetElementRenderingRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSheetElementRenderingRule) string { return v.Expression }).(pulumi.StringOutput)
}

type TemplateSheetElementRenderingRuleArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetElementRenderingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetElementRenderingRule)(nil)).Elem()
}

func (o TemplateSheetElementRenderingRuleArrayOutput) ToTemplateSheetElementRenderingRuleArrayOutput() TemplateSheetElementRenderingRuleArrayOutput {
	return o
}

func (o TemplateSheetElementRenderingRuleArrayOutput) ToTemplateSheetElementRenderingRuleArrayOutputWithContext(ctx context.Context) TemplateSheetElementRenderingRuleArrayOutput {
	return o
}

func (o TemplateSheetElementRenderingRuleArrayOutput) Index(i pulumi.IntInput) TemplateSheetElementRenderingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheetElementRenderingRule {
		return vs[0].([]TemplateSheetElementRenderingRule)[vs[1].(int)]
	}).(TemplateSheetElementRenderingRuleOutput)
}

type TemplateSheetTextBox struct {
	Content        *string `pulumi:"content"`
	SheetTextBoxId string  `pulumi:"sheetTextBoxId"`
}

// TemplateSheetTextBoxInput is an input type that accepts TemplateSheetTextBoxArgs and TemplateSheetTextBoxOutput values.
// You can construct a concrete instance of `TemplateSheetTextBoxInput` via:
//
//	TemplateSheetTextBoxArgs{...}
type TemplateSheetTextBoxInput interface {
	pulumi.Input

	ToTemplateSheetTextBoxOutput() TemplateSheetTextBoxOutput
	ToTemplateSheetTextBoxOutputWithContext(context.Context) TemplateSheetTextBoxOutput
}

type TemplateSheetTextBoxArgs struct {
	Content        pulumi.StringPtrInput `pulumi:"content"`
	SheetTextBoxId pulumi.StringInput    `pulumi:"sheetTextBoxId"`
}

func (TemplateSheetTextBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetTextBox)(nil)).Elem()
}

func (i TemplateSheetTextBoxArgs) ToTemplateSheetTextBoxOutput() TemplateSheetTextBoxOutput {
	return i.ToTemplateSheetTextBoxOutputWithContext(context.Background())
}

func (i TemplateSheetTextBoxArgs) ToTemplateSheetTextBoxOutputWithContext(ctx context.Context) TemplateSheetTextBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetTextBoxOutput)
}

// TemplateSheetTextBoxArrayInput is an input type that accepts TemplateSheetTextBoxArray and TemplateSheetTextBoxArrayOutput values.
// You can construct a concrete instance of `TemplateSheetTextBoxArrayInput` via:
//
//	TemplateSheetTextBoxArray{ TemplateSheetTextBoxArgs{...} }
type TemplateSheetTextBoxArrayInput interface {
	pulumi.Input

	ToTemplateSheetTextBoxArrayOutput() TemplateSheetTextBoxArrayOutput
	ToTemplateSheetTextBoxArrayOutputWithContext(context.Context) TemplateSheetTextBoxArrayOutput
}

type TemplateSheetTextBoxArray []TemplateSheetTextBoxInput

func (TemplateSheetTextBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetTextBox)(nil)).Elem()
}

func (i TemplateSheetTextBoxArray) ToTemplateSheetTextBoxArrayOutput() TemplateSheetTextBoxArrayOutput {
	return i.ToTemplateSheetTextBoxArrayOutputWithContext(context.Background())
}

func (i TemplateSheetTextBoxArray) ToTemplateSheetTextBoxArrayOutputWithContext(ctx context.Context) TemplateSheetTextBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetTextBoxArrayOutput)
}

type TemplateSheetTextBoxOutput struct{ *pulumi.OutputState }

func (TemplateSheetTextBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetTextBox)(nil)).Elem()
}

func (o TemplateSheetTextBoxOutput) ToTemplateSheetTextBoxOutput() TemplateSheetTextBoxOutput {
	return o
}

func (o TemplateSheetTextBoxOutput) ToTemplateSheetTextBoxOutputWithContext(ctx context.Context) TemplateSheetTextBoxOutput {
	return o
}

func (o TemplateSheetTextBoxOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSheetTextBox) *string { return v.Content }).(pulumi.StringPtrOutput)
}

func (o TemplateSheetTextBoxOutput) SheetTextBoxId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSheetTextBox) string { return v.SheetTextBoxId }).(pulumi.StringOutput)
}

type TemplateSheetTextBoxArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetTextBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetTextBox)(nil)).Elem()
}

func (o TemplateSheetTextBoxArrayOutput) ToTemplateSheetTextBoxArrayOutput() TemplateSheetTextBoxArrayOutput {
	return o
}

func (o TemplateSheetTextBoxArrayOutput) ToTemplateSheetTextBoxArrayOutputWithContext(ctx context.Context) TemplateSheetTextBoxArrayOutput {
	return o
}

func (o TemplateSheetTextBoxArrayOutput) Index(i pulumi.IntInput) TemplateSheetTextBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheetTextBox {
		return vs[0].([]TemplateSheetTextBox)[vs[1].(int)]
	}).(TemplateSheetTextBoxOutput)
}

type TemplateSheetVisualScopingConfiguration struct {
	Scope     TemplateFilterVisualScope `pulumi:"scope"`
	SheetId   string                    `pulumi:"sheetId"`
	VisualIds []string                  `pulumi:"visualIds"`
}

// TemplateSheetVisualScopingConfigurationInput is an input type that accepts TemplateSheetVisualScopingConfigurationArgs and TemplateSheetVisualScopingConfigurationOutput values.
// You can construct a concrete instance of `TemplateSheetVisualScopingConfigurationInput` via:
//
//	TemplateSheetVisualScopingConfigurationArgs{...}
type TemplateSheetVisualScopingConfigurationInput interface {
	pulumi.Input

	ToTemplateSheetVisualScopingConfigurationOutput() TemplateSheetVisualScopingConfigurationOutput
	ToTemplateSheetVisualScopingConfigurationOutputWithContext(context.Context) TemplateSheetVisualScopingConfigurationOutput
}

type TemplateSheetVisualScopingConfigurationArgs struct {
	Scope     TemplateFilterVisualScopeInput `pulumi:"scope"`
	SheetId   pulumi.StringInput             `pulumi:"sheetId"`
	VisualIds pulumi.StringArrayInput        `pulumi:"visualIds"`
}

func (TemplateSheetVisualScopingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i TemplateSheetVisualScopingConfigurationArgs) ToTemplateSheetVisualScopingConfigurationOutput() TemplateSheetVisualScopingConfigurationOutput {
	return i.ToTemplateSheetVisualScopingConfigurationOutputWithContext(context.Background())
}

func (i TemplateSheetVisualScopingConfigurationArgs) ToTemplateSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) TemplateSheetVisualScopingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetVisualScopingConfigurationOutput)
}

// TemplateSheetVisualScopingConfigurationArrayInput is an input type that accepts TemplateSheetVisualScopingConfigurationArray and TemplateSheetVisualScopingConfigurationArrayOutput values.
// You can construct a concrete instance of `TemplateSheetVisualScopingConfigurationArrayInput` via:
//
//	TemplateSheetVisualScopingConfigurationArray{ TemplateSheetVisualScopingConfigurationArgs{...} }
type TemplateSheetVisualScopingConfigurationArrayInput interface {
	pulumi.Input

	ToTemplateSheetVisualScopingConfigurationArrayOutput() TemplateSheetVisualScopingConfigurationArrayOutput
	ToTemplateSheetVisualScopingConfigurationArrayOutputWithContext(context.Context) TemplateSheetVisualScopingConfigurationArrayOutput
}

type TemplateSheetVisualScopingConfigurationArray []TemplateSheetVisualScopingConfigurationInput

func (TemplateSheetVisualScopingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetVisualScopingConfiguration)(nil)).Elem()
}

func (i TemplateSheetVisualScopingConfigurationArray) ToTemplateSheetVisualScopingConfigurationArrayOutput() TemplateSheetVisualScopingConfigurationArrayOutput {
	return i.ToTemplateSheetVisualScopingConfigurationArrayOutputWithContext(context.Background())
}

func (i TemplateSheetVisualScopingConfigurationArray) ToTemplateSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) TemplateSheetVisualScopingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSheetVisualScopingConfigurationArrayOutput)
}

type TemplateSheetVisualScopingConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateSheetVisualScopingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o TemplateSheetVisualScopingConfigurationOutput) ToTemplateSheetVisualScopingConfigurationOutput() TemplateSheetVisualScopingConfigurationOutput {
	return o
}

func (o TemplateSheetVisualScopingConfigurationOutput) ToTemplateSheetVisualScopingConfigurationOutputWithContext(ctx context.Context) TemplateSheetVisualScopingConfigurationOutput {
	return o
}

func (o TemplateSheetVisualScopingConfigurationOutput) Scope() TemplateFilterVisualScopeOutput {
	return o.ApplyT(func(v TemplateSheetVisualScopingConfiguration) TemplateFilterVisualScope { return v.Scope }).(TemplateFilterVisualScopeOutput)
}

func (o TemplateSheetVisualScopingConfigurationOutput) SheetId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSheetVisualScopingConfiguration) string { return v.SheetId }).(pulumi.StringOutput)
}

func (o TemplateSheetVisualScopingConfigurationOutput) VisualIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateSheetVisualScopingConfiguration) []string { return v.VisualIds }).(pulumi.StringArrayOutput)
}

type TemplateSheetVisualScopingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TemplateSheetVisualScopingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateSheetVisualScopingConfiguration)(nil)).Elem()
}

func (o TemplateSheetVisualScopingConfigurationArrayOutput) ToTemplateSheetVisualScopingConfigurationArrayOutput() TemplateSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o TemplateSheetVisualScopingConfigurationArrayOutput) ToTemplateSheetVisualScopingConfigurationArrayOutputWithContext(ctx context.Context) TemplateSheetVisualScopingConfigurationArrayOutput {
	return o
}

func (o TemplateSheetVisualScopingConfigurationArrayOutput) Index(i pulumi.IntInput) TemplateSheetVisualScopingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateSheetVisualScopingConfiguration {
		return vs[0].([]TemplateSheetVisualScopingConfiguration)[vs[1].(int)]
	}).(TemplateSheetVisualScopingConfigurationOutput)
}

type TemplateShortFormatText struct {
	PlainText *string `pulumi:"plainText"`
	RichText  *string `pulumi:"richText"`
}

// TemplateShortFormatTextInput is an input type that accepts TemplateShortFormatTextArgs and TemplateShortFormatTextOutput values.
// You can construct a concrete instance of `TemplateShortFormatTextInput` via:
//
//	TemplateShortFormatTextArgs{...}
type TemplateShortFormatTextInput interface {
	pulumi.Input

	ToTemplateShortFormatTextOutput() TemplateShortFormatTextOutput
	ToTemplateShortFormatTextOutputWithContext(context.Context) TemplateShortFormatTextOutput
}

type TemplateShortFormatTextArgs struct {
	PlainText pulumi.StringPtrInput `pulumi:"plainText"`
	RichText  pulumi.StringPtrInput `pulumi:"richText"`
}

func (TemplateShortFormatTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateShortFormatText)(nil)).Elem()
}

func (i TemplateShortFormatTextArgs) ToTemplateShortFormatTextOutput() TemplateShortFormatTextOutput {
	return i.ToTemplateShortFormatTextOutputWithContext(context.Background())
}

func (i TemplateShortFormatTextArgs) ToTemplateShortFormatTextOutputWithContext(ctx context.Context) TemplateShortFormatTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShortFormatTextOutput)
}

func (i TemplateShortFormatTextArgs) ToTemplateShortFormatTextPtrOutput() TemplateShortFormatTextPtrOutput {
	return i.ToTemplateShortFormatTextPtrOutputWithContext(context.Background())
}

func (i TemplateShortFormatTextArgs) ToTemplateShortFormatTextPtrOutputWithContext(ctx context.Context) TemplateShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShortFormatTextOutput).ToTemplateShortFormatTextPtrOutputWithContext(ctx)
}

// TemplateShortFormatTextPtrInput is an input type that accepts TemplateShortFormatTextArgs, TemplateShortFormatTextPtr and TemplateShortFormatTextPtrOutput values.
// You can construct a concrete instance of `TemplateShortFormatTextPtrInput` via:
//
//	        TemplateShortFormatTextArgs{...}
//
//	or:
//
//	        nil
type TemplateShortFormatTextPtrInput interface {
	pulumi.Input

	ToTemplateShortFormatTextPtrOutput() TemplateShortFormatTextPtrOutput
	ToTemplateShortFormatTextPtrOutputWithContext(context.Context) TemplateShortFormatTextPtrOutput
}

type templateShortFormatTextPtrType TemplateShortFormatTextArgs

func TemplateShortFormatTextPtr(v *TemplateShortFormatTextArgs) TemplateShortFormatTextPtrInput {
	return (*templateShortFormatTextPtrType)(v)
}

func (*templateShortFormatTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateShortFormatText)(nil)).Elem()
}

func (i *templateShortFormatTextPtrType) ToTemplateShortFormatTextPtrOutput() TemplateShortFormatTextPtrOutput {
	return i.ToTemplateShortFormatTextPtrOutputWithContext(context.Background())
}

func (i *templateShortFormatTextPtrType) ToTemplateShortFormatTextPtrOutputWithContext(ctx context.Context) TemplateShortFormatTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateShortFormatTextPtrOutput)
}

type TemplateShortFormatTextOutput struct{ *pulumi.OutputState }

func (TemplateShortFormatTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateShortFormatText)(nil)).Elem()
}

func (o TemplateShortFormatTextOutput) ToTemplateShortFormatTextOutput() TemplateShortFormatTextOutput {
	return o
}

func (o TemplateShortFormatTextOutput) ToTemplateShortFormatTextOutputWithContext(ctx context.Context) TemplateShortFormatTextOutput {
	return o
}

func (o TemplateShortFormatTextOutput) ToTemplateShortFormatTextPtrOutput() TemplateShortFormatTextPtrOutput {
	return o.ToTemplateShortFormatTextPtrOutputWithContext(context.Background())
}

func (o TemplateShortFormatTextOutput) ToTemplateShortFormatTextPtrOutputWithContext(ctx context.Context) TemplateShortFormatTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateShortFormatText) *TemplateShortFormatText {
		return &v
	}).(TemplateShortFormatTextPtrOutput)
}

func (o TemplateShortFormatTextOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateShortFormatText) *string { return v.PlainText }).(pulumi.StringPtrOutput)
}

func (o TemplateShortFormatTextOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateShortFormatText) *string { return v.RichText }).(pulumi.StringPtrOutput)
}

type TemplateShortFormatTextPtrOutput struct{ *pulumi.OutputState }

func (TemplateShortFormatTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateShortFormatText)(nil)).Elem()
}

func (o TemplateShortFormatTextPtrOutput) ToTemplateShortFormatTextPtrOutput() TemplateShortFormatTextPtrOutput {
	return o
}

func (o TemplateShortFormatTextPtrOutput) ToTemplateShortFormatTextPtrOutputWithContext(ctx context.Context) TemplateShortFormatTextPtrOutput {
	return o
}

func (o TemplateShortFormatTextPtrOutput) Elem() TemplateShortFormatTextOutput {
	return o.ApplyT(func(v *TemplateShortFormatText) TemplateShortFormatText {
		if v != nil {
			return *v
		}
		var ret TemplateShortFormatText
		return ret
	}).(TemplateShortFormatTextOutput)
}

func (o TemplateShortFormatTextPtrOutput) PlainText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.PlainText
	}).(pulumi.StringPtrOutput)
}

func (o TemplateShortFormatTextPtrOutput) RichText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateShortFormatText) *string {
		if v == nil {
			return nil
		}
		return v.RichText
	}).(pulumi.StringPtrOutput)
}

type TemplateSimpleClusterMarker struct {
	Color *string `pulumi:"color"`
}

// TemplateSimpleClusterMarkerInput is an input type that accepts TemplateSimpleClusterMarkerArgs and TemplateSimpleClusterMarkerOutput values.
// You can construct a concrete instance of `TemplateSimpleClusterMarkerInput` via:
//
//	TemplateSimpleClusterMarkerArgs{...}
type TemplateSimpleClusterMarkerInput interface {
	pulumi.Input

	ToTemplateSimpleClusterMarkerOutput() TemplateSimpleClusterMarkerOutput
	ToTemplateSimpleClusterMarkerOutputWithContext(context.Context) TemplateSimpleClusterMarkerOutput
}

type TemplateSimpleClusterMarkerArgs struct {
	Color pulumi.StringPtrInput `pulumi:"color"`
}

func (TemplateSimpleClusterMarkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleClusterMarker)(nil)).Elem()
}

func (i TemplateSimpleClusterMarkerArgs) ToTemplateSimpleClusterMarkerOutput() TemplateSimpleClusterMarkerOutput {
	return i.ToTemplateSimpleClusterMarkerOutputWithContext(context.Background())
}

func (i TemplateSimpleClusterMarkerArgs) ToTemplateSimpleClusterMarkerOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSimpleClusterMarkerOutput)
}

func (i TemplateSimpleClusterMarkerArgs) ToTemplateSimpleClusterMarkerPtrOutput() TemplateSimpleClusterMarkerPtrOutput {
	return i.ToTemplateSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i TemplateSimpleClusterMarkerArgs) ToTemplateSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSimpleClusterMarkerOutput).ToTemplateSimpleClusterMarkerPtrOutputWithContext(ctx)
}

// TemplateSimpleClusterMarkerPtrInput is an input type that accepts TemplateSimpleClusterMarkerArgs, TemplateSimpleClusterMarkerPtr and TemplateSimpleClusterMarkerPtrOutput values.
// You can construct a concrete instance of `TemplateSimpleClusterMarkerPtrInput` via:
//
//	        TemplateSimpleClusterMarkerArgs{...}
//
//	or:
//
//	        nil
type TemplateSimpleClusterMarkerPtrInput interface {
	pulumi.Input

	ToTemplateSimpleClusterMarkerPtrOutput() TemplateSimpleClusterMarkerPtrOutput
	ToTemplateSimpleClusterMarkerPtrOutputWithContext(context.Context) TemplateSimpleClusterMarkerPtrOutput
}

type templateSimpleClusterMarkerPtrType TemplateSimpleClusterMarkerArgs

func TemplateSimpleClusterMarkerPtr(v *TemplateSimpleClusterMarkerArgs) TemplateSimpleClusterMarkerPtrInput {
	return (*templateSimpleClusterMarkerPtrType)(v)
}

func (*templateSimpleClusterMarkerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSimpleClusterMarker)(nil)).Elem()
}

func (i *templateSimpleClusterMarkerPtrType) ToTemplateSimpleClusterMarkerPtrOutput() TemplateSimpleClusterMarkerPtrOutput {
	return i.ToTemplateSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (i *templateSimpleClusterMarkerPtrType) ToTemplateSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSimpleClusterMarkerPtrOutput)
}

type TemplateSimpleClusterMarkerOutput struct{ *pulumi.OutputState }

func (TemplateSimpleClusterMarkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSimpleClusterMarker)(nil)).Elem()
}

func (o TemplateSimpleClusterMarkerOutput) ToTemplateSimpleClusterMarkerOutput() TemplateSimpleClusterMarkerOutput {
	return o
}

func (o TemplateSimpleClusterMarkerOutput) ToTemplateSimpleClusterMarkerOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerOutput {
	return o
}

func (o TemplateSimpleClusterMarkerOutput) ToTemplateSimpleClusterMarkerPtrOutput() TemplateSimpleClusterMarkerPtrOutput {
	return o.ToTemplateSimpleClusterMarkerPtrOutputWithContext(context.Background())
}

func (o TemplateSimpleClusterMarkerOutput) ToTemplateSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSimpleClusterMarker) *TemplateSimpleClusterMarker {
		return &v
	}).(TemplateSimpleClusterMarkerPtrOutput)
}

func (o TemplateSimpleClusterMarkerOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSimpleClusterMarker) *string { return v.Color }).(pulumi.StringPtrOutput)
}

type TemplateSimpleClusterMarkerPtrOutput struct{ *pulumi.OutputState }

func (TemplateSimpleClusterMarkerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSimpleClusterMarker)(nil)).Elem()
}

func (o TemplateSimpleClusterMarkerPtrOutput) ToTemplateSimpleClusterMarkerPtrOutput() TemplateSimpleClusterMarkerPtrOutput {
	return o
}

func (o TemplateSimpleClusterMarkerPtrOutput) ToTemplateSimpleClusterMarkerPtrOutputWithContext(ctx context.Context) TemplateSimpleClusterMarkerPtrOutput {
	return o
}

func (o TemplateSimpleClusterMarkerPtrOutput) Elem() TemplateSimpleClusterMarkerOutput {
	return o.ApplyT(func(v *TemplateSimpleClusterMarker) TemplateSimpleClusterMarker {
		if v != nil {
			return *v
		}
		var ret TemplateSimpleClusterMarker
		return ret
	}).(TemplateSimpleClusterMarkerOutput)
}

func (o TemplateSimpleClusterMarkerPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSimpleClusterMarker) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

type TemplateSliderControlDisplayOptions struct {
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateSliderControlDisplayOptionsInput is an input type that accepts TemplateSliderControlDisplayOptionsArgs and TemplateSliderControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateSliderControlDisplayOptionsInput` via:
//
//	TemplateSliderControlDisplayOptionsArgs{...}
type TemplateSliderControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateSliderControlDisplayOptionsOutput() TemplateSliderControlDisplayOptionsOutput
	ToTemplateSliderControlDisplayOptionsOutputWithContext(context.Context) TemplateSliderControlDisplayOptionsOutput
}

type TemplateSliderControlDisplayOptionsArgs struct {
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateSliderControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSliderControlDisplayOptions)(nil)).Elem()
}

func (i TemplateSliderControlDisplayOptionsArgs) ToTemplateSliderControlDisplayOptionsOutput() TemplateSliderControlDisplayOptionsOutput {
	return i.ToTemplateSliderControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateSliderControlDisplayOptionsArgs) ToTemplateSliderControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSliderControlDisplayOptionsOutput)
}

func (i TemplateSliderControlDisplayOptionsArgs) ToTemplateSliderControlDisplayOptionsPtrOutput() TemplateSliderControlDisplayOptionsPtrOutput {
	return i.ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSliderControlDisplayOptionsArgs) ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSliderControlDisplayOptionsOutput).ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateSliderControlDisplayOptionsPtrInput is an input type that accepts TemplateSliderControlDisplayOptionsArgs, TemplateSliderControlDisplayOptionsPtr and TemplateSliderControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSliderControlDisplayOptionsPtrInput` via:
//
//	        TemplateSliderControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSliderControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSliderControlDisplayOptionsPtrOutput() TemplateSliderControlDisplayOptionsPtrOutput
	ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateSliderControlDisplayOptionsPtrOutput
}

type templateSliderControlDisplayOptionsPtrType TemplateSliderControlDisplayOptionsArgs

func TemplateSliderControlDisplayOptionsPtr(v *TemplateSliderControlDisplayOptionsArgs) TemplateSliderControlDisplayOptionsPtrInput {
	return (*templateSliderControlDisplayOptionsPtrType)(v)
}

func (*templateSliderControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSliderControlDisplayOptions)(nil)).Elem()
}

func (i *templateSliderControlDisplayOptionsPtrType) ToTemplateSliderControlDisplayOptionsPtrOutput() TemplateSliderControlDisplayOptionsPtrOutput {
	return i.ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSliderControlDisplayOptionsPtrType) ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSliderControlDisplayOptionsPtrOutput)
}

type TemplateSliderControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSliderControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSliderControlDisplayOptions)(nil)).Elem()
}

func (o TemplateSliderControlDisplayOptionsOutput) ToTemplateSliderControlDisplayOptionsOutput() TemplateSliderControlDisplayOptionsOutput {
	return o
}

func (o TemplateSliderControlDisplayOptionsOutput) ToTemplateSliderControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsOutput {
	return o
}

func (o TemplateSliderControlDisplayOptionsOutput) ToTemplateSliderControlDisplayOptionsPtrOutput() TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSliderControlDisplayOptionsOutput) ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSliderControlDisplayOptions) *TemplateSliderControlDisplayOptions {
		return &v
	}).(TemplateSliderControlDisplayOptionsPtrOutput)
}

func (o TemplateSliderControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSliderControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateSliderControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateSliderControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateSliderControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSliderControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSliderControlDisplayOptions)(nil)).Elem()
}

func (o TemplateSliderControlDisplayOptionsPtrOutput) ToTemplateSliderControlDisplayOptionsPtrOutput() TemplateSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateSliderControlDisplayOptionsPtrOutput) ToTemplateSliderControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateSliderControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateSliderControlDisplayOptionsPtrOutput) Elem() TemplateSliderControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateSliderControlDisplayOptions) TemplateSliderControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSliderControlDisplayOptions
		return ret
	}).(TemplateSliderControlDisplayOptionsOutput)
}

func (o TemplateSliderControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSliderControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateSliderControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateSliderControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateSmallMultiplesAxisProperties struct {
	Placement *TemplateSmallMultiplesAxisPlacement `pulumi:"placement"`
	Scale     *TemplateSmallMultiplesAxisScale     `pulumi:"scale"`
}

// TemplateSmallMultiplesAxisPropertiesInput is an input type that accepts TemplateSmallMultiplesAxisPropertiesArgs and TemplateSmallMultiplesAxisPropertiesOutput values.
// You can construct a concrete instance of `TemplateSmallMultiplesAxisPropertiesInput` via:
//
//	TemplateSmallMultiplesAxisPropertiesArgs{...}
type TemplateSmallMultiplesAxisPropertiesInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisPropertiesOutput() TemplateSmallMultiplesAxisPropertiesOutput
	ToTemplateSmallMultiplesAxisPropertiesOutputWithContext(context.Context) TemplateSmallMultiplesAxisPropertiesOutput
}

type TemplateSmallMultiplesAxisPropertiesArgs struct {
	Placement TemplateSmallMultiplesAxisPlacementPtrInput `pulumi:"placement"`
	Scale     TemplateSmallMultiplesAxisScalePtrInput     `pulumi:"scale"`
}

func (TemplateSmallMultiplesAxisPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisProperties)(nil)).Elem()
}

func (i TemplateSmallMultiplesAxisPropertiesArgs) ToTemplateSmallMultiplesAxisPropertiesOutput() TemplateSmallMultiplesAxisPropertiesOutput {
	return i.ToTemplateSmallMultiplesAxisPropertiesOutputWithContext(context.Background())
}

func (i TemplateSmallMultiplesAxisPropertiesArgs) ToTemplateSmallMultiplesAxisPropertiesOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesAxisPropertiesOutput)
}

func (i TemplateSmallMultiplesAxisPropertiesArgs) ToTemplateSmallMultiplesAxisPropertiesPtrOutput() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return i.ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateSmallMultiplesAxisPropertiesArgs) ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesAxisPropertiesOutput).ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(ctx)
}

// TemplateSmallMultiplesAxisPropertiesPtrInput is an input type that accepts TemplateSmallMultiplesAxisPropertiesArgs, TemplateSmallMultiplesAxisPropertiesPtr and TemplateSmallMultiplesAxisPropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateSmallMultiplesAxisPropertiesPtrInput` via:
//
//	        TemplateSmallMultiplesAxisPropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateSmallMultiplesAxisPropertiesPtrInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesAxisPropertiesPtrOutput() TemplateSmallMultiplesAxisPropertiesPtrOutput
	ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(context.Context) TemplateSmallMultiplesAxisPropertiesPtrOutput
}

type templateSmallMultiplesAxisPropertiesPtrType TemplateSmallMultiplesAxisPropertiesArgs

func TemplateSmallMultiplesAxisPropertiesPtr(v *TemplateSmallMultiplesAxisPropertiesArgs) TemplateSmallMultiplesAxisPropertiesPtrInput {
	return (*templateSmallMultiplesAxisPropertiesPtrType)(v)
}

func (*templateSmallMultiplesAxisPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesAxisProperties)(nil)).Elem()
}

func (i *templateSmallMultiplesAxisPropertiesPtrType) ToTemplateSmallMultiplesAxisPropertiesPtrOutput() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return i.ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(context.Background())
}

func (i *templateSmallMultiplesAxisPropertiesPtrType) ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

type TemplateSmallMultiplesAxisPropertiesOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesAxisProperties)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) ToTemplateSmallMultiplesAxisPropertiesOutput() TemplateSmallMultiplesAxisPropertiesOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) ToTemplateSmallMultiplesAxisPropertiesOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) ToTemplateSmallMultiplesAxisPropertiesPtrOutput() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSmallMultiplesAxisProperties) *TemplateSmallMultiplesAxisProperties {
		return &v
	}).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) Placement() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesAxisProperties) *TemplateSmallMultiplesAxisPlacement { return v.Placement }).(TemplateSmallMultiplesAxisPlacementPtrOutput)
}

func (o TemplateSmallMultiplesAxisPropertiesOutput) Scale() TemplateSmallMultiplesAxisScalePtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesAxisProperties) *TemplateSmallMultiplesAxisScale { return v.Scale }).(TemplateSmallMultiplesAxisScalePtrOutput)
}

type TemplateSmallMultiplesAxisPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesAxisPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesAxisProperties)(nil)).Elem()
}

func (o TemplateSmallMultiplesAxisPropertiesPtrOutput) ToTemplateSmallMultiplesAxisPropertiesPtrOutput() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPropertiesPtrOutput) ToTemplateSmallMultiplesAxisPropertiesPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o
}

func (o TemplateSmallMultiplesAxisPropertiesPtrOutput) Elem() TemplateSmallMultiplesAxisPropertiesOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesAxisProperties) TemplateSmallMultiplesAxisProperties {
		if v != nil {
			return *v
		}
		var ret TemplateSmallMultiplesAxisProperties
		return ret
	}).(TemplateSmallMultiplesAxisPropertiesOutput)
}

func (o TemplateSmallMultiplesAxisPropertiesPtrOutput) Placement() TemplateSmallMultiplesAxisPlacementPtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesAxisProperties) *TemplateSmallMultiplesAxisPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(TemplateSmallMultiplesAxisPlacementPtrOutput)
}

func (o TemplateSmallMultiplesAxisPropertiesPtrOutput) Scale() TemplateSmallMultiplesAxisScalePtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesAxisProperties) *TemplateSmallMultiplesAxisScale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(TemplateSmallMultiplesAxisScalePtrOutput)
}

type TemplateSmallMultiplesOptions struct {
	MaxVisibleColumns  *float64                              `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     *float64                              `pulumi:"maxVisibleRows"`
	PanelConfiguration *TemplatePanelConfiguration           `pulumi:"panelConfiguration"`
	XAxis              *TemplateSmallMultiplesAxisProperties `pulumi:"xAxis"`
	YAxis              *TemplateSmallMultiplesAxisProperties `pulumi:"yAxis"`
}

// TemplateSmallMultiplesOptionsInput is an input type that accepts TemplateSmallMultiplesOptionsArgs and TemplateSmallMultiplesOptionsOutput values.
// You can construct a concrete instance of `TemplateSmallMultiplesOptionsInput` via:
//
//	TemplateSmallMultiplesOptionsArgs{...}
type TemplateSmallMultiplesOptionsInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesOptionsOutput() TemplateSmallMultiplesOptionsOutput
	ToTemplateSmallMultiplesOptionsOutputWithContext(context.Context) TemplateSmallMultiplesOptionsOutput
}

type TemplateSmallMultiplesOptionsArgs struct {
	MaxVisibleColumns  pulumi.Float64PtrInput                       `pulumi:"maxVisibleColumns"`
	MaxVisibleRows     pulumi.Float64PtrInput                       `pulumi:"maxVisibleRows"`
	PanelConfiguration TemplatePanelConfigurationPtrInput           `pulumi:"panelConfiguration"`
	XAxis              TemplateSmallMultiplesAxisPropertiesPtrInput `pulumi:"xAxis"`
	YAxis              TemplateSmallMultiplesAxisPropertiesPtrInput `pulumi:"yAxis"`
}

func (TemplateSmallMultiplesOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesOptions)(nil)).Elem()
}

func (i TemplateSmallMultiplesOptionsArgs) ToTemplateSmallMultiplesOptionsOutput() TemplateSmallMultiplesOptionsOutput {
	return i.ToTemplateSmallMultiplesOptionsOutputWithContext(context.Background())
}

func (i TemplateSmallMultiplesOptionsArgs) ToTemplateSmallMultiplesOptionsOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesOptionsOutput)
}

func (i TemplateSmallMultiplesOptionsArgs) ToTemplateSmallMultiplesOptionsPtrOutput() TemplateSmallMultiplesOptionsPtrOutput {
	return i.ToTemplateSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSmallMultiplesOptionsArgs) ToTemplateSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesOptionsOutput).ToTemplateSmallMultiplesOptionsPtrOutputWithContext(ctx)
}

// TemplateSmallMultiplesOptionsPtrInput is an input type that accepts TemplateSmallMultiplesOptionsArgs, TemplateSmallMultiplesOptionsPtr and TemplateSmallMultiplesOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSmallMultiplesOptionsPtrInput` via:
//
//	        TemplateSmallMultiplesOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSmallMultiplesOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSmallMultiplesOptionsPtrOutput() TemplateSmallMultiplesOptionsPtrOutput
	ToTemplateSmallMultiplesOptionsPtrOutputWithContext(context.Context) TemplateSmallMultiplesOptionsPtrOutput
}

type templateSmallMultiplesOptionsPtrType TemplateSmallMultiplesOptionsArgs

func TemplateSmallMultiplesOptionsPtr(v *TemplateSmallMultiplesOptionsArgs) TemplateSmallMultiplesOptionsPtrInput {
	return (*templateSmallMultiplesOptionsPtrType)(v)
}

func (*templateSmallMultiplesOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesOptions)(nil)).Elem()
}

func (i *templateSmallMultiplesOptionsPtrType) ToTemplateSmallMultiplesOptionsPtrOutput() TemplateSmallMultiplesOptionsPtrOutput {
	return i.ToTemplateSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSmallMultiplesOptionsPtrType) ToTemplateSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSmallMultiplesOptionsPtrOutput)
}

type TemplateSmallMultiplesOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSmallMultiplesOptions)(nil)).Elem()
}

func (o TemplateSmallMultiplesOptionsOutput) ToTemplateSmallMultiplesOptionsOutput() TemplateSmallMultiplesOptionsOutput {
	return o
}

func (o TemplateSmallMultiplesOptionsOutput) ToTemplateSmallMultiplesOptionsOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsOutput {
	return o
}

func (o TemplateSmallMultiplesOptionsOutput) ToTemplateSmallMultiplesOptionsPtrOutput() TemplateSmallMultiplesOptionsPtrOutput {
	return o.ToTemplateSmallMultiplesOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSmallMultiplesOptionsOutput) ToTemplateSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSmallMultiplesOptions) *TemplateSmallMultiplesOptions {
		return &v
	}).(TemplateSmallMultiplesOptionsPtrOutput)
}

func (o TemplateSmallMultiplesOptionsOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesOptions) *float64 { return v.MaxVisibleColumns }).(pulumi.Float64PtrOutput)
}

func (o TemplateSmallMultiplesOptionsOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesOptions) *float64 { return v.MaxVisibleRows }).(pulumi.Float64PtrOutput)
}

func (o TemplateSmallMultiplesOptionsOutput) PanelConfiguration() TemplatePanelConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesOptions) *TemplatePanelConfiguration { return v.PanelConfiguration }).(TemplatePanelConfigurationPtrOutput)
}

func (o TemplateSmallMultiplesOptionsOutput) XAxis() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesOptions) *TemplateSmallMultiplesAxisProperties { return v.XAxis }).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

func (o TemplateSmallMultiplesOptionsOutput) YAxis() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ApplyT(func(v TemplateSmallMultiplesOptions) *TemplateSmallMultiplesAxisProperties { return v.YAxis }).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

type TemplateSmallMultiplesOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSmallMultiplesOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSmallMultiplesOptions)(nil)).Elem()
}

func (o TemplateSmallMultiplesOptionsPtrOutput) ToTemplateSmallMultiplesOptionsPtrOutput() TemplateSmallMultiplesOptionsPtrOutput {
	return o
}

func (o TemplateSmallMultiplesOptionsPtrOutput) ToTemplateSmallMultiplesOptionsPtrOutputWithContext(ctx context.Context) TemplateSmallMultiplesOptionsPtrOutput {
	return o
}

func (o TemplateSmallMultiplesOptionsPtrOutput) Elem() TemplateSmallMultiplesOptionsOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) TemplateSmallMultiplesOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSmallMultiplesOptions
		return ret
	}).(TemplateSmallMultiplesOptionsOutput)
}

func (o TemplateSmallMultiplesOptionsPtrOutput) MaxVisibleColumns() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleColumns
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateSmallMultiplesOptionsPtrOutput) MaxVisibleRows() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxVisibleRows
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateSmallMultiplesOptionsPtrOutput) PanelConfiguration() TemplatePanelConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) *TemplatePanelConfiguration {
		if v == nil {
			return nil
		}
		return v.PanelConfiguration
	}).(TemplatePanelConfigurationPtrOutput)
}

func (o TemplateSmallMultiplesOptionsPtrOutput) XAxis() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) *TemplateSmallMultiplesAxisProperties {
		if v == nil {
			return nil
		}
		return v.XAxis
	}).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

func (o TemplateSmallMultiplesOptionsPtrOutput) YAxis() TemplateSmallMultiplesAxisPropertiesPtrOutput {
	return o.ApplyT(func(v *TemplateSmallMultiplesOptions) *TemplateSmallMultiplesAxisProperties {
		if v == nil {
			return nil
		}
		return v.YAxis
	}).(TemplateSmallMultiplesAxisPropertiesPtrOutput)
}

type TemplateSourceAnalysis struct {
	Arn               string                     `pulumi:"arn"`
	DataSetReferences []TemplateDataSetReference `pulumi:"dataSetReferences"`
}

// TemplateSourceAnalysisInput is an input type that accepts TemplateSourceAnalysisArgs and TemplateSourceAnalysisOutput values.
// You can construct a concrete instance of `TemplateSourceAnalysisInput` via:
//
//	TemplateSourceAnalysisArgs{...}
type TemplateSourceAnalysisInput interface {
	pulumi.Input

	ToTemplateSourceAnalysisOutput() TemplateSourceAnalysisOutput
	ToTemplateSourceAnalysisOutputWithContext(context.Context) TemplateSourceAnalysisOutput
}

type TemplateSourceAnalysisArgs struct {
	Arn               pulumi.StringInput                 `pulumi:"arn"`
	DataSetReferences TemplateDataSetReferenceArrayInput `pulumi:"dataSetReferences"`
}

func (TemplateSourceAnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceAnalysis)(nil)).Elem()
}

func (i TemplateSourceAnalysisArgs) ToTemplateSourceAnalysisOutput() TemplateSourceAnalysisOutput {
	return i.ToTemplateSourceAnalysisOutputWithContext(context.Background())
}

func (i TemplateSourceAnalysisArgs) ToTemplateSourceAnalysisOutputWithContext(ctx context.Context) TemplateSourceAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceAnalysisOutput)
}

func (i TemplateSourceAnalysisArgs) ToTemplateSourceAnalysisPtrOutput() TemplateSourceAnalysisPtrOutput {
	return i.ToTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (i TemplateSourceAnalysisArgs) ToTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateSourceAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceAnalysisOutput).ToTemplateSourceAnalysisPtrOutputWithContext(ctx)
}

// TemplateSourceAnalysisPtrInput is an input type that accepts TemplateSourceAnalysisArgs, TemplateSourceAnalysisPtr and TemplateSourceAnalysisPtrOutput values.
// You can construct a concrete instance of `TemplateSourceAnalysisPtrInput` via:
//
//	        TemplateSourceAnalysisArgs{...}
//
//	or:
//
//	        nil
type TemplateSourceAnalysisPtrInput interface {
	pulumi.Input

	ToTemplateSourceAnalysisPtrOutput() TemplateSourceAnalysisPtrOutput
	ToTemplateSourceAnalysisPtrOutputWithContext(context.Context) TemplateSourceAnalysisPtrOutput
}

type templateSourceAnalysisPtrType TemplateSourceAnalysisArgs

func TemplateSourceAnalysisPtr(v *TemplateSourceAnalysisArgs) TemplateSourceAnalysisPtrInput {
	return (*templateSourceAnalysisPtrType)(v)
}

func (*templateSourceAnalysisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceAnalysis)(nil)).Elem()
}

func (i *templateSourceAnalysisPtrType) ToTemplateSourceAnalysisPtrOutput() TemplateSourceAnalysisPtrOutput {
	return i.ToTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (i *templateSourceAnalysisPtrType) ToTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateSourceAnalysisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceAnalysisPtrOutput)
}

type TemplateSourceAnalysisOutput struct{ *pulumi.OutputState }

func (TemplateSourceAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceAnalysis)(nil)).Elem()
}

func (o TemplateSourceAnalysisOutput) ToTemplateSourceAnalysisOutput() TemplateSourceAnalysisOutput {
	return o
}

func (o TemplateSourceAnalysisOutput) ToTemplateSourceAnalysisOutputWithContext(ctx context.Context) TemplateSourceAnalysisOutput {
	return o
}

func (o TemplateSourceAnalysisOutput) ToTemplateSourceAnalysisPtrOutput() TemplateSourceAnalysisPtrOutput {
	return o.ToTemplateSourceAnalysisPtrOutputWithContext(context.Background())
}

func (o TemplateSourceAnalysisOutput) ToTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateSourceAnalysisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSourceAnalysis) *TemplateSourceAnalysis {
		return &v
	}).(TemplateSourceAnalysisPtrOutput)
}

func (o TemplateSourceAnalysisOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSourceAnalysis) string { return v.Arn }).(pulumi.StringOutput)
}

func (o TemplateSourceAnalysisOutput) DataSetReferences() TemplateDataSetReferenceArrayOutput {
	return o.ApplyT(func(v TemplateSourceAnalysis) []TemplateDataSetReference { return v.DataSetReferences }).(TemplateDataSetReferenceArrayOutput)
}

type TemplateSourceAnalysisPtrOutput struct{ *pulumi.OutputState }

func (TemplateSourceAnalysisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceAnalysis)(nil)).Elem()
}

func (o TemplateSourceAnalysisPtrOutput) ToTemplateSourceAnalysisPtrOutput() TemplateSourceAnalysisPtrOutput {
	return o
}

func (o TemplateSourceAnalysisPtrOutput) ToTemplateSourceAnalysisPtrOutputWithContext(ctx context.Context) TemplateSourceAnalysisPtrOutput {
	return o
}

func (o TemplateSourceAnalysisPtrOutput) Elem() TemplateSourceAnalysisOutput {
	return o.ApplyT(func(v *TemplateSourceAnalysis) TemplateSourceAnalysis {
		if v != nil {
			return *v
		}
		var ret TemplateSourceAnalysis
		return ret
	}).(TemplateSourceAnalysisOutput)
}

func (o TemplateSourceAnalysisPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSourceAnalysis) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o TemplateSourceAnalysisPtrOutput) DataSetReferences() TemplateDataSetReferenceArrayOutput {
	return o.ApplyT(func(v *TemplateSourceAnalysis) []TemplateDataSetReference {
		if v == nil {
			return nil
		}
		return v.DataSetReferences
	}).(TemplateDataSetReferenceArrayOutput)
}

type TemplateSourceEntity struct {
	SourceAnalysis *TemplateSourceAnalysis `pulumi:"sourceAnalysis"`
	SourceTemplate *TemplateSourceTemplate `pulumi:"sourceTemplate"`
}

// TemplateSourceEntityInput is an input type that accepts TemplateSourceEntityArgs and TemplateSourceEntityOutput values.
// You can construct a concrete instance of `TemplateSourceEntityInput` via:
//
//	TemplateSourceEntityArgs{...}
type TemplateSourceEntityInput interface {
	pulumi.Input

	ToTemplateSourceEntityOutput() TemplateSourceEntityOutput
	ToTemplateSourceEntityOutputWithContext(context.Context) TemplateSourceEntityOutput
}

type TemplateSourceEntityArgs struct {
	SourceAnalysis TemplateSourceAnalysisPtrInput `pulumi:"sourceAnalysis"`
	SourceTemplate TemplateSourceTemplatePtrInput `pulumi:"sourceTemplate"`
}

func (TemplateSourceEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceEntity)(nil)).Elem()
}

func (i TemplateSourceEntityArgs) ToTemplateSourceEntityOutput() TemplateSourceEntityOutput {
	return i.ToTemplateSourceEntityOutputWithContext(context.Background())
}

func (i TemplateSourceEntityArgs) ToTemplateSourceEntityOutputWithContext(ctx context.Context) TemplateSourceEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceEntityOutput)
}

func (i TemplateSourceEntityArgs) ToTemplateSourceEntityPtrOutput() TemplateSourceEntityPtrOutput {
	return i.ToTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (i TemplateSourceEntityArgs) ToTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceEntityOutput).ToTemplateSourceEntityPtrOutputWithContext(ctx)
}

// TemplateSourceEntityPtrInput is an input type that accepts TemplateSourceEntityArgs, TemplateSourceEntityPtr and TemplateSourceEntityPtrOutput values.
// You can construct a concrete instance of `TemplateSourceEntityPtrInput` via:
//
//	        TemplateSourceEntityArgs{...}
//
//	or:
//
//	        nil
type TemplateSourceEntityPtrInput interface {
	pulumi.Input

	ToTemplateSourceEntityPtrOutput() TemplateSourceEntityPtrOutput
	ToTemplateSourceEntityPtrOutputWithContext(context.Context) TemplateSourceEntityPtrOutput
}

type templateSourceEntityPtrType TemplateSourceEntityArgs

func TemplateSourceEntityPtr(v *TemplateSourceEntityArgs) TemplateSourceEntityPtrInput {
	return (*templateSourceEntityPtrType)(v)
}

func (*templateSourceEntityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceEntity)(nil)).Elem()
}

func (i *templateSourceEntityPtrType) ToTemplateSourceEntityPtrOutput() TemplateSourceEntityPtrOutput {
	return i.ToTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (i *templateSourceEntityPtrType) ToTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateSourceEntityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceEntityPtrOutput)
}

type TemplateSourceEntityOutput struct{ *pulumi.OutputState }

func (TemplateSourceEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceEntity)(nil)).Elem()
}

func (o TemplateSourceEntityOutput) ToTemplateSourceEntityOutput() TemplateSourceEntityOutput {
	return o
}

func (o TemplateSourceEntityOutput) ToTemplateSourceEntityOutputWithContext(ctx context.Context) TemplateSourceEntityOutput {
	return o
}

func (o TemplateSourceEntityOutput) ToTemplateSourceEntityPtrOutput() TemplateSourceEntityPtrOutput {
	return o.ToTemplateSourceEntityPtrOutputWithContext(context.Background())
}

func (o TemplateSourceEntityOutput) ToTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateSourceEntityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSourceEntity) *TemplateSourceEntity {
		return &v
	}).(TemplateSourceEntityPtrOutput)
}

func (o TemplateSourceEntityOutput) SourceAnalysis() TemplateSourceAnalysisPtrOutput {
	return o.ApplyT(func(v TemplateSourceEntity) *TemplateSourceAnalysis { return v.SourceAnalysis }).(TemplateSourceAnalysisPtrOutput)
}

func (o TemplateSourceEntityOutput) SourceTemplate() TemplateSourceTemplatePtrOutput {
	return o.ApplyT(func(v TemplateSourceEntity) *TemplateSourceTemplate { return v.SourceTemplate }).(TemplateSourceTemplatePtrOutput)
}

type TemplateSourceEntityPtrOutput struct{ *pulumi.OutputState }

func (TemplateSourceEntityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceEntity)(nil)).Elem()
}

func (o TemplateSourceEntityPtrOutput) ToTemplateSourceEntityPtrOutput() TemplateSourceEntityPtrOutput {
	return o
}

func (o TemplateSourceEntityPtrOutput) ToTemplateSourceEntityPtrOutputWithContext(ctx context.Context) TemplateSourceEntityPtrOutput {
	return o
}

func (o TemplateSourceEntityPtrOutput) Elem() TemplateSourceEntityOutput {
	return o.ApplyT(func(v *TemplateSourceEntity) TemplateSourceEntity {
		if v != nil {
			return *v
		}
		var ret TemplateSourceEntity
		return ret
	}).(TemplateSourceEntityOutput)
}

func (o TemplateSourceEntityPtrOutput) SourceAnalysis() TemplateSourceAnalysisPtrOutput {
	return o.ApplyT(func(v *TemplateSourceEntity) *TemplateSourceAnalysis {
		if v == nil {
			return nil
		}
		return v.SourceAnalysis
	}).(TemplateSourceAnalysisPtrOutput)
}

func (o TemplateSourceEntityPtrOutput) SourceTemplate() TemplateSourceTemplatePtrOutput {
	return o.ApplyT(func(v *TemplateSourceEntity) *TemplateSourceTemplate {
		if v == nil {
			return nil
		}
		return v.SourceTemplate
	}).(TemplateSourceTemplatePtrOutput)
}

type TemplateSourceTemplate struct {
	Arn string `pulumi:"arn"`
}

// TemplateSourceTemplateInput is an input type that accepts TemplateSourceTemplateArgs and TemplateSourceTemplateOutput values.
// You can construct a concrete instance of `TemplateSourceTemplateInput` via:
//
//	TemplateSourceTemplateArgs{...}
type TemplateSourceTemplateInput interface {
	pulumi.Input

	ToTemplateSourceTemplateOutput() TemplateSourceTemplateOutput
	ToTemplateSourceTemplateOutputWithContext(context.Context) TemplateSourceTemplateOutput
}

type TemplateSourceTemplateArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (TemplateSourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceTemplate)(nil)).Elem()
}

func (i TemplateSourceTemplateArgs) ToTemplateSourceTemplateOutput() TemplateSourceTemplateOutput {
	return i.ToTemplateSourceTemplateOutputWithContext(context.Background())
}

func (i TemplateSourceTemplateArgs) ToTemplateSourceTemplateOutputWithContext(ctx context.Context) TemplateSourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceTemplateOutput)
}

func (i TemplateSourceTemplateArgs) ToTemplateSourceTemplatePtrOutput() TemplateSourceTemplatePtrOutput {
	return i.ToTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (i TemplateSourceTemplateArgs) ToTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceTemplateOutput).ToTemplateSourceTemplatePtrOutputWithContext(ctx)
}

// TemplateSourceTemplatePtrInput is an input type that accepts TemplateSourceTemplateArgs, TemplateSourceTemplatePtr and TemplateSourceTemplatePtrOutput values.
// You can construct a concrete instance of `TemplateSourceTemplatePtrInput` via:
//
//	        TemplateSourceTemplateArgs{...}
//
//	or:
//
//	        nil
type TemplateSourceTemplatePtrInput interface {
	pulumi.Input

	ToTemplateSourceTemplatePtrOutput() TemplateSourceTemplatePtrOutput
	ToTemplateSourceTemplatePtrOutputWithContext(context.Context) TemplateSourceTemplatePtrOutput
}

type templateSourceTemplatePtrType TemplateSourceTemplateArgs

func TemplateSourceTemplatePtr(v *TemplateSourceTemplateArgs) TemplateSourceTemplatePtrInput {
	return (*templateSourceTemplatePtrType)(v)
}

func (*templateSourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceTemplate)(nil)).Elem()
}

func (i *templateSourceTemplatePtrType) ToTemplateSourceTemplatePtrOutput() TemplateSourceTemplatePtrOutput {
	return i.ToTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (i *templateSourceTemplatePtrType) ToTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateSourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSourceTemplatePtrOutput)
}

type TemplateSourceTemplateOutput struct{ *pulumi.OutputState }

func (TemplateSourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSourceTemplate)(nil)).Elem()
}

func (o TemplateSourceTemplateOutput) ToTemplateSourceTemplateOutput() TemplateSourceTemplateOutput {
	return o
}

func (o TemplateSourceTemplateOutput) ToTemplateSourceTemplateOutputWithContext(ctx context.Context) TemplateSourceTemplateOutput {
	return o
}

func (o TemplateSourceTemplateOutput) ToTemplateSourceTemplatePtrOutput() TemplateSourceTemplatePtrOutput {
	return o.ToTemplateSourceTemplatePtrOutputWithContext(context.Background())
}

func (o TemplateSourceTemplateOutput) ToTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateSourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSourceTemplate) *TemplateSourceTemplate {
		return &v
	}).(TemplateSourceTemplatePtrOutput)
}

func (o TemplateSourceTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateSourceTemplate) string { return v.Arn }).(pulumi.StringOutput)
}

type TemplateSourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (TemplateSourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSourceTemplate)(nil)).Elem()
}

func (o TemplateSourceTemplatePtrOutput) ToTemplateSourceTemplatePtrOutput() TemplateSourceTemplatePtrOutput {
	return o
}

func (o TemplateSourceTemplatePtrOutput) ToTemplateSourceTemplatePtrOutputWithContext(ctx context.Context) TemplateSourceTemplatePtrOutput {
	return o
}

func (o TemplateSourceTemplatePtrOutput) Elem() TemplateSourceTemplateOutput {
	return o.ApplyT(func(v *TemplateSourceTemplate) TemplateSourceTemplate {
		if v != nil {
			return *v
		}
		var ret TemplateSourceTemplate
		return ret
	}).(TemplateSourceTemplateOutput)
}

func (o TemplateSourceTemplatePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSourceTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

type TemplateSpacing struct {
	// String based length that is composed of value and unit
	Bottom *string `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left *string `pulumi:"left"`
	// String based length that is composed of value and unit
	Right *string `pulumi:"right"`
	// String based length that is composed of value and unit
	Top *string `pulumi:"top"`
}

// TemplateSpacingInput is an input type that accepts TemplateSpacingArgs and TemplateSpacingOutput values.
// You can construct a concrete instance of `TemplateSpacingInput` via:
//
//	TemplateSpacingArgs{...}
type TemplateSpacingInput interface {
	pulumi.Input

	ToTemplateSpacingOutput() TemplateSpacingOutput
	ToTemplateSpacingOutputWithContext(context.Context) TemplateSpacingOutput
}

type TemplateSpacingArgs struct {
	// String based length that is composed of value and unit
	Bottom pulumi.StringPtrInput `pulumi:"bottom"`
	// String based length that is composed of value and unit
	Left pulumi.StringPtrInput `pulumi:"left"`
	// String based length that is composed of value and unit
	Right pulumi.StringPtrInput `pulumi:"right"`
	// String based length that is composed of value and unit
	Top pulumi.StringPtrInput `pulumi:"top"`
}

func (TemplateSpacingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSpacing)(nil)).Elem()
}

func (i TemplateSpacingArgs) ToTemplateSpacingOutput() TemplateSpacingOutput {
	return i.ToTemplateSpacingOutputWithContext(context.Background())
}

func (i TemplateSpacingArgs) ToTemplateSpacingOutputWithContext(ctx context.Context) TemplateSpacingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSpacingOutput)
}

func (i TemplateSpacingArgs) ToTemplateSpacingPtrOutput() TemplateSpacingPtrOutput {
	return i.ToTemplateSpacingPtrOutputWithContext(context.Background())
}

func (i TemplateSpacingArgs) ToTemplateSpacingPtrOutputWithContext(ctx context.Context) TemplateSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSpacingOutput).ToTemplateSpacingPtrOutputWithContext(ctx)
}

// TemplateSpacingPtrInput is an input type that accepts TemplateSpacingArgs, TemplateSpacingPtr and TemplateSpacingPtrOutput values.
// You can construct a concrete instance of `TemplateSpacingPtrInput` via:
//
//	        TemplateSpacingArgs{...}
//
//	or:
//
//	        nil
type TemplateSpacingPtrInput interface {
	pulumi.Input

	ToTemplateSpacingPtrOutput() TemplateSpacingPtrOutput
	ToTemplateSpacingPtrOutputWithContext(context.Context) TemplateSpacingPtrOutput
}

type templateSpacingPtrType TemplateSpacingArgs

func TemplateSpacingPtr(v *TemplateSpacingArgs) TemplateSpacingPtrInput {
	return (*templateSpacingPtrType)(v)
}

func (*templateSpacingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSpacing)(nil)).Elem()
}

func (i *templateSpacingPtrType) ToTemplateSpacingPtrOutput() TemplateSpacingPtrOutput {
	return i.ToTemplateSpacingPtrOutputWithContext(context.Background())
}

func (i *templateSpacingPtrType) ToTemplateSpacingPtrOutputWithContext(ctx context.Context) TemplateSpacingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSpacingPtrOutput)
}

type TemplateSpacingOutput struct{ *pulumi.OutputState }

func (TemplateSpacingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSpacing)(nil)).Elem()
}

func (o TemplateSpacingOutput) ToTemplateSpacingOutput() TemplateSpacingOutput {
	return o
}

func (o TemplateSpacingOutput) ToTemplateSpacingOutputWithContext(ctx context.Context) TemplateSpacingOutput {
	return o
}

func (o TemplateSpacingOutput) ToTemplateSpacingPtrOutput() TemplateSpacingPtrOutput {
	return o.ToTemplateSpacingPtrOutputWithContext(context.Background())
}

func (o TemplateSpacingOutput) ToTemplateSpacingPtrOutputWithContext(ctx context.Context) TemplateSpacingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSpacing) *TemplateSpacing {
		return &v
	}).(TemplateSpacingPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSpacing) *string { return v.Bottom }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSpacing) *string { return v.Left }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSpacing) *string { return v.Right }).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSpacing) *string { return v.Top }).(pulumi.StringPtrOutput)
}

type TemplateSpacingPtrOutput struct{ *pulumi.OutputState }

func (TemplateSpacingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSpacing)(nil)).Elem()
}

func (o TemplateSpacingPtrOutput) ToTemplateSpacingPtrOutput() TemplateSpacingPtrOutput {
	return o
}

func (o TemplateSpacingPtrOutput) ToTemplateSpacingPtrOutputWithContext(ctx context.Context) TemplateSpacingPtrOutput {
	return o
}

func (o TemplateSpacingPtrOutput) Elem() TemplateSpacingOutput {
	return o.ApplyT(func(v *TemplateSpacing) TemplateSpacing {
		if v != nil {
			return *v
		}
		var ret TemplateSpacing
		return ret
	}).(TemplateSpacingOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingPtrOutput) Bottom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingPtrOutput) Left() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Left
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingPtrOutput) Right() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Right
	}).(pulumi.StringPtrOutput)
}

// String based length that is composed of value and unit
func (o TemplateSpacingPtrOutput) Top() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSpacing) *string {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.StringPtrOutput)
}

type TemplateStringDefaultValues struct {
	DynamicValue *TemplateDynamicDefaultValue `pulumi:"dynamicValue"`
	StaticValues []string                     `pulumi:"staticValues"`
}

// TemplateStringDefaultValuesInput is an input type that accepts TemplateStringDefaultValuesArgs and TemplateStringDefaultValuesOutput values.
// You can construct a concrete instance of `TemplateStringDefaultValuesInput` via:
//
//	TemplateStringDefaultValuesArgs{...}
type TemplateStringDefaultValuesInput interface {
	pulumi.Input

	ToTemplateStringDefaultValuesOutput() TemplateStringDefaultValuesOutput
	ToTemplateStringDefaultValuesOutputWithContext(context.Context) TemplateStringDefaultValuesOutput
}

type TemplateStringDefaultValuesArgs struct {
	DynamicValue TemplateDynamicDefaultValuePtrInput `pulumi:"dynamicValue"`
	StaticValues pulumi.StringArrayInput             `pulumi:"staticValues"`
}

func (TemplateStringDefaultValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringDefaultValues)(nil)).Elem()
}

func (i TemplateStringDefaultValuesArgs) ToTemplateStringDefaultValuesOutput() TemplateStringDefaultValuesOutput {
	return i.ToTemplateStringDefaultValuesOutputWithContext(context.Background())
}

func (i TemplateStringDefaultValuesArgs) ToTemplateStringDefaultValuesOutputWithContext(ctx context.Context) TemplateStringDefaultValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringDefaultValuesOutput)
}

func (i TemplateStringDefaultValuesArgs) ToTemplateStringDefaultValuesPtrOutput() TemplateStringDefaultValuesPtrOutput {
	return i.ToTemplateStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i TemplateStringDefaultValuesArgs) ToTemplateStringDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringDefaultValuesOutput).ToTemplateStringDefaultValuesPtrOutputWithContext(ctx)
}

// TemplateStringDefaultValuesPtrInput is an input type that accepts TemplateStringDefaultValuesArgs, TemplateStringDefaultValuesPtr and TemplateStringDefaultValuesPtrOutput values.
// You can construct a concrete instance of `TemplateStringDefaultValuesPtrInput` via:
//
//	        TemplateStringDefaultValuesArgs{...}
//
//	or:
//
//	        nil
type TemplateStringDefaultValuesPtrInput interface {
	pulumi.Input

	ToTemplateStringDefaultValuesPtrOutput() TemplateStringDefaultValuesPtrOutput
	ToTemplateStringDefaultValuesPtrOutputWithContext(context.Context) TemplateStringDefaultValuesPtrOutput
}

type templateStringDefaultValuesPtrType TemplateStringDefaultValuesArgs

func TemplateStringDefaultValuesPtr(v *TemplateStringDefaultValuesArgs) TemplateStringDefaultValuesPtrInput {
	return (*templateStringDefaultValuesPtrType)(v)
}

func (*templateStringDefaultValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringDefaultValues)(nil)).Elem()
}

func (i *templateStringDefaultValuesPtrType) ToTemplateStringDefaultValuesPtrOutput() TemplateStringDefaultValuesPtrOutput {
	return i.ToTemplateStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (i *templateStringDefaultValuesPtrType) ToTemplateStringDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateStringDefaultValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringDefaultValuesPtrOutput)
}

type TemplateStringDefaultValuesOutput struct{ *pulumi.OutputState }

func (TemplateStringDefaultValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringDefaultValues)(nil)).Elem()
}

func (o TemplateStringDefaultValuesOutput) ToTemplateStringDefaultValuesOutput() TemplateStringDefaultValuesOutput {
	return o
}

func (o TemplateStringDefaultValuesOutput) ToTemplateStringDefaultValuesOutputWithContext(ctx context.Context) TemplateStringDefaultValuesOutput {
	return o
}

func (o TemplateStringDefaultValuesOutput) ToTemplateStringDefaultValuesPtrOutput() TemplateStringDefaultValuesPtrOutput {
	return o.ToTemplateStringDefaultValuesPtrOutputWithContext(context.Background())
}

func (o TemplateStringDefaultValuesOutput) ToTemplateStringDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateStringDefaultValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateStringDefaultValues) *TemplateStringDefaultValues {
		return &v
	}).(TemplateStringDefaultValuesPtrOutput)
}

func (o TemplateStringDefaultValuesOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v TemplateStringDefaultValues) *TemplateDynamicDefaultValue { return v.DynamicValue }).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateStringDefaultValuesOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateStringDefaultValues) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type TemplateStringDefaultValuesPtrOutput struct{ *pulumi.OutputState }

func (TemplateStringDefaultValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringDefaultValues)(nil)).Elem()
}

func (o TemplateStringDefaultValuesPtrOutput) ToTemplateStringDefaultValuesPtrOutput() TemplateStringDefaultValuesPtrOutput {
	return o
}

func (o TemplateStringDefaultValuesPtrOutput) ToTemplateStringDefaultValuesPtrOutputWithContext(ctx context.Context) TemplateStringDefaultValuesPtrOutput {
	return o
}

func (o TemplateStringDefaultValuesPtrOutput) Elem() TemplateStringDefaultValuesOutput {
	return o.ApplyT(func(v *TemplateStringDefaultValues) TemplateStringDefaultValues {
		if v != nil {
			return *v
		}
		var ret TemplateStringDefaultValues
		return ret
	}).(TemplateStringDefaultValuesOutput)
}

func (o TemplateStringDefaultValuesPtrOutput) DynamicValue() TemplateDynamicDefaultValuePtrOutput {
	return o.ApplyT(func(v *TemplateStringDefaultValues) *TemplateDynamicDefaultValue {
		if v == nil {
			return nil
		}
		return v.DynamicValue
	}).(TemplateDynamicDefaultValuePtrOutput)
}

func (o TemplateStringDefaultValuesPtrOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateStringDefaultValues) []string {
		if v == nil {
			return nil
		}
		return v.StaticValues
	}).(pulumi.StringArrayOutput)
}

type TemplateStringFormatConfiguration struct {
	NullValueFormatConfiguration *TemplateNullValueFormatConfiguration `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   *TemplateNumericFormatConfiguration   `pulumi:"numericFormatConfiguration"`
}

// TemplateStringFormatConfigurationInput is an input type that accepts TemplateStringFormatConfigurationArgs and TemplateStringFormatConfigurationOutput values.
// You can construct a concrete instance of `TemplateStringFormatConfigurationInput` via:
//
//	TemplateStringFormatConfigurationArgs{...}
type TemplateStringFormatConfigurationInput interface {
	pulumi.Input

	ToTemplateStringFormatConfigurationOutput() TemplateStringFormatConfigurationOutput
	ToTemplateStringFormatConfigurationOutputWithContext(context.Context) TemplateStringFormatConfigurationOutput
}

type TemplateStringFormatConfigurationArgs struct {
	NullValueFormatConfiguration TemplateNullValueFormatConfigurationPtrInput `pulumi:"nullValueFormatConfiguration"`
	NumericFormatConfiguration   TemplateNumericFormatConfigurationPtrInput   `pulumi:"numericFormatConfiguration"`
}

func (TemplateStringFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringFormatConfiguration)(nil)).Elem()
}

func (i TemplateStringFormatConfigurationArgs) ToTemplateStringFormatConfigurationOutput() TemplateStringFormatConfigurationOutput {
	return i.ToTemplateStringFormatConfigurationOutputWithContext(context.Background())
}

func (i TemplateStringFormatConfigurationArgs) ToTemplateStringFormatConfigurationOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringFormatConfigurationOutput)
}

func (i TemplateStringFormatConfigurationArgs) ToTemplateStringFormatConfigurationPtrOutput() TemplateStringFormatConfigurationPtrOutput {
	return i.ToTemplateStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateStringFormatConfigurationArgs) ToTemplateStringFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringFormatConfigurationOutput).ToTemplateStringFormatConfigurationPtrOutputWithContext(ctx)
}

// TemplateStringFormatConfigurationPtrInput is an input type that accepts TemplateStringFormatConfigurationArgs, TemplateStringFormatConfigurationPtr and TemplateStringFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateStringFormatConfigurationPtrInput` via:
//
//	        TemplateStringFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateStringFormatConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateStringFormatConfigurationPtrOutput() TemplateStringFormatConfigurationPtrOutput
	ToTemplateStringFormatConfigurationPtrOutputWithContext(context.Context) TemplateStringFormatConfigurationPtrOutput
}

type templateStringFormatConfigurationPtrType TemplateStringFormatConfigurationArgs

func TemplateStringFormatConfigurationPtr(v *TemplateStringFormatConfigurationArgs) TemplateStringFormatConfigurationPtrInput {
	return (*templateStringFormatConfigurationPtrType)(v)
}

func (*templateStringFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringFormatConfiguration)(nil)).Elem()
}

func (i *templateStringFormatConfigurationPtrType) ToTemplateStringFormatConfigurationPtrOutput() TemplateStringFormatConfigurationPtrOutput {
	return i.ToTemplateStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateStringFormatConfigurationPtrType) ToTemplateStringFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringFormatConfigurationPtrOutput)
}

type TemplateStringFormatConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateStringFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringFormatConfiguration)(nil)).Elem()
}

func (o TemplateStringFormatConfigurationOutput) ToTemplateStringFormatConfigurationOutput() TemplateStringFormatConfigurationOutput {
	return o
}

func (o TemplateStringFormatConfigurationOutput) ToTemplateStringFormatConfigurationOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationOutput {
	return o
}

func (o TemplateStringFormatConfigurationOutput) ToTemplateStringFormatConfigurationPtrOutput() TemplateStringFormatConfigurationPtrOutput {
	return o.ToTemplateStringFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateStringFormatConfigurationOutput) ToTemplateStringFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateStringFormatConfiguration) *TemplateStringFormatConfiguration {
		return &v
	}).(TemplateStringFormatConfigurationPtrOutput)
}

func (o TemplateStringFormatConfigurationOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateStringFormatConfiguration) *TemplateNullValueFormatConfiguration {
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateStringFormatConfigurationOutput) NumericFormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateStringFormatConfiguration) *TemplateNumericFormatConfiguration {
		return v.NumericFormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateStringFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateStringFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringFormatConfiguration)(nil)).Elem()
}

func (o TemplateStringFormatConfigurationPtrOutput) ToTemplateStringFormatConfigurationPtrOutput() TemplateStringFormatConfigurationPtrOutput {
	return o
}

func (o TemplateStringFormatConfigurationPtrOutput) ToTemplateStringFormatConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringFormatConfigurationPtrOutput {
	return o
}

func (o TemplateStringFormatConfigurationPtrOutput) Elem() TemplateStringFormatConfigurationOutput {
	return o.ApplyT(func(v *TemplateStringFormatConfiguration) TemplateStringFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateStringFormatConfiguration
		return ret
	}).(TemplateStringFormatConfigurationOutput)
}

func (o TemplateStringFormatConfigurationPtrOutput) NullValueFormatConfiguration() TemplateNullValueFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateStringFormatConfiguration) *TemplateNullValueFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NullValueFormatConfiguration
	}).(TemplateNullValueFormatConfigurationPtrOutput)
}

func (o TemplateStringFormatConfigurationPtrOutput) NumericFormatConfiguration() TemplateNumericFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateStringFormatConfiguration) *TemplateNumericFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.NumericFormatConfiguration
	}).(TemplateNumericFormatConfigurationPtrOutput)
}

type TemplateStringParameterDeclaration struct {
	DefaultValues           *TemplateStringDefaultValues               `pulumi:"defaultValues"`
	MappedDataSetParameters []TemplateMappedDataSetParameter           `pulumi:"mappedDataSetParameters"`
	Name                    string                                     `pulumi:"name"`
	ParameterValueType      TemplateParameterValueType                 `pulumi:"parameterValueType"`
	ValueWhenUnset          *TemplateStringValueWhenUnsetConfiguration `pulumi:"valueWhenUnset"`
}

// TemplateStringParameterDeclarationInput is an input type that accepts TemplateStringParameterDeclarationArgs and TemplateStringParameterDeclarationOutput values.
// You can construct a concrete instance of `TemplateStringParameterDeclarationInput` via:
//
//	TemplateStringParameterDeclarationArgs{...}
type TemplateStringParameterDeclarationInput interface {
	pulumi.Input

	ToTemplateStringParameterDeclarationOutput() TemplateStringParameterDeclarationOutput
	ToTemplateStringParameterDeclarationOutputWithContext(context.Context) TemplateStringParameterDeclarationOutput
}

type TemplateStringParameterDeclarationArgs struct {
	DefaultValues           TemplateStringDefaultValuesPtrInput               `pulumi:"defaultValues"`
	MappedDataSetParameters TemplateMappedDataSetParameterArrayInput          `pulumi:"mappedDataSetParameters"`
	Name                    pulumi.StringInput                                `pulumi:"name"`
	ParameterValueType      TemplateParameterValueTypeInput                   `pulumi:"parameterValueType"`
	ValueWhenUnset          TemplateStringValueWhenUnsetConfigurationPtrInput `pulumi:"valueWhenUnset"`
}

func (TemplateStringParameterDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringParameterDeclaration)(nil)).Elem()
}

func (i TemplateStringParameterDeclarationArgs) ToTemplateStringParameterDeclarationOutput() TemplateStringParameterDeclarationOutput {
	return i.ToTemplateStringParameterDeclarationOutputWithContext(context.Background())
}

func (i TemplateStringParameterDeclarationArgs) ToTemplateStringParameterDeclarationOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringParameterDeclarationOutput)
}

func (i TemplateStringParameterDeclarationArgs) ToTemplateStringParameterDeclarationPtrOutput() TemplateStringParameterDeclarationPtrOutput {
	return i.ToTemplateStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i TemplateStringParameterDeclarationArgs) ToTemplateStringParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringParameterDeclarationOutput).ToTemplateStringParameterDeclarationPtrOutputWithContext(ctx)
}

// TemplateStringParameterDeclarationPtrInput is an input type that accepts TemplateStringParameterDeclarationArgs, TemplateStringParameterDeclarationPtr and TemplateStringParameterDeclarationPtrOutput values.
// You can construct a concrete instance of `TemplateStringParameterDeclarationPtrInput` via:
//
//	        TemplateStringParameterDeclarationArgs{...}
//
//	or:
//
//	        nil
type TemplateStringParameterDeclarationPtrInput interface {
	pulumi.Input

	ToTemplateStringParameterDeclarationPtrOutput() TemplateStringParameterDeclarationPtrOutput
	ToTemplateStringParameterDeclarationPtrOutputWithContext(context.Context) TemplateStringParameterDeclarationPtrOutput
}

type templateStringParameterDeclarationPtrType TemplateStringParameterDeclarationArgs

func TemplateStringParameterDeclarationPtr(v *TemplateStringParameterDeclarationArgs) TemplateStringParameterDeclarationPtrInput {
	return (*templateStringParameterDeclarationPtrType)(v)
}

func (*templateStringParameterDeclarationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringParameterDeclaration)(nil)).Elem()
}

func (i *templateStringParameterDeclarationPtrType) ToTemplateStringParameterDeclarationPtrOutput() TemplateStringParameterDeclarationPtrOutput {
	return i.ToTemplateStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (i *templateStringParameterDeclarationPtrType) ToTemplateStringParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringParameterDeclarationPtrOutput)
}

type TemplateStringParameterDeclarationOutput struct{ *pulumi.OutputState }

func (TemplateStringParameterDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringParameterDeclaration)(nil)).Elem()
}

func (o TemplateStringParameterDeclarationOutput) ToTemplateStringParameterDeclarationOutput() TemplateStringParameterDeclarationOutput {
	return o
}

func (o TemplateStringParameterDeclarationOutput) ToTemplateStringParameterDeclarationOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationOutput {
	return o
}

func (o TemplateStringParameterDeclarationOutput) ToTemplateStringParameterDeclarationPtrOutput() TemplateStringParameterDeclarationPtrOutput {
	return o.ToTemplateStringParameterDeclarationPtrOutputWithContext(context.Background())
}

func (o TemplateStringParameterDeclarationOutput) ToTemplateStringParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateStringParameterDeclaration) *TemplateStringParameterDeclaration {
		return &v
	}).(TemplateStringParameterDeclarationPtrOutput)
}

func (o TemplateStringParameterDeclarationOutput) DefaultValues() TemplateStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v TemplateStringParameterDeclaration) *TemplateStringDefaultValues { return v.DefaultValues }).(TemplateStringDefaultValuesPtrOutput)
}

func (o TemplateStringParameterDeclarationOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v TemplateStringParameterDeclaration) []TemplateMappedDataSetParameter {
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateStringParameterDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateStringParameterDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateStringParameterDeclarationOutput) ParameterValueType() TemplateParameterValueTypeOutput {
	return o.ApplyT(func(v TemplateStringParameterDeclaration) TemplateParameterValueType { return v.ParameterValueType }).(TemplateParameterValueTypeOutput)
}

func (o TemplateStringParameterDeclarationOutput) ValueWhenUnset() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateStringParameterDeclaration) *TemplateStringValueWhenUnsetConfiguration {
		return v.ValueWhenUnset
	}).(TemplateStringValueWhenUnsetConfigurationPtrOutput)
}

type TemplateStringParameterDeclarationPtrOutput struct{ *pulumi.OutputState }

func (TemplateStringParameterDeclarationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringParameterDeclaration)(nil)).Elem()
}

func (o TemplateStringParameterDeclarationPtrOutput) ToTemplateStringParameterDeclarationPtrOutput() TemplateStringParameterDeclarationPtrOutput {
	return o
}

func (o TemplateStringParameterDeclarationPtrOutput) ToTemplateStringParameterDeclarationPtrOutputWithContext(ctx context.Context) TemplateStringParameterDeclarationPtrOutput {
	return o
}

func (o TemplateStringParameterDeclarationPtrOutput) Elem() TemplateStringParameterDeclarationOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) TemplateStringParameterDeclaration {
		if v != nil {
			return *v
		}
		var ret TemplateStringParameterDeclaration
		return ret
	}).(TemplateStringParameterDeclarationOutput)
}

func (o TemplateStringParameterDeclarationPtrOutput) DefaultValues() TemplateStringDefaultValuesPtrOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) *TemplateStringDefaultValues {
		if v == nil {
			return nil
		}
		return v.DefaultValues
	}).(TemplateStringDefaultValuesPtrOutput)
}

func (o TemplateStringParameterDeclarationPtrOutput) MappedDataSetParameters() TemplateMappedDataSetParameterArrayOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) []TemplateMappedDataSetParameter {
		if v == nil {
			return nil
		}
		return v.MappedDataSetParameters
	}).(TemplateMappedDataSetParameterArrayOutput)
}

func (o TemplateStringParameterDeclarationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateStringParameterDeclarationPtrOutput) ParameterValueType() TemplateParameterValueTypePtrOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) *TemplateParameterValueType {
		if v == nil {
			return nil
		}
		return &v.ParameterValueType
	}).(TemplateParameterValueTypePtrOutput)
}

func (o TemplateStringParameterDeclarationPtrOutput) ValueWhenUnset() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateStringParameterDeclaration) *TemplateStringValueWhenUnsetConfiguration {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnset
	}).(TemplateStringValueWhenUnsetConfigurationPtrOutput)
}

type TemplateStringValueWhenUnsetConfiguration struct {
	CustomValue          *string                       `pulumi:"customValue"`
	ValueWhenUnsetOption *TemplateValueWhenUnsetOption `pulumi:"valueWhenUnsetOption"`
}

// TemplateStringValueWhenUnsetConfigurationInput is an input type that accepts TemplateStringValueWhenUnsetConfigurationArgs and TemplateStringValueWhenUnsetConfigurationOutput values.
// You can construct a concrete instance of `TemplateStringValueWhenUnsetConfigurationInput` via:
//
//	TemplateStringValueWhenUnsetConfigurationArgs{...}
type TemplateStringValueWhenUnsetConfigurationInput interface {
	pulumi.Input

	ToTemplateStringValueWhenUnsetConfigurationOutput() TemplateStringValueWhenUnsetConfigurationOutput
	ToTemplateStringValueWhenUnsetConfigurationOutputWithContext(context.Context) TemplateStringValueWhenUnsetConfigurationOutput
}

type TemplateStringValueWhenUnsetConfigurationArgs struct {
	CustomValue          pulumi.StringPtrInput                `pulumi:"customValue"`
	ValueWhenUnsetOption TemplateValueWhenUnsetOptionPtrInput `pulumi:"valueWhenUnsetOption"`
}

func (TemplateStringValueWhenUnsetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i TemplateStringValueWhenUnsetConfigurationArgs) ToTemplateStringValueWhenUnsetConfigurationOutput() TemplateStringValueWhenUnsetConfigurationOutput {
	return i.ToTemplateStringValueWhenUnsetConfigurationOutputWithContext(context.Background())
}

func (i TemplateStringValueWhenUnsetConfigurationArgs) ToTemplateStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringValueWhenUnsetConfigurationOutput)
}

func (i TemplateStringValueWhenUnsetConfigurationArgs) ToTemplateStringValueWhenUnsetConfigurationPtrOutput() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateStringValueWhenUnsetConfigurationArgs) ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringValueWhenUnsetConfigurationOutput).ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx)
}

// TemplateStringValueWhenUnsetConfigurationPtrInput is an input type that accepts TemplateStringValueWhenUnsetConfigurationArgs, TemplateStringValueWhenUnsetConfigurationPtr and TemplateStringValueWhenUnsetConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateStringValueWhenUnsetConfigurationPtrInput` via:
//
//	        TemplateStringValueWhenUnsetConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateStringValueWhenUnsetConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateStringValueWhenUnsetConfigurationPtrOutput() TemplateStringValueWhenUnsetConfigurationPtrOutput
	ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Context) TemplateStringValueWhenUnsetConfigurationPtrOutput
}

type templateStringValueWhenUnsetConfigurationPtrType TemplateStringValueWhenUnsetConfigurationArgs

func TemplateStringValueWhenUnsetConfigurationPtr(v *TemplateStringValueWhenUnsetConfigurationArgs) TemplateStringValueWhenUnsetConfigurationPtrInput {
	return (*templateStringValueWhenUnsetConfigurationPtrType)(v)
}

func (*templateStringValueWhenUnsetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (i *templateStringValueWhenUnsetConfigurationPtrType) ToTemplateStringValueWhenUnsetConfigurationPtrOutput() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return i.ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateStringValueWhenUnsetConfigurationPtrType) ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateStringValueWhenUnsetConfigurationPtrOutput)
}

type TemplateStringValueWhenUnsetConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateStringValueWhenUnsetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) ToTemplateStringValueWhenUnsetConfigurationOutput() TemplateStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) ToTemplateStringValueWhenUnsetConfigurationOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationOutput {
	return o
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) ToTemplateStringValueWhenUnsetConfigurationPtrOutput() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o.ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateStringValueWhenUnsetConfiguration) *TemplateStringValueWhenUnsetConfiguration {
		return &v
	}).(TemplateStringValueWhenUnsetConfigurationPtrOutput)
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateStringValueWhenUnsetConfiguration) *string { return v.CustomValue }).(pulumi.StringPtrOutput)
}

func (o TemplateStringValueWhenUnsetConfigurationOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v TemplateStringValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateStringValueWhenUnsetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateStringValueWhenUnsetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateStringValueWhenUnsetConfiguration)(nil)).Elem()
}

func (o TemplateStringValueWhenUnsetConfigurationPtrOutput) ToTemplateStringValueWhenUnsetConfigurationPtrOutput() TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateStringValueWhenUnsetConfigurationPtrOutput) ToTemplateStringValueWhenUnsetConfigurationPtrOutputWithContext(ctx context.Context) TemplateStringValueWhenUnsetConfigurationPtrOutput {
	return o
}

func (o TemplateStringValueWhenUnsetConfigurationPtrOutput) Elem() TemplateStringValueWhenUnsetConfigurationOutput {
	return o.ApplyT(func(v *TemplateStringValueWhenUnsetConfiguration) TemplateStringValueWhenUnsetConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateStringValueWhenUnsetConfiguration
		return ret
	}).(TemplateStringValueWhenUnsetConfigurationOutput)
}

func (o TemplateStringValueWhenUnsetConfigurationPtrOutput) CustomValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateStringValueWhenUnsetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomValue
	}).(pulumi.StringPtrOutput)
}

func (o TemplateStringValueWhenUnsetConfigurationPtrOutput) ValueWhenUnsetOption() TemplateValueWhenUnsetOptionPtrOutput {
	return o.ApplyT(func(v *TemplateStringValueWhenUnsetConfiguration) *TemplateValueWhenUnsetOption {
		if v == nil {
			return nil
		}
		return v.ValueWhenUnsetOption
	}).(TemplateValueWhenUnsetOptionPtrOutput)
}

type TemplateSubtotalOptions struct {
	CustomLabel           *string                                  `pulumi:"customLabel"`
	FieldLevel            *TemplatePivotTableSubtotalLevel         `pulumi:"fieldLevel"`
	FieldLevelOptions     []TemplatePivotTableFieldSubtotalOptions `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle *TemplateTableCellStyle                  `pulumi:"metricHeaderCellStyle"`
	StyleTargets          []TemplateTableStyleTarget               `pulumi:"styleTargets"`
	TotalCellStyle        *TemplateTableCellStyle                  `pulumi:"totalCellStyle"`
	TotalsVisibility      *TemplateVisibility                      `pulumi:"totalsVisibility"`
	ValueCellStyle        *TemplateTableCellStyle                  `pulumi:"valueCellStyle"`
}

// TemplateSubtotalOptionsInput is an input type that accepts TemplateSubtotalOptionsArgs and TemplateSubtotalOptionsOutput values.
// You can construct a concrete instance of `TemplateSubtotalOptionsInput` via:
//
//	TemplateSubtotalOptionsArgs{...}
type TemplateSubtotalOptionsInput interface {
	pulumi.Input

	ToTemplateSubtotalOptionsOutput() TemplateSubtotalOptionsOutput
	ToTemplateSubtotalOptionsOutputWithContext(context.Context) TemplateSubtotalOptionsOutput
}

type TemplateSubtotalOptionsArgs struct {
	CustomLabel           pulumi.StringPtrInput                            `pulumi:"customLabel"`
	FieldLevel            TemplatePivotTableSubtotalLevelPtrInput          `pulumi:"fieldLevel"`
	FieldLevelOptions     TemplatePivotTableFieldSubtotalOptionsArrayInput `pulumi:"fieldLevelOptions"`
	MetricHeaderCellStyle TemplateTableCellStylePtrInput                   `pulumi:"metricHeaderCellStyle"`
	StyleTargets          TemplateTableStyleTargetArrayInput               `pulumi:"styleTargets"`
	TotalCellStyle        TemplateTableCellStylePtrInput                   `pulumi:"totalCellStyle"`
	TotalsVisibility      TemplateVisibilityPtrInput                       `pulumi:"totalsVisibility"`
	ValueCellStyle        TemplateTableCellStylePtrInput                   `pulumi:"valueCellStyle"`
}

func (TemplateSubtotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubtotalOptions)(nil)).Elem()
}

func (i TemplateSubtotalOptionsArgs) ToTemplateSubtotalOptionsOutput() TemplateSubtotalOptionsOutput {
	return i.ToTemplateSubtotalOptionsOutputWithContext(context.Background())
}

func (i TemplateSubtotalOptionsArgs) ToTemplateSubtotalOptionsOutputWithContext(ctx context.Context) TemplateSubtotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubtotalOptionsOutput)
}

func (i TemplateSubtotalOptionsArgs) ToTemplateSubtotalOptionsPtrOutput() TemplateSubtotalOptionsPtrOutput {
	return i.ToTemplateSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateSubtotalOptionsArgs) ToTemplateSubtotalOptionsPtrOutputWithContext(ctx context.Context) TemplateSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubtotalOptionsOutput).ToTemplateSubtotalOptionsPtrOutputWithContext(ctx)
}

// TemplateSubtotalOptionsPtrInput is an input type that accepts TemplateSubtotalOptionsArgs, TemplateSubtotalOptionsPtr and TemplateSubtotalOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateSubtotalOptionsPtrInput` via:
//
//	        TemplateSubtotalOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateSubtotalOptionsPtrInput interface {
	pulumi.Input

	ToTemplateSubtotalOptionsPtrOutput() TemplateSubtotalOptionsPtrOutput
	ToTemplateSubtotalOptionsPtrOutputWithContext(context.Context) TemplateSubtotalOptionsPtrOutput
}

type templateSubtotalOptionsPtrType TemplateSubtotalOptionsArgs

func TemplateSubtotalOptionsPtr(v *TemplateSubtotalOptionsArgs) TemplateSubtotalOptionsPtrInput {
	return (*templateSubtotalOptionsPtrType)(v)
}

func (*templateSubtotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSubtotalOptions)(nil)).Elem()
}

func (i *templateSubtotalOptionsPtrType) ToTemplateSubtotalOptionsPtrOutput() TemplateSubtotalOptionsPtrOutput {
	return i.ToTemplateSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (i *templateSubtotalOptionsPtrType) ToTemplateSubtotalOptionsPtrOutputWithContext(ctx context.Context) TemplateSubtotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubtotalOptionsPtrOutput)
}

type TemplateSubtotalOptionsOutput struct{ *pulumi.OutputState }

func (TemplateSubtotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubtotalOptions)(nil)).Elem()
}

func (o TemplateSubtotalOptionsOutput) ToTemplateSubtotalOptionsOutput() TemplateSubtotalOptionsOutput {
	return o
}

func (o TemplateSubtotalOptionsOutput) ToTemplateSubtotalOptionsOutputWithContext(ctx context.Context) TemplateSubtotalOptionsOutput {
	return o
}

func (o TemplateSubtotalOptionsOutput) ToTemplateSubtotalOptionsPtrOutput() TemplateSubtotalOptionsPtrOutput {
	return o.ToTemplateSubtotalOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateSubtotalOptionsOutput) ToTemplateSubtotalOptionsPtrOutputWithContext(ctx context.Context) TemplateSubtotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSubtotalOptions) *TemplateSubtotalOptions {
		return &v
	}).(TemplateSubtotalOptionsPtrOutput)
}

func (o TemplateSubtotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateSubtotalOptionsOutput) FieldLevel() TemplatePivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *TemplatePivotTableSubtotalLevel { return v.FieldLevel }).(TemplatePivotTableSubtotalLevelPtrOutput)
}

func (o TemplateSubtotalOptionsOutput) FieldLevelOptions() TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) []TemplatePivotTableFieldSubtotalOptions { return v.FieldLevelOptions }).(TemplatePivotTableFieldSubtotalOptionsArrayOutput)
}

func (o TemplateSubtotalOptionsOutput) MetricHeaderCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *TemplateTableCellStyle { return v.MetricHeaderCellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplateSubtotalOptionsOutput) StyleTargets() TemplateTableStyleTargetArrayOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) []TemplateTableStyleTarget { return v.StyleTargets }).(TemplateTableStyleTargetArrayOutput)
}

func (o TemplateSubtotalOptionsOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *TemplateTableCellStyle { return v.TotalCellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplateSubtotalOptionsOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *TemplateVisibility { return v.TotalsVisibility }).(TemplateVisibilityPtrOutput)
}

func (o TemplateSubtotalOptionsOutput) ValueCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateSubtotalOptions) *TemplateTableCellStyle { return v.ValueCellStyle }).(TemplateTableCellStylePtrOutput)
}

type TemplateSubtotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateSubtotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSubtotalOptions)(nil)).Elem()
}

func (o TemplateSubtotalOptionsPtrOutput) ToTemplateSubtotalOptionsPtrOutput() TemplateSubtotalOptionsPtrOutput {
	return o
}

func (o TemplateSubtotalOptionsPtrOutput) ToTemplateSubtotalOptionsPtrOutputWithContext(ctx context.Context) TemplateSubtotalOptionsPtrOutput {
	return o
}

func (o TemplateSubtotalOptionsPtrOutput) Elem() TemplateSubtotalOptionsOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) TemplateSubtotalOptions {
		if v != nil {
			return *v
		}
		var ret TemplateSubtotalOptions
		return ret
	}).(TemplateSubtotalOptionsOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) FieldLevel() TemplatePivotTableSubtotalLevelPtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *TemplatePivotTableSubtotalLevel {
		if v == nil {
			return nil
		}
		return v.FieldLevel
	}).(TemplatePivotTableSubtotalLevelPtrOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) FieldLevelOptions() TemplatePivotTableFieldSubtotalOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) []TemplatePivotTableFieldSubtotalOptions {
		if v == nil {
			return nil
		}
		return v.FieldLevelOptions
	}).(TemplatePivotTableFieldSubtotalOptionsArrayOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) MetricHeaderCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.MetricHeaderCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) StyleTargets() TemplateTableStyleTargetArrayOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) []TemplateTableStyleTarget {
		if v == nil {
			return nil
		}
		return v.StyleTargets
	}).(TemplateTableStyleTargetArrayOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateSubtotalOptionsPtrOutput) ValueCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateSubtotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.ValueCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

type TemplateTableAggregatedFieldWells struct {
	GroupBy []TemplateDimensionField `pulumi:"groupBy"`
	Values  []TemplateMeasureField   `pulumi:"values"`
}

// TemplateTableAggregatedFieldWellsInput is an input type that accepts TemplateTableAggregatedFieldWellsArgs and TemplateTableAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateTableAggregatedFieldWellsInput` via:
//
//	TemplateTableAggregatedFieldWellsArgs{...}
type TemplateTableAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateTableAggregatedFieldWellsOutput() TemplateTableAggregatedFieldWellsOutput
	ToTemplateTableAggregatedFieldWellsOutputWithContext(context.Context) TemplateTableAggregatedFieldWellsOutput
}

type TemplateTableAggregatedFieldWellsArgs struct {
	GroupBy TemplateDimensionFieldArrayInput `pulumi:"groupBy"`
	Values  TemplateMeasureFieldArrayInput   `pulumi:"values"`
}

func (TemplateTableAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateTableAggregatedFieldWellsArgs) ToTemplateTableAggregatedFieldWellsOutput() TemplateTableAggregatedFieldWellsOutput {
	return i.ToTemplateTableAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateTableAggregatedFieldWellsArgs) ToTemplateTableAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableAggregatedFieldWellsOutput)
}

func (i TemplateTableAggregatedFieldWellsArgs) ToTemplateTableAggregatedFieldWellsPtrOutput() TemplateTableAggregatedFieldWellsPtrOutput {
	return i.ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateTableAggregatedFieldWellsArgs) ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableAggregatedFieldWellsOutput).ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateTableAggregatedFieldWellsPtrInput is an input type that accepts TemplateTableAggregatedFieldWellsArgs, TemplateTableAggregatedFieldWellsPtr and TemplateTableAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateTableAggregatedFieldWellsPtrInput` via:
//
//	        TemplateTableAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateTableAggregatedFieldWellsPtrOutput() TemplateTableAggregatedFieldWellsPtrOutput
	ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateTableAggregatedFieldWellsPtrOutput
}

type templateTableAggregatedFieldWellsPtrType TemplateTableAggregatedFieldWellsArgs

func TemplateTableAggregatedFieldWellsPtr(v *TemplateTableAggregatedFieldWellsArgs) TemplateTableAggregatedFieldWellsPtrInput {
	return (*templateTableAggregatedFieldWellsPtrType)(v)
}

func (*templateTableAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableAggregatedFieldWells)(nil)).Elem()
}

func (i *templateTableAggregatedFieldWellsPtrType) ToTemplateTableAggregatedFieldWellsPtrOutput() TemplateTableAggregatedFieldWellsPtrOutput {
	return i.ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateTableAggregatedFieldWellsPtrType) ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableAggregatedFieldWellsPtrOutput)
}

type TemplateTableAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateTableAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTableAggregatedFieldWellsOutput) ToTemplateTableAggregatedFieldWellsOutput() TemplateTableAggregatedFieldWellsOutput {
	return o
}

func (o TemplateTableAggregatedFieldWellsOutput) ToTemplateTableAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsOutput {
	return o
}

func (o TemplateTableAggregatedFieldWellsOutput) ToTemplateTableAggregatedFieldWellsPtrOutput() TemplateTableAggregatedFieldWellsPtrOutput {
	return o.ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateTableAggregatedFieldWellsOutput) ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableAggregatedFieldWells) *TemplateTableAggregatedFieldWells {
		return &v
	}).(TemplateTableAggregatedFieldWellsPtrOutput)
}

func (o TemplateTableAggregatedFieldWellsOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateTableAggregatedFieldWells) []TemplateDimensionField { return v.GroupBy }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateTableAggregatedFieldWellsOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateTableAggregatedFieldWells) []TemplateMeasureField { return v.Values }).(TemplateMeasureFieldArrayOutput)
}

type TemplateTableAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTableAggregatedFieldWellsPtrOutput) ToTemplateTableAggregatedFieldWellsPtrOutput() TemplateTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTableAggregatedFieldWellsPtrOutput) ToTemplateTableAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTableAggregatedFieldWellsPtrOutput) Elem() TemplateTableAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateTableAggregatedFieldWells) TemplateTableAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateTableAggregatedFieldWells
		return ret
	}).(TemplateTableAggregatedFieldWellsOutput)
}

func (o TemplateTableAggregatedFieldWellsPtrOutput) GroupBy() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTableAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateTableAggregatedFieldWellsPtrOutput) Values() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTableAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateTableBorderOptions struct {
	Color     *string                   `pulumi:"color"`
	Style     *TemplateTableBorderStyle `pulumi:"style"`
	Thickness *float64                  `pulumi:"thickness"`
}

// TemplateTableBorderOptionsInput is an input type that accepts TemplateTableBorderOptionsArgs and TemplateTableBorderOptionsOutput values.
// You can construct a concrete instance of `TemplateTableBorderOptionsInput` via:
//
//	TemplateTableBorderOptionsArgs{...}
type TemplateTableBorderOptionsInput interface {
	pulumi.Input

	ToTemplateTableBorderOptionsOutput() TemplateTableBorderOptionsOutput
	ToTemplateTableBorderOptionsOutputWithContext(context.Context) TemplateTableBorderOptionsOutput
}

type TemplateTableBorderOptionsArgs struct {
	Color     pulumi.StringPtrInput            `pulumi:"color"`
	Style     TemplateTableBorderStylePtrInput `pulumi:"style"`
	Thickness pulumi.Float64PtrInput           `pulumi:"thickness"`
}

func (TemplateTableBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableBorderOptions)(nil)).Elem()
}

func (i TemplateTableBorderOptionsArgs) ToTemplateTableBorderOptionsOutput() TemplateTableBorderOptionsOutput {
	return i.ToTemplateTableBorderOptionsOutputWithContext(context.Background())
}

func (i TemplateTableBorderOptionsArgs) ToTemplateTableBorderOptionsOutputWithContext(ctx context.Context) TemplateTableBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableBorderOptionsOutput)
}

func (i TemplateTableBorderOptionsArgs) ToTemplateTableBorderOptionsPtrOutput() TemplateTableBorderOptionsPtrOutput {
	return i.ToTemplateTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTableBorderOptionsArgs) ToTemplateTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableBorderOptionsOutput).ToTemplateTableBorderOptionsPtrOutputWithContext(ctx)
}

// TemplateTableBorderOptionsPtrInput is an input type that accepts TemplateTableBorderOptionsArgs, TemplateTableBorderOptionsPtr and TemplateTableBorderOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTableBorderOptionsPtrInput` via:
//
//	        TemplateTableBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableBorderOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTableBorderOptionsPtrOutput() TemplateTableBorderOptionsPtrOutput
	ToTemplateTableBorderOptionsPtrOutputWithContext(context.Context) TemplateTableBorderOptionsPtrOutput
}

type templateTableBorderOptionsPtrType TemplateTableBorderOptionsArgs

func TemplateTableBorderOptionsPtr(v *TemplateTableBorderOptionsArgs) TemplateTableBorderOptionsPtrInput {
	return (*templateTableBorderOptionsPtrType)(v)
}

func (*templateTableBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableBorderOptions)(nil)).Elem()
}

func (i *templateTableBorderOptionsPtrType) ToTemplateTableBorderOptionsPtrOutput() TemplateTableBorderOptionsPtrOutput {
	return i.ToTemplateTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTableBorderOptionsPtrType) ToTemplateTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableBorderOptionsPtrOutput)
}

type TemplateTableBorderOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTableBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableBorderOptions)(nil)).Elem()
}

func (o TemplateTableBorderOptionsOutput) ToTemplateTableBorderOptionsOutput() TemplateTableBorderOptionsOutput {
	return o
}

func (o TemplateTableBorderOptionsOutput) ToTemplateTableBorderOptionsOutputWithContext(ctx context.Context) TemplateTableBorderOptionsOutput {
	return o
}

func (o TemplateTableBorderOptionsOutput) ToTemplateTableBorderOptionsPtrOutput() TemplateTableBorderOptionsPtrOutput {
	return o.ToTemplateTableBorderOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTableBorderOptionsOutput) ToTemplateTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableBorderOptions) *TemplateTableBorderOptions {
		return &v
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableBorderOptionsOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTableBorderOptions) *string { return v.Color }).(pulumi.StringPtrOutput)
}

func (o TemplateTableBorderOptionsOutput) Style() TemplateTableBorderStylePtrOutput {
	return o.ApplyT(func(v TemplateTableBorderOptions) *TemplateTableBorderStyle { return v.Style }).(TemplateTableBorderStylePtrOutput)
}

func (o TemplateTableBorderOptionsOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTableBorderOptions) *float64 { return v.Thickness }).(pulumi.Float64PtrOutput)
}

type TemplateTableBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableBorderOptions)(nil)).Elem()
}

func (o TemplateTableBorderOptionsPtrOutput) ToTemplateTableBorderOptionsPtrOutput() TemplateTableBorderOptionsPtrOutput {
	return o
}

func (o TemplateTableBorderOptionsPtrOutput) ToTemplateTableBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableBorderOptionsPtrOutput {
	return o
}

func (o TemplateTableBorderOptionsPtrOutput) Elem() TemplateTableBorderOptionsOutput {
	return o.ApplyT(func(v *TemplateTableBorderOptions) TemplateTableBorderOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTableBorderOptions
		return ret
	}).(TemplateTableBorderOptionsOutput)
}

func (o TemplateTableBorderOptionsPtrOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTableBorderOptions) *string {
		if v == nil {
			return nil
		}
		return v.Color
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTableBorderOptionsPtrOutput) Style() TemplateTableBorderStylePtrOutput {
	return o.ApplyT(func(v *TemplateTableBorderOptions) *TemplateTableBorderStyle {
		if v == nil {
			return nil
		}
		return v.Style
	}).(TemplateTableBorderStylePtrOutput)
}

func (o TemplateTableBorderOptionsPtrOutput) Thickness() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTableBorderOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.Thickness
	}).(pulumi.Float64PtrOutput)
}

type TemplateTableCellConditionalFormatting struct {
	FieldId    string                         `pulumi:"fieldId"`
	TextFormat *TemplateTextConditionalFormat `pulumi:"textFormat"`
}

// TemplateTableCellConditionalFormattingInput is an input type that accepts TemplateTableCellConditionalFormattingArgs and TemplateTableCellConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateTableCellConditionalFormattingInput` via:
//
//	TemplateTableCellConditionalFormattingArgs{...}
type TemplateTableCellConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateTableCellConditionalFormattingOutput() TemplateTableCellConditionalFormattingOutput
	ToTemplateTableCellConditionalFormattingOutputWithContext(context.Context) TemplateTableCellConditionalFormattingOutput
}

type TemplateTableCellConditionalFormattingArgs struct {
	FieldId    pulumi.StringInput                    `pulumi:"fieldId"`
	TextFormat TemplateTextConditionalFormatPtrInput `pulumi:"textFormat"`
}

func (TemplateTableCellConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellConditionalFormatting)(nil)).Elem()
}

func (i TemplateTableCellConditionalFormattingArgs) ToTemplateTableCellConditionalFormattingOutput() TemplateTableCellConditionalFormattingOutput {
	return i.ToTemplateTableCellConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateTableCellConditionalFormattingArgs) ToTemplateTableCellConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellConditionalFormattingOutput)
}

func (i TemplateTableCellConditionalFormattingArgs) ToTemplateTableCellConditionalFormattingPtrOutput() TemplateTableCellConditionalFormattingPtrOutput {
	return i.ToTemplateTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateTableCellConditionalFormattingArgs) ToTemplateTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellConditionalFormattingOutput).ToTemplateTableCellConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateTableCellConditionalFormattingPtrInput is an input type that accepts TemplateTableCellConditionalFormattingArgs, TemplateTableCellConditionalFormattingPtr and TemplateTableCellConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateTableCellConditionalFormattingPtrInput` via:
//
//	        TemplateTableCellConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateTableCellConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateTableCellConditionalFormattingPtrOutput() TemplateTableCellConditionalFormattingPtrOutput
	ToTemplateTableCellConditionalFormattingPtrOutputWithContext(context.Context) TemplateTableCellConditionalFormattingPtrOutput
}

type templateTableCellConditionalFormattingPtrType TemplateTableCellConditionalFormattingArgs

func TemplateTableCellConditionalFormattingPtr(v *TemplateTableCellConditionalFormattingArgs) TemplateTableCellConditionalFormattingPtrInput {
	return (*templateTableCellConditionalFormattingPtrType)(v)
}

func (*templateTableCellConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellConditionalFormatting)(nil)).Elem()
}

func (i *templateTableCellConditionalFormattingPtrType) ToTemplateTableCellConditionalFormattingPtrOutput() TemplateTableCellConditionalFormattingPtrOutput {
	return i.ToTemplateTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateTableCellConditionalFormattingPtrType) ToTemplateTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellConditionalFormattingPtrOutput)
}

type TemplateTableCellConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateTableCellConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableCellConditionalFormattingOutput) ToTemplateTableCellConditionalFormattingOutput() TemplateTableCellConditionalFormattingOutput {
	return o
}

func (o TemplateTableCellConditionalFormattingOutput) ToTemplateTableCellConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingOutput {
	return o
}

func (o TemplateTableCellConditionalFormattingOutput) ToTemplateTableCellConditionalFormattingPtrOutput() TemplateTableCellConditionalFormattingPtrOutput {
	return o.ToTemplateTableCellConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateTableCellConditionalFormattingOutput) ToTemplateTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableCellConditionalFormatting) *TemplateTableCellConditionalFormatting {
		return &v
	}).(TemplateTableCellConditionalFormattingPtrOutput)
}

func (o TemplateTableCellConditionalFormattingOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTableCellConditionalFormatting) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateTableCellConditionalFormattingOutput) TextFormat() TemplateTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v TemplateTableCellConditionalFormatting) *TemplateTextConditionalFormat { return v.TextFormat }).(TemplateTextConditionalFormatPtrOutput)
}

type TemplateTableCellConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableCellConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableCellConditionalFormattingPtrOutput) ToTemplateTableCellConditionalFormattingPtrOutput() TemplateTableCellConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableCellConditionalFormattingPtrOutput) ToTemplateTableCellConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableCellConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableCellConditionalFormattingPtrOutput) Elem() TemplateTableCellConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateTableCellConditionalFormatting) TemplateTableCellConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateTableCellConditionalFormatting
		return ret
	}).(TemplateTableCellConditionalFormattingOutput)
}

func (o TemplateTableCellConditionalFormattingPtrOutput) FieldId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellConditionalFormatting) *string {
		if v == nil {
			return nil
		}
		return &v.FieldId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTableCellConditionalFormattingPtrOutput) TextFormat() TemplateTextConditionalFormatPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellConditionalFormatting) *TemplateTextConditionalFormat {
		if v == nil {
			return nil
		}
		return v.TextFormat
	}).(TemplateTextConditionalFormatPtrOutput)
}

type TemplateTableCellImageSizingConfiguration struct {
	TableCellImageScalingConfiguration *TemplateTableCellImageScalingConfiguration `pulumi:"tableCellImageScalingConfiguration"`
}

// TemplateTableCellImageSizingConfigurationInput is an input type that accepts TemplateTableCellImageSizingConfigurationArgs and TemplateTableCellImageSizingConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableCellImageSizingConfigurationInput` via:
//
//	TemplateTableCellImageSizingConfigurationArgs{...}
type TemplateTableCellImageSizingConfigurationInput interface {
	pulumi.Input

	ToTemplateTableCellImageSizingConfigurationOutput() TemplateTableCellImageSizingConfigurationOutput
	ToTemplateTableCellImageSizingConfigurationOutputWithContext(context.Context) TemplateTableCellImageSizingConfigurationOutput
}

type TemplateTableCellImageSizingConfigurationArgs struct {
	TableCellImageScalingConfiguration TemplateTableCellImageScalingConfigurationPtrInput `pulumi:"tableCellImageScalingConfiguration"`
}

func (TemplateTableCellImageSizingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i TemplateTableCellImageSizingConfigurationArgs) ToTemplateTableCellImageSizingConfigurationOutput() TemplateTableCellImageSizingConfigurationOutput {
	return i.ToTemplateTableCellImageSizingConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableCellImageSizingConfigurationArgs) ToTemplateTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellImageSizingConfigurationOutput)
}

func (i TemplateTableCellImageSizingConfigurationArgs) ToTemplateTableCellImageSizingConfigurationPtrOutput() TemplateTableCellImageSizingConfigurationPtrOutput {
	return i.ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableCellImageSizingConfigurationArgs) ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellImageSizingConfigurationOutput).ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableCellImageSizingConfigurationPtrInput is an input type that accepts TemplateTableCellImageSizingConfigurationArgs, TemplateTableCellImageSizingConfigurationPtr and TemplateTableCellImageSizingConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableCellImageSizingConfigurationPtrInput` via:
//
//	        TemplateTableCellImageSizingConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableCellImageSizingConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableCellImageSizingConfigurationPtrOutput() TemplateTableCellImageSizingConfigurationPtrOutput
	ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(context.Context) TemplateTableCellImageSizingConfigurationPtrOutput
}

type templateTableCellImageSizingConfigurationPtrType TemplateTableCellImageSizingConfigurationArgs

func TemplateTableCellImageSizingConfigurationPtr(v *TemplateTableCellImageSizingConfigurationArgs) TemplateTableCellImageSizingConfigurationPtrInput {
	return (*templateTableCellImageSizingConfigurationPtrType)(v)
}

func (*templateTableCellImageSizingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellImageSizingConfiguration)(nil)).Elem()
}

func (i *templateTableCellImageSizingConfigurationPtrType) ToTemplateTableCellImageSizingConfigurationPtrOutput() TemplateTableCellImageSizingConfigurationPtrOutput {
	return i.ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableCellImageSizingConfigurationPtrType) ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellImageSizingConfigurationPtrOutput)
}

type TemplateTableCellImageSizingConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableCellImageSizingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o TemplateTableCellImageSizingConfigurationOutput) ToTemplateTableCellImageSizingConfigurationOutput() TemplateTableCellImageSizingConfigurationOutput {
	return o
}

func (o TemplateTableCellImageSizingConfigurationOutput) ToTemplateTableCellImageSizingConfigurationOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationOutput {
	return o
}

func (o TemplateTableCellImageSizingConfigurationOutput) ToTemplateTableCellImageSizingConfigurationPtrOutput() TemplateTableCellImageSizingConfigurationPtrOutput {
	return o.ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableCellImageSizingConfigurationOutput) ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableCellImageSizingConfiguration) *TemplateTableCellImageSizingConfiguration {
		return &v
	}).(TemplateTableCellImageSizingConfigurationPtrOutput)
}

func (o TemplateTableCellImageSizingConfigurationOutput) TableCellImageScalingConfiguration() TemplateTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableCellImageSizingConfiguration) *TemplateTableCellImageScalingConfiguration {
		return v.TableCellImageScalingConfiguration
	}).(TemplateTableCellImageScalingConfigurationPtrOutput)
}

type TemplateTableCellImageSizingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableCellImageSizingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellImageSizingConfiguration)(nil)).Elem()
}

func (o TemplateTableCellImageSizingConfigurationPtrOutput) ToTemplateTableCellImageSizingConfigurationPtrOutput() TemplateTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o TemplateTableCellImageSizingConfigurationPtrOutput) ToTemplateTableCellImageSizingConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableCellImageSizingConfigurationPtrOutput {
	return o
}

func (o TemplateTableCellImageSizingConfigurationPtrOutput) Elem() TemplateTableCellImageSizingConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableCellImageSizingConfiguration) TemplateTableCellImageSizingConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableCellImageSizingConfiguration
		return ret
	}).(TemplateTableCellImageSizingConfigurationOutput)
}

func (o TemplateTableCellImageSizingConfigurationPtrOutput) TableCellImageScalingConfiguration() TemplateTableCellImageScalingConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellImageSizingConfiguration) *TemplateTableCellImageScalingConfiguration {
		if v == nil {
			return nil
		}
		return v.TableCellImageScalingConfiguration
	}).(TemplateTableCellImageScalingConfigurationPtrOutput)
}

type TemplateTableCellStyle struct {
	BackgroundColor         *string                           `pulumi:"backgroundColor"`
	Border                  *TemplateGlobalTableBorderOptions `pulumi:"border"`
	FontConfiguration       *TemplateFontConfiguration        `pulumi:"fontConfiguration"`
	Height                  *float64                          `pulumi:"height"`
	HorizontalTextAlignment *TemplateHorizontalTextAlignment  `pulumi:"horizontalTextAlignment"`
	TextWrap                *TemplateTextWrap                 `pulumi:"textWrap"`
	VerticalTextAlignment   *TemplateVerticalTextAlignment    `pulumi:"verticalTextAlignment"`
	Visibility              *TemplateVisibility               `pulumi:"visibility"`
}

// TemplateTableCellStyleInput is an input type that accepts TemplateTableCellStyleArgs and TemplateTableCellStyleOutput values.
// You can construct a concrete instance of `TemplateTableCellStyleInput` via:
//
//	TemplateTableCellStyleArgs{...}
type TemplateTableCellStyleInput interface {
	pulumi.Input

	ToTemplateTableCellStyleOutput() TemplateTableCellStyleOutput
	ToTemplateTableCellStyleOutputWithContext(context.Context) TemplateTableCellStyleOutput
}

type TemplateTableCellStyleArgs struct {
	BackgroundColor         pulumi.StringPtrInput                    `pulumi:"backgroundColor"`
	Border                  TemplateGlobalTableBorderOptionsPtrInput `pulumi:"border"`
	FontConfiguration       TemplateFontConfigurationPtrInput        `pulumi:"fontConfiguration"`
	Height                  pulumi.Float64PtrInput                   `pulumi:"height"`
	HorizontalTextAlignment TemplateHorizontalTextAlignmentPtrInput  `pulumi:"horizontalTextAlignment"`
	TextWrap                TemplateTextWrapPtrInput                 `pulumi:"textWrap"`
	VerticalTextAlignment   TemplateVerticalTextAlignmentPtrInput    `pulumi:"verticalTextAlignment"`
	Visibility              TemplateVisibilityPtrInput               `pulumi:"visibility"`
}

func (TemplateTableCellStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellStyle)(nil)).Elem()
}

func (i TemplateTableCellStyleArgs) ToTemplateTableCellStyleOutput() TemplateTableCellStyleOutput {
	return i.ToTemplateTableCellStyleOutputWithContext(context.Background())
}

func (i TemplateTableCellStyleArgs) ToTemplateTableCellStyleOutputWithContext(ctx context.Context) TemplateTableCellStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellStyleOutput)
}

func (i TemplateTableCellStyleArgs) ToTemplateTableCellStylePtrOutput() TemplateTableCellStylePtrOutput {
	return i.ToTemplateTableCellStylePtrOutputWithContext(context.Background())
}

func (i TemplateTableCellStyleArgs) ToTemplateTableCellStylePtrOutputWithContext(ctx context.Context) TemplateTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellStyleOutput).ToTemplateTableCellStylePtrOutputWithContext(ctx)
}

// TemplateTableCellStylePtrInput is an input type that accepts TemplateTableCellStyleArgs, TemplateTableCellStylePtr and TemplateTableCellStylePtrOutput values.
// You can construct a concrete instance of `TemplateTableCellStylePtrInput` via:
//
//	        TemplateTableCellStyleArgs{...}
//
//	or:
//
//	        nil
type TemplateTableCellStylePtrInput interface {
	pulumi.Input

	ToTemplateTableCellStylePtrOutput() TemplateTableCellStylePtrOutput
	ToTemplateTableCellStylePtrOutputWithContext(context.Context) TemplateTableCellStylePtrOutput
}

type templateTableCellStylePtrType TemplateTableCellStyleArgs

func TemplateTableCellStylePtr(v *TemplateTableCellStyleArgs) TemplateTableCellStylePtrInput {
	return (*templateTableCellStylePtrType)(v)
}

func (*templateTableCellStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellStyle)(nil)).Elem()
}

func (i *templateTableCellStylePtrType) ToTemplateTableCellStylePtrOutput() TemplateTableCellStylePtrOutput {
	return i.ToTemplateTableCellStylePtrOutputWithContext(context.Background())
}

func (i *templateTableCellStylePtrType) ToTemplateTableCellStylePtrOutputWithContext(ctx context.Context) TemplateTableCellStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableCellStylePtrOutput)
}

type TemplateTableCellStyleOutput struct{ *pulumi.OutputState }

func (TemplateTableCellStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableCellStyle)(nil)).Elem()
}

func (o TemplateTableCellStyleOutput) ToTemplateTableCellStyleOutput() TemplateTableCellStyleOutput {
	return o
}

func (o TemplateTableCellStyleOutput) ToTemplateTableCellStyleOutputWithContext(ctx context.Context) TemplateTableCellStyleOutput {
	return o
}

func (o TemplateTableCellStyleOutput) ToTemplateTableCellStylePtrOutput() TemplateTableCellStylePtrOutput {
	return o.ToTemplateTableCellStylePtrOutputWithContext(context.Background())
}

func (o TemplateTableCellStyleOutput) ToTemplateTableCellStylePtrOutputWithContext(ctx context.Context) TemplateTableCellStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableCellStyle) *TemplateTableCellStyle {
		return &v
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTableCellStyleOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

func (o TemplateTableCellStyleOutput) Border() TemplateGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateGlobalTableBorderOptions { return v.Border }).(TemplateGlobalTableBorderOptionsPtrOutput)
}

func (o TemplateTableCellStyleOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateTableCellStyleOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *float64 { return v.Height }).(pulumi.Float64PtrOutput)
}

func (o TemplateTableCellStyleOutput) HorizontalTextAlignment() TemplateHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateHorizontalTextAlignment { return v.HorizontalTextAlignment }).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (o TemplateTableCellStyleOutput) TextWrap() TemplateTextWrapPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateTextWrap { return v.TextWrap }).(TemplateTextWrapPtrOutput)
}

func (o TemplateTableCellStyleOutput) VerticalTextAlignment() TemplateVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateVerticalTextAlignment { return v.VerticalTextAlignment }).(TemplateVerticalTextAlignmentPtrOutput)
}

func (o TemplateTableCellStyleOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTableCellStyle) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTableCellStylePtrOutput struct{ *pulumi.OutputState }

func (TemplateTableCellStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableCellStyle)(nil)).Elem()
}

func (o TemplateTableCellStylePtrOutput) ToTemplateTableCellStylePtrOutput() TemplateTableCellStylePtrOutput {
	return o
}

func (o TemplateTableCellStylePtrOutput) ToTemplateTableCellStylePtrOutputWithContext(ctx context.Context) TemplateTableCellStylePtrOutput {
	return o
}

func (o TemplateTableCellStylePtrOutput) Elem() TemplateTableCellStyleOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) TemplateTableCellStyle {
		if v != nil {
			return *v
		}
		var ret TemplateTableCellStyle
		return ret
	}).(TemplateTableCellStyleOutput)
}

func (o TemplateTableCellStylePtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) Border() TemplateGlobalTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateGlobalTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Border
	}).(TemplateGlobalTableBorderOptionsPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return v.FontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) Height() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *float64 {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTableCellStylePtrOutput) HorizontalTextAlignment() TemplateHorizontalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateHorizontalTextAlignment {
		if v == nil {
			return nil
		}
		return v.HorizontalTextAlignment
	}).(TemplateHorizontalTextAlignmentPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) TextWrap() TemplateTextWrapPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateTextWrap {
		if v == nil {
			return nil
		}
		return v.TextWrap
	}).(TemplateTextWrapPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) VerticalTextAlignment() TemplateVerticalTextAlignmentPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateVerticalTextAlignment {
		if v == nil {
			return nil
		}
		return v.VerticalTextAlignment
	}).(TemplateVerticalTextAlignmentPtrOutput)
}

func (o TemplateTableCellStylePtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTableCellStyle) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTableConditionalFormatting struct {
	ConditionalFormattingOptions []TemplateTableConditionalFormattingOption `pulumi:"conditionalFormattingOptions"`
}

// TemplateTableConditionalFormattingInput is an input type that accepts TemplateTableConditionalFormattingArgs and TemplateTableConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateTableConditionalFormattingInput` via:
//
//	TemplateTableConditionalFormattingArgs{...}
type TemplateTableConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateTableConditionalFormattingOutput() TemplateTableConditionalFormattingOutput
	ToTemplateTableConditionalFormattingOutputWithContext(context.Context) TemplateTableConditionalFormattingOutput
}

type TemplateTableConditionalFormattingArgs struct {
	ConditionalFormattingOptions TemplateTableConditionalFormattingOptionArrayInput `pulumi:"conditionalFormattingOptions"`
}

func (TemplateTableConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConditionalFormatting)(nil)).Elem()
}

func (i TemplateTableConditionalFormattingArgs) ToTemplateTableConditionalFormattingOutput() TemplateTableConditionalFormattingOutput {
	return i.ToTemplateTableConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateTableConditionalFormattingArgs) ToTemplateTableConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConditionalFormattingOutput)
}

func (i TemplateTableConditionalFormattingArgs) ToTemplateTableConditionalFormattingPtrOutput() TemplateTableConditionalFormattingPtrOutput {
	return i.ToTemplateTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateTableConditionalFormattingArgs) ToTemplateTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConditionalFormattingOutput).ToTemplateTableConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateTableConditionalFormattingPtrInput is an input type that accepts TemplateTableConditionalFormattingArgs, TemplateTableConditionalFormattingPtr and TemplateTableConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateTableConditionalFormattingPtrInput` via:
//
//	        TemplateTableConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateTableConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateTableConditionalFormattingPtrOutput() TemplateTableConditionalFormattingPtrOutput
	ToTemplateTableConditionalFormattingPtrOutputWithContext(context.Context) TemplateTableConditionalFormattingPtrOutput
}

type templateTableConditionalFormattingPtrType TemplateTableConditionalFormattingArgs

func TemplateTableConditionalFormattingPtr(v *TemplateTableConditionalFormattingArgs) TemplateTableConditionalFormattingPtrInput {
	return (*templateTableConditionalFormattingPtrType)(v)
}

func (*templateTableConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableConditionalFormatting)(nil)).Elem()
}

func (i *templateTableConditionalFormattingPtrType) ToTemplateTableConditionalFormattingPtrOutput() TemplateTableConditionalFormattingPtrOutput {
	return i.ToTemplateTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateTableConditionalFormattingPtrType) ToTemplateTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConditionalFormattingPtrOutput)
}

type TemplateTableConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateTableConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableConditionalFormattingOutput) ToTemplateTableConditionalFormattingOutput() TemplateTableConditionalFormattingOutput {
	return o
}

func (o TemplateTableConditionalFormattingOutput) ToTemplateTableConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOutput {
	return o
}

func (o TemplateTableConditionalFormattingOutput) ToTemplateTableConditionalFormattingPtrOutput() TemplateTableConditionalFormattingPtrOutput {
	return o.ToTemplateTableConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateTableConditionalFormattingOutput) ToTemplateTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableConditionalFormatting) *TemplateTableConditionalFormatting {
		return &v
	}).(TemplateTableConditionalFormattingPtrOutput)
}

func (o TemplateTableConditionalFormattingOutput) ConditionalFormattingOptions() TemplateTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v TemplateTableConditionalFormatting) []TemplateTableConditionalFormattingOption {
		return v.ConditionalFormattingOptions
	}).(TemplateTableConditionalFormattingOptionArrayOutput)
}

type TemplateTableConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableConditionalFormattingPtrOutput) ToTemplateTableConditionalFormattingPtrOutput() TemplateTableConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableConditionalFormattingPtrOutput) ToTemplateTableConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableConditionalFormattingPtrOutput) Elem() TemplateTableConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateTableConditionalFormatting) TemplateTableConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateTableConditionalFormatting
		return ret
	}).(TemplateTableConditionalFormattingOutput)
}

func (o TemplateTableConditionalFormattingPtrOutput) ConditionalFormattingOptions() TemplateTableConditionalFormattingOptionArrayOutput {
	return o.ApplyT(func(v *TemplateTableConditionalFormatting) []TemplateTableConditionalFormattingOption {
		if v == nil {
			return nil
		}
		return v.ConditionalFormattingOptions
	}).(TemplateTableConditionalFormattingOptionArrayOutput)
}

type TemplateTableConditionalFormattingOption struct {
	Cell *TemplateTableCellConditionalFormatting `pulumi:"cell"`
	Row  *TemplateTableRowConditionalFormatting  `pulumi:"row"`
}

// TemplateTableConditionalFormattingOptionInput is an input type that accepts TemplateTableConditionalFormattingOptionArgs and TemplateTableConditionalFormattingOptionOutput values.
// You can construct a concrete instance of `TemplateTableConditionalFormattingOptionInput` via:
//
//	TemplateTableConditionalFormattingOptionArgs{...}
type TemplateTableConditionalFormattingOptionInput interface {
	pulumi.Input

	ToTemplateTableConditionalFormattingOptionOutput() TemplateTableConditionalFormattingOptionOutput
	ToTemplateTableConditionalFormattingOptionOutputWithContext(context.Context) TemplateTableConditionalFormattingOptionOutput
}

type TemplateTableConditionalFormattingOptionArgs struct {
	Cell TemplateTableCellConditionalFormattingPtrInput `pulumi:"cell"`
	Row  TemplateTableRowConditionalFormattingPtrInput  `pulumi:"row"`
}

func (TemplateTableConditionalFormattingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateTableConditionalFormattingOptionArgs) ToTemplateTableConditionalFormattingOptionOutput() TemplateTableConditionalFormattingOptionOutput {
	return i.ToTemplateTableConditionalFormattingOptionOutputWithContext(context.Background())
}

func (i TemplateTableConditionalFormattingOptionArgs) ToTemplateTableConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConditionalFormattingOptionOutput)
}

// TemplateTableConditionalFormattingOptionArrayInput is an input type that accepts TemplateTableConditionalFormattingOptionArray and TemplateTableConditionalFormattingOptionArrayOutput values.
// You can construct a concrete instance of `TemplateTableConditionalFormattingOptionArrayInput` via:
//
//	TemplateTableConditionalFormattingOptionArray{ TemplateTableConditionalFormattingOptionArgs{...} }
type TemplateTableConditionalFormattingOptionArrayInput interface {
	pulumi.Input

	ToTemplateTableConditionalFormattingOptionArrayOutput() TemplateTableConditionalFormattingOptionArrayOutput
	ToTemplateTableConditionalFormattingOptionArrayOutputWithContext(context.Context) TemplateTableConditionalFormattingOptionArrayOutput
}

type TemplateTableConditionalFormattingOptionArray []TemplateTableConditionalFormattingOptionInput

func (TemplateTableConditionalFormattingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableConditionalFormattingOption)(nil)).Elem()
}

func (i TemplateTableConditionalFormattingOptionArray) ToTemplateTableConditionalFormattingOptionArrayOutput() TemplateTableConditionalFormattingOptionArrayOutput {
	return i.ToTemplateTableConditionalFormattingOptionArrayOutputWithContext(context.Background())
}

func (i TemplateTableConditionalFormattingOptionArray) ToTemplateTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConditionalFormattingOptionArrayOutput)
}

type TemplateTableConditionalFormattingOptionOutput struct{ *pulumi.OutputState }

func (TemplateTableConditionalFormattingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateTableConditionalFormattingOptionOutput) ToTemplateTableConditionalFormattingOptionOutput() TemplateTableConditionalFormattingOptionOutput {
	return o
}

func (o TemplateTableConditionalFormattingOptionOutput) ToTemplateTableConditionalFormattingOptionOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOptionOutput {
	return o
}

func (o TemplateTableConditionalFormattingOptionOutput) Cell() TemplateTableCellConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateTableConditionalFormattingOption) *TemplateTableCellConditionalFormatting {
		return v.Cell
	}).(TemplateTableCellConditionalFormattingPtrOutput)
}

func (o TemplateTableConditionalFormattingOptionOutput) Row() TemplateTableRowConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateTableConditionalFormattingOption) *TemplateTableRowConditionalFormatting { return v.Row }).(TemplateTableRowConditionalFormattingPtrOutput)
}

type TemplateTableConditionalFormattingOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateTableConditionalFormattingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableConditionalFormattingOption)(nil)).Elem()
}

func (o TemplateTableConditionalFormattingOptionArrayOutput) ToTemplateTableConditionalFormattingOptionArrayOutput() TemplateTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateTableConditionalFormattingOptionArrayOutput) ToTemplateTableConditionalFormattingOptionArrayOutputWithContext(ctx context.Context) TemplateTableConditionalFormattingOptionArrayOutput {
	return o
}

func (o TemplateTableConditionalFormattingOptionArrayOutput) Index(i pulumi.IntInput) TemplateTableConditionalFormattingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTableConditionalFormattingOption {
		return vs[0].([]TemplateTableConditionalFormattingOption)[vs[1].(int)]
	}).(TemplateTableConditionalFormattingOptionOutput)
}

type TemplateTableConfiguration struct {
	FieldOptions              *TemplateTableFieldOptions           `pulumi:"fieldOptions"`
	FieldWells                *TemplateTableFieldWells             `pulumi:"fieldWells"`
	PaginatedReportOptions    *TemplateTablePaginatedReportOptions `pulumi:"paginatedReportOptions"`
	SortConfiguration         *TemplateTableSortConfiguration      `pulumi:"sortConfiguration"`
	TableInlineVisualizations []TemplateTableInlineVisualization   `pulumi:"tableInlineVisualizations"`
	TableOptions              *TemplateTableOptions                `pulumi:"tableOptions"`
	TotalOptions              *TemplateTotalOptions                `pulumi:"totalOptions"`
}

// TemplateTableConfigurationInput is an input type that accepts TemplateTableConfigurationArgs and TemplateTableConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableConfigurationInput` via:
//
//	TemplateTableConfigurationArgs{...}
type TemplateTableConfigurationInput interface {
	pulumi.Input

	ToTemplateTableConfigurationOutput() TemplateTableConfigurationOutput
	ToTemplateTableConfigurationOutputWithContext(context.Context) TemplateTableConfigurationOutput
}

type TemplateTableConfigurationArgs struct {
	FieldOptions              TemplateTableFieldOptionsPtrInput           `pulumi:"fieldOptions"`
	FieldWells                TemplateTableFieldWellsPtrInput             `pulumi:"fieldWells"`
	PaginatedReportOptions    TemplateTablePaginatedReportOptionsPtrInput `pulumi:"paginatedReportOptions"`
	SortConfiguration         TemplateTableSortConfigurationPtrInput      `pulumi:"sortConfiguration"`
	TableInlineVisualizations TemplateTableInlineVisualizationArrayInput  `pulumi:"tableInlineVisualizations"`
	TableOptions              TemplateTableOptionsPtrInput                `pulumi:"tableOptions"`
	TotalOptions              TemplateTotalOptionsPtrInput                `pulumi:"totalOptions"`
}

func (TemplateTableConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConfiguration)(nil)).Elem()
}

func (i TemplateTableConfigurationArgs) ToTemplateTableConfigurationOutput() TemplateTableConfigurationOutput {
	return i.ToTemplateTableConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableConfigurationArgs) ToTemplateTableConfigurationOutputWithContext(ctx context.Context) TemplateTableConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConfigurationOutput)
}

func (i TemplateTableConfigurationArgs) ToTemplateTableConfigurationPtrOutput() TemplateTableConfigurationPtrOutput {
	return i.ToTemplateTableConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableConfigurationArgs) ToTemplateTableConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConfigurationOutput).ToTemplateTableConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableConfigurationPtrInput is an input type that accepts TemplateTableConfigurationArgs, TemplateTableConfigurationPtr and TemplateTableConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableConfigurationPtrInput` via:
//
//	        TemplateTableConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableConfigurationPtrOutput() TemplateTableConfigurationPtrOutput
	ToTemplateTableConfigurationPtrOutputWithContext(context.Context) TemplateTableConfigurationPtrOutput
}

type templateTableConfigurationPtrType TemplateTableConfigurationArgs

func TemplateTableConfigurationPtr(v *TemplateTableConfigurationArgs) TemplateTableConfigurationPtrInput {
	return (*templateTableConfigurationPtrType)(v)
}

func (*templateTableConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableConfiguration)(nil)).Elem()
}

func (i *templateTableConfigurationPtrType) ToTemplateTableConfigurationPtrOutput() TemplateTableConfigurationPtrOutput {
	return i.ToTemplateTableConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableConfigurationPtrType) ToTemplateTableConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableConfigurationPtrOutput)
}

type TemplateTableConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableConfiguration)(nil)).Elem()
}

func (o TemplateTableConfigurationOutput) ToTemplateTableConfigurationOutput() TemplateTableConfigurationOutput {
	return o
}

func (o TemplateTableConfigurationOutput) ToTemplateTableConfigurationOutputWithContext(ctx context.Context) TemplateTableConfigurationOutput {
	return o
}

func (o TemplateTableConfigurationOutput) ToTemplateTableConfigurationPtrOutput() TemplateTableConfigurationPtrOutput {
	return o.ToTemplateTableConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableConfigurationOutput) ToTemplateTableConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableConfiguration) *TemplateTableConfiguration {
		return &v
	}).(TemplateTableConfigurationPtrOutput)
}

func (o TemplateTableConfigurationOutput) FieldOptions() TemplateTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTableFieldOptions { return v.FieldOptions }).(TemplateTableFieldOptionsPtrOutput)
}

func (o TemplateTableConfigurationOutput) FieldWells() TemplateTableFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTableFieldWells { return v.FieldWells }).(TemplateTableFieldWellsPtrOutput)
}

func (o TemplateTableConfigurationOutput) PaginatedReportOptions() TemplateTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTablePaginatedReportOptions {
		return v.PaginatedReportOptions
	}).(TemplateTablePaginatedReportOptionsPtrOutput)
}

func (o TemplateTableConfigurationOutput) SortConfiguration() TemplateTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTableSortConfiguration { return v.SortConfiguration }).(TemplateTableSortConfigurationPtrOutput)
}

func (o TemplateTableConfigurationOutput) TableInlineVisualizations() TemplateTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) []TemplateTableInlineVisualization {
		return v.TableInlineVisualizations
	}).(TemplateTableInlineVisualizationArrayOutput)
}

func (o TemplateTableConfigurationOutput) TableOptions() TemplateTableOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTableOptions { return v.TableOptions }).(TemplateTableOptionsPtrOutput)
}

func (o TemplateTableConfigurationOutput) TotalOptions() TemplateTotalOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableConfiguration) *TemplateTotalOptions { return v.TotalOptions }).(TemplateTotalOptionsPtrOutput)
}

type TemplateTableConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableConfiguration)(nil)).Elem()
}

func (o TemplateTableConfigurationPtrOutput) ToTemplateTableConfigurationPtrOutput() TemplateTableConfigurationPtrOutput {
	return o
}

func (o TemplateTableConfigurationPtrOutput) ToTemplateTableConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableConfigurationPtrOutput {
	return o
}

func (o TemplateTableConfigurationPtrOutput) Elem() TemplateTableConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) TemplateTableConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableConfiguration
		return ret
	}).(TemplateTableConfigurationOutput)
}

func (o TemplateTableConfigurationPtrOutput) FieldOptions() TemplateTableFieldOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTableFieldOptions {
		if v == nil {
			return nil
		}
		return v.FieldOptions
	}).(TemplateTableFieldOptionsPtrOutput)
}

func (o TemplateTableConfigurationPtrOutput) FieldWells() TemplateTableFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTableFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateTableFieldWellsPtrOutput)
}

func (o TemplateTableConfigurationPtrOutput) PaginatedReportOptions() TemplateTablePaginatedReportOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTablePaginatedReportOptions {
		if v == nil {
			return nil
		}
		return v.PaginatedReportOptions
	}).(TemplateTablePaginatedReportOptionsPtrOutput)
}

func (o TemplateTableConfigurationPtrOutput) SortConfiguration() TemplateTableSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTableSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateTableSortConfigurationPtrOutput)
}

func (o TemplateTableConfigurationPtrOutput) TableInlineVisualizations() TemplateTableInlineVisualizationArrayOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) []TemplateTableInlineVisualization {
		if v == nil {
			return nil
		}
		return v.TableInlineVisualizations
	}).(TemplateTableInlineVisualizationArrayOutput)
}

func (o TemplateTableConfigurationPtrOutput) TableOptions() TemplateTableOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTableOptions {
		if v == nil {
			return nil
		}
		return v.TableOptions
	}).(TemplateTableOptionsPtrOutput)
}

func (o TemplateTableConfigurationPtrOutput) TotalOptions() TemplateTotalOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableConfiguration) *TemplateTotalOptions {
		if v == nil {
			return nil
		}
		return v.TotalOptions
	}).(TemplateTotalOptionsPtrOutput)
}

type TemplateTableFieldCustomIconContent struct {
	Icon *TemplateTableFieldIconSetType `pulumi:"icon"`
}

// TemplateTableFieldCustomIconContentInput is an input type that accepts TemplateTableFieldCustomIconContentArgs and TemplateTableFieldCustomIconContentOutput values.
// You can construct a concrete instance of `TemplateTableFieldCustomIconContentInput` via:
//
//	TemplateTableFieldCustomIconContentArgs{...}
type TemplateTableFieldCustomIconContentInput interface {
	pulumi.Input

	ToTemplateTableFieldCustomIconContentOutput() TemplateTableFieldCustomIconContentOutput
	ToTemplateTableFieldCustomIconContentOutputWithContext(context.Context) TemplateTableFieldCustomIconContentOutput
}

type TemplateTableFieldCustomIconContentArgs struct {
	Icon TemplateTableFieldIconSetTypePtrInput `pulumi:"icon"`
}

func (TemplateTableFieldCustomIconContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldCustomIconContent)(nil)).Elem()
}

func (i TemplateTableFieldCustomIconContentArgs) ToTemplateTableFieldCustomIconContentOutput() TemplateTableFieldCustomIconContentOutput {
	return i.ToTemplateTableFieldCustomIconContentOutputWithContext(context.Background())
}

func (i TemplateTableFieldCustomIconContentArgs) ToTemplateTableFieldCustomIconContentOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomIconContentOutput)
}

func (i TemplateTableFieldCustomIconContentArgs) ToTemplateTableFieldCustomIconContentPtrOutput() TemplateTableFieldCustomIconContentPtrOutput {
	return i.ToTemplateTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldCustomIconContentArgs) ToTemplateTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomIconContentOutput).ToTemplateTableFieldCustomIconContentPtrOutputWithContext(ctx)
}

// TemplateTableFieldCustomIconContentPtrInput is an input type that accepts TemplateTableFieldCustomIconContentArgs, TemplateTableFieldCustomIconContentPtr and TemplateTableFieldCustomIconContentPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldCustomIconContentPtrInput` via:
//
//	        TemplateTableFieldCustomIconContentArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldCustomIconContentPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldCustomIconContentPtrOutput() TemplateTableFieldCustomIconContentPtrOutput
	ToTemplateTableFieldCustomIconContentPtrOutputWithContext(context.Context) TemplateTableFieldCustomIconContentPtrOutput
}

type templateTableFieldCustomIconContentPtrType TemplateTableFieldCustomIconContentArgs

func TemplateTableFieldCustomIconContentPtr(v *TemplateTableFieldCustomIconContentArgs) TemplateTableFieldCustomIconContentPtrInput {
	return (*templateTableFieldCustomIconContentPtrType)(v)
}

func (*templateTableFieldCustomIconContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldCustomIconContent)(nil)).Elem()
}

func (i *templateTableFieldCustomIconContentPtrType) ToTemplateTableFieldCustomIconContentPtrOutput() TemplateTableFieldCustomIconContentPtrOutput {
	return i.ToTemplateTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldCustomIconContentPtrType) ToTemplateTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomIconContentPtrOutput)
}

type TemplateTableFieldCustomIconContentOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldCustomIconContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldCustomIconContent)(nil)).Elem()
}

func (o TemplateTableFieldCustomIconContentOutput) ToTemplateTableFieldCustomIconContentOutput() TemplateTableFieldCustomIconContentOutput {
	return o
}

func (o TemplateTableFieldCustomIconContentOutput) ToTemplateTableFieldCustomIconContentOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentOutput {
	return o
}

func (o TemplateTableFieldCustomIconContentOutput) ToTemplateTableFieldCustomIconContentPtrOutput() TemplateTableFieldCustomIconContentPtrOutput {
	return o.ToTemplateTableFieldCustomIconContentPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldCustomIconContentOutput) ToTemplateTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldCustomIconContent) *TemplateTableFieldCustomIconContent {
		return &v
	}).(TemplateTableFieldCustomIconContentPtrOutput)
}

func (o TemplateTableFieldCustomIconContentOutput) Icon() TemplateTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v TemplateTableFieldCustomIconContent) *TemplateTableFieldIconSetType { return v.Icon }).(TemplateTableFieldIconSetTypePtrOutput)
}

type TemplateTableFieldCustomIconContentPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldCustomIconContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldCustomIconContent)(nil)).Elem()
}

func (o TemplateTableFieldCustomIconContentPtrOutput) ToTemplateTableFieldCustomIconContentPtrOutput() TemplateTableFieldCustomIconContentPtrOutput {
	return o
}

func (o TemplateTableFieldCustomIconContentPtrOutput) ToTemplateTableFieldCustomIconContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomIconContentPtrOutput {
	return o
}

func (o TemplateTableFieldCustomIconContentPtrOutput) Elem() TemplateTableFieldCustomIconContentOutput {
	return o.ApplyT(func(v *TemplateTableFieldCustomIconContent) TemplateTableFieldCustomIconContent {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldCustomIconContent
		return ret
	}).(TemplateTableFieldCustomIconContentOutput)
}

func (o TemplateTableFieldCustomIconContentPtrOutput) Icon() TemplateTableFieldIconSetTypePtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldCustomIconContent) *TemplateTableFieldIconSetType {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateTableFieldIconSetTypePtrOutput)
}

type TemplateTableFieldCustomTextContent struct {
	FontConfiguration TemplateFontConfiguration `pulumi:"fontConfiguration"`
	Value             *string                   `pulumi:"value"`
}

// TemplateTableFieldCustomTextContentInput is an input type that accepts TemplateTableFieldCustomTextContentArgs and TemplateTableFieldCustomTextContentOutput values.
// You can construct a concrete instance of `TemplateTableFieldCustomTextContentInput` via:
//
//	TemplateTableFieldCustomTextContentArgs{...}
type TemplateTableFieldCustomTextContentInput interface {
	pulumi.Input

	ToTemplateTableFieldCustomTextContentOutput() TemplateTableFieldCustomTextContentOutput
	ToTemplateTableFieldCustomTextContentOutputWithContext(context.Context) TemplateTableFieldCustomTextContentOutput
}

type TemplateTableFieldCustomTextContentArgs struct {
	FontConfiguration TemplateFontConfigurationInput `pulumi:"fontConfiguration"`
	Value             pulumi.StringPtrInput          `pulumi:"value"`
}

func (TemplateTableFieldCustomTextContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldCustomTextContent)(nil)).Elem()
}

func (i TemplateTableFieldCustomTextContentArgs) ToTemplateTableFieldCustomTextContentOutput() TemplateTableFieldCustomTextContentOutput {
	return i.ToTemplateTableFieldCustomTextContentOutputWithContext(context.Background())
}

func (i TemplateTableFieldCustomTextContentArgs) ToTemplateTableFieldCustomTextContentOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomTextContentOutput)
}

func (i TemplateTableFieldCustomTextContentArgs) ToTemplateTableFieldCustomTextContentPtrOutput() TemplateTableFieldCustomTextContentPtrOutput {
	return i.ToTemplateTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldCustomTextContentArgs) ToTemplateTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomTextContentOutput).ToTemplateTableFieldCustomTextContentPtrOutputWithContext(ctx)
}

// TemplateTableFieldCustomTextContentPtrInput is an input type that accepts TemplateTableFieldCustomTextContentArgs, TemplateTableFieldCustomTextContentPtr and TemplateTableFieldCustomTextContentPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldCustomTextContentPtrInput` via:
//
//	        TemplateTableFieldCustomTextContentArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldCustomTextContentPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldCustomTextContentPtrOutput() TemplateTableFieldCustomTextContentPtrOutput
	ToTemplateTableFieldCustomTextContentPtrOutputWithContext(context.Context) TemplateTableFieldCustomTextContentPtrOutput
}

type templateTableFieldCustomTextContentPtrType TemplateTableFieldCustomTextContentArgs

func TemplateTableFieldCustomTextContentPtr(v *TemplateTableFieldCustomTextContentArgs) TemplateTableFieldCustomTextContentPtrInput {
	return (*templateTableFieldCustomTextContentPtrType)(v)
}

func (*templateTableFieldCustomTextContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldCustomTextContent)(nil)).Elem()
}

func (i *templateTableFieldCustomTextContentPtrType) ToTemplateTableFieldCustomTextContentPtrOutput() TemplateTableFieldCustomTextContentPtrOutput {
	return i.ToTemplateTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldCustomTextContentPtrType) ToTemplateTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldCustomTextContentPtrOutput)
}

type TemplateTableFieldCustomTextContentOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldCustomTextContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldCustomTextContent)(nil)).Elem()
}

func (o TemplateTableFieldCustomTextContentOutput) ToTemplateTableFieldCustomTextContentOutput() TemplateTableFieldCustomTextContentOutput {
	return o
}

func (o TemplateTableFieldCustomTextContentOutput) ToTemplateTableFieldCustomTextContentOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentOutput {
	return o
}

func (o TemplateTableFieldCustomTextContentOutput) ToTemplateTableFieldCustomTextContentPtrOutput() TemplateTableFieldCustomTextContentPtrOutput {
	return o.ToTemplateTableFieldCustomTextContentPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldCustomTextContentOutput) ToTemplateTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldCustomTextContent) *TemplateTableFieldCustomTextContent {
		return &v
	}).(TemplateTableFieldCustomTextContentPtrOutput)
}

func (o TemplateTableFieldCustomTextContentOutput) FontConfiguration() TemplateFontConfigurationOutput {
	return o.ApplyT(func(v TemplateTableFieldCustomTextContent) TemplateFontConfiguration { return v.FontConfiguration }).(TemplateFontConfigurationOutput)
}

func (o TemplateTableFieldCustomTextContentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldCustomTextContent) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TemplateTableFieldCustomTextContentPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldCustomTextContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldCustomTextContent)(nil)).Elem()
}

func (o TemplateTableFieldCustomTextContentPtrOutput) ToTemplateTableFieldCustomTextContentPtrOutput() TemplateTableFieldCustomTextContentPtrOutput {
	return o
}

func (o TemplateTableFieldCustomTextContentPtrOutput) ToTemplateTableFieldCustomTextContentPtrOutputWithContext(ctx context.Context) TemplateTableFieldCustomTextContentPtrOutput {
	return o
}

func (o TemplateTableFieldCustomTextContentPtrOutput) Elem() TemplateTableFieldCustomTextContentOutput {
	return o.ApplyT(func(v *TemplateTableFieldCustomTextContent) TemplateTableFieldCustomTextContent {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldCustomTextContent
		return ret
	}).(TemplateTableFieldCustomTextContentOutput)
}

func (o TemplateTableFieldCustomTextContentPtrOutput) FontConfiguration() TemplateFontConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldCustomTextContent) *TemplateFontConfiguration {
		if v == nil {
			return nil
		}
		return &v.FontConfiguration
	}).(TemplateFontConfigurationPtrOutput)
}

func (o TemplateTableFieldCustomTextContentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldCustomTextContent) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TemplateTableFieldImageConfiguration struct {
	SizingOptions *TemplateTableCellImageSizingConfiguration `pulumi:"sizingOptions"`
}

// TemplateTableFieldImageConfigurationInput is an input type that accepts TemplateTableFieldImageConfigurationArgs and TemplateTableFieldImageConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableFieldImageConfigurationInput` via:
//
//	TemplateTableFieldImageConfigurationArgs{...}
type TemplateTableFieldImageConfigurationInput interface {
	pulumi.Input

	ToTemplateTableFieldImageConfigurationOutput() TemplateTableFieldImageConfigurationOutput
	ToTemplateTableFieldImageConfigurationOutputWithContext(context.Context) TemplateTableFieldImageConfigurationOutput
}

type TemplateTableFieldImageConfigurationArgs struct {
	SizingOptions TemplateTableCellImageSizingConfigurationPtrInput `pulumi:"sizingOptions"`
}

func (TemplateTableFieldImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldImageConfiguration)(nil)).Elem()
}

func (i TemplateTableFieldImageConfigurationArgs) ToTemplateTableFieldImageConfigurationOutput() TemplateTableFieldImageConfigurationOutput {
	return i.ToTemplateTableFieldImageConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableFieldImageConfigurationArgs) ToTemplateTableFieldImageConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldImageConfigurationOutput)
}

func (i TemplateTableFieldImageConfigurationArgs) ToTemplateTableFieldImageConfigurationPtrOutput() TemplateTableFieldImageConfigurationPtrOutput {
	return i.ToTemplateTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldImageConfigurationArgs) ToTemplateTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldImageConfigurationOutput).ToTemplateTableFieldImageConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableFieldImageConfigurationPtrInput is an input type that accepts TemplateTableFieldImageConfigurationArgs, TemplateTableFieldImageConfigurationPtr and TemplateTableFieldImageConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldImageConfigurationPtrInput` via:
//
//	        TemplateTableFieldImageConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldImageConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldImageConfigurationPtrOutput() TemplateTableFieldImageConfigurationPtrOutput
	ToTemplateTableFieldImageConfigurationPtrOutputWithContext(context.Context) TemplateTableFieldImageConfigurationPtrOutput
}

type templateTableFieldImageConfigurationPtrType TemplateTableFieldImageConfigurationArgs

func TemplateTableFieldImageConfigurationPtr(v *TemplateTableFieldImageConfigurationArgs) TemplateTableFieldImageConfigurationPtrInput {
	return (*templateTableFieldImageConfigurationPtrType)(v)
}

func (*templateTableFieldImageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldImageConfiguration)(nil)).Elem()
}

func (i *templateTableFieldImageConfigurationPtrType) ToTemplateTableFieldImageConfigurationPtrOutput() TemplateTableFieldImageConfigurationPtrOutput {
	return i.ToTemplateTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldImageConfigurationPtrType) ToTemplateTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldImageConfigurationPtrOutput)
}

type TemplateTableFieldImageConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldImageConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldImageConfigurationOutput) ToTemplateTableFieldImageConfigurationOutput() TemplateTableFieldImageConfigurationOutput {
	return o
}

func (o TemplateTableFieldImageConfigurationOutput) ToTemplateTableFieldImageConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationOutput {
	return o
}

func (o TemplateTableFieldImageConfigurationOutput) ToTemplateTableFieldImageConfigurationPtrOutput() TemplateTableFieldImageConfigurationPtrOutput {
	return o.ToTemplateTableFieldImageConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldImageConfigurationOutput) ToTemplateTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldImageConfiguration) *TemplateTableFieldImageConfiguration {
		return &v
	}).(TemplateTableFieldImageConfigurationPtrOutput)
}

func (o TemplateTableFieldImageConfigurationOutput) SizingOptions() TemplateTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldImageConfiguration) *TemplateTableCellImageSizingConfiguration {
		return v.SizingOptions
	}).(TemplateTableCellImageSizingConfigurationPtrOutput)
}

type TemplateTableFieldImageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldImageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldImageConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldImageConfigurationPtrOutput) ToTemplateTableFieldImageConfigurationPtrOutput() TemplateTableFieldImageConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldImageConfigurationPtrOutput) ToTemplateTableFieldImageConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldImageConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldImageConfigurationPtrOutput) Elem() TemplateTableFieldImageConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableFieldImageConfiguration) TemplateTableFieldImageConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldImageConfiguration
		return ret
	}).(TemplateTableFieldImageConfigurationOutput)
}

func (o TemplateTableFieldImageConfigurationPtrOutput) SizingOptions() TemplateTableCellImageSizingConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldImageConfiguration) *TemplateTableCellImageSizingConfiguration {
		if v == nil {
			return nil
		}
		return v.SizingOptions
	}).(TemplateTableCellImageSizingConfigurationPtrOutput)
}

type TemplateTableFieldLinkConfiguration struct {
	Content TemplateTableFieldLinkContentConfiguration `pulumi:"content"`
	Target  TemplateUrlTargetConfiguration             `pulumi:"target"`
}

// TemplateTableFieldLinkConfigurationInput is an input type that accepts TemplateTableFieldLinkConfigurationArgs and TemplateTableFieldLinkConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableFieldLinkConfigurationInput` via:
//
//	TemplateTableFieldLinkConfigurationArgs{...}
type TemplateTableFieldLinkConfigurationInput interface {
	pulumi.Input

	ToTemplateTableFieldLinkConfigurationOutput() TemplateTableFieldLinkConfigurationOutput
	ToTemplateTableFieldLinkConfigurationOutputWithContext(context.Context) TemplateTableFieldLinkConfigurationOutput
}

type TemplateTableFieldLinkConfigurationArgs struct {
	Content TemplateTableFieldLinkContentConfigurationInput `pulumi:"content"`
	Target  TemplateUrlTargetConfigurationInput             `pulumi:"target"`
}

func (TemplateTableFieldLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldLinkConfiguration)(nil)).Elem()
}

func (i TemplateTableFieldLinkConfigurationArgs) ToTemplateTableFieldLinkConfigurationOutput() TemplateTableFieldLinkConfigurationOutput {
	return i.ToTemplateTableFieldLinkConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableFieldLinkConfigurationArgs) ToTemplateTableFieldLinkConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkConfigurationOutput)
}

func (i TemplateTableFieldLinkConfigurationArgs) ToTemplateTableFieldLinkConfigurationPtrOutput() TemplateTableFieldLinkConfigurationPtrOutput {
	return i.ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldLinkConfigurationArgs) ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkConfigurationOutput).ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableFieldLinkConfigurationPtrInput is an input type that accepts TemplateTableFieldLinkConfigurationArgs, TemplateTableFieldLinkConfigurationPtr and TemplateTableFieldLinkConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldLinkConfigurationPtrInput` via:
//
//	        TemplateTableFieldLinkConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldLinkConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldLinkConfigurationPtrOutput() TemplateTableFieldLinkConfigurationPtrOutput
	ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(context.Context) TemplateTableFieldLinkConfigurationPtrOutput
}

type templateTableFieldLinkConfigurationPtrType TemplateTableFieldLinkConfigurationArgs

func TemplateTableFieldLinkConfigurationPtr(v *TemplateTableFieldLinkConfigurationArgs) TemplateTableFieldLinkConfigurationPtrInput {
	return (*templateTableFieldLinkConfigurationPtrType)(v)
}

func (*templateTableFieldLinkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldLinkConfiguration)(nil)).Elem()
}

func (i *templateTableFieldLinkConfigurationPtrType) ToTemplateTableFieldLinkConfigurationPtrOutput() TemplateTableFieldLinkConfigurationPtrOutput {
	return i.ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldLinkConfigurationPtrType) ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkConfigurationPtrOutput)
}

type TemplateTableFieldLinkConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldLinkConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldLinkConfigurationOutput) ToTemplateTableFieldLinkConfigurationOutput() TemplateTableFieldLinkConfigurationOutput {
	return o
}

func (o TemplateTableFieldLinkConfigurationOutput) ToTemplateTableFieldLinkConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationOutput {
	return o
}

func (o TemplateTableFieldLinkConfigurationOutput) ToTemplateTableFieldLinkConfigurationPtrOutput() TemplateTableFieldLinkConfigurationPtrOutput {
	return o.ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldLinkConfigurationOutput) ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldLinkConfiguration) *TemplateTableFieldLinkConfiguration {
		return &v
	}).(TemplateTableFieldLinkConfigurationPtrOutput)
}

func (o TemplateTableFieldLinkConfigurationOutput) Content() TemplateTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v TemplateTableFieldLinkConfiguration) TemplateTableFieldLinkContentConfiguration {
		return v.Content
	}).(TemplateTableFieldLinkContentConfigurationOutput)
}

func (o TemplateTableFieldLinkConfigurationOutput) Target() TemplateUrlTargetConfigurationOutput {
	return o.ApplyT(func(v TemplateTableFieldLinkConfiguration) TemplateUrlTargetConfiguration { return v.Target }).(TemplateUrlTargetConfigurationOutput)
}

type TemplateTableFieldLinkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldLinkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldLinkConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldLinkConfigurationPtrOutput) ToTemplateTableFieldLinkConfigurationPtrOutput() TemplateTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldLinkConfigurationPtrOutput) ToTemplateTableFieldLinkConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldLinkConfigurationPtrOutput) Elem() TemplateTableFieldLinkConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkConfiguration) TemplateTableFieldLinkConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldLinkConfiguration
		return ret
	}).(TemplateTableFieldLinkConfigurationOutput)
}

func (o TemplateTableFieldLinkConfigurationPtrOutput) Content() TemplateTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkConfiguration) *TemplateTableFieldLinkContentConfiguration {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(TemplateTableFieldLinkContentConfigurationPtrOutput)
}

func (o TemplateTableFieldLinkConfigurationPtrOutput) Target() TemplateUrlTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkConfiguration) *TemplateUrlTargetConfiguration {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(TemplateUrlTargetConfigurationPtrOutput)
}

type TemplateTableFieldLinkContentConfiguration struct {
	CustomIconContent *TemplateTableFieldCustomIconContent `pulumi:"customIconContent"`
	CustomTextContent *TemplateTableFieldCustomTextContent `pulumi:"customTextContent"`
}

// TemplateTableFieldLinkContentConfigurationInput is an input type that accepts TemplateTableFieldLinkContentConfigurationArgs and TemplateTableFieldLinkContentConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableFieldLinkContentConfigurationInput` via:
//
//	TemplateTableFieldLinkContentConfigurationArgs{...}
type TemplateTableFieldLinkContentConfigurationInput interface {
	pulumi.Input

	ToTemplateTableFieldLinkContentConfigurationOutput() TemplateTableFieldLinkContentConfigurationOutput
	ToTemplateTableFieldLinkContentConfigurationOutputWithContext(context.Context) TemplateTableFieldLinkContentConfigurationOutput
}

type TemplateTableFieldLinkContentConfigurationArgs struct {
	CustomIconContent TemplateTableFieldCustomIconContentPtrInput `pulumi:"customIconContent"`
	CustomTextContent TemplateTableFieldCustomTextContentPtrInput `pulumi:"customTextContent"`
}

func (TemplateTableFieldLinkContentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i TemplateTableFieldLinkContentConfigurationArgs) ToTemplateTableFieldLinkContentConfigurationOutput() TemplateTableFieldLinkContentConfigurationOutput {
	return i.ToTemplateTableFieldLinkContentConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableFieldLinkContentConfigurationArgs) ToTemplateTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkContentConfigurationOutput)
}

func (i TemplateTableFieldLinkContentConfigurationArgs) ToTemplateTableFieldLinkContentConfigurationPtrOutput() TemplateTableFieldLinkContentConfigurationPtrOutput {
	return i.ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldLinkContentConfigurationArgs) ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkContentConfigurationOutput).ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableFieldLinkContentConfigurationPtrInput is an input type that accepts TemplateTableFieldLinkContentConfigurationArgs, TemplateTableFieldLinkContentConfigurationPtr and TemplateTableFieldLinkContentConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldLinkContentConfigurationPtrInput` via:
//
//	        TemplateTableFieldLinkContentConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldLinkContentConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldLinkContentConfigurationPtrOutput() TemplateTableFieldLinkContentConfigurationPtrOutput
	ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(context.Context) TemplateTableFieldLinkContentConfigurationPtrOutput
}

type templateTableFieldLinkContentConfigurationPtrType TemplateTableFieldLinkContentConfigurationArgs

func TemplateTableFieldLinkContentConfigurationPtr(v *TemplateTableFieldLinkContentConfigurationArgs) TemplateTableFieldLinkContentConfigurationPtrInput {
	return (*templateTableFieldLinkContentConfigurationPtrType)(v)
}

func (*templateTableFieldLinkContentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (i *templateTableFieldLinkContentConfigurationPtrType) ToTemplateTableFieldLinkContentConfigurationPtrOutput() TemplateTableFieldLinkContentConfigurationPtrOutput {
	return i.ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldLinkContentConfigurationPtrType) ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldLinkContentConfigurationPtrOutput)
}

type TemplateTableFieldLinkContentConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldLinkContentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldLinkContentConfigurationOutput) ToTemplateTableFieldLinkContentConfigurationOutput() TemplateTableFieldLinkContentConfigurationOutput {
	return o
}

func (o TemplateTableFieldLinkContentConfigurationOutput) ToTemplateTableFieldLinkContentConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationOutput {
	return o
}

func (o TemplateTableFieldLinkContentConfigurationOutput) ToTemplateTableFieldLinkContentConfigurationPtrOutput() TemplateTableFieldLinkContentConfigurationPtrOutput {
	return o.ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldLinkContentConfigurationOutput) ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldLinkContentConfiguration) *TemplateTableFieldLinkContentConfiguration {
		return &v
	}).(TemplateTableFieldLinkContentConfigurationPtrOutput)
}

func (o TemplateTableFieldLinkContentConfigurationOutput) CustomIconContent() TemplateTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldLinkContentConfiguration) *TemplateTableFieldCustomIconContent {
		return v.CustomIconContent
	}).(TemplateTableFieldCustomIconContentPtrOutput)
}

func (o TemplateTableFieldLinkContentConfigurationOutput) CustomTextContent() TemplateTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldLinkContentConfiguration) *TemplateTableFieldCustomTextContent {
		return v.CustomTextContent
	}).(TemplateTableFieldCustomTextContentPtrOutput)
}

type TemplateTableFieldLinkContentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldLinkContentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldLinkContentConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldLinkContentConfigurationPtrOutput) ToTemplateTableFieldLinkContentConfigurationPtrOutput() TemplateTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldLinkContentConfigurationPtrOutput) ToTemplateTableFieldLinkContentConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldLinkContentConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldLinkContentConfigurationPtrOutput) Elem() TemplateTableFieldLinkContentConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkContentConfiguration) TemplateTableFieldLinkContentConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldLinkContentConfiguration
		return ret
	}).(TemplateTableFieldLinkContentConfigurationOutput)
}

func (o TemplateTableFieldLinkContentConfigurationPtrOutput) CustomIconContent() TemplateTableFieldCustomIconContentPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkContentConfiguration) *TemplateTableFieldCustomIconContent {
		if v == nil {
			return nil
		}
		return v.CustomIconContent
	}).(TemplateTableFieldCustomIconContentPtrOutput)
}

func (o TemplateTableFieldLinkContentConfigurationPtrOutput) CustomTextContent() TemplateTableFieldCustomTextContentPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldLinkContentConfiguration) *TemplateTableFieldCustomTextContent {
		if v == nil {
			return nil
		}
		return v.CustomTextContent
	}).(TemplateTableFieldCustomTextContentPtrOutput)
}

type TemplateTableFieldOption struct {
	CustomLabel *string                             `pulumi:"customLabel"`
	FieldId     string                              `pulumi:"fieldId"`
	UrlStyling  *TemplateTableFieldUrlConfiguration `pulumi:"urlStyling"`
	Visibility  *TemplateVisibility                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width *string `pulumi:"width"`
}

// TemplateTableFieldOptionInput is an input type that accepts TemplateTableFieldOptionArgs and TemplateTableFieldOptionOutput values.
// You can construct a concrete instance of `TemplateTableFieldOptionInput` via:
//
//	TemplateTableFieldOptionArgs{...}
type TemplateTableFieldOptionInput interface {
	pulumi.Input

	ToTemplateTableFieldOptionOutput() TemplateTableFieldOptionOutput
	ToTemplateTableFieldOptionOutputWithContext(context.Context) TemplateTableFieldOptionOutput
}

type TemplateTableFieldOptionArgs struct {
	CustomLabel pulumi.StringPtrInput                      `pulumi:"customLabel"`
	FieldId     pulumi.StringInput                         `pulumi:"fieldId"`
	UrlStyling  TemplateTableFieldUrlConfigurationPtrInput `pulumi:"urlStyling"`
	Visibility  TemplateVisibilityPtrInput                 `pulumi:"visibility"`
	// String based length that is composed of value and unit in px
	Width pulumi.StringPtrInput `pulumi:"width"`
}

func (TemplateTableFieldOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldOption)(nil)).Elem()
}

func (i TemplateTableFieldOptionArgs) ToTemplateTableFieldOptionOutput() TemplateTableFieldOptionOutput {
	return i.ToTemplateTableFieldOptionOutputWithContext(context.Background())
}

func (i TemplateTableFieldOptionArgs) ToTemplateTableFieldOptionOutputWithContext(ctx context.Context) TemplateTableFieldOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldOptionOutput)
}

// TemplateTableFieldOptionArrayInput is an input type that accepts TemplateTableFieldOptionArray and TemplateTableFieldOptionArrayOutput values.
// You can construct a concrete instance of `TemplateTableFieldOptionArrayInput` via:
//
//	TemplateTableFieldOptionArray{ TemplateTableFieldOptionArgs{...} }
type TemplateTableFieldOptionArrayInput interface {
	pulumi.Input

	ToTemplateTableFieldOptionArrayOutput() TemplateTableFieldOptionArrayOutput
	ToTemplateTableFieldOptionArrayOutputWithContext(context.Context) TemplateTableFieldOptionArrayOutput
}

type TemplateTableFieldOptionArray []TemplateTableFieldOptionInput

func (TemplateTableFieldOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableFieldOption)(nil)).Elem()
}

func (i TemplateTableFieldOptionArray) ToTemplateTableFieldOptionArrayOutput() TemplateTableFieldOptionArrayOutput {
	return i.ToTemplateTableFieldOptionArrayOutputWithContext(context.Background())
}

func (i TemplateTableFieldOptionArray) ToTemplateTableFieldOptionArrayOutputWithContext(ctx context.Context) TemplateTableFieldOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldOptionArrayOutput)
}

type TemplateTableFieldOptionOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldOption)(nil)).Elem()
}

func (o TemplateTableFieldOptionOutput) ToTemplateTableFieldOptionOutput() TemplateTableFieldOptionOutput {
	return o
}

func (o TemplateTableFieldOptionOutput) ToTemplateTableFieldOptionOutputWithContext(ctx context.Context) TemplateTableFieldOptionOutput {
	return o
}

func (o TemplateTableFieldOptionOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldOption) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateTableFieldOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTableFieldOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateTableFieldOptionOutput) UrlStyling() TemplateTableFieldUrlConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldOption) *TemplateTableFieldUrlConfiguration { return v.UrlStyling }).(TemplateTableFieldUrlConfigurationPtrOutput)
}

func (o TemplateTableFieldOptionOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldOption) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

// String based length that is composed of value and unit in px
func (o TemplateTableFieldOptionOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldOption) *string { return v.Width }).(pulumi.StringPtrOutput)
}

type TemplateTableFieldOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableFieldOption)(nil)).Elem()
}

func (o TemplateTableFieldOptionArrayOutput) ToTemplateTableFieldOptionArrayOutput() TemplateTableFieldOptionArrayOutput {
	return o
}

func (o TemplateTableFieldOptionArrayOutput) ToTemplateTableFieldOptionArrayOutputWithContext(ctx context.Context) TemplateTableFieldOptionArrayOutput {
	return o
}

func (o TemplateTableFieldOptionArrayOutput) Index(i pulumi.IntInput) TemplateTableFieldOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTableFieldOption {
		return vs[0].([]TemplateTableFieldOption)[vs[1].(int)]
	}).(TemplateTableFieldOptionOutput)
}

type TemplateTableFieldOptions struct {
	Order                []string                         `pulumi:"order"`
	PinnedFieldOptions   *TemplateTablePinnedFieldOptions `pulumi:"pinnedFieldOptions"`
	SelectedFieldOptions []TemplateTableFieldOption       `pulumi:"selectedFieldOptions"`
}

// TemplateTableFieldOptionsInput is an input type that accepts TemplateTableFieldOptionsArgs and TemplateTableFieldOptionsOutput values.
// You can construct a concrete instance of `TemplateTableFieldOptionsInput` via:
//
//	TemplateTableFieldOptionsArgs{...}
type TemplateTableFieldOptionsInput interface {
	pulumi.Input

	ToTemplateTableFieldOptionsOutput() TemplateTableFieldOptionsOutput
	ToTemplateTableFieldOptionsOutputWithContext(context.Context) TemplateTableFieldOptionsOutput
}

type TemplateTableFieldOptionsArgs struct {
	Order                pulumi.StringArrayInput                 `pulumi:"order"`
	PinnedFieldOptions   TemplateTablePinnedFieldOptionsPtrInput `pulumi:"pinnedFieldOptions"`
	SelectedFieldOptions TemplateTableFieldOptionArrayInput      `pulumi:"selectedFieldOptions"`
}

func (TemplateTableFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldOptions)(nil)).Elem()
}

func (i TemplateTableFieldOptionsArgs) ToTemplateTableFieldOptionsOutput() TemplateTableFieldOptionsOutput {
	return i.ToTemplateTableFieldOptionsOutputWithContext(context.Background())
}

func (i TemplateTableFieldOptionsArgs) ToTemplateTableFieldOptionsOutputWithContext(ctx context.Context) TemplateTableFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldOptionsOutput)
}

func (i TemplateTableFieldOptionsArgs) ToTemplateTableFieldOptionsPtrOutput() TemplateTableFieldOptionsPtrOutput {
	return i.ToTemplateTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldOptionsArgs) ToTemplateTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldOptionsOutput).ToTemplateTableFieldOptionsPtrOutputWithContext(ctx)
}

// TemplateTableFieldOptionsPtrInput is an input type that accepts TemplateTableFieldOptionsArgs, TemplateTableFieldOptionsPtr and TemplateTableFieldOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldOptionsPtrInput` via:
//
//	        TemplateTableFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldOptionsPtrOutput() TemplateTableFieldOptionsPtrOutput
	ToTemplateTableFieldOptionsPtrOutputWithContext(context.Context) TemplateTableFieldOptionsPtrOutput
}

type templateTableFieldOptionsPtrType TemplateTableFieldOptionsArgs

func TemplateTableFieldOptionsPtr(v *TemplateTableFieldOptionsArgs) TemplateTableFieldOptionsPtrInput {
	return (*templateTableFieldOptionsPtrType)(v)
}

func (*templateTableFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldOptions)(nil)).Elem()
}

func (i *templateTableFieldOptionsPtrType) ToTemplateTableFieldOptionsPtrOutput() TemplateTableFieldOptionsPtrOutput {
	return i.ToTemplateTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldOptionsPtrType) ToTemplateTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTableFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldOptionsPtrOutput)
}

type TemplateTableFieldOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldOptions)(nil)).Elem()
}

func (o TemplateTableFieldOptionsOutput) ToTemplateTableFieldOptionsOutput() TemplateTableFieldOptionsOutput {
	return o
}

func (o TemplateTableFieldOptionsOutput) ToTemplateTableFieldOptionsOutputWithContext(ctx context.Context) TemplateTableFieldOptionsOutput {
	return o
}

func (o TemplateTableFieldOptionsOutput) ToTemplateTableFieldOptionsPtrOutput() TemplateTableFieldOptionsPtrOutput {
	return o.ToTemplateTableFieldOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldOptionsOutput) ToTemplateTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTableFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldOptions) *TemplateTableFieldOptions {
		return &v
	}).(TemplateTableFieldOptionsPtrOutput)
}

func (o TemplateTableFieldOptionsOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateTableFieldOptions) []string { return v.Order }).(pulumi.StringArrayOutput)
}

func (o TemplateTableFieldOptionsOutput) PinnedFieldOptions() TemplateTablePinnedFieldOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldOptions) *TemplateTablePinnedFieldOptions { return v.PinnedFieldOptions }).(TemplateTablePinnedFieldOptionsPtrOutput)
}

func (o TemplateTableFieldOptionsOutput) SelectedFieldOptions() TemplateTableFieldOptionArrayOutput {
	return o.ApplyT(func(v TemplateTableFieldOptions) []TemplateTableFieldOption { return v.SelectedFieldOptions }).(TemplateTableFieldOptionArrayOutput)
}

type TemplateTableFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldOptions)(nil)).Elem()
}

func (o TemplateTableFieldOptionsPtrOutput) ToTemplateTableFieldOptionsPtrOutput() TemplateTableFieldOptionsPtrOutput {
	return o
}

func (o TemplateTableFieldOptionsPtrOutput) ToTemplateTableFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTableFieldOptionsPtrOutput {
	return o
}

func (o TemplateTableFieldOptionsPtrOutput) Elem() TemplateTableFieldOptionsOutput {
	return o.ApplyT(func(v *TemplateTableFieldOptions) TemplateTableFieldOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldOptions
		return ret
	}).(TemplateTableFieldOptionsOutput)
}

func (o TemplateTableFieldOptionsPtrOutput) Order() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateTableFieldOptions) []string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringArrayOutput)
}

func (o TemplateTableFieldOptionsPtrOutput) PinnedFieldOptions() TemplateTablePinnedFieldOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldOptions) *TemplateTablePinnedFieldOptions {
		if v == nil {
			return nil
		}
		return v.PinnedFieldOptions
	}).(TemplateTablePinnedFieldOptionsPtrOutput)
}

func (o TemplateTableFieldOptionsPtrOutput) SelectedFieldOptions() TemplateTableFieldOptionArrayOutput {
	return o.ApplyT(func(v *TemplateTableFieldOptions) []TemplateTableFieldOption {
		if v == nil {
			return nil
		}
		return v.SelectedFieldOptions
	}).(TemplateTableFieldOptionArrayOutput)
}

type TemplateTableFieldUrlConfiguration struct {
	ImageConfiguration *TemplateTableFieldImageConfiguration `pulumi:"imageConfiguration"`
	LinkConfiguration  *TemplateTableFieldLinkConfiguration  `pulumi:"linkConfiguration"`
}

// TemplateTableFieldUrlConfigurationInput is an input type that accepts TemplateTableFieldUrlConfigurationArgs and TemplateTableFieldUrlConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableFieldUrlConfigurationInput` via:
//
//	TemplateTableFieldUrlConfigurationArgs{...}
type TemplateTableFieldUrlConfigurationInput interface {
	pulumi.Input

	ToTemplateTableFieldUrlConfigurationOutput() TemplateTableFieldUrlConfigurationOutput
	ToTemplateTableFieldUrlConfigurationOutputWithContext(context.Context) TemplateTableFieldUrlConfigurationOutput
}

type TemplateTableFieldUrlConfigurationArgs struct {
	ImageConfiguration TemplateTableFieldImageConfigurationPtrInput `pulumi:"imageConfiguration"`
	LinkConfiguration  TemplateTableFieldLinkConfigurationPtrInput  `pulumi:"linkConfiguration"`
}

func (TemplateTableFieldUrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldUrlConfiguration)(nil)).Elem()
}

func (i TemplateTableFieldUrlConfigurationArgs) ToTemplateTableFieldUrlConfigurationOutput() TemplateTableFieldUrlConfigurationOutput {
	return i.ToTemplateTableFieldUrlConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableFieldUrlConfigurationArgs) ToTemplateTableFieldUrlConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldUrlConfigurationOutput)
}

func (i TemplateTableFieldUrlConfigurationArgs) ToTemplateTableFieldUrlConfigurationPtrOutput() TemplateTableFieldUrlConfigurationPtrOutput {
	return i.ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldUrlConfigurationArgs) ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldUrlConfigurationOutput).ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableFieldUrlConfigurationPtrInput is an input type that accepts TemplateTableFieldUrlConfigurationArgs, TemplateTableFieldUrlConfigurationPtr and TemplateTableFieldUrlConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldUrlConfigurationPtrInput` via:
//
//	        TemplateTableFieldUrlConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldUrlConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldUrlConfigurationPtrOutput() TemplateTableFieldUrlConfigurationPtrOutput
	ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(context.Context) TemplateTableFieldUrlConfigurationPtrOutput
}

type templateTableFieldUrlConfigurationPtrType TemplateTableFieldUrlConfigurationArgs

func TemplateTableFieldUrlConfigurationPtr(v *TemplateTableFieldUrlConfigurationArgs) TemplateTableFieldUrlConfigurationPtrInput {
	return (*templateTableFieldUrlConfigurationPtrType)(v)
}

func (*templateTableFieldUrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldUrlConfiguration)(nil)).Elem()
}

func (i *templateTableFieldUrlConfigurationPtrType) ToTemplateTableFieldUrlConfigurationPtrOutput() TemplateTableFieldUrlConfigurationPtrOutput {
	return i.ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldUrlConfigurationPtrType) ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldUrlConfigurationPtrOutput)
}

type TemplateTableFieldUrlConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldUrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldUrlConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldUrlConfigurationOutput) ToTemplateTableFieldUrlConfigurationOutput() TemplateTableFieldUrlConfigurationOutput {
	return o
}

func (o TemplateTableFieldUrlConfigurationOutput) ToTemplateTableFieldUrlConfigurationOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationOutput {
	return o
}

func (o TemplateTableFieldUrlConfigurationOutput) ToTemplateTableFieldUrlConfigurationPtrOutput() TemplateTableFieldUrlConfigurationPtrOutput {
	return o.ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldUrlConfigurationOutput) ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldUrlConfiguration) *TemplateTableFieldUrlConfiguration {
		return &v
	}).(TemplateTableFieldUrlConfigurationPtrOutput)
}

func (o TemplateTableFieldUrlConfigurationOutput) ImageConfiguration() TemplateTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldUrlConfiguration) *TemplateTableFieldImageConfiguration {
		return v.ImageConfiguration
	}).(TemplateTableFieldImageConfigurationPtrOutput)
}

func (o TemplateTableFieldUrlConfigurationOutput) LinkConfiguration() TemplateTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldUrlConfiguration) *TemplateTableFieldLinkConfiguration {
		return v.LinkConfiguration
	}).(TemplateTableFieldLinkConfigurationPtrOutput)
}

type TemplateTableFieldUrlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldUrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldUrlConfiguration)(nil)).Elem()
}

func (o TemplateTableFieldUrlConfigurationPtrOutput) ToTemplateTableFieldUrlConfigurationPtrOutput() TemplateTableFieldUrlConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldUrlConfigurationPtrOutput) ToTemplateTableFieldUrlConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableFieldUrlConfigurationPtrOutput {
	return o
}

func (o TemplateTableFieldUrlConfigurationPtrOutput) Elem() TemplateTableFieldUrlConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableFieldUrlConfiguration) TemplateTableFieldUrlConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldUrlConfiguration
		return ret
	}).(TemplateTableFieldUrlConfigurationOutput)
}

func (o TemplateTableFieldUrlConfigurationPtrOutput) ImageConfiguration() TemplateTableFieldImageConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldUrlConfiguration) *TemplateTableFieldImageConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageConfiguration
	}).(TemplateTableFieldImageConfigurationPtrOutput)
}

func (o TemplateTableFieldUrlConfigurationPtrOutput) LinkConfiguration() TemplateTableFieldLinkConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldUrlConfiguration) *TemplateTableFieldLinkConfiguration {
		if v == nil {
			return nil
		}
		return v.LinkConfiguration
	}).(TemplateTableFieldLinkConfigurationPtrOutput)
}

type TemplateTableFieldWells struct {
	TableAggregatedFieldWells   *TemplateTableAggregatedFieldWells   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells *TemplateTableUnaggregatedFieldWells `pulumi:"tableUnaggregatedFieldWells"`
}

// TemplateTableFieldWellsInput is an input type that accepts TemplateTableFieldWellsArgs and TemplateTableFieldWellsOutput values.
// You can construct a concrete instance of `TemplateTableFieldWellsInput` via:
//
//	TemplateTableFieldWellsArgs{...}
type TemplateTableFieldWellsInput interface {
	pulumi.Input

	ToTemplateTableFieldWellsOutput() TemplateTableFieldWellsOutput
	ToTemplateTableFieldWellsOutputWithContext(context.Context) TemplateTableFieldWellsOutput
}

type TemplateTableFieldWellsArgs struct {
	TableAggregatedFieldWells   TemplateTableAggregatedFieldWellsPtrInput   `pulumi:"tableAggregatedFieldWells"`
	TableUnaggregatedFieldWells TemplateTableUnaggregatedFieldWellsPtrInput `pulumi:"tableUnaggregatedFieldWells"`
}

func (TemplateTableFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldWells)(nil)).Elem()
}

func (i TemplateTableFieldWellsArgs) ToTemplateTableFieldWellsOutput() TemplateTableFieldWellsOutput {
	return i.ToTemplateTableFieldWellsOutputWithContext(context.Background())
}

func (i TemplateTableFieldWellsArgs) ToTemplateTableFieldWellsOutputWithContext(ctx context.Context) TemplateTableFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldWellsOutput)
}

func (i TemplateTableFieldWellsArgs) ToTemplateTableFieldWellsPtrOutput() TemplateTableFieldWellsPtrOutput {
	return i.ToTemplateTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateTableFieldWellsArgs) ToTemplateTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldWellsOutput).ToTemplateTableFieldWellsPtrOutputWithContext(ctx)
}

// TemplateTableFieldWellsPtrInput is an input type that accepts TemplateTableFieldWellsArgs, TemplateTableFieldWellsPtr and TemplateTableFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateTableFieldWellsPtrInput` via:
//
//	        TemplateTableFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateTableFieldWellsPtrOutput() TemplateTableFieldWellsPtrOutput
	ToTemplateTableFieldWellsPtrOutputWithContext(context.Context) TemplateTableFieldWellsPtrOutput
}

type templateTableFieldWellsPtrType TemplateTableFieldWellsArgs

func TemplateTableFieldWellsPtr(v *TemplateTableFieldWellsArgs) TemplateTableFieldWellsPtrInput {
	return (*templateTableFieldWellsPtrType)(v)
}

func (*templateTableFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldWells)(nil)).Elem()
}

func (i *templateTableFieldWellsPtrType) ToTemplateTableFieldWellsPtrOutput() TemplateTableFieldWellsPtrOutput {
	return i.ToTemplateTableFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateTableFieldWellsPtrType) ToTemplateTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableFieldWellsPtrOutput)
}

type TemplateTableFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableFieldWells)(nil)).Elem()
}

func (o TemplateTableFieldWellsOutput) ToTemplateTableFieldWellsOutput() TemplateTableFieldWellsOutput {
	return o
}

func (o TemplateTableFieldWellsOutput) ToTemplateTableFieldWellsOutputWithContext(ctx context.Context) TemplateTableFieldWellsOutput {
	return o
}

func (o TemplateTableFieldWellsOutput) ToTemplateTableFieldWellsPtrOutput() TemplateTableFieldWellsPtrOutput {
	return o.ToTemplateTableFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateTableFieldWellsOutput) ToTemplateTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableFieldWells) *TemplateTableFieldWells {
		return &v
	}).(TemplateTableFieldWellsPtrOutput)
}

func (o TemplateTableFieldWellsOutput) TableAggregatedFieldWells() TemplateTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldWells) *TemplateTableAggregatedFieldWells { return v.TableAggregatedFieldWells }).(TemplateTableAggregatedFieldWellsPtrOutput)
}

func (o TemplateTableFieldWellsOutput) TableUnaggregatedFieldWells() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateTableFieldWells) *TemplateTableUnaggregatedFieldWells {
		return v.TableUnaggregatedFieldWells
	}).(TemplateTableUnaggregatedFieldWellsPtrOutput)
}

type TemplateTableFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableFieldWells)(nil)).Elem()
}

func (o TemplateTableFieldWellsPtrOutput) ToTemplateTableFieldWellsPtrOutput() TemplateTableFieldWellsPtrOutput {
	return o
}

func (o TemplateTableFieldWellsPtrOutput) ToTemplateTableFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableFieldWellsPtrOutput {
	return o
}

func (o TemplateTableFieldWellsPtrOutput) Elem() TemplateTableFieldWellsOutput {
	return o.ApplyT(func(v *TemplateTableFieldWells) TemplateTableFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateTableFieldWells
		return ret
	}).(TemplateTableFieldWellsOutput)
}

func (o TemplateTableFieldWellsPtrOutput) TableAggregatedFieldWells() TemplateTableAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldWells) *TemplateTableAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableAggregatedFieldWells
	}).(TemplateTableAggregatedFieldWellsPtrOutput)
}

func (o TemplateTableFieldWellsPtrOutput) TableUnaggregatedFieldWells() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateTableFieldWells) *TemplateTableUnaggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TableUnaggregatedFieldWells
	}).(TemplateTableUnaggregatedFieldWellsPtrOutput)
}

type TemplateTableInlineVisualization struct {
	DataBars *TemplateDataBarsOptions `pulumi:"dataBars"`
}

// TemplateTableInlineVisualizationInput is an input type that accepts TemplateTableInlineVisualizationArgs and TemplateTableInlineVisualizationOutput values.
// You can construct a concrete instance of `TemplateTableInlineVisualizationInput` via:
//
//	TemplateTableInlineVisualizationArgs{...}
type TemplateTableInlineVisualizationInput interface {
	pulumi.Input

	ToTemplateTableInlineVisualizationOutput() TemplateTableInlineVisualizationOutput
	ToTemplateTableInlineVisualizationOutputWithContext(context.Context) TemplateTableInlineVisualizationOutput
}

type TemplateTableInlineVisualizationArgs struct {
	DataBars TemplateDataBarsOptionsPtrInput `pulumi:"dataBars"`
}

func (TemplateTableInlineVisualizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableInlineVisualization)(nil)).Elem()
}

func (i TemplateTableInlineVisualizationArgs) ToTemplateTableInlineVisualizationOutput() TemplateTableInlineVisualizationOutput {
	return i.ToTemplateTableInlineVisualizationOutputWithContext(context.Background())
}

func (i TemplateTableInlineVisualizationArgs) ToTemplateTableInlineVisualizationOutputWithContext(ctx context.Context) TemplateTableInlineVisualizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableInlineVisualizationOutput)
}

// TemplateTableInlineVisualizationArrayInput is an input type that accepts TemplateTableInlineVisualizationArray and TemplateTableInlineVisualizationArrayOutput values.
// You can construct a concrete instance of `TemplateTableInlineVisualizationArrayInput` via:
//
//	TemplateTableInlineVisualizationArray{ TemplateTableInlineVisualizationArgs{...} }
type TemplateTableInlineVisualizationArrayInput interface {
	pulumi.Input

	ToTemplateTableInlineVisualizationArrayOutput() TemplateTableInlineVisualizationArrayOutput
	ToTemplateTableInlineVisualizationArrayOutputWithContext(context.Context) TemplateTableInlineVisualizationArrayOutput
}

type TemplateTableInlineVisualizationArray []TemplateTableInlineVisualizationInput

func (TemplateTableInlineVisualizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableInlineVisualization)(nil)).Elem()
}

func (i TemplateTableInlineVisualizationArray) ToTemplateTableInlineVisualizationArrayOutput() TemplateTableInlineVisualizationArrayOutput {
	return i.ToTemplateTableInlineVisualizationArrayOutputWithContext(context.Background())
}

func (i TemplateTableInlineVisualizationArray) ToTemplateTableInlineVisualizationArrayOutputWithContext(ctx context.Context) TemplateTableInlineVisualizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableInlineVisualizationArrayOutput)
}

type TemplateTableInlineVisualizationOutput struct{ *pulumi.OutputState }

func (TemplateTableInlineVisualizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableInlineVisualization)(nil)).Elem()
}

func (o TemplateTableInlineVisualizationOutput) ToTemplateTableInlineVisualizationOutput() TemplateTableInlineVisualizationOutput {
	return o
}

func (o TemplateTableInlineVisualizationOutput) ToTemplateTableInlineVisualizationOutputWithContext(ctx context.Context) TemplateTableInlineVisualizationOutput {
	return o
}

func (o TemplateTableInlineVisualizationOutput) DataBars() TemplateDataBarsOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableInlineVisualization) *TemplateDataBarsOptions { return v.DataBars }).(TemplateDataBarsOptionsPtrOutput)
}

type TemplateTableInlineVisualizationArrayOutput struct{ *pulumi.OutputState }

func (TemplateTableInlineVisualizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableInlineVisualization)(nil)).Elem()
}

func (o TemplateTableInlineVisualizationArrayOutput) ToTemplateTableInlineVisualizationArrayOutput() TemplateTableInlineVisualizationArrayOutput {
	return o
}

func (o TemplateTableInlineVisualizationArrayOutput) ToTemplateTableInlineVisualizationArrayOutputWithContext(ctx context.Context) TemplateTableInlineVisualizationArrayOutput {
	return o
}

func (o TemplateTableInlineVisualizationArrayOutput) Index(i pulumi.IntInput) TemplateTableInlineVisualizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTableInlineVisualization {
		return vs[0].([]TemplateTableInlineVisualization)[vs[1].(int)]
	}).(TemplateTableInlineVisualizationOutput)
}

type TemplateTableOptions struct {
	CellStyle                *TemplateTableCellStyle           `pulumi:"cellStyle"`
	HeaderStyle              *TemplateTableCellStyle           `pulumi:"headerStyle"`
	Orientation              *TemplateTableOrientation         `pulumi:"orientation"`
	RowAlternateColorOptions *TemplateRowAlternateColorOptions `pulumi:"rowAlternateColorOptions"`
}

// TemplateTableOptionsInput is an input type that accepts TemplateTableOptionsArgs and TemplateTableOptionsOutput values.
// You can construct a concrete instance of `TemplateTableOptionsInput` via:
//
//	TemplateTableOptionsArgs{...}
type TemplateTableOptionsInput interface {
	pulumi.Input

	ToTemplateTableOptionsOutput() TemplateTableOptionsOutput
	ToTemplateTableOptionsOutputWithContext(context.Context) TemplateTableOptionsOutput
}

type TemplateTableOptionsArgs struct {
	CellStyle                TemplateTableCellStylePtrInput           `pulumi:"cellStyle"`
	HeaderStyle              TemplateTableCellStylePtrInput           `pulumi:"headerStyle"`
	Orientation              TemplateTableOrientationPtrInput         `pulumi:"orientation"`
	RowAlternateColorOptions TemplateRowAlternateColorOptionsPtrInput `pulumi:"rowAlternateColorOptions"`
}

func (TemplateTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableOptions)(nil)).Elem()
}

func (i TemplateTableOptionsArgs) ToTemplateTableOptionsOutput() TemplateTableOptionsOutput {
	return i.ToTemplateTableOptionsOutputWithContext(context.Background())
}

func (i TemplateTableOptionsArgs) ToTemplateTableOptionsOutputWithContext(ctx context.Context) TemplateTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableOptionsOutput)
}

func (i TemplateTableOptionsArgs) ToTemplateTableOptionsPtrOutput() TemplateTableOptionsPtrOutput {
	return i.ToTemplateTableOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTableOptionsArgs) ToTemplateTableOptionsPtrOutputWithContext(ctx context.Context) TemplateTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableOptionsOutput).ToTemplateTableOptionsPtrOutputWithContext(ctx)
}

// TemplateTableOptionsPtrInput is an input type that accepts TemplateTableOptionsArgs, TemplateTableOptionsPtr and TemplateTableOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTableOptionsPtrInput` via:
//
//	        TemplateTableOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTableOptionsPtrOutput() TemplateTableOptionsPtrOutput
	ToTemplateTableOptionsPtrOutputWithContext(context.Context) TemplateTableOptionsPtrOutput
}

type templateTableOptionsPtrType TemplateTableOptionsArgs

func TemplateTableOptionsPtr(v *TemplateTableOptionsArgs) TemplateTableOptionsPtrInput {
	return (*templateTableOptionsPtrType)(v)
}

func (*templateTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableOptions)(nil)).Elem()
}

func (i *templateTableOptionsPtrType) ToTemplateTableOptionsPtrOutput() TemplateTableOptionsPtrOutput {
	return i.ToTemplateTableOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTableOptionsPtrType) ToTemplateTableOptionsPtrOutputWithContext(ctx context.Context) TemplateTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableOptionsPtrOutput)
}

type TemplateTableOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableOptions)(nil)).Elem()
}

func (o TemplateTableOptionsOutput) ToTemplateTableOptionsOutput() TemplateTableOptionsOutput {
	return o
}

func (o TemplateTableOptionsOutput) ToTemplateTableOptionsOutputWithContext(ctx context.Context) TemplateTableOptionsOutput {
	return o
}

func (o TemplateTableOptionsOutput) ToTemplateTableOptionsPtrOutput() TemplateTableOptionsPtrOutput {
	return o.ToTemplateTableOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTableOptionsOutput) ToTemplateTableOptionsPtrOutputWithContext(ctx context.Context) TemplateTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableOptions) *TemplateTableOptions {
		return &v
	}).(TemplateTableOptionsPtrOutput)
}

func (o TemplateTableOptionsOutput) CellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateTableOptions) *TemplateTableCellStyle { return v.CellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTableOptionsOutput) HeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateTableOptions) *TemplateTableCellStyle { return v.HeaderStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTableOptionsOutput) Orientation() TemplateTableOrientationPtrOutput {
	return o.ApplyT(func(v TemplateTableOptions) *TemplateTableOrientation { return v.Orientation }).(TemplateTableOrientationPtrOutput)
}

func (o TemplateTableOptionsOutput) RowAlternateColorOptions() TemplateRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableOptions) *TemplateRowAlternateColorOptions { return v.RowAlternateColorOptions }).(TemplateRowAlternateColorOptionsPtrOutput)
}

type TemplateTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableOptions)(nil)).Elem()
}

func (o TemplateTableOptionsPtrOutput) ToTemplateTableOptionsPtrOutput() TemplateTableOptionsPtrOutput {
	return o
}

func (o TemplateTableOptionsPtrOutput) ToTemplateTableOptionsPtrOutputWithContext(ctx context.Context) TemplateTableOptionsPtrOutput {
	return o
}

func (o TemplateTableOptionsPtrOutput) Elem() TemplateTableOptionsOutput {
	return o.ApplyT(func(v *TemplateTableOptions) TemplateTableOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTableOptions
		return ret
	}).(TemplateTableOptionsOutput)
}

func (o TemplateTableOptionsPtrOutput) CellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.CellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTableOptionsPtrOutput) HeaderStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateTableOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.HeaderStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTableOptionsPtrOutput) Orientation() TemplateTableOrientationPtrOutput {
	return o.ApplyT(func(v *TemplateTableOptions) *TemplateTableOrientation {
		if v == nil {
			return nil
		}
		return v.Orientation
	}).(TemplateTableOrientationPtrOutput)
}

func (o TemplateTableOptionsPtrOutput) RowAlternateColorOptions() TemplateRowAlternateColorOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableOptions) *TemplateRowAlternateColorOptions {
		if v == nil {
			return nil
		}
		return v.RowAlternateColorOptions
	}).(TemplateRowAlternateColorOptionsPtrOutput)
}

type TemplateTablePaginatedReportOptions struct {
	OverflowColumnHeaderVisibility *TemplateVisibility `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     *TemplateVisibility `pulumi:"verticalOverflowVisibility"`
}

// TemplateTablePaginatedReportOptionsInput is an input type that accepts TemplateTablePaginatedReportOptionsArgs and TemplateTablePaginatedReportOptionsOutput values.
// You can construct a concrete instance of `TemplateTablePaginatedReportOptionsInput` via:
//
//	TemplateTablePaginatedReportOptionsArgs{...}
type TemplateTablePaginatedReportOptionsInput interface {
	pulumi.Input

	ToTemplateTablePaginatedReportOptionsOutput() TemplateTablePaginatedReportOptionsOutput
	ToTemplateTablePaginatedReportOptionsOutputWithContext(context.Context) TemplateTablePaginatedReportOptionsOutput
}

type TemplateTablePaginatedReportOptionsArgs struct {
	OverflowColumnHeaderVisibility TemplateVisibilityPtrInput `pulumi:"overflowColumnHeaderVisibility"`
	VerticalOverflowVisibility     TemplateVisibilityPtrInput `pulumi:"verticalOverflowVisibility"`
}

func (TemplateTablePaginatedReportOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTablePaginatedReportOptions)(nil)).Elem()
}

func (i TemplateTablePaginatedReportOptionsArgs) ToTemplateTablePaginatedReportOptionsOutput() TemplateTablePaginatedReportOptionsOutput {
	return i.ToTemplateTablePaginatedReportOptionsOutputWithContext(context.Background())
}

func (i TemplateTablePaginatedReportOptionsArgs) ToTemplateTablePaginatedReportOptionsOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePaginatedReportOptionsOutput)
}

func (i TemplateTablePaginatedReportOptionsArgs) ToTemplateTablePaginatedReportOptionsPtrOutput() TemplateTablePaginatedReportOptionsPtrOutput {
	return i.ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTablePaginatedReportOptionsArgs) ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePaginatedReportOptionsOutput).ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(ctx)
}

// TemplateTablePaginatedReportOptionsPtrInput is an input type that accepts TemplateTablePaginatedReportOptionsArgs, TemplateTablePaginatedReportOptionsPtr and TemplateTablePaginatedReportOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTablePaginatedReportOptionsPtrInput` via:
//
//	        TemplateTablePaginatedReportOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTablePaginatedReportOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTablePaginatedReportOptionsPtrOutput() TemplateTablePaginatedReportOptionsPtrOutput
	ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(context.Context) TemplateTablePaginatedReportOptionsPtrOutput
}

type templateTablePaginatedReportOptionsPtrType TemplateTablePaginatedReportOptionsArgs

func TemplateTablePaginatedReportOptionsPtr(v *TemplateTablePaginatedReportOptionsArgs) TemplateTablePaginatedReportOptionsPtrInput {
	return (*templateTablePaginatedReportOptionsPtrType)(v)
}

func (*templateTablePaginatedReportOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTablePaginatedReportOptions)(nil)).Elem()
}

func (i *templateTablePaginatedReportOptionsPtrType) ToTemplateTablePaginatedReportOptionsPtrOutput() TemplateTablePaginatedReportOptionsPtrOutput {
	return i.ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTablePaginatedReportOptionsPtrType) ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePaginatedReportOptionsPtrOutput)
}

type TemplateTablePaginatedReportOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTablePaginatedReportOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTablePaginatedReportOptions)(nil)).Elem()
}

func (o TemplateTablePaginatedReportOptionsOutput) ToTemplateTablePaginatedReportOptionsOutput() TemplateTablePaginatedReportOptionsOutput {
	return o
}

func (o TemplateTablePaginatedReportOptionsOutput) ToTemplateTablePaginatedReportOptionsOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsOutput {
	return o
}

func (o TemplateTablePaginatedReportOptionsOutput) ToTemplateTablePaginatedReportOptionsPtrOutput() TemplateTablePaginatedReportOptionsPtrOutput {
	return o.ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTablePaginatedReportOptionsOutput) ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTablePaginatedReportOptions) *TemplateTablePaginatedReportOptions {
		return &v
	}).(TemplateTablePaginatedReportOptionsPtrOutput)
}

func (o TemplateTablePaginatedReportOptionsOutput) OverflowColumnHeaderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTablePaginatedReportOptions) *TemplateVisibility {
		return v.OverflowColumnHeaderVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateTablePaginatedReportOptionsOutput) VerticalOverflowVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTablePaginatedReportOptions) *TemplateVisibility { return v.VerticalOverflowVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTablePaginatedReportOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTablePaginatedReportOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTablePaginatedReportOptions)(nil)).Elem()
}

func (o TemplateTablePaginatedReportOptionsPtrOutput) ToTemplateTablePaginatedReportOptionsPtrOutput() TemplateTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o TemplateTablePaginatedReportOptionsPtrOutput) ToTemplateTablePaginatedReportOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePaginatedReportOptionsPtrOutput {
	return o
}

func (o TemplateTablePaginatedReportOptionsPtrOutput) Elem() TemplateTablePaginatedReportOptionsOutput {
	return o.ApplyT(func(v *TemplateTablePaginatedReportOptions) TemplateTablePaginatedReportOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTablePaginatedReportOptions
		return ret
	}).(TemplateTablePaginatedReportOptionsOutput)
}

func (o TemplateTablePaginatedReportOptionsPtrOutput) OverflowColumnHeaderVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTablePaginatedReportOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.OverflowColumnHeaderVisibility
	}).(TemplateVisibilityPtrOutput)
}

func (o TemplateTablePaginatedReportOptionsPtrOutput) VerticalOverflowVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTablePaginatedReportOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.VerticalOverflowVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTablePinnedFieldOptions struct {
	PinnedLeftFields []string `pulumi:"pinnedLeftFields"`
}

// TemplateTablePinnedFieldOptionsInput is an input type that accepts TemplateTablePinnedFieldOptionsArgs and TemplateTablePinnedFieldOptionsOutput values.
// You can construct a concrete instance of `TemplateTablePinnedFieldOptionsInput` via:
//
//	TemplateTablePinnedFieldOptionsArgs{...}
type TemplateTablePinnedFieldOptionsInput interface {
	pulumi.Input

	ToTemplateTablePinnedFieldOptionsOutput() TemplateTablePinnedFieldOptionsOutput
	ToTemplateTablePinnedFieldOptionsOutputWithContext(context.Context) TemplateTablePinnedFieldOptionsOutput
}

type TemplateTablePinnedFieldOptionsArgs struct {
	PinnedLeftFields pulumi.StringArrayInput `pulumi:"pinnedLeftFields"`
}

func (TemplateTablePinnedFieldOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTablePinnedFieldOptions)(nil)).Elem()
}

func (i TemplateTablePinnedFieldOptionsArgs) ToTemplateTablePinnedFieldOptionsOutput() TemplateTablePinnedFieldOptionsOutput {
	return i.ToTemplateTablePinnedFieldOptionsOutputWithContext(context.Background())
}

func (i TemplateTablePinnedFieldOptionsArgs) ToTemplateTablePinnedFieldOptionsOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePinnedFieldOptionsOutput)
}

func (i TemplateTablePinnedFieldOptionsArgs) ToTemplateTablePinnedFieldOptionsPtrOutput() TemplateTablePinnedFieldOptionsPtrOutput {
	return i.ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTablePinnedFieldOptionsArgs) ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePinnedFieldOptionsOutput).ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(ctx)
}

// TemplateTablePinnedFieldOptionsPtrInput is an input type that accepts TemplateTablePinnedFieldOptionsArgs, TemplateTablePinnedFieldOptionsPtr and TemplateTablePinnedFieldOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTablePinnedFieldOptionsPtrInput` via:
//
//	        TemplateTablePinnedFieldOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTablePinnedFieldOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTablePinnedFieldOptionsPtrOutput() TemplateTablePinnedFieldOptionsPtrOutput
	ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(context.Context) TemplateTablePinnedFieldOptionsPtrOutput
}

type templateTablePinnedFieldOptionsPtrType TemplateTablePinnedFieldOptionsArgs

func TemplateTablePinnedFieldOptionsPtr(v *TemplateTablePinnedFieldOptionsArgs) TemplateTablePinnedFieldOptionsPtrInput {
	return (*templateTablePinnedFieldOptionsPtrType)(v)
}

func (*templateTablePinnedFieldOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTablePinnedFieldOptions)(nil)).Elem()
}

func (i *templateTablePinnedFieldOptionsPtrType) ToTemplateTablePinnedFieldOptionsPtrOutput() TemplateTablePinnedFieldOptionsPtrOutput {
	return i.ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTablePinnedFieldOptionsPtrType) ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTablePinnedFieldOptionsPtrOutput)
}

type TemplateTablePinnedFieldOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTablePinnedFieldOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTablePinnedFieldOptions)(nil)).Elem()
}

func (o TemplateTablePinnedFieldOptionsOutput) ToTemplateTablePinnedFieldOptionsOutput() TemplateTablePinnedFieldOptionsOutput {
	return o
}

func (o TemplateTablePinnedFieldOptionsOutput) ToTemplateTablePinnedFieldOptionsOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsOutput {
	return o
}

func (o TemplateTablePinnedFieldOptionsOutput) ToTemplateTablePinnedFieldOptionsPtrOutput() TemplateTablePinnedFieldOptionsPtrOutput {
	return o.ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTablePinnedFieldOptionsOutput) ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTablePinnedFieldOptions) *TemplateTablePinnedFieldOptions {
		return &v
	}).(TemplateTablePinnedFieldOptionsPtrOutput)
}

func (o TemplateTablePinnedFieldOptionsOutput) PinnedLeftFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateTablePinnedFieldOptions) []string { return v.PinnedLeftFields }).(pulumi.StringArrayOutput)
}

type TemplateTablePinnedFieldOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTablePinnedFieldOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTablePinnedFieldOptions)(nil)).Elem()
}

func (o TemplateTablePinnedFieldOptionsPtrOutput) ToTemplateTablePinnedFieldOptionsPtrOutput() TemplateTablePinnedFieldOptionsPtrOutput {
	return o
}

func (o TemplateTablePinnedFieldOptionsPtrOutput) ToTemplateTablePinnedFieldOptionsPtrOutputWithContext(ctx context.Context) TemplateTablePinnedFieldOptionsPtrOutput {
	return o
}

func (o TemplateTablePinnedFieldOptionsPtrOutput) Elem() TemplateTablePinnedFieldOptionsOutput {
	return o.ApplyT(func(v *TemplateTablePinnedFieldOptions) TemplateTablePinnedFieldOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTablePinnedFieldOptions
		return ret
	}).(TemplateTablePinnedFieldOptionsOutput)
}

func (o TemplateTablePinnedFieldOptionsPtrOutput) PinnedLeftFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateTablePinnedFieldOptions) []string {
		if v == nil {
			return nil
		}
		return v.PinnedLeftFields
	}).(pulumi.StringArrayOutput)
}

type TemplateTableRowConditionalFormatting struct {
	BackgroundColor *TemplateConditionalFormattingColor `pulumi:"backgroundColor"`
	TextColor       *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateTableRowConditionalFormattingInput is an input type that accepts TemplateTableRowConditionalFormattingArgs and TemplateTableRowConditionalFormattingOutput values.
// You can construct a concrete instance of `TemplateTableRowConditionalFormattingInput` via:
//
//	TemplateTableRowConditionalFormattingArgs{...}
type TemplateTableRowConditionalFormattingInput interface {
	pulumi.Input

	ToTemplateTableRowConditionalFormattingOutput() TemplateTableRowConditionalFormattingOutput
	ToTemplateTableRowConditionalFormattingOutputWithContext(context.Context) TemplateTableRowConditionalFormattingOutput
}

type TemplateTableRowConditionalFormattingArgs struct {
	BackgroundColor TemplateConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	TextColor       TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateTableRowConditionalFormattingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableRowConditionalFormatting)(nil)).Elem()
}

func (i TemplateTableRowConditionalFormattingArgs) ToTemplateTableRowConditionalFormattingOutput() TemplateTableRowConditionalFormattingOutput {
	return i.ToTemplateTableRowConditionalFormattingOutputWithContext(context.Background())
}

func (i TemplateTableRowConditionalFormattingArgs) ToTemplateTableRowConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableRowConditionalFormattingOutput)
}

func (i TemplateTableRowConditionalFormattingArgs) ToTemplateTableRowConditionalFormattingPtrOutput() TemplateTableRowConditionalFormattingPtrOutput {
	return i.ToTemplateTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i TemplateTableRowConditionalFormattingArgs) ToTemplateTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableRowConditionalFormattingOutput).ToTemplateTableRowConditionalFormattingPtrOutputWithContext(ctx)
}

// TemplateTableRowConditionalFormattingPtrInput is an input type that accepts TemplateTableRowConditionalFormattingArgs, TemplateTableRowConditionalFormattingPtr and TemplateTableRowConditionalFormattingPtrOutput values.
// You can construct a concrete instance of `TemplateTableRowConditionalFormattingPtrInput` via:
//
//	        TemplateTableRowConditionalFormattingArgs{...}
//
//	or:
//
//	        nil
type TemplateTableRowConditionalFormattingPtrInput interface {
	pulumi.Input

	ToTemplateTableRowConditionalFormattingPtrOutput() TemplateTableRowConditionalFormattingPtrOutput
	ToTemplateTableRowConditionalFormattingPtrOutputWithContext(context.Context) TemplateTableRowConditionalFormattingPtrOutput
}

type templateTableRowConditionalFormattingPtrType TemplateTableRowConditionalFormattingArgs

func TemplateTableRowConditionalFormattingPtr(v *TemplateTableRowConditionalFormattingArgs) TemplateTableRowConditionalFormattingPtrInput {
	return (*templateTableRowConditionalFormattingPtrType)(v)
}

func (*templateTableRowConditionalFormattingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableRowConditionalFormatting)(nil)).Elem()
}

func (i *templateTableRowConditionalFormattingPtrType) ToTemplateTableRowConditionalFormattingPtrOutput() TemplateTableRowConditionalFormattingPtrOutput {
	return i.ToTemplateTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (i *templateTableRowConditionalFormattingPtrType) ToTemplateTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableRowConditionalFormattingPtrOutput)
}

type TemplateTableRowConditionalFormattingOutput struct{ *pulumi.OutputState }

func (TemplateTableRowConditionalFormattingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableRowConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableRowConditionalFormattingOutput) ToTemplateTableRowConditionalFormattingOutput() TemplateTableRowConditionalFormattingOutput {
	return o
}

func (o TemplateTableRowConditionalFormattingOutput) ToTemplateTableRowConditionalFormattingOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingOutput {
	return o
}

func (o TemplateTableRowConditionalFormattingOutput) ToTemplateTableRowConditionalFormattingPtrOutput() TemplateTableRowConditionalFormattingPtrOutput {
	return o.ToTemplateTableRowConditionalFormattingPtrOutputWithContext(context.Background())
}

func (o TemplateTableRowConditionalFormattingOutput) ToTemplateTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableRowConditionalFormatting) *TemplateTableRowConditionalFormatting {
		return &v
	}).(TemplateTableRowConditionalFormattingPtrOutput)
}

func (o TemplateTableRowConditionalFormattingOutput) BackgroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateTableRowConditionalFormatting) *TemplateConditionalFormattingColor {
		return v.BackgroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

func (o TemplateTableRowConditionalFormattingOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateTableRowConditionalFormatting) *TemplateConditionalFormattingColor { return v.TextColor }).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateTableRowConditionalFormattingPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableRowConditionalFormattingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableRowConditionalFormatting)(nil)).Elem()
}

func (o TemplateTableRowConditionalFormattingPtrOutput) ToTemplateTableRowConditionalFormattingPtrOutput() TemplateTableRowConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableRowConditionalFormattingPtrOutput) ToTemplateTableRowConditionalFormattingPtrOutputWithContext(ctx context.Context) TemplateTableRowConditionalFormattingPtrOutput {
	return o
}

func (o TemplateTableRowConditionalFormattingPtrOutput) Elem() TemplateTableRowConditionalFormattingOutput {
	return o.ApplyT(func(v *TemplateTableRowConditionalFormatting) TemplateTableRowConditionalFormatting {
		if v != nil {
			return *v
		}
		var ret TemplateTableRowConditionalFormatting
		return ret
	}).(TemplateTableRowConditionalFormattingOutput)
}

func (o TemplateTableRowConditionalFormattingPtrOutput) BackgroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateTableRowConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

func (o TemplateTableRowConditionalFormattingPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateTableRowConditionalFormatting) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateTableSideBorderOptions struct {
	Bottom          *TemplateTableBorderOptions `pulumi:"bottom"`
	InnerHorizontal *TemplateTableBorderOptions `pulumi:"innerHorizontal"`
	InnerVertical   *TemplateTableBorderOptions `pulumi:"innerVertical"`
	Left            *TemplateTableBorderOptions `pulumi:"left"`
	Right           *TemplateTableBorderOptions `pulumi:"right"`
	Top             *TemplateTableBorderOptions `pulumi:"top"`
}

// TemplateTableSideBorderOptionsInput is an input type that accepts TemplateTableSideBorderOptionsArgs and TemplateTableSideBorderOptionsOutput values.
// You can construct a concrete instance of `TemplateTableSideBorderOptionsInput` via:
//
//	TemplateTableSideBorderOptionsArgs{...}
type TemplateTableSideBorderOptionsInput interface {
	pulumi.Input

	ToTemplateTableSideBorderOptionsOutput() TemplateTableSideBorderOptionsOutput
	ToTemplateTableSideBorderOptionsOutputWithContext(context.Context) TemplateTableSideBorderOptionsOutput
}

type TemplateTableSideBorderOptionsArgs struct {
	Bottom          TemplateTableBorderOptionsPtrInput `pulumi:"bottom"`
	InnerHorizontal TemplateTableBorderOptionsPtrInput `pulumi:"innerHorizontal"`
	InnerVertical   TemplateTableBorderOptionsPtrInput `pulumi:"innerVertical"`
	Left            TemplateTableBorderOptionsPtrInput `pulumi:"left"`
	Right           TemplateTableBorderOptionsPtrInput `pulumi:"right"`
	Top             TemplateTableBorderOptionsPtrInput `pulumi:"top"`
}

func (TemplateTableSideBorderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableSideBorderOptions)(nil)).Elem()
}

func (i TemplateTableSideBorderOptionsArgs) ToTemplateTableSideBorderOptionsOutput() TemplateTableSideBorderOptionsOutput {
	return i.ToTemplateTableSideBorderOptionsOutputWithContext(context.Background())
}

func (i TemplateTableSideBorderOptionsArgs) ToTemplateTableSideBorderOptionsOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSideBorderOptionsOutput)
}

func (i TemplateTableSideBorderOptionsArgs) ToTemplateTableSideBorderOptionsPtrOutput() TemplateTableSideBorderOptionsPtrOutput {
	return i.ToTemplateTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTableSideBorderOptionsArgs) ToTemplateTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSideBorderOptionsOutput).ToTemplateTableSideBorderOptionsPtrOutputWithContext(ctx)
}

// TemplateTableSideBorderOptionsPtrInput is an input type that accepts TemplateTableSideBorderOptionsArgs, TemplateTableSideBorderOptionsPtr and TemplateTableSideBorderOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTableSideBorderOptionsPtrInput` via:
//
//	        TemplateTableSideBorderOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableSideBorderOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTableSideBorderOptionsPtrOutput() TemplateTableSideBorderOptionsPtrOutput
	ToTemplateTableSideBorderOptionsPtrOutputWithContext(context.Context) TemplateTableSideBorderOptionsPtrOutput
}

type templateTableSideBorderOptionsPtrType TemplateTableSideBorderOptionsArgs

func TemplateTableSideBorderOptionsPtr(v *TemplateTableSideBorderOptionsArgs) TemplateTableSideBorderOptionsPtrInput {
	return (*templateTableSideBorderOptionsPtrType)(v)
}

func (*templateTableSideBorderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableSideBorderOptions)(nil)).Elem()
}

func (i *templateTableSideBorderOptionsPtrType) ToTemplateTableSideBorderOptionsPtrOutput() TemplateTableSideBorderOptionsPtrOutput {
	return i.ToTemplateTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTableSideBorderOptionsPtrType) ToTemplateTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSideBorderOptionsPtrOutput)
}

type TemplateTableSideBorderOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTableSideBorderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableSideBorderOptions)(nil)).Elem()
}

func (o TemplateTableSideBorderOptionsOutput) ToTemplateTableSideBorderOptionsOutput() TemplateTableSideBorderOptionsOutput {
	return o
}

func (o TemplateTableSideBorderOptionsOutput) ToTemplateTableSideBorderOptionsOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsOutput {
	return o
}

func (o TemplateTableSideBorderOptionsOutput) ToTemplateTableSideBorderOptionsPtrOutput() TemplateTableSideBorderOptionsPtrOutput {
	return o.ToTemplateTableSideBorderOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTableSideBorderOptionsOutput) ToTemplateTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableSideBorderOptions) *TemplateTableSideBorderOptions {
		return &v
	}).(TemplateTableSideBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) Bottom() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.Bottom }).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) InnerHorizontal() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.InnerHorizontal }).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) InnerVertical() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.InnerVertical }).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) Left() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.Left }).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) Right() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.Right }).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsOutput) Top() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableSideBorderOptions) *TemplateTableBorderOptions { return v.Top }).(TemplateTableBorderOptionsPtrOutput)
}

type TemplateTableSideBorderOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableSideBorderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableSideBorderOptions)(nil)).Elem()
}

func (o TemplateTableSideBorderOptionsPtrOutput) ToTemplateTableSideBorderOptionsPtrOutput() TemplateTableSideBorderOptionsPtrOutput {
	return o
}

func (o TemplateTableSideBorderOptionsPtrOutput) ToTemplateTableSideBorderOptionsPtrOutputWithContext(ctx context.Context) TemplateTableSideBorderOptionsPtrOutput {
	return o
}

func (o TemplateTableSideBorderOptionsPtrOutput) Elem() TemplateTableSideBorderOptionsOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) TemplateTableSideBorderOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTableSideBorderOptions
		return ret
	}).(TemplateTableSideBorderOptionsOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) Bottom() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) InnerHorizontal() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerHorizontal
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) InnerVertical() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.InnerVertical
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) Left() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Left
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) Right() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Right
	}).(TemplateTableBorderOptionsPtrOutput)
}

func (o TemplateTableSideBorderOptionsPtrOutput) Top() TemplateTableBorderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableSideBorderOptions) *TemplateTableBorderOptions {
		if v == nil {
			return nil
		}
		return v.Top
	}).(TemplateTableBorderOptionsPtrOutput)
}

type TemplateTableSortConfiguration struct {
	PaginationConfiguration *TemplatePaginationConfiguration `pulumi:"paginationConfiguration"`
	RowSort                 []TemplateFieldSortOptions       `pulumi:"rowSort"`
}

// TemplateTableSortConfigurationInput is an input type that accepts TemplateTableSortConfigurationArgs and TemplateTableSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateTableSortConfigurationInput` via:
//
//	TemplateTableSortConfigurationArgs{...}
type TemplateTableSortConfigurationInput interface {
	pulumi.Input

	ToTemplateTableSortConfigurationOutput() TemplateTableSortConfigurationOutput
	ToTemplateTableSortConfigurationOutputWithContext(context.Context) TemplateTableSortConfigurationOutput
}

type TemplateTableSortConfigurationArgs struct {
	PaginationConfiguration TemplatePaginationConfigurationPtrInput `pulumi:"paginationConfiguration"`
	RowSort                 TemplateFieldSortOptionsArrayInput      `pulumi:"rowSort"`
}

func (TemplateTableSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableSortConfiguration)(nil)).Elem()
}

func (i TemplateTableSortConfigurationArgs) ToTemplateTableSortConfigurationOutput() TemplateTableSortConfigurationOutput {
	return i.ToTemplateTableSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateTableSortConfigurationArgs) ToTemplateTableSortConfigurationOutputWithContext(ctx context.Context) TemplateTableSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSortConfigurationOutput)
}

func (i TemplateTableSortConfigurationArgs) ToTemplateTableSortConfigurationPtrOutput() TemplateTableSortConfigurationPtrOutput {
	return i.ToTemplateTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTableSortConfigurationArgs) ToTemplateTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSortConfigurationOutput).ToTemplateTableSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateTableSortConfigurationPtrInput is an input type that accepts TemplateTableSortConfigurationArgs, TemplateTableSortConfigurationPtr and TemplateTableSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTableSortConfigurationPtrInput` via:
//
//	        TemplateTableSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTableSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTableSortConfigurationPtrOutput() TemplateTableSortConfigurationPtrOutput
	ToTemplateTableSortConfigurationPtrOutputWithContext(context.Context) TemplateTableSortConfigurationPtrOutput
}

type templateTableSortConfigurationPtrType TemplateTableSortConfigurationArgs

func TemplateTableSortConfigurationPtr(v *TemplateTableSortConfigurationArgs) TemplateTableSortConfigurationPtrInput {
	return (*templateTableSortConfigurationPtrType)(v)
}

func (*templateTableSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableSortConfiguration)(nil)).Elem()
}

func (i *templateTableSortConfigurationPtrType) ToTemplateTableSortConfigurationPtrOutput() TemplateTableSortConfigurationPtrOutput {
	return i.ToTemplateTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTableSortConfigurationPtrType) ToTemplateTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableSortConfigurationPtrOutput)
}

type TemplateTableSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTableSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableSortConfiguration)(nil)).Elem()
}

func (o TemplateTableSortConfigurationOutput) ToTemplateTableSortConfigurationOutput() TemplateTableSortConfigurationOutput {
	return o
}

func (o TemplateTableSortConfigurationOutput) ToTemplateTableSortConfigurationOutputWithContext(ctx context.Context) TemplateTableSortConfigurationOutput {
	return o
}

func (o TemplateTableSortConfigurationOutput) ToTemplateTableSortConfigurationPtrOutput() TemplateTableSortConfigurationPtrOutput {
	return o.ToTemplateTableSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTableSortConfigurationOutput) ToTemplateTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableSortConfiguration) *TemplateTableSortConfiguration {
		return &v
	}).(TemplateTableSortConfigurationPtrOutput)
}

func (o TemplateTableSortConfigurationOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableSortConfiguration) *TemplatePaginationConfiguration {
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

func (o TemplateTableSortConfigurationOutput) RowSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateTableSortConfiguration) []TemplateFieldSortOptions { return v.RowSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateTableSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableSortConfiguration)(nil)).Elem()
}

func (o TemplateTableSortConfigurationPtrOutput) ToTemplateTableSortConfigurationPtrOutput() TemplateTableSortConfigurationPtrOutput {
	return o
}

func (o TemplateTableSortConfigurationPtrOutput) ToTemplateTableSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTableSortConfigurationPtrOutput {
	return o
}

func (o TemplateTableSortConfigurationPtrOutput) Elem() TemplateTableSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateTableSortConfiguration) TemplateTableSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTableSortConfiguration
		return ret
	}).(TemplateTableSortConfigurationOutput)
}

func (o TemplateTableSortConfigurationPtrOutput) PaginationConfiguration() TemplatePaginationConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableSortConfiguration) *TemplatePaginationConfiguration {
		if v == nil {
			return nil
		}
		return v.PaginationConfiguration
	}).(TemplatePaginationConfigurationPtrOutput)
}

func (o TemplateTableSortConfigurationPtrOutput) RowSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateTableSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.RowSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateTableStyleTarget struct {
	CellType TemplateStyledCellType `pulumi:"cellType"`
}

// TemplateTableStyleTargetInput is an input type that accepts TemplateTableStyleTargetArgs and TemplateTableStyleTargetOutput values.
// You can construct a concrete instance of `TemplateTableStyleTargetInput` via:
//
//	TemplateTableStyleTargetArgs{...}
type TemplateTableStyleTargetInput interface {
	pulumi.Input

	ToTemplateTableStyleTargetOutput() TemplateTableStyleTargetOutput
	ToTemplateTableStyleTargetOutputWithContext(context.Context) TemplateTableStyleTargetOutput
}

type TemplateTableStyleTargetArgs struct {
	CellType TemplateStyledCellTypeInput `pulumi:"cellType"`
}

func (TemplateTableStyleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableStyleTarget)(nil)).Elem()
}

func (i TemplateTableStyleTargetArgs) ToTemplateTableStyleTargetOutput() TemplateTableStyleTargetOutput {
	return i.ToTemplateTableStyleTargetOutputWithContext(context.Background())
}

func (i TemplateTableStyleTargetArgs) ToTemplateTableStyleTargetOutputWithContext(ctx context.Context) TemplateTableStyleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableStyleTargetOutput)
}

// TemplateTableStyleTargetArrayInput is an input type that accepts TemplateTableStyleTargetArray and TemplateTableStyleTargetArrayOutput values.
// You can construct a concrete instance of `TemplateTableStyleTargetArrayInput` via:
//
//	TemplateTableStyleTargetArray{ TemplateTableStyleTargetArgs{...} }
type TemplateTableStyleTargetArrayInput interface {
	pulumi.Input

	ToTemplateTableStyleTargetArrayOutput() TemplateTableStyleTargetArrayOutput
	ToTemplateTableStyleTargetArrayOutputWithContext(context.Context) TemplateTableStyleTargetArrayOutput
}

type TemplateTableStyleTargetArray []TemplateTableStyleTargetInput

func (TemplateTableStyleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableStyleTarget)(nil)).Elem()
}

func (i TemplateTableStyleTargetArray) ToTemplateTableStyleTargetArrayOutput() TemplateTableStyleTargetArrayOutput {
	return i.ToTemplateTableStyleTargetArrayOutputWithContext(context.Background())
}

func (i TemplateTableStyleTargetArray) ToTemplateTableStyleTargetArrayOutputWithContext(ctx context.Context) TemplateTableStyleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableStyleTargetArrayOutput)
}

type TemplateTableStyleTargetOutput struct{ *pulumi.OutputState }

func (TemplateTableStyleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableStyleTarget)(nil)).Elem()
}

func (o TemplateTableStyleTargetOutput) ToTemplateTableStyleTargetOutput() TemplateTableStyleTargetOutput {
	return o
}

func (o TemplateTableStyleTargetOutput) ToTemplateTableStyleTargetOutputWithContext(ctx context.Context) TemplateTableStyleTargetOutput {
	return o
}

func (o TemplateTableStyleTargetOutput) CellType() TemplateStyledCellTypeOutput {
	return o.ApplyT(func(v TemplateTableStyleTarget) TemplateStyledCellType { return v.CellType }).(TemplateStyledCellTypeOutput)
}

type TemplateTableStyleTargetArrayOutput struct{ *pulumi.OutputState }

func (TemplateTableStyleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTableStyleTarget)(nil)).Elem()
}

func (o TemplateTableStyleTargetArrayOutput) ToTemplateTableStyleTargetArrayOutput() TemplateTableStyleTargetArrayOutput {
	return o
}

func (o TemplateTableStyleTargetArrayOutput) ToTemplateTableStyleTargetArrayOutputWithContext(ctx context.Context) TemplateTableStyleTargetArrayOutput {
	return o
}

func (o TemplateTableStyleTargetArrayOutput) Index(i pulumi.IntInput) TemplateTableStyleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTableStyleTarget {
		return vs[0].([]TemplateTableStyleTarget)[vs[1].(int)]
	}).(TemplateTableStyleTargetOutput)
}

type TemplateTableUnaggregatedFieldWells struct {
	Values []TemplateUnaggregatedField `pulumi:"values"`
}

// TemplateTableUnaggregatedFieldWellsInput is an input type that accepts TemplateTableUnaggregatedFieldWellsArgs and TemplateTableUnaggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateTableUnaggregatedFieldWellsInput` via:
//
//	TemplateTableUnaggregatedFieldWellsArgs{...}
type TemplateTableUnaggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateTableUnaggregatedFieldWellsOutput() TemplateTableUnaggregatedFieldWellsOutput
	ToTemplateTableUnaggregatedFieldWellsOutputWithContext(context.Context) TemplateTableUnaggregatedFieldWellsOutput
}

type TemplateTableUnaggregatedFieldWellsArgs struct {
	Values TemplateUnaggregatedFieldArrayInput `pulumi:"values"`
}

func (TemplateTableUnaggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i TemplateTableUnaggregatedFieldWellsArgs) ToTemplateTableUnaggregatedFieldWellsOutput() TemplateTableUnaggregatedFieldWellsOutput {
	return i.ToTemplateTableUnaggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateTableUnaggregatedFieldWellsArgs) ToTemplateTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableUnaggregatedFieldWellsOutput)
}

func (i TemplateTableUnaggregatedFieldWellsArgs) ToTemplateTableUnaggregatedFieldWellsPtrOutput() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return i.ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateTableUnaggregatedFieldWellsArgs) ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableUnaggregatedFieldWellsOutput).ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateTableUnaggregatedFieldWellsPtrInput is an input type that accepts TemplateTableUnaggregatedFieldWellsArgs, TemplateTableUnaggregatedFieldWellsPtr and TemplateTableUnaggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateTableUnaggregatedFieldWellsPtrInput` via:
//
//	        TemplateTableUnaggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateTableUnaggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateTableUnaggregatedFieldWellsPtrOutput() TemplateTableUnaggregatedFieldWellsPtrOutput
	ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateTableUnaggregatedFieldWellsPtrOutput
}

type templateTableUnaggregatedFieldWellsPtrType TemplateTableUnaggregatedFieldWellsArgs

func TemplateTableUnaggregatedFieldWellsPtr(v *TemplateTableUnaggregatedFieldWellsArgs) TemplateTableUnaggregatedFieldWellsPtrInput {
	return (*templateTableUnaggregatedFieldWellsPtrType)(v)
}

func (*templateTableUnaggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableUnaggregatedFieldWells)(nil)).Elem()
}

func (i *templateTableUnaggregatedFieldWellsPtrType) ToTemplateTableUnaggregatedFieldWellsPtrOutput() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return i.ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateTableUnaggregatedFieldWellsPtrType) ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableUnaggregatedFieldWellsPtrOutput)
}

type TemplateTableUnaggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateTableUnaggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTableUnaggregatedFieldWellsOutput) ToTemplateTableUnaggregatedFieldWellsOutput() TemplateTableUnaggregatedFieldWellsOutput {
	return o
}

func (o TemplateTableUnaggregatedFieldWellsOutput) ToTemplateTableUnaggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsOutput {
	return o
}

func (o TemplateTableUnaggregatedFieldWellsOutput) ToTemplateTableUnaggregatedFieldWellsPtrOutput() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o.ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateTableUnaggregatedFieldWellsOutput) ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableUnaggregatedFieldWells) *TemplateTableUnaggregatedFieldWells {
		return &v
	}).(TemplateTableUnaggregatedFieldWellsPtrOutput)
}

func (o TemplateTableUnaggregatedFieldWellsOutput) Values() TemplateUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v TemplateTableUnaggregatedFieldWells) []TemplateUnaggregatedField { return v.Values }).(TemplateUnaggregatedFieldArrayOutput)
}

type TemplateTableUnaggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableUnaggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableUnaggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTableUnaggregatedFieldWellsPtrOutput) ToTemplateTableUnaggregatedFieldWellsPtrOutput() TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTableUnaggregatedFieldWellsPtrOutput) ToTemplateTableUnaggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTableUnaggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTableUnaggregatedFieldWellsPtrOutput) Elem() TemplateTableUnaggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateTableUnaggregatedFieldWells) TemplateTableUnaggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateTableUnaggregatedFieldWells
		return ret
	}).(TemplateTableUnaggregatedFieldWellsOutput)
}

func (o TemplateTableUnaggregatedFieldWellsPtrOutput) Values() TemplateUnaggregatedFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTableUnaggregatedFieldWells) []TemplateUnaggregatedField {
		if v == nil {
			return nil
		}
		return v.Values
	}).(TemplateUnaggregatedFieldArrayOutput)
}

type TemplateTableVisual struct {
	Actions               []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration    *TemplateTableConfiguration         `pulumi:"chartConfiguration"`
	ConditionalFormatting *TemplateTableConditionalFormatting `pulumi:"conditionalFormatting"`
	Subtitle              *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title                 *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId              string                              `pulumi:"visualId"`
}

// TemplateTableVisualInput is an input type that accepts TemplateTableVisualArgs and TemplateTableVisualOutput values.
// You can construct a concrete instance of `TemplateTableVisualInput` via:
//
//	TemplateTableVisualArgs{...}
type TemplateTableVisualInput interface {
	pulumi.Input

	ToTemplateTableVisualOutput() TemplateTableVisualOutput
	ToTemplateTableVisualOutputWithContext(context.Context) TemplateTableVisualOutput
}

type TemplateTableVisualArgs struct {
	Actions               TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration    TemplateTableConfigurationPtrInput         `pulumi:"chartConfiguration"`
	ConditionalFormatting TemplateTableConditionalFormattingPtrInput `pulumi:"conditionalFormatting"`
	Subtitle              TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title                 TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId              pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateTableVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableVisual)(nil)).Elem()
}

func (i TemplateTableVisualArgs) ToTemplateTableVisualOutput() TemplateTableVisualOutput {
	return i.ToTemplateTableVisualOutputWithContext(context.Background())
}

func (i TemplateTableVisualArgs) ToTemplateTableVisualOutputWithContext(ctx context.Context) TemplateTableVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableVisualOutput)
}

func (i TemplateTableVisualArgs) ToTemplateTableVisualPtrOutput() TemplateTableVisualPtrOutput {
	return i.ToTemplateTableVisualPtrOutputWithContext(context.Background())
}

func (i TemplateTableVisualArgs) ToTemplateTableVisualPtrOutputWithContext(ctx context.Context) TemplateTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableVisualOutput).ToTemplateTableVisualPtrOutputWithContext(ctx)
}

// TemplateTableVisualPtrInput is an input type that accepts TemplateTableVisualArgs, TemplateTableVisualPtr and TemplateTableVisualPtrOutput values.
// You can construct a concrete instance of `TemplateTableVisualPtrInput` via:
//
//	        TemplateTableVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateTableVisualPtrInput interface {
	pulumi.Input

	ToTemplateTableVisualPtrOutput() TemplateTableVisualPtrOutput
	ToTemplateTableVisualPtrOutputWithContext(context.Context) TemplateTableVisualPtrOutput
}

type templateTableVisualPtrType TemplateTableVisualArgs

func TemplateTableVisualPtr(v *TemplateTableVisualArgs) TemplateTableVisualPtrInput {
	return (*templateTableVisualPtrType)(v)
}

func (*templateTableVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableVisual)(nil)).Elem()
}

func (i *templateTableVisualPtrType) ToTemplateTableVisualPtrOutput() TemplateTableVisualPtrOutput {
	return i.ToTemplateTableVisualPtrOutputWithContext(context.Background())
}

func (i *templateTableVisualPtrType) ToTemplateTableVisualPtrOutputWithContext(ctx context.Context) TemplateTableVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTableVisualPtrOutput)
}

type TemplateTableVisualOutput struct{ *pulumi.OutputState }

func (TemplateTableVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTableVisual)(nil)).Elem()
}

func (o TemplateTableVisualOutput) ToTemplateTableVisualOutput() TemplateTableVisualOutput {
	return o
}

func (o TemplateTableVisualOutput) ToTemplateTableVisualOutputWithContext(ctx context.Context) TemplateTableVisualOutput {
	return o
}

func (o TemplateTableVisualOutput) ToTemplateTableVisualPtrOutput() TemplateTableVisualPtrOutput {
	return o.ToTemplateTableVisualPtrOutputWithContext(context.Background())
}

func (o TemplateTableVisualOutput) ToTemplateTableVisualPtrOutputWithContext(ctx context.Context) TemplateTableVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTableVisual) *TemplateTableVisual {
		return &v
	}).(TemplateTableVisualPtrOutput)
}

func (o TemplateTableVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateTableVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateTableVisualOutput) ChartConfiguration() TemplateTableConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTableVisual) *TemplateTableConfiguration { return v.ChartConfiguration }).(TemplateTableConfigurationPtrOutput)
}

func (o TemplateTableVisualOutput) ConditionalFormatting() TemplateTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v TemplateTableVisual) *TemplateTableConditionalFormatting { return v.ConditionalFormatting }).(TemplateTableConditionalFormattingPtrOutput)
}

func (o TemplateTableVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateTableVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTableVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateTableVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTableVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateTableVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateTableVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTableVisual)(nil)).Elem()
}

func (o TemplateTableVisualPtrOutput) ToTemplateTableVisualPtrOutput() TemplateTableVisualPtrOutput {
	return o
}

func (o TemplateTableVisualPtrOutput) ToTemplateTableVisualPtrOutputWithContext(ctx context.Context) TemplateTableVisualPtrOutput {
	return o
}

func (o TemplateTableVisualPtrOutput) Elem() TemplateTableVisualOutput {
	return o.ApplyT(func(v *TemplateTableVisual) TemplateTableVisual {
		if v != nil {
			return *v
		}
		var ret TemplateTableVisual
		return ret
	}).(TemplateTableVisualOutput)
}

func (o TemplateTableVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateTableVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateTableVisualPtrOutput) ChartConfiguration() TemplateTableConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTableVisual) *TemplateTableConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateTableConfigurationPtrOutput)
}

func (o TemplateTableVisualPtrOutput) ConditionalFormatting() TemplateTableConditionalFormattingPtrOutput {
	return o.ApplyT(func(v *TemplateTableVisual) *TemplateTableConditionalFormatting {
		if v == nil {
			return nil
		}
		return v.ConditionalFormatting
	}).(TemplateTableConditionalFormattingPtrOutput)
}

func (o TemplateTableVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateTableVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTableVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateTableVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTableVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type TemplateTextAreaControlDisplayOptions struct {
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	PlaceholderOptions   *TemplateTextControlPlaceholderOptions    `pulumi:"placeholderOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateTextAreaControlDisplayOptionsInput is an input type that accepts TemplateTextAreaControlDisplayOptionsArgs and TemplateTextAreaControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateTextAreaControlDisplayOptionsInput` via:
//
//	TemplateTextAreaControlDisplayOptionsArgs{...}
type TemplateTextAreaControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateTextAreaControlDisplayOptionsOutput() TemplateTextAreaControlDisplayOptionsOutput
	ToTemplateTextAreaControlDisplayOptionsOutputWithContext(context.Context) TemplateTextAreaControlDisplayOptionsOutput
}

type TemplateTextAreaControlDisplayOptionsArgs struct {
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	PlaceholderOptions   TemplateTextControlPlaceholderOptionsPtrInput    `pulumi:"placeholderOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateTextAreaControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i TemplateTextAreaControlDisplayOptionsArgs) ToTemplateTextAreaControlDisplayOptionsOutput() TemplateTextAreaControlDisplayOptionsOutput {
	return i.ToTemplateTextAreaControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateTextAreaControlDisplayOptionsArgs) ToTemplateTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextAreaControlDisplayOptionsOutput)
}

func (i TemplateTextAreaControlDisplayOptionsArgs) ToTemplateTextAreaControlDisplayOptionsPtrOutput() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return i.ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTextAreaControlDisplayOptionsArgs) ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextAreaControlDisplayOptionsOutput).ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateTextAreaControlDisplayOptionsPtrInput is an input type that accepts TemplateTextAreaControlDisplayOptionsArgs, TemplateTextAreaControlDisplayOptionsPtr and TemplateTextAreaControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTextAreaControlDisplayOptionsPtrInput` via:
//
//	        TemplateTextAreaControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTextAreaControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTextAreaControlDisplayOptionsPtrOutput() TemplateTextAreaControlDisplayOptionsPtrOutput
	ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateTextAreaControlDisplayOptionsPtrOutput
}

type templateTextAreaControlDisplayOptionsPtrType TemplateTextAreaControlDisplayOptionsArgs

func TemplateTextAreaControlDisplayOptionsPtr(v *TemplateTextAreaControlDisplayOptionsArgs) TemplateTextAreaControlDisplayOptionsPtrInput {
	return (*templateTextAreaControlDisplayOptionsPtrType)(v)
}

func (*templateTextAreaControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextAreaControlDisplayOptions)(nil)).Elem()
}

func (i *templateTextAreaControlDisplayOptionsPtrType) ToTemplateTextAreaControlDisplayOptionsPtrOutput() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return i.ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTextAreaControlDisplayOptionsPtrType) ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

type TemplateTextAreaControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTextAreaControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o TemplateTextAreaControlDisplayOptionsOutput) ToTemplateTextAreaControlDisplayOptionsOutput() TemplateTextAreaControlDisplayOptionsOutput {
	return o
}

func (o TemplateTextAreaControlDisplayOptionsOutput) ToTemplateTextAreaControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsOutput {
	return o
}

func (o TemplateTextAreaControlDisplayOptionsOutput) ToTemplateTextAreaControlDisplayOptionsPtrOutput() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTextAreaControlDisplayOptionsOutput) ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTextAreaControlDisplayOptions) *TemplateTextAreaControlDisplayOptions {
		return &v
	}).(TemplateTextAreaControlDisplayOptionsPtrOutput)
}

func (o TemplateTextAreaControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextAreaControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateTextAreaControlDisplayOptionsOutput) PlaceholderOptions() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextAreaControlDisplayOptions) *TemplateTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

func (o TemplateTextAreaControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextAreaControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateTextAreaControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTextAreaControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextAreaControlDisplayOptions)(nil)).Elem()
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) ToTemplateTextAreaControlDisplayOptionsPtrOutput() TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) ToTemplateTextAreaControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextAreaControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) Elem() TemplateTextAreaControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateTextAreaControlDisplayOptions) TemplateTextAreaControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTextAreaControlDisplayOptions
		return ret
	}).(TemplateTextAreaControlDisplayOptionsOutput)
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextAreaControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) PlaceholderOptions() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextAreaControlDisplayOptions) *TemplateTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

func (o TemplateTextAreaControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextAreaControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateTextConditionalFormat struct {
	BackgroundColor *TemplateConditionalFormattingColor `pulumi:"backgroundColor"`
	Icon            *TemplateConditionalFormattingIcon  `pulumi:"icon"`
	TextColor       *TemplateConditionalFormattingColor `pulumi:"textColor"`
}

// TemplateTextConditionalFormatInput is an input type that accepts TemplateTextConditionalFormatArgs and TemplateTextConditionalFormatOutput values.
// You can construct a concrete instance of `TemplateTextConditionalFormatInput` via:
//
//	TemplateTextConditionalFormatArgs{...}
type TemplateTextConditionalFormatInput interface {
	pulumi.Input

	ToTemplateTextConditionalFormatOutput() TemplateTextConditionalFormatOutput
	ToTemplateTextConditionalFormatOutputWithContext(context.Context) TemplateTextConditionalFormatOutput
}

type TemplateTextConditionalFormatArgs struct {
	BackgroundColor TemplateConditionalFormattingColorPtrInput `pulumi:"backgroundColor"`
	Icon            TemplateConditionalFormattingIconPtrInput  `pulumi:"icon"`
	TextColor       TemplateConditionalFormattingColorPtrInput `pulumi:"textColor"`
}

func (TemplateTextConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextConditionalFormat)(nil)).Elem()
}

func (i TemplateTextConditionalFormatArgs) ToTemplateTextConditionalFormatOutput() TemplateTextConditionalFormatOutput {
	return i.ToTemplateTextConditionalFormatOutputWithContext(context.Background())
}

func (i TemplateTextConditionalFormatArgs) ToTemplateTextConditionalFormatOutputWithContext(ctx context.Context) TemplateTextConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextConditionalFormatOutput)
}

func (i TemplateTextConditionalFormatArgs) ToTemplateTextConditionalFormatPtrOutput() TemplateTextConditionalFormatPtrOutput {
	return i.ToTemplateTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i TemplateTextConditionalFormatArgs) ToTemplateTextConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextConditionalFormatOutput).ToTemplateTextConditionalFormatPtrOutputWithContext(ctx)
}

// TemplateTextConditionalFormatPtrInput is an input type that accepts TemplateTextConditionalFormatArgs, TemplateTextConditionalFormatPtr and TemplateTextConditionalFormatPtrOutput values.
// You can construct a concrete instance of `TemplateTextConditionalFormatPtrInput` via:
//
//	        TemplateTextConditionalFormatArgs{...}
//
//	or:
//
//	        nil
type TemplateTextConditionalFormatPtrInput interface {
	pulumi.Input

	ToTemplateTextConditionalFormatPtrOutput() TemplateTextConditionalFormatPtrOutput
	ToTemplateTextConditionalFormatPtrOutputWithContext(context.Context) TemplateTextConditionalFormatPtrOutput
}

type templateTextConditionalFormatPtrType TemplateTextConditionalFormatArgs

func TemplateTextConditionalFormatPtr(v *TemplateTextConditionalFormatArgs) TemplateTextConditionalFormatPtrInput {
	return (*templateTextConditionalFormatPtrType)(v)
}

func (*templateTextConditionalFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextConditionalFormat)(nil)).Elem()
}

func (i *templateTextConditionalFormatPtrType) ToTemplateTextConditionalFormatPtrOutput() TemplateTextConditionalFormatPtrOutput {
	return i.ToTemplateTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (i *templateTextConditionalFormatPtrType) ToTemplateTextConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateTextConditionalFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextConditionalFormatPtrOutput)
}

type TemplateTextConditionalFormatOutput struct{ *pulumi.OutputState }

func (TemplateTextConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextConditionalFormat)(nil)).Elem()
}

func (o TemplateTextConditionalFormatOutput) ToTemplateTextConditionalFormatOutput() TemplateTextConditionalFormatOutput {
	return o
}

func (o TemplateTextConditionalFormatOutput) ToTemplateTextConditionalFormatOutputWithContext(ctx context.Context) TemplateTextConditionalFormatOutput {
	return o
}

func (o TemplateTextConditionalFormatOutput) ToTemplateTextConditionalFormatPtrOutput() TemplateTextConditionalFormatPtrOutput {
	return o.ToTemplateTextConditionalFormatPtrOutputWithContext(context.Background())
}

func (o TemplateTextConditionalFormatOutput) ToTemplateTextConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateTextConditionalFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTextConditionalFormat) *TemplateTextConditionalFormat {
		return &v
	}).(TemplateTextConditionalFormatPtrOutput)
}

func (o TemplateTextConditionalFormatOutput) BackgroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateTextConditionalFormat) *TemplateConditionalFormattingColor { return v.BackgroundColor }).(TemplateConditionalFormattingColorPtrOutput)
}

func (o TemplateTextConditionalFormatOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v TemplateTextConditionalFormat) *TemplateConditionalFormattingIcon { return v.Icon }).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateTextConditionalFormatOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v TemplateTextConditionalFormat) *TemplateConditionalFormattingColor { return v.TextColor }).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateTextConditionalFormatPtrOutput struct{ *pulumi.OutputState }

func (TemplateTextConditionalFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextConditionalFormat)(nil)).Elem()
}

func (o TemplateTextConditionalFormatPtrOutput) ToTemplateTextConditionalFormatPtrOutput() TemplateTextConditionalFormatPtrOutput {
	return o
}

func (o TemplateTextConditionalFormatPtrOutput) ToTemplateTextConditionalFormatPtrOutputWithContext(ctx context.Context) TemplateTextConditionalFormatPtrOutput {
	return o
}

func (o TemplateTextConditionalFormatPtrOutput) Elem() TemplateTextConditionalFormatOutput {
	return o.ApplyT(func(v *TemplateTextConditionalFormat) TemplateTextConditionalFormat {
		if v != nil {
			return *v
		}
		var ret TemplateTextConditionalFormat
		return ret
	}).(TemplateTextConditionalFormatOutput)
}

func (o TemplateTextConditionalFormatPtrOutput) BackgroundColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateTextConditionalFormat) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

func (o TemplateTextConditionalFormatPtrOutput) Icon() TemplateConditionalFormattingIconPtrOutput {
	return o.ApplyT(func(v *TemplateTextConditionalFormat) *TemplateConditionalFormattingIcon {
		if v == nil {
			return nil
		}
		return v.Icon
	}).(TemplateConditionalFormattingIconPtrOutput)
}

func (o TemplateTextConditionalFormatPtrOutput) TextColor() TemplateConditionalFormattingColorPtrOutput {
	return o.ApplyT(func(v *TemplateTextConditionalFormat) *TemplateConditionalFormattingColor {
		if v == nil {
			return nil
		}
		return v.TextColor
	}).(TemplateConditionalFormattingColorPtrOutput)
}

type TemplateTextControlPlaceholderOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateTextControlPlaceholderOptionsInput is an input type that accepts TemplateTextControlPlaceholderOptionsArgs and TemplateTextControlPlaceholderOptionsOutput values.
// You can construct a concrete instance of `TemplateTextControlPlaceholderOptionsInput` via:
//
//	TemplateTextControlPlaceholderOptionsArgs{...}
type TemplateTextControlPlaceholderOptionsInput interface {
	pulumi.Input

	ToTemplateTextControlPlaceholderOptionsOutput() TemplateTextControlPlaceholderOptionsOutput
	ToTemplateTextControlPlaceholderOptionsOutputWithContext(context.Context) TemplateTextControlPlaceholderOptionsOutput
}

type TemplateTextControlPlaceholderOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateTextControlPlaceholderOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextControlPlaceholderOptions)(nil)).Elem()
}

func (i TemplateTextControlPlaceholderOptionsArgs) ToTemplateTextControlPlaceholderOptionsOutput() TemplateTextControlPlaceholderOptionsOutput {
	return i.ToTemplateTextControlPlaceholderOptionsOutputWithContext(context.Background())
}

func (i TemplateTextControlPlaceholderOptionsArgs) ToTemplateTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextControlPlaceholderOptionsOutput)
}

func (i TemplateTextControlPlaceholderOptionsArgs) ToTemplateTextControlPlaceholderOptionsPtrOutput() TemplateTextControlPlaceholderOptionsPtrOutput {
	return i.ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTextControlPlaceholderOptionsArgs) ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextControlPlaceholderOptionsOutput).ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(ctx)
}

// TemplateTextControlPlaceholderOptionsPtrInput is an input type that accepts TemplateTextControlPlaceholderOptionsArgs, TemplateTextControlPlaceholderOptionsPtr and TemplateTextControlPlaceholderOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTextControlPlaceholderOptionsPtrInput` via:
//
//	        TemplateTextControlPlaceholderOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTextControlPlaceholderOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTextControlPlaceholderOptionsPtrOutput() TemplateTextControlPlaceholderOptionsPtrOutput
	ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(context.Context) TemplateTextControlPlaceholderOptionsPtrOutput
}

type templateTextControlPlaceholderOptionsPtrType TemplateTextControlPlaceholderOptionsArgs

func TemplateTextControlPlaceholderOptionsPtr(v *TemplateTextControlPlaceholderOptionsArgs) TemplateTextControlPlaceholderOptionsPtrInput {
	return (*templateTextControlPlaceholderOptionsPtrType)(v)
}

func (*templateTextControlPlaceholderOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextControlPlaceholderOptions)(nil)).Elem()
}

func (i *templateTextControlPlaceholderOptionsPtrType) ToTemplateTextControlPlaceholderOptionsPtrOutput() TemplateTextControlPlaceholderOptionsPtrOutput {
	return i.ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTextControlPlaceholderOptionsPtrType) ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

type TemplateTextControlPlaceholderOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTextControlPlaceholderOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextControlPlaceholderOptions)(nil)).Elem()
}

func (o TemplateTextControlPlaceholderOptionsOutput) ToTemplateTextControlPlaceholderOptionsOutput() TemplateTextControlPlaceholderOptionsOutput {
	return o
}

func (o TemplateTextControlPlaceholderOptionsOutput) ToTemplateTextControlPlaceholderOptionsOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsOutput {
	return o
}

func (o TemplateTextControlPlaceholderOptionsOutput) ToTemplateTextControlPlaceholderOptionsPtrOutput() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTextControlPlaceholderOptionsOutput) ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTextControlPlaceholderOptions) *TemplateTextControlPlaceholderOptions {
		return &v
	}).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

func (o TemplateTextControlPlaceholderOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTextControlPlaceholderOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTextControlPlaceholderOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTextControlPlaceholderOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextControlPlaceholderOptions)(nil)).Elem()
}

func (o TemplateTextControlPlaceholderOptionsPtrOutput) ToTemplateTextControlPlaceholderOptionsPtrOutput() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o TemplateTextControlPlaceholderOptionsPtrOutput) ToTemplateTextControlPlaceholderOptionsPtrOutputWithContext(ctx context.Context) TemplateTextControlPlaceholderOptionsPtrOutput {
	return o
}

func (o TemplateTextControlPlaceholderOptionsPtrOutput) Elem() TemplateTextControlPlaceholderOptionsOutput {
	return o.ApplyT(func(v *TemplateTextControlPlaceholderOptions) TemplateTextControlPlaceholderOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTextControlPlaceholderOptions
		return ret
	}).(TemplateTextControlPlaceholderOptionsOutput)
}

func (o TemplateTextControlPlaceholderOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTextControlPlaceholderOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTextFieldControlDisplayOptions struct {
	InfoIconLabelOptions *TemplateSheetControlInfoIconLabelOptions `pulumi:"infoIconLabelOptions"`
	PlaceholderOptions   *TemplateTextControlPlaceholderOptions    `pulumi:"placeholderOptions"`
	TitleOptions         *TemplateLabelOptions                     `pulumi:"titleOptions"`
}

// TemplateTextFieldControlDisplayOptionsInput is an input type that accepts TemplateTextFieldControlDisplayOptionsArgs and TemplateTextFieldControlDisplayOptionsOutput values.
// You can construct a concrete instance of `TemplateTextFieldControlDisplayOptionsInput` via:
//
//	TemplateTextFieldControlDisplayOptionsArgs{...}
type TemplateTextFieldControlDisplayOptionsInput interface {
	pulumi.Input

	ToTemplateTextFieldControlDisplayOptionsOutput() TemplateTextFieldControlDisplayOptionsOutput
	ToTemplateTextFieldControlDisplayOptionsOutputWithContext(context.Context) TemplateTextFieldControlDisplayOptionsOutput
}

type TemplateTextFieldControlDisplayOptionsArgs struct {
	InfoIconLabelOptions TemplateSheetControlInfoIconLabelOptionsPtrInput `pulumi:"infoIconLabelOptions"`
	PlaceholderOptions   TemplateTextControlPlaceholderOptionsPtrInput    `pulumi:"placeholderOptions"`
	TitleOptions         TemplateLabelOptionsPtrInput                     `pulumi:"titleOptions"`
}

func (TemplateTextFieldControlDisplayOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i TemplateTextFieldControlDisplayOptionsArgs) ToTemplateTextFieldControlDisplayOptionsOutput() TemplateTextFieldControlDisplayOptionsOutput {
	return i.ToTemplateTextFieldControlDisplayOptionsOutputWithContext(context.Background())
}

func (i TemplateTextFieldControlDisplayOptionsArgs) ToTemplateTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextFieldControlDisplayOptionsOutput)
}

func (i TemplateTextFieldControlDisplayOptionsArgs) ToTemplateTextFieldControlDisplayOptionsPtrOutput() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return i.ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTextFieldControlDisplayOptionsArgs) ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextFieldControlDisplayOptionsOutput).ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(ctx)
}

// TemplateTextFieldControlDisplayOptionsPtrInput is an input type that accepts TemplateTextFieldControlDisplayOptionsArgs, TemplateTextFieldControlDisplayOptionsPtr and TemplateTextFieldControlDisplayOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTextFieldControlDisplayOptionsPtrInput` via:
//
//	        TemplateTextFieldControlDisplayOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTextFieldControlDisplayOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTextFieldControlDisplayOptionsPtrOutput() TemplateTextFieldControlDisplayOptionsPtrOutput
	ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(context.Context) TemplateTextFieldControlDisplayOptionsPtrOutput
}

type templateTextFieldControlDisplayOptionsPtrType TemplateTextFieldControlDisplayOptionsArgs

func TemplateTextFieldControlDisplayOptionsPtr(v *TemplateTextFieldControlDisplayOptionsArgs) TemplateTextFieldControlDisplayOptionsPtrInput {
	return (*templateTextFieldControlDisplayOptionsPtrType)(v)
}

func (*templateTextFieldControlDisplayOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextFieldControlDisplayOptions)(nil)).Elem()
}

func (i *templateTextFieldControlDisplayOptionsPtrType) ToTemplateTextFieldControlDisplayOptionsPtrOutput() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return i.ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTextFieldControlDisplayOptionsPtrType) ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

type TemplateTextFieldControlDisplayOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTextFieldControlDisplayOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o TemplateTextFieldControlDisplayOptionsOutput) ToTemplateTextFieldControlDisplayOptionsOutput() TemplateTextFieldControlDisplayOptionsOutput {
	return o
}

func (o TemplateTextFieldControlDisplayOptionsOutput) ToTemplateTextFieldControlDisplayOptionsOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsOutput {
	return o
}

func (o TemplateTextFieldControlDisplayOptionsOutput) ToTemplateTextFieldControlDisplayOptionsPtrOutput() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTextFieldControlDisplayOptionsOutput) ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTextFieldControlDisplayOptions) *TemplateTextFieldControlDisplayOptions {
		return &v
	}).(TemplateTextFieldControlDisplayOptionsPtrOutput)
}

func (o TemplateTextFieldControlDisplayOptionsOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextFieldControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateTextFieldControlDisplayOptionsOutput) PlaceholderOptions() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextFieldControlDisplayOptions) *TemplateTextControlPlaceholderOptions {
		return v.PlaceholderOptions
	}).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

func (o TemplateTextFieldControlDisplayOptionsOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTextFieldControlDisplayOptions) *TemplateLabelOptions { return v.TitleOptions }).(TemplateLabelOptionsPtrOutput)
}

type TemplateTextFieldControlDisplayOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTextFieldControlDisplayOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTextFieldControlDisplayOptions)(nil)).Elem()
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) ToTemplateTextFieldControlDisplayOptionsPtrOutput() TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) ToTemplateTextFieldControlDisplayOptionsPtrOutputWithContext(ctx context.Context) TemplateTextFieldControlDisplayOptionsPtrOutput {
	return o
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) Elem() TemplateTextFieldControlDisplayOptionsOutput {
	return o.ApplyT(func(v *TemplateTextFieldControlDisplayOptions) TemplateTextFieldControlDisplayOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTextFieldControlDisplayOptions
		return ret
	}).(TemplateTextFieldControlDisplayOptionsOutput)
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) InfoIconLabelOptions() TemplateSheetControlInfoIconLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextFieldControlDisplayOptions) *TemplateSheetControlInfoIconLabelOptions {
		if v == nil {
			return nil
		}
		return v.InfoIconLabelOptions
	}).(TemplateSheetControlInfoIconLabelOptionsPtrOutput)
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) PlaceholderOptions() TemplateTextControlPlaceholderOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextFieldControlDisplayOptions) *TemplateTextControlPlaceholderOptions {
		if v == nil {
			return nil
		}
		return v.PlaceholderOptions
	}).(TemplateTextControlPlaceholderOptionsPtrOutput)
}

func (o TemplateTextFieldControlDisplayOptionsPtrOutput) TitleOptions() TemplateLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTextFieldControlDisplayOptions) *TemplateLabelOptions {
		if v == nil {
			return nil
		}
		return v.TitleOptions
	}).(TemplateLabelOptionsPtrOutput)
}

type TemplateThousandSeparatorOptions struct {
	Symbol     *TemplateNumericSeparatorSymbol `pulumi:"symbol"`
	Visibility *TemplateVisibility             `pulumi:"visibility"`
}

// TemplateThousandSeparatorOptionsInput is an input type that accepts TemplateThousandSeparatorOptionsArgs and TemplateThousandSeparatorOptionsOutput values.
// You can construct a concrete instance of `TemplateThousandSeparatorOptionsInput` via:
//
//	TemplateThousandSeparatorOptionsArgs{...}
type TemplateThousandSeparatorOptionsInput interface {
	pulumi.Input

	ToTemplateThousandSeparatorOptionsOutput() TemplateThousandSeparatorOptionsOutput
	ToTemplateThousandSeparatorOptionsOutputWithContext(context.Context) TemplateThousandSeparatorOptionsOutput
}

type TemplateThousandSeparatorOptionsArgs struct {
	Symbol     TemplateNumericSeparatorSymbolPtrInput `pulumi:"symbol"`
	Visibility TemplateVisibilityPtrInput             `pulumi:"visibility"`
}

func (TemplateThousandSeparatorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateThousandSeparatorOptions)(nil)).Elem()
}

func (i TemplateThousandSeparatorOptionsArgs) ToTemplateThousandSeparatorOptionsOutput() TemplateThousandSeparatorOptionsOutput {
	return i.ToTemplateThousandSeparatorOptionsOutputWithContext(context.Background())
}

func (i TemplateThousandSeparatorOptionsArgs) ToTemplateThousandSeparatorOptionsOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateThousandSeparatorOptionsOutput)
}

func (i TemplateThousandSeparatorOptionsArgs) ToTemplateThousandSeparatorOptionsPtrOutput() TemplateThousandSeparatorOptionsPtrOutput {
	return i.ToTemplateThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateThousandSeparatorOptionsArgs) ToTemplateThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateThousandSeparatorOptionsOutput).ToTemplateThousandSeparatorOptionsPtrOutputWithContext(ctx)
}

// TemplateThousandSeparatorOptionsPtrInput is an input type that accepts TemplateThousandSeparatorOptionsArgs, TemplateThousandSeparatorOptionsPtr and TemplateThousandSeparatorOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateThousandSeparatorOptionsPtrInput` via:
//
//	        TemplateThousandSeparatorOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateThousandSeparatorOptionsPtrInput interface {
	pulumi.Input

	ToTemplateThousandSeparatorOptionsPtrOutput() TemplateThousandSeparatorOptionsPtrOutput
	ToTemplateThousandSeparatorOptionsPtrOutputWithContext(context.Context) TemplateThousandSeparatorOptionsPtrOutput
}

type templateThousandSeparatorOptionsPtrType TemplateThousandSeparatorOptionsArgs

func TemplateThousandSeparatorOptionsPtr(v *TemplateThousandSeparatorOptionsArgs) TemplateThousandSeparatorOptionsPtrInput {
	return (*templateThousandSeparatorOptionsPtrType)(v)
}

func (*templateThousandSeparatorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateThousandSeparatorOptions)(nil)).Elem()
}

func (i *templateThousandSeparatorOptionsPtrType) ToTemplateThousandSeparatorOptionsPtrOutput() TemplateThousandSeparatorOptionsPtrOutput {
	return i.ToTemplateThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (i *templateThousandSeparatorOptionsPtrType) ToTemplateThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateThousandSeparatorOptionsPtrOutput)
}

type TemplateThousandSeparatorOptionsOutput struct{ *pulumi.OutputState }

func (TemplateThousandSeparatorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateThousandSeparatorOptions)(nil)).Elem()
}

func (o TemplateThousandSeparatorOptionsOutput) ToTemplateThousandSeparatorOptionsOutput() TemplateThousandSeparatorOptionsOutput {
	return o
}

func (o TemplateThousandSeparatorOptionsOutput) ToTemplateThousandSeparatorOptionsOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsOutput {
	return o
}

func (o TemplateThousandSeparatorOptionsOutput) ToTemplateThousandSeparatorOptionsPtrOutput() TemplateThousandSeparatorOptionsPtrOutput {
	return o.ToTemplateThousandSeparatorOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateThousandSeparatorOptionsOutput) ToTemplateThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateThousandSeparatorOptions) *TemplateThousandSeparatorOptions {
		return &v
	}).(TemplateThousandSeparatorOptionsPtrOutput)
}

func (o TemplateThousandSeparatorOptionsOutput) Symbol() TemplateNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v TemplateThousandSeparatorOptions) *TemplateNumericSeparatorSymbol { return v.Symbol }).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (o TemplateThousandSeparatorOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateThousandSeparatorOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateThousandSeparatorOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateThousandSeparatorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateThousandSeparatorOptions)(nil)).Elem()
}

func (o TemplateThousandSeparatorOptionsPtrOutput) ToTemplateThousandSeparatorOptionsPtrOutput() TemplateThousandSeparatorOptionsPtrOutput {
	return o
}

func (o TemplateThousandSeparatorOptionsPtrOutput) ToTemplateThousandSeparatorOptionsPtrOutputWithContext(ctx context.Context) TemplateThousandSeparatorOptionsPtrOutput {
	return o
}

func (o TemplateThousandSeparatorOptionsPtrOutput) Elem() TemplateThousandSeparatorOptionsOutput {
	return o.ApplyT(func(v *TemplateThousandSeparatorOptions) TemplateThousandSeparatorOptions {
		if v != nil {
			return *v
		}
		var ret TemplateThousandSeparatorOptions
		return ret
	}).(TemplateThousandSeparatorOptionsOutput)
}

func (o TemplateThousandSeparatorOptionsPtrOutput) Symbol() TemplateNumericSeparatorSymbolPtrOutput {
	return o.ApplyT(func(v *TemplateThousandSeparatorOptions) *TemplateNumericSeparatorSymbol {
		if v == nil {
			return nil
		}
		return v.Symbol
	}).(TemplateNumericSeparatorSymbolPtrOutput)
}

func (o TemplateThousandSeparatorOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateThousandSeparatorOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTimeBasedForecastProperties struct {
	LowerBoundary      *float64 `pulumi:"lowerBoundary"`
	PeriodsBackward    *float64 `pulumi:"periodsBackward"`
	PeriodsForward     *float64 `pulumi:"periodsForward"`
	PredictionInterval *float64 `pulumi:"predictionInterval"`
	Seasonality        *float64 `pulumi:"seasonality"`
	UpperBoundary      *float64 `pulumi:"upperBoundary"`
}

// TemplateTimeBasedForecastPropertiesInput is an input type that accepts TemplateTimeBasedForecastPropertiesArgs and TemplateTimeBasedForecastPropertiesOutput values.
// You can construct a concrete instance of `TemplateTimeBasedForecastPropertiesInput` via:
//
//	TemplateTimeBasedForecastPropertiesArgs{...}
type TemplateTimeBasedForecastPropertiesInput interface {
	pulumi.Input

	ToTemplateTimeBasedForecastPropertiesOutput() TemplateTimeBasedForecastPropertiesOutput
	ToTemplateTimeBasedForecastPropertiesOutputWithContext(context.Context) TemplateTimeBasedForecastPropertiesOutput
}

type TemplateTimeBasedForecastPropertiesArgs struct {
	LowerBoundary      pulumi.Float64PtrInput `pulumi:"lowerBoundary"`
	PeriodsBackward    pulumi.Float64PtrInput `pulumi:"periodsBackward"`
	PeriodsForward     pulumi.Float64PtrInput `pulumi:"periodsForward"`
	PredictionInterval pulumi.Float64PtrInput `pulumi:"predictionInterval"`
	Seasonality        pulumi.Float64PtrInput `pulumi:"seasonality"`
	UpperBoundary      pulumi.Float64PtrInput `pulumi:"upperBoundary"`
}

func (TemplateTimeBasedForecastPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeBasedForecastProperties)(nil)).Elem()
}

func (i TemplateTimeBasedForecastPropertiesArgs) ToTemplateTimeBasedForecastPropertiesOutput() TemplateTimeBasedForecastPropertiesOutput {
	return i.ToTemplateTimeBasedForecastPropertiesOutputWithContext(context.Background())
}

func (i TemplateTimeBasedForecastPropertiesArgs) ToTemplateTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeBasedForecastPropertiesOutput)
}

func (i TemplateTimeBasedForecastPropertiesArgs) ToTemplateTimeBasedForecastPropertiesPtrOutput() TemplateTimeBasedForecastPropertiesPtrOutput {
	return i.ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateTimeBasedForecastPropertiesArgs) ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeBasedForecastPropertiesOutput).ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(ctx)
}

// TemplateTimeBasedForecastPropertiesPtrInput is an input type that accepts TemplateTimeBasedForecastPropertiesArgs, TemplateTimeBasedForecastPropertiesPtr and TemplateTimeBasedForecastPropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateTimeBasedForecastPropertiesPtrInput` via:
//
//	        TemplateTimeBasedForecastPropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateTimeBasedForecastPropertiesPtrInput interface {
	pulumi.Input

	ToTemplateTimeBasedForecastPropertiesPtrOutput() TemplateTimeBasedForecastPropertiesPtrOutput
	ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(context.Context) TemplateTimeBasedForecastPropertiesPtrOutput
}

type templateTimeBasedForecastPropertiesPtrType TemplateTimeBasedForecastPropertiesArgs

func TemplateTimeBasedForecastPropertiesPtr(v *TemplateTimeBasedForecastPropertiesArgs) TemplateTimeBasedForecastPropertiesPtrInput {
	return (*templateTimeBasedForecastPropertiesPtrType)(v)
}

func (*templateTimeBasedForecastPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeBasedForecastProperties)(nil)).Elem()
}

func (i *templateTimeBasedForecastPropertiesPtrType) ToTemplateTimeBasedForecastPropertiesPtrOutput() TemplateTimeBasedForecastPropertiesPtrOutput {
	return i.ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (i *templateTimeBasedForecastPropertiesPtrType) ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeBasedForecastPropertiesPtrOutput)
}

type TemplateTimeBasedForecastPropertiesOutput struct{ *pulumi.OutputState }

func (TemplateTimeBasedForecastPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeBasedForecastProperties)(nil)).Elem()
}

func (o TemplateTimeBasedForecastPropertiesOutput) ToTemplateTimeBasedForecastPropertiesOutput() TemplateTimeBasedForecastPropertiesOutput {
	return o
}

func (o TemplateTimeBasedForecastPropertiesOutput) ToTemplateTimeBasedForecastPropertiesOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesOutput {
	return o
}

func (o TemplateTimeBasedForecastPropertiesOutput) ToTemplateTimeBasedForecastPropertiesPtrOutput() TemplateTimeBasedForecastPropertiesPtrOutput {
	return o.ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateTimeBasedForecastPropertiesOutput) ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeBasedForecastProperties) *TemplateTimeBasedForecastProperties {
		return &v
	}).(TemplateTimeBasedForecastPropertiesPtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.LowerBoundary }).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.PeriodsBackward }).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.PeriodsForward }).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.PredictionInterval }).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.Seasonality }).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTimeBasedForecastProperties) *float64 { return v.UpperBoundary }).(pulumi.Float64PtrOutput)
}

type TemplateTimeBasedForecastPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeBasedForecastPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeBasedForecastProperties)(nil)).Elem()
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) ToTemplateTimeBasedForecastPropertiesPtrOutput() TemplateTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) ToTemplateTimeBasedForecastPropertiesPtrOutputWithContext(ctx context.Context) TemplateTimeBasedForecastPropertiesPtrOutput {
	return o
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) Elem() TemplateTimeBasedForecastPropertiesOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) TemplateTimeBasedForecastProperties {
		if v != nil {
			return *v
		}
		var ret TemplateTimeBasedForecastProperties
		return ret
	}).(TemplateTimeBasedForecastPropertiesOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) LowerBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.LowerBoundary
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) PeriodsBackward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsBackward
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) PeriodsForward() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodsForward
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) PredictionInterval() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.PredictionInterval
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) Seasonality() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.Seasonality
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTimeBasedForecastPropertiesPtrOutput) UpperBoundary() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTimeBasedForecastProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.UpperBoundary
	}).(pulumi.Float64PtrOutput)
}

type TemplateTimeEqualityFilter struct {
	Column          TemplateColumnIdentifier          `pulumi:"column"`
	FilterId        string                            `pulumi:"filterId"`
	ParameterName   *string                           `pulumi:"parameterName"`
	RollingDate     *TemplateRollingDateConfiguration `pulumi:"rollingDate"`
	TimeGranularity *TemplateTimeGranularity          `pulumi:"timeGranularity"`
	Value           *string                           `pulumi:"value"`
}

// TemplateTimeEqualityFilterInput is an input type that accepts TemplateTimeEqualityFilterArgs and TemplateTimeEqualityFilterOutput values.
// You can construct a concrete instance of `TemplateTimeEqualityFilterInput` via:
//
//	TemplateTimeEqualityFilterArgs{...}
type TemplateTimeEqualityFilterInput interface {
	pulumi.Input

	ToTemplateTimeEqualityFilterOutput() TemplateTimeEqualityFilterOutput
	ToTemplateTimeEqualityFilterOutputWithContext(context.Context) TemplateTimeEqualityFilterOutput
}

type TemplateTimeEqualityFilterArgs struct {
	Column          TemplateColumnIdentifierInput            `pulumi:"column"`
	FilterId        pulumi.StringInput                       `pulumi:"filterId"`
	ParameterName   pulumi.StringPtrInput                    `pulumi:"parameterName"`
	RollingDate     TemplateRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	TimeGranularity TemplateTimeGranularityPtrInput          `pulumi:"timeGranularity"`
	Value           pulumi.StringPtrInput                    `pulumi:"value"`
}

func (TemplateTimeEqualityFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeEqualityFilter)(nil)).Elem()
}

func (i TemplateTimeEqualityFilterArgs) ToTemplateTimeEqualityFilterOutput() TemplateTimeEqualityFilterOutput {
	return i.ToTemplateTimeEqualityFilterOutputWithContext(context.Background())
}

func (i TemplateTimeEqualityFilterArgs) ToTemplateTimeEqualityFilterOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeEqualityFilterOutput)
}

func (i TemplateTimeEqualityFilterArgs) ToTemplateTimeEqualityFilterPtrOutput() TemplateTimeEqualityFilterPtrOutput {
	return i.ToTemplateTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i TemplateTimeEqualityFilterArgs) ToTemplateTimeEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeEqualityFilterOutput).ToTemplateTimeEqualityFilterPtrOutputWithContext(ctx)
}

// TemplateTimeEqualityFilterPtrInput is an input type that accepts TemplateTimeEqualityFilterArgs, TemplateTimeEqualityFilterPtr and TemplateTimeEqualityFilterPtrOutput values.
// You can construct a concrete instance of `TemplateTimeEqualityFilterPtrInput` via:
//
//	        TemplateTimeEqualityFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateTimeEqualityFilterPtrInput interface {
	pulumi.Input

	ToTemplateTimeEqualityFilterPtrOutput() TemplateTimeEqualityFilterPtrOutput
	ToTemplateTimeEqualityFilterPtrOutputWithContext(context.Context) TemplateTimeEqualityFilterPtrOutput
}

type templateTimeEqualityFilterPtrType TemplateTimeEqualityFilterArgs

func TemplateTimeEqualityFilterPtr(v *TemplateTimeEqualityFilterArgs) TemplateTimeEqualityFilterPtrInput {
	return (*templateTimeEqualityFilterPtrType)(v)
}

func (*templateTimeEqualityFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeEqualityFilter)(nil)).Elem()
}

func (i *templateTimeEqualityFilterPtrType) ToTemplateTimeEqualityFilterPtrOutput() TemplateTimeEqualityFilterPtrOutput {
	return i.ToTemplateTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (i *templateTimeEqualityFilterPtrType) ToTemplateTimeEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeEqualityFilterPtrOutput)
}

type TemplateTimeEqualityFilterOutput struct{ *pulumi.OutputState }

func (TemplateTimeEqualityFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeEqualityFilter)(nil)).Elem()
}

func (o TemplateTimeEqualityFilterOutput) ToTemplateTimeEqualityFilterOutput() TemplateTimeEqualityFilterOutput {
	return o
}

func (o TemplateTimeEqualityFilterOutput) ToTemplateTimeEqualityFilterOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterOutput {
	return o
}

func (o TemplateTimeEqualityFilterOutput) ToTemplateTimeEqualityFilterPtrOutput() TemplateTimeEqualityFilterPtrOutput {
	return o.ToTemplateTimeEqualityFilterPtrOutputWithContext(context.Background())
}

func (o TemplateTimeEqualityFilterOutput) ToTemplateTimeEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeEqualityFilter) *TemplateTimeEqualityFilter {
		return &v
	}).(TemplateTimeEqualityFilterPtrOutput)
}

func (o TemplateTimeEqualityFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateTimeEqualityFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateTimeEqualityFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o TemplateTimeEqualityFilterOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) *TemplateRollingDateConfiguration { return v.RollingDate }).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateTimeEqualityFilterOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) *TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateTimeEqualityFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTimeEqualityFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TemplateTimeEqualityFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeEqualityFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeEqualityFilter)(nil)).Elem()
}

func (o TemplateTimeEqualityFilterPtrOutput) ToTemplateTimeEqualityFilterPtrOutput() TemplateTimeEqualityFilterPtrOutput {
	return o
}

func (o TemplateTimeEqualityFilterPtrOutput) ToTemplateTimeEqualityFilterPtrOutputWithContext(ctx context.Context) TemplateTimeEqualityFilterPtrOutput {
	return o
}

func (o TemplateTimeEqualityFilterPtrOutput) Elem() TemplateTimeEqualityFilterOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) TemplateTimeEqualityFilter {
		if v != nil {
			return *v
		}
		var ret TemplateTimeEqualityFilter
		return ret
	}).(TemplateTimeEqualityFilterOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *TemplateRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

func (o TemplateTimeEqualityFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeEqualityFilter) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TemplateTimeRangeDrillDownFilter struct {
	Column          TemplateColumnIdentifier `pulumi:"column"`
	RangeMaximum    string                   `pulumi:"rangeMaximum"`
	RangeMinimum    string                   `pulumi:"rangeMinimum"`
	TimeGranularity TemplateTimeGranularity  `pulumi:"timeGranularity"`
}

// TemplateTimeRangeDrillDownFilterInput is an input type that accepts TemplateTimeRangeDrillDownFilterArgs and TemplateTimeRangeDrillDownFilterOutput values.
// You can construct a concrete instance of `TemplateTimeRangeDrillDownFilterInput` via:
//
//	TemplateTimeRangeDrillDownFilterArgs{...}
type TemplateTimeRangeDrillDownFilterInput interface {
	pulumi.Input

	ToTemplateTimeRangeDrillDownFilterOutput() TemplateTimeRangeDrillDownFilterOutput
	ToTemplateTimeRangeDrillDownFilterOutputWithContext(context.Context) TemplateTimeRangeDrillDownFilterOutput
}

type TemplateTimeRangeDrillDownFilterArgs struct {
	Column          TemplateColumnIdentifierInput `pulumi:"column"`
	RangeMaximum    pulumi.StringInput            `pulumi:"rangeMaximum"`
	RangeMinimum    pulumi.StringInput            `pulumi:"rangeMinimum"`
	TimeGranularity TemplateTimeGranularityInput  `pulumi:"timeGranularity"`
}

func (TemplateTimeRangeDrillDownFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i TemplateTimeRangeDrillDownFilterArgs) ToTemplateTimeRangeDrillDownFilterOutput() TemplateTimeRangeDrillDownFilterOutput {
	return i.ToTemplateTimeRangeDrillDownFilterOutputWithContext(context.Background())
}

func (i TemplateTimeRangeDrillDownFilterArgs) ToTemplateTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeDrillDownFilterOutput)
}

func (i TemplateTimeRangeDrillDownFilterArgs) ToTemplateTimeRangeDrillDownFilterPtrOutput() TemplateTimeRangeDrillDownFilterPtrOutput {
	return i.ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i TemplateTimeRangeDrillDownFilterArgs) ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeDrillDownFilterOutput).ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(ctx)
}

// TemplateTimeRangeDrillDownFilterPtrInput is an input type that accepts TemplateTimeRangeDrillDownFilterArgs, TemplateTimeRangeDrillDownFilterPtr and TemplateTimeRangeDrillDownFilterPtrOutput values.
// You can construct a concrete instance of `TemplateTimeRangeDrillDownFilterPtrInput` via:
//
//	        TemplateTimeRangeDrillDownFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateTimeRangeDrillDownFilterPtrInput interface {
	pulumi.Input

	ToTemplateTimeRangeDrillDownFilterPtrOutput() TemplateTimeRangeDrillDownFilterPtrOutput
	ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(context.Context) TemplateTimeRangeDrillDownFilterPtrOutput
}

type templateTimeRangeDrillDownFilterPtrType TemplateTimeRangeDrillDownFilterArgs

func TemplateTimeRangeDrillDownFilterPtr(v *TemplateTimeRangeDrillDownFilterArgs) TemplateTimeRangeDrillDownFilterPtrInput {
	return (*templateTimeRangeDrillDownFilterPtrType)(v)
}

func (*templateTimeRangeDrillDownFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeDrillDownFilter)(nil)).Elem()
}

func (i *templateTimeRangeDrillDownFilterPtrType) ToTemplateTimeRangeDrillDownFilterPtrOutput() TemplateTimeRangeDrillDownFilterPtrOutput {
	return i.ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (i *templateTimeRangeDrillDownFilterPtrType) ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeDrillDownFilterPtrOutput)
}

type TemplateTimeRangeDrillDownFilterOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeDrillDownFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o TemplateTimeRangeDrillDownFilterOutput) ToTemplateTimeRangeDrillDownFilterOutput() TemplateTimeRangeDrillDownFilterOutput {
	return o
}

func (o TemplateTimeRangeDrillDownFilterOutput) ToTemplateTimeRangeDrillDownFilterOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterOutput {
	return o
}

func (o TemplateTimeRangeDrillDownFilterOutput) ToTemplateTimeRangeDrillDownFilterPtrOutput() TemplateTimeRangeDrillDownFilterPtrOutput {
	return o.ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(context.Background())
}

func (o TemplateTimeRangeDrillDownFilterOutput) ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeRangeDrillDownFilter) *TemplateTimeRangeDrillDownFilter {
		return &v
	}).(TemplateTimeRangeDrillDownFilterPtrOutput)
}

func (o TemplateTimeRangeDrillDownFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateTimeRangeDrillDownFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateTimeRangeDrillDownFilterOutput) RangeMaximum() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTimeRangeDrillDownFilter) string { return v.RangeMaximum }).(pulumi.StringOutput)
}

func (o TemplateTimeRangeDrillDownFilterOutput) RangeMinimum() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTimeRangeDrillDownFilter) string { return v.RangeMinimum }).(pulumi.StringOutput)
}

func (o TemplateTimeRangeDrillDownFilterOutput) TimeGranularity() TemplateTimeGranularityOutput {
	return o.ApplyT(func(v TemplateTimeRangeDrillDownFilter) TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityOutput)
}

type TemplateTimeRangeDrillDownFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeDrillDownFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeDrillDownFilter)(nil)).Elem()
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) ToTemplateTimeRangeDrillDownFilterPtrOutput() TemplateTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) ToTemplateTimeRangeDrillDownFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeDrillDownFilterPtrOutput {
	return o
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) Elem() TemplateTimeRangeDrillDownFilterOutput {
	return o.ApplyT(func(v *TemplateTimeRangeDrillDownFilter) TemplateTimeRangeDrillDownFilter {
		if v != nil {
			return *v
		}
		var ret TemplateTimeRangeDrillDownFilter
		return ret
	}).(TemplateTimeRangeDrillDownFilterOutput)
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeDrillDownFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) RangeMaximum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMaximum
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) RangeMinimum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeDrillDownFilter) *string {
		if v == nil {
			return nil
		}
		return &v.RangeMinimum
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeRangeDrillDownFilterPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeDrillDownFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return &v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

type TemplateTimeRangeFilter struct {
	Column                     TemplateColumnIdentifier            `pulumi:"column"`
	ExcludePeriodConfiguration *TemplateExcludePeriodConfiguration `pulumi:"excludePeriodConfiguration"`
	FilterId                   string                              `pulumi:"filterId"`
	IncludeMaximum             *bool                               `pulumi:"includeMaximum"`
	IncludeMinimum             *bool                               `pulumi:"includeMinimum"`
	NullOption                 TemplateFilterNullOption            `pulumi:"nullOption"`
	RangeMaximumValue          *TemplateTimeRangeFilterValue       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          *TemplateTimeRangeFilterValue       `pulumi:"rangeMinimumValue"`
	TimeGranularity            *TemplateTimeGranularity            `pulumi:"timeGranularity"`
}

// TemplateTimeRangeFilterInput is an input type that accepts TemplateTimeRangeFilterArgs and TemplateTimeRangeFilterOutput values.
// You can construct a concrete instance of `TemplateTimeRangeFilterInput` via:
//
//	TemplateTimeRangeFilterArgs{...}
type TemplateTimeRangeFilterInput interface {
	pulumi.Input

	ToTemplateTimeRangeFilterOutput() TemplateTimeRangeFilterOutput
	ToTemplateTimeRangeFilterOutputWithContext(context.Context) TemplateTimeRangeFilterOutput
}

type TemplateTimeRangeFilterArgs struct {
	Column                     TemplateColumnIdentifierInput              `pulumi:"column"`
	ExcludePeriodConfiguration TemplateExcludePeriodConfigurationPtrInput `pulumi:"excludePeriodConfiguration"`
	FilterId                   pulumi.StringInput                         `pulumi:"filterId"`
	IncludeMaximum             pulumi.BoolPtrInput                        `pulumi:"includeMaximum"`
	IncludeMinimum             pulumi.BoolPtrInput                        `pulumi:"includeMinimum"`
	NullOption                 TemplateFilterNullOptionInput              `pulumi:"nullOption"`
	RangeMaximumValue          TemplateTimeRangeFilterValuePtrInput       `pulumi:"rangeMaximumValue"`
	RangeMinimumValue          TemplateTimeRangeFilterValuePtrInput       `pulumi:"rangeMinimumValue"`
	TimeGranularity            TemplateTimeGranularityPtrInput            `pulumi:"timeGranularity"`
}

func (TemplateTimeRangeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeFilter)(nil)).Elem()
}

func (i TemplateTimeRangeFilterArgs) ToTemplateTimeRangeFilterOutput() TemplateTimeRangeFilterOutput {
	return i.ToTemplateTimeRangeFilterOutputWithContext(context.Background())
}

func (i TemplateTimeRangeFilterArgs) ToTemplateTimeRangeFilterOutputWithContext(ctx context.Context) TemplateTimeRangeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterOutput)
}

func (i TemplateTimeRangeFilterArgs) ToTemplateTimeRangeFilterPtrOutput() TemplateTimeRangeFilterPtrOutput {
	return i.ToTemplateTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i TemplateTimeRangeFilterArgs) ToTemplateTimeRangeFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterOutput).ToTemplateTimeRangeFilterPtrOutputWithContext(ctx)
}

// TemplateTimeRangeFilterPtrInput is an input type that accepts TemplateTimeRangeFilterArgs, TemplateTimeRangeFilterPtr and TemplateTimeRangeFilterPtrOutput values.
// You can construct a concrete instance of `TemplateTimeRangeFilterPtrInput` via:
//
//	        TemplateTimeRangeFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateTimeRangeFilterPtrInput interface {
	pulumi.Input

	ToTemplateTimeRangeFilterPtrOutput() TemplateTimeRangeFilterPtrOutput
	ToTemplateTimeRangeFilterPtrOutputWithContext(context.Context) TemplateTimeRangeFilterPtrOutput
}

type templateTimeRangeFilterPtrType TemplateTimeRangeFilterArgs

func TemplateTimeRangeFilterPtr(v *TemplateTimeRangeFilterArgs) TemplateTimeRangeFilterPtrInput {
	return (*templateTimeRangeFilterPtrType)(v)
}

func (*templateTimeRangeFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeFilter)(nil)).Elem()
}

func (i *templateTimeRangeFilterPtrType) ToTemplateTimeRangeFilterPtrOutput() TemplateTimeRangeFilterPtrOutput {
	return i.ToTemplateTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (i *templateTimeRangeFilterPtrType) ToTemplateTimeRangeFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterPtrOutput)
}

type TemplateTimeRangeFilterOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeFilter)(nil)).Elem()
}

func (o TemplateTimeRangeFilterOutput) ToTemplateTimeRangeFilterOutput() TemplateTimeRangeFilterOutput {
	return o
}

func (o TemplateTimeRangeFilterOutput) ToTemplateTimeRangeFilterOutputWithContext(ctx context.Context) TemplateTimeRangeFilterOutput {
	return o
}

func (o TemplateTimeRangeFilterOutput) ToTemplateTimeRangeFilterPtrOutput() TemplateTimeRangeFilterPtrOutput {
	return o.ToTemplateTimeRangeFilterPtrOutputWithContext(context.Background())
}

func (o TemplateTimeRangeFilterOutput) ToTemplateTimeRangeFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeRangeFilter) *TemplateTimeRangeFilter {
		return &v
	}).(TemplateTimeRangeFilterPtrOutput)
}

func (o TemplateTimeRangeFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateTimeRangeFilterOutput) ExcludePeriodConfiguration() TemplateExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *TemplateExcludePeriodConfiguration {
		return v.ExcludePeriodConfiguration
	}).(TemplateExcludePeriodConfigurationPtrOutput)
}

func (o TemplateTimeRangeFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateTimeRangeFilterOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *bool { return v.IncludeMaximum }).(pulumi.BoolPtrOutput)
}

func (o TemplateTimeRangeFilterOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *bool { return v.IncludeMinimum }).(pulumi.BoolPtrOutput)
}

func (o TemplateTimeRangeFilterOutput) NullOption() TemplateFilterNullOptionOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) TemplateFilterNullOption { return v.NullOption }).(TemplateFilterNullOptionOutput)
}

func (o TemplateTimeRangeFilterOutput) RangeMaximumValue() TemplateTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *TemplateTimeRangeFilterValue { return v.RangeMaximumValue }).(TemplateTimeRangeFilterValuePtrOutput)
}

func (o TemplateTimeRangeFilterOutput) RangeMinimumValue() TemplateTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *TemplateTimeRangeFilterValue { return v.RangeMinimumValue }).(TemplateTimeRangeFilterValuePtrOutput)
}

func (o TemplateTimeRangeFilterOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilter) *TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

type TemplateTimeRangeFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeFilter)(nil)).Elem()
}

func (o TemplateTimeRangeFilterPtrOutput) ToTemplateTimeRangeFilterPtrOutput() TemplateTimeRangeFilterPtrOutput {
	return o
}

func (o TemplateTimeRangeFilterPtrOutput) ToTemplateTimeRangeFilterPtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterPtrOutput {
	return o
}

func (o TemplateTimeRangeFilterPtrOutput) Elem() TemplateTimeRangeFilterOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) TemplateTimeRangeFilter {
		if v != nil {
			return *v
		}
		var ret TemplateTimeRangeFilter
		return ret
	}).(TemplateTimeRangeFilterOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) ExcludePeriodConfiguration() TemplateExcludePeriodConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateExcludePeriodConfiguration {
		if v == nil {
			return nil
		}
		return v.ExcludePeriodConfiguration
	}).(TemplateExcludePeriodConfigurationPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) IncludeMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) IncludeMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) NullOption() TemplateFilterNullOptionPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateFilterNullOption {
		if v == nil {
			return nil
		}
		return &v.NullOption
	}).(TemplateFilterNullOptionPtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) RangeMaximumValue() TemplateTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMaximumValue
	}).(TemplateTimeRangeFilterValuePtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) RangeMinimumValue() TemplateTimeRangeFilterValuePtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateTimeRangeFilterValue {
		if v == nil {
			return nil
		}
		return v.RangeMinimumValue
	}).(TemplateTimeRangeFilterValuePtrOutput)
}

func (o TemplateTimeRangeFilterPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

type TemplateTimeRangeFilterValue struct {
	Parameter   *string                           `pulumi:"parameter"`
	RollingDate *TemplateRollingDateConfiguration `pulumi:"rollingDate"`
	StaticValue *string                           `pulumi:"staticValue"`
}

// TemplateTimeRangeFilterValueInput is an input type that accepts TemplateTimeRangeFilterValueArgs and TemplateTimeRangeFilterValueOutput values.
// You can construct a concrete instance of `TemplateTimeRangeFilterValueInput` via:
//
//	TemplateTimeRangeFilterValueArgs{...}
type TemplateTimeRangeFilterValueInput interface {
	pulumi.Input

	ToTemplateTimeRangeFilterValueOutput() TemplateTimeRangeFilterValueOutput
	ToTemplateTimeRangeFilterValueOutputWithContext(context.Context) TemplateTimeRangeFilterValueOutput
}

type TemplateTimeRangeFilterValueArgs struct {
	Parameter   pulumi.StringPtrInput                    `pulumi:"parameter"`
	RollingDate TemplateRollingDateConfigurationPtrInput `pulumi:"rollingDate"`
	StaticValue pulumi.StringPtrInput                    `pulumi:"staticValue"`
}

func (TemplateTimeRangeFilterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeFilterValue)(nil)).Elem()
}

func (i TemplateTimeRangeFilterValueArgs) ToTemplateTimeRangeFilterValueOutput() TemplateTimeRangeFilterValueOutput {
	return i.ToTemplateTimeRangeFilterValueOutputWithContext(context.Background())
}

func (i TemplateTimeRangeFilterValueArgs) ToTemplateTimeRangeFilterValueOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterValueOutput)
}

func (i TemplateTimeRangeFilterValueArgs) ToTemplateTimeRangeFilterValuePtrOutput() TemplateTimeRangeFilterValuePtrOutput {
	return i.ToTemplateTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i TemplateTimeRangeFilterValueArgs) ToTemplateTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterValueOutput).ToTemplateTimeRangeFilterValuePtrOutputWithContext(ctx)
}

// TemplateTimeRangeFilterValuePtrInput is an input type that accepts TemplateTimeRangeFilterValueArgs, TemplateTimeRangeFilterValuePtr and TemplateTimeRangeFilterValuePtrOutput values.
// You can construct a concrete instance of `TemplateTimeRangeFilterValuePtrInput` via:
//
//	        TemplateTimeRangeFilterValueArgs{...}
//
//	or:
//
//	        nil
type TemplateTimeRangeFilterValuePtrInput interface {
	pulumi.Input

	ToTemplateTimeRangeFilterValuePtrOutput() TemplateTimeRangeFilterValuePtrOutput
	ToTemplateTimeRangeFilterValuePtrOutputWithContext(context.Context) TemplateTimeRangeFilterValuePtrOutput
}

type templateTimeRangeFilterValuePtrType TemplateTimeRangeFilterValueArgs

func TemplateTimeRangeFilterValuePtr(v *TemplateTimeRangeFilterValueArgs) TemplateTimeRangeFilterValuePtrInput {
	return (*templateTimeRangeFilterValuePtrType)(v)
}

func (*templateTimeRangeFilterValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeFilterValue)(nil)).Elem()
}

func (i *templateTimeRangeFilterValuePtrType) ToTemplateTimeRangeFilterValuePtrOutput() TemplateTimeRangeFilterValuePtrOutput {
	return i.ToTemplateTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (i *templateTimeRangeFilterValuePtrType) ToTemplateTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTimeRangeFilterValuePtrOutput)
}

type TemplateTimeRangeFilterValueOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeFilterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTimeRangeFilterValue)(nil)).Elem()
}

func (o TemplateTimeRangeFilterValueOutput) ToTemplateTimeRangeFilterValueOutput() TemplateTimeRangeFilterValueOutput {
	return o
}

func (o TemplateTimeRangeFilterValueOutput) ToTemplateTimeRangeFilterValueOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValueOutput {
	return o
}

func (o TemplateTimeRangeFilterValueOutput) ToTemplateTimeRangeFilterValuePtrOutput() TemplateTimeRangeFilterValuePtrOutput {
	return o.ToTemplateTimeRangeFilterValuePtrOutputWithContext(context.Background())
}

func (o TemplateTimeRangeFilterValueOutput) ToTemplateTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTimeRangeFilterValue) *TemplateTimeRangeFilterValue {
		return &v
	}).(TemplateTimeRangeFilterValuePtrOutput)
}

func (o TemplateTimeRangeFilterValueOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilterValue) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

func (o TemplateTimeRangeFilterValueOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilterValue) *TemplateRollingDateConfiguration { return v.RollingDate }).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateTimeRangeFilterValueOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTimeRangeFilterValue) *string { return v.StaticValue }).(pulumi.StringPtrOutput)
}

type TemplateTimeRangeFilterValuePtrOutput struct{ *pulumi.OutputState }

func (TemplateTimeRangeFilterValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTimeRangeFilterValue)(nil)).Elem()
}

func (o TemplateTimeRangeFilterValuePtrOutput) ToTemplateTimeRangeFilterValuePtrOutput() TemplateTimeRangeFilterValuePtrOutput {
	return o
}

func (o TemplateTimeRangeFilterValuePtrOutput) ToTemplateTimeRangeFilterValuePtrOutputWithContext(ctx context.Context) TemplateTimeRangeFilterValuePtrOutput {
	return o
}

func (o TemplateTimeRangeFilterValuePtrOutput) Elem() TemplateTimeRangeFilterValueOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilterValue) TemplateTimeRangeFilterValue {
		if v != nil {
			return *v
		}
		var ret TemplateTimeRangeFilterValue
		return ret
	}).(TemplateTimeRangeFilterValueOutput)
}

func (o TemplateTimeRangeFilterValuePtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTimeRangeFilterValuePtrOutput) RollingDate() TemplateRollingDateConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilterValue) *TemplateRollingDateConfiguration {
		if v == nil {
			return nil
		}
		return v.RollingDate
	}).(TemplateRollingDateConfigurationPtrOutput)
}

func (o TemplateTimeRangeFilterValuePtrOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTimeRangeFilterValue) *string {
		if v == nil {
			return nil
		}
		return v.StaticValue
	}).(pulumi.StringPtrOutput)
}

type TemplateTooltipItem struct {
	ColumnTooltipItem *TemplateColumnTooltipItem `pulumi:"columnTooltipItem"`
	FieldTooltipItem  *TemplateFieldTooltipItem  `pulumi:"fieldTooltipItem"`
}

// TemplateTooltipItemInput is an input type that accepts TemplateTooltipItemArgs and TemplateTooltipItemOutput values.
// You can construct a concrete instance of `TemplateTooltipItemInput` via:
//
//	TemplateTooltipItemArgs{...}
type TemplateTooltipItemInput interface {
	pulumi.Input

	ToTemplateTooltipItemOutput() TemplateTooltipItemOutput
	ToTemplateTooltipItemOutputWithContext(context.Context) TemplateTooltipItemOutput
}

type TemplateTooltipItemArgs struct {
	ColumnTooltipItem TemplateColumnTooltipItemPtrInput `pulumi:"columnTooltipItem"`
	FieldTooltipItem  TemplateFieldTooltipItemPtrInput  `pulumi:"fieldTooltipItem"`
}

func (TemplateTooltipItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipItem)(nil)).Elem()
}

func (i TemplateTooltipItemArgs) ToTemplateTooltipItemOutput() TemplateTooltipItemOutput {
	return i.ToTemplateTooltipItemOutputWithContext(context.Background())
}

func (i TemplateTooltipItemArgs) ToTemplateTooltipItemOutputWithContext(ctx context.Context) TemplateTooltipItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTooltipItemOutput)
}

// TemplateTooltipItemArrayInput is an input type that accepts TemplateTooltipItemArray and TemplateTooltipItemArrayOutput values.
// You can construct a concrete instance of `TemplateTooltipItemArrayInput` via:
//
//	TemplateTooltipItemArray{ TemplateTooltipItemArgs{...} }
type TemplateTooltipItemArrayInput interface {
	pulumi.Input

	ToTemplateTooltipItemArrayOutput() TemplateTooltipItemArrayOutput
	ToTemplateTooltipItemArrayOutputWithContext(context.Context) TemplateTooltipItemArrayOutput
}

type TemplateTooltipItemArray []TemplateTooltipItemInput

func (TemplateTooltipItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTooltipItem)(nil)).Elem()
}

func (i TemplateTooltipItemArray) ToTemplateTooltipItemArrayOutput() TemplateTooltipItemArrayOutput {
	return i.ToTemplateTooltipItemArrayOutputWithContext(context.Background())
}

func (i TemplateTooltipItemArray) ToTemplateTooltipItemArrayOutputWithContext(ctx context.Context) TemplateTooltipItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTooltipItemArrayOutput)
}

type TemplateTooltipItemOutput struct{ *pulumi.OutputState }

func (TemplateTooltipItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipItem)(nil)).Elem()
}

func (o TemplateTooltipItemOutput) ToTemplateTooltipItemOutput() TemplateTooltipItemOutput {
	return o
}

func (o TemplateTooltipItemOutput) ToTemplateTooltipItemOutputWithContext(ctx context.Context) TemplateTooltipItemOutput {
	return o
}

func (o TemplateTooltipItemOutput) ColumnTooltipItem() TemplateColumnTooltipItemPtrOutput {
	return o.ApplyT(func(v TemplateTooltipItem) *TemplateColumnTooltipItem { return v.ColumnTooltipItem }).(TemplateColumnTooltipItemPtrOutput)
}

func (o TemplateTooltipItemOutput) FieldTooltipItem() TemplateFieldTooltipItemPtrOutput {
	return o.ApplyT(func(v TemplateTooltipItem) *TemplateFieldTooltipItem { return v.FieldTooltipItem }).(TemplateFieldTooltipItemPtrOutput)
}

type TemplateTooltipItemArrayOutput struct{ *pulumi.OutputState }

func (TemplateTooltipItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTooltipItem)(nil)).Elem()
}

func (o TemplateTooltipItemArrayOutput) ToTemplateTooltipItemArrayOutput() TemplateTooltipItemArrayOutput {
	return o
}

func (o TemplateTooltipItemArrayOutput) ToTemplateTooltipItemArrayOutputWithContext(ctx context.Context) TemplateTooltipItemArrayOutput {
	return o
}

func (o TemplateTooltipItemArrayOutput) Index(i pulumi.IntInput) TemplateTooltipItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTooltipItem {
		return vs[0].([]TemplateTooltipItem)[vs[1].(int)]
	}).(TemplateTooltipItemOutput)
}

type TemplateTooltipOptions struct {
	FieldBasedTooltip   *TemplateFieldBasedTooltip   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType *TemplateSelectedTooltipType `pulumi:"selectedTooltipType"`
	TooltipVisibility   *TemplateVisibility          `pulumi:"tooltipVisibility"`
}

// TemplateTooltipOptionsInput is an input type that accepts TemplateTooltipOptionsArgs and TemplateTooltipOptionsOutput values.
// You can construct a concrete instance of `TemplateTooltipOptionsInput` via:
//
//	TemplateTooltipOptionsArgs{...}
type TemplateTooltipOptionsInput interface {
	pulumi.Input

	ToTemplateTooltipOptionsOutput() TemplateTooltipOptionsOutput
	ToTemplateTooltipOptionsOutputWithContext(context.Context) TemplateTooltipOptionsOutput
}

type TemplateTooltipOptionsArgs struct {
	FieldBasedTooltip   TemplateFieldBasedTooltipPtrInput   `pulumi:"fieldBasedTooltip"`
	SelectedTooltipType TemplateSelectedTooltipTypePtrInput `pulumi:"selectedTooltipType"`
	TooltipVisibility   TemplateVisibilityPtrInput          `pulumi:"tooltipVisibility"`
}

func (TemplateTooltipOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipOptions)(nil)).Elem()
}

func (i TemplateTooltipOptionsArgs) ToTemplateTooltipOptionsOutput() TemplateTooltipOptionsOutput {
	return i.ToTemplateTooltipOptionsOutputWithContext(context.Background())
}

func (i TemplateTooltipOptionsArgs) ToTemplateTooltipOptionsOutputWithContext(ctx context.Context) TemplateTooltipOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTooltipOptionsOutput)
}

func (i TemplateTooltipOptionsArgs) ToTemplateTooltipOptionsPtrOutput() TemplateTooltipOptionsPtrOutput {
	return i.ToTemplateTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTooltipOptionsArgs) ToTemplateTooltipOptionsPtrOutputWithContext(ctx context.Context) TemplateTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTooltipOptionsOutput).ToTemplateTooltipOptionsPtrOutputWithContext(ctx)
}

// TemplateTooltipOptionsPtrInput is an input type that accepts TemplateTooltipOptionsArgs, TemplateTooltipOptionsPtr and TemplateTooltipOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTooltipOptionsPtrInput` via:
//
//	        TemplateTooltipOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTooltipOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTooltipOptionsPtrOutput() TemplateTooltipOptionsPtrOutput
	ToTemplateTooltipOptionsPtrOutputWithContext(context.Context) TemplateTooltipOptionsPtrOutput
}

type templateTooltipOptionsPtrType TemplateTooltipOptionsArgs

func TemplateTooltipOptionsPtr(v *TemplateTooltipOptionsArgs) TemplateTooltipOptionsPtrInput {
	return (*templateTooltipOptionsPtrType)(v)
}

func (*templateTooltipOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTooltipOptions)(nil)).Elem()
}

func (i *templateTooltipOptionsPtrType) ToTemplateTooltipOptionsPtrOutput() TemplateTooltipOptionsPtrOutput {
	return i.ToTemplateTooltipOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTooltipOptionsPtrType) ToTemplateTooltipOptionsPtrOutputWithContext(ctx context.Context) TemplateTooltipOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTooltipOptionsPtrOutput)
}

type TemplateTooltipOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTooltipOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTooltipOptions)(nil)).Elem()
}

func (o TemplateTooltipOptionsOutput) ToTemplateTooltipOptionsOutput() TemplateTooltipOptionsOutput {
	return o
}

func (o TemplateTooltipOptionsOutput) ToTemplateTooltipOptionsOutputWithContext(ctx context.Context) TemplateTooltipOptionsOutput {
	return o
}

func (o TemplateTooltipOptionsOutput) ToTemplateTooltipOptionsPtrOutput() TemplateTooltipOptionsPtrOutput {
	return o.ToTemplateTooltipOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTooltipOptionsOutput) ToTemplateTooltipOptionsPtrOutputWithContext(ctx context.Context) TemplateTooltipOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTooltipOptions) *TemplateTooltipOptions {
		return &v
	}).(TemplateTooltipOptionsPtrOutput)
}

func (o TemplateTooltipOptionsOutput) FieldBasedTooltip() TemplateFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v TemplateTooltipOptions) *TemplateFieldBasedTooltip { return v.FieldBasedTooltip }).(TemplateFieldBasedTooltipPtrOutput)
}

func (o TemplateTooltipOptionsOutput) SelectedTooltipType() TemplateSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v TemplateTooltipOptions) *TemplateSelectedTooltipType { return v.SelectedTooltipType }).(TemplateSelectedTooltipTypePtrOutput)
}

func (o TemplateTooltipOptionsOutput) TooltipVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTooltipOptions) *TemplateVisibility { return v.TooltipVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTooltipOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTooltipOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTooltipOptions)(nil)).Elem()
}

func (o TemplateTooltipOptionsPtrOutput) ToTemplateTooltipOptionsPtrOutput() TemplateTooltipOptionsPtrOutput {
	return o
}

func (o TemplateTooltipOptionsPtrOutput) ToTemplateTooltipOptionsPtrOutputWithContext(ctx context.Context) TemplateTooltipOptionsPtrOutput {
	return o
}

func (o TemplateTooltipOptionsPtrOutput) Elem() TemplateTooltipOptionsOutput {
	return o.ApplyT(func(v *TemplateTooltipOptions) TemplateTooltipOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTooltipOptions
		return ret
	}).(TemplateTooltipOptionsOutput)
}

func (o TemplateTooltipOptionsPtrOutput) FieldBasedTooltip() TemplateFieldBasedTooltipPtrOutput {
	return o.ApplyT(func(v *TemplateTooltipOptions) *TemplateFieldBasedTooltip {
		if v == nil {
			return nil
		}
		return v.FieldBasedTooltip
	}).(TemplateFieldBasedTooltipPtrOutput)
}

func (o TemplateTooltipOptionsPtrOutput) SelectedTooltipType() TemplateSelectedTooltipTypePtrOutput {
	return o.ApplyT(func(v *TemplateTooltipOptions) *TemplateSelectedTooltipType {
		if v == nil {
			return nil
		}
		return v.SelectedTooltipType
	}).(TemplateSelectedTooltipTypePtrOutput)
}

func (o TemplateTooltipOptionsPtrOutput) TooltipVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTooltipOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TooltipVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTopBottomFilter struct {
	AggregationSortConfigurations []TemplateAggregationSortConfiguration `pulumi:"aggregationSortConfigurations"`
	Column                        TemplateColumnIdentifier               `pulumi:"column"`
	FilterId                      string                                 `pulumi:"filterId"`
	Limit                         *float64                               `pulumi:"limit"`
	ParameterName                 *string                                `pulumi:"parameterName"`
	TimeGranularity               *TemplateTimeGranularity               `pulumi:"timeGranularity"`
}

// TemplateTopBottomFilterInput is an input type that accepts TemplateTopBottomFilterArgs and TemplateTopBottomFilterOutput values.
// You can construct a concrete instance of `TemplateTopBottomFilterInput` via:
//
//	TemplateTopBottomFilterArgs{...}
type TemplateTopBottomFilterInput interface {
	pulumi.Input

	ToTemplateTopBottomFilterOutput() TemplateTopBottomFilterOutput
	ToTemplateTopBottomFilterOutputWithContext(context.Context) TemplateTopBottomFilterOutput
}

type TemplateTopBottomFilterArgs struct {
	AggregationSortConfigurations TemplateAggregationSortConfigurationArrayInput `pulumi:"aggregationSortConfigurations"`
	Column                        TemplateColumnIdentifierInput                  `pulumi:"column"`
	FilterId                      pulumi.StringInput                             `pulumi:"filterId"`
	Limit                         pulumi.Float64PtrInput                         `pulumi:"limit"`
	ParameterName                 pulumi.StringPtrInput                          `pulumi:"parameterName"`
	TimeGranularity               TemplateTimeGranularityPtrInput                `pulumi:"timeGranularity"`
}

func (TemplateTopBottomFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomFilter)(nil)).Elem()
}

func (i TemplateTopBottomFilterArgs) ToTemplateTopBottomFilterOutput() TemplateTopBottomFilterOutput {
	return i.ToTemplateTopBottomFilterOutputWithContext(context.Background())
}

func (i TemplateTopBottomFilterArgs) ToTemplateTopBottomFilterOutputWithContext(ctx context.Context) TemplateTopBottomFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomFilterOutput)
}

func (i TemplateTopBottomFilterArgs) ToTemplateTopBottomFilterPtrOutput() TemplateTopBottomFilterPtrOutput {
	return i.ToTemplateTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i TemplateTopBottomFilterArgs) ToTemplateTopBottomFilterPtrOutputWithContext(ctx context.Context) TemplateTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomFilterOutput).ToTemplateTopBottomFilterPtrOutputWithContext(ctx)
}

// TemplateTopBottomFilterPtrInput is an input type that accepts TemplateTopBottomFilterArgs, TemplateTopBottomFilterPtr and TemplateTopBottomFilterPtrOutput values.
// You can construct a concrete instance of `TemplateTopBottomFilterPtrInput` via:
//
//	        TemplateTopBottomFilterArgs{...}
//
//	or:
//
//	        nil
type TemplateTopBottomFilterPtrInput interface {
	pulumi.Input

	ToTemplateTopBottomFilterPtrOutput() TemplateTopBottomFilterPtrOutput
	ToTemplateTopBottomFilterPtrOutputWithContext(context.Context) TemplateTopBottomFilterPtrOutput
}

type templateTopBottomFilterPtrType TemplateTopBottomFilterArgs

func TemplateTopBottomFilterPtr(v *TemplateTopBottomFilterArgs) TemplateTopBottomFilterPtrInput {
	return (*templateTopBottomFilterPtrType)(v)
}

func (*templateTopBottomFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomFilter)(nil)).Elem()
}

func (i *templateTopBottomFilterPtrType) ToTemplateTopBottomFilterPtrOutput() TemplateTopBottomFilterPtrOutput {
	return i.ToTemplateTopBottomFilterPtrOutputWithContext(context.Background())
}

func (i *templateTopBottomFilterPtrType) ToTemplateTopBottomFilterPtrOutputWithContext(ctx context.Context) TemplateTopBottomFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomFilterPtrOutput)
}

type TemplateTopBottomFilterOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomFilter)(nil)).Elem()
}

func (o TemplateTopBottomFilterOutput) ToTemplateTopBottomFilterOutput() TemplateTopBottomFilterOutput {
	return o
}

func (o TemplateTopBottomFilterOutput) ToTemplateTopBottomFilterOutputWithContext(ctx context.Context) TemplateTopBottomFilterOutput {
	return o
}

func (o TemplateTopBottomFilterOutput) ToTemplateTopBottomFilterPtrOutput() TemplateTopBottomFilterPtrOutput {
	return o.ToTemplateTopBottomFilterPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomFilterOutput) ToTemplateTopBottomFilterPtrOutputWithContext(ctx context.Context) TemplateTopBottomFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTopBottomFilter) *TemplateTopBottomFilter {
		return &v
	}).(TemplateTopBottomFilterPtrOutput)
}

func (o TemplateTopBottomFilterOutput) AggregationSortConfigurations() TemplateAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) []TemplateAggregationSortConfiguration {
		return v.AggregationSortConfigurations
	}).(TemplateAggregationSortConfigurationArrayOutput)
}

func (o TemplateTopBottomFilterOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateTopBottomFilterOutput) FilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) string { return v.FilterId }).(pulumi.StringOutput)
}

func (o TemplateTopBottomFilterOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) *float64 { return v.Limit }).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomFilterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomFilterOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomFilter) *TemplateTimeGranularity { return v.TimeGranularity }).(TemplateTimeGranularityPtrOutput)
}

type TemplateTopBottomFilterPtrOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomFilter)(nil)).Elem()
}

func (o TemplateTopBottomFilterPtrOutput) ToTemplateTopBottomFilterPtrOutput() TemplateTopBottomFilterPtrOutput {
	return o
}

func (o TemplateTopBottomFilterPtrOutput) ToTemplateTopBottomFilterPtrOutputWithContext(ctx context.Context) TemplateTopBottomFilterPtrOutput {
	return o
}

func (o TemplateTopBottomFilterPtrOutput) Elem() TemplateTopBottomFilterOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) TemplateTopBottomFilter {
		if v != nil {
			return *v
		}
		var ret TemplateTopBottomFilter
		return ret
	}).(TemplateTopBottomFilterOutput)
}

func (o TemplateTopBottomFilterPtrOutput) AggregationSortConfigurations() TemplateAggregationSortConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) []TemplateAggregationSortConfiguration {
		if v == nil {
			return nil
		}
		return v.AggregationSortConfigurations
	}).(TemplateAggregationSortConfigurationArrayOutput)
}

func (o TemplateTopBottomFilterPtrOutput) Column() TemplateColumnIdentifierPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) *TemplateColumnIdentifier {
		if v == nil {
			return nil
		}
		return &v.Column
	}).(TemplateColumnIdentifierPtrOutput)
}

func (o TemplateTopBottomFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return &v.FilterId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomFilterPtrOutput) Limit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) *float64 {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomFilterPtrOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) *string {
		if v == nil {
			return nil
		}
		return v.ParameterName
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomFilterPtrOutput) TimeGranularity() TemplateTimeGranularityPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomFilter) *TemplateTimeGranularity {
		if v == nil {
			return nil
		}
		return v.TimeGranularity
	}).(TemplateTimeGranularityPtrOutput)
}

type TemplateTopBottomMoversComputation struct {
	Category      *TemplateDimensionField          `pulumi:"category"`
	ComputationId string                           `pulumi:"computationId"`
	MoverSize     *float64                         `pulumi:"moverSize"`
	Name          *string                          `pulumi:"name"`
	SortOrder     *TemplateTopBottomSortOrder      `pulumi:"sortOrder"`
	Time          *TemplateDimensionField          `pulumi:"time"`
	Type          TemplateTopBottomComputationType `pulumi:"type"`
	Value         *TemplateMeasureField            `pulumi:"value"`
}

// TemplateTopBottomMoversComputationInput is an input type that accepts TemplateTopBottomMoversComputationArgs and TemplateTopBottomMoversComputationOutput values.
// You can construct a concrete instance of `TemplateTopBottomMoversComputationInput` via:
//
//	TemplateTopBottomMoversComputationArgs{...}
type TemplateTopBottomMoversComputationInput interface {
	pulumi.Input

	ToTemplateTopBottomMoversComputationOutput() TemplateTopBottomMoversComputationOutput
	ToTemplateTopBottomMoversComputationOutputWithContext(context.Context) TemplateTopBottomMoversComputationOutput
}

type TemplateTopBottomMoversComputationArgs struct {
	Category      TemplateDimensionFieldPtrInput        `pulumi:"category"`
	ComputationId pulumi.StringInput                    `pulumi:"computationId"`
	MoverSize     pulumi.Float64PtrInput                `pulumi:"moverSize"`
	Name          pulumi.StringPtrInput                 `pulumi:"name"`
	SortOrder     TemplateTopBottomSortOrderPtrInput    `pulumi:"sortOrder"`
	Time          TemplateDimensionFieldPtrInput        `pulumi:"time"`
	Type          TemplateTopBottomComputationTypeInput `pulumi:"type"`
	Value         TemplateMeasureFieldPtrInput          `pulumi:"value"`
}

func (TemplateTopBottomMoversComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomMoversComputation)(nil)).Elem()
}

func (i TemplateTopBottomMoversComputationArgs) ToTemplateTopBottomMoversComputationOutput() TemplateTopBottomMoversComputationOutput {
	return i.ToTemplateTopBottomMoversComputationOutputWithContext(context.Background())
}

func (i TemplateTopBottomMoversComputationArgs) ToTemplateTopBottomMoversComputationOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomMoversComputationOutput)
}

func (i TemplateTopBottomMoversComputationArgs) ToTemplateTopBottomMoversComputationPtrOutput() TemplateTopBottomMoversComputationPtrOutput {
	return i.ToTemplateTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i TemplateTopBottomMoversComputationArgs) ToTemplateTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomMoversComputationOutput).ToTemplateTopBottomMoversComputationPtrOutputWithContext(ctx)
}

// TemplateTopBottomMoversComputationPtrInput is an input type that accepts TemplateTopBottomMoversComputationArgs, TemplateTopBottomMoversComputationPtr and TemplateTopBottomMoversComputationPtrOutput values.
// You can construct a concrete instance of `TemplateTopBottomMoversComputationPtrInput` via:
//
//	        TemplateTopBottomMoversComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateTopBottomMoversComputationPtrInput interface {
	pulumi.Input

	ToTemplateTopBottomMoversComputationPtrOutput() TemplateTopBottomMoversComputationPtrOutput
	ToTemplateTopBottomMoversComputationPtrOutputWithContext(context.Context) TemplateTopBottomMoversComputationPtrOutput
}

type templateTopBottomMoversComputationPtrType TemplateTopBottomMoversComputationArgs

func TemplateTopBottomMoversComputationPtr(v *TemplateTopBottomMoversComputationArgs) TemplateTopBottomMoversComputationPtrInput {
	return (*templateTopBottomMoversComputationPtrType)(v)
}

func (*templateTopBottomMoversComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomMoversComputation)(nil)).Elem()
}

func (i *templateTopBottomMoversComputationPtrType) ToTemplateTopBottomMoversComputationPtrOutput() TemplateTopBottomMoversComputationPtrOutput {
	return i.ToTemplateTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (i *templateTopBottomMoversComputationPtrType) ToTemplateTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomMoversComputationPtrOutput)
}

type TemplateTopBottomMoversComputationOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomMoversComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomMoversComputation)(nil)).Elem()
}

func (o TemplateTopBottomMoversComputationOutput) ToTemplateTopBottomMoversComputationOutput() TemplateTopBottomMoversComputationOutput {
	return o
}

func (o TemplateTopBottomMoversComputationOutput) ToTemplateTopBottomMoversComputationOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationOutput {
	return o
}

func (o TemplateTopBottomMoversComputationOutput) ToTemplateTopBottomMoversComputationPtrOutput() TemplateTopBottomMoversComputationPtrOutput {
	return o.ToTemplateTopBottomMoversComputationPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomMoversComputationOutput) ToTemplateTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTopBottomMoversComputation) *TemplateTopBottomMoversComputation {
		return &v
	}).(TemplateTopBottomMoversComputationPtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *TemplateDimensionField { return v.Category }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateTopBottomMoversComputationOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *float64 { return v.MoverSize }).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) SortOrder() TemplateTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *TemplateTopBottomSortOrder { return v.SortOrder }).(TemplateTopBottomSortOrderPtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *TemplateDimensionField { return v.Time }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomMoversComputationOutput) Type() TemplateTopBottomComputationTypeOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) TemplateTopBottomComputationType { return v.Type }).(TemplateTopBottomComputationTypeOutput)
}

func (o TemplateTopBottomMoversComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomMoversComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateTopBottomMoversComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomMoversComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomMoversComputation)(nil)).Elem()
}

func (o TemplateTopBottomMoversComputationPtrOutput) ToTemplateTopBottomMoversComputationPtrOutput() TemplateTopBottomMoversComputationPtrOutput {
	return o
}

func (o TemplateTopBottomMoversComputationPtrOutput) ToTemplateTopBottomMoversComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomMoversComputationPtrOutput {
	return o
}

func (o TemplateTopBottomMoversComputationPtrOutput) Elem() TemplateTopBottomMoversComputationOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) TemplateTopBottomMoversComputation {
		if v != nil {
			return *v
		}
		var ret TemplateTopBottomMoversComputation
		return ret
	}).(TemplateTopBottomMoversComputationOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) MoverSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.MoverSize
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) SortOrder() TemplateTopBottomSortOrderPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *TemplateTopBottomSortOrder {
		if v == nil {
			return nil
		}
		return v.SortOrder
	}).(TemplateTopBottomSortOrderPtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) Time() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Time
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) Type() TemplateTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *TemplateTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(TemplateTopBottomComputationTypePtrOutput)
}

func (o TemplateTopBottomMoversComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomMoversComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateTopBottomRankedComputation struct {
	Category      *TemplateDimensionField          `pulumi:"category"`
	ComputationId string                           `pulumi:"computationId"`
	Name          *string                          `pulumi:"name"`
	ResultSize    *float64                         `pulumi:"resultSize"`
	Type          TemplateTopBottomComputationType `pulumi:"type"`
	Value         *TemplateMeasureField            `pulumi:"value"`
}

// TemplateTopBottomRankedComputationInput is an input type that accepts TemplateTopBottomRankedComputationArgs and TemplateTopBottomRankedComputationOutput values.
// You can construct a concrete instance of `TemplateTopBottomRankedComputationInput` via:
//
//	TemplateTopBottomRankedComputationArgs{...}
type TemplateTopBottomRankedComputationInput interface {
	pulumi.Input

	ToTemplateTopBottomRankedComputationOutput() TemplateTopBottomRankedComputationOutput
	ToTemplateTopBottomRankedComputationOutputWithContext(context.Context) TemplateTopBottomRankedComputationOutput
}

type TemplateTopBottomRankedComputationArgs struct {
	Category      TemplateDimensionFieldPtrInput        `pulumi:"category"`
	ComputationId pulumi.StringInput                    `pulumi:"computationId"`
	Name          pulumi.StringPtrInput                 `pulumi:"name"`
	ResultSize    pulumi.Float64PtrInput                `pulumi:"resultSize"`
	Type          TemplateTopBottomComputationTypeInput `pulumi:"type"`
	Value         TemplateMeasureFieldPtrInput          `pulumi:"value"`
}

func (TemplateTopBottomRankedComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomRankedComputation)(nil)).Elem()
}

func (i TemplateTopBottomRankedComputationArgs) ToTemplateTopBottomRankedComputationOutput() TemplateTopBottomRankedComputationOutput {
	return i.ToTemplateTopBottomRankedComputationOutputWithContext(context.Background())
}

func (i TemplateTopBottomRankedComputationArgs) ToTemplateTopBottomRankedComputationOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomRankedComputationOutput)
}

func (i TemplateTopBottomRankedComputationArgs) ToTemplateTopBottomRankedComputationPtrOutput() TemplateTopBottomRankedComputationPtrOutput {
	return i.ToTemplateTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i TemplateTopBottomRankedComputationArgs) ToTemplateTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomRankedComputationOutput).ToTemplateTopBottomRankedComputationPtrOutputWithContext(ctx)
}

// TemplateTopBottomRankedComputationPtrInput is an input type that accepts TemplateTopBottomRankedComputationArgs, TemplateTopBottomRankedComputationPtr and TemplateTopBottomRankedComputationPtrOutput values.
// You can construct a concrete instance of `TemplateTopBottomRankedComputationPtrInput` via:
//
//	        TemplateTopBottomRankedComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateTopBottomRankedComputationPtrInput interface {
	pulumi.Input

	ToTemplateTopBottomRankedComputationPtrOutput() TemplateTopBottomRankedComputationPtrOutput
	ToTemplateTopBottomRankedComputationPtrOutputWithContext(context.Context) TemplateTopBottomRankedComputationPtrOutput
}

type templateTopBottomRankedComputationPtrType TemplateTopBottomRankedComputationArgs

func TemplateTopBottomRankedComputationPtr(v *TemplateTopBottomRankedComputationArgs) TemplateTopBottomRankedComputationPtrInput {
	return (*templateTopBottomRankedComputationPtrType)(v)
}

func (*templateTopBottomRankedComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomRankedComputation)(nil)).Elem()
}

func (i *templateTopBottomRankedComputationPtrType) ToTemplateTopBottomRankedComputationPtrOutput() TemplateTopBottomRankedComputationPtrOutput {
	return i.ToTemplateTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (i *templateTopBottomRankedComputationPtrType) ToTemplateTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTopBottomRankedComputationPtrOutput)
}

type TemplateTopBottomRankedComputationOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomRankedComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTopBottomRankedComputation)(nil)).Elem()
}

func (o TemplateTopBottomRankedComputationOutput) ToTemplateTopBottomRankedComputationOutput() TemplateTopBottomRankedComputationOutput {
	return o
}

func (o TemplateTopBottomRankedComputationOutput) ToTemplateTopBottomRankedComputationOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationOutput {
	return o
}

func (o TemplateTopBottomRankedComputationOutput) ToTemplateTopBottomRankedComputationPtrOutput() TemplateTopBottomRankedComputationPtrOutput {
	return o.ToTemplateTopBottomRankedComputationPtrOutputWithContext(context.Background())
}

func (o TemplateTopBottomRankedComputationOutput) ToTemplateTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTopBottomRankedComputation) *TemplateTopBottomRankedComputation {
		return &v
	}).(TemplateTopBottomRankedComputationPtrOutput)
}

func (o TemplateTopBottomRankedComputationOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) *TemplateDimensionField { return v.Category }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomRankedComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateTopBottomRankedComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomRankedComputationOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) *float64 { return v.ResultSize }).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomRankedComputationOutput) Type() TemplateTopBottomComputationTypeOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) TemplateTopBottomComputationType { return v.Type }).(TemplateTopBottomComputationTypeOutput)
}

func (o TemplateTopBottomRankedComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateTopBottomRankedComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateTopBottomRankedComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTopBottomRankedComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTopBottomRankedComputation)(nil)).Elem()
}

func (o TemplateTopBottomRankedComputationPtrOutput) ToTemplateTopBottomRankedComputationPtrOutput() TemplateTopBottomRankedComputationPtrOutput {
	return o
}

func (o TemplateTopBottomRankedComputationPtrOutput) ToTemplateTopBottomRankedComputationPtrOutputWithContext(ctx context.Context) TemplateTopBottomRankedComputationPtrOutput {
	return o
}

func (o TemplateTopBottomRankedComputationPtrOutput) Elem() TemplateTopBottomRankedComputationOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) TemplateTopBottomRankedComputation {
		if v != nil {
			return *v
		}
		var ret TemplateTopBottomRankedComputation
		return ret
	}).(TemplateTopBottomRankedComputationOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) ResultSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *float64 {
		if v == nil {
			return nil
		}
		return v.ResultSize
	}).(pulumi.Float64PtrOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) Type() TemplateTopBottomComputationTypePtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *TemplateTopBottomComputationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(TemplateTopBottomComputationTypePtrOutput)
}

func (o TemplateTopBottomRankedComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTopBottomRankedComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateTotalAggregationComputation struct {
	ComputationId string                `pulumi:"computationId"`
	Name          *string               `pulumi:"name"`
	Value         *TemplateMeasureField `pulumi:"value"`
}

// TemplateTotalAggregationComputationInput is an input type that accepts TemplateTotalAggregationComputationArgs and TemplateTotalAggregationComputationOutput values.
// You can construct a concrete instance of `TemplateTotalAggregationComputationInput` via:
//
//	TemplateTotalAggregationComputationArgs{...}
type TemplateTotalAggregationComputationInput interface {
	pulumi.Input

	ToTemplateTotalAggregationComputationOutput() TemplateTotalAggregationComputationOutput
	ToTemplateTotalAggregationComputationOutputWithContext(context.Context) TemplateTotalAggregationComputationOutput
}

type TemplateTotalAggregationComputationArgs struct {
	ComputationId pulumi.StringInput           `pulumi:"computationId"`
	Name          pulumi.StringPtrInput        `pulumi:"name"`
	Value         TemplateMeasureFieldPtrInput `pulumi:"value"`
}

func (TemplateTotalAggregationComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationComputation)(nil)).Elem()
}

func (i TemplateTotalAggregationComputationArgs) ToTemplateTotalAggregationComputationOutput() TemplateTotalAggregationComputationOutput {
	return i.ToTemplateTotalAggregationComputationOutputWithContext(context.Background())
}

func (i TemplateTotalAggregationComputationArgs) ToTemplateTotalAggregationComputationOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationComputationOutput)
}

func (i TemplateTotalAggregationComputationArgs) ToTemplateTotalAggregationComputationPtrOutput() TemplateTotalAggregationComputationPtrOutput {
	return i.ToTemplateTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i TemplateTotalAggregationComputationArgs) ToTemplateTotalAggregationComputationPtrOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationComputationOutput).ToTemplateTotalAggregationComputationPtrOutputWithContext(ctx)
}

// TemplateTotalAggregationComputationPtrInput is an input type that accepts TemplateTotalAggregationComputationArgs, TemplateTotalAggregationComputationPtr and TemplateTotalAggregationComputationPtrOutput values.
// You can construct a concrete instance of `TemplateTotalAggregationComputationPtrInput` via:
//
//	        TemplateTotalAggregationComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateTotalAggregationComputationPtrInput interface {
	pulumi.Input

	ToTemplateTotalAggregationComputationPtrOutput() TemplateTotalAggregationComputationPtrOutput
	ToTemplateTotalAggregationComputationPtrOutputWithContext(context.Context) TemplateTotalAggregationComputationPtrOutput
}

type templateTotalAggregationComputationPtrType TemplateTotalAggregationComputationArgs

func TemplateTotalAggregationComputationPtr(v *TemplateTotalAggregationComputationArgs) TemplateTotalAggregationComputationPtrInput {
	return (*templateTotalAggregationComputationPtrType)(v)
}

func (*templateTotalAggregationComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTotalAggregationComputation)(nil)).Elem()
}

func (i *templateTotalAggregationComputationPtrType) ToTemplateTotalAggregationComputationPtrOutput() TemplateTotalAggregationComputationPtrOutput {
	return i.ToTemplateTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (i *templateTotalAggregationComputationPtrType) ToTemplateTotalAggregationComputationPtrOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationComputationPtrOutput)
}

type TemplateTotalAggregationComputationOutput struct{ *pulumi.OutputState }

func (TemplateTotalAggregationComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationComputation)(nil)).Elem()
}

func (o TemplateTotalAggregationComputationOutput) ToTemplateTotalAggregationComputationOutput() TemplateTotalAggregationComputationOutput {
	return o
}

func (o TemplateTotalAggregationComputationOutput) ToTemplateTotalAggregationComputationOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationOutput {
	return o
}

func (o TemplateTotalAggregationComputationOutput) ToTemplateTotalAggregationComputationPtrOutput() TemplateTotalAggregationComputationPtrOutput {
	return o.ToTemplateTotalAggregationComputationPtrOutputWithContext(context.Background())
}

func (o TemplateTotalAggregationComputationOutput) ToTemplateTotalAggregationComputationPtrOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTotalAggregationComputation) *TemplateTotalAggregationComputation {
		return &v
	}).(TemplateTotalAggregationComputationPtrOutput)
}

func (o TemplateTotalAggregationComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTotalAggregationComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateTotalAggregationComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTotalAggregationComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TemplateTotalAggregationComputationOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v TemplateTotalAggregationComputation) *TemplateMeasureField { return v.Value }).(TemplateMeasureFieldPtrOutput)
}

type TemplateTotalAggregationComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTotalAggregationComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTotalAggregationComputation)(nil)).Elem()
}

func (o TemplateTotalAggregationComputationPtrOutput) ToTemplateTotalAggregationComputationPtrOutput() TemplateTotalAggregationComputationPtrOutput {
	return o
}

func (o TemplateTotalAggregationComputationPtrOutput) ToTemplateTotalAggregationComputationPtrOutputWithContext(ctx context.Context) TemplateTotalAggregationComputationPtrOutput {
	return o
}

func (o TemplateTotalAggregationComputationPtrOutput) Elem() TemplateTotalAggregationComputationOutput {
	return o.ApplyT(func(v *TemplateTotalAggregationComputation) TemplateTotalAggregationComputation {
		if v != nil {
			return *v
		}
		var ret TemplateTotalAggregationComputation
		return ret
	}).(TemplateTotalAggregationComputationOutput)
}

func (o TemplateTotalAggregationComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTotalAggregationComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTotalAggregationComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTotalAggregationComputationPtrOutput) Value() TemplateMeasureFieldPtrOutput {
	return o.ApplyT(func(v *TemplateTotalAggregationComputation) *TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Value
	}).(TemplateMeasureFieldPtrOutput)
}

type TemplateTotalAggregationFunction struct {
	SimpleTotalAggregationFunction *TemplateSimpleTotalAggregationFunction `pulumi:"simpleTotalAggregationFunction"`
}

// TemplateTotalAggregationFunctionInput is an input type that accepts TemplateTotalAggregationFunctionArgs and TemplateTotalAggregationFunctionOutput values.
// You can construct a concrete instance of `TemplateTotalAggregationFunctionInput` via:
//
//	TemplateTotalAggregationFunctionArgs{...}
type TemplateTotalAggregationFunctionInput interface {
	pulumi.Input

	ToTemplateTotalAggregationFunctionOutput() TemplateTotalAggregationFunctionOutput
	ToTemplateTotalAggregationFunctionOutputWithContext(context.Context) TemplateTotalAggregationFunctionOutput
}

type TemplateTotalAggregationFunctionArgs struct {
	SimpleTotalAggregationFunction TemplateSimpleTotalAggregationFunctionPtrInput `pulumi:"simpleTotalAggregationFunction"`
}

func (TemplateTotalAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationFunction)(nil)).Elem()
}

func (i TemplateTotalAggregationFunctionArgs) ToTemplateTotalAggregationFunctionOutput() TemplateTotalAggregationFunctionOutput {
	return i.ToTemplateTotalAggregationFunctionOutputWithContext(context.Background())
}

func (i TemplateTotalAggregationFunctionArgs) ToTemplateTotalAggregationFunctionOutputWithContext(ctx context.Context) TemplateTotalAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationFunctionOutput)
}

type TemplateTotalAggregationFunctionOutput struct{ *pulumi.OutputState }

func (TemplateTotalAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationFunction)(nil)).Elem()
}

func (o TemplateTotalAggregationFunctionOutput) ToTemplateTotalAggregationFunctionOutput() TemplateTotalAggregationFunctionOutput {
	return o
}

func (o TemplateTotalAggregationFunctionOutput) ToTemplateTotalAggregationFunctionOutputWithContext(ctx context.Context) TemplateTotalAggregationFunctionOutput {
	return o
}

func (o TemplateTotalAggregationFunctionOutput) SimpleTotalAggregationFunction() TemplateSimpleTotalAggregationFunctionPtrOutput {
	return o.ApplyT(func(v TemplateTotalAggregationFunction) *TemplateSimpleTotalAggregationFunction {
		return v.SimpleTotalAggregationFunction
	}).(TemplateSimpleTotalAggregationFunctionPtrOutput)
}

type TemplateTotalAggregationOption struct {
	FieldId                  string                           `pulumi:"fieldId"`
	TotalAggregationFunction TemplateTotalAggregationFunction `pulumi:"totalAggregationFunction"`
}

// TemplateTotalAggregationOptionInput is an input type that accepts TemplateTotalAggregationOptionArgs and TemplateTotalAggregationOptionOutput values.
// You can construct a concrete instance of `TemplateTotalAggregationOptionInput` via:
//
//	TemplateTotalAggregationOptionArgs{...}
type TemplateTotalAggregationOptionInput interface {
	pulumi.Input

	ToTemplateTotalAggregationOptionOutput() TemplateTotalAggregationOptionOutput
	ToTemplateTotalAggregationOptionOutputWithContext(context.Context) TemplateTotalAggregationOptionOutput
}

type TemplateTotalAggregationOptionArgs struct {
	FieldId                  pulumi.StringInput                    `pulumi:"fieldId"`
	TotalAggregationFunction TemplateTotalAggregationFunctionInput `pulumi:"totalAggregationFunction"`
}

func (TemplateTotalAggregationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationOption)(nil)).Elem()
}

func (i TemplateTotalAggregationOptionArgs) ToTemplateTotalAggregationOptionOutput() TemplateTotalAggregationOptionOutput {
	return i.ToTemplateTotalAggregationOptionOutputWithContext(context.Background())
}

func (i TemplateTotalAggregationOptionArgs) ToTemplateTotalAggregationOptionOutputWithContext(ctx context.Context) TemplateTotalAggregationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationOptionOutput)
}

// TemplateTotalAggregationOptionArrayInput is an input type that accepts TemplateTotalAggregationOptionArray and TemplateTotalAggregationOptionArrayOutput values.
// You can construct a concrete instance of `TemplateTotalAggregationOptionArrayInput` via:
//
//	TemplateTotalAggregationOptionArray{ TemplateTotalAggregationOptionArgs{...} }
type TemplateTotalAggregationOptionArrayInput interface {
	pulumi.Input

	ToTemplateTotalAggregationOptionArrayOutput() TemplateTotalAggregationOptionArrayOutput
	ToTemplateTotalAggregationOptionArrayOutputWithContext(context.Context) TemplateTotalAggregationOptionArrayOutput
}

type TemplateTotalAggregationOptionArray []TemplateTotalAggregationOptionInput

func (TemplateTotalAggregationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTotalAggregationOption)(nil)).Elem()
}

func (i TemplateTotalAggregationOptionArray) ToTemplateTotalAggregationOptionArrayOutput() TemplateTotalAggregationOptionArrayOutput {
	return i.ToTemplateTotalAggregationOptionArrayOutputWithContext(context.Background())
}

func (i TemplateTotalAggregationOptionArray) ToTemplateTotalAggregationOptionArrayOutputWithContext(ctx context.Context) TemplateTotalAggregationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalAggregationOptionArrayOutput)
}

type TemplateTotalAggregationOptionOutput struct{ *pulumi.OutputState }

func (TemplateTotalAggregationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalAggregationOption)(nil)).Elem()
}

func (o TemplateTotalAggregationOptionOutput) ToTemplateTotalAggregationOptionOutput() TemplateTotalAggregationOptionOutput {
	return o
}

func (o TemplateTotalAggregationOptionOutput) ToTemplateTotalAggregationOptionOutputWithContext(ctx context.Context) TemplateTotalAggregationOptionOutput {
	return o
}

func (o TemplateTotalAggregationOptionOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTotalAggregationOption) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateTotalAggregationOptionOutput) TotalAggregationFunction() TemplateTotalAggregationFunctionOutput {
	return o.ApplyT(func(v TemplateTotalAggregationOption) TemplateTotalAggregationFunction {
		return v.TotalAggregationFunction
	}).(TemplateTotalAggregationFunctionOutput)
}

type TemplateTotalAggregationOptionArrayOutput struct{ *pulumi.OutputState }

func (TemplateTotalAggregationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateTotalAggregationOption)(nil)).Elem()
}

func (o TemplateTotalAggregationOptionArrayOutput) ToTemplateTotalAggregationOptionArrayOutput() TemplateTotalAggregationOptionArrayOutput {
	return o
}

func (o TemplateTotalAggregationOptionArrayOutput) ToTemplateTotalAggregationOptionArrayOutputWithContext(ctx context.Context) TemplateTotalAggregationOptionArrayOutput {
	return o
}

func (o TemplateTotalAggregationOptionArrayOutput) Index(i pulumi.IntInput) TemplateTotalAggregationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateTotalAggregationOption {
		return vs[0].([]TemplateTotalAggregationOption)[vs[1].(int)]
	}).(TemplateTotalAggregationOptionOutput)
}

type TemplateTotalOptions struct {
	CustomLabel             *string                          `pulumi:"customLabel"`
	Placement               *TemplateTableTotalsPlacement    `pulumi:"placement"`
	ScrollStatus            *TemplateTableTotalsScrollStatus `pulumi:"scrollStatus"`
	TotalAggregationOptions []TemplateTotalAggregationOption `pulumi:"totalAggregationOptions"`
	TotalCellStyle          *TemplateTableCellStyle          `pulumi:"totalCellStyle"`
	TotalsVisibility        *TemplateVisibility              `pulumi:"totalsVisibility"`
}

// TemplateTotalOptionsInput is an input type that accepts TemplateTotalOptionsArgs and TemplateTotalOptionsOutput values.
// You can construct a concrete instance of `TemplateTotalOptionsInput` via:
//
//	TemplateTotalOptionsArgs{...}
type TemplateTotalOptionsInput interface {
	pulumi.Input

	ToTemplateTotalOptionsOutput() TemplateTotalOptionsOutput
	ToTemplateTotalOptionsOutputWithContext(context.Context) TemplateTotalOptionsOutput
}

type TemplateTotalOptionsArgs struct {
	CustomLabel             pulumi.StringPtrInput                    `pulumi:"customLabel"`
	Placement               TemplateTableTotalsPlacementPtrInput     `pulumi:"placement"`
	ScrollStatus            TemplateTableTotalsScrollStatusPtrInput  `pulumi:"scrollStatus"`
	TotalAggregationOptions TemplateTotalAggregationOptionArrayInput `pulumi:"totalAggregationOptions"`
	TotalCellStyle          TemplateTableCellStylePtrInput           `pulumi:"totalCellStyle"`
	TotalsVisibility        TemplateVisibilityPtrInput               `pulumi:"totalsVisibility"`
}

func (TemplateTotalOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalOptions)(nil)).Elem()
}

func (i TemplateTotalOptionsArgs) ToTemplateTotalOptionsOutput() TemplateTotalOptionsOutput {
	return i.ToTemplateTotalOptionsOutputWithContext(context.Background())
}

func (i TemplateTotalOptionsArgs) ToTemplateTotalOptionsOutputWithContext(ctx context.Context) TemplateTotalOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalOptionsOutput)
}

func (i TemplateTotalOptionsArgs) ToTemplateTotalOptionsPtrOutput() TemplateTotalOptionsPtrOutput {
	return i.ToTemplateTotalOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTotalOptionsArgs) ToTemplateTotalOptionsPtrOutputWithContext(ctx context.Context) TemplateTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalOptionsOutput).ToTemplateTotalOptionsPtrOutputWithContext(ctx)
}

// TemplateTotalOptionsPtrInput is an input type that accepts TemplateTotalOptionsArgs, TemplateTotalOptionsPtr and TemplateTotalOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTotalOptionsPtrInput` via:
//
//	        TemplateTotalOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTotalOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTotalOptionsPtrOutput() TemplateTotalOptionsPtrOutput
	ToTemplateTotalOptionsPtrOutputWithContext(context.Context) TemplateTotalOptionsPtrOutput
}

type templateTotalOptionsPtrType TemplateTotalOptionsArgs

func TemplateTotalOptionsPtr(v *TemplateTotalOptionsArgs) TemplateTotalOptionsPtrInput {
	return (*templateTotalOptionsPtrType)(v)
}

func (*templateTotalOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTotalOptions)(nil)).Elem()
}

func (i *templateTotalOptionsPtrType) ToTemplateTotalOptionsPtrOutput() TemplateTotalOptionsPtrOutput {
	return i.ToTemplateTotalOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTotalOptionsPtrType) ToTemplateTotalOptionsPtrOutputWithContext(ctx context.Context) TemplateTotalOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTotalOptionsPtrOutput)
}

type TemplateTotalOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTotalOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTotalOptions)(nil)).Elem()
}

func (o TemplateTotalOptionsOutput) ToTemplateTotalOptionsOutput() TemplateTotalOptionsOutput {
	return o
}

func (o TemplateTotalOptionsOutput) ToTemplateTotalOptionsOutputWithContext(ctx context.Context) TemplateTotalOptionsOutput {
	return o
}

func (o TemplateTotalOptionsOutput) ToTemplateTotalOptionsPtrOutput() TemplateTotalOptionsPtrOutput {
	return o.ToTemplateTotalOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTotalOptionsOutput) ToTemplateTotalOptionsPtrOutputWithContext(ctx context.Context) TemplateTotalOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTotalOptions) *TemplateTotalOptions {
		return &v
	}).(TemplateTotalOptionsPtrOutput)
}

func (o TemplateTotalOptionsOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateTotalOptions) *string { return v.CustomLabel }).(pulumi.StringPtrOutput)
}

func (o TemplateTotalOptionsOutput) Placement() TemplateTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v TemplateTotalOptions) *TemplateTableTotalsPlacement { return v.Placement }).(TemplateTableTotalsPlacementPtrOutput)
}

func (o TemplateTotalOptionsOutput) ScrollStatus() TemplateTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v TemplateTotalOptions) *TemplateTableTotalsScrollStatus { return v.ScrollStatus }).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (o TemplateTotalOptionsOutput) TotalAggregationOptions() TemplateTotalAggregationOptionArrayOutput {
	return o.ApplyT(func(v TemplateTotalOptions) []TemplateTotalAggregationOption { return v.TotalAggregationOptions }).(TemplateTotalAggregationOptionArrayOutput)
}

func (o TemplateTotalOptionsOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v TemplateTotalOptions) *TemplateTableCellStyle { return v.TotalCellStyle }).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTotalOptionsOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTotalOptions) *TemplateVisibility { return v.TotalsVisibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTotalOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTotalOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTotalOptions)(nil)).Elem()
}

func (o TemplateTotalOptionsPtrOutput) ToTemplateTotalOptionsPtrOutput() TemplateTotalOptionsPtrOutput {
	return o
}

func (o TemplateTotalOptionsPtrOutput) ToTemplateTotalOptionsPtrOutputWithContext(ctx context.Context) TemplateTotalOptionsPtrOutput {
	return o
}

func (o TemplateTotalOptionsPtrOutput) Elem() TemplateTotalOptionsOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) TemplateTotalOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTotalOptions
		return ret
	}).(TemplateTotalOptionsOutput)
}

func (o TemplateTotalOptionsPtrOutput) CustomLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomLabel
	}).(pulumi.StringPtrOutput)
}

func (o TemplateTotalOptionsPtrOutput) Placement() TemplateTableTotalsPlacementPtrOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) *TemplateTableTotalsPlacement {
		if v == nil {
			return nil
		}
		return v.Placement
	}).(TemplateTableTotalsPlacementPtrOutput)
}

func (o TemplateTotalOptionsPtrOutput) ScrollStatus() TemplateTableTotalsScrollStatusPtrOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) *TemplateTableTotalsScrollStatus {
		if v == nil {
			return nil
		}
		return v.ScrollStatus
	}).(TemplateTableTotalsScrollStatusPtrOutput)
}

func (o TemplateTotalOptionsPtrOutput) TotalAggregationOptions() TemplateTotalAggregationOptionArrayOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) []TemplateTotalAggregationOption {
		if v == nil {
			return nil
		}
		return v.TotalAggregationOptions
	}).(TemplateTotalAggregationOptionArrayOutput)
}

func (o TemplateTotalOptionsPtrOutput) TotalCellStyle() TemplateTableCellStylePtrOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) *TemplateTableCellStyle {
		if v == nil {
			return nil
		}
		return v.TotalCellStyle
	}).(TemplateTableCellStylePtrOutput)
}

func (o TemplateTotalOptionsPtrOutput) TotalsVisibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTotalOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.TotalsVisibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateTreeMapAggregatedFieldWells struct {
	Colors []TemplateMeasureField   `pulumi:"colors"`
	Groups []TemplateDimensionField `pulumi:"groups"`
	Sizes  []TemplateMeasureField   `pulumi:"sizes"`
}

// TemplateTreeMapAggregatedFieldWellsInput is an input type that accepts TemplateTreeMapAggregatedFieldWellsArgs and TemplateTreeMapAggregatedFieldWellsOutput values.
// You can construct a concrete instance of `TemplateTreeMapAggregatedFieldWellsInput` via:
//
//	TemplateTreeMapAggregatedFieldWellsArgs{...}
type TemplateTreeMapAggregatedFieldWellsInput interface {
	pulumi.Input

	ToTemplateTreeMapAggregatedFieldWellsOutput() TemplateTreeMapAggregatedFieldWellsOutput
	ToTemplateTreeMapAggregatedFieldWellsOutputWithContext(context.Context) TemplateTreeMapAggregatedFieldWellsOutput
}

type TemplateTreeMapAggregatedFieldWellsArgs struct {
	Colors TemplateMeasureFieldArrayInput   `pulumi:"colors"`
	Groups TemplateDimensionFieldArrayInput `pulumi:"groups"`
	Sizes  TemplateMeasureFieldArrayInput   `pulumi:"sizes"`
}

func (TemplateTreeMapAggregatedFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i TemplateTreeMapAggregatedFieldWellsArgs) ToTemplateTreeMapAggregatedFieldWellsOutput() TemplateTreeMapAggregatedFieldWellsOutput {
	return i.ToTemplateTreeMapAggregatedFieldWellsOutputWithContext(context.Background())
}

func (i TemplateTreeMapAggregatedFieldWellsArgs) ToTemplateTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapAggregatedFieldWellsOutput)
}

func (i TemplateTreeMapAggregatedFieldWellsArgs) ToTemplateTreeMapAggregatedFieldWellsPtrOutput() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateTreeMapAggregatedFieldWellsArgs) ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapAggregatedFieldWellsOutput).ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx)
}

// TemplateTreeMapAggregatedFieldWellsPtrInput is an input type that accepts TemplateTreeMapAggregatedFieldWellsArgs, TemplateTreeMapAggregatedFieldWellsPtr and TemplateTreeMapAggregatedFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateTreeMapAggregatedFieldWellsPtrInput` via:
//
//	        TemplateTreeMapAggregatedFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateTreeMapAggregatedFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateTreeMapAggregatedFieldWellsPtrOutput() TemplateTreeMapAggregatedFieldWellsPtrOutput
	ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Context) TemplateTreeMapAggregatedFieldWellsPtrOutput
}

type templateTreeMapAggregatedFieldWellsPtrType TemplateTreeMapAggregatedFieldWellsArgs

func TemplateTreeMapAggregatedFieldWellsPtr(v *TemplateTreeMapAggregatedFieldWellsArgs) TemplateTreeMapAggregatedFieldWellsPtrInput {
	return (*templateTreeMapAggregatedFieldWellsPtrType)(v)
}

func (*templateTreeMapAggregatedFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (i *templateTreeMapAggregatedFieldWellsPtrType) ToTemplateTreeMapAggregatedFieldWellsPtrOutput() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return i.ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateTreeMapAggregatedFieldWellsPtrType) ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapAggregatedFieldWellsPtrOutput)
}

type TemplateTreeMapAggregatedFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapAggregatedFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) ToTemplateTreeMapAggregatedFieldWellsOutput() TemplateTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) ToTemplateTreeMapAggregatedFieldWellsOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsOutput {
	return o
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) ToTemplateTreeMapAggregatedFieldWellsPtrOutput() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o.ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTreeMapAggregatedFieldWells) *TemplateTreeMapAggregatedFieldWells {
		return &v
	}).(TemplateTreeMapAggregatedFieldWellsPtrOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) Colors() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapAggregatedFieldWells) []TemplateMeasureField { return v.Colors }).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) Groups() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapAggregatedFieldWells) []TemplateDimensionField { return v.Groups }).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsOutput) Sizes() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapAggregatedFieldWells) []TemplateMeasureField { return v.Sizes }).(TemplateMeasureFieldArrayOutput)
}

type TemplateTreeMapAggregatedFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapAggregatedFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapAggregatedFieldWells)(nil)).Elem()
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) ToTemplateTreeMapAggregatedFieldWellsPtrOutput() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) ToTemplateTreeMapAggregatedFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) Elem() TemplateTreeMapAggregatedFieldWellsOutput {
	return o.ApplyT(func(v *TemplateTreeMapAggregatedFieldWells) TemplateTreeMapAggregatedFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateTreeMapAggregatedFieldWells
		return ret
	}).(TemplateTreeMapAggregatedFieldWellsOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) Colors() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TemplateMeasureFieldArrayOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) Groups() TemplateDimensionFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapAggregatedFieldWells) []TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(TemplateDimensionFieldArrayOutput)
}

func (o TemplateTreeMapAggregatedFieldWellsPtrOutput) Sizes() TemplateMeasureFieldArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapAggregatedFieldWells) []TemplateMeasureField {
		if v == nil {
			return nil
		}
		return v.Sizes
	}).(TemplateMeasureFieldArrayOutput)
}

type TemplateTreeMapConfiguration struct {
	ColorLabelOptions *TemplateChartAxisLabelOptions    `pulumi:"colorLabelOptions"`
	ColorScale        *TemplateColorScale               `pulumi:"colorScale"`
	DataLabels        *TemplateDataLabelOptions         `pulumi:"dataLabels"`
	FieldWells        *TemplateTreeMapFieldWells        `pulumi:"fieldWells"`
	GroupLabelOptions *TemplateChartAxisLabelOptions    `pulumi:"groupLabelOptions"`
	Legend            *TemplateLegendOptions            `pulumi:"legend"`
	SizeLabelOptions  *TemplateChartAxisLabelOptions    `pulumi:"sizeLabelOptions"`
	SortConfiguration *TemplateTreeMapSortConfiguration `pulumi:"sortConfiguration"`
	Tooltip           *TemplateTooltipOptions           `pulumi:"tooltip"`
}

// TemplateTreeMapConfigurationInput is an input type that accepts TemplateTreeMapConfigurationArgs and TemplateTreeMapConfigurationOutput values.
// You can construct a concrete instance of `TemplateTreeMapConfigurationInput` via:
//
//	TemplateTreeMapConfigurationArgs{...}
type TemplateTreeMapConfigurationInput interface {
	pulumi.Input

	ToTemplateTreeMapConfigurationOutput() TemplateTreeMapConfigurationOutput
	ToTemplateTreeMapConfigurationOutputWithContext(context.Context) TemplateTreeMapConfigurationOutput
}

type TemplateTreeMapConfigurationArgs struct {
	ColorLabelOptions TemplateChartAxisLabelOptionsPtrInput    `pulumi:"colorLabelOptions"`
	ColorScale        TemplateColorScalePtrInput               `pulumi:"colorScale"`
	DataLabels        TemplateDataLabelOptionsPtrInput         `pulumi:"dataLabels"`
	FieldWells        TemplateTreeMapFieldWellsPtrInput        `pulumi:"fieldWells"`
	GroupLabelOptions TemplateChartAxisLabelOptionsPtrInput    `pulumi:"groupLabelOptions"`
	Legend            TemplateLegendOptionsPtrInput            `pulumi:"legend"`
	SizeLabelOptions  TemplateChartAxisLabelOptionsPtrInput    `pulumi:"sizeLabelOptions"`
	SortConfiguration TemplateTreeMapSortConfigurationPtrInput `pulumi:"sortConfiguration"`
	Tooltip           TemplateTooltipOptionsPtrInput           `pulumi:"tooltip"`
}

func (TemplateTreeMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapConfiguration)(nil)).Elem()
}

func (i TemplateTreeMapConfigurationArgs) ToTemplateTreeMapConfigurationOutput() TemplateTreeMapConfigurationOutput {
	return i.ToTemplateTreeMapConfigurationOutputWithContext(context.Background())
}

func (i TemplateTreeMapConfigurationArgs) ToTemplateTreeMapConfigurationOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapConfigurationOutput)
}

func (i TemplateTreeMapConfigurationArgs) ToTemplateTreeMapConfigurationPtrOutput() TemplateTreeMapConfigurationPtrOutput {
	return i.ToTemplateTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTreeMapConfigurationArgs) ToTemplateTreeMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapConfigurationOutput).ToTemplateTreeMapConfigurationPtrOutputWithContext(ctx)
}

// TemplateTreeMapConfigurationPtrInput is an input type that accepts TemplateTreeMapConfigurationArgs, TemplateTreeMapConfigurationPtr and TemplateTreeMapConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTreeMapConfigurationPtrInput` via:
//
//	        TemplateTreeMapConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTreeMapConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTreeMapConfigurationPtrOutput() TemplateTreeMapConfigurationPtrOutput
	ToTemplateTreeMapConfigurationPtrOutputWithContext(context.Context) TemplateTreeMapConfigurationPtrOutput
}

type templateTreeMapConfigurationPtrType TemplateTreeMapConfigurationArgs

func TemplateTreeMapConfigurationPtr(v *TemplateTreeMapConfigurationArgs) TemplateTreeMapConfigurationPtrInput {
	return (*templateTreeMapConfigurationPtrType)(v)
}

func (*templateTreeMapConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapConfiguration)(nil)).Elem()
}

func (i *templateTreeMapConfigurationPtrType) ToTemplateTreeMapConfigurationPtrOutput() TemplateTreeMapConfigurationPtrOutput {
	return i.ToTemplateTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTreeMapConfigurationPtrType) ToTemplateTreeMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapConfigurationPtrOutput)
}

type TemplateTreeMapConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapConfiguration)(nil)).Elem()
}

func (o TemplateTreeMapConfigurationOutput) ToTemplateTreeMapConfigurationOutput() TemplateTreeMapConfigurationOutput {
	return o
}

func (o TemplateTreeMapConfigurationOutput) ToTemplateTreeMapConfigurationOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationOutput {
	return o
}

func (o TemplateTreeMapConfigurationOutput) ToTemplateTreeMapConfigurationPtrOutput() TemplateTreeMapConfigurationPtrOutput {
	return o.ToTemplateTreeMapConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTreeMapConfigurationOutput) ToTemplateTreeMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTreeMapConfiguration) *TemplateTreeMapConfiguration {
		return &v
	}).(TemplateTreeMapConfigurationPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions { return v.ColorLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) ColorScale() TemplateColorScalePtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateColorScale { return v.ColorScale }).(TemplateColorScalePtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateDataLabelOptions { return v.DataLabels }).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) FieldWells() TemplateTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateTreeMapFieldWells { return v.FieldWells }).(TemplateTreeMapFieldWellsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) GroupLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions { return v.GroupLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateLegendOptions { return v.Legend }).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) SizeLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions { return v.SizeLabelOptions }).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) SortConfiguration() TemplateTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateTreeMapSortConfiguration { return v.SortConfiguration }).(TemplateTreeMapSortConfigurationPtrOutput)
}

func (o TemplateTreeMapConfigurationOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapConfiguration) *TemplateTooltipOptions { return v.Tooltip }).(TemplateTooltipOptionsPtrOutput)
}

type TemplateTreeMapConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapConfiguration)(nil)).Elem()
}

func (o TemplateTreeMapConfigurationPtrOutput) ToTemplateTreeMapConfigurationPtrOutput() TemplateTreeMapConfigurationPtrOutput {
	return o
}

func (o TemplateTreeMapConfigurationPtrOutput) ToTemplateTreeMapConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapConfigurationPtrOutput {
	return o
}

func (o TemplateTreeMapConfigurationPtrOutput) Elem() TemplateTreeMapConfigurationOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) TemplateTreeMapConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTreeMapConfiguration
		return ret
	}).(TemplateTreeMapConfigurationOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) ColorLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.ColorLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) ColorScale() TemplateColorScalePtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateColorScale {
		if v == nil {
			return nil
		}
		return v.ColorScale
	}).(TemplateColorScalePtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) DataLabels() TemplateDataLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateDataLabelOptions {
		if v == nil {
			return nil
		}
		return v.DataLabels
	}).(TemplateDataLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) FieldWells() TemplateTreeMapFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateTreeMapFieldWells {
		if v == nil {
			return nil
		}
		return v.FieldWells
	}).(TemplateTreeMapFieldWellsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) GroupLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.GroupLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) Legend() TemplateLegendOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateLegendOptions {
		if v == nil {
			return nil
		}
		return v.Legend
	}).(TemplateLegendOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) SizeLabelOptions() TemplateChartAxisLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateChartAxisLabelOptions {
		if v == nil {
			return nil
		}
		return v.SizeLabelOptions
	}).(TemplateChartAxisLabelOptionsPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) SortConfiguration() TemplateTreeMapSortConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateTreeMapSortConfiguration {
		if v == nil {
			return nil
		}
		return v.SortConfiguration
	}).(TemplateTreeMapSortConfigurationPtrOutput)
}

func (o TemplateTreeMapConfigurationPtrOutput) Tooltip() TemplateTooltipOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapConfiguration) *TemplateTooltipOptions {
		if v == nil {
			return nil
		}
		return v.Tooltip
	}).(TemplateTooltipOptionsPtrOutput)
}

type TemplateTreeMapFieldWells struct {
	TreeMapAggregatedFieldWells *TemplateTreeMapAggregatedFieldWells `pulumi:"treeMapAggregatedFieldWells"`
}

// TemplateTreeMapFieldWellsInput is an input type that accepts TemplateTreeMapFieldWellsArgs and TemplateTreeMapFieldWellsOutput values.
// You can construct a concrete instance of `TemplateTreeMapFieldWellsInput` via:
//
//	TemplateTreeMapFieldWellsArgs{...}
type TemplateTreeMapFieldWellsInput interface {
	pulumi.Input

	ToTemplateTreeMapFieldWellsOutput() TemplateTreeMapFieldWellsOutput
	ToTemplateTreeMapFieldWellsOutputWithContext(context.Context) TemplateTreeMapFieldWellsOutput
}

type TemplateTreeMapFieldWellsArgs struct {
	TreeMapAggregatedFieldWells TemplateTreeMapAggregatedFieldWellsPtrInput `pulumi:"treeMapAggregatedFieldWells"`
}

func (TemplateTreeMapFieldWellsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapFieldWells)(nil)).Elem()
}

func (i TemplateTreeMapFieldWellsArgs) ToTemplateTreeMapFieldWellsOutput() TemplateTreeMapFieldWellsOutput {
	return i.ToTemplateTreeMapFieldWellsOutputWithContext(context.Background())
}

func (i TemplateTreeMapFieldWellsArgs) ToTemplateTreeMapFieldWellsOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapFieldWellsOutput)
}

func (i TemplateTreeMapFieldWellsArgs) ToTemplateTreeMapFieldWellsPtrOutput() TemplateTreeMapFieldWellsPtrOutput {
	return i.ToTemplateTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i TemplateTreeMapFieldWellsArgs) ToTemplateTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapFieldWellsOutput).ToTemplateTreeMapFieldWellsPtrOutputWithContext(ctx)
}

// TemplateTreeMapFieldWellsPtrInput is an input type that accepts TemplateTreeMapFieldWellsArgs, TemplateTreeMapFieldWellsPtr and TemplateTreeMapFieldWellsPtrOutput values.
// You can construct a concrete instance of `TemplateTreeMapFieldWellsPtrInput` via:
//
//	        TemplateTreeMapFieldWellsArgs{...}
//
//	or:
//
//	        nil
type TemplateTreeMapFieldWellsPtrInput interface {
	pulumi.Input

	ToTemplateTreeMapFieldWellsPtrOutput() TemplateTreeMapFieldWellsPtrOutput
	ToTemplateTreeMapFieldWellsPtrOutputWithContext(context.Context) TemplateTreeMapFieldWellsPtrOutput
}

type templateTreeMapFieldWellsPtrType TemplateTreeMapFieldWellsArgs

func TemplateTreeMapFieldWellsPtr(v *TemplateTreeMapFieldWellsArgs) TemplateTreeMapFieldWellsPtrInput {
	return (*templateTreeMapFieldWellsPtrType)(v)
}

func (*templateTreeMapFieldWellsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapFieldWells)(nil)).Elem()
}

func (i *templateTreeMapFieldWellsPtrType) ToTemplateTreeMapFieldWellsPtrOutput() TemplateTreeMapFieldWellsPtrOutput {
	return i.ToTemplateTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (i *templateTreeMapFieldWellsPtrType) ToTemplateTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapFieldWellsPtrOutput)
}

type TemplateTreeMapFieldWellsOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapFieldWellsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapFieldWells)(nil)).Elem()
}

func (o TemplateTreeMapFieldWellsOutput) ToTemplateTreeMapFieldWellsOutput() TemplateTreeMapFieldWellsOutput {
	return o
}

func (o TemplateTreeMapFieldWellsOutput) ToTemplateTreeMapFieldWellsOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsOutput {
	return o
}

func (o TemplateTreeMapFieldWellsOutput) ToTemplateTreeMapFieldWellsPtrOutput() TemplateTreeMapFieldWellsPtrOutput {
	return o.ToTemplateTreeMapFieldWellsPtrOutputWithContext(context.Background())
}

func (o TemplateTreeMapFieldWellsOutput) ToTemplateTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTreeMapFieldWells) *TemplateTreeMapFieldWells {
		return &v
	}).(TemplateTreeMapFieldWellsPtrOutput)
}

func (o TemplateTreeMapFieldWellsOutput) TreeMapAggregatedFieldWells() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapFieldWells) *TemplateTreeMapAggregatedFieldWells {
		return v.TreeMapAggregatedFieldWells
	}).(TemplateTreeMapAggregatedFieldWellsPtrOutput)
}

type TemplateTreeMapFieldWellsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapFieldWellsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapFieldWells)(nil)).Elem()
}

func (o TemplateTreeMapFieldWellsPtrOutput) ToTemplateTreeMapFieldWellsPtrOutput() TemplateTreeMapFieldWellsPtrOutput {
	return o
}

func (o TemplateTreeMapFieldWellsPtrOutput) ToTemplateTreeMapFieldWellsPtrOutputWithContext(ctx context.Context) TemplateTreeMapFieldWellsPtrOutput {
	return o
}

func (o TemplateTreeMapFieldWellsPtrOutput) Elem() TemplateTreeMapFieldWellsOutput {
	return o.ApplyT(func(v *TemplateTreeMapFieldWells) TemplateTreeMapFieldWells {
		if v != nil {
			return *v
		}
		var ret TemplateTreeMapFieldWells
		return ret
	}).(TemplateTreeMapFieldWellsOutput)
}

func (o TemplateTreeMapFieldWellsPtrOutput) TreeMapAggregatedFieldWells() TemplateTreeMapAggregatedFieldWellsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapFieldWells) *TemplateTreeMapAggregatedFieldWells {
		if v == nil {
			return nil
		}
		return v.TreeMapAggregatedFieldWells
	}).(TemplateTreeMapAggregatedFieldWellsPtrOutput)
}

type TemplateTreeMapSortConfiguration struct {
	TreeMapGroupItemsLimitConfiguration *TemplateItemsLimitConfiguration `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         []TemplateFieldSortOptions       `pulumi:"treeMapSort"`
}

// TemplateTreeMapSortConfigurationInput is an input type that accepts TemplateTreeMapSortConfigurationArgs and TemplateTreeMapSortConfigurationOutput values.
// You can construct a concrete instance of `TemplateTreeMapSortConfigurationInput` via:
//
//	TemplateTreeMapSortConfigurationArgs{...}
type TemplateTreeMapSortConfigurationInput interface {
	pulumi.Input

	ToTemplateTreeMapSortConfigurationOutput() TemplateTreeMapSortConfigurationOutput
	ToTemplateTreeMapSortConfigurationOutputWithContext(context.Context) TemplateTreeMapSortConfigurationOutput
}

type TemplateTreeMapSortConfigurationArgs struct {
	TreeMapGroupItemsLimitConfiguration TemplateItemsLimitConfigurationPtrInput `pulumi:"treeMapGroupItemsLimitConfiguration"`
	TreeMapSort                         TemplateFieldSortOptionsArrayInput      `pulumi:"treeMapSort"`
}

func (TemplateTreeMapSortConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapSortConfiguration)(nil)).Elem()
}

func (i TemplateTreeMapSortConfigurationArgs) ToTemplateTreeMapSortConfigurationOutput() TemplateTreeMapSortConfigurationOutput {
	return i.ToTemplateTreeMapSortConfigurationOutputWithContext(context.Background())
}

func (i TemplateTreeMapSortConfigurationArgs) ToTemplateTreeMapSortConfigurationOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapSortConfigurationOutput)
}

func (i TemplateTreeMapSortConfigurationArgs) ToTemplateTreeMapSortConfigurationPtrOutput() TemplateTreeMapSortConfigurationPtrOutput {
	return i.ToTemplateTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i TemplateTreeMapSortConfigurationArgs) ToTemplateTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapSortConfigurationOutput).ToTemplateTreeMapSortConfigurationPtrOutputWithContext(ctx)
}

// TemplateTreeMapSortConfigurationPtrInput is an input type that accepts TemplateTreeMapSortConfigurationArgs, TemplateTreeMapSortConfigurationPtr and TemplateTreeMapSortConfigurationPtrOutput values.
// You can construct a concrete instance of `TemplateTreeMapSortConfigurationPtrInput` via:
//
//	        TemplateTreeMapSortConfigurationArgs{...}
//
//	or:
//
//	        nil
type TemplateTreeMapSortConfigurationPtrInput interface {
	pulumi.Input

	ToTemplateTreeMapSortConfigurationPtrOutput() TemplateTreeMapSortConfigurationPtrOutput
	ToTemplateTreeMapSortConfigurationPtrOutputWithContext(context.Context) TemplateTreeMapSortConfigurationPtrOutput
}

type templateTreeMapSortConfigurationPtrType TemplateTreeMapSortConfigurationArgs

func TemplateTreeMapSortConfigurationPtr(v *TemplateTreeMapSortConfigurationArgs) TemplateTreeMapSortConfigurationPtrInput {
	return (*templateTreeMapSortConfigurationPtrType)(v)
}

func (*templateTreeMapSortConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapSortConfiguration)(nil)).Elem()
}

func (i *templateTreeMapSortConfigurationPtrType) ToTemplateTreeMapSortConfigurationPtrOutput() TemplateTreeMapSortConfigurationPtrOutput {
	return i.ToTemplateTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (i *templateTreeMapSortConfigurationPtrType) ToTemplateTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapSortConfigurationPtrOutput)
}

type TemplateTreeMapSortConfigurationOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapSortConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapSortConfiguration)(nil)).Elem()
}

func (o TemplateTreeMapSortConfigurationOutput) ToTemplateTreeMapSortConfigurationOutput() TemplateTreeMapSortConfigurationOutput {
	return o
}

func (o TemplateTreeMapSortConfigurationOutput) ToTemplateTreeMapSortConfigurationOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationOutput {
	return o
}

func (o TemplateTreeMapSortConfigurationOutput) ToTemplateTreeMapSortConfigurationPtrOutput() TemplateTreeMapSortConfigurationPtrOutput {
	return o.ToTemplateTreeMapSortConfigurationPtrOutputWithContext(context.Background())
}

func (o TemplateTreeMapSortConfigurationOutput) ToTemplateTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTreeMapSortConfiguration) *TemplateTreeMapSortConfiguration {
		return &v
	}).(TemplateTreeMapSortConfigurationPtrOutput)
}

func (o TemplateTreeMapSortConfigurationOutput) TreeMapGroupItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapSortConfiguration) *TemplateItemsLimitConfiguration {
		return v.TreeMapGroupItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateTreeMapSortConfigurationOutput) TreeMapSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapSortConfiguration) []TemplateFieldSortOptions { return v.TreeMapSort }).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateTreeMapSortConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapSortConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapSortConfiguration)(nil)).Elem()
}

func (o TemplateTreeMapSortConfigurationPtrOutput) ToTemplateTreeMapSortConfigurationPtrOutput() TemplateTreeMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateTreeMapSortConfigurationPtrOutput) ToTemplateTreeMapSortConfigurationPtrOutputWithContext(ctx context.Context) TemplateTreeMapSortConfigurationPtrOutput {
	return o
}

func (o TemplateTreeMapSortConfigurationPtrOutput) Elem() TemplateTreeMapSortConfigurationOutput {
	return o.ApplyT(func(v *TemplateTreeMapSortConfiguration) TemplateTreeMapSortConfiguration {
		if v != nil {
			return *v
		}
		var ret TemplateTreeMapSortConfiguration
		return ret
	}).(TemplateTreeMapSortConfigurationOutput)
}

func (o TemplateTreeMapSortConfigurationPtrOutput) TreeMapGroupItemsLimitConfiguration() TemplateItemsLimitConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapSortConfiguration) *TemplateItemsLimitConfiguration {
		if v == nil {
			return nil
		}
		return v.TreeMapGroupItemsLimitConfiguration
	}).(TemplateItemsLimitConfigurationPtrOutput)
}

func (o TemplateTreeMapSortConfigurationPtrOutput) TreeMapSort() TemplateFieldSortOptionsArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapSortConfiguration) []TemplateFieldSortOptions {
		if v == nil {
			return nil
		}
		return v.TreeMapSort
	}).(TemplateFieldSortOptionsArrayOutput)
}

type TemplateTreeMapVisual struct {
	Actions            []TemplateVisualCustomAction        `pulumi:"actions"`
	ChartConfiguration *TemplateTreeMapConfiguration       `pulumi:"chartConfiguration"`
	ColumnHierarchies  []TemplateColumnHierarchy           `pulumi:"columnHierarchies"`
	Subtitle           *TemplateVisualSubtitleLabelOptions `pulumi:"subtitle"`
	Title              *TemplateVisualTitleLabelOptions    `pulumi:"title"`
	VisualId           string                              `pulumi:"visualId"`
}

// TemplateTreeMapVisualInput is an input type that accepts TemplateTreeMapVisualArgs and TemplateTreeMapVisualOutput values.
// You can construct a concrete instance of `TemplateTreeMapVisualInput` via:
//
//	TemplateTreeMapVisualArgs{...}
type TemplateTreeMapVisualInput interface {
	pulumi.Input

	ToTemplateTreeMapVisualOutput() TemplateTreeMapVisualOutput
	ToTemplateTreeMapVisualOutputWithContext(context.Context) TemplateTreeMapVisualOutput
}

type TemplateTreeMapVisualArgs struct {
	Actions            TemplateVisualCustomActionArrayInput       `pulumi:"actions"`
	ChartConfiguration TemplateTreeMapConfigurationPtrInput       `pulumi:"chartConfiguration"`
	ColumnHierarchies  TemplateColumnHierarchyArrayInput          `pulumi:"columnHierarchies"`
	Subtitle           TemplateVisualSubtitleLabelOptionsPtrInput `pulumi:"subtitle"`
	Title              TemplateVisualTitleLabelOptionsPtrInput    `pulumi:"title"`
	VisualId           pulumi.StringInput                         `pulumi:"visualId"`
}

func (TemplateTreeMapVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapVisual)(nil)).Elem()
}

func (i TemplateTreeMapVisualArgs) ToTemplateTreeMapVisualOutput() TemplateTreeMapVisualOutput {
	return i.ToTemplateTreeMapVisualOutputWithContext(context.Background())
}

func (i TemplateTreeMapVisualArgs) ToTemplateTreeMapVisualOutputWithContext(ctx context.Context) TemplateTreeMapVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapVisualOutput)
}

func (i TemplateTreeMapVisualArgs) ToTemplateTreeMapVisualPtrOutput() TemplateTreeMapVisualPtrOutput {
	return i.ToTemplateTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i TemplateTreeMapVisualArgs) ToTemplateTreeMapVisualPtrOutputWithContext(ctx context.Context) TemplateTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapVisualOutput).ToTemplateTreeMapVisualPtrOutputWithContext(ctx)
}

// TemplateTreeMapVisualPtrInput is an input type that accepts TemplateTreeMapVisualArgs, TemplateTreeMapVisualPtr and TemplateTreeMapVisualPtrOutput values.
// You can construct a concrete instance of `TemplateTreeMapVisualPtrInput` via:
//
//	        TemplateTreeMapVisualArgs{...}
//
//	or:
//
//	        nil
type TemplateTreeMapVisualPtrInput interface {
	pulumi.Input

	ToTemplateTreeMapVisualPtrOutput() TemplateTreeMapVisualPtrOutput
	ToTemplateTreeMapVisualPtrOutputWithContext(context.Context) TemplateTreeMapVisualPtrOutput
}

type templateTreeMapVisualPtrType TemplateTreeMapVisualArgs

func TemplateTreeMapVisualPtr(v *TemplateTreeMapVisualArgs) TemplateTreeMapVisualPtrInput {
	return (*templateTreeMapVisualPtrType)(v)
}

func (*templateTreeMapVisualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapVisual)(nil)).Elem()
}

func (i *templateTreeMapVisualPtrType) ToTemplateTreeMapVisualPtrOutput() TemplateTreeMapVisualPtrOutput {
	return i.ToTemplateTreeMapVisualPtrOutputWithContext(context.Background())
}

func (i *templateTreeMapVisualPtrType) ToTemplateTreeMapVisualPtrOutputWithContext(ctx context.Context) TemplateTreeMapVisualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTreeMapVisualPtrOutput)
}

type TemplateTreeMapVisualOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTreeMapVisual)(nil)).Elem()
}

func (o TemplateTreeMapVisualOutput) ToTemplateTreeMapVisualOutput() TemplateTreeMapVisualOutput {
	return o
}

func (o TemplateTreeMapVisualOutput) ToTemplateTreeMapVisualOutputWithContext(ctx context.Context) TemplateTreeMapVisualOutput {
	return o
}

func (o TemplateTreeMapVisualOutput) ToTemplateTreeMapVisualPtrOutput() TemplateTreeMapVisualPtrOutput {
	return o.ToTemplateTreeMapVisualPtrOutputWithContext(context.Background())
}

func (o TemplateTreeMapVisualOutput) ToTemplateTreeMapVisualPtrOutputWithContext(ctx context.Context) TemplateTreeMapVisualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTreeMapVisual) *TemplateTreeMapVisual {
		return &v
	}).(TemplateTreeMapVisualPtrOutput)
}

func (o TemplateTreeMapVisualOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) []TemplateVisualCustomAction { return v.Actions }).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateTreeMapVisualOutput) ChartConfiguration() TemplateTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) *TemplateTreeMapConfiguration { return v.ChartConfiguration }).(TemplateTreeMapConfigurationPtrOutput)
}

func (o TemplateTreeMapVisualOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) []TemplateColumnHierarchy { return v.ColumnHierarchies }).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateTreeMapVisualOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) *TemplateVisualSubtitleLabelOptions { return v.Subtitle }).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateTreeMapVisualOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) *TemplateVisualTitleLabelOptions { return v.Title }).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateTreeMapVisualOutput) VisualId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateTreeMapVisual) string { return v.VisualId }).(pulumi.StringOutput)
}

type TemplateTreeMapVisualPtrOutput struct{ *pulumi.OutputState }

func (TemplateTreeMapVisualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTreeMapVisual)(nil)).Elem()
}

func (o TemplateTreeMapVisualPtrOutput) ToTemplateTreeMapVisualPtrOutput() TemplateTreeMapVisualPtrOutput {
	return o
}

func (o TemplateTreeMapVisualPtrOutput) ToTemplateTreeMapVisualPtrOutputWithContext(ctx context.Context) TemplateTreeMapVisualPtrOutput {
	return o
}

func (o TemplateTreeMapVisualPtrOutput) Elem() TemplateTreeMapVisualOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) TemplateTreeMapVisual {
		if v != nil {
			return *v
		}
		var ret TemplateTreeMapVisual
		return ret
	}).(TemplateTreeMapVisualOutput)
}

func (o TemplateTreeMapVisualPtrOutput) Actions() TemplateVisualCustomActionArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) []TemplateVisualCustomAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(TemplateVisualCustomActionArrayOutput)
}

func (o TemplateTreeMapVisualPtrOutput) ChartConfiguration() TemplateTreeMapConfigurationPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) *TemplateTreeMapConfiguration {
		if v == nil {
			return nil
		}
		return v.ChartConfiguration
	}).(TemplateTreeMapConfigurationPtrOutput)
}

func (o TemplateTreeMapVisualPtrOutput) ColumnHierarchies() TemplateColumnHierarchyArrayOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) []TemplateColumnHierarchy {
		if v == nil {
			return nil
		}
		return v.ColumnHierarchies
	}).(TemplateColumnHierarchyArrayOutput)
}

func (o TemplateTreeMapVisualPtrOutput) Subtitle() TemplateVisualSubtitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) *TemplateVisualSubtitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Subtitle
	}).(TemplateVisualSubtitleLabelOptionsPtrOutput)
}

func (o TemplateTreeMapVisualPtrOutput) Title() TemplateVisualTitleLabelOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) *TemplateVisualTitleLabelOptions {
		if v == nil {
			return nil
		}
		return v.Title
	}).(TemplateVisualTitleLabelOptionsPtrOutput)
}

func (o TemplateTreeMapVisualPtrOutput) VisualId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateTreeMapVisual) *string {
		if v == nil {
			return nil
		}
		return &v.VisualId
	}).(pulumi.StringPtrOutput)
}

type TemplateTrendArrowOptions struct {
	Visibility *TemplateVisibility `pulumi:"visibility"`
}

// TemplateTrendArrowOptionsInput is an input type that accepts TemplateTrendArrowOptionsArgs and TemplateTrendArrowOptionsOutput values.
// You can construct a concrete instance of `TemplateTrendArrowOptionsInput` via:
//
//	TemplateTrendArrowOptionsArgs{...}
type TemplateTrendArrowOptionsInput interface {
	pulumi.Input

	ToTemplateTrendArrowOptionsOutput() TemplateTrendArrowOptionsOutput
	ToTemplateTrendArrowOptionsOutputWithContext(context.Context) TemplateTrendArrowOptionsOutput
}

type TemplateTrendArrowOptionsArgs struct {
	Visibility TemplateVisibilityPtrInput `pulumi:"visibility"`
}

func (TemplateTrendArrowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTrendArrowOptions)(nil)).Elem()
}

func (i TemplateTrendArrowOptionsArgs) ToTemplateTrendArrowOptionsOutput() TemplateTrendArrowOptionsOutput {
	return i.ToTemplateTrendArrowOptionsOutputWithContext(context.Background())
}

func (i TemplateTrendArrowOptionsArgs) ToTemplateTrendArrowOptionsOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTrendArrowOptionsOutput)
}

func (i TemplateTrendArrowOptionsArgs) ToTemplateTrendArrowOptionsPtrOutput() TemplateTrendArrowOptionsPtrOutput {
	return i.ToTemplateTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateTrendArrowOptionsArgs) ToTemplateTrendArrowOptionsPtrOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTrendArrowOptionsOutput).ToTemplateTrendArrowOptionsPtrOutputWithContext(ctx)
}

// TemplateTrendArrowOptionsPtrInput is an input type that accepts TemplateTrendArrowOptionsArgs, TemplateTrendArrowOptionsPtr and TemplateTrendArrowOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateTrendArrowOptionsPtrInput` via:
//
//	        TemplateTrendArrowOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateTrendArrowOptionsPtrInput interface {
	pulumi.Input

	ToTemplateTrendArrowOptionsPtrOutput() TemplateTrendArrowOptionsPtrOutput
	ToTemplateTrendArrowOptionsPtrOutputWithContext(context.Context) TemplateTrendArrowOptionsPtrOutput
}

type templateTrendArrowOptionsPtrType TemplateTrendArrowOptionsArgs

func TemplateTrendArrowOptionsPtr(v *TemplateTrendArrowOptionsArgs) TemplateTrendArrowOptionsPtrInput {
	return (*templateTrendArrowOptionsPtrType)(v)
}

func (*templateTrendArrowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTrendArrowOptions)(nil)).Elem()
}

func (i *templateTrendArrowOptionsPtrType) ToTemplateTrendArrowOptionsPtrOutput() TemplateTrendArrowOptionsPtrOutput {
	return i.ToTemplateTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (i *templateTrendArrowOptionsPtrType) ToTemplateTrendArrowOptionsPtrOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTrendArrowOptionsPtrOutput)
}

type TemplateTrendArrowOptionsOutput struct{ *pulumi.OutputState }

func (TemplateTrendArrowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTrendArrowOptions)(nil)).Elem()
}

func (o TemplateTrendArrowOptionsOutput) ToTemplateTrendArrowOptionsOutput() TemplateTrendArrowOptionsOutput {
	return o
}

func (o TemplateTrendArrowOptionsOutput) ToTemplateTrendArrowOptionsOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsOutput {
	return o
}

func (o TemplateTrendArrowOptionsOutput) ToTemplateTrendArrowOptionsPtrOutput() TemplateTrendArrowOptionsPtrOutput {
	return o.ToTemplateTrendArrowOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateTrendArrowOptionsOutput) ToTemplateTrendArrowOptionsPtrOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTrendArrowOptions) *TemplateTrendArrowOptions {
		return &v
	}).(TemplateTrendArrowOptionsPtrOutput)
}

func (o TemplateTrendArrowOptionsOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v TemplateTrendArrowOptions) *TemplateVisibility { return v.Visibility }).(TemplateVisibilityPtrOutput)
}

type TemplateTrendArrowOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTrendArrowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTrendArrowOptions)(nil)).Elem()
}

func (o TemplateTrendArrowOptionsPtrOutput) ToTemplateTrendArrowOptionsPtrOutput() TemplateTrendArrowOptionsPtrOutput {
	return o
}

func (o TemplateTrendArrowOptionsPtrOutput) ToTemplateTrendArrowOptionsPtrOutputWithContext(ctx context.Context) TemplateTrendArrowOptionsPtrOutput {
	return o
}

func (o TemplateTrendArrowOptionsPtrOutput) Elem() TemplateTrendArrowOptionsOutput {
	return o.ApplyT(func(v *TemplateTrendArrowOptions) TemplateTrendArrowOptions {
		if v != nil {
			return *v
		}
		var ret TemplateTrendArrowOptions
		return ret
	}).(TemplateTrendArrowOptionsOutput)
}

func (o TemplateTrendArrowOptionsPtrOutput) Visibility() TemplateVisibilityPtrOutput {
	return o.ApplyT(func(v *TemplateTrendArrowOptions) *TemplateVisibility {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(TemplateVisibilityPtrOutput)
}

type TemplateUnaggregatedField struct {
	Column              TemplateColumnIdentifier     `pulumi:"column"`
	FieldId             string                       `pulumi:"fieldId"`
	FormatConfiguration *TemplateFormatConfiguration `pulumi:"formatConfiguration"`
}

// TemplateUnaggregatedFieldInput is an input type that accepts TemplateUnaggregatedFieldArgs and TemplateUnaggregatedFieldOutput values.
// You can construct a concrete instance of `TemplateUnaggregatedFieldInput` via:
//
//	TemplateUnaggregatedFieldArgs{...}
type TemplateUnaggregatedFieldInput interface {
	pulumi.Input

	ToTemplateUnaggregatedFieldOutput() TemplateUnaggregatedFieldOutput
	ToTemplateUnaggregatedFieldOutputWithContext(context.Context) TemplateUnaggregatedFieldOutput
}

type TemplateUnaggregatedFieldArgs struct {
	Column              TemplateColumnIdentifierInput       `pulumi:"column"`
	FieldId             pulumi.StringInput                  `pulumi:"fieldId"`
	FormatConfiguration TemplateFormatConfigurationPtrInput `pulumi:"formatConfiguration"`
}

func (TemplateUnaggregatedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUnaggregatedField)(nil)).Elem()
}

func (i TemplateUnaggregatedFieldArgs) ToTemplateUnaggregatedFieldOutput() TemplateUnaggregatedFieldOutput {
	return i.ToTemplateUnaggregatedFieldOutputWithContext(context.Background())
}

func (i TemplateUnaggregatedFieldArgs) ToTemplateUnaggregatedFieldOutputWithContext(ctx context.Context) TemplateUnaggregatedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateUnaggregatedFieldOutput)
}

// TemplateUnaggregatedFieldArrayInput is an input type that accepts TemplateUnaggregatedFieldArray and TemplateUnaggregatedFieldArrayOutput values.
// You can construct a concrete instance of `TemplateUnaggregatedFieldArrayInput` via:
//
//	TemplateUnaggregatedFieldArray{ TemplateUnaggregatedFieldArgs{...} }
type TemplateUnaggregatedFieldArrayInput interface {
	pulumi.Input

	ToTemplateUnaggregatedFieldArrayOutput() TemplateUnaggregatedFieldArrayOutput
	ToTemplateUnaggregatedFieldArrayOutputWithContext(context.Context) TemplateUnaggregatedFieldArrayOutput
}

type TemplateUnaggregatedFieldArray []TemplateUnaggregatedFieldInput

func (TemplateUnaggregatedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateUnaggregatedField)(nil)).Elem()
}

func (i TemplateUnaggregatedFieldArray) ToTemplateUnaggregatedFieldArrayOutput() TemplateUnaggregatedFieldArrayOutput {
	return i.ToTemplateUnaggregatedFieldArrayOutputWithContext(context.Background())
}

func (i TemplateUnaggregatedFieldArray) ToTemplateUnaggregatedFieldArrayOutputWithContext(ctx context.Context) TemplateUnaggregatedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateUnaggregatedFieldArrayOutput)
}

type TemplateUnaggregatedFieldOutput struct{ *pulumi.OutputState }

func (TemplateUnaggregatedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUnaggregatedField)(nil)).Elem()
}

func (o TemplateUnaggregatedFieldOutput) ToTemplateUnaggregatedFieldOutput() TemplateUnaggregatedFieldOutput {
	return o
}

func (o TemplateUnaggregatedFieldOutput) ToTemplateUnaggregatedFieldOutputWithContext(ctx context.Context) TemplateUnaggregatedFieldOutput {
	return o
}

func (o TemplateUnaggregatedFieldOutput) Column() TemplateColumnIdentifierOutput {
	return o.ApplyT(func(v TemplateUnaggregatedField) TemplateColumnIdentifier { return v.Column }).(TemplateColumnIdentifierOutput)
}

func (o TemplateUnaggregatedFieldOutput) FieldId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateUnaggregatedField) string { return v.FieldId }).(pulumi.StringOutput)
}

func (o TemplateUnaggregatedFieldOutput) FormatConfiguration() TemplateFormatConfigurationPtrOutput {
	return o.ApplyT(func(v TemplateUnaggregatedField) *TemplateFormatConfiguration { return v.FormatConfiguration }).(TemplateFormatConfigurationPtrOutput)
}

type TemplateUnaggregatedFieldArrayOutput struct{ *pulumi.OutputState }

func (TemplateUnaggregatedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateUnaggregatedField)(nil)).Elem()
}

func (o TemplateUnaggregatedFieldArrayOutput) ToTemplateUnaggregatedFieldArrayOutput() TemplateUnaggregatedFieldArrayOutput {
	return o
}

func (o TemplateUnaggregatedFieldArrayOutput) ToTemplateUnaggregatedFieldArrayOutputWithContext(ctx context.Context) TemplateUnaggregatedFieldArrayOutput {
	return o
}

func (o TemplateUnaggregatedFieldArrayOutput) Index(i pulumi.IntInput) TemplateUnaggregatedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateUnaggregatedField {
		return vs[0].([]TemplateUnaggregatedField)[vs[1].(int)]
	}).(TemplateUnaggregatedFieldOutput)
}

type TemplateUniqueValuesComputation struct {
	Category      *TemplateDimensionField `pulumi:"category"`
	ComputationId string                  `pulumi:"computationId"`
	Name          *string                 `pulumi:"name"`
}

// TemplateUniqueValuesComputationInput is an input type that accepts TemplateUniqueValuesComputationArgs and TemplateUniqueValuesComputationOutput values.
// You can construct a concrete instance of `TemplateUniqueValuesComputationInput` via:
//
//	TemplateUniqueValuesComputationArgs{...}
type TemplateUniqueValuesComputationInput interface {
	pulumi.Input

	ToTemplateUniqueValuesComputationOutput() TemplateUniqueValuesComputationOutput
	ToTemplateUniqueValuesComputationOutputWithContext(context.Context) TemplateUniqueValuesComputationOutput
}

type TemplateUniqueValuesComputationArgs struct {
	Category      TemplateDimensionFieldPtrInput `pulumi:"category"`
	ComputationId pulumi.StringInput             `pulumi:"computationId"`
	Name          pulumi.StringPtrInput          `pulumi:"name"`
}

func (TemplateUniqueValuesComputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUniqueValuesComputation)(nil)).Elem()
}

func (i TemplateUniqueValuesComputationArgs) ToTemplateUniqueValuesComputationOutput() TemplateUniqueValuesComputationOutput {
	return i.ToTemplateUniqueValuesComputationOutputWithContext(context.Background())
}

func (i TemplateUniqueValuesComputationArgs) ToTemplateUniqueValuesComputationOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateUniqueValuesComputationOutput)
}

func (i TemplateUniqueValuesComputationArgs) ToTemplateUniqueValuesComputationPtrOutput() TemplateUniqueValuesComputationPtrOutput {
	return i.ToTemplateUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i TemplateUniqueValuesComputationArgs) ToTemplateUniqueValuesComputationPtrOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateUniqueValuesComputationOutput).ToTemplateUniqueValuesComputationPtrOutputWithContext(ctx)
}

// TemplateUniqueValuesComputationPtrInput is an input type that accepts TemplateUniqueValuesComputationArgs, TemplateUniqueValuesComputationPtr and TemplateUniqueValuesComputationPtrOutput values.
// You can construct a concrete instance of `TemplateUniqueValuesComputationPtrInput` via:
//
//	        TemplateUniqueValuesComputationArgs{...}
//
//	or:
//
//	        nil
type TemplateUniqueValuesComputationPtrInput interface {
	pulumi.Input

	ToTemplateUniqueValuesComputationPtrOutput() TemplateUniqueValuesComputationPtrOutput
	ToTemplateUniqueValuesComputationPtrOutputWithContext(context.Context) TemplateUniqueValuesComputationPtrOutput
}

type templateUniqueValuesComputationPtrType TemplateUniqueValuesComputationArgs

func TemplateUniqueValuesComputationPtr(v *TemplateUniqueValuesComputationArgs) TemplateUniqueValuesComputationPtrInput {
	return (*templateUniqueValuesComputationPtrType)(v)
}

func (*templateUniqueValuesComputationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateUniqueValuesComputation)(nil)).Elem()
}

func (i *templateUniqueValuesComputationPtrType) ToTemplateUniqueValuesComputationPtrOutput() TemplateUniqueValuesComputationPtrOutput {
	return i.ToTemplateUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (i *templateUniqueValuesComputationPtrType) ToTemplateUniqueValuesComputationPtrOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateUniqueValuesComputationPtrOutput)
}

type TemplateUniqueValuesComputationOutput struct{ *pulumi.OutputState }

func (TemplateUniqueValuesComputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateUniqueValuesComputation)(nil)).Elem()
}

func (o TemplateUniqueValuesComputationOutput) ToTemplateUniqueValuesComputationOutput() TemplateUniqueValuesComputationOutput {
	return o
}

func (o TemplateUniqueValuesComputationOutput) ToTemplateUniqueValuesComputationOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationOutput {
	return o
}

func (o TemplateUniqueValuesComputationOutput) ToTemplateUniqueValuesComputationPtrOutput() TemplateUniqueValuesComputationPtrOutput {
	return o.ToTemplateUniqueValuesComputationPtrOutputWithContext(context.Background())
}

func (o TemplateUniqueValuesComputationOutput) ToTemplateUniqueValuesComputationPtrOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateUniqueValuesComputation) *TemplateUniqueValuesComputation {
		return &v
	}).(TemplateUniqueValuesComputationPtrOutput)
}

func (o TemplateUniqueValuesComputationOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v TemplateUniqueValuesComputation) *TemplateDimensionField { return v.Category }).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateUniqueValuesComputationOutput) ComputationId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateUniqueValuesComputation) string { return v.ComputationId }).(pulumi.StringOutput)
}

func (o TemplateUniqueValuesComputationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateUniqueValuesComputation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type TemplateUniqueValuesComputationPtrOutput struct{ *pulumi.OutputState }

func (TemplateUniqueValuesComputationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateUniqueValuesComputation)(nil)).Elem()
}

func (o TemplateUniqueValuesComputationPtrOutput) ToTemplateUniqueValuesComputationPtrOutput() TemplateUniqueValuesComputationPtrOutput {
	return o
}

func (o TemplateUniqueValuesComputationPtrOutput) ToTemplateUniqueValuesComputationPtrOutputWithContext(ctx context.Context) TemplateUniqueValuesComputationPtrOutput {
	return o
}

func (o TemplateUniqueValuesComputationPtrOutput) Elem() TemplateUniqueValuesComputationOutput {
	return o.ApplyT(func(v *TemplateUniqueValuesComputation) TemplateUniqueValuesComputation {
		if v != nil {
			return *v
		}
		var ret TemplateUniqueValuesComputation
		return ret
	}).(TemplateUniqueValuesComputationOutput)
}

func (o TemplateUniqueValuesComputationPtrOutput) Category() TemplateDimensionFieldPtrOutput {
	return o.ApplyT(func(v *TemplateUniqueValuesComputation) *TemplateDimensionField {
		if v == nil {
			return nil
		}
		return v.Category
	}).(TemplateDimensionFieldPtrOutput)
}

func (o TemplateUniqueValuesComputationPtrOutput) ComputationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return &v.ComputationId
	}).(pulumi.StringPtrOutput)
}

func (o TemplateUniqueValuesComputationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateUniqueValuesComputation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type TemplateValidationStrategy struct {
	Mode TemplateValidationStrategyMode `pulumi:"mode"`
}

// TemplateValidationStrategyInput is an input type that accepts TemplateValidationStrategyArgs and TemplateValidationStrategyOutput values.
// You can construct a concrete instance of `TemplateValidationStrategyInput` via:
//
//	TemplateValidationStrategyArgs{...}
type TemplateValidationStrategyInput interface {
	pulumi.Input

	ToTemplateValidationStrategyOutput() TemplateValidationStrategyOutput
	ToTemplateValidationStrategyOutputWithContext(context.Context) TemplateValidationStrategyOutput
}

type TemplateValidationStrategyArgs struct {
	Mode TemplateValidationStrategyModeInput `pulumi:"mode"`
}

func (TemplateValidationStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidationStrategy)(nil)).Elem()
}

func (i TemplateValidationStrategyArgs) ToTemplateValidationStrategyOutput() TemplateValidationStrategyOutput {
	return i.ToTemplateValidationStrategyOutputWithContext(context.Background())
}

func (i TemplateValidationStrategyArgs) ToTemplateValidationStrategyOutputWithContext(ctx context.Context) TemplateValidationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateValidationStrategyOutput)
}

func (i TemplateValidationStrategyArgs) ToTemplateValidationStrategyPtrOutput() TemplateValidationStrategyPtrOutput {
	return i.ToTemplateValidationStrategyPtrOutputWithContext(context.Background())
}

func (i TemplateValidationStrategyArgs) ToTemplateValidationStrategyPtrOutputWithContext(ctx context.Context) TemplateValidationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateValidationStrategyOutput).ToTemplateValidationStrategyPtrOutputWithContext(ctx)
}

// TemplateValidationStrategyPtrInput is an input type that accepts TemplateValidationStrategyArgs, TemplateValidationStrategyPtr and TemplateValidationStrategyPtrOutput values.
// You can construct a concrete instance of `TemplateValidationStrategyPtrInput` via:
//
//	        TemplateValidationStrategyArgs{...}
//
//	or:
//
//	        nil
type TemplateValidationStrategyPtrInput interface {
	pulumi.Input

	ToTemplateValidationStrategyPtrOutput() TemplateValidationStrategyPtrOutput
	ToTemplateValidationStrategyPtrOutputWithContext(context.Context) TemplateValidationStrategyPtrOutput
}

type templateValidationStrategyPtrType TemplateValidationStrategyArgs

func TemplateValidationStrategyPtr(v *TemplateValidationStrategyArgs) TemplateValidationStrategyPtrInput {
	return (*templateValidationStrategyPtrType)(v)
}

func (*templateValidationStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateValidationStrategy)(nil)).Elem()
}

func (i *templateValidationStrategyPtrType) ToTemplateValidationStrategyPtrOutput() TemplateValidationStrategyPtrOutput {
	return i.ToTemplateValidationStrategyPtrOutputWithContext(context.Background())
}

func (i *templateValidationStrategyPtrType) ToTemplateValidationStrategyPtrOutputWithContext(ctx context.Context) TemplateValidationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateValidationStrategyPtrOutput)
}

type TemplateValidationStrategyOutput struct{ *pulumi.OutputState }

func (TemplateValidationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidationStrategy)(nil)).Elem()
}

func (o TemplateValidationStrategyOutput) ToTemplateValidationStrategyOutput() TemplateValidationStrategyOutput {
	return o
}

func (o TemplateValidationStrategyOutput) ToTemplateValidationStrategyOutputWithContext(ctx context.Context) TemplateValidationStrategyOutput {
	return o
}

func (o TemplateValidationStrategyOutput) ToTemplateValidationStrategyPtrOutput() TemplateValidationStrategyPtrOutput {
	return o.ToTemplateValidationStrategyPtrOutputWithContext(context.Background())
}

func (o TemplateValidationStrategyOutput) ToTemplateValidationStrategyPtrOutputWithContext(ctx context.Context) TemplateValidationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateValidationStrategy) *TemplateValidationStrategy {
		return &v
	}).(TemplateValidationStrategyPtrOutput)
}

func (o TemplateValidationStrategyOutput) Mode() TemplateValidationStrategyModeOutput {
	return o.ApplyT(func(v TemplateValidationStrategy) TemplateValidationStrategyMode { return v.Mode }).(TemplateValidationStrategyModeOutput)
}

type TemplateValidationStrategyPtrOutput struct{ *pulumi.OutputState }

func (TemplateValidationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateValidationStrategy)(nil)).Elem()
}

func (o TemplateValidationStrategyPtrOutput) ToTemplateValidationStrategyPtrOutput() TemplateValidationStrategyPtrOutput {
	return o
}

func (o TemplateValidationStrategyPtrOutput) ToTemplateValidationStrategyPtrOutputWithContext(ctx context.Context) TemplateValidationStrategyPtrOutput {
	return o
}

func (o TemplateValidationStrategyPtrOutput) Elem() TemplateValidationStrategyOutput {
	return o.ApplyT(func(v *TemplateValidationStrategy) TemplateValidationStrategy {
		if v != nil {
			return *v
		}
		var ret TemplateValidationStrategy
		return ret
	}).(TemplateValidationStrategyOutput)
}

func (o TemplateValidationStrategyPtrOutput) Mode() TemplateValidationStrategyModePtrOutput {
	return o.ApplyT(func(v *TemplateValidationStrategy) *TemplateValidationStrategyMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(TemplateValidationStrategyModePtrOutput)
}

type TemplateVersion struct {
	CreatedTime           *string                        `pulumi:"createdTime"`
	DataSetConfigurations []TemplateDataSetConfiguration `pulumi:"dataSetConfigurations"`
	Description           *string                        `pulumi:"description"`
	Errors                []TemplateError                `pulumi:"errors"`
	Sheets                []TemplateSheet                `pulumi:"sheets"`
	SourceEntityArn       *string                        `pulumi:"sourceEntityArn"`
	Status                *TemplateResourceStatus        `pulumi:"status"`
	ThemeArn              *string                        `pulumi:"themeArn"`
	VersionNumber         *float64                       `pulumi:"versionNumber"`
}

type TemplateVersionOutput struct{ *pulumi.OutputState }

func (TemplateVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVersion)(nil)).Elem()
}

func (o TemplateVersionOutput) ToTemplateVersionOutput() TemplateVersionOutput {
	return o
}

func (o TemplateVersionOutput) ToTemplateVersionOutputWithContext(ctx context.Context) TemplateVersionOutput {
	return o
}

func (o TemplateVersionOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateVersion) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

func (o TemplateVersionOutput) DataSetConfigurations() TemplateDataSetConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateVersion) []TemplateDataSetConfiguration { return v.DataSetConfigurations }).(TemplateDataSetConfigurationArrayOutput)
}

func (o TemplateVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TemplateVersionOutput) Errors() TemplateErrorArrayOutput {
	return o.ApplyT(func(v TemplateVersion) []TemplateError { return v.Errors }).(TemplateErrorArrayOutput)
}

func (o TemplateVersionOutput) Sheets() TemplateSheetArrayOutput {
	return o.ApplyT(func(v TemplateVersion) []TemplateSheet { return v.Sheets }).(TemplateSheetArrayOutput)
}

func (o TemplateVersionOutput) SourceEntityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateVersion) *string { return v.SourceEntityArn }).(pulumi.StringPtrOutput)
}

func (o TemplateVersionOutput) Status() TemplateResourceStatusPtrOutput {
	return o.ApplyT(func(v TemplateVersion) *TemplateResourceStatus { return v.Status }).(TemplateResourceStatusPtrOutput)
}

func (o TemplateVersionOutput) ThemeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateVersion) *string { return v.ThemeArn }).(pulumi.StringPtrOutput)
}

func (o TemplateVersionOutput) VersionNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TemplateVersion) *float64 { return v.VersionNumber }).(pulumi.Float64PtrOutput)
}

type TemplateVersionPtrOutput struct{ *pulumi.OutputState }

func (TemplateVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVersion)(nil)).Elem()
}

func (o TemplateVersionPtrOutput) ToTemplateVersionPtrOutput() TemplateVersionPtrOutput {
	return o
}

func (o TemplateVersionPtrOutput) ToTemplateVersionPtrOutputWithContext(ctx context.Context) TemplateVersionPtrOutput {
	return o
}

func (o TemplateVersionPtrOutput) Elem() TemplateVersionOutput {
	return o.ApplyT(func(v *TemplateVersion) TemplateVersion {
		if v != nil {
			return *v
		}
		var ret TemplateVersion
		return ret
	}).(TemplateVersionOutput)
}

func (o TemplateVersionPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

func (o TemplateVersionPtrOutput) DataSetConfigurations() TemplateDataSetConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateVersion) []TemplateDataSetConfiguration {
		if v == nil {
			return nil
		}
		return v.DataSetConfigurations
	}).(TemplateDataSetConfigurationArrayOutput)
}

func (o TemplateVersionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o TemplateVersionPtrOutput) Errors() TemplateErrorArrayOutput {
	return o.ApplyT(func(v *TemplateVersion) []TemplateError {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(TemplateErrorArrayOutput)
}

func (o TemplateVersionPtrOutput) Sheets() TemplateSheetArrayOutput {
	return o.ApplyT(func(v *TemplateVersion) []TemplateSheet {
		if v == nil {
			return nil
		}
		return v.Sheets
	}).(TemplateSheetArrayOutput)
}

func (o TemplateVersionPtrOutput) SourceEntityArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *string {
		if v == nil {
			return nil
		}
		return v.SourceEntityArn
	}).(pulumi.StringPtrOutput)
}

func (o TemplateVersionPtrOutput) Status() TemplateResourceStatusPtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *TemplateResourceStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(TemplateResourceStatusPtrOutput)
}

func (o TemplateVersionPtrOutput) ThemeArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *string {
		if v == nil {
			return nil
		}
		return v.ThemeArn
	}).(pulumi.StringPtrOutput)
}

func (o TemplateVersionPtrOutput) VersionNumber() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TemplateVersion) *float64 {
		if v == nil {
			return nil
		}
		return v.VersionNumber
	}).(pulumi.Float64PtrOutput)
}

type TemplateVersionDefinition struct {
	AnalysisDefaults      *TemplateAnalysisDefaults      `pulumi:"analysisDefaults"`
	CalculatedFields      []TemplateCalculatedField      `pulumi:"calculatedFields"`
	ColumnConfigurations  []TemplateColumnConfiguration  `pulumi:"columnConfigurations"`
	DataSetConfigurations []TemplateDataSetConfiguration `pulumi:"dataSetConfigurations"`
	FilterGroups          []TemplateFilterGroup          `pulumi:"filterGroups"`
	Options               *TemplateAssetOptions          `pulumi:"options"`
	ParameterDeclarations []TemplateParameterDeclaration `pulumi:"parameterDeclarations"`
	Sheets                []TemplateSheetDefinition      `pulumi:"sheets"`
}

// TemplateVersionDefinitionInput is an input type that accepts TemplateVersionDefinitionArgs and TemplateVersionDefinitionOutput values.
// You can construct a concrete instance of `TemplateVersionDefinitionInput` via:
//
//	TemplateVersionDefinitionArgs{...}
type TemplateVersionDefinitionInput interface {
	pulumi.Input

	ToTemplateVersionDefinitionOutput() TemplateVersionDefinitionOutput
	ToTemplateVersionDefinitionOutputWithContext(context.Context) TemplateVersionDefinitionOutput
}

type TemplateVersionDefinitionArgs struct {
	AnalysisDefaults      TemplateAnalysisDefaultsPtrInput       `pulumi:"analysisDefaults"`
	CalculatedFields      TemplateCalculatedFieldArrayInput      `pulumi:"calculatedFields"`
	ColumnConfigurations  TemplateColumnConfigurationArrayInput  `pulumi:"columnConfigurations"`
	DataSetConfigurations TemplateDataSetConfigurationArrayInput `pulumi:"dataSetConfigurations"`
	FilterGroups          TemplateFilterGroupArrayInput          `pulumi:"filterGroups"`
	Options               TemplateAssetOptionsPtrInput           `pulumi:"options"`
	ParameterDeclarations TemplateParameterDeclarationArrayInput `pulumi:"parameterDeclarations"`
	Sheets                TemplateSheetDefinitionArrayInput      `pulumi:"sheets"`
}

func (TemplateVersionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVersionDefinition)(nil)).Elem()
}

func (i TemplateVersionDefinitionArgs) ToTemplateVersionDefinitionOutput() TemplateVersionDefinitionOutput {
	return i.ToTemplateVersionDefinitionOutputWithContext(context.Background())
}

func (i TemplateVersionDefinitionArgs) ToTemplateVersionDefinitionOutputWithContext(ctx context.Context) TemplateVersionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVersionDefinitionOutput)
}

func (i TemplateVersionDefinitionArgs) ToTemplateVersionDefinitionPtrOutput() TemplateVersionDefinitionPtrOutput {
	return i.ToTemplateVersionDefinitionPtrOutputWithContext(context.Background())
}

func (i TemplateVersionDefinitionArgs) ToTemplateVersionDefinitionPtrOutputWithContext(ctx context.Context) TemplateVersionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVersionDefinitionOutput).ToTemplateVersionDefinitionPtrOutputWithContext(ctx)
}

// TemplateVersionDefinitionPtrInput is an input type that accepts TemplateVersionDefinitionArgs, TemplateVersionDefinitionPtr and TemplateVersionDefinitionPtrOutput values.
// You can construct a concrete instance of `TemplateVersionDefinitionPtrInput` via:
//
//	        TemplateVersionDefinitionArgs{...}
//
//	or:
//
//	        nil
type TemplateVersionDefinitionPtrInput interface {
	pulumi.Input

	ToTemplateVersionDefinitionPtrOutput() TemplateVersionDefinitionPtrOutput
	ToTemplateVersionDefinitionPtrOutputWithContext(context.Context) TemplateVersionDefinitionPtrOutput
}

type templateVersionDefinitionPtrType TemplateVersionDefinitionArgs

func TemplateVersionDefinitionPtr(v *TemplateVersionDefinitionArgs) TemplateVersionDefinitionPtrInput {
	return (*templateVersionDefinitionPtrType)(v)
}

func (*templateVersionDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVersionDefinition)(nil)).Elem()
}

func (i *templateVersionDefinitionPtrType) ToTemplateVersionDefinitionPtrOutput() TemplateVersionDefinitionPtrOutput {
	return i.ToTemplateVersionDefinitionPtrOutputWithContext(context.Background())
}

func (i *templateVersionDefinitionPtrType) ToTemplateVersionDefinitionPtrOutputWithContext(ctx context.Context) TemplateVersionDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVersionDefinitionPtrOutput)
}

type TemplateVersionDefinitionOutput struct{ *pulumi.OutputState }

func (TemplateVersionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVersionDefinition)(nil)).Elem()
}

func (o TemplateVersionDefinitionOutput) ToTemplateVersionDefinitionOutput() TemplateVersionDefinitionOutput {
	return o
}

func (o TemplateVersionDefinitionOutput) ToTemplateVersionDefinitionOutputWithContext(ctx context.Context) TemplateVersionDefinitionOutput {
	return o
}

func (o TemplateVersionDefinitionOutput) ToTemplateVersionDefinitionPtrOutput() TemplateVersionDefinitionPtrOutput {
	return o.ToTemplateVersionDefinitionPtrOutputWithContext(context.Background())
}

func (o TemplateVersionDefinitionOutput) ToTemplateVersionDefinitionPtrOutputWithContext(ctx context.Context) TemplateVersionDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateVersionDefinition) *TemplateVersionDefinition {
		return &v
	}).(TemplateVersionDefinitionPtrOutput)
}

func (o TemplateVersionDefinitionOutput) AnalysisDefaults() TemplateAnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) *TemplateAnalysisDefaults { return v.AnalysisDefaults }).(TemplateAnalysisDefaultsPtrOutput)
}

func (o TemplateVersionDefinitionOutput) CalculatedFields() TemplateCalculatedFieldArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateCalculatedField { return v.CalculatedFields }).(TemplateCalculatedFieldArrayOutput)
}

func (o TemplateVersionDefinitionOutput) ColumnConfigurations() TemplateColumnConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateColumnConfiguration { return v.ColumnConfigurations }).(TemplateColumnConfigurationArrayOutput)
}

func (o TemplateVersionDefinitionOutput) DataSetConfigurations() TemplateDataSetConfigurationArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateDataSetConfiguration { return v.DataSetConfigurations }).(TemplateDataSetConfigurationArrayOutput)
}

func (o TemplateVersionDefinitionOutput) FilterGroups() TemplateFilterGroupArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateFilterGroup { return v.FilterGroups }).(TemplateFilterGroupArrayOutput)
}

func (o TemplateVersionDefinitionOutput) Options() TemplateAssetOptionsPtrOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) *TemplateAssetOptions { return v.Options }).(TemplateAssetOptionsPtrOutput)
}

func (o TemplateVersionDefinitionOutput) ParameterDeclarations() TemplateParameterDeclarationArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateParameterDeclaration { return v.ParameterDeclarations }).(TemplateParameterDeclarationArrayOutput)
}

func (o TemplateVersionDefinitionOutput) Sheets() TemplateSheetDefinitionArrayOutput {
	return o.ApplyT(func(v TemplateVersionDefinition) []TemplateSheetDefinition { return v.Sheets }).(TemplateSheetDefinitionArrayOutput)
}

type TemplateVersionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (TemplateVersionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVersionDefinition)(nil)).Elem()
}

func (o TemplateVersionDefinitionPtrOutput) ToTemplateVersionDefinitionPtrOutput() TemplateVersionDefinitionPtrOutput {
	return o
}

func (o TemplateVersionDefinitionPtrOutput) ToTemplateVersionDefinitionPtrOutputWithContext(ctx context.Context) TemplateVersionDefinitionPtrOutput {
	return o
}

func (o TemplateVersionDefinitionPtrOutput) Elem() TemplateVersionDefinitionOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) TemplateVersionDefinition {
		if v != nil {
			return *v
		}
		var ret TemplateVersionDefinition
		return ret
	}).(TemplateVersionDefinitionOutput)
}

func (o TemplateVersionDefinitionPtrOutput) AnalysisDefaults() TemplateAnalysisDefaultsPtrOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) *TemplateAnalysisDefaults {
		if v == nil {
			return nil
		}
		return v.AnalysisDefaults
	}).(TemplateAnalysisDefaultsPtrOutput)
}

func (o TemplateVersionDefinitionPtrOutput) CalculatedFields() TemplateCalculatedFieldArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateCalculatedField {
		if v == nil {
			return nil
		}
		return v.CalculatedFields
	}).(TemplateCalculatedFieldArrayOutput)
}

func (o TemplateVersionDefinitionPtrOutput) ColumnConfigurations() TemplateColumnConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateColumnConfiguration {
		if v == nil {
			return nil
		}
		return v.ColumnConfigurations
	}).(TemplateColumnConfigurationArrayOutput)
}

func (o TemplateVersionDefinitionPtrOutput) DataSetConfigurations() TemplateDataSetConfigurationArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateDataSetConfiguration {
		if v == nil {
			return nil
		}
		return v.DataSetConfigurations
	}).(TemplateDataSetConfigurationArrayOutput)
}

func (o TemplateVersionDefinitionPtrOutput) FilterGroups() TemplateFilterGroupArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateFilterGroup {
		if v == nil {
			return nil
		}
		return v.FilterGroups
	}).(TemplateFilterGroupArrayOutput)
}

func (o TemplateVersionDefinitionPtrOutput) Options() TemplateAssetOptionsPtrOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) *TemplateAssetOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(TemplateAssetOptionsPtrOutput)
}

func (o TemplateVersionDefinitionPtrOutput) ParameterDeclarations() TemplateParameterDeclarationArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateParameterDeclaration {
		if v == nil {
			return nil
		}
		return v.ParameterDeclarations
	}).(TemplateParameterDeclarationArrayOutput)
}

func (o TemplateVersionDefinitionPtrOutput) Sheets() TemplateSheetDefinitionArrayOutput {
	return o.ApplyT(func(v *TemplateVersionDefinition) []TemplateSheetDefinition {
		if v == nil {
			return nil
		}
		return v.Sheets
	}).(TemplateSheetDefinitionArrayOutput)
}

type TemplateVisibleRangeOptions struct {
	PercentRange *TemplatePercentVisibleRange `pulumi:"percentRange"`
}

// TemplateVisibleRangeOptionsInput is an input type that accepts TemplateVisibleRangeOptionsArgs and TemplateVisibleRangeOptionsOutput values.
// You can construct a concrete instance of `TemplateVisibleRangeOptionsInput` via:
//
//	TemplateVisibleRangeOptionsArgs{...}
type TemplateVisibleRangeOptionsInput interface {
	pulumi.Input

	ToTemplateVisibleRangeOptionsOutput() TemplateVisibleRangeOptionsOutput
	ToTemplateVisibleRangeOptionsOutputWithContext(context.Context) TemplateVisibleRangeOptionsOutput
}

type TemplateVisibleRangeOptionsArgs struct {
	PercentRange TemplatePercentVisibleRangePtrInput `pulumi:"percentRange"`
}

func (TemplateVisibleRangeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisibleRangeOptions)(nil)).Elem()
}

func (i TemplateVisibleRangeOptionsArgs) ToTemplateVisibleRangeOptionsOutput() TemplateVisibleRangeOptionsOutput {
	return i.ToTemplateVisibleRangeOptionsOutputWithContext(context.Background())
}

func (i TemplateVisibleRangeOptionsArgs) ToTemplateVisibleRangeOptionsOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisibleRangeOptionsOutput)
}

func (i TemplateVisibleRangeOptionsArgs) ToTemplateVisibleRangeOptionsPtrOutput() TemplateVisibleRangeOptionsPtrOutput {
	return i.ToTemplateVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i TemplateVisibleRangeOptionsArgs) ToTemplateVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisibleRangeOptionsOutput).ToTemplateVisibleRangeOptionsPtrOutputWithContext(ctx)
}

// TemplateVisibleRangeOptionsPtrInput is an input type that accepts TemplateVisibleRangeOptionsArgs, TemplateVisibleRangeOptionsPtr and TemplateVisibleRangeOptionsPtrOutput values.
// You can construct a concrete instance of `TemplateVisibleRangeOptionsPtrInput` via:
//
//	        TemplateVisibleRangeOptionsArgs{...}
//
//	or:
//
//	        nil
type TemplateVisibleRangeOptionsPtrInput interface {
	pulumi.Input

	ToTemplateVisibleRangeOptionsPtrOutput() TemplateVisibleRangeOptionsPtrOutput
	ToTemplateVisibleRangeOptionsPtrOutputWithContext(context.Context) TemplateVisibleRangeOptionsPtrOutput
}

type templateVisibleRangeOptionsPtrType TemplateVisibleRangeOptionsArgs

func TemplateVisibleRangeOptionsPtr(v *TemplateVisibleRangeOptionsArgs) TemplateVisibleRangeOptionsPtrInput {
	return (*templateVisibleRangeOptionsPtrType)(v)
}

func (*templateVisibleRangeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVisibleRangeOptions)(nil)).Elem()
}

func (i *templateVisibleRangeOptionsPtrType) ToTemplateVisibleRangeOptionsPtrOutput() TemplateVisibleRangeOptionsPtrOutput {
	return i.ToTemplateVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (i *templateVisibleRangeOptionsPtrType) ToTemplateVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisibleRangeOptionsPtrOutput)
}

type TemplateVisibleRangeOptionsOutput struct{ *pulumi.OutputState }

func (TemplateVisibleRangeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisibleRangeOptions)(nil)).Elem()
}

func (o TemplateVisibleRangeOptionsOutput) ToTemplateVisibleRangeOptionsOutput() TemplateVisibleRangeOptionsOutput {
	return o
}

func (o TemplateVisibleRangeOptionsOutput) ToTemplateVisibleRangeOptionsOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsOutput {
	return o
}

func (o TemplateVisibleRangeOptionsOutput) ToTemplateVisibleRangeOptionsPtrOutput() TemplateVisibleRangeOptionsPtrOutput {
	return o.ToTemplateVisibleRangeOptionsPtrOutputWithContext(context.Background())
}

func (o TemplateVisibleRangeOptionsOutput) ToTemplateVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateVisibleRangeOptions) *TemplateVisibleRangeOptions {
		return &v
	}).(TemplateVisibleRangeOptionsPtrOutput)
}

func (o TemplateVisibleRangeOptionsOutput) PercentRange() TemplatePercentVisibleRangePtrOutput {
	return o.ApplyT(func(v TemplateVisibleRangeOptions) *TemplatePercentVisibleRange { return v.PercentRange }).(TemplatePercentVisibleRangePtrOutput)
}

type TemplateVisibleRangeOptionsPtrOutput struct{ *pulumi.OutputState }

func (TemplateVisibleRangeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateVisibleRangeOptions)(nil)).Elem()
}

func (o TemplateVisibleRangeOptionsPtrOutput) ToTemplateVisibleRangeOptionsPtrOutput() TemplateVisibleRangeOptionsPtrOutput {
	return o
}

func (o TemplateVisibleRangeOptionsPtrOutput) ToTemplateVisibleRangeOptionsPtrOutputWithContext(ctx context.Context) TemplateVisibleRangeOptionsPtrOutput {
	return o
}

func (o TemplateVisibleRangeOptionsPtrOutput) Elem() TemplateVisibleRangeOptionsOutput {
	return o.ApplyT(func(v *TemplateVisibleRangeOptions) TemplateVisibleRangeOptions {
		if v != nil {
			return *v
		}
		var ret TemplateVisibleRangeOptions
		return ret
	}).(TemplateVisibleRangeOptionsOutput)
}

func (o TemplateVisibleRangeOptionsPtrOutput) PercentRange() TemplatePercentVisibleRangePtrOutput {
	return o.ApplyT(func(v *TemplateVisibleRangeOptions) *TemplatePercentVisibleRange {
		if v == nil {
			return nil
		}
		return v.PercentRange
	}).(TemplatePercentVisibleRangePtrOutput)
}

type TemplateVisual struct {
	BarChartVisual      *TemplateBarChartVisual      `pulumi:"barChartVisual"`
	BoxPlotVisual       *TemplateBoxPlotVisual       `pulumi:"boxPlotVisual"`
	ComboChartVisual    *TemplateComboChartVisual    `pulumi:"comboChartVisual"`
	CustomContentVisual *TemplateCustomContentVisual `pulumi:"customContentVisual"`
	EmptyVisual         *TemplateEmptyVisual         `pulumi:"emptyVisual"`
	FilledMapVisual     *TemplateFilledMapVisual     `pulumi:"filledMapVisual"`
	FunnelChartVisual   *TemplateFunnelChartVisual   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    *TemplateGaugeChartVisual    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual *TemplateGeospatialMapVisual `pulumi:"geospatialMapVisual"`
	HeatMapVisual       *TemplateHeatMapVisual       `pulumi:"heatMapVisual"`
	HistogramVisual     *TemplateHistogramVisual     `pulumi:"histogramVisual"`
	InsightVisual       *TemplateInsightVisual       `pulumi:"insightVisual"`
	KpiVisual           *TemplateKpiVisual           `pulumi:"kpiVisual"`
	LineChartVisual     *TemplateLineChartVisual     `pulumi:"lineChartVisual"`
	PieChartVisual      *TemplatePieChartVisual      `pulumi:"pieChartVisual"`
	PivotTableVisual    *TemplatePivotTableVisual    `pulumi:"pivotTableVisual"`
	RadarChartVisual    *TemplateRadarChartVisual    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual *TemplateSankeyDiagramVisual `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   *TemplateScatterPlotVisual   `pulumi:"scatterPlotVisual"`
	TableVisual         *TemplateTableVisual         `pulumi:"tableVisual"`
	TreeMapVisual       *TemplateTreeMapVisual       `pulumi:"treeMapVisual"`
	WaterfallVisual     *TemplateWaterfallVisual     `pulumi:"waterfallVisual"`
	WordCloudVisual     *TemplateWordCloudVisual     `pulumi:"wordCloudVisual"`
}

// TemplateVisualInput is an input type that accepts TemplateVisualArgs and TemplateVisualOutput values.
// You can construct a concrete instance of `TemplateVisualInput` via:
//
//	TemplateVisualArgs{...}
type TemplateVisualInput interface {
	pulumi.Input

	ToTemplateVisualOutput() TemplateVisualOutput
	ToTemplateVisualOutputWithContext(context.Context) TemplateVisualOutput
}

type TemplateVisualArgs struct {
	BarChartVisual      TemplateBarChartVisualPtrInput      `pulumi:"barChartVisual"`
	BoxPlotVisual       TemplateBoxPlotVisualPtrInput       `pulumi:"boxPlotVisual"`
	ComboChartVisual    TemplateComboChartVisualPtrInput    `pulumi:"comboChartVisual"`
	CustomContentVisual TemplateCustomContentVisualPtrInput `pulumi:"customContentVisual"`
	EmptyVisual         TemplateEmptyVisualPtrInput         `pulumi:"emptyVisual"`
	FilledMapVisual     TemplateFilledMapVisualPtrInput     `pulumi:"filledMapVisual"`
	FunnelChartVisual   TemplateFunnelChartVisualPtrInput   `pulumi:"funnelChartVisual"`
	GaugeChartVisual    TemplateGaugeChartVisualPtrInput    `pulumi:"gaugeChartVisual"`
	GeospatialMapVisual TemplateGeospatialMapVisualPtrInput `pulumi:"geospatialMapVisual"`
	HeatMapVisual       TemplateHeatMapVisualPtrInput       `pulumi:"heatMapVisual"`
	HistogramVisual     TemplateHistogramVisualPtrInput     `pulumi:"histogramVisual"`
	InsightVisual       TemplateInsightVisualPtrInput       `pulumi:"insightVisual"`
	KpiVisual           TemplateKpiVisualPtrInput           `pulumi:"kpiVisual"`
	LineChartVisual     TemplateLineChartVisualPtrInput     `pulumi:"lineChartVisual"`
	PieChartVisual      TemplatePieChartVisualPtrInput      `pulumi:"pieChartVisual"`
	PivotTableVisual    TemplatePivotTableVisualPtrInput    `pulumi:"pivotTableVisual"`
	RadarChartVisual    TemplateRadarChartVisualPtrInput    `pulumi:"radarChartVisual"`
	SankeyDiagramVisual TemplateSankeyDiagramVisualPtrInput `pulumi:"sankeyDiagramVisual"`
	ScatterPlotVisual   TemplateScatterPlotVisualPtrInput   `pulumi:"scatterPlotVisual"`
	TableVisual         TemplateTableVisualPtrInput         `pulumi:"tableVisual"`
	TreeMapVisual       TemplateTreeMapVisualPtrInput       `pulumi:"treeMapVisual"`
	WaterfallVisual     TemplateWaterfallVisualPtrInput     `pulumi:"waterfallVisual"`
	WordCloudVisual     TemplateWordCloudVisualPtrInput     `pulumi:"wordCloudVisual"`
}

func (TemplateVisualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisual)(nil)).Elem()
}

func (i TemplateVisualArgs) ToTemplateVisualOutput() TemplateVisualOutput {
	return i.ToTemplateVisualOutputWithContext(context.Background())
}

func (i TemplateVisualArgs) ToTemplateVisualOutputWithContext(ctx context.Context) TemplateVisualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualOutput)
}

// TemplateVisualArrayInput is an input type that accepts TemplateVisualArray and TemplateVisualArrayOutput values.
// You can construct a concrete instance of `TemplateVisualArrayInput` via:
//
//	TemplateVisualArray{ TemplateVisualArgs{...} }
type TemplateVisualArrayInput interface {
	pulumi.Input

	ToTemplateVisualArrayOutput() TemplateVisualArrayOutput
	ToTemplateVisualArrayOutputWithContext(context.Context) TemplateVisualArrayOutput
}

type TemplateVisualArray []TemplateVisualInput

func (TemplateVisualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisual)(nil)).Elem()
}

func (i TemplateVisualArray) ToTemplateVisualArrayOutput() TemplateVisualArrayOutput {
	return i.ToTemplateVisualArrayOutputWithContext(context.Background())
}

func (i TemplateVisualArray) ToTemplateVisualArrayOutputWithContext(ctx context.Context) TemplateVisualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualArrayOutput)
}

type TemplateVisualOutput struct{ *pulumi.OutputState }

func (TemplateVisualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisual)(nil)).Elem()
}

func (o TemplateVisualOutput) ToTemplateVisualOutput() TemplateVisualOutput {
	return o
}

func (o TemplateVisualOutput) ToTemplateVisualOutputWithContext(ctx context.Context) TemplateVisualOutput {
	return o
}

func (o TemplateVisualOutput) BarChartVisual() TemplateBarChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateBarChartVisual { return v.BarChartVisual }).(TemplateBarChartVisualPtrOutput)
}

func (o TemplateVisualOutput) BoxPlotVisual() TemplateBoxPlotVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateBoxPlotVisual { return v.BoxPlotVisual }).(TemplateBoxPlotVisualPtrOutput)
}

func (o TemplateVisualOutput) ComboChartVisual() TemplateComboChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateComboChartVisual { return v.ComboChartVisual }).(TemplateComboChartVisualPtrOutput)
}

func (o TemplateVisualOutput) CustomContentVisual() TemplateCustomContentVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateCustomContentVisual { return v.CustomContentVisual }).(TemplateCustomContentVisualPtrOutput)
}

func (o TemplateVisualOutput) EmptyVisual() TemplateEmptyVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateEmptyVisual { return v.EmptyVisual }).(TemplateEmptyVisualPtrOutput)
}

func (o TemplateVisualOutput) FilledMapVisual() TemplateFilledMapVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateFilledMapVisual { return v.FilledMapVisual }).(TemplateFilledMapVisualPtrOutput)
}

func (o TemplateVisualOutput) FunnelChartVisual() TemplateFunnelChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateFunnelChartVisual { return v.FunnelChartVisual }).(TemplateFunnelChartVisualPtrOutput)
}

func (o TemplateVisualOutput) GaugeChartVisual() TemplateGaugeChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateGaugeChartVisual { return v.GaugeChartVisual }).(TemplateGaugeChartVisualPtrOutput)
}

func (o TemplateVisualOutput) GeospatialMapVisual() TemplateGeospatialMapVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateGeospatialMapVisual { return v.GeospatialMapVisual }).(TemplateGeospatialMapVisualPtrOutput)
}

func (o TemplateVisualOutput) HeatMapVisual() TemplateHeatMapVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateHeatMapVisual { return v.HeatMapVisual }).(TemplateHeatMapVisualPtrOutput)
}

func (o TemplateVisualOutput) HistogramVisual() TemplateHistogramVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateHistogramVisual { return v.HistogramVisual }).(TemplateHistogramVisualPtrOutput)
}

func (o TemplateVisualOutput) InsightVisual() TemplateInsightVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateInsightVisual { return v.InsightVisual }).(TemplateInsightVisualPtrOutput)
}

func (o TemplateVisualOutput) KpiVisual() TemplateKpiVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateKpiVisual { return v.KpiVisual }).(TemplateKpiVisualPtrOutput)
}

func (o TemplateVisualOutput) LineChartVisual() TemplateLineChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateLineChartVisual { return v.LineChartVisual }).(TemplateLineChartVisualPtrOutput)
}

func (o TemplateVisualOutput) PieChartVisual() TemplatePieChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplatePieChartVisual { return v.PieChartVisual }).(TemplatePieChartVisualPtrOutput)
}

func (o TemplateVisualOutput) PivotTableVisual() TemplatePivotTableVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplatePivotTableVisual { return v.PivotTableVisual }).(TemplatePivotTableVisualPtrOutput)
}

func (o TemplateVisualOutput) RadarChartVisual() TemplateRadarChartVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateRadarChartVisual { return v.RadarChartVisual }).(TemplateRadarChartVisualPtrOutput)
}

func (o TemplateVisualOutput) SankeyDiagramVisual() TemplateSankeyDiagramVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateSankeyDiagramVisual { return v.SankeyDiagramVisual }).(TemplateSankeyDiagramVisualPtrOutput)
}

func (o TemplateVisualOutput) ScatterPlotVisual() TemplateScatterPlotVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateScatterPlotVisual { return v.ScatterPlotVisual }).(TemplateScatterPlotVisualPtrOutput)
}

func (o TemplateVisualOutput) TableVisual() TemplateTableVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateTableVisual { return v.TableVisual }).(TemplateTableVisualPtrOutput)
}

func (o TemplateVisualOutput) TreeMapVisual() TemplateTreeMapVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateTreeMapVisual { return v.TreeMapVisual }).(TemplateTreeMapVisualPtrOutput)
}

func (o TemplateVisualOutput) WaterfallVisual() TemplateWaterfallVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateWaterfallVisual { return v.WaterfallVisual }).(TemplateWaterfallVisualPtrOutput)
}

func (o TemplateVisualOutput) WordCloudVisual() TemplateWordCloudVisualPtrOutput {
	return o.ApplyT(func(v TemplateVisual) *TemplateWordCloudVisual { return v.WordCloudVisual }).(TemplateWordCloudVisualPtrOutput)
}

type TemplateVisualArrayOutput struct{ *pulumi.OutputState }

func (TemplateVisualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisual)(nil)).Elem()
}

func (o TemplateVisualArrayOutput) ToTemplateVisualArrayOutput() TemplateVisualArrayOutput {
	return o
}

func (o TemplateVisualArrayOutput) ToTemplateVisualArrayOutputWithContext(ctx context.Context) TemplateVisualArrayOutput {
	return o
}

func (o TemplateVisualArrayOutput) Index(i pulumi.IntInput) TemplateVisualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateVisual {
		return vs[0].([]TemplateVisual)[vs[1].(int)]
	}).(TemplateVisualOutput)
}

type TemplateVisualCustomAction struct {
	ActionOperations []TemplateVisualCustomActionOperation `pulumi:"actionOperations"`
	CustomActionId   string                                `pulumi:"customActionId"`
	Name             string                                `pulumi:"name"`
	Status           *TemplateWidgetStatus                 `pulumi:"status"`
	Trigger          TemplateVisualCustomActionTrigger     `pulumi:"trigger"`
}

// TemplateVisualCustomActionInput is an input type that accepts TemplateVisualCustomActionArgs and TemplateVisualCustomActionOutput values.
// You can construct a concrete instance of `TemplateVisualCustomActionInput` via:
//
//	TemplateVisualCustomActionArgs{...}
type TemplateVisualCustomActionInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionOutput() TemplateVisualCustomActionOutput
	ToTemplateVisualCustomActionOutputWithContext(context.Context) TemplateVisualCustomActionOutput
}

type TemplateVisualCustomActionArgs struct {
	ActionOperations TemplateVisualCustomActionOperationArrayInput `pulumi:"actionOperations"`
	CustomActionId   pulumi.StringInput                            `pulumi:"customActionId"`
	Name             pulumi.StringInput                            `pulumi:"name"`
	Status           TemplateWidgetStatusPtrInput                  `pulumi:"status"`
	Trigger          TemplateVisualCustomActionTriggerInput        `pulumi:"trigger"`
}

func (TemplateVisualCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomAction)(nil)).Elem()
}

func (i TemplateVisualCustomActionArgs) ToTemplateVisualCustomActionOutput() TemplateVisualCustomActionOutput {
	return i.ToTemplateVisualCustomActionOutputWithContext(context.Background())
}

func (i TemplateVisualCustomActionArgs) ToTemplateVisualCustomActionOutputWithContext(ctx context.Context) TemplateVisualCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualCustomActionOutput)
}

// TemplateVisualCustomActionArrayInput is an input type that accepts TemplateVisualCustomActionArray and TemplateVisualCustomActionArrayOutput values.
// You can construct a concrete instance of `TemplateVisualCustomActionArrayInput` via:
//
//	TemplateVisualCustomActionArray{ TemplateVisualCustomActionArgs{...} }
type TemplateVisualCustomActionArrayInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionArrayOutput() TemplateVisualCustomActionArrayOutput
	ToTemplateVisualCustomActionArrayOutputWithContext(context.Context) TemplateVisualCustomActionArrayOutput
}

type TemplateVisualCustomActionArray []TemplateVisualCustomActionInput

func (TemplateVisualCustomActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisualCustomAction)(nil)).Elem()
}

func (i TemplateVisualCustomActionArray) ToTemplateVisualCustomActionArrayOutput() TemplateVisualCustomActionArrayOutput {
	return i.ToTemplateVisualCustomActionArrayOutputWithContext(context.Background())
}

func (i TemplateVisualCustomActionArray) ToTemplateVisualCustomActionArrayOutputWithContext(ctx context.Context) TemplateVisualCustomActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualCustomActionArrayOutput)
}

type TemplateVisualCustomActionOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomAction)(nil)).Elem()
}

func (o TemplateVisualCustomActionOutput) ToTemplateVisualCustomActionOutput() TemplateVisualCustomActionOutput {
	return o
}

func (o TemplateVisualCustomActionOutput) ToTemplateVisualCustomActionOutputWithContext(ctx context.Context) TemplateVisualCustomActionOutput {
	return o
}

func (o TemplateVisualCustomActionOutput) ActionOperations() TemplateVisualCustomActionOperationArrayOutput {
	return o.ApplyT(func(v TemplateVisualCustomAction) []TemplateVisualCustomActionOperation { return v.ActionOperations }).(TemplateVisualCustomActionOperationArrayOutput)
}

func (o TemplateVisualCustomActionOutput) CustomActionId() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateVisualCustomAction) string { return v.CustomActionId }).(pulumi.StringOutput)
}

func (o TemplateVisualCustomActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateVisualCustomAction) string { return v.Name }).(pulumi.StringOutput)
}

func (o TemplateVisualCustomActionOutput) Status() TemplateWidgetStatusPtrOutput {
	return o.ApplyT(func(v TemplateVisualCustomAction) *TemplateWidgetStatus { return v.Status }).(TemplateWidgetStatusPtrOutput)
}

func (o TemplateVisualCustomActionOutput) Trigger() TemplateVisualCustomActionTriggerOutput {
	return o.ApplyT(func(v TemplateVisualCustomAction) TemplateVisualCustomActionTrigger { return v.Trigger }).(TemplateVisualCustomActionTriggerOutput)
}

type TemplateVisualCustomActionArrayOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisualCustomAction)(nil)).Elem()
}

func (o TemplateVisualCustomActionArrayOutput) ToTemplateVisualCustomActionArrayOutput() TemplateVisualCustomActionArrayOutput {
	return o
}

func (o TemplateVisualCustomActionArrayOutput) ToTemplateVisualCustomActionArrayOutputWithContext(ctx context.Context) TemplateVisualCustomActionArrayOutput {
	return o
}

func (o TemplateVisualCustomActionArrayOutput) Index(i pulumi.IntInput) TemplateVisualCustomActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateVisualCustomAction {
		return vs[0].([]TemplateVisualCustomAction)[vs[1].(int)]
	}).(TemplateVisualCustomActionOutput)
}

type TemplateVisualCustomActionOperation struct {
	FilterOperation        *TemplateCustomActionFilterOperation        `pulumi:"filterOperation"`
	NavigationOperation    *TemplateCustomActionNavigationOperation    `pulumi:"navigationOperation"`
	SetParametersOperation *TemplateCustomActionSetParametersOperation `pulumi:"setParametersOperation"`
	UrlOperation           *TemplateCustomActionUrlOperation           `pulumi:"urlOperation"`
}

// TemplateVisualCustomActionOperationInput is an input type that accepts TemplateVisualCustomActionOperationArgs and TemplateVisualCustomActionOperationOutput values.
// You can construct a concrete instance of `TemplateVisualCustomActionOperationInput` via:
//
//	TemplateVisualCustomActionOperationArgs{...}
type TemplateVisualCustomActionOperationInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionOperationOutput() TemplateVisualCustomActionOperationOutput
	ToTemplateVisualCustomActionOperationOutputWithContext(context.Context) TemplateVisualCustomActionOperationOutput
}

type TemplateVisualCustomActionOperationArgs struct {
	FilterOperation        TemplateCustomActionFilterOperationPtrInput        `pulumi:"filterOperation"`
	NavigationOperation    TemplateCustomActionNavigationOperationPtrInput    `pulumi:"navigationOperation"`
	SetParametersOperation TemplateCustomActionSetParametersOperationPtrInput `pulumi:"setParametersOperation"`
	UrlOperation           TemplateCustomActionUrlOperationPtrInput           `pulumi:"urlOperation"`
}

func (TemplateVisualCustomActionOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomActionOperation)(nil)).Elem()
}

func (i TemplateVisualCustomActionOperationArgs) ToTemplateVisualCustomActionOperationOutput() TemplateVisualCustomActionOperationOutput {
	return i.ToTemplateVisualCustomActionOperationOutputWithContext(context.Background())
}

func (i TemplateVisualCustomActionOperationArgs) ToTemplateVisualCustomActionOperationOutputWithContext(ctx context.Context) TemplateVisualCustomActionOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualCustomActionOperationOutput)
}

// TemplateVisualCustomActionOperationArrayInput is an input type that accepts TemplateVisualCustomActionOperationArray and TemplateVisualCustomActionOperationArrayOutput values.
// You can construct a concrete instance of `TemplateVisualCustomActionOperationArrayInput` via:
//
//	TemplateVisualCustomActionOperationArray{ TemplateVisualCustomActionOperationArgs{...} }
type TemplateVisualCustomActionOperationArrayInput interface {
	pulumi.Input

	ToTemplateVisualCustomActionOperationArrayOutput() TemplateVisualCustomActionOperationArrayOutput
	ToTemplateVisualCustomActionOperationArrayOutputWithContext(context.Context) TemplateVisualCustomActionOperationArrayOutput
}

type TemplateVisualCustomActionOperationArray []TemplateVisualCustomActionOperationInput

func (TemplateVisualCustomActionOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisualCustomActionOperation)(nil)).Elem()
}

func (i TemplateVisualCustomActionOperationArray) ToTemplateVisualCustomActionOperationArrayOutput() TemplateVisualCustomActionOperationArrayOutput {
	return i.ToTemplateVisualCustomActionOperationArrayOutputWithContext(context.Background())
}

func (i TemplateVisualCustomActionOperationArray) ToTemplateVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) TemplateVisualCustomActionOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateVisualCustomActionOperationArrayOutput)
}

type TemplateVisualCustomActionOperationOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateVisualCustomActionOperation)(nil)).Elem()
}

func (o TemplateVisualCustomActionOperationOutput) ToTemplateVisualCustomActionOperationOutput() TemplateVisualCustomActionOperationOutput {
	return o
}

func (o TemplateVisualCustomActionOperationOutput) ToTemplateVisualCustomActionOperationOutputWithContext(ctx context.Context) TemplateVisualCustomActionOperationOutput {
	return o
}

func (o TemplateVisualCustomActionOperationOutput) FilterOperation() TemplateCustomActionFilterOperationPtrOutput {
	return o.ApplyT(func(v TemplateVisualCustomActionOperation) *TemplateCustomActionFilterOperation {
		return v.FilterOperation
	}).(TemplateCustomActionFilterOperationPtrOutput)
}

func (o TemplateVisualCustomActionOperationOutput) NavigationOperation() TemplateCustomActionNavigationOperationPtrOutput {
	return o.ApplyT(func(v TemplateVisualCustomActionOperation) *TemplateCustomActionNavigationOperation {
		return v.NavigationOperation
	}).(TemplateCustomActionNavigationOperationPtrOutput)
}

func (o TemplateVisualCustomActionOperationOutput) SetParametersOperation() TemplateCustomActionSetParametersOperationPtrOutput {
	return o.ApplyT(func(v TemplateVisualCustomActionOperation) *TemplateCustomActionSetParametersOperation {
		return v.SetParametersOperation
	}).(TemplateCustomActionSetParametersOperationPtrOutput)
}

func (o TemplateVisualCustomActionOperationOutput) UrlOperation() TemplateCustomActionUrlOperationPtrOutput {
	return o.ApplyT(func(v TemplateVisualCustomActionOperation) *TemplateCustomActionUrlOperation { return v.UrlOperation }).(TemplateCustomActionUrlOperationPtrOutput)
}

type TemplateVisualCustomActionOperationArrayOutput struct{ *pulumi.OutputState }

func (TemplateVisualCustomActionOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemplateVisualCustomActionOperation)(nil)).Elem()
}

func (o TemplateVisualCustomActionOperationArrayOutput) ToTemplateVisualCustomActionOperationArrayOutput() TemplateVisualCustomActionOperationArrayOutput {
	return o
}

func (o TemplateVisualCustomActionOperationArrayOutput) ToTemplateVisualCustomActionOperationArrayOutputWithContext(ctx context.Context) TemplateVisualCustomActionOperationArrayOutput {
	return o
}

func (o TemplateVisualCustomActionOperationArrayOutput) Index(i pulumi.IntInput) TemplateVisualCustomActionOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemplateVisualCustomActionOperation {
		return vs[0].([]TemplateVisualCustomActionOperation)[vs[1].(int)]
	}).(TemplateVisualCustomActionOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionTagConfigurationInput)(nil)).Elem(), DataSetRowLevelPermissionTagConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionTagConfigurationPtrInput)(nil)).Elem(), DataSetRowLevelPermissionTagConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionTagRuleInput)(nil)).Elem(), DataSetRowLevelPermissionTagRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetRowLevelPermissionTagRuleArrayInput)(nil)).Elem(), DataSetRowLevelPermissionTagRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetS3SourceInput)(nil)).Elem(), DataSetS3SourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetS3SourcePtrInput)(nil)).Elem(), DataSetS3SourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStringDatasetParameterInput)(nil)).Elem(), DataSetStringDatasetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStringDatasetParameterPtrInput)(nil)).Elem(), DataSetStringDatasetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStringDatasetParameterDefaultValuesInput)(nil)).Elem(), DataSetStringDatasetParameterDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetStringDatasetParameterDefaultValuesPtrInput)(nil)).Elem(), DataSetStringDatasetParameterDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTagColumnOperationInput)(nil)).Elem(), DataSetTagColumnOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTagColumnOperationPtrInput)(nil)).Elem(), DataSetTagColumnOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTransformOperationInput)(nil)).Elem(), DataSetTransformOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetTransformOperationArrayInput)(nil)).Elem(), DataSetTransformOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUploadSettingsInput)(nil)).Elem(), DataSetUploadSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUploadSettingsPtrInput)(nil)).Elem(), DataSetUploadSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUsageConfigurationInput)(nil)).Elem(), DataSetUsageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSetUsageConfigurationPtrInput)(nil)).Elem(), DataSetUsageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonElasticsearchParametersInput)(nil)).Elem(), DataSourceAmazonElasticsearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonElasticsearchParametersPtrInput)(nil)).Elem(), DataSourceAmazonElasticsearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonOpenSearchParametersInput)(nil)).Elem(), DataSourceAmazonOpenSearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAmazonOpenSearchParametersPtrInput)(nil)).Elem(), DataSourceAmazonOpenSearchParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAthenaParametersInput)(nil)).Elem(), DataSourceAthenaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAthenaParametersPtrInput)(nil)).Elem(), DataSourceAthenaParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraParametersInput)(nil)).Elem(), DataSourceAuroraParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraParametersPtrInput)(nil)).Elem(), DataSourceAuroraParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraPostgreSqlParametersInput)(nil)).Elem(), DataSourceAuroraPostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceAuroraPostgreSqlParametersPtrInput)(nil)).Elem(), DataSourceAuroraPostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialPairInput)(nil)).Elem(), DataSourceCredentialPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialPairPtrInput)(nil)).Elem(), DataSourceCredentialPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialsInput)(nil)).Elem(), DataSourceCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCredentialsPtrInput)(nil)).Elem(), DataSourceCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabricksParametersInput)(nil)).Elem(), DataSourceDatabricksParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabricksParametersPtrInput)(nil)).Elem(), DataSourceDatabricksParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoInput)(nil)).Elem(), DataSourceErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceErrorInfoPtrInput)(nil)).Elem(), DataSourceErrorInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceManifestFileLocationInput)(nil)).Elem(), DataSourceManifestFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceManifestFileLocationPtrInput)(nil)).Elem(), DataSourceManifestFileLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMariaDbParametersInput)(nil)).Elem(), DataSourceMariaDbParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMariaDbParametersPtrInput)(nil)).Elem(), DataSourceMariaDbParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMySqlParametersInput)(nil)).Elem(), DataSourceMySqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMySqlParametersPtrInput)(nil)).Elem(), DataSourceMySqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOracleParametersInput)(nil)).Elem(), DataSourceOracleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOracleParametersPtrInput)(nil)).Elem(), DataSourceOracleParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersInput)(nil)).Elem(), DataSourceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersPtrInput)(nil)).Elem(), DataSourceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParametersArrayInput)(nil)).Elem(), DataSourceParametersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePostgreSqlParametersInput)(nil)).Elem(), DataSourcePostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePostgreSqlParametersPtrInput)(nil)).Elem(), DataSourcePostgreSqlParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePrestoParametersInput)(nil)).Elem(), DataSourcePrestoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePrestoParametersPtrInput)(nil)).Elem(), DataSourcePrestoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsParametersInput)(nil)).Elem(), DataSourceRdsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRdsParametersPtrInput)(nil)).Elem(), DataSourceRdsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRedshiftParametersInput)(nil)).Elem(), DataSourceRedshiftParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRedshiftParametersPtrInput)(nil)).Elem(), DataSourceRedshiftParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceResourcePermissionInput)(nil)).Elem(), DataSourceResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceResourcePermissionArrayInput)(nil)).Elem(), DataSourceResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3ParametersInput)(nil)).Elem(), DataSourceS3ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3ParametersPtrInput)(nil)).Elem(), DataSourceS3ParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSnowflakeParametersInput)(nil)).Elem(), DataSourceSnowflakeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSnowflakeParametersPtrInput)(nil)).Elem(), DataSourceSnowflakeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSparkParametersInput)(nil)).Elem(), DataSourceSparkParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSparkParametersPtrInput)(nil)).Elem(), DataSourceSparkParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSqlServerParametersInput)(nil)).Elem(), DataSourceSqlServerParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSqlServerParametersPtrInput)(nil)).Elem(), DataSourceSqlServerParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSslPropertiesInput)(nil)).Elem(), DataSourceSslPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSslPropertiesPtrInput)(nil)).Elem(), DataSourceSslPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceStarburstParametersInput)(nil)).Elem(), DataSourceStarburstParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceStarburstParametersPtrInput)(nil)).Elem(), DataSourceStarburstParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTeradataParametersInput)(nil)).Elem(), DataSourceTeradataParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTeradataParametersPtrInput)(nil)).Elem(), DataSourceTeradataParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTrinoParametersInput)(nil)).Elem(), DataSourceTrinoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTrinoParametersPtrInput)(nil)).Elem(), DataSourceTrinoParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVpcConnectionPropertiesInput)(nil)).Elem(), DataSourceVpcConnectionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVpcConnectionPropertiesPtrInput)(nil)).Elem(), DataSourceVpcConnectionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapInput)(nil)).Elem(), RefreshScheduleMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapPtrInput)(nil)).Elem(), RefreshScheduleMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesPtrInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrInput)(nil)).Elem(), RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationFunctionInput)(nil)).Elem(), TemplateAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationFunctionPtrInput)(nil)).Elem(), TemplateAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationSortConfigurationInput)(nil)).Elem(), TemplateAggregationSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAggregationSortConfigurationArrayInput)(nil)).Elem(), TemplateAggregationSortConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAllSheetsFilterScopeConfigurationInput)(nil)).Elem(), TemplateAllSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAllSheetsFilterScopeConfigurationPtrInput)(nil)).Elem(), TemplateAllSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnalysisDefaultsInput)(nil)).Elem(), TemplateAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnalysisDefaultsPtrInput)(nil)).Elem(), TemplateAnalysisDefaultsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorDateConfigurationInput)(nil)).Elem(), TemplateAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAnchorDateConfigurationPtrInput)(nil)).Elem(), TemplateAnchorDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisConfigurationInput)(nil)).Elem(), TemplateArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisConfigurationPtrInput)(nil)).Elem(), TemplateArcAxisConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisDisplayRangeInput)(nil)).Elem(), TemplateArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcAxisDisplayRangePtrInput)(nil)).Elem(), TemplateArcAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcConfigurationInput)(nil)).Elem(), TemplateArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcConfigurationPtrInput)(nil)).Elem(), TemplateArcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcOptionsInput)(nil)).Elem(), TemplateArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateArcOptionsPtrInput)(nil)).Elem(), TemplateArcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAssetOptionsInput)(nil)).Elem(), TemplateAssetOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAssetOptionsPtrInput)(nil)).Elem(), TemplateAssetOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAttributeAggregationFunctionInput)(nil)).Elem(), TemplateAttributeAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAttributeAggregationFunctionPtrInput)(nil)).Elem(), TemplateAttributeAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDataOptionsInput)(nil)).Elem(), TemplateAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDataOptionsPtrInput)(nil)).Elem(), TemplateAxisDataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayDataDrivenRangeInput)(nil)).Elem(), TemplateAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayDataDrivenRangePtrInput)(nil)).Elem(), TemplateAxisDisplayDataDrivenRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayMinMaxRangeInput)(nil)).Elem(), TemplateAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayMinMaxRangePtrInput)(nil)).Elem(), TemplateAxisDisplayMinMaxRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayOptionsInput)(nil)).Elem(), TemplateAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayOptionsPtrInput)(nil)).Elem(), TemplateAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayRangeInput)(nil)).Elem(), TemplateAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisDisplayRangePtrInput)(nil)).Elem(), TemplateAxisDisplayRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelOptionsInput)(nil)).Elem(), TemplateAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelOptionsArrayInput)(nil)).Elem(), TemplateAxisLabelOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelReferenceOptionsInput)(nil)).Elem(), TemplateAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLabelReferenceOptionsPtrInput)(nil)).Elem(), TemplateAxisLabelReferenceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLinearScaleInput)(nil)).Elem(), TemplateAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLinearScalePtrInput)(nil)).Elem(), TemplateAxisLinearScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLogarithmicScaleInput)(nil)).Elem(), TemplateAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisLogarithmicScalePtrInput)(nil)).Elem(), TemplateAxisLogarithmicScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisScaleInput)(nil)).Elem(), TemplateAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisScalePtrInput)(nil)).Elem(), TemplateAxisScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisTickLabelOptionsInput)(nil)).Elem(), TemplateAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateAxisTickLabelOptionsPtrInput)(nil)).Elem(), TemplateAxisTickLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateBarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartConfigurationInput)(nil)).Elem(), TemplateBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartConfigurationPtrInput)(nil)).Elem(), TemplateBarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartFieldWellsInput)(nil)).Elem(), TemplateBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartFieldWellsPtrInput)(nil)).Elem(), TemplateBarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartSortConfigurationInput)(nil)).Elem(), TemplateBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartSortConfigurationPtrInput)(nil)).Elem(), TemplateBarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartVisualInput)(nil)).Elem(), TemplateBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBarChartVisualPtrInput)(nil)).Elem(), TemplateBarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinCountOptionsInput)(nil)).Elem(), TemplateBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinCountOptionsPtrInput)(nil)).Elem(), TemplateBinCountOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinWidthOptionsInput)(nil)).Elem(), TemplateBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBinWidthOptionsPtrInput)(nil)).Elem(), TemplateBinWidthOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionConfigurationInput)(nil)).Elem(), TemplateBodySectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionConfigurationArrayInput)(nil)).Elem(), TemplateBodySectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBodySectionContentInput)(nil)).Elem(), TemplateBodySectionContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWellsInput)(nil)).Elem(), TemplateBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateBoxPlotAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotChartConfigurationInput)(nil)).Elem(), TemplateBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotChartConfigurationPtrInput)(nil)).Elem(), TemplateBoxPlotChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFieldWellsInput)(nil)).Elem(), TemplateBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotFieldWellsPtrInput)(nil)).Elem(), TemplateBoxPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotOptionsInput)(nil)).Elem(), TemplateBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotOptionsPtrInput)(nil)).Elem(), TemplateBoxPlotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotSortConfigurationInput)(nil)).Elem(), TemplateBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotSortConfigurationPtrInput)(nil)).Elem(), TemplateBoxPlotSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotStyleOptionsInput)(nil)).Elem(), TemplateBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotStyleOptionsPtrInput)(nil)).Elem(), TemplateBoxPlotStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotVisualInput)(nil)).Elem(), TemplateBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateBoxPlotVisualPtrInput)(nil)).Elem(), TemplateBoxPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedFieldInput)(nil)).Elem(), TemplateCalculatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedFieldArrayInput)(nil)).Elem(), TemplateCalculatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedMeasureFieldInput)(nil)).Elem(), TemplateCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCalculatedMeasureFieldPtrInput)(nil)).Elem(), TemplateCalculatedMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlConfigurationInput)(nil)).Elem(), TemplateCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlConfigurationPtrInput)(nil)).Elem(), TemplateCascadingControlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlSourceInput)(nil)).Elem(), TemplateCascadingControlSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCascadingControlSourceArrayInput)(nil)).Elem(), TemplateCascadingControlSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalDimensionFieldInput)(nil)).Elem(), TemplateCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalDimensionFieldPtrInput)(nil)).Elem(), TemplateCategoricalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalMeasureFieldInput)(nil)).Elem(), TemplateCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoricalMeasureFieldPtrInput)(nil)).Elem(), TemplateCategoricalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryDrillDownFilterInput)(nil)).Elem(), TemplateCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryDrillDownFilterPtrInput)(nil)).Elem(), TemplateCategoryDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterInput)(nil)).Elem(), TemplateCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterPtrInput)(nil)).Elem(), TemplateCategoryFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterConfigurationInput)(nil)).Elem(), TemplateCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCategoryFilterConfigurationPtrInput)(nil)).Elem(), TemplateCategoryFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateChartAxisLabelOptionsInput)(nil)).Elem(), TemplateChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateChartAxisLabelOptionsPtrInput)(nil)).Elem(), TemplateChartAxisLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateClusterMarkerInput)(nil)).Elem(), TemplateClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateClusterMarkerPtrInput)(nil)).Elem(), TemplateClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateClusterMarkerConfigurationInput)(nil)).Elem(), TemplateClusterMarkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateClusterMarkerConfigurationPtrInput)(nil)).Elem(), TemplateClusterMarkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorScaleInput)(nil)).Elem(), TemplateColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorScalePtrInput)(nil)).Elem(), TemplateColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorsConfigurationInput)(nil)).Elem(), TemplateColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColorsConfigurationPtrInput)(nil)).Elem(), TemplateColorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnConfigurationInput)(nil)).Elem(), TemplateColumnConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnConfigurationArrayInput)(nil)).Elem(), TemplateColumnConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnGroupColumnSchemaInput)(nil)).Elem(), TemplateColumnGroupColumnSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnGroupColumnSchemaArrayInput)(nil)).Elem(), TemplateColumnGroupColumnSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnGroupSchemaInput)(nil)).Elem(), TemplateColumnGroupSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnGroupSchemaArrayInput)(nil)).Elem(), TemplateColumnGroupSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnHierarchyInput)(nil)).Elem(), TemplateColumnHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnHierarchyArrayInput)(nil)).Elem(), TemplateColumnHierarchyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnIdentifierInput)(nil)).Elem(), TemplateColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnIdentifierPtrInput)(nil)).Elem(), TemplateColumnIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnIdentifierArrayInput)(nil)).Elem(), TemplateColumnIdentifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnSchemaInput)(nil)).Elem(), TemplateColumnSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnSchemaArrayInput)(nil)).Elem(), TemplateColumnSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnSortInput)(nil)).Elem(), TemplateColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnSortPtrInput)(nil)).Elem(), TemplateColumnSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnTooltipItemInput)(nil)).Elem(), TemplateColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateColumnTooltipItemPtrInput)(nil)).Elem(), TemplateColumnTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateComboChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartConfigurationInput)(nil)).Elem(), TemplateComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartConfigurationPtrInput)(nil)).Elem(), TemplateComboChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartFieldWellsInput)(nil)).Elem(), TemplateComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartFieldWellsPtrInput)(nil)).Elem(), TemplateComboChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartSortConfigurationInput)(nil)).Elem(), TemplateComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartSortConfigurationPtrInput)(nil)).Elem(), TemplateComboChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartVisualInput)(nil)).Elem(), TemplateComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComboChartVisualPtrInput)(nil)).Elem(), TemplateComboChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonConfigurationInput)(nil)).Elem(), TemplateComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonConfigurationPtrInput)(nil)).Elem(), TemplateComparisonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonFormatConfigurationInput)(nil)).Elem(), TemplateComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComparisonFormatConfigurationPtrInput)(nil)).Elem(), TemplateComparisonFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComputationInput)(nil)).Elem(), TemplateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateComputationArrayInput)(nil)).Elem(), TemplateComputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingColorInput)(nil)).Elem(), TemplateConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingColorPtrInput)(nil)).Elem(), TemplateConditionalFormattingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingCustomIconConditionInput)(nil)).Elem(), TemplateConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingCustomIconConditionPtrInput)(nil)).Elem(), TemplateConditionalFormattingCustomIconConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingCustomIconOptionsInput)(nil)).Elem(), TemplateConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingCustomIconOptionsPtrInput)(nil)).Elem(), TemplateConditionalFormattingCustomIconOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingGradientColorInput)(nil)).Elem(), TemplateConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingGradientColorPtrInput)(nil)).Elem(), TemplateConditionalFormattingGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconInput)(nil)).Elem(), TemplateConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconPtrInput)(nil)).Elem(), TemplateConditionalFormattingIconArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconDisplayConfigurationInput)(nil)).Elem(), TemplateConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconDisplayConfigurationPtrInput)(nil)).Elem(), TemplateConditionalFormattingIconDisplayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconSetInput)(nil)).Elem(), TemplateConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingIconSetPtrInput)(nil)).Elem(), TemplateConditionalFormattingIconSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingSolidColorInput)(nil)).Elem(), TemplateConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateConditionalFormattingSolidColorPtrInput)(nil)).Elem(), TemplateConditionalFormattingSolidColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateContributionAnalysisDefaultInput)(nil)).Elem(), TemplateContributionAnalysisDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateContributionAnalysisDefaultArrayInput)(nil)).Elem(), TemplateContributionAnalysisDefaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCurrencyDisplayFormatConfigurationInput)(nil)).Elem(), TemplateCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCurrencyDisplayFormatConfigurationPtrInput)(nil)).Elem(), TemplateCurrencyDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionFilterOperationInput)(nil)).Elem(), TemplateCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionFilterOperationPtrInput)(nil)).Elem(), TemplateCustomActionFilterOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionNavigationOperationInput)(nil)).Elem(), TemplateCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionNavigationOperationPtrInput)(nil)).Elem(), TemplateCustomActionNavigationOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionSetParametersOperationInput)(nil)).Elem(), TemplateCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionSetParametersOperationPtrInput)(nil)).Elem(), TemplateCustomActionSetParametersOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionUrlOperationInput)(nil)).Elem(), TemplateCustomActionUrlOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomActionUrlOperationPtrInput)(nil)).Elem(), TemplateCustomActionUrlOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomColorInput)(nil)).Elem(), TemplateCustomColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomColorArrayInput)(nil)).Elem(), TemplateCustomColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentConfigurationInput)(nil)).Elem(), TemplateCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentConfigurationPtrInput)(nil)).Elem(), TemplateCustomContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentVisualInput)(nil)).Elem(), TemplateCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomContentVisualPtrInput)(nil)).Elem(), TemplateCustomContentVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomFilterConfigurationInput)(nil)).Elem(), TemplateCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomFilterConfigurationPtrInput)(nil)).Elem(), TemplateCustomFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomFilterListConfigurationInput)(nil)).Elem(), TemplateCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomFilterListConfigurationPtrInput)(nil)).Elem(), TemplateCustomFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomNarrativeOptionsInput)(nil)).Elem(), TemplateCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomNarrativeOptionsPtrInput)(nil)).Elem(), TemplateCustomNarrativeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomParameterValuesInput)(nil)).Elem(), TemplateCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomParameterValuesPtrInput)(nil)).Elem(), TemplateCustomParameterValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomValuesConfigurationInput)(nil)).Elem(), TemplateCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCustomValuesConfigurationPtrInput)(nil)).Elem(), TemplateCustomValuesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataBarsOptionsInput)(nil)).Elem(), TemplateDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataBarsOptionsPtrInput)(nil)).Elem(), TemplateDataBarsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataColorInput)(nil)).Elem(), TemplateDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataColorPtrInput)(nil)).Elem(), TemplateDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataColorArrayInput)(nil)).Elem(), TemplateDataColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataFieldSeriesItemInput)(nil)).Elem(), TemplateDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataFieldSeriesItemPtrInput)(nil)).Elem(), TemplateDataFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelOptionsInput)(nil)).Elem(), TemplateDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelOptionsPtrInput)(nil)).Elem(), TemplateDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelTypeInput)(nil)).Elem(), TemplateDataLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataLabelTypeArrayInput)(nil)).Elem(), TemplateDataLabelTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathColorInput)(nil)).Elem(), TemplateDataPathColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathColorArrayInput)(nil)).Elem(), TemplateDataPathColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathLabelTypeInput)(nil)).Elem(), TemplateDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathLabelTypePtrInput)(nil)).Elem(), TemplateDataPathLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathSortInput)(nil)).Elem(), TemplateDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathSortPtrInput)(nil)).Elem(), TemplateDataPathSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathTypeInput)(nil)).Elem(), TemplateDataPathTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathTypePtrInput)(nil)).Elem(), TemplateDataPathTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathValueInput)(nil)).Elem(), TemplateDataPathValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataPathValueArrayInput)(nil)).Elem(), TemplateDataPathValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetConfigurationInput)(nil)).Elem(), TemplateDataSetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetConfigurationArrayInput)(nil)).Elem(), TemplateDataSetConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetReferenceInput)(nil)).Elem(), TemplateDataSetReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetReferenceArrayInput)(nil)).Elem(), TemplateDataSetReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetSchemaInput)(nil)).Elem(), TemplateDataSetSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDataSetSchemaPtrInput)(nil)).Elem(), TemplateDataSetSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateAxisOptionsInput)(nil)).Elem(), TemplateDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateAxisOptionsPtrInput)(nil)).Elem(), TemplateDateAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateDimensionFieldInput)(nil)).Elem(), TemplateDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateDimensionFieldPtrInput)(nil)).Elem(), TemplateDateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateMeasureFieldInput)(nil)).Elem(), TemplateDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateMeasureFieldPtrInput)(nil)).Elem(), TemplateDateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeDefaultValuesInput)(nil)).Elem(), TemplateDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeDefaultValuesPtrInput)(nil)).Elem(), TemplateDateTimeDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeFormatConfigurationInput)(nil)).Elem(), TemplateDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeFormatConfigurationPtrInput)(nil)).Elem(), TemplateDateTimeFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeHierarchyInput)(nil)).Elem(), TemplateDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeHierarchyPtrInput)(nil)).Elem(), TemplateDateTimeHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeParameterDeclarationInput)(nil)).Elem(), TemplateDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeParameterDeclarationPtrInput)(nil)).Elem(), TemplateDateTimeParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimePickerControlDisplayOptionsInput)(nil)).Elem(), TemplateDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimePickerControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateDateTimePickerControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeValueWhenUnsetConfigurationInput)(nil)).Elem(), TemplateDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDateTimeValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), TemplateDateTimeValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalDefaultValuesInput)(nil)).Elem(), TemplateDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalDefaultValuesPtrInput)(nil)).Elem(), TemplateDecimalDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalParameterDeclarationInput)(nil)).Elem(), TemplateDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalParameterDeclarationPtrInput)(nil)).Elem(), TemplateDecimalParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalPlacesConfigurationInput)(nil)).Elem(), TemplateDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalPlacesConfigurationPtrInput)(nil)).Elem(), TemplateDecimalPlacesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalValueWhenUnsetConfigurationInput)(nil)).Elem(), TemplateDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDecimalValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), TemplateDecimalValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultFreeFormLayoutConfigurationInput)(nil)).Elem(), TemplateDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), TemplateDefaultFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultGridLayoutConfigurationInput)(nil)).Elem(), TemplateDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultGridLayoutConfigurationPtrInput)(nil)).Elem(), TemplateDefaultGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultInteractiveLayoutConfigurationInput)(nil)).Elem(), TemplateDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultInteractiveLayoutConfigurationPtrInput)(nil)).Elem(), TemplateDefaultInteractiveLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultNewSheetConfigurationInput)(nil)).Elem(), TemplateDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultNewSheetConfigurationPtrInput)(nil)).Elem(), TemplateDefaultNewSheetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultPaginatedLayoutConfigurationInput)(nil)).Elem(), TemplateDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultPaginatedLayoutConfigurationPtrInput)(nil)).Elem(), TemplateDefaultPaginatedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultSectionBasedLayoutConfigurationInput)(nil)).Elem(), TemplateDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefaultSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), TemplateDefaultSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDestinationParameterValueConfigurationInput)(nil)).Elem(), TemplateDestinationParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDimensionFieldInput)(nil)).Elem(), TemplateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDimensionFieldPtrInput)(nil)).Elem(), TemplateDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDimensionFieldArrayInput)(nil)).Elem(), TemplateDimensionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDonutCenterOptionsInput)(nil)).Elem(), TemplateDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDonutCenterOptionsPtrInput)(nil)).Elem(), TemplateDonutCenterOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDonutOptionsInput)(nil)).Elem(), TemplateDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDonutOptionsPtrInput)(nil)).Elem(), TemplateDonutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDrillDownFilterInput)(nil)).Elem(), TemplateDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDrillDownFilterArrayInput)(nil)).Elem(), TemplateDrillDownFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDropDownControlDisplayOptionsInput)(nil)).Elem(), TemplateDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDropDownControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateDropDownControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDynamicDefaultValueInput)(nil)).Elem(), TemplateDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDynamicDefaultValuePtrInput)(nil)).Elem(), TemplateDynamicDefaultValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateEmptyVisualInput)(nil)).Elem(), TemplateEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateEmptyVisualPtrInput)(nil)).Elem(), TemplateEmptyVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExcludePeriodConfigurationInput)(nil)).Elem(), TemplateExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExcludePeriodConfigurationPtrInput)(nil)).Elem(), TemplateExcludePeriodConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExplicitHierarchyInput)(nil)).Elem(), TemplateExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExplicitHierarchyPtrInput)(nil)).Elem(), TemplateExplicitHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldBasedTooltipInput)(nil)).Elem(), TemplateFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldBasedTooltipPtrInput)(nil)).Elem(), TemplateFieldBasedTooltipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldLabelTypeInput)(nil)).Elem(), TemplateFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldLabelTypePtrInput)(nil)).Elem(), TemplateFieldLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSeriesItemInput)(nil)).Elem(), TemplateFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSeriesItemPtrInput)(nil)).Elem(), TemplateFieldSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSortInput)(nil)).Elem(), TemplateFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSortPtrInput)(nil)).Elem(), TemplateFieldSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSortOptionsInput)(nil)).Elem(), TemplateFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldSortOptionsArrayInput)(nil)).Elem(), TemplateFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldTooltipItemInput)(nil)).Elem(), TemplateFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFieldTooltipItemPtrInput)(nil)).Elem(), TemplateFieldTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapAggregatedFieldWellsInput)(nil)).Elem(), TemplateFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateFilledMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConditionalFormattingInput)(nil)).Elem(), TemplateFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConditionalFormattingPtrInput)(nil)).Elem(), TemplateFilledMapConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConditionalFormattingOptionInput)(nil)).Elem(), TemplateFilledMapConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConditionalFormattingOptionArrayInput)(nil)).Elem(), TemplateFilledMapConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConfigurationInput)(nil)).Elem(), TemplateFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapConfigurationPtrInput)(nil)).Elem(), TemplateFilledMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapFieldWellsInput)(nil)).Elem(), TemplateFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapFieldWellsPtrInput)(nil)).Elem(), TemplateFilledMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapShapeConditionalFormattingInput)(nil)).Elem(), TemplateFilledMapShapeConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapSortConfigurationInput)(nil)).Elem(), TemplateFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapSortConfigurationPtrInput)(nil)).Elem(), TemplateFilledMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapVisualInput)(nil)).Elem(), TemplateFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilledMapVisualPtrInput)(nil)).Elem(), TemplateFilledMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterInput)(nil)).Elem(), TemplateFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterArrayInput)(nil)).Elem(), TemplateFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterControlInput)(nil)).Elem(), TemplateFilterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterControlArrayInput)(nil)).Elem(), TemplateFilterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterDateTimePickerControlInput)(nil)).Elem(), TemplateFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterDateTimePickerControlPtrInput)(nil)).Elem(), TemplateFilterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterDropDownControlInput)(nil)).Elem(), TemplateFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterDropDownControlPtrInput)(nil)).Elem(), TemplateFilterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterGroupInput)(nil)).Elem(), TemplateFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterGroupArrayInput)(nil)).Elem(), TemplateFilterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterListConfigurationInput)(nil)).Elem(), TemplateFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterListConfigurationPtrInput)(nil)).Elem(), TemplateFilterListConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterListControlInput)(nil)).Elem(), TemplateFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterListControlPtrInput)(nil)).Elem(), TemplateFilterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterOperationSelectedFieldsConfigurationInput)(nil)).Elem(), TemplateFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterOperationSelectedFieldsConfigurationPtrInput)(nil)).Elem(), TemplateFilterOperationSelectedFieldsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterOperationTargetVisualsConfigurationInput)(nil)).Elem(), TemplateFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterOperationTargetVisualsConfigurationPtrInput)(nil)).Elem(), TemplateFilterOperationTargetVisualsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterRelativeDateTimeControlInput)(nil)).Elem(), TemplateFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterRelativeDateTimeControlPtrInput)(nil)).Elem(), TemplateFilterRelativeDateTimeControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterScopeConfigurationInput)(nil)).Elem(), TemplateFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterSelectableValuesInput)(nil)).Elem(), TemplateFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterSelectableValuesPtrInput)(nil)).Elem(), TemplateFilterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterSliderControlInput)(nil)).Elem(), TemplateFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterSliderControlPtrInput)(nil)).Elem(), TemplateFilterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterTextAreaControlInput)(nil)).Elem(), TemplateFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterTextAreaControlPtrInput)(nil)).Elem(), TemplateFilterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterTextFieldControlInput)(nil)).Elem(), TemplateFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFilterTextFieldControlPtrInput)(nil)).Elem(), TemplateFilterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontConfigurationInput)(nil)).Elem(), TemplateFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontConfigurationPtrInput)(nil)).Elem(), TemplateFontConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontSizeInput)(nil)).Elem(), TemplateFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontSizePtrInput)(nil)).Elem(), TemplateFontSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontWeightInput)(nil)).Elem(), TemplateFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFontWeightPtrInput)(nil)).Elem(), TemplateFontWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastComputationInput)(nil)).Elem(), TemplateForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastComputationPtrInput)(nil)).Elem(), TemplateForecastComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastConfigurationInput)(nil)).Elem(), TemplateForecastConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastConfigurationArrayInput)(nil)).Elem(), TemplateForecastConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastScenarioInput)(nil)).Elem(), TemplateForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateForecastScenarioPtrInput)(nil)).Elem(), TemplateForecastScenarioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFormatConfigurationInput)(nil)).Elem(), TemplateFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFormatConfigurationPtrInput)(nil)).Elem(), TemplateFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutCanvasSizeOptionsInput)(nil)).Elem(), TemplateFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateFreeFormLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutConfigurationInput)(nil)).Elem(), TemplateFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutConfigurationPtrInput)(nil)).Elem(), TemplateFreeFormLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementInput)(nil)).Elem(), TemplateFreeFormLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementArrayInput)(nil)).Elem(), TemplateFreeFormLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementBackgroundStyleInput)(nil)).Elem(), TemplateFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementBackgroundStylePtrInput)(nil)).Elem(), TemplateFreeFormLayoutElementBackgroundStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementBorderStyleInput)(nil)).Elem(), TemplateFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutElementBorderStylePtrInput)(nil)).Elem(), TemplateFreeFormLayoutElementBorderStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateFreeFormLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormSectionLayoutConfigurationInput)(nil)).Elem(), TemplateFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFreeFormSectionLayoutConfigurationPtrInput)(nil)).Elem(), TemplateFreeFormSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateFunnelChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartConfigurationInput)(nil)).Elem(), TemplateFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartConfigurationPtrInput)(nil)).Elem(), TemplateFunnelChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartDataLabelOptionsInput)(nil)).Elem(), TemplateFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartDataLabelOptionsPtrInput)(nil)).Elem(), TemplateFunnelChartDataLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartFieldWellsInput)(nil)).Elem(), TemplateFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartFieldWellsPtrInput)(nil)).Elem(), TemplateFunnelChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartSortConfigurationInput)(nil)).Elem(), TemplateFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartSortConfigurationPtrInput)(nil)).Elem(), TemplateFunnelChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartVisualInput)(nil)).Elem(), TemplateFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFunnelChartVisualPtrInput)(nil)).Elem(), TemplateFunnelChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartArcConditionalFormattingInput)(nil)).Elem(), TemplateGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartArcConditionalFormattingPtrInput)(nil)).Elem(), TemplateGaugeChartArcConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConditionalFormattingInput)(nil)).Elem(), TemplateGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConditionalFormattingPtrInput)(nil)).Elem(), TemplateGaugeChartConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConditionalFormattingOptionInput)(nil)).Elem(), TemplateGaugeChartConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConditionalFormattingOptionArrayInput)(nil)).Elem(), TemplateGaugeChartConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConfigurationInput)(nil)).Elem(), TemplateGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartConfigurationPtrInput)(nil)).Elem(), TemplateGaugeChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartFieldWellsInput)(nil)).Elem(), TemplateGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartFieldWellsPtrInput)(nil)).Elem(), TemplateGaugeChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartOptionsInput)(nil)).Elem(), TemplateGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartOptionsPtrInput)(nil)).Elem(), TemplateGaugeChartOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartPrimaryValueConditionalFormattingInput)(nil)).Elem(), TemplateGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), TemplateGaugeChartPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartVisualInput)(nil)).Elem(), TemplateGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGaugeChartVisualPtrInput)(nil)).Elem(), TemplateGaugeChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialCoordinateBoundsInput)(nil)).Elem(), TemplateGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialCoordinateBoundsPtrInput)(nil)).Elem(), TemplateGeospatialCoordinateBoundsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapColorScaleInput)(nil)).Elem(), TemplateGeospatialHeatmapColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapColorScalePtrInput)(nil)).Elem(), TemplateGeospatialHeatmapColorScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapConfigurationInput)(nil)).Elem(), TemplateGeospatialHeatmapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapConfigurationPtrInput)(nil)).Elem(), TemplateGeospatialHeatmapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapDataColorInput)(nil)).Elem(), TemplateGeospatialHeatmapDataColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialHeatmapDataColorArrayInput)(nil)).Elem(), TemplateGeospatialHeatmapDataColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapAggregatedFieldWellsInput)(nil)).Elem(), TemplateGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateGeospatialMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapConfigurationInput)(nil)).Elem(), TemplateGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapConfigurationPtrInput)(nil)).Elem(), TemplateGeospatialMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapFieldWellsInput)(nil)).Elem(), TemplateGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapFieldWellsPtrInput)(nil)).Elem(), TemplateGeospatialMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapStyleOptionsInput)(nil)).Elem(), TemplateGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapStyleOptionsPtrInput)(nil)).Elem(), TemplateGeospatialMapStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapVisualInput)(nil)).Elem(), TemplateGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialMapVisualPtrInput)(nil)).Elem(), TemplateGeospatialMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialPointStyleOptionsInput)(nil)).Elem(), TemplateGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialPointStyleOptionsPtrInput)(nil)).Elem(), TemplateGeospatialPointStyleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialWindowOptionsInput)(nil)).Elem(), TemplateGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeospatialWindowOptionsPtrInput)(nil)).Elem(), TemplateGeospatialWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGlobalTableBorderOptionsInput)(nil)).Elem(), TemplateGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGlobalTableBorderOptionsPtrInput)(nil)).Elem(), TemplateGlobalTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGradientColorInput)(nil)).Elem(), TemplateGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGradientColorPtrInput)(nil)).Elem(), TemplateGradientColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGradientStopInput)(nil)).Elem(), TemplateGradientStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGradientStopArrayInput)(nil)).Elem(), TemplateGradientStopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutCanvasSizeOptionsInput)(nil)).Elem(), TemplateGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateGridLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutConfigurationInput)(nil)).Elem(), TemplateGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutConfigurationPtrInput)(nil)).Elem(), TemplateGridLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutElementInput)(nil)).Elem(), TemplateGridLayoutElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutElementArrayInput)(nil)).Elem(), TemplateGridLayoutElementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutScreenCanvasSizeOptionsInput)(nil)).Elem(), TemplateGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGridLayoutScreenCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateGridLayoutScreenCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGrowthRateComputationInput)(nil)).Elem(), TemplateGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGrowthRateComputationPtrInput)(nil)).Elem(), TemplateGrowthRateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeaderFooterSectionConfigurationInput)(nil)).Elem(), TemplateHeaderFooterSectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeaderFooterSectionConfigurationArrayInput)(nil)).Elem(), TemplateHeaderFooterSectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapAggregatedFieldWellsInput)(nil)).Elem(), TemplateHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateHeatMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapConfigurationInput)(nil)).Elem(), TemplateHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapConfigurationPtrInput)(nil)).Elem(), TemplateHeatMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapFieldWellsInput)(nil)).Elem(), TemplateHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapFieldWellsPtrInput)(nil)).Elem(), TemplateHeatMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapSortConfigurationInput)(nil)).Elem(), TemplateHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapSortConfigurationPtrInput)(nil)).Elem(), TemplateHeatMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapVisualInput)(nil)).Elem(), TemplateHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHeatMapVisualPtrInput)(nil)).Elem(), TemplateHeatMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramAggregatedFieldWellsInput)(nil)).Elem(), TemplateHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateHistogramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramBinOptionsInput)(nil)).Elem(), TemplateHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramBinOptionsPtrInput)(nil)).Elem(), TemplateHistogramBinOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramConfigurationInput)(nil)).Elem(), TemplateHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramConfigurationPtrInput)(nil)).Elem(), TemplateHistogramConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramFieldWellsInput)(nil)).Elem(), TemplateHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramFieldWellsPtrInput)(nil)).Elem(), TemplateHistogramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramVisualInput)(nil)).Elem(), TemplateHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateHistogramVisualPtrInput)(nil)).Elem(), TemplateHistogramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateInsightConfigurationInput)(nil)).Elem(), TemplateInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateInsightConfigurationPtrInput)(nil)).Elem(), TemplateInsightConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateInsightVisualInput)(nil)).Elem(), TemplateInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateInsightVisualPtrInput)(nil)).Elem(), TemplateInsightVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerDefaultValuesInput)(nil)).Elem(), TemplateIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerDefaultValuesPtrInput)(nil)).Elem(), TemplateIntegerDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerParameterDeclarationInput)(nil)).Elem(), TemplateIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerParameterDeclarationPtrInput)(nil)).Elem(), TemplateIntegerParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerValueWhenUnsetConfigurationInput)(nil)).Elem(), TemplateIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateIntegerValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), TemplateIntegerValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateItemsLimitConfigurationInput)(nil)).Elem(), TemplateItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateItemsLimitConfigurationPtrInput)(nil)).Elem(), TemplateItemsLimitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiActualValueConditionalFormattingInput)(nil)).Elem(), TemplateKpiActualValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiActualValueConditionalFormattingPtrInput)(nil)).Elem(), TemplateKpiActualValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiComparisonValueConditionalFormattingInput)(nil)).Elem(), TemplateKpiComparisonValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiComparisonValueConditionalFormattingPtrInput)(nil)).Elem(), TemplateKpiComparisonValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConditionalFormattingInput)(nil)).Elem(), TemplateKpiConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConditionalFormattingPtrInput)(nil)).Elem(), TemplateKpiConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConditionalFormattingOptionInput)(nil)).Elem(), TemplateKpiConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConditionalFormattingOptionArrayInput)(nil)).Elem(), TemplateKpiConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConfigurationInput)(nil)).Elem(), TemplateKpiConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiConfigurationPtrInput)(nil)).Elem(), TemplateKpiConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiFieldWellsInput)(nil)).Elem(), TemplateKpiFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiFieldWellsPtrInput)(nil)).Elem(), TemplateKpiFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiOptionsInput)(nil)).Elem(), TemplateKpiOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiOptionsPtrInput)(nil)).Elem(), TemplateKpiOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiPrimaryValueConditionalFormattingInput)(nil)).Elem(), TemplateKpiPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiPrimaryValueConditionalFormattingPtrInput)(nil)).Elem(), TemplateKpiPrimaryValueConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiProgressBarConditionalFormattingInput)(nil)).Elem(), TemplateKpiProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiProgressBarConditionalFormattingPtrInput)(nil)).Elem(), TemplateKpiProgressBarConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSortConfigurationInput)(nil)).Elem(), TemplateKpiSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSortConfigurationPtrInput)(nil)).Elem(), TemplateKpiSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSparklineOptionsInput)(nil)).Elem(), TemplateKpiSparklineOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiSparklineOptionsPtrInput)(nil)).Elem(), TemplateKpiSparklineOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualInput)(nil)).Elem(), TemplateKpiVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualPtrInput)(nil)).Elem(), TemplateKpiVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualLayoutOptionsInput)(nil)).Elem(), TemplateKpiVisualLayoutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualLayoutOptionsPtrInput)(nil)).Elem(), TemplateKpiVisualLayoutOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualStandardLayoutInput)(nil)).Elem(), TemplateKpiVisualStandardLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKpiVisualStandardLayoutPtrInput)(nil)).Elem(), TemplateKpiVisualStandardLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLabelOptionsInput)(nil)).Elem(), TemplateLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLabelOptionsPtrInput)(nil)).Elem(), TemplateLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLayoutInput)(nil)).Elem(), TemplateLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLayoutArrayInput)(nil)).Elem(), TemplateLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLayoutConfigurationInput)(nil)).Elem(), TemplateLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLegendOptionsInput)(nil)).Elem(), TemplateLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLegendOptionsPtrInput)(nil)).Elem(), TemplateLegendOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateLineChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartConfigurationInput)(nil)).Elem(), TemplateLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartConfigurationPtrInput)(nil)).Elem(), TemplateLineChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartDefaultSeriesSettingsInput)(nil)).Elem(), TemplateLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartDefaultSeriesSettingsPtrInput)(nil)).Elem(), TemplateLineChartDefaultSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartFieldWellsInput)(nil)).Elem(), TemplateLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartFieldWellsPtrInput)(nil)).Elem(), TemplateLineChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartLineStyleSettingsInput)(nil)).Elem(), TemplateLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartLineStyleSettingsPtrInput)(nil)).Elem(), TemplateLineChartLineStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartMarkerStyleSettingsInput)(nil)).Elem(), TemplateLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartMarkerStyleSettingsPtrInput)(nil)).Elem(), TemplateLineChartMarkerStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartSeriesSettingsInput)(nil)).Elem(), TemplateLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartSeriesSettingsPtrInput)(nil)).Elem(), TemplateLineChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartSortConfigurationInput)(nil)).Elem(), TemplateLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartSortConfigurationPtrInput)(nil)).Elem(), TemplateLineChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartVisualInput)(nil)).Elem(), TemplateLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineChartVisualPtrInput)(nil)).Elem(), TemplateLineChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineSeriesAxisDisplayOptionsInput)(nil)).Elem(), TemplateLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLineSeriesAxisDisplayOptionsPtrInput)(nil)).Elem(), TemplateLineSeriesAxisDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlDisplayOptionsInput)(nil)).Elem(), TemplateListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateListControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlSearchOptionsInput)(nil)).Elem(), TemplateListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlSearchOptionsPtrInput)(nil)).Elem(), TemplateListControlSearchOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlSelectAllOptionsInput)(nil)).Elem(), TemplateListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateListControlSelectAllOptionsPtrInput)(nil)).Elem(), TemplateListControlSelectAllOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLoadingAnimationInput)(nil)).Elem(), TemplateLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLoadingAnimationPtrInput)(nil)).Elem(), TemplateLoadingAnimationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLocalNavigationConfigurationInput)(nil)).Elem(), TemplateLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLocalNavigationConfigurationPtrInput)(nil)).Elem(), TemplateLocalNavigationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLongFormatTextInput)(nil)).Elem(), TemplateLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateLongFormatTextPtrInput)(nil)).Elem(), TemplateLongFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMappedDataSetParameterInput)(nil)).Elem(), TemplateMappedDataSetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMappedDataSetParameterArrayInput)(nil)).Elem(), TemplateMappedDataSetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumLabelTypeInput)(nil)).Elem(), TemplateMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumLabelTypePtrInput)(nil)).Elem(), TemplateMaximumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumMinimumComputationInput)(nil)).Elem(), TemplateMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMaximumMinimumComputationPtrInput)(nil)).Elem(), TemplateMaximumMinimumComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMeasureFieldInput)(nil)).Elem(), TemplateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMeasureFieldPtrInput)(nil)).Elem(), TemplateMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMeasureFieldArrayInput)(nil)).Elem(), TemplateMeasureFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMetricComparisonComputationInput)(nil)).Elem(), TemplateMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMetricComparisonComputationPtrInput)(nil)).Elem(), TemplateMetricComparisonComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMinimumLabelTypeInput)(nil)).Elem(), TemplateMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMinimumLabelTypePtrInput)(nil)).Elem(), TemplateMinimumLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMissingDataConfigurationInput)(nil)).Elem(), TemplateMissingDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateMissingDataConfigurationArrayInput)(nil)).Elem(), TemplateMissingDataConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNegativeValueConfigurationInput)(nil)).Elem(), TemplateNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNegativeValueConfigurationPtrInput)(nil)).Elem(), TemplateNegativeValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNullValueFormatConfigurationInput)(nil)).Elem(), TemplateNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNullValueFormatConfigurationPtrInput)(nil)).Elem(), TemplateNullValueFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberDisplayFormatConfigurationInput)(nil)).Elem(), TemplateNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberDisplayFormatConfigurationPtrInput)(nil)).Elem(), TemplateNumberDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberFormatConfigurationInput)(nil)).Elem(), TemplateNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumberFormatConfigurationPtrInput)(nil)).Elem(), TemplateNumberFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericAxisOptionsInput)(nil)).Elem(), TemplateNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericAxisOptionsPtrInput)(nil)).Elem(), TemplateNumericAxisOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityDrillDownFilterInput)(nil)).Elem(), TemplateNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityDrillDownFilterPtrInput)(nil)).Elem(), TemplateNumericEqualityDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityFilterInput)(nil)).Elem(), TemplateNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericEqualityFilterPtrInput)(nil)).Elem(), TemplateNumericEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericFormatConfigurationInput)(nil)).Elem(), TemplateNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericFormatConfigurationPtrInput)(nil)).Elem(), TemplateNumericFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericRangeFilterInput)(nil)).Elem(), TemplateNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericRangeFilterPtrInput)(nil)).Elem(), TemplateNumericRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericRangeFilterValueInput)(nil)).Elem(), TemplateNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericRangeFilterValuePtrInput)(nil)).Elem(), TemplateNumericRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericSeparatorConfigurationInput)(nil)).Elem(), TemplateNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericSeparatorConfigurationPtrInput)(nil)).Elem(), TemplateNumericSeparatorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalAggregationFunctionInput)(nil)).Elem(), TemplateNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalAggregationFunctionPtrInput)(nil)).Elem(), TemplateNumericalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalDimensionFieldInput)(nil)).Elem(), TemplateNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalDimensionFieldPtrInput)(nil)).Elem(), TemplateNumericalDimensionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalMeasureFieldInput)(nil)).Elem(), TemplateNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateNumericalMeasureFieldPtrInput)(nil)).Elem(), TemplateNumericalMeasureFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaginationConfigurationInput)(nil)).Elem(), TemplatePaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePaginationConfigurationPtrInput)(nil)).Elem(), TemplatePaginationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelConfigurationInput)(nil)).Elem(), TemplatePanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelConfigurationPtrInput)(nil)).Elem(), TemplatePanelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelTitleOptionsInput)(nil)).Elem(), TemplatePanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePanelTitleOptionsPtrInput)(nil)).Elem(), TemplatePanelTitleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterControlInput)(nil)).Elem(), TemplateParameterControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterControlArrayInput)(nil)).Elem(), TemplateParameterControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDateTimePickerControlInput)(nil)).Elem(), TemplateParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDateTimePickerControlPtrInput)(nil)).Elem(), TemplateParameterDateTimePickerControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDeclarationInput)(nil)).Elem(), TemplateParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDeclarationArrayInput)(nil)).Elem(), TemplateParameterDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDropDownControlInput)(nil)).Elem(), TemplateParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterDropDownControlPtrInput)(nil)).Elem(), TemplateParameterDropDownControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterListControlInput)(nil)).Elem(), TemplateParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterListControlPtrInput)(nil)).Elem(), TemplateParameterListControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterSelectableValuesInput)(nil)).Elem(), TemplateParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterSelectableValuesPtrInput)(nil)).Elem(), TemplateParameterSelectableValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterSliderControlInput)(nil)).Elem(), TemplateParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterSliderControlPtrInput)(nil)).Elem(), TemplateParameterSliderControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterTextAreaControlInput)(nil)).Elem(), TemplateParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterTextAreaControlPtrInput)(nil)).Elem(), TemplateParameterTextAreaControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterTextFieldControlInput)(nil)).Elem(), TemplateParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateParameterTextFieldControlPtrInput)(nil)).Elem(), TemplateParameterTextFieldControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentVisibleRangeInput)(nil)).Elem(), TemplatePercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentVisibleRangePtrInput)(nil)).Elem(), TemplatePercentVisibleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentageDisplayFormatConfigurationInput)(nil)).Elem(), TemplatePercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentageDisplayFormatConfigurationPtrInput)(nil)).Elem(), TemplatePercentageDisplayFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentileAggregationInput)(nil)).Elem(), TemplatePercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePercentileAggregationPtrInput)(nil)).Elem(), TemplatePercentileAggregationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePeriodOverPeriodComputationInput)(nil)).Elem(), TemplatePeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePeriodOverPeriodComputationPtrInput)(nil)).Elem(), TemplatePeriodOverPeriodComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePeriodToDateComputationInput)(nil)).Elem(), TemplatePeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePeriodToDateComputationPtrInput)(nil)).Elem(), TemplatePeriodToDateComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartAggregatedFieldWellsInput)(nil)).Elem(), TemplatePieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplatePieChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartConfigurationInput)(nil)).Elem(), TemplatePieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartConfigurationPtrInput)(nil)).Elem(), TemplatePieChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartFieldWellsInput)(nil)).Elem(), TemplatePieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartFieldWellsPtrInput)(nil)).Elem(), TemplatePieChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartSortConfigurationInput)(nil)).Elem(), TemplatePieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartSortConfigurationPtrInput)(nil)).Elem(), TemplatePieChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartVisualInput)(nil)).Elem(), TemplatePieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePieChartVisualPtrInput)(nil)).Elem(), TemplatePieChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotFieldSortOptionsInput)(nil)).Elem(), TemplatePivotFieldSortOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotFieldSortOptionsArrayInput)(nil)).Elem(), TemplatePivotFieldSortOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableAggregatedFieldWellsInput)(nil)).Elem(), TemplatePivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplatePivotTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableCellConditionalFormattingInput)(nil)).Elem(), TemplatePivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableCellConditionalFormattingPtrInput)(nil)).Elem(), TemplatePivotTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingPtrInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingOptionInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingOptionArrayInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopePtrInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConditionalFormattingScopeArrayInput)(nil)).Elem(), TemplatePivotTableConditionalFormattingScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConfigurationInput)(nil)).Elem(), TemplatePivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableConfigurationPtrInput)(nil)).Elem(), TemplatePivotTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableDataPathOptionInput)(nil)).Elem(), TemplatePivotTableDataPathOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableDataPathOptionArrayInput)(nil)).Elem(), TemplatePivotTableDataPathOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldCollapseStateOptionInput)(nil)).Elem(), TemplatePivotTableFieldCollapseStateOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldCollapseStateOptionArrayInput)(nil)).Elem(), TemplatePivotTableFieldCollapseStateOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldCollapseStateTargetInput)(nil)).Elem(), TemplatePivotTableFieldCollapseStateTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldOptionInput)(nil)).Elem(), TemplatePivotTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldOptionArrayInput)(nil)).Elem(), TemplatePivotTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldOptionsInput)(nil)).Elem(), TemplatePivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldOptionsPtrInput)(nil)).Elem(), TemplatePivotTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldSubtotalOptionsInput)(nil)).Elem(), TemplatePivotTableFieldSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldSubtotalOptionsArrayInput)(nil)).Elem(), TemplatePivotTableFieldSubtotalOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldWellsInput)(nil)).Elem(), TemplatePivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableFieldWellsPtrInput)(nil)).Elem(), TemplatePivotTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableOptionsInput)(nil)).Elem(), TemplatePivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableOptionsPtrInput)(nil)).Elem(), TemplatePivotTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTablePaginatedReportOptionsInput)(nil)).Elem(), TemplatePivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTablePaginatedReportOptionsPtrInput)(nil)).Elem(), TemplatePivotTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableRowsLabelOptionsInput)(nil)).Elem(), TemplatePivotTableRowsLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableRowsLabelOptionsPtrInput)(nil)).Elem(), TemplatePivotTableRowsLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableSortByInput)(nil)).Elem(), TemplatePivotTableSortByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableSortConfigurationInput)(nil)).Elem(), TemplatePivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableSortConfigurationPtrInput)(nil)).Elem(), TemplatePivotTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableTotalOptionsInput)(nil)).Elem(), TemplatePivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableTotalOptionsPtrInput)(nil)).Elem(), TemplatePivotTableTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableVisualInput)(nil)).Elem(), TemplatePivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTableVisualPtrInput)(nil)).Elem(), TemplatePivotTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTotalOptionsInput)(nil)).Elem(), TemplatePivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePivotTotalOptionsPtrInput)(nil)).Elem(), TemplatePivotTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePredefinedHierarchyInput)(nil)).Elem(), TemplatePredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePredefinedHierarchyPtrInput)(nil)).Elem(), TemplatePredefinedHierarchyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateProgressBarOptionsInput)(nil)).Elem(), TemplateProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateProgressBarOptionsPtrInput)(nil)).Elem(), TemplateProgressBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAggregatedFieldWellsInput)(nil)).Elem(), TemplateRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateRadarChartAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAreaStyleSettingsInput)(nil)).Elem(), TemplateRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartAreaStyleSettingsPtrInput)(nil)).Elem(), TemplateRadarChartAreaStyleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartConfigurationInput)(nil)).Elem(), TemplateRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartConfigurationPtrInput)(nil)).Elem(), TemplateRadarChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartFieldWellsInput)(nil)).Elem(), TemplateRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartFieldWellsPtrInput)(nil)).Elem(), TemplateRadarChartFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartSeriesSettingsInput)(nil)).Elem(), TemplateRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartSeriesSettingsPtrInput)(nil)).Elem(), TemplateRadarChartSeriesSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartSortConfigurationInput)(nil)).Elem(), TemplateRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartSortConfigurationPtrInput)(nil)).Elem(), TemplateRadarChartSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartVisualInput)(nil)).Elem(), TemplateRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRadarChartVisualPtrInput)(nil)).Elem(), TemplateRadarChartVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRangeEndsLabelTypeInput)(nil)).Elem(), TemplateRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRangeEndsLabelTypePtrInput)(nil)).Elem(), TemplateRangeEndsLabelTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineInput)(nil)).Elem(), TemplateReferenceLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineArrayInput)(nil)).Elem(), TemplateReferenceLineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineCustomLabelConfigurationInput)(nil)).Elem(), TemplateReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineCustomLabelConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineCustomLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineDataConfigurationInput)(nil)).Elem(), TemplateReferenceLineDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineDynamicDataConfigurationInput)(nil)).Elem(), TemplateReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineDynamicDataConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineDynamicDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelConfigurationInput)(nil)).Elem(), TemplateReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineLabelConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineStaticDataConfigurationInput)(nil)).Elem(), TemplateReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineStaticDataConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineStaticDataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineStyleConfigurationInput)(nil)).Elem(), TemplateReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineStyleConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineStyleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineValueLabelConfigurationInput)(nil)).Elem(), TemplateReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateReferenceLineValueLabelConfigurationPtrInput)(nil)).Elem(), TemplateReferenceLineValueLabelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDateTimeControlDisplayOptionsInput)(nil)).Elem(), TemplateRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDateTimeControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateRelativeDateTimeControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDatesFilterInput)(nil)).Elem(), TemplateRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRelativeDatesFilterPtrInput)(nil)).Elem(), TemplateRelativeDatesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateResourcePermissionInput)(nil)).Elem(), TemplateResourcePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateResourcePermissionArrayInput)(nil)).Elem(), TemplateResourcePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRollingDateConfigurationInput)(nil)).Elem(), TemplateRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRollingDateConfigurationPtrInput)(nil)).Elem(), TemplateRollingDateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRowAlternateColorOptionsInput)(nil)).Elem(), TemplateRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateRowAlternateColorOptionsPtrInput)(nil)).Elem(), TemplateRowAlternateColorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSameSheetTargetVisualConfigurationInput)(nil)).Elem(), TemplateSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSameSheetTargetVisualConfigurationPtrInput)(nil)).Elem(), TemplateSameSheetTargetVisualConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramAggregatedFieldWellsInput)(nil)).Elem(), TemplateSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateSankeyDiagramAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramChartConfigurationInput)(nil)).Elem(), TemplateSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramChartConfigurationPtrInput)(nil)).Elem(), TemplateSankeyDiagramChartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramFieldWellsInput)(nil)).Elem(), TemplateSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramFieldWellsPtrInput)(nil)).Elem(), TemplateSankeyDiagramFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramSortConfigurationInput)(nil)).Elem(), TemplateSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramSortConfigurationPtrInput)(nil)).Elem(), TemplateSankeyDiagramSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramVisualInput)(nil)).Elem(), TemplateSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSankeyDiagramVisualPtrInput)(nil)).Elem(), TemplateSankeyDiagramVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotCategoricallyAggregatedFieldWellsInput)(nil)).Elem(), TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateScatterPlotCategoricallyAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotConfigurationInput)(nil)).Elem(), TemplateScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotConfigurationPtrInput)(nil)).Elem(), TemplateScatterPlotConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotFieldWellsInput)(nil)).Elem(), TemplateScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotFieldWellsPtrInput)(nil)).Elem(), TemplateScatterPlotFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotUnaggregatedFieldWellsInput)(nil)).Elem(), TemplateScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotUnaggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateScatterPlotUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotVisualInput)(nil)).Elem(), TemplateScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScatterPlotVisualPtrInput)(nil)).Elem(), TemplateScatterPlotVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScrollBarOptionsInput)(nil)).Elem(), TemplateScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateScrollBarOptionsPtrInput)(nil)).Elem(), TemplateScrollBarOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSecondaryValueOptionsInput)(nil)).Elem(), TemplateSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSecondaryValueOptionsPtrInput)(nil)).Elem(), TemplateSecondaryValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionAfterPageBreakInput)(nil)).Elem(), TemplateSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionAfterPageBreakPtrInput)(nil)).Elem(), TemplateSectionAfterPageBreakArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutCanvasSizeOptionsInput)(nil)).Elem(), TemplateSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateSectionBasedLayoutCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutConfigurationInput)(nil)).Elem(), TemplateSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutConfigurationPtrInput)(nil)).Elem(), TemplateSectionBasedLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutPaperCanvasSizeOptionsInput)(nil)).Elem(), TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrInput)(nil)).Elem(), TemplateSectionBasedLayoutPaperCanvasSizeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionLayoutConfigurationInput)(nil)).Elem(), TemplateSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionLayoutConfigurationPtrInput)(nil)).Elem(), TemplateSectionLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionPageBreakConfigurationInput)(nil)).Elem(), TemplateSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionPageBreakConfigurationPtrInput)(nil)).Elem(), TemplateSectionPageBreakConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionStyleInput)(nil)).Elem(), TemplateSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSectionStylePtrInput)(nil)).Elem(), TemplateSectionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedSheetsFilterScopeConfigurationInput)(nil)).Elem(), TemplateSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSelectedSheetsFilterScopeConfigurationPtrInput)(nil)).Elem(), TemplateSelectedSheetsFilterScopeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSeriesItemInput)(nil)).Elem(), TemplateSeriesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSeriesItemArrayInput)(nil)).Elem(), TemplateSeriesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSetParameterValueConfigurationInput)(nil)).Elem(), TemplateSetParameterValueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSetParameterValueConfigurationArrayInput)(nil)).Elem(), TemplateSetParameterValueConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateShapeConditionalFormatInput)(nil)).Elem(), TemplateShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateShapeConditionalFormatPtrInput)(nil)).Elem(), TemplateShapeConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlInfoIconLabelOptionsInput)(nil)).Elem(), TemplateSheetControlInfoIconLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlInfoIconLabelOptionsPtrInput)(nil)).Elem(), TemplateSheetControlInfoIconLabelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlLayoutInput)(nil)).Elem(), TemplateSheetControlLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlLayoutArrayInput)(nil)).Elem(), TemplateSheetControlLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetControlLayoutConfigurationInput)(nil)).Elem(), TemplateSheetControlLayoutConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetDefinitionInput)(nil)).Elem(), TemplateSheetDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetDefinitionArrayInput)(nil)).Elem(), TemplateSheetDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetElementConfigurationOverridesInput)(nil)).Elem(), TemplateSheetElementConfigurationOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetElementRenderingRuleInput)(nil)).Elem(), TemplateSheetElementRenderingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetElementRenderingRuleArrayInput)(nil)).Elem(), TemplateSheetElementRenderingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetTextBoxInput)(nil)).Elem(), TemplateSheetTextBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetTextBoxArrayInput)(nil)).Elem(), TemplateSheetTextBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetVisualScopingConfigurationInput)(nil)).Elem(), TemplateSheetVisualScopingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSheetVisualScopingConfigurationArrayInput)(nil)).Elem(), TemplateSheetVisualScopingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateShortFormatTextInput)(nil)).Elem(), TemplateShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateShortFormatTextPtrInput)(nil)).Elem(), TemplateShortFormatTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleClusterMarkerInput)(nil)).Elem(), TemplateSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSimpleClusterMarkerPtrInput)(nil)).Elem(), TemplateSimpleClusterMarkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSliderControlDisplayOptionsInput)(nil)).Elem(), TemplateSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSliderControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateSliderControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisPropertiesInput)(nil)).Elem(), TemplateSmallMultiplesAxisPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesAxisPropertiesPtrInput)(nil)).Elem(), TemplateSmallMultiplesAxisPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesOptionsInput)(nil)).Elem(), TemplateSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSmallMultiplesOptionsPtrInput)(nil)).Elem(), TemplateSmallMultiplesOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceAnalysisInput)(nil)).Elem(), TemplateSourceAnalysisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceAnalysisPtrInput)(nil)).Elem(), TemplateSourceAnalysisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceEntityInput)(nil)).Elem(), TemplateSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceEntityPtrInput)(nil)).Elem(), TemplateSourceEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceTemplateInput)(nil)).Elem(), TemplateSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSourceTemplatePtrInput)(nil)).Elem(), TemplateSourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSpacingInput)(nil)).Elem(), TemplateSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSpacingPtrInput)(nil)).Elem(), TemplateSpacingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringDefaultValuesInput)(nil)).Elem(), TemplateStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringDefaultValuesPtrInput)(nil)).Elem(), TemplateStringDefaultValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringFormatConfigurationInput)(nil)).Elem(), TemplateStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringFormatConfigurationPtrInput)(nil)).Elem(), TemplateStringFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringParameterDeclarationInput)(nil)).Elem(), TemplateStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringParameterDeclarationPtrInput)(nil)).Elem(), TemplateStringParameterDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringValueWhenUnsetConfigurationInput)(nil)).Elem(), TemplateStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateStringValueWhenUnsetConfigurationPtrInput)(nil)).Elem(), TemplateStringValueWhenUnsetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSubtotalOptionsInput)(nil)).Elem(), TemplateSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSubtotalOptionsPtrInput)(nil)).Elem(), TemplateSubtotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableAggregatedFieldWellsInput)(nil)).Elem(), TemplateTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateTableAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableBorderOptionsInput)(nil)).Elem(), TemplateTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableBorderOptionsPtrInput)(nil)).Elem(), TemplateTableBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellConditionalFormattingInput)(nil)).Elem(), TemplateTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellConditionalFormattingPtrInput)(nil)).Elem(), TemplateTableCellConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellImageSizingConfigurationInput)(nil)).Elem(), TemplateTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellImageSizingConfigurationPtrInput)(nil)).Elem(), TemplateTableCellImageSizingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellStyleInput)(nil)).Elem(), TemplateTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableCellStylePtrInput)(nil)).Elem(), TemplateTableCellStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConditionalFormattingInput)(nil)).Elem(), TemplateTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConditionalFormattingPtrInput)(nil)).Elem(), TemplateTableConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConditionalFormattingOptionInput)(nil)).Elem(), TemplateTableConditionalFormattingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConditionalFormattingOptionArrayInput)(nil)).Elem(), TemplateTableConditionalFormattingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConfigurationInput)(nil)).Elem(), TemplateTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableConfigurationPtrInput)(nil)).Elem(), TemplateTableConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldCustomIconContentInput)(nil)).Elem(), TemplateTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldCustomIconContentPtrInput)(nil)).Elem(), TemplateTableFieldCustomIconContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldCustomTextContentInput)(nil)).Elem(), TemplateTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldCustomTextContentPtrInput)(nil)).Elem(), TemplateTableFieldCustomTextContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldImageConfigurationInput)(nil)).Elem(), TemplateTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldImageConfigurationPtrInput)(nil)).Elem(), TemplateTableFieldImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldLinkConfigurationInput)(nil)).Elem(), TemplateTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldLinkConfigurationPtrInput)(nil)).Elem(), TemplateTableFieldLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldLinkContentConfigurationInput)(nil)).Elem(), TemplateTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldLinkContentConfigurationPtrInput)(nil)).Elem(), TemplateTableFieldLinkContentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldOptionInput)(nil)).Elem(), TemplateTableFieldOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldOptionArrayInput)(nil)).Elem(), TemplateTableFieldOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldOptionsInput)(nil)).Elem(), TemplateTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldOptionsPtrInput)(nil)).Elem(), TemplateTableFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldUrlConfigurationInput)(nil)).Elem(), TemplateTableFieldUrlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldUrlConfigurationPtrInput)(nil)).Elem(), TemplateTableFieldUrlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldWellsInput)(nil)).Elem(), TemplateTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableFieldWellsPtrInput)(nil)).Elem(), TemplateTableFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableInlineVisualizationInput)(nil)).Elem(), TemplateTableInlineVisualizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableInlineVisualizationArrayInput)(nil)).Elem(), TemplateTableInlineVisualizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableOptionsInput)(nil)).Elem(), TemplateTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableOptionsPtrInput)(nil)).Elem(), TemplateTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTablePaginatedReportOptionsInput)(nil)).Elem(), TemplateTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTablePaginatedReportOptionsPtrInput)(nil)).Elem(), TemplateTablePaginatedReportOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTablePinnedFieldOptionsInput)(nil)).Elem(), TemplateTablePinnedFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTablePinnedFieldOptionsPtrInput)(nil)).Elem(), TemplateTablePinnedFieldOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableRowConditionalFormattingInput)(nil)).Elem(), TemplateTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableRowConditionalFormattingPtrInput)(nil)).Elem(), TemplateTableRowConditionalFormattingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableSideBorderOptionsInput)(nil)).Elem(), TemplateTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableSideBorderOptionsPtrInput)(nil)).Elem(), TemplateTableSideBorderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableSortConfigurationInput)(nil)).Elem(), TemplateTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableSortConfigurationPtrInput)(nil)).Elem(), TemplateTableSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableStyleTargetInput)(nil)).Elem(), TemplateTableStyleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableStyleTargetArrayInput)(nil)).Elem(), TemplateTableStyleTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableUnaggregatedFieldWellsInput)(nil)).Elem(), TemplateTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableUnaggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateTableUnaggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableVisualInput)(nil)).Elem(), TemplateTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTableVisualPtrInput)(nil)).Elem(), TemplateTableVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextAreaControlDisplayOptionsInput)(nil)).Elem(), TemplateTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextAreaControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateTextAreaControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextConditionalFormatInput)(nil)).Elem(), TemplateTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextConditionalFormatPtrInput)(nil)).Elem(), TemplateTextConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextControlPlaceholderOptionsInput)(nil)).Elem(), TemplateTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextControlPlaceholderOptionsPtrInput)(nil)).Elem(), TemplateTextControlPlaceholderOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextFieldControlDisplayOptionsInput)(nil)).Elem(), TemplateTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTextFieldControlDisplayOptionsPtrInput)(nil)).Elem(), TemplateTextFieldControlDisplayOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateThousandSeparatorOptionsInput)(nil)).Elem(), TemplateThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateThousandSeparatorOptionsPtrInput)(nil)).Elem(), TemplateThousandSeparatorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeBasedForecastPropertiesInput)(nil)).Elem(), TemplateTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeBasedForecastPropertiesPtrInput)(nil)).Elem(), TemplateTimeBasedForecastPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeEqualityFilterInput)(nil)).Elem(), TemplateTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeEqualityFilterPtrInput)(nil)).Elem(), TemplateTimeEqualityFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeDrillDownFilterInput)(nil)).Elem(), TemplateTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeDrillDownFilterPtrInput)(nil)).Elem(), TemplateTimeRangeDrillDownFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeFilterInput)(nil)).Elem(), TemplateTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeFilterPtrInput)(nil)).Elem(), TemplateTimeRangeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeFilterValueInput)(nil)).Elem(), TemplateTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTimeRangeFilterValuePtrInput)(nil)).Elem(), TemplateTimeRangeFilterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipItemInput)(nil)).Elem(), TemplateTooltipItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipItemArrayInput)(nil)).Elem(), TemplateTooltipItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipOptionsInput)(nil)).Elem(), TemplateTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTooltipOptionsPtrInput)(nil)).Elem(), TemplateTooltipOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomFilterInput)(nil)).Elem(), TemplateTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomFilterPtrInput)(nil)).Elem(), TemplateTopBottomFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomMoversComputationInput)(nil)).Elem(), TemplateTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomMoversComputationPtrInput)(nil)).Elem(), TemplateTopBottomMoversComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomRankedComputationInput)(nil)).Elem(), TemplateTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTopBottomRankedComputationPtrInput)(nil)).Elem(), TemplateTopBottomRankedComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalAggregationComputationInput)(nil)).Elem(), TemplateTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalAggregationComputationPtrInput)(nil)).Elem(), TemplateTotalAggregationComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalAggregationFunctionInput)(nil)).Elem(), TemplateTotalAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalAggregationOptionInput)(nil)).Elem(), TemplateTotalAggregationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalAggregationOptionArrayInput)(nil)).Elem(), TemplateTotalAggregationOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalOptionsInput)(nil)).Elem(), TemplateTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTotalOptionsPtrInput)(nil)).Elem(), TemplateTotalOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapAggregatedFieldWellsInput)(nil)).Elem(), TemplateTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapAggregatedFieldWellsPtrInput)(nil)).Elem(), TemplateTreeMapAggregatedFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapConfigurationInput)(nil)).Elem(), TemplateTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapConfigurationPtrInput)(nil)).Elem(), TemplateTreeMapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapFieldWellsInput)(nil)).Elem(), TemplateTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapFieldWellsPtrInput)(nil)).Elem(), TemplateTreeMapFieldWellsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapSortConfigurationInput)(nil)).Elem(), TemplateTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapSortConfigurationPtrInput)(nil)).Elem(), TemplateTreeMapSortConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapVisualInput)(nil)).Elem(), TemplateTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTreeMapVisualPtrInput)(nil)).Elem(), TemplateTreeMapVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTrendArrowOptionsInput)(nil)).Elem(), TemplateTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTrendArrowOptionsPtrInput)(nil)).Elem(), TemplateTrendArrowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUnaggregatedFieldInput)(nil)).Elem(), TemplateUnaggregatedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUnaggregatedFieldArrayInput)(nil)).Elem(), TemplateUnaggregatedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUniqueValuesComputationInput)(nil)).Elem(), TemplateUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateUniqueValuesComputationPtrInput)(nil)).Elem(), TemplateUniqueValuesComputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValidationStrategyInput)(nil)).Elem(), TemplateValidationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValidationStrategyPtrInput)(nil)).Elem(), TemplateValidationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVersionDefinitionInput)(nil)).Elem(), TemplateVersionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVersionDefinitionPtrInput)(nil)).Elem(), TemplateVersionDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisibleRangeOptionsInput)(nil)).Elem(), TemplateVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisibleRangeOptionsPtrInput)(nil)).Elem(), TemplateVisibleRangeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualInput)(nil)).Elem(), TemplateVisualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualArrayInput)(nil)).Elem(), TemplateVisualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionInput)(nil)).Elem(), TemplateVisualCustomActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionArrayInput)(nil)).Elem(), TemplateVisualCustomActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionOperationInput)(nil)).Elem(), TemplateVisualCustomActionOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateVisualCustomActionOperationArrayInput)(nil)).Elem(), TemplateVisualCustomActionOperationArray{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionTagConfigurationOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionTagConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionTagRuleOutput{})
	pulumi.RegisterOutputType(DataSetRowLevelPermissionTagRuleArrayOutput{})
	pulumi.RegisterOutputType(DataSetS3SourceOutput{})
	pulumi.RegisterOutputType(DataSetS3SourcePtrOutput{})
	pulumi.RegisterOutputType(DataSetStringDatasetParameterOutput{})
	pulumi.RegisterOutputType(DataSetStringDatasetParameterPtrOutput{})
	pulumi.RegisterOutputType(DataSetStringDatasetParameterDefaultValuesOutput{})
	pulumi.RegisterOutputType(DataSetStringDatasetParameterDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(DataSetTagColumnOperationOutput{})
	pulumi.RegisterOutputType(DataSetTagColumnOperationPtrOutput{})
	pulumi.RegisterOutputType(DataSetTransformOperationOutput{})
	pulumi.RegisterOutputType(DataSetTransformOperationArrayOutput{})
	pulumi.RegisterOutputType(DataSetUploadSettingsOutput{})
	pulumi.RegisterOutputType(DataSetUploadSettingsPtrOutput{})
	pulumi.RegisterOutputType(DataSetUsageConfigurationOutput{})
	pulumi.RegisterOutputType(DataSetUsageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonElasticsearchParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonOpenSearchParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAmazonOpenSearchParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAthenaParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceAuroraPostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialPairPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialsOutput{})
	pulumi.RegisterOutputType(DataSourceCredentialsPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDatabricksParametersOutput{})
	pulumi.RegisterOutputType(DataSourceDatabricksParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoOutput{})
	pulumi.RegisterOutputType(DataSourceErrorInfoPtrOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationOutput{})
	pulumi.RegisterOutputType(DataSourceManifestFileLocationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMariaDbParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourceMySqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersOutput{})
	pulumi.RegisterOutputType(DataSourceOracleParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceParametersOutput{})
	pulumi.RegisterOutputType(DataSourceParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceParametersArrayOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePostgreSqlParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersOutput{})
	pulumi.RegisterOutputType(DataSourcePrestoParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRdsParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersOutput{})
	pulumi.RegisterOutputType(DataSourceRedshiftParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionOutput{})
	pulumi.RegisterOutputType(DataSourceResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersOutput{})
	pulumi.RegisterOutputType(DataSourceS3ParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSnowflakeParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSparkParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersOutput{})
	pulumi.RegisterOutputType(DataSourceSqlServerParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceSslPropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataSourceStarburstParametersOutput{})
	pulumi.RegisterOutputType(DataSourceStarburstParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersOutput{})
	pulumi.RegisterOutputType(DataSourceTeradataParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTrinoParametersOutput{})
	pulumi.RegisterOutputType(DataSourceTrinoParametersPtrOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(DataSourceVpcConnectionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapPtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesOutput{})
	pulumi.RegisterOutputType(RefreshScheduleMapScheduleFrequencyPropertiesRefreshOnDayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateAggregationSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateAggregationSortConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateAllSheetsFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateAllSheetsFilterScopeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateAnalysisDefaultsOutput{})
	pulumi.RegisterOutputType(TemplateAnalysisDefaultsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAnchorDateConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateAnchorDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(TemplateArcAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateArcConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateArcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateArcOptionsOutput{})
	pulumi.RegisterOutputType(TemplateArcOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAssetOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAssetOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAttributeAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateAttributeAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDataOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisDataOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayDataDrivenRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayDataDrivenRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayMinMaxRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayMinMaxRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayRangeOutput{})
	pulumi.RegisterOutputType(TemplateAxisDisplayRangePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelOptionsArrayOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelReferenceOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisLabelReferenceOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLinearScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisLinearScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisLogarithmicScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisLogarithmicScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisScaleOutput{})
	pulumi.RegisterOutputType(TemplateAxisScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateAxisTickLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateAxisTickLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBarChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateBarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateBinCountOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBinCountOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBinWidthOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBinWidthOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateBodySectionContentOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotStyleOptionsOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotVisualOutput{})
	pulumi.RegisterOutputType(TemplateBoxPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedFieldOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedFieldArrayOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateCalculatedMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlSourceOutput{})
	pulumi.RegisterOutputType(TemplateCascadingControlSourceArrayOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalDimensionFieldOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateCategoricalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryDrillDownFilterOutput{})
	pulumi.RegisterOutputType(TemplateCategoryDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCategoryFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateChartAxisLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateChartAxisLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateClusterMarkerOutput{})
	pulumi.RegisterOutputType(TemplateClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(TemplateClusterMarkerConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateClusterMarkerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateColorScaleOutput{})
	pulumi.RegisterOutputType(TemplateColorScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateColorsConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateColorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateColumnConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateColumnConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnGroupColumnSchemaOutput{})
	pulumi.RegisterOutputType(TemplateColumnGroupColumnSchemaArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnGroupSchemaOutput{})
	pulumi.RegisterOutputType(TemplateColumnGroupSchemaArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnHierarchyOutput{})
	pulumi.RegisterOutputType(TemplateColumnHierarchyArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnIdentifierOutput{})
	pulumi.RegisterOutputType(TemplateColumnIdentifierPtrOutput{})
	pulumi.RegisterOutputType(TemplateColumnIdentifierArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnSchemaOutput{})
	pulumi.RegisterOutputType(TemplateColumnSchemaArrayOutput{})
	pulumi.RegisterOutputType(TemplateColumnSortOutput{})
	pulumi.RegisterOutputType(TemplateColumnSortPtrOutput{})
	pulumi.RegisterOutputType(TemplateColumnTooltipItemOutput{})
	pulumi.RegisterOutputType(TemplateColumnTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(TemplateComboChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateComboChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateComboChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateComboChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateComboChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateComboChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateComboChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateComboChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateComboChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateComboChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateComparisonConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateComparisonConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateComparisonFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateComparisonFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateComputationOutput{})
	pulumi.RegisterOutputType(TemplateComputationArrayOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingColorOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingColorPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingCustomIconConditionOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingCustomIconConditionPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingCustomIconOptionsOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingCustomIconOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingGradientColorOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingGradientColorPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconDisplayConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconDisplayConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconSetOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingIconSetPtrOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingSolidColorOutput{})
	pulumi.RegisterOutputType(TemplateConditionalFormattingSolidColorPtrOutput{})
	pulumi.RegisterOutputType(TemplateContributionAnalysisDefaultOutput{})
	pulumi.RegisterOutputType(TemplateContributionAnalysisDefaultArrayOutput{})
	pulumi.RegisterOutputType(TemplateCurrencyDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCurrencyDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionFilterOperationOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionFilterOperationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionNavigationOperationOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionNavigationOperationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionSetParametersOperationOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionSetParametersOperationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionUrlOperationOutput{})
	pulumi.RegisterOutputType(TemplateCustomActionUrlOperationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomColorOutput{})
	pulumi.RegisterOutputType(TemplateCustomColorArrayOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentVisualOutput{})
	pulumi.RegisterOutputType(TemplateCustomContentVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomFilterConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCustomFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCustomFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomNarrativeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateCustomNarrativeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomParameterValuesOutput{})
	pulumi.RegisterOutputType(TemplateCustomParameterValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateCustomValuesConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateCustomValuesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataBarsOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDataBarsOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataColorOutput{})
	pulumi.RegisterOutputType(TemplateDataColorPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataColorArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(TemplateDataFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateDataLabelTypeArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataPathColorOutput{})
	pulumi.RegisterOutputType(TemplateDataPathColorArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataPathLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateDataPathLabelTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateDataPathSortOutput{})
	pulumi.RegisterOutputType(TemplateDataPathSortPtrOutput{})
	pulumi.RegisterOutputType(TemplateDataPathTypeOutput{})
	pulumi.RegisterOutputType(TemplateDataPathTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateDataPathValueOutput{})
	pulumi.RegisterOutputType(TemplateDataPathValueArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataSetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDataSetConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataSetReferenceOutput{})
	pulumi.RegisterOutputType(TemplateDataSetReferenceArrayOutput{})
	pulumi.RegisterOutputType(TemplateDataSetSchemaOutput{})
	pulumi.RegisterOutputType(TemplateDataSetSchemaPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateAxisOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDateAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateDimensionFieldOutput{})
	pulumi.RegisterOutputType(TemplateDateDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateDateMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeDefaultValuesOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeHierarchyOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeHierarchyPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeParameterDeclarationOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimePickerControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDateTimePickerControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDateTimeValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDecimalDefaultValuesOutput{})
	pulumi.RegisterOutputType(TemplateDecimalDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateDecimalParameterDeclarationOutput{})
	pulumi.RegisterOutputType(TemplateDecimalParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDecimalPlacesConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDecimalPlacesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDecimalValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDecimalValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultInteractiveLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultInteractiveLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultNewSheetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultNewSheetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultPaginatedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultPaginatedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDefaultSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDefaultSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateDestinationParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateDimensionFieldOutput{})
	pulumi.RegisterOutputType(TemplateDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateDimensionFieldArrayOutput{})
	pulumi.RegisterOutputType(TemplateDonutCenterOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDonutCenterOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDonutOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDonutOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDrillDownFilterOutput{})
	pulumi.RegisterOutputType(TemplateDrillDownFilterArrayOutput{})
	pulumi.RegisterOutputType(TemplateDropDownControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateDropDownControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateDynamicDefaultValueOutput{})
	pulumi.RegisterOutputType(TemplateDynamicDefaultValuePtrOutput{})
	pulumi.RegisterOutputType(TemplateEmptyVisualOutput{})
	pulumi.RegisterOutputType(TemplateEmptyVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateEntityOutput{})
	pulumi.RegisterOutputType(TemplateEntityArrayOutput{})
	pulumi.RegisterOutputType(TemplateErrorOutput{})
	pulumi.RegisterOutputType(TemplateErrorArrayOutput{})
	pulumi.RegisterOutputType(TemplateExcludePeriodConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateExcludePeriodConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateExplicitHierarchyOutput{})
	pulumi.RegisterOutputType(TemplateExplicitHierarchyPtrOutput{})
	pulumi.RegisterOutputType(TemplateFieldBasedTooltipOutput{})
	pulumi.RegisterOutputType(TemplateFieldBasedTooltipPtrOutput{})
	pulumi.RegisterOutputType(TemplateFieldLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateFieldLabelTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateFieldSeriesItemOutput{})
	pulumi.RegisterOutputType(TemplateFieldSeriesItemPtrOutput{})
	pulumi.RegisterOutputType(TemplateFieldSortOutput{})
	pulumi.RegisterOutputType(TemplateFieldSortPtrOutput{})
	pulumi.RegisterOutputType(TemplateFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(TemplateFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(TemplateFieldTooltipItemOutput{})
	pulumi.RegisterOutputType(TemplateFieldTooltipItemPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapShapeConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapVisualOutput{})
	pulumi.RegisterOutputType(TemplateFilledMapVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterOutput{})
	pulumi.RegisterOutputType(TemplateFilterArrayOutput{})
	pulumi.RegisterOutputType(TemplateFilterControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterControlArrayOutput{})
	pulumi.RegisterOutputType(TemplateFilterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterDropDownControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterGroupOutput{})
	pulumi.RegisterOutputType(TemplateFilterGroupArrayOutput{})
	pulumi.RegisterOutputType(TemplateFilterListConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilterListConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterListControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterListControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterOperationSelectedFieldsConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilterOperationSelectedFieldsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterOperationTargetVisualsConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilterOperationTargetVisualsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterRelativeDateTimeControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterRelativeDateTimeControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFilterSelectableValuesOutput{})
	pulumi.RegisterOutputType(TemplateFilterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterSliderControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterTextAreaControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFilterTextFieldControlOutput{})
	pulumi.RegisterOutputType(TemplateFilterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateFontConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFontConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFontSizeOutput{})
	pulumi.RegisterOutputType(TemplateFontSizePtrOutput{})
	pulumi.RegisterOutputType(TemplateFontWeightOutput{})
	pulumi.RegisterOutputType(TemplateFontWeightPtrOutput{})
	pulumi.RegisterOutputType(TemplateForecastComputationOutput{})
	pulumi.RegisterOutputType(TemplateForecastComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateForecastConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateForecastConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateForecastScenarioOutput{})
	pulumi.RegisterOutputType(TemplateForecastScenarioPtrOutput{})
	pulumi.RegisterOutputType(TemplateFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementBackgroundStyleOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementBackgroundStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementBorderStyleOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutElementBorderStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFreeFormSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartDataLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartDataLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateFunnelChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartArcConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartArcConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateGaugeChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialCoordinateBoundsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialCoordinateBoundsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapColorScaleOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapColorScalePtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapDataColorOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialHeatmapDataColorArrayOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapStyleOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapVisualOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialMapVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialPointStyleOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialPointStyleOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialWindowOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGeospatialWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGlobalTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGlobalTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGradientColorOutput{})
	pulumi.RegisterOutputType(TemplateGradientColorPtrOutput{})
	pulumi.RegisterOutputType(TemplateGradientStopOutput{})
	pulumi.RegisterOutputType(TemplateGradientStopArrayOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutElementOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutElementArrayOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutScreenCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateGridLayoutScreenCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateGrowthRateComputationOutput{})
	pulumi.RegisterOutputType(TemplateGrowthRateComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateHeaderFooterSectionConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateHeaderFooterSectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapVisualOutput{})
	pulumi.RegisterOutputType(TemplateHeatMapVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateHistogramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramBinOptionsOutput{})
	pulumi.RegisterOutputType(TemplateHistogramBinOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateHistogramConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateHistogramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateHistogramVisualOutput{})
	pulumi.RegisterOutputType(TemplateHistogramVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateInsightConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateInsightConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateInsightVisualOutput{})
	pulumi.RegisterOutputType(TemplateInsightVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateIntegerDefaultValuesOutput{})
	pulumi.RegisterOutputType(TemplateIntegerDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateIntegerParameterDeclarationOutput{})
	pulumi.RegisterOutputType(TemplateIntegerParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(TemplateIntegerValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateIntegerValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateItemsLimitConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateItemsLimitConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiActualValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateKpiActualValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiComparisonValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateKpiComparisonValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateKpiConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(TemplateKpiConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateKpiConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateKpiConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateKpiFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiOptionsOutput{})
	pulumi.RegisterOutputType(TemplateKpiOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiPrimaryValueConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateKpiPrimaryValueConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiProgressBarConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateKpiProgressBarConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateKpiSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiSparklineOptionsOutput{})
	pulumi.RegisterOutputType(TemplateKpiSparklineOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualLayoutOptionsOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualLayoutOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualStandardLayoutOutput{})
	pulumi.RegisterOutputType(TemplateKpiVisualStandardLayoutPtrOutput{})
	pulumi.RegisterOutputType(TemplateLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLayoutOutput{})
	pulumi.RegisterOutputType(TemplateLayoutArrayOutput{})
	pulumi.RegisterOutputType(TemplateLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateLegendOptionsOutput{})
	pulumi.RegisterOutputType(TemplateLegendOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateLineChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartDefaultSeriesSettingsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartDefaultSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartLineStyleSettingsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartLineStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartMarkerStyleSettingsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartMarkerStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(TemplateLineChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateLineChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateLineChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateLineSeriesAxisDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateLineSeriesAxisDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateListControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateListControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateListControlSearchOptionsOutput{})
	pulumi.RegisterOutputType(TemplateListControlSearchOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateListControlSelectAllOptionsOutput{})
	pulumi.RegisterOutputType(TemplateListControlSelectAllOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateLoadingAnimationOutput{})
	pulumi.RegisterOutputType(TemplateLoadingAnimationPtrOutput{})
	pulumi.RegisterOutputType(TemplateLocalNavigationConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateLocalNavigationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateLongFormatTextOutput{})
	pulumi.RegisterOutputType(TemplateLongFormatTextPtrOutput{})
	pulumi.RegisterOutputType(TemplateMappedDataSetParameterOutput{})
	pulumi.RegisterOutputType(TemplateMappedDataSetParameterArrayOutput{})
	pulumi.RegisterOutputType(TemplateMaximumLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateMaximumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateMaximumMinimumComputationOutput{})
	pulumi.RegisterOutputType(TemplateMaximumMinimumComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateMeasureFieldArrayOutput{})
	pulumi.RegisterOutputType(TemplateMetricComparisonComputationOutput{})
	pulumi.RegisterOutputType(TemplateMetricComparisonComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateMinimumLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateMinimumLabelTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateMissingDataConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateMissingDataConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateNegativeValueConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNegativeValueConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNullValueFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNullValueFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumberDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNumberDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumberFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNumberFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericAxisOptionsOutput{})
	pulumi.RegisterOutputType(TemplateNumericAxisOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityDrillDownFilterOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityFilterOutput{})
	pulumi.RegisterOutputType(TemplateNumericEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNumericFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericRangeFilterOutput{})
	pulumi.RegisterOutputType(TemplateNumericRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericRangeFilterValueOutput{})
	pulumi.RegisterOutputType(TemplateNumericRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericSeparatorConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateNumericSeparatorConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateNumericalAggregationFunctionPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericalDimensionFieldOutput{})
	pulumi.RegisterOutputType(TemplateNumericalDimensionFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplateNumericalMeasureFieldOutput{})
	pulumi.RegisterOutputType(TemplateNumericalMeasureFieldPtrOutput{})
	pulumi.RegisterOutputType(TemplatePaginationConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePaginationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePanelConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePanelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePanelTitleOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePanelTitleOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterControlArrayOutput{})
	pulumi.RegisterOutputType(TemplateParameterDateTimePickerControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterDateTimePickerControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterDeclarationOutput{})
	pulumi.RegisterOutputType(TemplateParameterDeclarationArrayOutput{})
	pulumi.RegisterOutputType(TemplateParameterDropDownControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterDropDownControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterListControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterListControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterSelectableValuesOutput{})
	pulumi.RegisterOutputType(TemplateParameterSelectableValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterSliderControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterSliderControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterTextAreaControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterTextAreaControlPtrOutput{})
	pulumi.RegisterOutputType(TemplateParameterTextFieldControlOutput{})
	pulumi.RegisterOutputType(TemplateParameterTextFieldControlPtrOutput{})
	pulumi.RegisterOutputType(TemplatePercentVisibleRangeOutput{})
	pulumi.RegisterOutputType(TemplatePercentVisibleRangePtrOutput{})
	pulumi.RegisterOutputType(TemplatePercentageDisplayFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePercentageDisplayFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePercentileAggregationOutput{})
	pulumi.RegisterOutputType(TemplatePercentileAggregationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePeriodOverPeriodComputationOutput{})
	pulumi.RegisterOutputType(TemplatePeriodOverPeriodComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePeriodToDateComputationOutput{})
	pulumi.RegisterOutputType(TemplatePeriodToDateComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePieChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplatePieChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePieChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePieChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePieChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplatePieChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePieChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePieChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePieChartVisualOutput{})
	pulumi.RegisterOutputType(TemplatePieChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotFieldSortOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotFieldSortOptionsArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingScopeOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingScopePtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConditionalFormattingScopeArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableDataPathOptionOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableDataPathOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldCollapseStateOptionOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldCollapseStateOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldCollapseStateTargetOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldOptionOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldSubtotalOptionsArrayOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableRowsLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableRowsLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableSortByOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableTotalOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableVisualOutput{})
	pulumi.RegisterOutputType(TemplatePivotTableVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplatePivotTotalOptionsOutput{})
	pulumi.RegisterOutputType(TemplatePivotTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePredefinedHierarchyOutput{})
	pulumi.RegisterOutputType(TemplatePredefinedHierarchyPtrOutput{})
	pulumi.RegisterOutputType(TemplateProgressBarOptionsOutput{})
	pulumi.RegisterOutputType(TemplateProgressBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAreaStyleSettingsOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartAreaStyleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartSeriesSettingsOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartSeriesSettingsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartVisualOutput{})
	pulumi.RegisterOutputType(TemplateRadarChartVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateRangeEndsLabelTypeOutput{})
	pulumi.RegisterOutputType(TemplateRangeEndsLabelTypePtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineArrayOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineCustomLabelConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineCustomLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineDataConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineDynamicDataConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineDynamicDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineStaticDataConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineStaticDataConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineStyleConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineStyleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineValueLabelConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateReferenceLineValueLabelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDateTimeControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDateTimeControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDatesFilterOutput{})
	pulumi.RegisterOutputType(TemplateRelativeDatesFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateResourcePermissionOutput{})
	pulumi.RegisterOutputType(TemplateResourcePermissionArrayOutput{})
	pulumi.RegisterOutputType(TemplateRollingDateConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateRollingDateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateRowAlternateColorOptionsOutput{})
	pulumi.RegisterOutputType(TemplateRowAlternateColorOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSameSheetTargetVisualConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSameSheetTargetVisualConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramChartConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramChartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramVisualOutput{})
	pulumi.RegisterOutputType(TemplateSankeyDiagramVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotCategoricallyAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotCategoricallyAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotVisualOutput{})
	pulumi.RegisterOutputType(TemplateScatterPlotVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateScrollBarOptionsOutput{})
	pulumi.RegisterOutputType(TemplateScrollBarOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSecondaryValueOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSecondaryValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionAfterPageBreakOutput{})
	pulumi.RegisterOutputType(TemplateSectionAfterPageBreakPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutPaperCanvasSizeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSectionBasedLayoutPaperCanvasSizeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSectionLayoutConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionPageBreakConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSectionPageBreakConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSectionStyleOutput{})
	pulumi.RegisterOutputType(TemplateSectionStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateSelectedSheetsFilterScopeConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSelectedSheetsFilterScopeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSeriesItemOutput{})
	pulumi.RegisterOutputType(TemplateSeriesItemArrayOutput{})
	pulumi.RegisterOutputType(TemplateSetParameterValueConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSetParameterValueConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateShapeConditionalFormatOutput{})
	pulumi.RegisterOutputType(TemplateShapeConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetOutput{})
	pulumi.RegisterOutputType(TemplateSheetArrayOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlInfoIconLabelOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlInfoIconLabelOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlLayoutOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlLayoutArrayOutput{})
	pulumi.RegisterOutputType(TemplateSheetControlLayoutConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSheetDefinitionOutput{})
	pulumi.RegisterOutputType(TemplateSheetDefinitionArrayOutput{})
	pulumi.RegisterOutputType(TemplateSheetElementConfigurationOverridesOutput{})
	pulumi.RegisterOutputType(TemplateSheetElementRenderingRuleOutput{})
	pulumi.RegisterOutputType(TemplateSheetElementRenderingRuleArrayOutput{})
	pulumi.RegisterOutputType(TemplateSheetTextBoxOutput{})
	pulumi.RegisterOutputType(TemplateSheetTextBoxArrayOutput{})
	pulumi.RegisterOutputType(TemplateSheetVisualScopingConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateSheetVisualScopingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TemplateShortFormatTextOutput{})
	pulumi.RegisterOutputType(TemplateShortFormatTextPtrOutput{})
	pulumi.RegisterOutputType(TemplateSimpleClusterMarkerOutput{})
	pulumi.RegisterOutputType(TemplateSimpleClusterMarkerPtrOutput{})
	pulumi.RegisterOutputType(TemplateSliderControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSliderControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisPropertiesOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesAxisPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSmallMultiplesOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateSourceAnalysisOutput{})
	pulumi.RegisterOutputType(TemplateSourceAnalysisPtrOutput{})
	pulumi.RegisterOutputType(TemplateSourceEntityOutput{})
	pulumi.RegisterOutputType(TemplateSourceEntityPtrOutput{})
	pulumi.RegisterOutputType(TemplateSourceTemplateOutput{})
	pulumi.RegisterOutputType(TemplateSourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(TemplateSpacingOutput{})
	pulumi.RegisterOutputType(TemplateSpacingPtrOutput{})
	pulumi.RegisterOutputType(TemplateStringDefaultValuesOutput{})
	pulumi.RegisterOutputType(TemplateStringDefaultValuesPtrOutput{})
	pulumi.RegisterOutputType(TemplateStringFormatConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateStringFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateStringParameterDeclarationOutput{})
	pulumi.RegisterOutputType(TemplateStringParameterDeclarationPtrOutput{})
	pulumi.RegisterOutputType(TemplateStringValueWhenUnsetConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateStringValueWhenUnsetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateSubtotalOptionsOutput{})
	pulumi.RegisterOutputType(TemplateSubtotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateTableAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableBorderOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTableBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableCellConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateTableCellConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableCellImageSizingConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableCellImageSizingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableCellStyleOutput{})
	pulumi.RegisterOutputType(TemplateTableCellStylePtrOutput{})
	pulumi.RegisterOutputType(TemplateTableConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateTableConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableConditionalFormattingOptionOutput{})
	pulumi.RegisterOutputType(TemplateTableConditionalFormattingOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateTableConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldCustomIconContentOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldCustomIconContentPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldCustomTextContentOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldCustomTextContentPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldImageConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldImageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldLinkConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldLinkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldLinkContentConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldLinkContentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldOptionOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldUrlConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldUrlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateTableFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableInlineVisualizationOutput{})
	pulumi.RegisterOutputType(TemplateTableInlineVisualizationArrayOutput{})
	pulumi.RegisterOutputType(TemplateTableOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTablePaginatedReportOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTablePaginatedReportOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTablePinnedFieldOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTablePinnedFieldOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableRowConditionalFormattingOutput{})
	pulumi.RegisterOutputType(TemplateTableRowConditionalFormattingPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableSideBorderOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTableSideBorderOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTableSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableStyleTargetOutput{})
	pulumi.RegisterOutputType(TemplateTableStyleTargetArrayOutput{})
	pulumi.RegisterOutputType(TemplateTableUnaggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateTableUnaggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTableVisualOutput{})
	pulumi.RegisterOutputType(TemplateTableVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateTextAreaControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTextAreaControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTextConditionalFormatOutput{})
	pulumi.RegisterOutputType(TemplateTextConditionalFormatPtrOutput{})
	pulumi.RegisterOutputType(TemplateTextControlPlaceholderOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTextControlPlaceholderOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTextFieldControlDisplayOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTextFieldControlDisplayOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateThousandSeparatorOptionsOutput{})
	pulumi.RegisterOutputType(TemplateThousandSeparatorOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeBasedForecastPropertiesOutput{})
	pulumi.RegisterOutputType(TemplateTimeBasedForecastPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeEqualityFilterOutput{})
	pulumi.RegisterOutputType(TemplateTimeEqualityFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeDrillDownFilterOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeDrillDownFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeFilterOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeFilterValueOutput{})
	pulumi.RegisterOutputType(TemplateTimeRangeFilterValuePtrOutput{})
	pulumi.RegisterOutputType(TemplateTooltipItemOutput{})
	pulumi.RegisterOutputType(TemplateTooltipItemArrayOutput{})
	pulumi.RegisterOutputType(TemplateTooltipOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTooltipOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomFilterOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomFilterPtrOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomMoversComputationOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomMoversComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomRankedComputationOutput{})
	pulumi.RegisterOutputType(TemplateTopBottomRankedComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTotalAggregationComputationOutput{})
	pulumi.RegisterOutputType(TemplateTotalAggregationComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTotalAggregationFunctionOutput{})
	pulumi.RegisterOutputType(TemplateTotalAggregationOptionOutput{})
	pulumi.RegisterOutputType(TemplateTotalAggregationOptionArrayOutput{})
	pulumi.RegisterOutputType(TemplateTotalOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTotalOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapAggregatedFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapAggregatedFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapFieldWellsOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapFieldWellsPtrOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapSortConfigurationOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapSortConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapVisualOutput{})
	pulumi.RegisterOutputType(TemplateTreeMapVisualPtrOutput{})
	pulumi.RegisterOutputType(TemplateTrendArrowOptionsOutput{})
	pulumi.RegisterOutputType(TemplateTrendArrowOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateUnaggregatedFieldOutput{})
	pulumi.RegisterOutputType(TemplateUnaggregatedFieldArrayOutput{})
	pulumi.RegisterOutputType(TemplateUniqueValuesComputationOutput{})
	pulumi.RegisterOutputType(TemplateUniqueValuesComputationPtrOutput{})
	pulumi.RegisterOutputType(TemplateValidationStrategyOutput{})
	pulumi.RegisterOutputType(TemplateValidationStrategyPtrOutput{})
	pulumi.RegisterOutputType(TemplateVersionOutput{})
	pulumi.RegisterOutputType(TemplateVersionPtrOutput{})
	pulumi.RegisterOutputType(TemplateVersionDefinitionOutput{})
	pulumi.RegisterOutputType(TemplateVersionDefinitionPtrOutput{})
	pulumi.RegisterOutputType(TemplateVisibleRangeOptionsOutput{})
	pulumi.RegisterOutputType(TemplateVisibleRangeOptionsPtrOutput{})
	pulumi.RegisterOutputType(TemplateVisualOutput{})
	pulumi.RegisterOutputType(TemplateVisualArrayOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionArrayOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionOperationOutput{})
	pulumi.RegisterOutputType(TemplateVisualCustomActionOperationArrayOutput{})
}
