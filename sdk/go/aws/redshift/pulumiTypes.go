// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterEndpoint struct {
	Address *string `pulumi:"address"`
	Port    *string `pulumi:"port"`
}

// ClusterEndpointInput is an input type that accepts ClusterEndpointArgs and ClusterEndpointOutput values.
// You can construct a concrete instance of `ClusterEndpointInput` via:
//
//          ClusterEndpointArgs{...}
type ClusterEndpointInput interface {
	pulumi.Input

	ToClusterEndpointOutput() ClusterEndpointOutput
	ToClusterEndpointOutputWithContext(context.Context) ClusterEndpointOutput
}

type ClusterEndpointArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	Port    pulumi.StringPtrInput `pulumi:"port"`
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointArgs) ToClusterEndpointOutput() ClusterEndpointOutput {
	return i.ToClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterEndpointArgs) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput)
}

func (i ClusterEndpointArgs) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return i.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (i ClusterEndpointArgs) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput).ToClusterEndpointPtrOutputWithContext(ctx)
}

// ClusterEndpointPtrInput is an input type that accepts ClusterEndpointArgs, ClusterEndpointPtr and ClusterEndpointPtrOutput values.
// You can construct a concrete instance of `ClusterEndpointPtrInput` via:
//
//          ClusterEndpointArgs{...}
//
//  or:
//
//          nil
type ClusterEndpointPtrInput interface {
	pulumi.Input

	ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput
	ToClusterEndpointPtrOutputWithContext(context.Context) ClusterEndpointPtrOutput
}

type clusterEndpointPtrType ClusterEndpointArgs

func ClusterEndpointPtr(v *ClusterEndpointArgs) ClusterEndpointPtrInput {
	return (*clusterEndpointPtrType)(v)
}

func (*clusterEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (i *clusterEndpointPtrType) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return i.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (i *clusterEndpointPtrType) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointPtrOutput)
}

type ClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointOutput) ToClusterEndpointOutput() ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return o.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (o ClusterEndpointOutput) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEndpoint) *ClusterEndpoint {
		return &v
	}).(ClusterEndpointPtrOutput)
}

func (o ClusterEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ClusterEndpointOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type ClusterEndpointPtrOutput struct{ *pulumi.OutputState }

func (ClusterEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointPtrOutput) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return o
}

func (o ClusterEndpointPtrOutput) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return o
}

func (o ClusterEndpointPtrOutput) Elem() ClusterEndpointOutput {
	return o.ApplyT(func(v *ClusterEndpoint) ClusterEndpoint {
		if v != nil {
			return *v
		}
		var ret ClusterEndpoint
		return ret
	}).(ClusterEndpointOutput)
}

func (o ClusterEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEndpointPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

type ClusterLoggingProperties struct {
	BucketName  string  `pulumi:"bucketName"`
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// ClusterLoggingPropertiesInput is an input type that accepts ClusterLoggingPropertiesArgs and ClusterLoggingPropertiesOutput values.
// You can construct a concrete instance of `ClusterLoggingPropertiesInput` via:
//
//          ClusterLoggingPropertiesArgs{...}
type ClusterLoggingPropertiesInput interface {
	pulumi.Input

	ToClusterLoggingPropertiesOutput() ClusterLoggingPropertiesOutput
	ToClusterLoggingPropertiesOutputWithContext(context.Context) ClusterLoggingPropertiesOutput
}

type ClusterLoggingPropertiesArgs struct {
	BucketName  pulumi.StringInput    `pulumi:"bucketName"`
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (ClusterLoggingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingProperties)(nil)).Elem()
}

func (i ClusterLoggingPropertiesArgs) ToClusterLoggingPropertiesOutput() ClusterLoggingPropertiesOutput {
	return i.ToClusterLoggingPropertiesOutputWithContext(context.Background())
}

func (i ClusterLoggingPropertiesArgs) ToClusterLoggingPropertiesOutputWithContext(ctx context.Context) ClusterLoggingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingPropertiesOutput)
}

func (i ClusterLoggingPropertiesArgs) ToClusterLoggingPropertiesPtrOutput() ClusterLoggingPropertiesPtrOutput {
	return i.ToClusterLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingPropertiesArgs) ToClusterLoggingPropertiesPtrOutputWithContext(ctx context.Context) ClusterLoggingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingPropertiesOutput).ToClusterLoggingPropertiesPtrOutputWithContext(ctx)
}

// ClusterLoggingPropertiesPtrInput is an input type that accepts ClusterLoggingPropertiesArgs, ClusterLoggingPropertiesPtr and ClusterLoggingPropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingPropertiesPtrInput` via:
//
//          ClusterLoggingPropertiesArgs{...}
//
//  or:
//
//          nil
type ClusterLoggingPropertiesPtrInput interface {
	pulumi.Input

	ToClusterLoggingPropertiesPtrOutput() ClusterLoggingPropertiesPtrOutput
	ToClusterLoggingPropertiesPtrOutputWithContext(context.Context) ClusterLoggingPropertiesPtrOutput
}

type clusterLoggingPropertiesPtrType ClusterLoggingPropertiesArgs

func ClusterLoggingPropertiesPtr(v *ClusterLoggingPropertiesArgs) ClusterLoggingPropertiesPtrInput {
	return (*clusterLoggingPropertiesPtrType)(v)
}

func (*clusterLoggingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingProperties)(nil)).Elem()
}

func (i *clusterLoggingPropertiesPtrType) ToClusterLoggingPropertiesPtrOutput() ClusterLoggingPropertiesPtrOutput {
	return i.ToClusterLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingPropertiesPtrType) ToClusterLoggingPropertiesPtrOutputWithContext(ctx context.Context) ClusterLoggingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingPropertiesPtrOutput)
}

type ClusterLoggingPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterLoggingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingProperties)(nil)).Elem()
}

func (o ClusterLoggingPropertiesOutput) ToClusterLoggingPropertiesOutput() ClusterLoggingPropertiesOutput {
	return o
}

func (o ClusterLoggingPropertiesOutput) ToClusterLoggingPropertiesOutputWithContext(ctx context.Context) ClusterLoggingPropertiesOutput {
	return o
}

func (o ClusterLoggingPropertiesOutput) ToClusterLoggingPropertiesPtrOutput() ClusterLoggingPropertiesPtrOutput {
	return o.ToClusterLoggingPropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingPropertiesOutput) ToClusterLoggingPropertiesPtrOutputWithContext(ctx context.Context) ClusterLoggingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingProperties) *ClusterLoggingProperties {
		return &v
	}).(ClusterLoggingPropertiesPtrOutput)
}

func (o ClusterLoggingPropertiesOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLoggingProperties) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o ClusterLoggingPropertiesOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLoggingProperties) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type ClusterLoggingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingProperties)(nil)).Elem()
}

func (o ClusterLoggingPropertiesPtrOutput) ToClusterLoggingPropertiesPtrOutput() ClusterLoggingPropertiesPtrOutput {
	return o
}

func (o ClusterLoggingPropertiesPtrOutput) ToClusterLoggingPropertiesPtrOutputWithContext(ctx context.Context) ClusterLoggingPropertiesPtrOutput {
	return o
}

func (o ClusterLoggingPropertiesPtrOutput) Elem() ClusterLoggingPropertiesOutput {
	return o.ApplyT(func(v *ClusterLoggingProperties) ClusterLoggingProperties {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingProperties
		return ret
	}).(ClusterLoggingPropertiesOutput)
}

func (o ClusterLoggingPropertiesPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingProperties) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterLoggingPropertiesPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type ClusterParameterGroupParameter struct {
	ParameterName  string `pulumi:"parameterName"`
	ParameterValue string `pulumi:"parameterValue"`
}

// ClusterParameterGroupParameterInput is an input type that accepts ClusterParameterGroupParameterArgs and ClusterParameterGroupParameterOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterInput` via:
//
//          ClusterParameterGroupParameterArgs{...}
type ClusterParameterGroupParameterInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput
	ToClusterParameterGroupParameterOutputWithContext(context.Context) ClusterParameterGroupParameterOutput
}

type ClusterParameterGroupParameterArgs struct {
	ParameterName  pulumi.StringInput `pulumi:"parameterName"`
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (ClusterParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return i.ToClusterParameterGroupParameterOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterOutput)
}

// ClusterParameterGroupParameterArrayInput is an input type that accepts ClusterParameterGroupParameterArray and ClusterParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterArrayInput` via:
//
//          ClusterParameterGroupParameterArray{ ClusterParameterGroupParameterArgs{...} }
type ClusterParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput
	ToClusterParameterGroupParameterArrayOutputWithContext(context.Context) ClusterParameterGroupParameterArrayOutput
}

type ClusterParameterGroupParameterArray []ClusterParameterGroupParameterInput

func (ClusterParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return i.ToClusterParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterArrayOutput)
}

type ClusterParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

func (o ClusterParameterGroupParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type ClusterParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ClusterParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParameterGroupParameter {
		return vs[0].([]ClusterParameterGroupParameter)[vs[1].(int)]
	}).(ClusterParameterGroupParameterOutput)
}

type ClusterParameterGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ClusterParameterGroupTagInput is an input type that accepts ClusterParameterGroupTagArgs and ClusterParameterGroupTagOutput values.
// You can construct a concrete instance of `ClusterParameterGroupTagInput` via:
//
//          ClusterParameterGroupTagArgs{...}
type ClusterParameterGroupTagInput interface {
	pulumi.Input

	ToClusterParameterGroupTagOutput() ClusterParameterGroupTagOutput
	ToClusterParameterGroupTagOutputWithContext(context.Context) ClusterParameterGroupTagOutput
}

type ClusterParameterGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterParameterGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupTag)(nil)).Elem()
}

func (i ClusterParameterGroupTagArgs) ToClusterParameterGroupTagOutput() ClusterParameterGroupTagOutput {
	return i.ToClusterParameterGroupTagOutputWithContext(context.Background())
}

func (i ClusterParameterGroupTagArgs) ToClusterParameterGroupTagOutputWithContext(ctx context.Context) ClusterParameterGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupTagOutput)
}

// ClusterParameterGroupTagArrayInput is an input type that accepts ClusterParameterGroupTagArray and ClusterParameterGroupTagArrayOutput values.
// You can construct a concrete instance of `ClusterParameterGroupTagArrayInput` via:
//
//          ClusterParameterGroupTagArray{ ClusterParameterGroupTagArgs{...} }
type ClusterParameterGroupTagArrayInput interface {
	pulumi.Input

	ToClusterParameterGroupTagArrayOutput() ClusterParameterGroupTagArrayOutput
	ToClusterParameterGroupTagArrayOutputWithContext(context.Context) ClusterParameterGroupTagArrayOutput
}

type ClusterParameterGroupTagArray []ClusterParameterGroupTagInput

func (ClusterParameterGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupTag)(nil)).Elem()
}

func (i ClusterParameterGroupTagArray) ToClusterParameterGroupTagArrayOutput() ClusterParameterGroupTagArrayOutput {
	return i.ToClusterParameterGroupTagArrayOutputWithContext(context.Background())
}

func (i ClusterParameterGroupTagArray) ToClusterParameterGroupTagArrayOutputWithContext(ctx context.Context) ClusterParameterGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupTagArrayOutput)
}

type ClusterParameterGroupTagOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupTag)(nil)).Elem()
}

func (o ClusterParameterGroupTagOutput) ToClusterParameterGroupTagOutput() ClusterParameterGroupTagOutput {
	return o
}

func (o ClusterParameterGroupTagOutput) ToClusterParameterGroupTagOutputWithContext(ctx context.Context) ClusterParameterGroupTagOutput {
	return o
}

func (o ClusterParameterGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClusterParameterGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterParameterGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupTag)(nil)).Elem()
}

func (o ClusterParameterGroupTagArrayOutput) ToClusterParameterGroupTagArrayOutput() ClusterParameterGroupTagArrayOutput {
	return o
}

func (o ClusterParameterGroupTagArrayOutput) ToClusterParameterGroupTagArrayOutputWithContext(ctx context.Context) ClusterParameterGroupTagArrayOutput {
	return o
}

func (o ClusterParameterGroupTagArrayOutput) Index(i pulumi.IntInput) ClusterParameterGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParameterGroupTag {
		return vs[0].([]ClusterParameterGroupTag)[vs[1].(int)]
	}).(ClusterParameterGroupTagOutput)
}

type ClusterSecurityGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ClusterSecurityGroupTagInput is an input type that accepts ClusterSecurityGroupTagArgs and ClusterSecurityGroupTagOutput values.
// You can construct a concrete instance of `ClusterSecurityGroupTagInput` via:
//
//          ClusterSecurityGroupTagArgs{...}
type ClusterSecurityGroupTagInput interface {
	pulumi.Input

	ToClusterSecurityGroupTagOutput() ClusterSecurityGroupTagOutput
	ToClusterSecurityGroupTagOutputWithContext(context.Context) ClusterSecurityGroupTagOutput
}

type ClusterSecurityGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecurityGroupTag)(nil)).Elem()
}

func (i ClusterSecurityGroupTagArgs) ToClusterSecurityGroupTagOutput() ClusterSecurityGroupTagOutput {
	return i.ToClusterSecurityGroupTagOutputWithContext(context.Background())
}

func (i ClusterSecurityGroupTagArgs) ToClusterSecurityGroupTagOutputWithContext(ctx context.Context) ClusterSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecurityGroupTagOutput)
}

// ClusterSecurityGroupTagArrayInput is an input type that accepts ClusterSecurityGroupTagArray and ClusterSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `ClusterSecurityGroupTagArrayInput` via:
//
//          ClusterSecurityGroupTagArray{ ClusterSecurityGroupTagArgs{...} }
type ClusterSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToClusterSecurityGroupTagArrayOutput() ClusterSecurityGroupTagArrayOutput
	ToClusterSecurityGroupTagArrayOutputWithContext(context.Context) ClusterSecurityGroupTagArrayOutput
}

type ClusterSecurityGroupTagArray []ClusterSecurityGroupTagInput

func (ClusterSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecurityGroupTag)(nil)).Elem()
}

func (i ClusterSecurityGroupTagArray) ToClusterSecurityGroupTagArrayOutput() ClusterSecurityGroupTagArrayOutput {
	return i.ToClusterSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i ClusterSecurityGroupTagArray) ToClusterSecurityGroupTagArrayOutputWithContext(ctx context.Context) ClusterSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecurityGroupTagArrayOutput)
}

type ClusterSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (ClusterSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecurityGroupTag)(nil)).Elem()
}

func (o ClusterSecurityGroupTagOutput) ToClusterSecurityGroupTagOutput() ClusterSecurityGroupTagOutput {
	return o
}

func (o ClusterSecurityGroupTagOutput) ToClusterSecurityGroupTagOutputWithContext(ctx context.Context) ClusterSecurityGroupTagOutput {
	return o
}

func (o ClusterSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClusterSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecurityGroupTag)(nil)).Elem()
}

func (o ClusterSecurityGroupTagArrayOutput) ToClusterSecurityGroupTagArrayOutput() ClusterSecurityGroupTagArrayOutput {
	return o
}

func (o ClusterSecurityGroupTagArrayOutput) ToClusterSecurityGroupTagArrayOutputWithContext(ctx context.Context) ClusterSecurityGroupTagArrayOutput {
	return o
}

func (o ClusterSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) ClusterSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSecurityGroupTag {
		return vs[0].([]ClusterSecurityGroupTag)[vs[1].(int)]
	}).(ClusterSecurityGroupTagOutput)
}

type ClusterSubnetGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ClusterSubnetGroupTagInput is an input type that accepts ClusterSubnetGroupTagArgs and ClusterSubnetGroupTagOutput values.
// You can construct a concrete instance of `ClusterSubnetGroupTagInput` via:
//
//          ClusterSubnetGroupTagArgs{...}
type ClusterSubnetGroupTagInput interface {
	pulumi.Input

	ToClusterSubnetGroupTagOutput() ClusterSubnetGroupTagOutput
	ToClusterSubnetGroupTagOutputWithContext(context.Context) ClusterSubnetGroupTagOutput
}

type ClusterSubnetGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterSubnetGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSubnetGroupTag)(nil)).Elem()
}

func (i ClusterSubnetGroupTagArgs) ToClusterSubnetGroupTagOutput() ClusterSubnetGroupTagOutput {
	return i.ToClusterSubnetGroupTagOutputWithContext(context.Background())
}

func (i ClusterSubnetGroupTagArgs) ToClusterSubnetGroupTagOutputWithContext(ctx context.Context) ClusterSubnetGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSubnetGroupTagOutput)
}

// ClusterSubnetGroupTagArrayInput is an input type that accepts ClusterSubnetGroupTagArray and ClusterSubnetGroupTagArrayOutput values.
// You can construct a concrete instance of `ClusterSubnetGroupTagArrayInput` via:
//
//          ClusterSubnetGroupTagArray{ ClusterSubnetGroupTagArgs{...} }
type ClusterSubnetGroupTagArrayInput interface {
	pulumi.Input

	ToClusterSubnetGroupTagArrayOutput() ClusterSubnetGroupTagArrayOutput
	ToClusterSubnetGroupTagArrayOutputWithContext(context.Context) ClusterSubnetGroupTagArrayOutput
}

type ClusterSubnetGroupTagArray []ClusterSubnetGroupTagInput

func (ClusterSubnetGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSubnetGroupTag)(nil)).Elem()
}

func (i ClusterSubnetGroupTagArray) ToClusterSubnetGroupTagArrayOutput() ClusterSubnetGroupTagArrayOutput {
	return i.ToClusterSubnetGroupTagArrayOutputWithContext(context.Background())
}

func (i ClusterSubnetGroupTagArray) ToClusterSubnetGroupTagArrayOutputWithContext(ctx context.Context) ClusterSubnetGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSubnetGroupTagArrayOutput)
}

type ClusterSubnetGroupTagOutput struct{ *pulumi.OutputState }

func (ClusterSubnetGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSubnetGroupTag)(nil)).Elem()
}

func (o ClusterSubnetGroupTagOutput) ToClusterSubnetGroupTagOutput() ClusterSubnetGroupTagOutput {
	return o
}

func (o ClusterSubnetGroupTagOutput) ToClusterSubnetGroupTagOutputWithContext(ctx context.Context) ClusterSubnetGroupTagOutput {
	return o
}

func (o ClusterSubnetGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSubnetGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClusterSubnetGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSubnetGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterSubnetGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterSubnetGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSubnetGroupTag)(nil)).Elem()
}

func (o ClusterSubnetGroupTagArrayOutput) ToClusterSubnetGroupTagArrayOutput() ClusterSubnetGroupTagArrayOutput {
	return o
}

func (o ClusterSubnetGroupTagArrayOutput) ToClusterSubnetGroupTagArrayOutputWithContext(ctx context.Context) ClusterSubnetGroupTagArrayOutput {
	return o
}

func (o ClusterSubnetGroupTagArrayOutput) Index(i pulumi.IntInput) ClusterSubnetGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSubnetGroupTag {
		return vs[0].([]ClusterSubnetGroupTag)[vs[1].(int)]
	}).(ClusterSubnetGroupTagOutput)
}

// A key-value pair to associate with a resource.
type ClusterTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ClusterTagInput is an input type that accepts ClusterTagArgs and ClusterTagOutput values.
// You can construct a concrete instance of `ClusterTagInput` via:
//
//          ClusterTagArgs{...}
type ClusterTagInput interface {
	pulumi.Input

	ToClusterTagOutput() ClusterTagOutput
	ToClusterTagOutputWithContext(context.Context) ClusterTagOutput
}

// A key-value pair to associate with a resource.
type ClusterTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (i ClusterTagArgs) ToClusterTagOutput() ClusterTagOutput {
	return i.ToClusterTagOutputWithContext(context.Background())
}

func (i ClusterTagArgs) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagOutput)
}

// ClusterTagArrayInput is an input type that accepts ClusterTagArray and ClusterTagArrayOutput values.
// You can construct a concrete instance of `ClusterTagArrayInput` via:
//
//          ClusterTagArray{ ClusterTagArgs{...} }
type ClusterTagArrayInput interface {
	pulumi.Input

	ToClusterTagArrayOutput() ClusterTagArrayOutput
	ToClusterTagArrayOutputWithContext(context.Context) ClusterTagArrayOutput
}

type ClusterTagArray []ClusterTagInput

func (ClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (i ClusterTagArray) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return i.ToClusterTagArrayOutputWithContext(context.Background())
}

func (i ClusterTagArray) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ClusterTagOutput struct{ *pulumi.OutputState }

func (ClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTag)(nil)).Elem()
}

func (o ClusterTagOutput) ToClusterTagOutput() ClusterTagOutput {
	return o
}

func (o ClusterTagOutput) ToClusterTagOutputWithContext(ctx context.Context) ClusterTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ClusterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterTagArrayOutput struct{ *pulumi.OutputState }

func (ClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterTag)(nil)).Elem()
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutput() ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) ToClusterTagArrayOutputWithContext(ctx context.Context) ClusterTagArrayOutput {
	return o
}

func (o ClusterTagArrayOutput) Index(i pulumi.IntInput) ClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterTag {
		return vs[0].([]ClusterTag)[vs[1].(int)]
	}).(ClusterTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointInput)(nil)).Elem(), ClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointPtrInput)(nil)).Elem(), ClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingPropertiesInput)(nil)).Elem(), ClusterLoggingPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingPropertiesPtrInput)(nil)).Elem(), ClusterLoggingPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterInput)(nil)).Elem(), ClusterParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterArrayInput)(nil)).Elem(), ClusterParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupTagInput)(nil)).Elem(), ClusterParameterGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupTagArrayInput)(nil)).Elem(), ClusterParameterGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecurityGroupTagInput)(nil)).Elem(), ClusterSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecurityGroupTagArrayInput)(nil)).Elem(), ClusterSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSubnetGroupTagInput)(nil)).Elem(), ClusterSubnetGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSubnetGroupTagArrayInput)(nil)).Elem(), ClusterSubnetGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagInput)(nil)).Elem(), ClusterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTagArrayInput)(nil)).Elem(), ClusterTagArray{})
	pulumi.RegisterOutputType(ClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterEndpointPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterLoggingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupTagOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(ClusterSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterSubnetGroupTagOutput{})
	pulumi.RegisterOutputType(ClusterSubnetGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ClusterTagOutput{})
	pulumi.RegisterOutputType(ClusterTagArrayOutput{})
}
