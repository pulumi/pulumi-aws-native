// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package licensemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
type GrantAllowedOperationList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
	AllowedOperationList []string `pulumi:"allowedOperationList"`
}

// GrantAllowedOperationListInput is an input type that accepts GrantAllowedOperationListArgs and GrantAllowedOperationListOutput values.
// You can construct a concrete instance of `GrantAllowedOperationListInput` via:
//
//          GrantAllowedOperationListArgs{...}
type GrantAllowedOperationListInput interface {
	pulumi.Input

	ToGrantAllowedOperationListOutput() GrantAllowedOperationListOutput
	ToGrantAllowedOperationListOutputWithContext(context.Context) GrantAllowedOperationListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
type GrantAllowedOperationListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
	AllowedOperationList pulumi.StringArrayInput `pulumi:"allowedOperationList"`
}

func (GrantAllowedOperationListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantAllowedOperationList)(nil)).Elem()
}

func (i GrantAllowedOperationListArgs) ToGrantAllowedOperationListOutput() GrantAllowedOperationListOutput {
	return i.ToGrantAllowedOperationListOutputWithContext(context.Background())
}

func (i GrantAllowedOperationListArgs) ToGrantAllowedOperationListOutputWithContext(ctx context.Context) GrantAllowedOperationListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantAllowedOperationListOutput)
}

func (i GrantAllowedOperationListArgs) ToGrantAllowedOperationListPtrOutput() GrantAllowedOperationListPtrOutput {
	return i.ToGrantAllowedOperationListPtrOutputWithContext(context.Background())
}

func (i GrantAllowedOperationListArgs) ToGrantAllowedOperationListPtrOutputWithContext(ctx context.Context) GrantAllowedOperationListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantAllowedOperationListOutput).ToGrantAllowedOperationListPtrOutputWithContext(ctx)
}

// GrantAllowedOperationListPtrInput is an input type that accepts GrantAllowedOperationListArgs, GrantAllowedOperationListPtr and GrantAllowedOperationListPtrOutput values.
// You can construct a concrete instance of `GrantAllowedOperationListPtrInput` via:
//
//          GrantAllowedOperationListArgs{...}
//
//  or:
//
//          nil
type GrantAllowedOperationListPtrInput interface {
	pulumi.Input

	ToGrantAllowedOperationListPtrOutput() GrantAllowedOperationListPtrOutput
	ToGrantAllowedOperationListPtrOutputWithContext(context.Context) GrantAllowedOperationListPtrOutput
}

type grantAllowedOperationListPtrType GrantAllowedOperationListArgs

func GrantAllowedOperationListPtr(v *GrantAllowedOperationListArgs) GrantAllowedOperationListPtrInput {
	return (*grantAllowedOperationListPtrType)(v)
}

func (*grantAllowedOperationListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantAllowedOperationList)(nil)).Elem()
}

func (i *grantAllowedOperationListPtrType) ToGrantAllowedOperationListPtrOutput() GrantAllowedOperationListPtrOutput {
	return i.ToGrantAllowedOperationListPtrOutputWithContext(context.Background())
}

func (i *grantAllowedOperationListPtrType) ToGrantAllowedOperationListPtrOutputWithContext(ctx context.Context) GrantAllowedOperationListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantAllowedOperationListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
type GrantAllowedOperationListOutput struct{ *pulumi.OutputState }

func (GrantAllowedOperationListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantAllowedOperationList)(nil)).Elem()
}

func (o GrantAllowedOperationListOutput) ToGrantAllowedOperationListOutput() GrantAllowedOperationListOutput {
	return o
}

func (o GrantAllowedOperationListOutput) ToGrantAllowedOperationListOutputWithContext(ctx context.Context) GrantAllowedOperationListOutput {
	return o
}

func (o GrantAllowedOperationListOutput) ToGrantAllowedOperationListPtrOutput() GrantAllowedOperationListPtrOutput {
	return o.ToGrantAllowedOperationListPtrOutputWithContext(context.Background())
}

func (o GrantAllowedOperationListOutput) ToGrantAllowedOperationListPtrOutputWithContext(ctx context.Context) GrantAllowedOperationListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrantAllowedOperationList) *GrantAllowedOperationList {
		return &v
	}).(GrantAllowedOperationListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
func (o GrantAllowedOperationListOutput) AllowedOperationList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrantAllowedOperationList) []string { return v.AllowedOperationList }).(pulumi.StringArrayOutput)
}

type GrantAllowedOperationListPtrOutput struct{ *pulumi.OutputState }

func (GrantAllowedOperationListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantAllowedOperationList)(nil)).Elem()
}

func (o GrantAllowedOperationListPtrOutput) ToGrantAllowedOperationListPtrOutput() GrantAllowedOperationListPtrOutput {
	return o
}

func (o GrantAllowedOperationListPtrOutput) ToGrantAllowedOperationListPtrOutputWithContext(ctx context.Context) GrantAllowedOperationListPtrOutput {
	return o
}

func (o GrantAllowedOperationListPtrOutput) Elem() GrantAllowedOperationListOutput {
	return o.ApplyT(func(v *GrantAllowedOperationList) GrantAllowedOperationList {
		if v != nil {
			return *v
		}
		var ret GrantAllowedOperationList
		return ret
	}).(GrantAllowedOperationListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
func (o GrantAllowedOperationListPtrOutput) AllowedOperationList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrantAllowedOperationList) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOperationList
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
type GrantArnList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
	ArnList []string `pulumi:"arnList"`
}

// GrantArnListInput is an input type that accepts GrantArnListArgs and GrantArnListOutput values.
// You can construct a concrete instance of `GrantArnListInput` via:
//
//          GrantArnListArgs{...}
type GrantArnListInput interface {
	pulumi.Input

	ToGrantArnListOutput() GrantArnListOutput
	ToGrantArnListOutputWithContext(context.Context) GrantArnListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
type GrantArnListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
	ArnList pulumi.StringArrayInput `pulumi:"arnList"`
}

func (GrantArnListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantArnList)(nil)).Elem()
}

func (i GrantArnListArgs) ToGrantArnListOutput() GrantArnListOutput {
	return i.ToGrantArnListOutputWithContext(context.Background())
}

func (i GrantArnListArgs) ToGrantArnListOutputWithContext(ctx context.Context) GrantArnListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantArnListOutput)
}

func (i GrantArnListArgs) ToGrantArnListPtrOutput() GrantArnListPtrOutput {
	return i.ToGrantArnListPtrOutputWithContext(context.Background())
}

func (i GrantArnListArgs) ToGrantArnListPtrOutputWithContext(ctx context.Context) GrantArnListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantArnListOutput).ToGrantArnListPtrOutputWithContext(ctx)
}

// GrantArnListPtrInput is an input type that accepts GrantArnListArgs, GrantArnListPtr and GrantArnListPtrOutput values.
// You can construct a concrete instance of `GrantArnListPtrInput` via:
//
//          GrantArnListArgs{...}
//
//  or:
//
//          nil
type GrantArnListPtrInput interface {
	pulumi.Input

	ToGrantArnListPtrOutput() GrantArnListPtrOutput
	ToGrantArnListPtrOutputWithContext(context.Context) GrantArnListPtrOutput
}

type grantArnListPtrType GrantArnListArgs

func GrantArnListPtr(v *GrantArnListArgs) GrantArnListPtrInput {
	return (*grantArnListPtrType)(v)
}

func (*grantArnListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantArnList)(nil)).Elem()
}

func (i *grantArnListPtrType) ToGrantArnListPtrOutput() GrantArnListPtrOutput {
	return i.ToGrantArnListPtrOutputWithContext(context.Background())
}

func (i *grantArnListPtrType) ToGrantArnListPtrOutputWithContext(ctx context.Context) GrantArnListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantArnListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
type GrantArnListOutput struct{ *pulumi.OutputState }

func (GrantArnListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantArnList)(nil)).Elem()
}

func (o GrantArnListOutput) ToGrantArnListOutput() GrantArnListOutput {
	return o
}

func (o GrantArnListOutput) ToGrantArnListOutputWithContext(ctx context.Context) GrantArnListOutput {
	return o
}

func (o GrantArnListOutput) ToGrantArnListPtrOutput() GrantArnListPtrOutput {
	return o.ToGrantArnListPtrOutputWithContext(context.Background())
}

func (o GrantArnListOutput) ToGrantArnListPtrOutputWithContext(ctx context.Context) GrantArnListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrantArnList) *GrantArnList {
		return &v
	}).(GrantArnListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
func (o GrantArnListOutput) ArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrantArnList) []string { return v.ArnList }).(pulumi.StringArrayOutput)
}

type GrantArnListPtrOutput struct{ *pulumi.OutputState }

func (GrantArnListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantArnList)(nil)).Elem()
}

func (o GrantArnListPtrOutput) ToGrantArnListPtrOutput() GrantArnListPtrOutput {
	return o
}

func (o GrantArnListPtrOutput) ToGrantArnListPtrOutputWithContext(ctx context.Context) GrantArnListPtrOutput {
	return o
}

func (o GrantArnListPtrOutput) Elem() GrantArnListOutput {
	return o.ApplyT(func(v *GrantArnList) GrantArnList {
		if v != nil {
			return *v
		}
		var ret GrantArnList
		return ret
	}).(GrantArnListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
func (o GrantArnListPtrOutput) ArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrantArnList) []string {
		if v == nil {
			return nil
		}
		return v.ArnList
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
type GrantFilter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
	Values GrantStringList `pulumi:"values"`
}

// GrantFilterInput is an input type that accepts GrantFilterArgs and GrantFilterOutput values.
// You can construct a concrete instance of `GrantFilterInput` via:
//
//          GrantFilterArgs{...}
type GrantFilterInput interface {
	pulumi.Input

	ToGrantFilterOutput() GrantFilterOutput
	ToGrantFilterOutputWithContext(context.Context) GrantFilterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
type GrantFilterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
	Values GrantStringListInput `pulumi:"values"`
}

func (GrantFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantFilter)(nil)).Elem()
}

func (i GrantFilterArgs) ToGrantFilterOutput() GrantFilterOutput {
	return i.ToGrantFilterOutputWithContext(context.Background())
}

func (i GrantFilterArgs) ToGrantFilterOutputWithContext(ctx context.Context) GrantFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantFilterOutput)
}

// GrantFilterArrayInput is an input type that accepts GrantFilterArray and GrantFilterArrayOutput values.
// You can construct a concrete instance of `GrantFilterArrayInput` via:
//
//          GrantFilterArray{ GrantFilterArgs{...} }
type GrantFilterArrayInput interface {
	pulumi.Input

	ToGrantFilterArrayOutput() GrantFilterArrayOutput
	ToGrantFilterArrayOutputWithContext(context.Context) GrantFilterArrayOutput
}

type GrantFilterArray []GrantFilterInput

func (GrantFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrantFilter)(nil)).Elem()
}

func (i GrantFilterArray) ToGrantFilterArrayOutput() GrantFilterArrayOutput {
	return i.ToGrantFilterArrayOutputWithContext(context.Background())
}

func (i GrantFilterArray) ToGrantFilterArrayOutputWithContext(ctx context.Context) GrantFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantFilterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
type GrantFilterOutput struct{ *pulumi.OutputState }

func (GrantFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantFilter)(nil)).Elem()
}

func (o GrantFilterOutput) ToGrantFilterOutput() GrantFilterOutput {
	return o
}

func (o GrantFilterOutput) ToGrantFilterOutputWithContext(ctx context.Context) GrantFilterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
func (o GrantFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GrantFilter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
func (o GrantFilterOutput) Values() GrantStringListOutput {
	return o.ApplyT(func(v GrantFilter) GrantStringList { return v.Values }).(GrantStringListOutput)
}

type GrantFilterArrayOutput struct{ *pulumi.OutputState }

func (GrantFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrantFilter)(nil)).Elem()
}

func (o GrantFilterArrayOutput) ToGrantFilterArrayOutput() GrantFilterArrayOutput {
	return o
}

func (o GrantFilterArrayOutput) ToGrantFilterArrayOutputWithContext(ctx context.Context) GrantFilterArrayOutput {
	return o
}

func (o GrantFilterArrayOutput) Index(i pulumi.IntInput) GrantFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GrantFilter {
		return vs[0].([]GrantFilter)[vs[1].(int)]
	}).(GrantFilterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
type GrantFilterList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
	FilterList []GrantFilter `pulumi:"filterList"`
}

// GrantFilterListInput is an input type that accepts GrantFilterListArgs and GrantFilterListOutput values.
// You can construct a concrete instance of `GrantFilterListInput` via:
//
//          GrantFilterListArgs{...}
type GrantFilterListInput interface {
	pulumi.Input

	ToGrantFilterListOutput() GrantFilterListOutput
	ToGrantFilterListOutputWithContext(context.Context) GrantFilterListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
type GrantFilterListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
	FilterList GrantFilterArrayInput `pulumi:"filterList"`
}

func (GrantFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantFilterList)(nil)).Elem()
}

func (i GrantFilterListArgs) ToGrantFilterListOutput() GrantFilterListOutput {
	return i.ToGrantFilterListOutputWithContext(context.Background())
}

func (i GrantFilterListArgs) ToGrantFilterListOutputWithContext(ctx context.Context) GrantFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantFilterListOutput)
}

func (i GrantFilterListArgs) ToGrantFilterListPtrOutput() GrantFilterListPtrOutput {
	return i.ToGrantFilterListPtrOutputWithContext(context.Background())
}

func (i GrantFilterListArgs) ToGrantFilterListPtrOutputWithContext(ctx context.Context) GrantFilterListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantFilterListOutput).ToGrantFilterListPtrOutputWithContext(ctx)
}

// GrantFilterListPtrInput is an input type that accepts GrantFilterListArgs, GrantFilterListPtr and GrantFilterListPtrOutput values.
// You can construct a concrete instance of `GrantFilterListPtrInput` via:
//
//          GrantFilterListArgs{...}
//
//  or:
//
//          nil
type GrantFilterListPtrInput interface {
	pulumi.Input

	ToGrantFilterListPtrOutput() GrantFilterListPtrOutput
	ToGrantFilterListPtrOutputWithContext(context.Context) GrantFilterListPtrOutput
}

type grantFilterListPtrType GrantFilterListArgs

func GrantFilterListPtr(v *GrantFilterListArgs) GrantFilterListPtrInput {
	return (*grantFilterListPtrType)(v)
}

func (*grantFilterListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantFilterList)(nil)).Elem()
}

func (i *grantFilterListPtrType) ToGrantFilterListPtrOutput() GrantFilterListPtrOutput {
	return i.ToGrantFilterListPtrOutputWithContext(context.Background())
}

func (i *grantFilterListPtrType) ToGrantFilterListPtrOutputWithContext(ctx context.Context) GrantFilterListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantFilterListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
type GrantFilterListOutput struct{ *pulumi.OutputState }

func (GrantFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantFilterList)(nil)).Elem()
}

func (o GrantFilterListOutput) ToGrantFilterListOutput() GrantFilterListOutput {
	return o
}

func (o GrantFilterListOutput) ToGrantFilterListOutputWithContext(ctx context.Context) GrantFilterListOutput {
	return o
}

func (o GrantFilterListOutput) ToGrantFilterListPtrOutput() GrantFilterListPtrOutput {
	return o.ToGrantFilterListPtrOutputWithContext(context.Background())
}

func (o GrantFilterListOutput) ToGrantFilterListPtrOutputWithContext(ctx context.Context) GrantFilterListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrantFilterList) *GrantFilterList {
		return &v
	}).(GrantFilterListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
func (o GrantFilterListOutput) FilterList() GrantFilterArrayOutput {
	return o.ApplyT(func(v GrantFilterList) []GrantFilter { return v.FilterList }).(GrantFilterArrayOutput)
}

type GrantFilterListPtrOutput struct{ *pulumi.OutputState }

func (GrantFilterListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantFilterList)(nil)).Elem()
}

func (o GrantFilterListPtrOutput) ToGrantFilterListPtrOutput() GrantFilterListPtrOutput {
	return o
}

func (o GrantFilterListPtrOutput) ToGrantFilterListPtrOutputWithContext(ctx context.Context) GrantFilterListPtrOutput {
	return o
}

func (o GrantFilterListPtrOutput) Elem() GrantFilterListOutput {
	return o.ApplyT(func(v *GrantFilterList) GrantFilterList {
		if v != nil {
			return *v
		}
		var ret GrantFilterList
		return ret
	}).(GrantFilterListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
func (o GrantFilterListPtrOutput) FilterList() GrantFilterArrayOutput {
	return o.ApplyT(func(v *GrantFilterList) []GrantFilter {
		if v == nil {
			return nil
		}
		return v.FilterList
	}).(GrantFilterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
type GrantStringList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
	StringList []string `pulumi:"stringList"`
}

// GrantStringListInput is an input type that accepts GrantStringListArgs and GrantStringListOutput values.
// You can construct a concrete instance of `GrantStringListInput` via:
//
//          GrantStringListArgs{...}
type GrantStringListInput interface {
	pulumi.Input

	ToGrantStringListOutput() GrantStringListOutput
	ToGrantStringListOutputWithContext(context.Context) GrantStringListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
type GrantStringListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
	StringList pulumi.StringArrayInput `pulumi:"stringList"`
}

func (GrantStringListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantStringList)(nil)).Elem()
}

func (i GrantStringListArgs) ToGrantStringListOutput() GrantStringListOutput {
	return i.ToGrantStringListOutputWithContext(context.Background())
}

func (i GrantStringListArgs) ToGrantStringListOutputWithContext(ctx context.Context) GrantStringListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantStringListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
type GrantStringListOutput struct{ *pulumi.OutputState }

func (GrantStringListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantStringList)(nil)).Elem()
}

func (o GrantStringListOutput) ToGrantStringListOutput() GrantStringListOutput {
	return o
}

func (o GrantStringListOutput) ToGrantStringListOutputWithContext(ctx context.Context) GrantStringListOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
func (o GrantStringListOutput) StringList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GrantStringList) []string { return v.StringList }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
type GrantTagList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
	TagList []aws.Tag `pulumi:"tagList"`
}

// GrantTagListInput is an input type that accepts GrantTagListArgs and GrantTagListOutput values.
// You can construct a concrete instance of `GrantTagListInput` via:
//
//          GrantTagListArgs{...}
type GrantTagListInput interface {
	pulumi.Input

	ToGrantTagListOutput() GrantTagListOutput
	ToGrantTagListOutputWithContext(context.Context) GrantTagListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
type GrantTagListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
	TagList aws.TagArrayInput `pulumi:"tagList"`
}

func (GrantTagListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantTagList)(nil)).Elem()
}

func (i GrantTagListArgs) ToGrantTagListOutput() GrantTagListOutput {
	return i.ToGrantTagListOutputWithContext(context.Background())
}

func (i GrantTagListArgs) ToGrantTagListOutputWithContext(ctx context.Context) GrantTagListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantTagListOutput)
}

func (i GrantTagListArgs) ToGrantTagListPtrOutput() GrantTagListPtrOutput {
	return i.ToGrantTagListPtrOutputWithContext(context.Background())
}

func (i GrantTagListArgs) ToGrantTagListPtrOutputWithContext(ctx context.Context) GrantTagListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantTagListOutput).ToGrantTagListPtrOutputWithContext(ctx)
}

// GrantTagListPtrInput is an input type that accepts GrantTagListArgs, GrantTagListPtr and GrantTagListPtrOutput values.
// You can construct a concrete instance of `GrantTagListPtrInput` via:
//
//          GrantTagListArgs{...}
//
//  or:
//
//          nil
type GrantTagListPtrInput interface {
	pulumi.Input

	ToGrantTagListPtrOutput() GrantTagListPtrOutput
	ToGrantTagListPtrOutputWithContext(context.Context) GrantTagListPtrOutput
}

type grantTagListPtrType GrantTagListArgs

func GrantTagListPtr(v *GrantTagListArgs) GrantTagListPtrInput {
	return (*grantTagListPtrType)(v)
}

func (*grantTagListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantTagList)(nil)).Elem()
}

func (i *grantTagListPtrType) ToGrantTagListPtrOutput() GrantTagListPtrOutput {
	return i.ToGrantTagListPtrOutputWithContext(context.Background())
}

func (i *grantTagListPtrType) ToGrantTagListPtrOutputWithContext(ctx context.Context) GrantTagListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantTagListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
type GrantTagListOutput struct{ *pulumi.OutputState }

func (GrantTagListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantTagList)(nil)).Elem()
}

func (o GrantTagListOutput) ToGrantTagListOutput() GrantTagListOutput {
	return o
}

func (o GrantTagListOutput) ToGrantTagListOutputWithContext(ctx context.Context) GrantTagListOutput {
	return o
}

func (o GrantTagListOutput) ToGrantTagListPtrOutput() GrantTagListPtrOutput {
	return o.ToGrantTagListPtrOutputWithContext(context.Background())
}

func (o GrantTagListOutput) ToGrantTagListPtrOutputWithContext(ctx context.Context) GrantTagListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrantTagList) *GrantTagList {
		return &v
	}).(GrantTagListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
func (o GrantTagListOutput) TagList() aws.TagArrayOutput {
	return o.ApplyT(func(v GrantTagList) []aws.Tag { return v.TagList }).(aws.TagArrayOutput)
}

type GrantTagListPtrOutput struct{ *pulumi.OutputState }

func (GrantTagListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrantTagList)(nil)).Elem()
}

func (o GrantTagListPtrOutput) ToGrantTagListPtrOutput() GrantTagListPtrOutput {
	return o
}

func (o GrantTagListPtrOutput) ToGrantTagListPtrOutputWithContext(ctx context.Context) GrantTagListPtrOutput {
	return o
}

func (o GrantTagListPtrOutput) Elem() GrantTagListOutput {
	return o.ApplyT(func(v *GrantTagList) GrantTagList {
		if v != nil {
			return *v
		}
		var ret GrantTagList
		return ret
	}).(GrantTagListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
func (o GrantTagListPtrOutput) TagList() aws.TagArrayOutput {
	return o.ApplyT(func(v *GrantTagList) []aws.Tag {
		if v == nil {
			return nil
		}
		return v.TagList
	}).(aws.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
type LicenseArnList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
	ArnList []string `pulumi:"arnList"`
}

// LicenseArnListInput is an input type that accepts LicenseArnListArgs and LicenseArnListOutput values.
// You can construct a concrete instance of `LicenseArnListInput` via:
//
//          LicenseArnListArgs{...}
type LicenseArnListInput interface {
	pulumi.Input

	ToLicenseArnListOutput() LicenseArnListOutput
	ToLicenseArnListOutputWithContext(context.Context) LicenseArnListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
type LicenseArnListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
	ArnList pulumi.StringArrayInput `pulumi:"arnList"`
}

func (LicenseArnListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseArnList)(nil)).Elem()
}

func (i LicenseArnListArgs) ToLicenseArnListOutput() LicenseArnListOutput {
	return i.ToLicenseArnListOutputWithContext(context.Background())
}

func (i LicenseArnListArgs) ToLicenseArnListOutputWithContext(ctx context.Context) LicenseArnListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseArnListOutput)
}

func (i LicenseArnListArgs) ToLicenseArnListPtrOutput() LicenseArnListPtrOutput {
	return i.ToLicenseArnListPtrOutputWithContext(context.Background())
}

func (i LicenseArnListArgs) ToLicenseArnListPtrOutputWithContext(ctx context.Context) LicenseArnListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseArnListOutput).ToLicenseArnListPtrOutputWithContext(ctx)
}

// LicenseArnListPtrInput is an input type that accepts LicenseArnListArgs, LicenseArnListPtr and LicenseArnListPtrOutput values.
// You can construct a concrete instance of `LicenseArnListPtrInput` via:
//
//          LicenseArnListArgs{...}
//
//  or:
//
//          nil
type LicenseArnListPtrInput interface {
	pulumi.Input

	ToLicenseArnListPtrOutput() LicenseArnListPtrOutput
	ToLicenseArnListPtrOutputWithContext(context.Context) LicenseArnListPtrOutput
}

type licenseArnListPtrType LicenseArnListArgs

func LicenseArnListPtr(v *LicenseArnListArgs) LicenseArnListPtrInput {
	return (*licenseArnListPtrType)(v)
}

func (*licenseArnListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseArnList)(nil)).Elem()
}

func (i *licenseArnListPtrType) ToLicenseArnListPtrOutput() LicenseArnListPtrOutput {
	return i.ToLicenseArnListPtrOutputWithContext(context.Background())
}

func (i *licenseArnListPtrType) ToLicenseArnListPtrOutputWithContext(ctx context.Context) LicenseArnListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseArnListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
type LicenseArnListOutput struct{ *pulumi.OutputState }

func (LicenseArnListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseArnList)(nil)).Elem()
}

func (o LicenseArnListOutput) ToLicenseArnListOutput() LicenseArnListOutput {
	return o
}

func (o LicenseArnListOutput) ToLicenseArnListOutputWithContext(ctx context.Context) LicenseArnListOutput {
	return o
}

func (o LicenseArnListOutput) ToLicenseArnListPtrOutput() LicenseArnListPtrOutput {
	return o.ToLicenseArnListPtrOutputWithContext(context.Background())
}

func (o LicenseArnListOutput) ToLicenseArnListPtrOutputWithContext(ctx context.Context) LicenseArnListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseArnList) *LicenseArnList {
		return &v
	}).(LicenseArnListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
func (o LicenseArnListOutput) ArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicenseArnList) []string { return v.ArnList }).(pulumi.StringArrayOutput)
}

type LicenseArnListPtrOutput struct{ *pulumi.OutputState }

func (LicenseArnListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseArnList)(nil)).Elem()
}

func (o LicenseArnListPtrOutput) ToLicenseArnListPtrOutput() LicenseArnListPtrOutput {
	return o
}

func (o LicenseArnListPtrOutput) ToLicenseArnListPtrOutputWithContext(ctx context.Context) LicenseArnListPtrOutput {
	return o
}

func (o LicenseArnListPtrOutput) Elem() LicenseArnListOutput {
	return o.ApplyT(func(v *LicenseArnList) LicenseArnList {
		if v != nil {
			return *v
		}
		var ret LicenseArnList
		return ret
	}).(LicenseArnListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
func (o LicenseArnListPtrOutput) ArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LicenseArnList) []string {
		if v == nil {
			return nil
		}
		return v.ArnList
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
type LicenseBorrowConfiguration struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
	AllowEarlyCheckIn bool `pulumi:"allowEarlyCheckIn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
	MaxTimeToLiveInMinutes int `pulumi:"maxTimeToLiveInMinutes"`
}

// LicenseBorrowConfigurationInput is an input type that accepts LicenseBorrowConfigurationArgs and LicenseBorrowConfigurationOutput values.
// You can construct a concrete instance of `LicenseBorrowConfigurationInput` via:
//
//          LicenseBorrowConfigurationArgs{...}
type LicenseBorrowConfigurationInput interface {
	pulumi.Input

	ToLicenseBorrowConfigurationOutput() LicenseBorrowConfigurationOutput
	ToLicenseBorrowConfigurationOutputWithContext(context.Context) LicenseBorrowConfigurationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
type LicenseBorrowConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
	AllowEarlyCheckIn pulumi.BoolInput `pulumi:"allowEarlyCheckIn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
	MaxTimeToLiveInMinutes pulumi.IntInput `pulumi:"maxTimeToLiveInMinutes"`
}

func (LicenseBorrowConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseBorrowConfiguration)(nil)).Elem()
}

func (i LicenseBorrowConfigurationArgs) ToLicenseBorrowConfigurationOutput() LicenseBorrowConfigurationOutput {
	return i.ToLicenseBorrowConfigurationOutputWithContext(context.Background())
}

func (i LicenseBorrowConfigurationArgs) ToLicenseBorrowConfigurationOutputWithContext(ctx context.Context) LicenseBorrowConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseBorrowConfigurationOutput)
}

func (i LicenseBorrowConfigurationArgs) ToLicenseBorrowConfigurationPtrOutput() LicenseBorrowConfigurationPtrOutput {
	return i.ToLicenseBorrowConfigurationPtrOutputWithContext(context.Background())
}

func (i LicenseBorrowConfigurationArgs) ToLicenseBorrowConfigurationPtrOutputWithContext(ctx context.Context) LicenseBorrowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseBorrowConfigurationOutput).ToLicenseBorrowConfigurationPtrOutputWithContext(ctx)
}

// LicenseBorrowConfigurationPtrInput is an input type that accepts LicenseBorrowConfigurationArgs, LicenseBorrowConfigurationPtr and LicenseBorrowConfigurationPtrOutput values.
// You can construct a concrete instance of `LicenseBorrowConfigurationPtrInput` via:
//
//          LicenseBorrowConfigurationArgs{...}
//
//  or:
//
//          nil
type LicenseBorrowConfigurationPtrInput interface {
	pulumi.Input

	ToLicenseBorrowConfigurationPtrOutput() LicenseBorrowConfigurationPtrOutput
	ToLicenseBorrowConfigurationPtrOutputWithContext(context.Context) LicenseBorrowConfigurationPtrOutput
}

type licenseBorrowConfigurationPtrType LicenseBorrowConfigurationArgs

func LicenseBorrowConfigurationPtr(v *LicenseBorrowConfigurationArgs) LicenseBorrowConfigurationPtrInput {
	return (*licenseBorrowConfigurationPtrType)(v)
}

func (*licenseBorrowConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseBorrowConfiguration)(nil)).Elem()
}

func (i *licenseBorrowConfigurationPtrType) ToLicenseBorrowConfigurationPtrOutput() LicenseBorrowConfigurationPtrOutput {
	return i.ToLicenseBorrowConfigurationPtrOutputWithContext(context.Background())
}

func (i *licenseBorrowConfigurationPtrType) ToLicenseBorrowConfigurationPtrOutputWithContext(ctx context.Context) LicenseBorrowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseBorrowConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
type LicenseBorrowConfigurationOutput struct{ *pulumi.OutputState }

func (LicenseBorrowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseBorrowConfiguration)(nil)).Elem()
}

func (o LicenseBorrowConfigurationOutput) ToLicenseBorrowConfigurationOutput() LicenseBorrowConfigurationOutput {
	return o
}

func (o LicenseBorrowConfigurationOutput) ToLicenseBorrowConfigurationOutputWithContext(ctx context.Context) LicenseBorrowConfigurationOutput {
	return o
}

func (o LicenseBorrowConfigurationOutput) ToLicenseBorrowConfigurationPtrOutput() LicenseBorrowConfigurationPtrOutput {
	return o.ToLicenseBorrowConfigurationPtrOutputWithContext(context.Background())
}

func (o LicenseBorrowConfigurationOutput) ToLicenseBorrowConfigurationPtrOutputWithContext(ctx context.Context) LicenseBorrowConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseBorrowConfiguration) *LicenseBorrowConfiguration {
		return &v
	}).(LicenseBorrowConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
func (o LicenseBorrowConfigurationOutput) AllowEarlyCheckIn() pulumi.BoolOutput {
	return o.ApplyT(func(v LicenseBorrowConfiguration) bool { return v.AllowEarlyCheckIn }).(pulumi.BoolOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
func (o LicenseBorrowConfigurationOutput) MaxTimeToLiveInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v LicenseBorrowConfiguration) int { return v.MaxTimeToLiveInMinutes }).(pulumi.IntOutput)
}

type LicenseBorrowConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LicenseBorrowConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseBorrowConfiguration)(nil)).Elem()
}

func (o LicenseBorrowConfigurationPtrOutput) ToLicenseBorrowConfigurationPtrOutput() LicenseBorrowConfigurationPtrOutput {
	return o
}

func (o LicenseBorrowConfigurationPtrOutput) ToLicenseBorrowConfigurationPtrOutputWithContext(ctx context.Context) LicenseBorrowConfigurationPtrOutput {
	return o
}

func (o LicenseBorrowConfigurationPtrOutput) Elem() LicenseBorrowConfigurationOutput {
	return o.ApplyT(func(v *LicenseBorrowConfiguration) LicenseBorrowConfiguration {
		if v != nil {
			return *v
		}
		var ret LicenseBorrowConfiguration
		return ret
	}).(LicenseBorrowConfigurationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
func (o LicenseBorrowConfigurationPtrOutput) AllowEarlyCheckIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LicenseBorrowConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowEarlyCheckIn
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
func (o LicenseBorrowConfigurationPtrOutput) MaxTimeToLiveInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicenseBorrowConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTimeToLiveInMinutes
	}).(pulumi.IntPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
type LicenseConsumptionConfiguration struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
	BorrowConfiguration *LicenseBorrowConfiguration `pulumi:"borrowConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
	ProvisionalConfiguration *LicenseProvisionalConfiguration `pulumi:"provisionalConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
	RenewType *string `pulumi:"renewType"`
}

// LicenseConsumptionConfigurationInput is an input type that accepts LicenseConsumptionConfigurationArgs and LicenseConsumptionConfigurationOutput values.
// You can construct a concrete instance of `LicenseConsumptionConfigurationInput` via:
//
//          LicenseConsumptionConfigurationArgs{...}
type LicenseConsumptionConfigurationInput interface {
	pulumi.Input

	ToLicenseConsumptionConfigurationOutput() LicenseConsumptionConfigurationOutput
	ToLicenseConsumptionConfigurationOutputWithContext(context.Context) LicenseConsumptionConfigurationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
type LicenseConsumptionConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
	BorrowConfiguration LicenseBorrowConfigurationPtrInput `pulumi:"borrowConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
	ProvisionalConfiguration LicenseProvisionalConfigurationPtrInput `pulumi:"provisionalConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
	RenewType pulumi.StringPtrInput `pulumi:"renewType"`
}

func (LicenseConsumptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseConsumptionConfiguration)(nil)).Elem()
}

func (i LicenseConsumptionConfigurationArgs) ToLicenseConsumptionConfigurationOutput() LicenseConsumptionConfigurationOutput {
	return i.ToLicenseConsumptionConfigurationOutputWithContext(context.Background())
}

func (i LicenseConsumptionConfigurationArgs) ToLicenseConsumptionConfigurationOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseConsumptionConfigurationOutput)
}

func (i LicenseConsumptionConfigurationArgs) ToLicenseConsumptionConfigurationPtrOutput() LicenseConsumptionConfigurationPtrOutput {
	return i.ToLicenseConsumptionConfigurationPtrOutputWithContext(context.Background())
}

func (i LicenseConsumptionConfigurationArgs) ToLicenseConsumptionConfigurationPtrOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseConsumptionConfigurationOutput).ToLicenseConsumptionConfigurationPtrOutputWithContext(ctx)
}

// LicenseConsumptionConfigurationPtrInput is an input type that accepts LicenseConsumptionConfigurationArgs, LicenseConsumptionConfigurationPtr and LicenseConsumptionConfigurationPtrOutput values.
// You can construct a concrete instance of `LicenseConsumptionConfigurationPtrInput` via:
//
//          LicenseConsumptionConfigurationArgs{...}
//
//  or:
//
//          nil
type LicenseConsumptionConfigurationPtrInput interface {
	pulumi.Input

	ToLicenseConsumptionConfigurationPtrOutput() LicenseConsumptionConfigurationPtrOutput
	ToLicenseConsumptionConfigurationPtrOutputWithContext(context.Context) LicenseConsumptionConfigurationPtrOutput
}

type licenseConsumptionConfigurationPtrType LicenseConsumptionConfigurationArgs

func LicenseConsumptionConfigurationPtr(v *LicenseConsumptionConfigurationArgs) LicenseConsumptionConfigurationPtrInput {
	return (*licenseConsumptionConfigurationPtrType)(v)
}

func (*licenseConsumptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseConsumptionConfiguration)(nil)).Elem()
}

func (i *licenseConsumptionConfigurationPtrType) ToLicenseConsumptionConfigurationPtrOutput() LicenseConsumptionConfigurationPtrOutput {
	return i.ToLicenseConsumptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *licenseConsumptionConfigurationPtrType) ToLicenseConsumptionConfigurationPtrOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseConsumptionConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
type LicenseConsumptionConfigurationOutput struct{ *pulumi.OutputState }

func (LicenseConsumptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseConsumptionConfiguration)(nil)).Elem()
}

func (o LicenseConsumptionConfigurationOutput) ToLicenseConsumptionConfigurationOutput() LicenseConsumptionConfigurationOutput {
	return o
}

func (o LicenseConsumptionConfigurationOutput) ToLicenseConsumptionConfigurationOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationOutput {
	return o
}

func (o LicenseConsumptionConfigurationOutput) ToLicenseConsumptionConfigurationPtrOutput() LicenseConsumptionConfigurationPtrOutput {
	return o.ToLicenseConsumptionConfigurationPtrOutputWithContext(context.Background())
}

func (o LicenseConsumptionConfigurationOutput) ToLicenseConsumptionConfigurationPtrOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseConsumptionConfiguration) *LicenseConsumptionConfiguration {
		return &v
	}).(LicenseConsumptionConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
func (o LicenseConsumptionConfigurationOutput) BorrowConfiguration() LicenseBorrowConfigurationPtrOutput {
	return o.ApplyT(func(v LicenseConsumptionConfiguration) *LicenseBorrowConfiguration { return v.BorrowConfiguration }).(LicenseBorrowConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
func (o LicenseConsumptionConfigurationOutput) ProvisionalConfiguration() LicenseProvisionalConfigurationPtrOutput {
	return o.ApplyT(func(v LicenseConsumptionConfiguration) *LicenseProvisionalConfiguration {
		return v.ProvisionalConfiguration
	}).(LicenseProvisionalConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
func (o LicenseConsumptionConfigurationOutput) RenewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicenseConsumptionConfiguration) *string { return v.RenewType }).(pulumi.StringPtrOutput)
}

type LicenseConsumptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LicenseConsumptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseConsumptionConfiguration)(nil)).Elem()
}

func (o LicenseConsumptionConfigurationPtrOutput) ToLicenseConsumptionConfigurationPtrOutput() LicenseConsumptionConfigurationPtrOutput {
	return o
}

func (o LicenseConsumptionConfigurationPtrOutput) ToLicenseConsumptionConfigurationPtrOutputWithContext(ctx context.Context) LicenseConsumptionConfigurationPtrOutput {
	return o
}

func (o LicenseConsumptionConfigurationPtrOutput) Elem() LicenseConsumptionConfigurationOutput {
	return o.ApplyT(func(v *LicenseConsumptionConfiguration) LicenseConsumptionConfiguration {
		if v != nil {
			return *v
		}
		var ret LicenseConsumptionConfiguration
		return ret
	}).(LicenseConsumptionConfigurationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
func (o LicenseConsumptionConfigurationPtrOutput) BorrowConfiguration() LicenseBorrowConfigurationPtrOutput {
	return o.ApplyT(func(v *LicenseConsumptionConfiguration) *LicenseBorrowConfiguration {
		if v == nil {
			return nil
		}
		return v.BorrowConfiguration
	}).(LicenseBorrowConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
func (o LicenseConsumptionConfigurationPtrOutput) ProvisionalConfiguration() LicenseProvisionalConfigurationPtrOutput {
	return o.ApplyT(func(v *LicenseConsumptionConfiguration) *LicenseProvisionalConfiguration {
		if v == nil {
			return nil
		}
		return v.ProvisionalConfiguration
	}).(LicenseProvisionalConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
func (o LicenseConsumptionConfigurationPtrOutput) RenewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicenseConsumptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RenewType
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
type LicenseEntitlement struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
	AllowCheckIn *bool `pulumi:"allowCheckIn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
	CheckoutRules *LicenseRuleList `pulumi:"checkoutRules"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
	MaxCount *int `pulumi:"maxCount"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
	Overage *bool `pulumi:"overage"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
	Unit string `pulumi:"unit"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
	Value *string `pulumi:"value"`
}

// LicenseEntitlementInput is an input type that accepts LicenseEntitlementArgs and LicenseEntitlementOutput values.
// You can construct a concrete instance of `LicenseEntitlementInput` via:
//
//          LicenseEntitlementArgs{...}
type LicenseEntitlementInput interface {
	pulumi.Input

	ToLicenseEntitlementOutput() LicenseEntitlementOutput
	ToLicenseEntitlementOutputWithContext(context.Context) LicenseEntitlementOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
type LicenseEntitlementArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
	AllowCheckIn pulumi.BoolPtrInput `pulumi:"allowCheckIn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
	CheckoutRules LicenseRuleListPtrInput `pulumi:"checkoutRules"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
	Overage pulumi.BoolPtrInput `pulumi:"overage"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
	Unit pulumi.StringInput `pulumi:"unit"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LicenseEntitlementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseEntitlement)(nil)).Elem()
}

func (i LicenseEntitlementArgs) ToLicenseEntitlementOutput() LicenseEntitlementOutput {
	return i.ToLicenseEntitlementOutputWithContext(context.Background())
}

func (i LicenseEntitlementArgs) ToLicenseEntitlementOutputWithContext(ctx context.Context) LicenseEntitlementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseEntitlementOutput)
}

// LicenseEntitlementArrayInput is an input type that accepts LicenseEntitlementArray and LicenseEntitlementArrayOutput values.
// You can construct a concrete instance of `LicenseEntitlementArrayInput` via:
//
//          LicenseEntitlementArray{ LicenseEntitlementArgs{...} }
type LicenseEntitlementArrayInput interface {
	pulumi.Input

	ToLicenseEntitlementArrayOutput() LicenseEntitlementArrayOutput
	ToLicenseEntitlementArrayOutputWithContext(context.Context) LicenseEntitlementArrayOutput
}

type LicenseEntitlementArray []LicenseEntitlementInput

func (LicenseEntitlementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseEntitlement)(nil)).Elem()
}

func (i LicenseEntitlementArray) ToLicenseEntitlementArrayOutput() LicenseEntitlementArrayOutput {
	return i.ToLicenseEntitlementArrayOutputWithContext(context.Background())
}

func (i LicenseEntitlementArray) ToLicenseEntitlementArrayOutputWithContext(ctx context.Context) LicenseEntitlementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseEntitlementArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
type LicenseEntitlementOutput struct{ *pulumi.OutputState }

func (LicenseEntitlementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseEntitlement)(nil)).Elem()
}

func (o LicenseEntitlementOutput) ToLicenseEntitlementOutput() LicenseEntitlementOutput {
	return o
}

func (o LicenseEntitlementOutput) ToLicenseEntitlementOutputWithContext(ctx context.Context) LicenseEntitlementOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
func (o LicenseEntitlementOutput) AllowCheckIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicenseEntitlement) *bool { return v.AllowCheckIn }).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
func (o LicenseEntitlementOutput) CheckoutRules() LicenseRuleListPtrOutput {
	return o.ApplyT(func(v LicenseEntitlement) *LicenseRuleList { return v.CheckoutRules }).(LicenseRuleListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
func (o LicenseEntitlementOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LicenseEntitlement) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
func (o LicenseEntitlementOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseEntitlement) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
func (o LicenseEntitlementOutput) Overage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LicenseEntitlement) *bool { return v.Overage }).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
func (o LicenseEntitlementOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseEntitlement) string { return v.Unit }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
func (o LicenseEntitlementOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicenseEntitlement) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LicenseEntitlementArrayOutput struct{ *pulumi.OutputState }

func (LicenseEntitlementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseEntitlement)(nil)).Elem()
}

func (o LicenseEntitlementArrayOutput) ToLicenseEntitlementArrayOutput() LicenseEntitlementArrayOutput {
	return o
}

func (o LicenseEntitlementArrayOutput) ToLicenseEntitlementArrayOutputWithContext(ctx context.Context) LicenseEntitlementArrayOutput {
	return o
}

func (o LicenseEntitlementArrayOutput) Index(i pulumi.IntInput) LicenseEntitlementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicenseEntitlement {
		return vs[0].([]LicenseEntitlement)[vs[1].(int)]
	}).(LicenseEntitlementOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
type LicenseEntitlementList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
	EntitlementList []LicenseEntitlement `pulumi:"entitlementList"`
}

// LicenseEntitlementListInput is an input type that accepts LicenseEntitlementListArgs and LicenseEntitlementListOutput values.
// You can construct a concrete instance of `LicenseEntitlementListInput` via:
//
//          LicenseEntitlementListArgs{...}
type LicenseEntitlementListInput interface {
	pulumi.Input

	ToLicenseEntitlementListOutput() LicenseEntitlementListOutput
	ToLicenseEntitlementListOutputWithContext(context.Context) LicenseEntitlementListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
type LicenseEntitlementListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
	EntitlementList LicenseEntitlementArrayInput `pulumi:"entitlementList"`
}

func (LicenseEntitlementListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseEntitlementList)(nil)).Elem()
}

func (i LicenseEntitlementListArgs) ToLicenseEntitlementListOutput() LicenseEntitlementListOutput {
	return i.ToLicenseEntitlementListOutputWithContext(context.Background())
}

func (i LicenseEntitlementListArgs) ToLicenseEntitlementListOutputWithContext(ctx context.Context) LicenseEntitlementListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseEntitlementListOutput)
}

func (i LicenseEntitlementListArgs) ToLicenseEntitlementListPtrOutput() LicenseEntitlementListPtrOutput {
	return i.ToLicenseEntitlementListPtrOutputWithContext(context.Background())
}

func (i LicenseEntitlementListArgs) ToLicenseEntitlementListPtrOutputWithContext(ctx context.Context) LicenseEntitlementListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseEntitlementListOutput).ToLicenseEntitlementListPtrOutputWithContext(ctx)
}

// LicenseEntitlementListPtrInput is an input type that accepts LicenseEntitlementListArgs, LicenseEntitlementListPtr and LicenseEntitlementListPtrOutput values.
// You can construct a concrete instance of `LicenseEntitlementListPtrInput` via:
//
//          LicenseEntitlementListArgs{...}
//
//  or:
//
//          nil
type LicenseEntitlementListPtrInput interface {
	pulumi.Input

	ToLicenseEntitlementListPtrOutput() LicenseEntitlementListPtrOutput
	ToLicenseEntitlementListPtrOutputWithContext(context.Context) LicenseEntitlementListPtrOutput
}

type licenseEntitlementListPtrType LicenseEntitlementListArgs

func LicenseEntitlementListPtr(v *LicenseEntitlementListArgs) LicenseEntitlementListPtrInput {
	return (*licenseEntitlementListPtrType)(v)
}

func (*licenseEntitlementListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseEntitlementList)(nil)).Elem()
}

func (i *licenseEntitlementListPtrType) ToLicenseEntitlementListPtrOutput() LicenseEntitlementListPtrOutput {
	return i.ToLicenseEntitlementListPtrOutputWithContext(context.Background())
}

func (i *licenseEntitlementListPtrType) ToLicenseEntitlementListPtrOutputWithContext(ctx context.Context) LicenseEntitlementListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseEntitlementListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
type LicenseEntitlementListOutput struct{ *pulumi.OutputState }

func (LicenseEntitlementListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseEntitlementList)(nil)).Elem()
}

func (o LicenseEntitlementListOutput) ToLicenseEntitlementListOutput() LicenseEntitlementListOutput {
	return o
}

func (o LicenseEntitlementListOutput) ToLicenseEntitlementListOutputWithContext(ctx context.Context) LicenseEntitlementListOutput {
	return o
}

func (o LicenseEntitlementListOutput) ToLicenseEntitlementListPtrOutput() LicenseEntitlementListPtrOutput {
	return o.ToLicenseEntitlementListPtrOutputWithContext(context.Background())
}

func (o LicenseEntitlementListOutput) ToLicenseEntitlementListPtrOutputWithContext(ctx context.Context) LicenseEntitlementListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseEntitlementList) *LicenseEntitlementList {
		return &v
	}).(LicenseEntitlementListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
func (o LicenseEntitlementListOutput) EntitlementList() LicenseEntitlementArrayOutput {
	return o.ApplyT(func(v LicenseEntitlementList) []LicenseEntitlement { return v.EntitlementList }).(LicenseEntitlementArrayOutput)
}

type LicenseEntitlementListPtrOutput struct{ *pulumi.OutputState }

func (LicenseEntitlementListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseEntitlementList)(nil)).Elem()
}

func (o LicenseEntitlementListPtrOutput) ToLicenseEntitlementListPtrOutput() LicenseEntitlementListPtrOutput {
	return o
}

func (o LicenseEntitlementListPtrOutput) ToLicenseEntitlementListPtrOutputWithContext(ctx context.Context) LicenseEntitlementListPtrOutput {
	return o
}

func (o LicenseEntitlementListPtrOutput) Elem() LicenseEntitlementListOutput {
	return o.ApplyT(func(v *LicenseEntitlementList) LicenseEntitlementList {
		if v != nil {
			return *v
		}
		var ret LicenseEntitlementList
		return ret
	}).(LicenseEntitlementListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
func (o LicenseEntitlementListPtrOutput) EntitlementList() LicenseEntitlementArrayOutput {
	return o.ApplyT(func(v *LicenseEntitlementList) []LicenseEntitlement {
		if v == nil {
			return nil
		}
		return v.EntitlementList
	}).(LicenseEntitlementArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
type LicenseFilter struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
	Values LicenseStringList `pulumi:"values"`
}

// LicenseFilterInput is an input type that accepts LicenseFilterArgs and LicenseFilterOutput values.
// You can construct a concrete instance of `LicenseFilterInput` via:
//
//          LicenseFilterArgs{...}
type LicenseFilterInput interface {
	pulumi.Input

	ToLicenseFilterOutput() LicenseFilterOutput
	ToLicenseFilterOutputWithContext(context.Context) LicenseFilterOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
type LicenseFilterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
	Values LicenseStringListInput `pulumi:"values"`
}

func (LicenseFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseFilter)(nil)).Elem()
}

func (i LicenseFilterArgs) ToLicenseFilterOutput() LicenseFilterOutput {
	return i.ToLicenseFilterOutputWithContext(context.Background())
}

func (i LicenseFilterArgs) ToLicenseFilterOutputWithContext(ctx context.Context) LicenseFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseFilterOutput)
}

// LicenseFilterArrayInput is an input type that accepts LicenseFilterArray and LicenseFilterArrayOutput values.
// You can construct a concrete instance of `LicenseFilterArrayInput` via:
//
//          LicenseFilterArray{ LicenseFilterArgs{...} }
type LicenseFilterArrayInput interface {
	pulumi.Input

	ToLicenseFilterArrayOutput() LicenseFilterArrayOutput
	ToLicenseFilterArrayOutputWithContext(context.Context) LicenseFilterArrayOutput
}

type LicenseFilterArray []LicenseFilterInput

func (LicenseFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseFilter)(nil)).Elem()
}

func (i LicenseFilterArray) ToLicenseFilterArrayOutput() LicenseFilterArrayOutput {
	return i.ToLicenseFilterArrayOutputWithContext(context.Background())
}

func (i LicenseFilterArray) ToLicenseFilterArrayOutputWithContext(ctx context.Context) LicenseFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseFilterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
type LicenseFilterOutput struct{ *pulumi.OutputState }

func (LicenseFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseFilter)(nil)).Elem()
}

func (o LicenseFilterOutput) ToLicenseFilterOutput() LicenseFilterOutput {
	return o
}

func (o LicenseFilterOutput) ToLicenseFilterOutputWithContext(ctx context.Context) LicenseFilterOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
func (o LicenseFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseFilter) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
func (o LicenseFilterOutput) Values() LicenseStringListOutput {
	return o.ApplyT(func(v LicenseFilter) LicenseStringList { return v.Values }).(LicenseStringListOutput)
}

type LicenseFilterArrayOutput struct{ *pulumi.OutputState }

func (LicenseFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseFilter)(nil)).Elem()
}

func (o LicenseFilterArrayOutput) ToLicenseFilterArrayOutput() LicenseFilterArrayOutput {
	return o
}

func (o LicenseFilterArrayOutput) ToLicenseFilterArrayOutputWithContext(ctx context.Context) LicenseFilterArrayOutput {
	return o
}

func (o LicenseFilterArrayOutput) Index(i pulumi.IntInput) LicenseFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicenseFilter {
		return vs[0].([]LicenseFilter)[vs[1].(int)]
	}).(LicenseFilterOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
type LicenseFilterList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
	FilterList []LicenseFilter `pulumi:"filterList"`
}

// LicenseFilterListInput is an input type that accepts LicenseFilterListArgs and LicenseFilterListOutput values.
// You can construct a concrete instance of `LicenseFilterListInput` via:
//
//          LicenseFilterListArgs{...}
type LicenseFilterListInput interface {
	pulumi.Input

	ToLicenseFilterListOutput() LicenseFilterListOutput
	ToLicenseFilterListOutputWithContext(context.Context) LicenseFilterListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
type LicenseFilterListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
	FilterList LicenseFilterArrayInput `pulumi:"filterList"`
}

func (LicenseFilterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseFilterList)(nil)).Elem()
}

func (i LicenseFilterListArgs) ToLicenseFilterListOutput() LicenseFilterListOutput {
	return i.ToLicenseFilterListOutputWithContext(context.Background())
}

func (i LicenseFilterListArgs) ToLicenseFilterListOutputWithContext(ctx context.Context) LicenseFilterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseFilterListOutput)
}

func (i LicenseFilterListArgs) ToLicenseFilterListPtrOutput() LicenseFilterListPtrOutput {
	return i.ToLicenseFilterListPtrOutputWithContext(context.Background())
}

func (i LicenseFilterListArgs) ToLicenseFilterListPtrOutputWithContext(ctx context.Context) LicenseFilterListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseFilterListOutput).ToLicenseFilterListPtrOutputWithContext(ctx)
}

// LicenseFilterListPtrInput is an input type that accepts LicenseFilterListArgs, LicenseFilterListPtr and LicenseFilterListPtrOutput values.
// You can construct a concrete instance of `LicenseFilterListPtrInput` via:
//
//          LicenseFilterListArgs{...}
//
//  or:
//
//          nil
type LicenseFilterListPtrInput interface {
	pulumi.Input

	ToLicenseFilterListPtrOutput() LicenseFilterListPtrOutput
	ToLicenseFilterListPtrOutputWithContext(context.Context) LicenseFilterListPtrOutput
}

type licenseFilterListPtrType LicenseFilterListArgs

func LicenseFilterListPtr(v *LicenseFilterListArgs) LicenseFilterListPtrInput {
	return (*licenseFilterListPtrType)(v)
}

func (*licenseFilterListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseFilterList)(nil)).Elem()
}

func (i *licenseFilterListPtrType) ToLicenseFilterListPtrOutput() LicenseFilterListPtrOutput {
	return i.ToLicenseFilterListPtrOutputWithContext(context.Background())
}

func (i *licenseFilterListPtrType) ToLicenseFilterListPtrOutputWithContext(ctx context.Context) LicenseFilterListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseFilterListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
type LicenseFilterListOutput struct{ *pulumi.OutputState }

func (LicenseFilterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseFilterList)(nil)).Elem()
}

func (o LicenseFilterListOutput) ToLicenseFilterListOutput() LicenseFilterListOutput {
	return o
}

func (o LicenseFilterListOutput) ToLicenseFilterListOutputWithContext(ctx context.Context) LicenseFilterListOutput {
	return o
}

func (o LicenseFilterListOutput) ToLicenseFilterListPtrOutput() LicenseFilterListPtrOutput {
	return o.ToLicenseFilterListPtrOutputWithContext(context.Background())
}

func (o LicenseFilterListOutput) ToLicenseFilterListPtrOutputWithContext(ctx context.Context) LicenseFilterListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseFilterList) *LicenseFilterList {
		return &v
	}).(LicenseFilterListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
func (o LicenseFilterListOutput) FilterList() LicenseFilterArrayOutput {
	return o.ApplyT(func(v LicenseFilterList) []LicenseFilter { return v.FilterList }).(LicenseFilterArrayOutput)
}

type LicenseFilterListPtrOutput struct{ *pulumi.OutputState }

func (LicenseFilterListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseFilterList)(nil)).Elem()
}

func (o LicenseFilterListPtrOutput) ToLicenseFilterListPtrOutput() LicenseFilterListPtrOutput {
	return o
}

func (o LicenseFilterListPtrOutput) ToLicenseFilterListPtrOutputWithContext(ctx context.Context) LicenseFilterListPtrOutput {
	return o
}

func (o LicenseFilterListPtrOutput) Elem() LicenseFilterListOutput {
	return o.ApplyT(func(v *LicenseFilterList) LicenseFilterList {
		if v != nil {
			return *v
		}
		var ret LicenseFilterList
		return ret
	}).(LicenseFilterListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
func (o LicenseFilterListPtrOutput) FilterList() LicenseFilterArrayOutput {
	return o.ApplyT(func(v *LicenseFilterList) []LicenseFilter {
		if v == nil {
			return nil
		}
		return v.FilterList
	}).(LicenseFilterArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
type LicenseIssuerData struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
	SignKey *string `pulumi:"signKey"`
}

// LicenseIssuerDataInput is an input type that accepts LicenseIssuerDataArgs and LicenseIssuerDataOutput values.
// You can construct a concrete instance of `LicenseIssuerDataInput` via:
//
//          LicenseIssuerDataArgs{...}
type LicenseIssuerDataInput interface {
	pulumi.Input

	ToLicenseIssuerDataOutput() LicenseIssuerDataOutput
	ToLicenseIssuerDataOutputWithContext(context.Context) LicenseIssuerDataOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
type LicenseIssuerDataArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
	SignKey pulumi.StringPtrInput `pulumi:"signKey"`
}

func (LicenseIssuerDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseIssuerData)(nil)).Elem()
}

func (i LicenseIssuerDataArgs) ToLicenseIssuerDataOutput() LicenseIssuerDataOutput {
	return i.ToLicenseIssuerDataOutputWithContext(context.Background())
}

func (i LicenseIssuerDataArgs) ToLicenseIssuerDataOutputWithContext(ctx context.Context) LicenseIssuerDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseIssuerDataOutput)
}

func (i LicenseIssuerDataArgs) ToLicenseIssuerDataPtrOutput() LicenseIssuerDataPtrOutput {
	return i.ToLicenseIssuerDataPtrOutputWithContext(context.Background())
}

func (i LicenseIssuerDataArgs) ToLicenseIssuerDataPtrOutputWithContext(ctx context.Context) LicenseIssuerDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseIssuerDataOutput).ToLicenseIssuerDataPtrOutputWithContext(ctx)
}

// LicenseIssuerDataPtrInput is an input type that accepts LicenseIssuerDataArgs, LicenseIssuerDataPtr and LicenseIssuerDataPtrOutput values.
// You can construct a concrete instance of `LicenseIssuerDataPtrInput` via:
//
//          LicenseIssuerDataArgs{...}
//
//  or:
//
//          nil
type LicenseIssuerDataPtrInput interface {
	pulumi.Input

	ToLicenseIssuerDataPtrOutput() LicenseIssuerDataPtrOutput
	ToLicenseIssuerDataPtrOutputWithContext(context.Context) LicenseIssuerDataPtrOutput
}

type licenseIssuerDataPtrType LicenseIssuerDataArgs

func LicenseIssuerDataPtr(v *LicenseIssuerDataArgs) LicenseIssuerDataPtrInput {
	return (*licenseIssuerDataPtrType)(v)
}

func (*licenseIssuerDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseIssuerData)(nil)).Elem()
}

func (i *licenseIssuerDataPtrType) ToLicenseIssuerDataPtrOutput() LicenseIssuerDataPtrOutput {
	return i.ToLicenseIssuerDataPtrOutputWithContext(context.Background())
}

func (i *licenseIssuerDataPtrType) ToLicenseIssuerDataPtrOutputWithContext(ctx context.Context) LicenseIssuerDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseIssuerDataPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
type LicenseIssuerDataOutput struct{ *pulumi.OutputState }

func (LicenseIssuerDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseIssuerData)(nil)).Elem()
}

func (o LicenseIssuerDataOutput) ToLicenseIssuerDataOutput() LicenseIssuerDataOutput {
	return o
}

func (o LicenseIssuerDataOutput) ToLicenseIssuerDataOutputWithContext(ctx context.Context) LicenseIssuerDataOutput {
	return o
}

func (o LicenseIssuerDataOutput) ToLicenseIssuerDataPtrOutput() LicenseIssuerDataPtrOutput {
	return o.ToLicenseIssuerDataPtrOutputWithContext(context.Background())
}

func (o LicenseIssuerDataOutput) ToLicenseIssuerDataPtrOutputWithContext(ctx context.Context) LicenseIssuerDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseIssuerData) *LicenseIssuerData {
		return &v
	}).(LicenseIssuerDataPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
func (o LicenseIssuerDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseIssuerData) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
func (o LicenseIssuerDataOutput) SignKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LicenseIssuerData) *string { return v.SignKey }).(pulumi.StringPtrOutput)
}

type LicenseIssuerDataPtrOutput struct{ *pulumi.OutputState }

func (LicenseIssuerDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseIssuerData)(nil)).Elem()
}

func (o LicenseIssuerDataPtrOutput) ToLicenseIssuerDataPtrOutput() LicenseIssuerDataPtrOutput {
	return o
}

func (o LicenseIssuerDataPtrOutput) ToLicenseIssuerDataPtrOutputWithContext(ctx context.Context) LicenseIssuerDataPtrOutput {
	return o
}

func (o LicenseIssuerDataPtrOutput) Elem() LicenseIssuerDataOutput {
	return o.ApplyT(func(v *LicenseIssuerData) LicenseIssuerData {
		if v != nil {
			return *v
		}
		var ret LicenseIssuerData
		return ret
	}).(LicenseIssuerDataOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
func (o LicenseIssuerDataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicenseIssuerData) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
func (o LicenseIssuerDataPtrOutput) SignKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicenseIssuerData) *string {
		if v == nil {
			return nil
		}
		return v.SignKey
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
type LicenseMetadata struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
	Value string `pulumi:"value"`
}

// LicenseMetadataInput is an input type that accepts LicenseMetadataArgs and LicenseMetadataOutput values.
// You can construct a concrete instance of `LicenseMetadataInput` via:
//
//          LicenseMetadataArgs{...}
type LicenseMetadataInput interface {
	pulumi.Input

	ToLicenseMetadataOutput() LicenseMetadataOutput
	ToLicenseMetadataOutputWithContext(context.Context) LicenseMetadataOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
type LicenseMetadataArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
	Value pulumi.StringInput `pulumi:"value"`
}

func (LicenseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseMetadata)(nil)).Elem()
}

func (i LicenseMetadataArgs) ToLicenseMetadataOutput() LicenseMetadataOutput {
	return i.ToLicenseMetadataOutputWithContext(context.Background())
}

func (i LicenseMetadataArgs) ToLicenseMetadataOutputWithContext(ctx context.Context) LicenseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseMetadataOutput)
}

// LicenseMetadataArrayInput is an input type that accepts LicenseMetadataArray and LicenseMetadataArrayOutput values.
// You can construct a concrete instance of `LicenseMetadataArrayInput` via:
//
//          LicenseMetadataArray{ LicenseMetadataArgs{...} }
type LicenseMetadataArrayInput interface {
	pulumi.Input

	ToLicenseMetadataArrayOutput() LicenseMetadataArrayOutput
	ToLicenseMetadataArrayOutputWithContext(context.Context) LicenseMetadataArrayOutput
}

type LicenseMetadataArray []LicenseMetadataInput

func (LicenseMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseMetadata)(nil)).Elem()
}

func (i LicenseMetadataArray) ToLicenseMetadataArrayOutput() LicenseMetadataArrayOutput {
	return i.ToLicenseMetadataArrayOutputWithContext(context.Background())
}

func (i LicenseMetadataArray) ToLicenseMetadataArrayOutputWithContext(ctx context.Context) LicenseMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseMetadataArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
type LicenseMetadataOutput struct{ *pulumi.OutputState }

func (LicenseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseMetadata)(nil)).Elem()
}

func (o LicenseMetadataOutput) ToLicenseMetadataOutput() LicenseMetadataOutput {
	return o
}

func (o LicenseMetadataOutput) ToLicenseMetadataOutputWithContext(ctx context.Context) LicenseMetadataOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
func (o LicenseMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseMetadata) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
func (o LicenseMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type LicenseMetadataArrayOutput struct{ *pulumi.OutputState }

func (LicenseMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseMetadata)(nil)).Elem()
}

func (o LicenseMetadataArrayOutput) ToLicenseMetadataArrayOutput() LicenseMetadataArrayOutput {
	return o
}

func (o LicenseMetadataArrayOutput) ToLicenseMetadataArrayOutputWithContext(ctx context.Context) LicenseMetadataArrayOutput {
	return o
}

func (o LicenseMetadataArrayOutput) Index(i pulumi.IntInput) LicenseMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicenseMetadata {
		return vs[0].([]LicenseMetadata)[vs[1].(int)]
	}).(LicenseMetadataOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
type LicenseMetadataList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
	MetadataList []LicenseMetadata `pulumi:"metadataList"`
}

// LicenseMetadataListInput is an input type that accepts LicenseMetadataListArgs and LicenseMetadataListOutput values.
// You can construct a concrete instance of `LicenseMetadataListInput` via:
//
//          LicenseMetadataListArgs{...}
type LicenseMetadataListInput interface {
	pulumi.Input

	ToLicenseMetadataListOutput() LicenseMetadataListOutput
	ToLicenseMetadataListOutputWithContext(context.Context) LicenseMetadataListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
type LicenseMetadataListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
	MetadataList LicenseMetadataArrayInput `pulumi:"metadataList"`
}

func (LicenseMetadataListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseMetadataList)(nil)).Elem()
}

func (i LicenseMetadataListArgs) ToLicenseMetadataListOutput() LicenseMetadataListOutput {
	return i.ToLicenseMetadataListOutputWithContext(context.Background())
}

func (i LicenseMetadataListArgs) ToLicenseMetadataListOutputWithContext(ctx context.Context) LicenseMetadataListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseMetadataListOutput)
}

func (i LicenseMetadataListArgs) ToLicenseMetadataListPtrOutput() LicenseMetadataListPtrOutput {
	return i.ToLicenseMetadataListPtrOutputWithContext(context.Background())
}

func (i LicenseMetadataListArgs) ToLicenseMetadataListPtrOutputWithContext(ctx context.Context) LicenseMetadataListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseMetadataListOutput).ToLicenseMetadataListPtrOutputWithContext(ctx)
}

// LicenseMetadataListPtrInput is an input type that accepts LicenseMetadataListArgs, LicenseMetadataListPtr and LicenseMetadataListPtrOutput values.
// You can construct a concrete instance of `LicenseMetadataListPtrInput` via:
//
//          LicenseMetadataListArgs{...}
//
//  or:
//
//          nil
type LicenseMetadataListPtrInput interface {
	pulumi.Input

	ToLicenseMetadataListPtrOutput() LicenseMetadataListPtrOutput
	ToLicenseMetadataListPtrOutputWithContext(context.Context) LicenseMetadataListPtrOutput
}

type licenseMetadataListPtrType LicenseMetadataListArgs

func LicenseMetadataListPtr(v *LicenseMetadataListArgs) LicenseMetadataListPtrInput {
	return (*licenseMetadataListPtrType)(v)
}

func (*licenseMetadataListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseMetadataList)(nil)).Elem()
}

func (i *licenseMetadataListPtrType) ToLicenseMetadataListPtrOutput() LicenseMetadataListPtrOutput {
	return i.ToLicenseMetadataListPtrOutputWithContext(context.Background())
}

func (i *licenseMetadataListPtrType) ToLicenseMetadataListPtrOutputWithContext(ctx context.Context) LicenseMetadataListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseMetadataListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
type LicenseMetadataListOutput struct{ *pulumi.OutputState }

func (LicenseMetadataListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseMetadataList)(nil)).Elem()
}

func (o LicenseMetadataListOutput) ToLicenseMetadataListOutput() LicenseMetadataListOutput {
	return o
}

func (o LicenseMetadataListOutput) ToLicenseMetadataListOutputWithContext(ctx context.Context) LicenseMetadataListOutput {
	return o
}

func (o LicenseMetadataListOutput) ToLicenseMetadataListPtrOutput() LicenseMetadataListPtrOutput {
	return o.ToLicenseMetadataListPtrOutputWithContext(context.Background())
}

func (o LicenseMetadataListOutput) ToLicenseMetadataListPtrOutputWithContext(ctx context.Context) LicenseMetadataListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseMetadataList) *LicenseMetadataList {
		return &v
	}).(LicenseMetadataListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
func (o LicenseMetadataListOutput) MetadataList() LicenseMetadataArrayOutput {
	return o.ApplyT(func(v LicenseMetadataList) []LicenseMetadata { return v.MetadataList }).(LicenseMetadataArrayOutput)
}

type LicenseMetadataListPtrOutput struct{ *pulumi.OutputState }

func (LicenseMetadataListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseMetadataList)(nil)).Elem()
}

func (o LicenseMetadataListPtrOutput) ToLicenseMetadataListPtrOutput() LicenseMetadataListPtrOutput {
	return o
}

func (o LicenseMetadataListPtrOutput) ToLicenseMetadataListPtrOutputWithContext(ctx context.Context) LicenseMetadataListPtrOutput {
	return o
}

func (o LicenseMetadataListPtrOutput) Elem() LicenseMetadataListOutput {
	return o.ApplyT(func(v *LicenseMetadataList) LicenseMetadataList {
		if v != nil {
			return *v
		}
		var ret LicenseMetadataList
		return ret
	}).(LicenseMetadataListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
func (o LicenseMetadataListPtrOutput) MetadataList() LicenseMetadataArrayOutput {
	return o.ApplyT(func(v *LicenseMetadataList) []LicenseMetadata {
		if v == nil {
			return nil
		}
		return v.MetadataList
	}).(LicenseMetadataArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
type LicenseProvisionalConfiguration struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
	MaxTimeToLiveInMinutes int `pulumi:"maxTimeToLiveInMinutes"`
}

// LicenseProvisionalConfigurationInput is an input type that accepts LicenseProvisionalConfigurationArgs and LicenseProvisionalConfigurationOutput values.
// You can construct a concrete instance of `LicenseProvisionalConfigurationInput` via:
//
//          LicenseProvisionalConfigurationArgs{...}
type LicenseProvisionalConfigurationInput interface {
	pulumi.Input

	ToLicenseProvisionalConfigurationOutput() LicenseProvisionalConfigurationOutput
	ToLicenseProvisionalConfigurationOutputWithContext(context.Context) LicenseProvisionalConfigurationOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
type LicenseProvisionalConfigurationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
	MaxTimeToLiveInMinutes pulumi.IntInput `pulumi:"maxTimeToLiveInMinutes"`
}

func (LicenseProvisionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseProvisionalConfiguration)(nil)).Elem()
}

func (i LicenseProvisionalConfigurationArgs) ToLicenseProvisionalConfigurationOutput() LicenseProvisionalConfigurationOutput {
	return i.ToLicenseProvisionalConfigurationOutputWithContext(context.Background())
}

func (i LicenseProvisionalConfigurationArgs) ToLicenseProvisionalConfigurationOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseProvisionalConfigurationOutput)
}

func (i LicenseProvisionalConfigurationArgs) ToLicenseProvisionalConfigurationPtrOutput() LicenseProvisionalConfigurationPtrOutput {
	return i.ToLicenseProvisionalConfigurationPtrOutputWithContext(context.Background())
}

func (i LicenseProvisionalConfigurationArgs) ToLicenseProvisionalConfigurationPtrOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseProvisionalConfigurationOutput).ToLicenseProvisionalConfigurationPtrOutputWithContext(ctx)
}

// LicenseProvisionalConfigurationPtrInput is an input type that accepts LicenseProvisionalConfigurationArgs, LicenseProvisionalConfigurationPtr and LicenseProvisionalConfigurationPtrOutput values.
// You can construct a concrete instance of `LicenseProvisionalConfigurationPtrInput` via:
//
//          LicenseProvisionalConfigurationArgs{...}
//
//  or:
//
//          nil
type LicenseProvisionalConfigurationPtrInput interface {
	pulumi.Input

	ToLicenseProvisionalConfigurationPtrOutput() LicenseProvisionalConfigurationPtrOutput
	ToLicenseProvisionalConfigurationPtrOutputWithContext(context.Context) LicenseProvisionalConfigurationPtrOutput
}

type licenseProvisionalConfigurationPtrType LicenseProvisionalConfigurationArgs

func LicenseProvisionalConfigurationPtr(v *LicenseProvisionalConfigurationArgs) LicenseProvisionalConfigurationPtrInput {
	return (*licenseProvisionalConfigurationPtrType)(v)
}

func (*licenseProvisionalConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseProvisionalConfiguration)(nil)).Elem()
}

func (i *licenseProvisionalConfigurationPtrType) ToLicenseProvisionalConfigurationPtrOutput() LicenseProvisionalConfigurationPtrOutput {
	return i.ToLicenseProvisionalConfigurationPtrOutputWithContext(context.Background())
}

func (i *licenseProvisionalConfigurationPtrType) ToLicenseProvisionalConfigurationPtrOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseProvisionalConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
type LicenseProvisionalConfigurationOutput struct{ *pulumi.OutputState }

func (LicenseProvisionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseProvisionalConfiguration)(nil)).Elem()
}

func (o LicenseProvisionalConfigurationOutput) ToLicenseProvisionalConfigurationOutput() LicenseProvisionalConfigurationOutput {
	return o
}

func (o LicenseProvisionalConfigurationOutput) ToLicenseProvisionalConfigurationOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationOutput {
	return o
}

func (o LicenseProvisionalConfigurationOutput) ToLicenseProvisionalConfigurationPtrOutput() LicenseProvisionalConfigurationPtrOutput {
	return o.ToLicenseProvisionalConfigurationPtrOutputWithContext(context.Background())
}

func (o LicenseProvisionalConfigurationOutput) ToLicenseProvisionalConfigurationPtrOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseProvisionalConfiguration) *LicenseProvisionalConfiguration {
		return &v
	}).(LicenseProvisionalConfigurationPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
func (o LicenseProvisionalConfigurationOutput) MaxTimeToLiveInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v LicenseProvisionalConfiguration) int { return v.MaxTimeToLiveInMinutes }).(pulumi.IntOutput)
}

type LicenseProvisionalConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LicenseProvisionalConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseProvisionalConfiguration)(nil)).Elem()
}

func (o LicenseProvisionalConfigurationPtrOutput) ToLicenseProvisionalConfigurationPtrOutput() LicenseProvisionalConfigurationPtrOutput {
	return o
}

func (o LicenseProvisionalConfigurationPtrOutput) ToLicenseProvisionalConfigurationPtrOutputWithContext(ctx context.Context) LicenseProvisionalConfigurationPtrOutput {
	return o
}

func (o LicenseProvisionalConfigurationPtrOutput) Elem() LicenseProvisionalConfigurationOutput {
	return o.ApplyT(func(v *LicenseProvisionalConfiguration) LicenseProvisionalConfiguration {
		if v != nil {
			return *v
		}
		var ret LicenseProvisionalConfiguration
		return ret
	}).(LicenseProvisionalConfigurationOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
func (o LicenseProvisionalConfigurationPtrOutput) MaxTimeToLiveInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LicenseProvisionalConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTimeToLiveInMinutes
	}).(pulumi.IntPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
type LicenseRule struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
	Unit string `pulumi:"unit"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
	Value string `pulumi:"value"`
}

// LicenseRuleInput is an input type that accepts LicenseRuleArgs and LicenseRuleOutput values.
// You can construct a concrete instance of `LicenseRuleInput` via:
//
//          LicenseRuleArgs{...}
type LicenseRuleInput interface {
	pulumi.Input

	ToLicenseRuleOutput() LicenseRuleOutput
	ToLicenseRuleOutputWithContext(context.Context) LicenseRuleOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
type LicenseRuleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
	Name pulumi.StringInput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
	Unit pulumi.StringInput `pulumi:"unit"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
	Value pulumi.StringInput `pulumi:"value"`
}

func (LicenseRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseRule)(nil)).Elem()
}

func (i LicenseRuleArgs) ToLicenseRuleOutput() LicenseRuleOutput {
	return i.ToLicenseRuleOutputWithContext(context.Background())
}

func (i LicenseRuleArgs) ToLicenseRuleOutputWithContext(ctx context.Context) LicenseRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseRuleOutput)
}

// LicenseRuleArrayInput is an input type that accepts LicenseRuleArray and LicenseRuleArrayOutput values.
// You can construct a concrete instance of `LicenseRuleArrayInput` via:
//
//          LicenseRuleArray{ LicenseRuleArgs{...} }
type LicenseRuleArrayInput interface {
	pulumi.Input

	ToLicenseRuleArrayOutput() LicenseRuleArrayOutput
	ToLicenseRuleArrayOutputWithContext(context.Context) LicenseRuleArrayOutput
}

type LicenseRuleArray []LicenseRuleInput

func (LicenseRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseRule)(nil)).Elem()
}

func (i LicenseRuleArray) ToLicenseRuleArrayOutput() LicenseRuleArrayOutput {
	return i.ToLicenseRuleArrayOutputWithContext(context.Background())
}

func (i LicenseRuleArray) ToLicenseRuleArrayOutputWithContext(ctx context.Context) LicenseRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseRuleArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
type LicenseRuleOutput struct{ *pulumi.OutputState }

func (LicenseRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseRule)(nil)).Elem()
}

func (o LicenseRuleOutput) ToLicenseRuleOutput() LicenseRuleOutput {
	return o
}

func (o LicenseRuleOutput) ToLicenseRuleOutputWithContext(ctx context.Context) LicenseRuleOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
func (o LicenseRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseRule) string { return v.Name }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
func (o LicenseRuleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseRule) string { return v.Unit }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
func (o LicenseRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseRule) string { return v.Value }).(pulumi.StringOutput)
}

type LicenseRuleArrayOutput struct{ *pulumi.OutputState }

func (LicenseRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LicenseRule)(nil)).Elem()
}

func (o LicenseRuleArrayOutput) ToLicenseRuleArrayOutput() LicenseRuleArrayOutput {
	return o
}

func (o LicenseRuleArrayOutput) ToLicenseRuleArrayOutputWithContext(ctx context.Context) LicenseRuleArrayOutput {
	return o
}

func (o LicenseRuleArrayOutput) Index(i pulumi.IntInput) LicenseRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LicenseRule {
		return vs[0].([]LicenseRule)[vs[1].(int)]
	}).(LicenseRuleOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
type LicenseRuleList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
	RuleList []LicenseRule `pulumi:"ruleList"`
}

// LicenseRuleListInput is an input type that accepts LicenseRuleListArgs and LicenseRuleListOutput values.
// You can construct a concrete instance of `LicenseRuleListInput` via:
//
//          LicenseRuleListArgs{...}
type LicenseRuleListInput interface {
	pulumi.Input

	ToLicenseRuleListOutput() LicenseRuleListOutput
	ToLicenseRuleListOutputWithContext(context.Context) LicenseRuleListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
type LicenseRuleListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
	RuleList LicenseRuleArrayInput `pulumi:"ruleList"`
}

func (LicenseRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseRuleList)(nil)).Elem()
}

func (i LicenseRuleListArgs) ToLicenseRuleListOutput() LicenseRuleListOutput {
	return i.ToLicenseRuleListOutputWithContext(context.Background())
}

func (i LicenseRuleListArgs) ToLicenseRuleListOutputWithContext(ctx context.Context) LicenseRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseRuleListOutput)
}

func (i LicenseRuleListArgs) ToLicenseRuleListPtrOutput() LicenseRuleListPtrOutput {
	return i.ToLicenseRuleListPtrOutputWithContext(context.Background())
}

func (i LicenseRuleListArgs) ToLicenseRuleListPtrOutputWithContext(ctx context.Context) LicenseRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseRuleListOutput).ToLicenseRuleListPtrOutputWithContext(ctx)
}

// LicenseRuleListPtrInput is an input type that accepts LicenseRuleListArgs, LicenseRuleListPtr and LicenseRuleListPtrOutput values.
// You can construct a concrete instance of `LicenseRuleListPtrInput` via:
//
//          LicenseRuleListArgs{...}
//
//  or:
//
//          nil
type LicenseRuleListPtrInput interface {
	pulumi.Input

	ToLicenseRuleListPtrOutput() LicenseRuleListPtrOutput
	ToLicenseRuleListPtrOutputWithContext(context.Context) LicenseRuleListPtrOutput
}

type licenseRuleListPtrType LicenseRuleListArgs

func LicenseRuleListPtr(v *LicenseRuleListArgs) LicenseRuleListPtrInput {
	return (*licenseRuleListPtrType)(v)
}

func (*licenseRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseRuleList)(nil)).Elem()
}

func (i *licenseRuleListPtrType) ToLicenseRuleListPtrOutput() LicenseRuleListPtrOutput {
	return i.ToLicenseRuleListPtrOutputWithContext(context.Background())
}

func (i *licenseRuleListPtrType) ToLicenseRuleListPtrOutputWithContext(ctx context.Context) LicenseRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseRuleListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
type LicenseRuleListOutput struct{ *pulumi.OutputState }

func (LicenseRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseRuleList)(nil)).Elem()
}

func (o LicenseRuleListOutput) ToLicenseRuleListOutput() LicenseRuleListOutput {
	return o
}

func (o LicenseRuleListOutput) ToLicenseRuleListOutputWithContext(ctx context.Context) LicenseRuleListOutput {
	return o
}

func (o LicenseRuleListOutput) ToLicenseRuleListPtrOutput() LicenseRuleListPtrOutput {
	return o.ToLicenseRuleListPtrOutputWithContext(context.Background())
}

func (o LicenseRuleListOutput) ToLicenseRuleListPtrOutputWithContext(ctx context.Context) LicenseRuleListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseRuleList) *LicenseRuleList {
		return &v
	}).(LicenseRuleListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
func (o LicenseRuleListOutput) RuleList() LicenseRuleArrayOutput {
	return o.ApplyT(func(v LicenseRuleList) []LicenseRule { return v.RuleList }).(LicenseRuleArrayOutput)
}

type LicenseRuleListPtrOutput struct{ *pulumi.OutputState }

func (LicenseRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseRuleList)(nil)).Elem()
}

func (o LicenseRuleListPtrOutput) ToLicenseRuleListPtrOutput() LicenseRuleListPtrOutput {
	return o
}

func (o LicenseRuleListPtrOutput) ToLicenseRuleListPtrOutputWithContext(ctx context.Context) LicenseRuleListPtrOutput {
	return o
}

func (o LicenseRuleListPtrOutput) Elem() LicenseRuleListOutput {
	return o.ApplyT(func(v *LicenseRuleList) LicenseRuleList {
		if v != nil {
			return *v
		}
		var ret LicenseRuleList
		return ret
	}).(LicenseRuleListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
func (o LicenseRuleListPtrOutput) RuleList() LicenseRuleArrayOutput {
	return o.ApplyT(func(v *LicenseRuleList) []LicenseRule {
		if v == nil {
			return nil
		}
		return v.RuleList
	}).(LicenseRuleArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
type LicenseStringList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
	StringList []string `pulumi:"stringList"`
}

// LicenseStringListInput is an input type that accepts LicenseStringListArgs and LicenseStringListOutput values.
// You can construct a concrete instance of `LicenseStringListInput` via:
//
//          LicenseStringListArgs{...}
type LicenseStringListInput interface {
	pulumi.Input

	ToLicenseStringListOutput() LicenseStringListOutput
	ToLicenseStringListOutputWithContext(context.Context) LicenseStringListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
type LicenseStringListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
	StringList pulumi.StringArrayInput `pulumi:"stringList"`
}

func (LicenseStringListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseStringList)(nil)).Elem()
}

func (i LicenseStringListArgs) ToLicenseStringListOutput() LicenseStringListOutput {
	return i.ToLicenseStringListOutputWithContext(context.Background())
}

func (i LicenseStringListArgs) ToLicenseStringListOutputWithContext(ctx context.Context) LicenseStringListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseStringListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
type LicenseStringListOutput struct{ *pulumi.OutputState }

func (LicenseStringListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseStringList)(nil)).Elem()
}

func (o LicenseStringListOutput) ToLicenseStringListOutput() LicenseStringListOutput {
	return o
}

func (o LicenseStringListOutput) ToLicenseStringListOutputWithContext(ctx context.Context) LicenseStringListOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
func (o LicenseStringListOutput) StringList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LicenseStringList) []string { return v.StringList }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
type LicenseTagList struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
	TagList []aws.Tag `pulumi:"tagList"`
}

// LicenseTagListInput is an input type that accepts LicenseTagListArgs and LicenseTagListOutput values.
// You can construct a concrete instance of `LicenseTagListInput` via:
//
//          LicenseTagListArgs{...}
type LicenseTagListInput interface {
	pulumi.Input

	ToLicenseTagListOutput() LicenseTagListOutput
	ToLicenseTagListOutputWithContext(context.Context) LicenseTagListOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
type LicenseTagListArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
	TagList aws.TagArrayInput `pulumi:"tagList"`
}

func (LicenseTagListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseTagList)(nil)).Elem()
}

func (i LicenseTagListArgs) ToLicenseTagListOutput() LicenseTagListOutput {
	return i.ToLicenseTagListOutputWithContext(context.Background())
}

func (i LicenseTagListArgs) ToLicenseTagListOutputWithContext(ctx context.Context) LicenseTagListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseTagListOutput)
}

func (i LicenseTagListArgs) ToLicenseTagListPtrOutput() LicenseTagListPtrOutput {
	return i.ToLicenseTagListPtrOutputWithContext(context.Background())
}

func (i LicenseTagListArgs) ToLicenseTagListPtrOutputWithContext(ctx context.Context) LicenseTagListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseTagListOutput).ToLicenseTagListPtrOutputWithContext(ctx)
}

// LicenseTagListPtrInput is an input type that accepts LicenseTagListArgs, LicenseTagListPtr and LicenseTagListPtrOutput values.
// You can construct a concrete instance of `LicenseTagListPtrInput` via:
//
//          LicenseTagListArgs{...}
//
//  or:
//
//          nil
type LicenseTagListPtrInput interface {
	pulumi.Input

	ToLicenseTagListPtrOutput() LicenseTagListPtrOutput
	ToLicenseTagListPtrOutputWithContext(context.Context) LicenseTagListPtrOutput
}

type licenseTagListPtrType LicenseTagListArgs

func LicenseTagListPtr(v *LicenseTagListArgs) LicenseTagListPtrInput {
	return (*licenseTagListPtrType)(v)
}

func (*licenseTagListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseTagList)(nil)).Elem()
}

func (i *licenseTagListPtrType) ToLicenseTagListPtrOutput() LicenseTagListPtrOutput {
	return i.ToLicenseTagListPtrOutputWithContext(context.Background())
}

func (i *licenseTagListPtrType) ToLicenseTagListPtrOutputWithContext(ctx context.Context) LicenseTagListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseTagListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
type LicenseTagListOutput struct{ *pulumi.OutputState }

func (LicenseTagListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseTagList)(nil)).Elem()
}

func (o LicenseTagListOutput) ToLicenseTagListOutput() LicenseTagListOutput {
	return o
}

func (o LicenseTagListOutput) ToLicenseTagListOutputWithContext(ctx context.Context) LicenseTagListOutput {
	return o
}

func (o LicenseTagListOutput) ToLicenseTagListPtrOutput() LicenseTagListPtrOutput {
	return o.ToLicenseTagListPtrOutputWithContext(context.Background())
}

func (o LicenseTagListOutput) ToLicenseTagListPtrOutputWithContext(ctx context.Context) LicenseTagListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseTagList) *LicenseTagList {
		return &v
	}).(LicenseTagListPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
func (o LicenseTagListOutput) TagList() aws.TagArrayOutput {
	return o.ApplyT(func(v LicenseTagList) []aws.Tag { return v.TagList }).(aws.TagArrayOutput)
}

type LicenseTagListPtrOutput struct{ *pulumi.OutputState }

func (LicenseTagListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseTagList)(nil)).Elem()
}

func (o LicenseTagListPtrOutput) ToLicenseTagListPtrOutput() LicenseTagListPtrOutput {
	return o
}

func (o LicenseTagListPtrOutput) ToLicenseTagListPtrOutputWithContext(ctx context.Context) LicenseTagListPtrOutput {
	return o
}

func (o LicenseTagListPtrOutput) Elem() LicenseTagListOutput {
	return o.ApplyT(func(v *LicenseTagList) LicenseTagList {
		if v != nil {
			return *v
		}
		var ret LicenseTagList
		return ret
	}).(LicenseTagListOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
func (o LicenseTagListPtrOutput) TagList() aws.TagArrayOutput {
	return o.ApplyT(func(v *LicenseTagList) []aws.Tag {
		if v == nil {
			return nil
		}
		return v.TagList
	}).(aws.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
type LicenseValidityDateFormat struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
	Begin string `pulumi:"begin"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
	End string `pulumi:"end"`
}

// LicenseValidityDateFormatInput is an input type that accepts LicenseValidityDateFormatArgs and LicenseValidityDateFormatOutput values.
// You can construct a concrete instance of `LicenseValidityDateFormatInput` via:
//
//          LicenseValidityDateFormatArgs{...}
type LicenseValidityDateFormatInput interface {
	pulumi.Input

	ToLicenseValidityDateFormatOutput() LicenseValidityDateFormatOutput
	ToLicenseValidityDateFormatOutputWithContext(context.Context) LicenseValidityDateFormatOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
type LicenseValidityDateFormatArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
	Begin pulumi.StringInput `pulumi:"begin"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
	End pulumi.StringInput `pulumi:"end"`
}

func (LicenseValidityDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseValidityDateFormat)(nil)).Elem()
}

func (i LicenseValidityDateFormatArgs) ToLicenseValidityDateFormatOutput() LicenseValidityDateFormatOutput {
	return i.ToLicenseValidityDateFormatOutputWithContext(context.Background())
}

func (i LicenseValidityDateFormatArgs) ToLicenseValidityDateFormatOutputWithContext(ctx context.Context) LicenseValidityDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseValidityDateFormatOutput)
}

func (i LicenseValidityDateFormatArgs) ToLicenseValidityDateFormatPtrOutput() LicenseValidityDateFormatPtrOutput {
	return i.ToLicenseValidityDateFormatPtrOutputWithContext(context.Background())
}

func (i LicenseValidityDateFormatArgs) ToLicenseValidityDateFormatPtrOutputWithContext(ctx context.Context) LicenseValidityDateFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseValidityDateFormatOutput).ToLicenseValidityDateFormatPtrOutputWithContext(ctx)
}

// LicenseValidityDateFormatPtrInput is an input type that accepts LicenseValidityDateFormatArgs, LicenseValidityDateFormatPtr and LicenseValidityDateFormatPtrOutput values.
// You can construct a concrete instance of `LicenseValidityDateFormatPtrInput` via:
//
//          LicenseValidityDateFormatArgs{...}
//
//  or:
//
//          nil
type LicenseValidityDateFormatPtrInput interface {
	pulumi.Input

	ToLicenseValidityDateFormatPtrOutput() LicenseValidityDateFormatPtrOutput
	ToLicenseValidityDateFormatPtrOutputWithContext(context.Context) LicenseValidityDateFormatPtrOutput
}

type licenseValidityDateFormatPtrType LicenseValidityDateFormatArgs

func LicenseValidityDateFormatPtr(v *LicenseValidityDateFormatArgs) LicenseValidityDateFormatPtrInput {
	return (*licenseValidityDateFormatPtrType)(v)
}

func (*licenseValidityDateFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseValidityDateFormat)(nil)).Elem()
}

func (i *licenseValidityDateFormatPtrType) ToLicenseValidityDateFormatPtrOutput() LicenseValidityDateFormatPtrOutput {
	return i.ToLicenseValidityDateFormatPtrOutputWithContext(context.Background())
}

func (i *licenseValidityDateFormatPtrType) ToLicenseValidityDateFormatPtrOutputWithContext(ctx context.Context) LicenseValidityDateFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicenseValidityDateFormatPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
type LicenseValidityDateFormatOutput struct{ *pulumi.OutputState }

func (LicenseValidityDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LicenseValidityDateFormat)(nil)).Elem()
}

func (o LicenseValidityDateFormatOutput) ToLicenseValidityDateFormatOutput() LicenseValidityDateFormatOutput {
	return o
}

func (o LicenseValidityDateFormatOutput) ToLicenseValidityDateFormatOutputWithContext(ctx context.Context) LicenseValidityDateFormatOutput {
	return o
}

func (o LicenseValidityDateFormatOutput) ToLicenseValidityDateFormatPtrOutput() LicenseValidityDateFormatPtrOutput {
	return o.ToLicenseValidityDateFormatPtrOutputWithContext(context.Background())
}

func (o LicenseValidityDateFormatOutput) ToLicenseValidityDateFormatPtrOutputWithContext(ctx context.Context) LicenseValidityDateFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LicenseValidityDateFormat) *LicenseValidityDateFormat {
		return &v
	}).(LicenseValidityDateFormatPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
func (o LicenseValidityDateFormatOutput) Begin() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseValidityDateFormat) string { return v.Begin }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
func (o LicenseValidityDateFormatOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v LicenseValidityDateFormat) string { return v.End }).(pulumi.StringOutput)
}

type LicenseValidityDateFormatPtrOutput struct{ *pulumi.OutputState }

func (LicenseValidityDateFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicenseValidityDateFormat)(nil)).Elem()
}

func (o LicenseValidityDateFormatPtrOutput) ToLicenseValidityDateFormatPtrOutput() LicenseValidityDateFormatPtrOutput {
	return o
}

func (o LicenseValidityDateFormatPtrOutput) ToLicenseValidityDateFormatPtrOutputWithContext(ctx context.Context) LicenseValidityDateFormatPtrOutput {
	return o
}

func (o LicenseValidityDateFormatPtrOutput) Elem() LicenseValidityDateFormatOutput {
	return o.ApplyT(func(v *LicenseValidityDateFormat) LicenseValidityDateFormat {
		if v != nil {
			return *v
		}
		var ret LicenseValidityDateFormat
		return ret
	}).(LicenseValidityDateFormatOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
func (o LicenseValidityDateFormatPtrOutput) Begin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicenseValidityDateFormat) *string {
		if v == nil {
			return nil
		}
		return &v.Begin
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
func (o LicenseValidityDateFormatPtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LicenseValidityDateFormat) *string {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GrantAllowedOperationListOutput{})
	pulumi.RegisterOutputType(GrantAllowedOperationListPtrOutput{})
	pulumi.RegisterOutputType(GrantArnListOutput{})
	pulumi.RegisterOutputType(GrantArnListPtrOutput{})
	pulumi.RegisterOutputType(GrantFilterOutput{})
	pulumi.RegisterOutputType(GrantFilterArrayOutput{})
	pulumi.RegisterOutputType(GrantFilterListOutput{})
	pulumi.RegisterOutputType(GrantFilterListPtrOutput{})
	pulumi.RegisterOutputType(GrantStringListOutput{})
	pulumi.RegisterOutputType(GrantTagListOutput{})
	pulumi.RegisterOutputType(GrantTagListPtrOutput{})
	pulumi.RegisterOutputType(LicenseArnListOutput{})
	pulumi.RegisterOutputType(LicenseArnListPtrOutput{})
	pulumi.RegisterOutputType(LicenseBorrowConfigurationOutput{})
	pulumi.RegisterOutputType(LicenseBorrowConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LicenseConsumptionConfigurationOutput{})
	pulumi.RegisterOutputType(LicenseConsumptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LicenseEntitlementOutput{})
	pulumi.RegisterOutputType(LicenseEntitlementArrayOutput{})
	pulumi.RegisterOutputType(LicenseEntitlementListOutput{})
	pulumi.RegisterOutputType(LicenseEntitlementListPtrOutput{})
	pulumi.RegisterOutputType(LicenseFilterOutput{})
	pulumi.RegisterOutputType(LicenseFilterArrayOutput{})
	pulumi.RegisterOutputType(LicenseFilterListOutput{})
	pulumi.RegisterOutputType(LicenseFilterListPtrOutput{})
	pulumi.RegisterOutputType(LicenseIssuerDataOutput{})
	pulumi.RegisterOutputType(LicenseIssuerDataPtrOutput{})
	pulumi.RegisterOutputType(LicenseMetadataOutput{})
	pulumi.RegisterOutputType(LicenseMetadataArrayOutput{})
	pulumi.RegisterOutputType(LicenseMetadataListOutput{})
	pulumi.RegisterOutputType(LicenseMetadataListPtrOutput{})
	pulumi.RegisterOutputType(LicenseProvisionalConfigurationOutput{})
	pulumi.RegisterOutputType(LicenseProvisionalConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LicenseRuleOutput{})
	pulumi.RegisterOutputType(LicenseRuleArrayOutput{})
	pulumi.RegisterOutputType(LicenseRuleListOutput{})
	pulumi.RegisterOutputType(LicenseRuleListPtrOutput{})
	pulumi.RegisterOutputType(LicenseStringListOutput{})
	pulumi.RegisterOutputType(LicenseTagListOutput{})
	pulumi.RegisterOutputType(LicenseTagListPtrOutput{})
	pulumi.RegisterOutputType(LicenseValidityDateFormatOutput{})
	pulumi.RegisterOutputType(LicenseValidityDateFormatPtrOutput{})
}
