// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Wisdom::AIPrompt Resource Type
type AiPrompt struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the AI Prompt.
	AiPromptArn pulumi.StringOutput `pulumi:"aiPromptArn"`
	// The identifier of the Amazon Q in Connect AI prompt.
	AiPromptId pulumi.StringOutput `pulumi:"aiPromptId"`
	// The API format used for this AI Prompt.
	ApiFormat AiPromptAiPromptApiFormatOutput `pulumi:"apiFormat"`
	// The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
	AssistantArn pulumi.StringOutput `pulumi:"assistantArn"`
	// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantId pulumi.StringPtrOutput `pulumi:"assistantId"`
	// The description of the AI Prompt.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The identifier of the model used for this AI Prompt. Model Ids supported are: `CLAUDE_3_HAIKU_20240307_V1` .
	ModelId             pulumi.StringOutput  `pulumi:"modelId"`
	ModifiedTimeSeconds pulumi.Float64Output `pulumi:"modifiedTimeSeconds"`
	// The name of the AI Prompt
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The tags used to organize, track, or control access for this resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The configuration of the prompt template for this AI Prompt.
	TemplateConfiguration AiPromptAiPromptTemplateConfigurationOutput `pulumi:"templateConfiguration"`
	// The type of the prompt template for this AI Prompt.
	TemplateType AiPromptAiPromptTemplateTypeOutput `pulumi:"templateType"`
	// The type of this AI Prompt.
	Type AiPromptAiPromptTypeOutput `pulumi:"type"`
}

// NewAiPrompt registers a new resource with the given unique name, arguments, and options.
func NewAiPrompt(ctx *pulumi.Context,
	name string, args *AiPromptArgs, opts ...pulumi.ResourceOption) (*AiPrompt, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiFormat == nil {
		return nil, errors.New("invalid value for required argument 'ApiFormat'")
	}
	if args.ModelId == nil {
		return nil, errors.New("invalid value for required argument 'ModelId'")
	}
	if args.TemplateConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'TemplateConfiguration'")
	}
	if args.TemplateType == nil {
		return nil, errors.New("invalid value for required argument 'TemplateType'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"apiFormat",
		"assistantId",
		"modelId",
		"name",
		"tags.*",
		"templateType",
		"type",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AiPrompt
	err := ctx.RegisterResource("aws-native:wisdom:AiPrompt", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiPrompt gets an existing AiPrompt resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiPrompt(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiPromptState, opts ...pulumi.ResourceOption) (*AiPrompt, error) {
	var resource AiPrompt
	err := ctx.ReadResource("aws-native:wisdom:AiPrompt", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiPrompt resources.
type aiPromptState struct {
}

type AiPromptState struct {
}

func (AiPromptState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiPromptState)(nil)).Elem()
}

type aiPromptArgs struct {
	// The API format used for this AI Prompt.
	ApiFormat AiPromptAiPromptApiFormat `pulumi:"apiFormat"`
	// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantId *string `pulumi:"assistantId"`
	// The description of the AI Prompt.
	Description *string `pulumi:"description"`
	// The identifier of the model used for this AI Prompt. Model Ids supported are: `CLAUDE_3_HAIKU_20240307_V1` .
	ModelId string `pulumi:"modelId"`
	// The name of the AI Prompt
	Name *string `pulumi:"name"`
	// The tags used to organize, track, or control access for this resource.
	Tags map[string]string `pulumi:"tags"`
	// The configuration of the prompt template for this AI Prompt.
	TemplateConfiguration AiPromptAiPromptTemplateConfiguration `pulumi:"templateConfiguration"`
	// The type of the prompt template for this AI Prompt.
	TemplateType AiPromptAiPromptTemplateType `pulumi:"templateType"`
	// The type of this AI Prompt.
	Type AiPromptAiPromptType `pulumi:"type"`
}

// The set of arguments for constructing a AiPrompt resource.
type AiPromptArgs struct {
	// The API format used for this AI Prompt.
	ApiFormat AiPromptAiPromptApiFormatInput
	// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantId pulumi.StringPtrInput
	// The description of the AI Prompt.
	Description pulumi.StringPtrInput
	// The identifier of the model used for this AI Prompt. Model Ids supported are: `CLAUDE_3_HAIKU_20240307_V1` .
	ModelId pulumi.StringInput
	// The name of the AI Prompt
	Name pulumi.StringPtrInput
	// The tags used to organize, track, or control access for this resource.
	Tags pulumi.StringMapInput
	// The configuration of the prompt template for this AI Prompt.
	TemplateConfiguration AiPromptAiPromptTemplateConfigurationInput
	// The type of the prompt template for this AI Prompt.
	TemplateType AiPromptAiPromptTemplateTypeInput
	// The type of this AI Prompt.
	Type AiPromptAiPromptTypeInput
}

func (AiPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiPromptArgs)(nil)).Elem()
}

type AiPromptInput interface {
	pulumi.Input

	ToAiPromptOutput() AiPromptOutput
	ToAiPromptOutputWithContext(ctx context.Context) AiPromptOutput
}

func (*AiPrompt) ElementType() reflect.Type {
	return reflect.TypeOf((**AiPrompt)(nil)).Elem()
}

func (i *AiPrompt) ToAiPromptOutput() AiPromptOutput {
	return i.ToAiPromptOutputWithContext(context.Background())
}

func (i *AiPrompt) ToAiPromptOutputWithContext(ctx context.Context) AiPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiPromptOutput)
}

type AiPromptOutput struct{ *pulumi.OutputState }

func (AiPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiPrompt)(nil)).Elem()
}

func (o AiPromptOutput) ToAiPromptOutput() AiPromptOutput {
	return o
}

func (o AiPromptOutput) ToAiPromptOutputWithContext(ctx context.Context) AiPromptOutput {
	return o
}

// The Amazon Resource Name (ARN) of the AI Prompt.
func (o AiPromptOutput) AiPromptArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringOutput { return v.AiPromptArn }).(pulumi.StringOutput)
}

// The identifier of the Amazon Q in Connect AI prompt.
func (o AiPromptOutput) AiPromptId() pulumi.StringOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringOutput { return v.AiPromptId }).(pulumi.StringOutput)
}

// The API format used for this AI Prompt.
func (o AiPromptOutput) ApiFormat() AiPromptAiPromptApiFormatOutput {
	return o.ApplyT(func(v *AiPrompt) AiPromptAiPromptApiFormatOutput { return v.ApiFormat }).(AiPromptAiPromptApiFormatOutput)
}

// The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
func (o AiPromptOutput) AssistantArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringOutput { return v.AssistantArn }).(pulumi.StringOutput)
}

// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
func (o AiPromptOutput) AssistantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringPtrOutput { return v.AssistantId }).(pulumi.StringPtrOutput)
}

// The description of the AI Prompt.
func (o AiPromptOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier of the model used for this AI Prompt. Model Ids supported are: `CLAUDE_3_HAIKU_20240307_V1` .
func (o AiPromptOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringOutput { return v.ModelId }).(pulumi.StringOutput)
}

func (o AiPromptOutput) ModifiedTimeSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v *AiPrompt) pulumi.Float64Output { return v.ModifiedTimeSeconds }).(pulumi.Float64Output)
}

// The name of the AI Prompt
func (o AiPromptOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The tags used to organize, track, or control access for this resource.
func (o AiPromptOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AiPrompt) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The configuration of the prompt template for this AI Prompt.
func (o AiPromptOutput) TemplateConfiguration() AiPromptAiPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v *AiPrompt) AiPromptAiPromptTemplateConfigurationOutput { return v.TemplateConfiguration }).(AiPromptAiPromptTemplateConfigurationOutput)
}

// The type of the prompt template for this AI Prompt.
func (o AiPromptOutput) TemplateType() AiPromptAiPromptTemplateTypeOutput {
	return o.ApplyT(func(v *AiPrompt) AiPromptAiPromptTemplateTypeOutput { return v.TemplateType }).(AiPromptAiPromptTemplateTypeOutput)
}

// The type of this AI Prompt.
func (o AiPromptOutput) Type() AiPromptAiPromptTypeOutput {
	return o.ApplyT(func(v *AiPrompt) AiPromptAiPromptTypeOutput { return v.Type }).(AiPromptAiPromptTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AiPromptInput)(nil)).Elem(), &AiPrompt{})
	pulumi.RegisterOutputType(AiPromptOutput{})
}
