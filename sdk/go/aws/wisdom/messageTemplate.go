// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Wisdom::MessageTemplate Resource Type
type MessageTemplate struct {
	pulumi.CustomResourceState

	ChannelSubtype    MessageTemplateChannelSubtypeOutput `pulumi:"channelSubtype"`
	Content           MessageTemplateContentOutput        `pulumi:"content"`
	DefaultAttributes MessageTemplateAttributesPtrOutput  `pulumi:"defaultAttributes"`
	// The description of the message template.
	Description           pulumi.StringPtrOutput                        `pulumi:"description"`
	GroupingConfiguration MessageTemplateGroupingConfigurationPtrOutput `pulumi:"groupingConfiguration"`
	// The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
	KnowledgeBaseArn pulumi.StringOutput `pulumi:"knowledgeBaseArn"`
	// The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
	Language pulumi.StringPtrOutput `pulumi:"language"`
	// The Amazon Resource Name (ARN) of the message template.
	MessageTemplateArn pulumi.StringOutput `pulumi:"messageTemplateArn"`
	// The content SHA256 of the message template.
	MessageTemplateContentSha256 pulumi.StringOutput `pulumi:"messageTemplateContentSha256"`
	// The unique identifier of the message template.
	MessageTemplateId pulumi.StringOutput `pulumi:"messageTemplateId"`
	// The name of the message template.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewMessageTemplate registers a new resource with the given unique name, arguments, and options.
func NewMessageTemplate(ctx *pulumi.Context,
	name string, args *MessageTemplateArgs, opts ...pulumi.ResourceOption) (*MessageTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChannelSubtype == nil {
		return nil, errors.New("invalid value for required argument 'ChannelSubtype'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.KnowledgeBaseArn == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"channelSubtype",
		"knowledgeBaseArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MessageTemplate
	err := ctx.RegisterResource("aws-native:wisdom:MessageTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMessageTemplate gets an existing MessageTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMessageTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MessageTemplateState, opts ...pulumi.ResourceOption) (*MessageTemplate, error) {
	var resource MessageTemplate
	err := ctx.ReadResource("aws-native:wisdom:MessageTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MessageTemplate resources.
type messageTemplateState struct {
}

type MessageTemplateState struct {
}

func (MessageTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*messageTemplateState)(nil)).Elem()
}

type messageTemplateArgs struct {
	ChannelSubtype    MessageTemplateChannelSubtype `pulumi:"channelSubtype"`
	Content           MessageTemplateContent        `pulumi:"content"`
	DefaultAttributes *MessageTemplateAttributes    `pulumi:"defaultAttributes"`
	// The description of the message template.
	Description           *string                               `pulumi:"description"`
	GroupingConfiguration *MessageTemplateGroupingConfiguration `pulumi:"groupingConfiguration"`
	// The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
	KnowledgeBaseArn string `pulumi:"knowledgeBaseArn"`
	// The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
	Language *string `pulumi:"language"`
	// The name of the message template.
	Name *string `pulumi:"name"`
	// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a MessageTemplate resource.
type MessageTemplateArgs struct {
	ChannelSubtype    MessageTemplateChannelSubtypeInput
	Content           MessageTemplateContentInput
	DefaultAttributes MessageTemplateAttributesPtrInput
	// The description of the message template.
	Description           pulumi.StringPtrInput
	GroupingConfiguration MessageTemplateGroupingConfigurationPtrInput
	// The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
	KnowledgeBaseArn pulumi.StringInput
	// The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
	Language pulumi.StringPtrInput
	// The name of the message template.
	Name pulumi.StringPtrInput
	// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayInput
}

func (MessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*messageTemplateArgs)(nil)).Elem()
}

type MessageTemplateInput interface {
	pulumi.Input

	ToMessageTemplateOutput() MessageTemplateOutput
	ToMessageTemplateOutputWithContext(ctx context.Context) MessageTemplateOutput
}

func (*MessageTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageTemplate)(nil)).Elem()
}

func (i *MessageTemplate) ToMessageTemplateOutput() MessageTemplateOutput {
	return i.ToMessageTemplateOutputWithContext(context.Background())
}

func (i *MessageTemplate) ToMessageTemplateOutputWithContext(ctx context.Context) MessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageTemplateOutput)
}

type MessageTemplateOutput struct{ *pulumi.OutputState }

func (MessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageTemplate)(nil)).Elem()
}

func (o MessageTemplateOutput) ToMessageTemplateOutput() MessageTemplateOutput {
	return o
}

func (o MessageTemplateOutput) ToMessageTemplateOutputWithContext(ctx context.Context) MessageTemplateOutput {
	return o
}

func (o MessageTemplateOutput) ChannelSubtype() MessageTemplateChannelSubtypeOutput {
	return o.ApplyT(func(v *MessageTemplate) MessageTemplateChannelSubtypeOutput { return v.ChannelSubtype }).(MessageTemplateChannelSubtypeOutput)
}

func (o MessageTemplateOutput) Content() MessageTemplateContentOutput {
	return o.ApplyT(func(v *MessageTemplate) MessageTemplateContentOutput { return v.Content }).(MessageTemplateContentOutput)
}

func (o MessageTemplateOutput) DefaultAttributes() MessageTemplateAttributesPtrOutput {
	return o.ApplyT(func(v *MessageTemplate) MessageTemplateAttributesPtrOutput { return v.DefaultAttributes }).(MessageTemplateAttributesPtrOutput)
}

// The description of the message template.
func (o MessageTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MessageTemplateOutput) GroupingConfiguration() MessageTemplateGroupingConfigurationPtrOutput {
	return o.ApplyT(func(v *MessageTemplate) MessageTemplateGroupingConfigurationPtrOutput { return v.GroupingConfiguration }).(MessageTemplateGroupingConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
func (o MessageTemplateOutput) KnowledgeBaseArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringOutput { return v.KnowledgeBaseArn }).(pulumi.StringOutput)
}

// The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
func (o MessageTemplateOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringPtrOutput { return v.Language }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the message template.
func (o MessageTemplateOutput) MessageTemplateArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringOutput { return v.MessageTemplateArn }).(pulumi.StringOutput)
}

// The content SHA256 of the message template.
func (o MessageTemplateOutput) MessageTemplateContentSha256() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringOutput { return v.MessageTemplateContentSha256 }).(pulumi.StringOutput)
}

// The unique identifier of the message template.
func (o MessageTemplateOutput) MessageTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringOutput { return v.MessageTemplateId }).(pulumi.StringOutput)
}

// The name of the message template.
func (o MessageTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o MessageTemplateOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MessageTemplate) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MessageTemplateInput)(nil)).Elem(), &MessageTemplate{})
	pulumi.RegisterOutputType(MessageTemplateOutput{})
}
