// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A version for the specified customer-managed message template within the specified knowledge base.
type MessageTemplateVersion struct {
	pulumi.CustomResourceState

	// The unqualified Amazon Resource Name (ARN) of the message template.
	MessageTemplateArn pulumi.StringOutput `pulumi:"messageTemplateArn"`
	// The content SHA256 of the message template.
	MessageTemplateContentSha256 pulumi.StringPtrOutput `pulumi:"messageTemplateContentSha256"`
	// The unqualified Amazon Resource Name (ARN) of the message template version.
	MessageTemplateVersionArn pulumi.StringOutput `pulumi:"messageTemplateVersionArn"`
	// Current version number of the message template.
	MessageTemplateVersionNumber pulumi.Float64Output `pulumi:"messageTemplateVersionNumber"`
}

// NewMessageTemplateVersion registers a new resource with the given unique name, arguments, and options.
func NewMessageTemplateVersion(ctx *pulumi.Context,
	name string, args *MessageTemplateVersionArgs, opts ...pulumi.ResourceOption) (*MessageTemplateVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MessageTemplateArn == nil {
		return nil, errors.New("invalid value for required argument 'MessageTemplateArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"messageTemplateArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MessageTemplateVersion
	err := ctx.RegisterResource("aws-native:wisdom:MessageTemplateVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMessageTemplateVersion gets an existing MessageTemplateVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMessageTemplateVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MessageTemplateVersionState, opts ...pulumi.ResourceOption) (*MessageTemplateVersion, error) {
	var resource MessageTemplateVersion
	err := ctx.ReadResource("aws-native:wisdom:MessageTemplateVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MessageTemplateVersion resources.
type messageTemplateVersionState struct {
}

type MessageTemplateVersionState struct {
}

func (MessageTemplateVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*messageTemplateVersionState)(nil)).Elem()
}

type messageTemplateVersionArgs struct {
	// The unqualified Amazon Resource Name (ARN) of the message template.
	MessageTemplateArn string `pulumi:"messageTemplateArn"`
	// The content SHA256 of the message template.
	MessageTemplateContentSha256 *string `pulumi:"messageTemplateContentSha256"`
}

// The set of arguments for constructing a MessageTemplateVersion resource.
type MessageTemplateVersionArgs struct {
	// The unqualified Amazon Resource Name (ARN) of the message template.
	MessageTemplateArn pulumi.StringInput
	// The content SHA256 of the message template.
	MessageTemplateContentSha256 pulumi.StringPtrInput
}

func (MessageTemplateVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*messageTemplateVersionArgs)(nil)).Elem()
}

type MessageTemplateVersionInput interface {
	pulumi.Input

	ToMessageTemplateVersionOutput() MessageTemplateVersionOutput
	ToMessageTemplateVersionOutputWithContext(ctx context.Context) MessageTemplateVersionOutput
}

func (*MessageTemplateVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageTemplateVersion)(nil)).Elem()
}

func (i *MessageTemplateVersion) ToMessageTemplateVersionOutput() MessageTemplateVersionOutput {
	return i.ToMessageTemplateVersionOutputWithContext(context.Background())
}

func (i *MessageTemplateVersion) ToMessageTemplateVersionOutputWithContext(ctx context.Context) MessageTemplateVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageTemplateVersionOutput)
}

type MessageTemplateVersionOutput struct{ *pulumi.OutputState }

func (MessageTemplateVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageTemplateVersion)(nil)).Elem()
}

func (o MessageTemplateVersionOutput) ToMessageTemplateVersionOutput() MessageTemplateVersionOutput {
	return o
}

func (o MessageTemplateVersionOutput) ToMessageTemplateVersionOutputWithContext(ctx context.Context) MessageTemplateVersionOutput {
	return o
}

// The unqualified Amazon Resource Name (ARN) of the message template.
func (o MessageTemplateVersionOutput) MessageTemplateArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplateVersion) pulumi.StringOutput { return v.MessageTemplateArn }).(pulumi.StringOutput)
}

// The content SHA256 of the message template.
func (o MessageTemplateVersionOutput) MessageTemplateContentSha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MessageTemplateVersion) pulumi.StringPtrOutput { return v.MessageTemplateContentSha256 }).(pulumi.StringPtrOutput)
}

// The unqualified Amazon Resource Name (ARN) of the message template version.
func (o MessageTemplateVersionOutput) MessageTemplateVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MessageTemplateVersion) pulumi.StringOutput { return v.MessageTemplateVersionArn }).(pulumi.StringOutput)
}

// Current version number of the message template.
func (o MessageTemplateVersionOutput) MessageTemplateVersionNumber() pulumi.Float64Output {
	return o.ApplyT(func(v *MessageTemplateVersion) pulumi.Float64Output { return v.MessageTemplateVersionNumber }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MessageTemplateVersionInput)(nil)).Elem(), &MessageTemplateVersion{})
	pulumi.RegisterOutputType(MessageTemplateVersionOutput{})
}
