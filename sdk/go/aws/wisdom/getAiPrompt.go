// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Wisdom::AIPrompt Resource Type
func LookupAiPrompt(ctx *pulumi.Context, args *LookupAiPromptArgs, opts ...pulumi.InvokeOption) (*LookupAiPromptResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAiPromptResult
	err := ctx.Invoke("aws-native:wisdom:getAiPrompt", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAiPromptArgs struct {
	// The identifier of the Amazon Q in Connect AI prompt.
	AiPromptId string `pulumi:"aiPromptId"`
	// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantId string `pulumi:"assistantId"`
}

type LookupAiPromptResult struct {
	// The Amazon Resource Name (ARN) of the AI Prompt.
	AiPromptArn *string `pulumi:"aiPromptArn"`
	// The identifier of the Amazon Q in Connect AI prompt.
	AiPromptId *string `pulumi:"aiPromptId"`
	// The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
	AssistantArn *string `pulumi:"assistantArn"`
	// The description of the AI Prompt.
	Description *string `pulumi:"description"`
	// The configuration of the prompt template for this AI Prompt.
	TemplateConfiguration *AiPromptAiPromptTemplateConfiguration `pulumi:"templateConfiguration"`
}

func LookupAiPromptOutput(ctx *pulumi.Context, args LookupAiPromptOutputArgs, opts ...pulumi.InvokeOption) LookupAiPromptResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAiPromptResultOutput, error) {
			args := v.(LookupAiPromptArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:wisdom:getAiPrompt", args, LookupAiPromptResultOutput{}, options).(LookupAiPromptResultOutput), nil
		}).(LookupAiPromptResultOutput)
}

type LookupAiPromptOutputArgs struct {
	// The identifier of the Amazon Q in Connect AI prompt.
	AiPromptId pulumi.StringInput `pulumi:"aiPromptId"`
	// The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantId pulumi.StringInput `pulumi:"assistantId"`
}

func (LookupAiPromptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiPromptArgs)(nil)).Elem()
}

type LookupAiPromptResultOutput struct{ *pulumi.OutputState }

func (LookupAiPromptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiPromptResult)(nil)).Elem()
}

func (o LookupAiPromptResultOutput) ToLookupAiPromptResultOutput() LookupAiPromptResultOutput {
	return o
}

func (o LookupAiPromptResultOutput) ToLookupAiPromptResultOutputWithContext(ctx context.Context) LookupAiPromptResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the AI Prompt.
func (o LookupAiPromptResultOutput) AiPromptArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiPromptResult) *string { return v.AiPromptArn }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Q in Connect AI prompt.
func (o LookupAiPromptResultOutput) AiPromptId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiPromptResult) *string { return v.AiPromptId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
func (o LookupAiPromptResultOutput) AssistantArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiPromptResult) *string { return v.AssistantArn }).(pulumi.StringPtrOutput)
}

// The description of the AI Prompt.
func (o LookupAiPromptResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiPromptResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The configuration of the prompt template for this AI Prompt.
func (o LookupAiPromptResultOutput) TemplateConfiguration() AiPromptAiPromptTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v LookupAiPromptResult) *AiPromptAiPromptTemplateConfiguration { return v.TemplateConfiguration }).(AiPromptAiPromptTemplateConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAiPromptResultOutput{})
}
