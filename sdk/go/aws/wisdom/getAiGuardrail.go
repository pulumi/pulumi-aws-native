// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Wisdom::AIGuardrail Resource Type
func LookupAiGuardrail(ctx *pulumi.Context, args *LookupAiGuardrailArgs, opts ...pulumi.InvokeOption) (*LookupAiGuardrailResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAiGuardrailResult
	err := ctx.Invoke("aws-native:wisdom:getAiGuardrail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAiGuardrailArgs struct {
	AiGuardrailId string `pulumi:"aiGuardrailId"`
	AssistantId   string `pulumi:"assistantId"`
}

type LookupAiGuardrailResult struct {
	AiGuardrailArn *string `pulumi:"aiGuardrailArn"`
	AiGuardrailId  *string `pulumi:"aiGuardrailId"`
	AssistantArn   *string `pulumi:"assistantArn"`
	// Messaging for when violations are detected in text
	BlockedInputMessaging *string `pulumi:"blockedInputMessaging"`
	// Messaging for when violations are detected in text
	BlockedOutputsMessaging         *string                                                `pulumi:"blockedOutputsMessaging"`
	ContentPolicyConfig             *AiGuardrailAiGuardrailContentPolicyConfig             `pulumi:"contentPolicyConfig"`
	ContextualGroundingPolicyConfig *AiGuardrailAiGuardrailContextualGroundingPolicyConfig `pulumi:"contextualGroundingPolicyConfig"`
	// Description of the guardrail or its version
	Description                      *string                                                 `pulumi:"description"`
	SensitiveInformationPolicyConfig *AiGuardrailAiGuardrailSensitiveInformationPolicyConfig `pulumi:"sensitiveInformationPolicyConfig"`
	TopicPolicyConfig                *AiGuardrailAiGuardrailTopicPolicyConfig                `pulumi:"topicPolicyConfig"`
	WordPolicyConfig                 *AiGuardrailAiGuardrailWordPolicyConfig                 `pulumi:"wordPolicyConfig"`
}

func LookupAiGuardrailOutput(ctx *pulumi.Context, args LookupAiGuardrailOutputArgs, opts ...pulumi.InvokeOption) LookupAiGuardrailResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAiGuardrailResultOutput, error) {
			args := v.(LookupAiGuardrailArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAiGuardrailResult
			secret, err := ctx.InvokePackageRaw("aws-native:wisdom:getAiGuardrail", args, &rv, "", opts...)
			if err != nil {
				return LookupAiGuardrailResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAiGuardrailResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAiGuardrailResultOutput), nil
			}
			return output, nil
		}).(LookupAiGuardrailResultOutput)
}

type LookupAiGuardrailOutputArgs struct {
	AiGuardrailId pulumi.StringInput `pulumi:"aiGuardrailId"`
	AssistantId   pulumi.StringInput `pulumi:"assistantId"`
}

func (LookupAiGuardrailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiGuardrailArgs)(nil)).Elem()
}

type LookupAiGuardrailResultOutput struct{ *pulumi.OutputState }

func (LookupAiGuardrailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAiGuardrailResult)(nil)).Elem()
}

func (o LookupAiGuardrailResultOutput) ToLookupAiGuardrailResultOutput() LookupAiGuardrailResultOutput {
	return o
}

func (o LookupAiGuardrailResultOutput) ToLookupAiGuardrailResultOutputWithContext(ctx context.Context) LookupAiGuardrailResultOutput {
	return o
}

func (o LookupAiGuardrailResultOutput) AiGuardrailArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.AiGuardrailArn }).(pulumi.StringPtrOutput)
}

func (o LookupAiGuardrailResultOutput) AiGuardrailId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.AiGuardrailId }).(pulumi.StringPtrOutput)
}

func (o LookupAiGuardrailResultOutput) AssistantArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.AssistantArn }).(pulumi.StringPtrOutput)
}

// Messaging for when violations are detected in text
func (o LookupAiGuardrailResultOutput) BlockedInputMessaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.BlockedInputMessaging }).(pulumi.StringPtrOutput)
}

// Messaging for when violations are detected in text
func (o LookupAiGuardrailResultOutput) BlockedOutputsMessaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.BlockedOutputsMessaging }).(pulumi.StringPtrOutput)
}

func (o LookupAiGuardrailResultOutput) ContentPolicyConfig() AiGuardrailAiGuardrailContentPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *AiGuardrailAiGuardrailContentPolicyConfig {
		return v.ContentPolicyConfig
	}).(AiGuardrailAiGuardrailContentPolicyConfigPtrOutput)
}

func (o LookupAiGuardrailResultOutput) ContextualGroundingPolicyConfig() AiGuardrailAiGuardrailContextualGroundingPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *AiGuardrailAiGuardrailContextualGroundingPolicyConfig {
		return v.ContextualGroundingPolicyConfig
	}).(AiGuardrailAiGuardrailContextualGroundingPolicyConfigPtrOutput)
}

// Description of the guardrail or its version
func (o LookupAiGuardrailResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupAiGuardrailResultOutput) SensitiveInformationPolicyConfig() AiGuardrailAiGuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *AiGuardrailAiGuardrailSensitiveInformationPolicyConfig {
		return v.SensitiveInformationPolicyConfig
	}).(AiGuardrailAiGuardrailSensitiveInformationPolicyConfigPtrOutput)
}

func (o LookupAiGuardrailResultOutput) TopicPolicyConfig() AiGuardrailAiGuardrailTopicPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *AiGuardrailAiGuardrailTopicPolicyConfig { return v.TopicPolicyConfig }).(AiGuardrailAiGuardrailTopicPolicyConfigPtrOutput)
}

func (o LookupAiGuardrailResultOutput) WordPolicyConfig() AiGuardrailAiGuardrailWordPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupAiGuardrailResult) *AiGuardrailAiGuardrailWordPolicyConfig { return v.WordPolicyConfig }).(AiGuardrailAiGuardrailWordPolicyConfigPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAiGuardrailResultOutput{})
}
