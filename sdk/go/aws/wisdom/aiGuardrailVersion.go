// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wisdom

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Wisdom::AIGuardrailVersion Resource Type
type AiGuardrailVersion struct {
	pulumi.CustomResourceState

	AiGuardrailArn       pulumi.StringOutput     `pulumi:"aiGuardrailArn"`
	AiGuardrailId        pulumi.StringOutput     `pulumi:"aiGuardrailId"`
	AiGuardrailVersionId pulumi.StringOutput     `pulumi:"aiGuardrailVersionId"`
	AssistantArn         pulumi.StringOutput     `pulumi:"assistantArn"`
	AssistantId          pulumi.StringOutput     `pulumi:"assistantId"`
	ModifiedTimeSeconds  pulumi.Float64PtrOutput `pulumi:"modifiedTimeSeconds"`
	// The version number for this AI Guardrail version.
	VersionNumber pulumi.Float64Output `pulumi:"versionNumber"`
}

// NewAiGuardrailVersion registers a new resource with the given unique name, arguments, and options.
func NewAiGuardrailVersion(ctx *pulumi.Context,
	name string, args *AiGuardrailVersionArgs, opts ...pulumi.ResourceOption) (*AiGuardrailVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AiGuardrailId == nil {
		return nil, errors.New("invalid value for required argument 'AiGuardrailId'")
	}
	if args.AssistantId == nil {
		return nil, errors.New("invalid value for required argument 'AssistantId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"aiGuardrailId",
		"assistantId",
		"modifiedTimeSeconds",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AiGuardrailVersion
	err := ctx.RegisterResource("aws-native:wisdom:AiGuardrailVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAiGuardrailVersion gets an existing AiGuardrailVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAiGuardrailVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AiGuardrailVersionState, opts ...pulumi.ResourceOption) (*AiGuardrailVersion, error) {
	var resource AiGuardrailVersion
	err := ctx.ReadResource("aws-native:wisdom:AiGuardrailVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AiGuardrailVersion resources.
type aiGuardrailVersionState struct {
}

type AiGuardrailVersionState struct {
}

func (AiGuardrailVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiGuardrailVersionState)(nil)).Elem()
}

type aiGuardrailVersionArgs struct {
	AiGuardrailId       string   `pulumi:"aiGuardrailId"`
	AssistantId         string   `pulumi:"assistantId"`
	ModifiedTimeSeconds *float64 `pulumi:"modifiedTimeSeconds"`
}

// The set of arguments for constructing a AiGuardrailVersion resource.
type AiGuardrailVersionArgs struct {
	AiGuardrailId       pulumi.StringInput
	AssistantId         pulumi.StringInput
	ModifiedTimeSeconds pulumi.Float64PtrInput
}

func (AiGuardrailVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiGuardrailVersionArgs)(nil)).Elem()
}

type AiGuardrailVersionInput interface {
	pulumi.Input

	ToAiGuardrailVersionOutput() AiGuardrailVersionOutput
	ToAiGuardrailVersionOutputWithContext(ctx context.Context) AiGuardrailVersionOutput
}

func (*AiGuardrailVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**AiGuardrailVersion)(nil)).Elem()
}

func (i *AiGuardrailVersion) ToAiGuardrailVersionOutput() AiGuardrailVersionOutput {
	return i.ToAiGuardrailVersionOutputWithContext(context.Background())
}

func (i *AiGuardrailVersion) ToAiGuardrailVersionOutputWithContext(ctx context.Context) AiGuardrailVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AiGuardrailVersionOutput)
}

type AiGuardrailVersionOutput struct{ *pulumi.OutputState }

func (AiGuardrailVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AiGuardrailVersion)(nil)).Elem()
}

func (o AiGuardrailVersionOutput) ToAiGuardrailVersionOutput() AiGuardrailVersionOutput {
	return o
}

func (o AiGuardrailVersionOutput) ToAiGuardrailVersionOutputWithContext(ctx context.Context) AiGuardrailVersionOutput {
	return o
}

func (o AiGuardrailVersionOutput) AiGuardrailArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.StringOutput { return v.AiGuardrailArn }).(pulumi.StringOutput)
}

func (o AiGuardrailVersionOutput) AiGuardrailId() pulumi.StringOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.StringOutput { return v.AiGuardrailId }).(pulumi.StringOutput)
}

func (o AiGuardrailVersionOutput) AiGuardrailVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.StringOutput { return v.AiGuardrailVersionId }).(pulumi.StringOutput)
}

func (o AiGuardrailVersionOutput) AssistantArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.StringOutput { return v.AssistantArn }).(pulumi.StringOutput)
}

func (o AiGuardrailVersionOutput) AssistantId() pulumi.StringOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.StringOutput { return v.AssistantId }).(pulumi.StringOutput)
}

func (o AiGuardrailVersionOutput) ModifiedTimeSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.Float64PtrOutput { return v.ModifiedTimeSeconds }).(pulumi.Float64PtrOutput)
}

// The version number for this AI Guardrail version.
func (o AiGuardrailVersionOutput) VersionNumber() pulumi.Float64Output {
	return o.ApplyT(func(v *AiGuardrailVersion) pulumi.Float64Output { return v.VersionNumber }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AiGuardrailVersionInput)(nil)).Elem(), &AiGuardrailVersion{})
	pulumi.RegisterOutputType(AiGuardrailVersionOutput{})
}
