// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The configuration for a Provider to assume a role.
type ProviderAssumeRole struct {
	// Number of seconds to restrict the assume role session duration.
	DurationSeconds *int `pulumi:"durationSeconds"`
	// External identifier to use when assuming the role.
	ExternalId *string `pulumi:"externalId"`
	// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
	Policy *string `pulumi:"policy"`
	// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
	PolicyArns []string `pulumi:"policyArns"`
	// Amazon Resource Name (ARN) of the IAM Role to assume.
	RoleArn *string `pulumi:"roleArn"`
	// Session name to use when assuming the role.
	SessionName *string `pulumi:"sessionName"`
	// Map of assume role session tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
	TransitiveTagKeys []string `pulumi:"transitiveTagKeys"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

// The configuration for a Provider to assume a role.
type ProviderAssumeRoleArgs struct {
	// Number of seconds to restrict the assume role session duration.
	DurationSeconds pulumi.IntPtrInput `pulumi:"durationSeconds"`
	// External identifier to use when assuming the role.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
	PolicyArns pulumi.StringArrayInput `pulumi:"policyArns"`
	// Amazon Resource Name (ARN) of the IAM Role to assume.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Session name to use when assuming the role.
	SessionName pulumi.StringPtrInput `pulumi:"sessionName"`
	// Map of assume role session tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

// The configuration for a Provider to assume a role.
type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

// Number of seconds to restrict the assume role session duration.
func (o ProviderAssumeRoleOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

// External identifier to use when assuming the role.
func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
func (o ProviderAssumeRoleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
func (o ProviderAssumeRoleOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.PolicyArns }).(pulumi.StringArrayOutput)
}

// Amazon Resource Name (ARN) of the IAM Role to assume.
func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Session name to use when assuming the role.
func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

// Map of assume role session tags.
func (o ProviderAssumeRoleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderAssumeRole) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
func (o ProviderAssumeRoleOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

// Number of seconds to restrict the assume role session duration.
func (o ProviderAssumeRolePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

// External identifier to use when assuming the role.
func (o ProviderAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
func (o ProviderAssumeRolePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
func (o ProviderAssumeRolePtrOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.PolicyArns
	}).(pulumi.StringArrayOutput)
}

// Amazon Resource Name (ARN) of the IAM Role to assume.
func (o ProviderAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Session name to use when assuming the role.
func (o ProviderAssumeRolePtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

// Map of assume role session tags.
func (o ProviderAssumeRolePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
func (o ProviderAssumeRolePtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

// The configuration with resource tag settings to apply across all resources handled by this provider. This is designed to replace redundant per-resource `tags` configurations. Provider tags can be overridden with new values, but not excluded from specific resources. To override provider tag values, use the `tags` argument within a resource to configure new tag values for matching keys.
type ProviderDefaultTags struct {
	// A group of tags to set across all resources.
	Tags map[string]string `pulumi:"tags"`
}

// ProviderDefaultTagsInput is an input type that accepts ProviderDefaultTagsArgs and ProviderDefaultTagsOutput values.
// You can construct a concrete instance of `ProviderDefaultTagsInput` via:
//
//	ProviderDefaultTagsArgs{...}
type ProviderDefaultTagsInput interface {
	pulumi.Input

	ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput
	ToProviderDefaultTagsOutputWithContext(context.Context) ProviderDefaultTagsOutput
}

// The configuration with resource tag settings to apply across all resources handled by this provider. This is designed to replace redundant per-resource `tags` configurations. Provider tags can be overridden with new values, but not excluded from specific resources. To override provider tag values, use the `tags` argument within a resource to configure new tag values for matching keys.
type ProviderDefaultTagsArgs struct {
	// A group of tags to set across all resources.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ProviderDefaultTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return i.ToProviderDefaultTagsOutputWithContext(context.Background())
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsOutput)
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return i.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsOutput).ToProviderDefaultTagsPtrOutputWithContext(ctx)
}

// ProviderDefaultTagsPtrInput is an input type that accepts ProviderDefaultTagsArgs, ProviderDefaultTagsPtr and ProviderDefaultTagsPtrOutput values.
// You can construct a concrete instance of `ProviderDefaultTagsPtrInput` via:
//
//	        ProviderDefaultTagsArgs{...}
//
//	or:
//
//	        nil
type ProviderDefaultTagsPtrInput interface {
	pulumi.Input

	ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput
	ToProviderDefaultTagsPtrOutputWithContext(context.Context) ProviderDefaultTagsPtrOutput
}

type providerDefaultTagsPtrType ProviderDefaultTagsArgs

func ProviderDefaultTagsPtr(v *ProviderDefaultTagsArgs) ProviderDefaultTagsPtrInput {
	return (*providerDefaultTagsPtrType)(v)
}

func (*providerDefaultTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderDefaultTags)(nil)).Elem()
}

func (i *providerDefaultTagsPtrType) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return i.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (i *providerDefaultTagsPtrType) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsPtrOutput)
}

// The configuration with resource tag settings to apply across all resources handled by this provider. This is designed to replace redundant per-resource `tags` configurations. Provider tags can be overridden with new values, but not excluded from specific resources. To override provider tag values, use the `tags` argument within a resource to configure new tag values for matching keys.
type ProviderDefaultTagsOutput struct{ *pulumi.OutputState }

func (ProviderDefaultTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return o.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderDefaultTags) *ProviderDefaultTags {
		return &v
	}).(ProviderDefaultTagsPtrOutput)
}

// A group of tags to set across all resources.
func (o ProviderDefaultTagsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderDefaultTags) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ProviderDefaultTagsPtrOutput struct{ *pulumi.OutputState }

func (ProviderDefaultTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderDefaultTags)(nil)).Elem()
}

func (o ProviderDefaultTagsPtrOutput) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return o
}

func (o ProviderDefaultTagsPtrOutput) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return o
}

func (o ProviderDefaultTagsPtrOutput) Elem() ProviderDefaultTagsOutput {
	return o.ApplyT(func(v *ProviderDefaultTags) ProviderDefaultTags {
		if v != nil {
			return *v
		}
		var ret ProviderDefaultTags
		return ret
	}).(ProviderDefaultTagsOutput)
}

// A group of tags to set across all resources.
func (o ProviderDefaultTagsPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderDefaultTags) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The configuration for for customizing service endpoints.
type ProviderEndpoint struct {
	// Override the default endpoint for AWS CloudControl
	Cloudcontrol *string `pulumi:"cloudcontrol"`
	// Override the default endpoint for AWS CloudFormation
	Cloudformation *string `pulumi:"cloudformation"`
	// Override the default endpoint for AWS Elastic Compute Cloud (EC2)
	Ec2 *string `pulumi:"ec2"`
	// Override the default endpoint for AWS Systems Manager
	Ssm *string `pulumi:"ssm"`
	// Override the default endpoint for AWS Security Token Service (STS)
	Sts *string `pulumi:"sts"`
}

// ProviderEndpointInput is an input type that accepts ProviderEndpointArgs and ProviderEndpointOutput values.
// You can construct a concrete instance of `ProviderEndpointInput` via:
//
//	ProviderEndpointArgs{...}
type ProviderEndpointInput interface {
	pulumi.Input

	ToProviderEndpointOutput() ProviderEndpointOutput
	ToProviderEndpointOutputWithContext(context.Context) ProviderEndpointOutput
}

// The configuration for for customizing service endpoints.
type ProviderEndpointArgs struct {
	// Override the default endpoint for AWS CloudControl
	Cloudcontrol pulumi.StringPtrInput `pulumi:"cloudcontrol"`
	// Override the default endpoint for AWS CloudFormation
	Cloudformation pulumi.StringPtrInput `pulumi:"cloudformation"`
	// Override the default endpoint for AWS Elastic Compute Cloud (EC2)
	Ec2 pulumi.StringPtrInput `pulumi:"ec2"`
	// Override the default endpoint for AWS Systems Manager
	Ssm pulumi.StringPtrInput `pulumi:"ssm"`
	// Override the default endpoint for AWS Security Token Service (STS)
	Sts pulumi.StringPtrInput `pulumi:"sts"`
}

func (ProviderEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArgs) ToProviderEndpointOutput() ProviderEndpointOutput {
	return i.ToProviderEndpointOutputWithContext(context.Background())
}

func (i ProviderEndpointArgs) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointOutput)
}

// ProviderEndpointArrayInput is an input type that accepts ProviderEndpointArray and ProviderEndpointArrayOutput values.
// You can construct a concrete instance of `ProviderEndpointArrayInput` via:
//
//	ProviderEndpointArray{ ProviderEndpointArgs{...} }
type ProviderEndpointArrayInput interface {
	pulumi.Input

	ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput
	ToProviderEndpointArrayOutputWithContext(context.Context) ProviderEndpointArrayOutput
}

type ProviderEndpointArray []ProviderEndpointInput

func (ProviderEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return i.ToProviderEndpointArrayOutputWithContext(context.Background())
}

func (i ProviderEndpointArray) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderEndpointArrayOutput)
}

// The configuration for for customizing service endpoints.
type ProviderEndpointOutput struct{ *pulumi.OutputState }

func (ProviderEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointOutput) ToProviderEndpointOutput() ProviderEndpointOutput {
	return o
}

func (o ProviderEndpointOutput) ToProviderEndpointOutputWithContext(ctx context.Context) ProviderEndpointOutput {
	return o
}

// Override the default endpoint for AWS CloudControl
func (o ProviderEndpointOutput) Cloudcontrol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudcontrol }).(pulumi.StringPtrOutput)
}

// Override the default endpoint for AWS CloudFormation
func (o ProviderEndpointOutput) Cloudformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Cloudformation }).(pulumi.StringPtrOutput)
}

// Override the default endpoint for AWS Elastic Compute Cloud (EC2)
func (o ProviderEndpointOutput) Ec2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ec2 }).(pulumi.StringPtrOutput)
}

// Override the default endpoint for AWS Systems Manager
func (o ProviderEndpointOutput) Ssm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Ssm }).(pulumi.StringPtrOutput)
}

// Override the default endpoint for AWS Security Token Service (STS)
func (o ProviderEndpointOutput) Sts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderEndpoint) *string { return v.Sts }).(pulumi.StringPtrOutput)
}

type ProviderEndpointArrayOutput struct{ *pulumi.OutputState }

func (ProviderEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderEndpoint)(nil)).Elem()
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutput() ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) ToProviderEndpointArrayOutputWithContext(ctx context.Context) ProviderEndpointArrayOutput {
	return o
}

func (o ProviderEndpointArrayOutput) Index(i pulumi.IntInput) ProviderEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderEndpoint {
		return vs[0].([]ProviderEndpoint)[vs[1].(int)]
	}).(ProviderEndpointOutput)
}

// The configuration with resource tag settings to ignore across all resources handled by this provider (except any individual service tag resources such as `ec2.Tag`) for situations where external systems are managing certain resource tags.
type ProviderIgnoreTags struct {
	// List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
	KeyPrefixes []string `pulumi:"keyPrefixes"`
	// List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
	Keys []string `pulumi:"keys"`
}

// ProviderIgnoreTagsInput is an input type that accepts ProviderIgnoreTagsArgs and ProviderIgnoreTagsOutput values.
// You can construct a concrete instance of `ProviderIgnoreTagsInput` via:
//
//	ProviderIgnoreTagsArgs{...}
type ProviderIgnoreTagsInput interface {
	pulumi.Input

	ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput
	ToProviderIgnoreTagsOutputWithContext(context.Context) ProviderIgnoreTagsOutput
}

// The configuration with resource tag settings to ignore across all resources handled by this provider (except any individual service tag resources such as `ec2.Tag`) for situations where external systems are managing certain resource tags.
type ProviderIgnoreTagsArgs struct {
	// List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
	KeyPrefixes pulumi.StringArrayInput `pulumi:"keyPrefixes"`
	// List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (ProviderIgnoreTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return i.ToProviderIgnoreTagsOutputWithContext(context.Background())
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsOutput)
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return i.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsOutput).ToProviderIgnoreTagsPtrOutputWithContext(ctx)
}

// ProviderIgnoreTagsPtrInput is an input type that accepts ProviderIgnoreTagsArgs, ProviderIgnoreTagsPtr and ProviderIgnoreTagsPtrOutput values.
// You can construct a concrete instance of `ProviderIgnoreTagsPtrInput` via:
//
//	        ProviderIgnoreTagsArgs{...}
//
//	or:
//
//	        nil
type ProviderIgnoreTagsPtrInput interface {
	pulumi.Input

	ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput
	ToProviderIgnoreTagsPtrOutputWithContext(context.Context) ProviderIgnoreTagsPtrOutput
}

type providerIgnoreTagsPtrType ProviderIgnoreTagsArgs

func ProviderIgnoreTagsPtr(v *ProviderIgnoreTagsArgs) ProviderIgnoreTagsPtrInput {
	return (*providerIgnoreTagsPtrType)(v)
}

func (*providerIgnoreTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderIgnoreTags)(nil)).Elem()
}

func (i *providerIgnoreTagsPtrType) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return i.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (i *providerIgnoreTagsPtrType) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsPtrOutput)
}

// The configuration with resource tag settings to ignore across all resources handled by this provider (except any individual service tag resources such as `ec2.Tag`) for situations where external systems are managing certain resource tags.
type ProviderIgnoreTagsOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return o.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderIgnoreTags) *ProviderIgnoreTags {
		return &v
	}).(ProviderIgnoreTagsPtrOutput)
}

// List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
func (o ProviderIgnoreTagsOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderIgnoreTags) []string { return v.KeyPrefixes }).(pulumi.StringArrayOutput)
}

// List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
func (o ProviderIgnoreTagsOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderIgnoreTags) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type ProviderIgnoreTagsPtrOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderIgnoreTags)(nil)).Elem()
}

func (o ProviderIgnoreTagsPtrOutput) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return o
}

func (o ProviderIgnoreTagsPtrOutput) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return o
}

func (o ProviderIgnoreTagsPtrOutput) Elem() ProviderIgnoreTagsOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) ProviderIgnoreTags {
		if v != nil {
			return *v
		}
		var ret ProviderIgnoreTags
		return ret
	}).(ProviderIgnoreTagsOutput)
}

// List of exact resource tag keys to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning the tag in any `tags` attributes and displaying any configuration difference for the tag value. If any resource configuration still has this tag key configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
func (o ProviderIgnoreTagsPtrOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) []string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixes
	}).(pulumi.StringArrayOutput)
}

// List of resource tag key prefixes to ignore across all resources handled by this provider. This configuration prevents Pulumi from returning any tag key matching the prefixes in any `tags` attributes and displaying any configuration difference for those tag values. If any resource configuration still has a tag matching one of the prefixes configured in the `tags` argument, it will display a perpetual difference until the tag is removed from the argument or `ignoreChanges` is also used.
func (o ProviderIgnoreTagsPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderDefaultTagsInput)(nil)).Elem(), ProviderDefaultTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderDefaultTagsPtrInput)(nil)).Elem(), ProviderDefaultTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointInput)(nil)).Elem(), ProviderEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderEndpointArrayInput)(nil)).Elem(), ProviderEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreTagsInput)(nil)).Elem(), ProviderIgnoreTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreTagsPtrInput)(nil)).Elem(), ProviderIgnoreTagsArgs{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(ProviderDefaultTagsOutput{})
	pulumi.RegisterOutputType(ProviderDefaultTagsPtrOutput{})
	pulumi.RegisterOutputType(ProviderEndpointOutput{})
	pulumi.RegisterOutputType(ProviderEndpointArrayOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreTagsOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreTagsPtrOutput{})
}
