// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arcregionswitch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a plan that specifies Regions, IAM roles, and workflows of logic required to perform the desired change to your multi-Region application
func LookupPlan(ctx *pulumi.Context, args *LookupPlanArgs, opts ...pulumi.InvokeOption) (*LookupPlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanResult
	err := ctx.Invoke("aws-native:arcregionswitch:getPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPlanArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupPlanResult struct {
	Arn                          *string                           `pulumi:"arn"`
	AssociatedAlarms             map[string]PlanAssociatedAlarm    `pulumi:"associatedAlarms"`
	Description                  *string                           `pulumi:"description"`
	ExecutionRole                *string                           `pulumi:"executionRole"`
	HealthChecksForPlan          map[string][]PlanHealthCheckState `pulumi:"healthChecksForPlan"`
	Owner                        *string                           `pulumi:"owner"`
	RecoveryTimeObjectiveMinutes *float64                          `pulumi:"recoveryTimeObjectiveMinutes"`
	Tags                         map[string]string                 `pulumi:"tags"`
	Triggers                     []PlanTrigger                     `pulumi:"triggers"`
	Version                      *string                           `pulumi:"version"`
	Workflows                    []PlanWorkflow                    `pulumi:"workflows"`
}

func LookupPlanOutput(ctx *pulumi.Context, args LookupPlanOutputArgs, opts ...pulumi.InvokeOption) LookupPlanResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlanResultOutput, error) {
			args := v.(LookupPlanArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:arcregionswitch:getPlan", args, LookupPlanResultOutput{}, options).(LookupPlanResultOutput), nil
		}).(LookupPlanResultOutput)
}

type LookupPlanOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanArgs)(nil)).Elem()
}

type LookupPlanResultOutput struct{ *pulumi.OutputState }

func (LookupPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanResult)(nil)).Elem()
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutput() LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutputWithContext(ctx context.Context) LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupPlanResultOutput) AssociatedAlarms() PlanAssociatedAlarmMapOutput {
	return o.ApplyT(func(v LookupPlanResult) map[string]PlanAssociatedAlarm { return v.AssociatedAlarms }).(PlanAssociatedAlarmMapOutput)
}

func (o LookupPlanResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupPlanResultOutput) ExecutionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *string { return v.ExecutionRole }).(pulumi.StringPtrOutput)
}

func (o LookupPlanResultOutput) HealthChecksForPlan() PlanHealthCheckStateArrayMapOutput {
	return o.ApplyT(func(v LookupPlanResult) map[string][]PlanHealthCheckState { return v.HealthChecksForPlan }).(PlanHealthCheckStateArrayMapOutput)
}

func (o LookupPlanResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o LookupPlanResultOutput) RecoveryTimeObjectiveMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *float64 { return v.RecoveryTimeObjectiveMinutes }).(pulumi.Float64PtrOutput)
}

func (o LookupPlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupPlanResultOutput) Triggers() PlanTriggerArrayOutput {
	return o.ApplyT(func(v LookupPlanResult) []PlanTrigger { return v.Triggers }).(PlanTriggerArrayOutput)
}

func (o LookupPlanResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlanResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func (o LookupPlanResultOutput) Workflows() PlanWorkflowArrayOutput {
	return o.ApplyT(func(v LookupPlanResult) []PlanWorkflow { return v.Workflows }).(PlanWorkflowArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanResultOutput{})
}
