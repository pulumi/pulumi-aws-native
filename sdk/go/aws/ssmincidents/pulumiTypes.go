// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssmincidents

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The ReplicationSet regional configuration.
type ReplicationSetRegionConfiguration struct {
	SseKmsKeyId string `pulumi:"sseKmsKeyId"`
}

// ReplicationSetRegionConfigurationInput is an input type that accepts ReplicationSetRegionConfigurationArgs and ReplicationSetRegionConfigurationOutput values.
// You can construct a concrete instance of `ReplicationSetRegionConfigurationInput` via:
//
//          ReplicationSetRegionConfigurationArgs{...}
type ReplicationSetRegionConfigurationInput interface {
	pulumi.Input

	ToReplicationSetRegionConfigurationOutput() ReplicationSetRegionConfigurationOutput
	ToReplicationSetRegionConfigurationOutputWithContext(context.Context) ReplicationSetRegionConfigurationOutput
}

// The ReplicationSet regional configuration.
type ReplicationSetRegionConfigurationArgs struct {
	SseKmsKeyId pulumi.StringInput `pulumi:"sseKmsKeyId"`
}

func (ReplicationSetRegionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegionConfiguration)(nil)).Elem()
}

func (i ReplicationSetRegionConfigurationArgs) ToReplicationSetRegionConfigurationOutput() ReplicationSetRegionConfigurationOutput {
	return i.ToReplicationSetRegionConfigurationOutputWithContext(context.Background())
}

func (i ReplicationSetRegionConfigurationArgs) ToReplicationSetRegionConfigurationOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionConfigurationOutput)
}

func (i ReplicationSetRegionConfigurationArgs) ToReplicationSetRegionConfigurationPtrOutput() ReplicationSetRegionConfigurationPtrOutput {
	return i.ToReplicationSetRegionConfigurationPtrOutputWithContext(context.Background())
}

func (i ReplicationSetRegionConfigurationArgs) ToReplicationSetRegionConfigurationPtrOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionConfigurationOutput).ToReplicationSetRegionConfigurationPtrOutputWithContext(ctx)
}

// ReplicationSetRegionConfigurationPtrInput is an input type that accepts ReplicationSetRegionConfigurationArgs, ReplicationSetRegionConfigurationPtr and ReplicationSetRegionConfigurationPtrOutput values.
// You can construct a concrete instance of `ReplicationSetRegionConfigurationPtrInput` via:
//
//          ReplicationSetRegionConfigurationArgs{...}
//
//  or:
//
//          nil
type ReplicationSetRegionConfigurationPtrInput interface {
	pulumi.Input

	ToReplicationSetRegionConfigurationPtrOutput() ReplicationSetRegionConfigurationPtrOutput
	ToReplicationSetRegionConfigurationPtrOutputWithContext(context.Context) ReplicationSetRegionConfigurationPtrOutput
}

type replicationSetRegionConfigurationPtrType ReplicationSetRegionConfigurationArgs

func ReplicationSetRegionConfigurationPtr(v *ReplicationSetRegionConfigurationArgs) ReplicationSetRegionConfigurationPtrInput {
	return (*replicationSetRegionConfigurationPtrType)(v)
}

func (*replicationSetRegionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSetRegionConfiguration)(nil)).Elem()
}

func (i *replicationSetRegionConfigurationPtrType) ToReplicationSetRegionConfigurationPtrOutput() ReplicationSetRegionConfigurationPtrOutput {
	return i.ToReplicationSetRegionConfigurationPtrOutputWithContext(context.Background())
}

func (i *replicationSetRegionConfigurationPtrType) ToReplicationSetRegionConfigurationPtrOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetRegionConfigurationPtrOutput)
}

// The ReplicationSet regional configuration.
type ReplicationSetRegionConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetRegionConfiguration)(nil)).Elem()
}

func (o ReplicationSetRegionConfigurationOutput) ToReplicationSetRegionConfigurationOutput() ReplicationSetRegionConfigurationOutput {
	return o
}

func (o ReplicationSetRegionConfigurationOutput) ToReplicationSetRegionConfigurationOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationOutput {
	return o
}

func (o ReplicationSetRegionConfigurationOutput) ToReplicationSetRegionConfigurationPtrOutput() ReplicationSetRegionConfigurationPtrOutput {
	return o.ToReplicationSetRegionConfigurationPtrOutputWithContext(context.Background())
}

func (o ReplicationSetRegionConfigurationOutput) ToReplicationSetRegionConfigurationPtrOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationSetRegionConfiguration) *ReplicationSetRegionConfiguration {
		return &v
	}).(ReplicationSetRegionConfigurationPtrOutput)
}

func (o ReplicationSetRegionConfigurationOutput) SseKmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationSetRegionConfiguration) string { return v.SseKmsKeyId }).(pulumi.StringOutput)
}

type ReplicationSetRegionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ReplicationSetRegionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationSetRegionConfiguration)(nil)).Elem()
}

func (o ReplicationSetRegionConfigurationPtrOutput) ToReplicationSetRegionConfigurationPtrOutput() ReplicationSetRegionConfigurationPtrOutput {
	return o
}

func (o ReplicationSetRegionConfigurationPtrOutput) ToReplicationSetRegionConfigurationPtrOutputWithContext(ctx context.Context) ReplicationSetRegionConfigurationPtrOutput {
	return o
}

func (o ReplicationSetRegionConfigurationPtrOutput) Elem() ReplicationSetRegionConfigurationOutput {
	return o.ApplyT(func(v *ReplicationSetRegionConfiguration) ReplicationSetRegionConfiguration {
		if v != nil {
			return *v
		}
		var ret ReplicationSetRegionConfiguration
		return ret
	}).(ReplicationSetRegionConfigurationOutput)
}

func (o ReplicationSetRegionConfigurationPtrOutput) SseKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationSetRegionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SseKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The ReplicationSet regional configuration.
type ReplicationSetReplicationRegion struct {
	RegionConfiguration *ReplicationSetRegionConfiguration `pulumi:"regionConfiguration"`
	RegionName          *string                            `pulumi:"regionName"`
}

// ReplicationSetReplicationRegionInput is an input type that accepts ReplicationSetReplicationRegionArgs and ReplicationSetReplicationRegionOutput values.
// You can construct a concrete instance of `ReplicationSetReplicationRegionInput` via:
//
//          ReplicationSetReplicationRegionArgs{...}
type ReplicationSetReplicationRegionInput interface {
	pulumi.Input

	ToReplicationSetReplicationRegionOutput() ReplicationSetReplicationRegionOutput
	ToReplicationSetReplicationRegionOutputWithContext(context.Context) ReplicationSetReplicationRegionOutput
}

// The ReplicationSet regional configuration.
type ReplicationSetReplicationRegionArgs struct {
	RegionConfiguration ReplicationSetRegionConfigurationPtrInput `pulumi:"regionConfiguration"`
	RegionName          pulumi.StringPtrInput                     `pulumi:"regionName"`
}

func (ReplicationSetReplicationRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetReplicationRegion)(nil)).Elem()
}

func (i ReplicationSetReplicationRegionArgs) ToReplicationSetReplicationRegionOutput() ReplicationSetReplicationRegionOutput {
	return i.ToReplicationSetReplicationRegionOutputWithContext(context.Background())
}

func (i ReplicationSetReplicationRegionArgs) ToReplicationSetReplicationRegionOutputWithContext(ctx context.Context) ReplicationSetReplicationRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetReplicationRegionOutput)
}

// ReplicationSetReplicationRegionArrayInput is an input type that accepts ReplicationSetReplicationRegionArray and ReplicationSetReplicationRegionArrayOutput values.
// You can construct a concrete instance of `ReplicationSetReplicationRegionArrayInput` via:
//
//          ReplicationSetReplicationRegionArray{ ReplicationSetReplicationRegionArgs{...} }
type ReplicationSetReplicationRegionArrayInput interface {
	pulumi.Input

	ToReplicationSetReplicationRegionArrayOutput() ReplicationSetReplicationRegionArrayOutput
	ToReplicationSetReplicationRegionArrayOutputWithContext(context.Context) ReplicationSetReplicationRegionArrayOutput
}

type ReplicationSetReplicationRegionArray []ReplicationSetReplicationRegionInput

func (ReplicationSetReplicationRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetReplicationRegion)(nil)).Elem()
}

func (i ReplicationSetReplicationRegionArray) ToReplicationSetReplicationRegionArrayOutput() ReplicationSetReplicationRegionArrayOutput {
	return i.ToReplicationSetReplicationRegionArrayOutputWithContext(context.Background())
}

func (i ReplicationSetReplicationRegionArray) ToReplicationSetReplicationRegionArrayOutputWithContext(ctx context.Context) ReplicationSetReplicationRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationSetReplicationRegionArrayOutput)
}

// The ReplicationSet regional configuration.
type ReplicationSetReplicationRegionOutput struct{ *pulumi.OutputState }

func (ReplicationSetReplicationRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationSetReplicationRegion)(nil)).Elem()
}

func (o ReplicationSetReplicationRegionOutput) ToReplicationSetReplicationRegionOutput() ReplicationSetReplicationRegionOutput {
	return o
}

func (o ReplicationSetReplicationRegionOutput) ToReplicationSetReplicationRegionOutputWithContext(ctx context.Context) ReplicationSetReplicationRegionOutput {
	return o
}

func (o ReplicationSetReplicationRegionOutput) RegionConfiguration() ReplicationSetRegionConfigurationPtrOutput {
	return o.ApplyT(func(v ReplicationSetReplicationRegion) *ReplicationSetRegionConfiguration {
		return v.RegionConfiguration
	}).(ReplicationSetRegionConfigurationPtrOutput)
}

func (o ReplicationSetReplicationRegionOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationSetReplicationRegion) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

type ReplicationSetReplicationRegionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationSetReplicationRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationSetReplicationRegion)(nil)).Elem()
}

func (o ReplicationSetReplicationRegionArrayOutput) ToReplicationSetReplicationRegionArrayOutput() ReplicationSetReplicationRegionArrayOutput {
	return o
}

func (o ReplicationSetReplicationRegionArrayOutput) ToReplicationSetReplicationRegionArrayOutputWithContext(ctx context.Context) ReplicationSetReplicationRegionArrayOutput {
	return o
}

func (o ReplicationSetReplicationRegionArrayOutput) Index(i pulumi.IntInput) ReplicationSetReplicationRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationSetReplicationRegion {
		return vs[0].([]ReplicationSetReplicationRegion)[vs[1].(int)]
	}).(ReplicationSetReplicationRegionOutput)
}

// The automation configuration to launch.
type ResponsePlanAction struct {
	SsmAutomation *ResponsePlanSsmAutomation `pulumi:"ssmAutomation"`
}

// ResponsePlanActionInput is an input type that accepts ResponsePlanActionArgs and ResponsePlanActionOutput values.
// You can construct a concrete instance of `ResponsePlanActionInput` via:
//
//          ResponsePlanActionArgs{...}
type ResponsePlanActionInput interface {
	pulumi.Input

	ToResponsePlanActionOutput() ResponsePlanActionOutput
	ToResponsePlanActionOutputWithContext(context.Context) ResponsePlanActionOutput
}

// The automation configuration to launch.
type ResponsePlanActionArgs struct {
	SsmAutomation ResponsePlanSsmAutomationPtrInput `pulumi:"ssmAutomation"`
}

func (ResponsePlanActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanAction)(nil)).Elem()
}

func (i ResponsePlanActionArgs) ToResponsePlanActionOutput() ResponsePlanActionOutput {
	return i.ToResponsePlanActionOutputWithContext(context.Background())
}

func (i ResponsePlanActionArgs) ToResponsePlanActionOutputWithContext(ctx context.Context) ResponsePlanActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionOutput)
}

// ResponsePlanActionArrayInput is an input type that accepts ResponsePlanActionArray and ResponsePlanActionArrayOutput values.
// You can construct a concrete instance of `ResponsePlanActionArrayInput` via:
//
//          ResponsePlanActionArray{ ResponsePlanActionArgs{...} }
type ResponsePlanActionArrayInput interface {
	pulumi.Input

	ToResponsePlanActionArrayOutput() ResponsePlanActionArrayOutput
	ToResponsePlanActionArrayOutputWithContext(context.Context) ResponsePlanActionArrayOutput
}

type ResponsePlanActionArray []ResponsePlanActionInput

func (ResponsePlanActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanAction)(nil)).Elem()
}

func (i ResponsePlanActionArray) ToResponsePlanActionArrayOutput() ResponsePlanActionArrayOutput {
	return i.ToResponsePlanActionArrayOutputWithContext(context.Background())
}

func (i ResponsePlanActionArray) ToResponsePlanActionArrayOutputWithContext(ctx context.Context) ResponsePlanActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanActionArrayOutput)
}

// The automation configuration to launch.
type ResponsePlanActionOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanAction)(nil)).Elem()
}

func (o ResponsePlanActionOutput) ToResponsePlanActionOutput() ResponsePlanActionOutput {
	return o
}

func (o ResponsePlanActionOutput) ToResponsePlanActionOutputWithContext(ctx context.Context) ResponsePlanActionOutput {
	return o
}

func (o ResponsePlanActionOutput) SsmAutomation() ResponsePlanSsmAutomationPtrOutput {
	return o.ApplyT(func(v ResponsePlanAction) *ResponsePlanSsmAutomation { return v.SsmAutomation }).(ResponsePlanSsmAutomationPtrOutput)
}

type ResponsePlanActionArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanAction)(nil)).Elem()
}

func (o ResponsePlanActionArrayOutput) ToResponsePlanActionArrayOutput() ResponsePlanActionArrayOutput {
	return o
}

func (o ResponsePlanActionArrayOutput) ToResponsePlanActionArrayOutputWithContext(ctx context.Context) ResponsePlanActionArrayOutput {
	return o
}

func (o ResponsePlanActionArrayOutput) Index(i pulumi.IntInput) ResponsePlanActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanAction {
		return vs[0].([]ResponsePlanAction)[vs[1].(int)]
	}).(ResponsePlanActionOutput)
}

// The chat channel configuration.
type ResponsePlanChatChannel struct {
	ChatbotSns []string `pulumi:"chatbotSns"`
}

// ResponsePlanChatChannelInput is an input type that accepts ResponsePlanChatChannelArgs and ResponsePlanChatChannelOutput values.
// You can construct a concrete instance of `ResponsePlanChatChannelInput` via:
//
//          ResponsePlanChatChannelArgs{...}
type ResponsePlanChatChannelInput interface {
	pulumi.Input

	ToResponsePlanChatChannelOutput() ResponsePlanChatChannelOutput
	ToResponsePlanChatChannelOutputWithContext(context.Context) ResponsePlanChatChannelOutput
}

// The chat channel configuration.
type ResponsePlanChatChannelArgs struct {
	ChatbotSns pulumi.StringArrayInput `pulumi:"chatbotSns"`
}

func (ResponsePlanChatChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanChatChannel)(nil)).Elem()
}

func (i ResponsePlanChatChannelArgs) ToResponsePlanChatChannelOutput() ResponsePlanChatChannelOutput {
	return i.ToResponsePlanChatChannelOutputWithContext(context.Background())
}

func (i ResponsePlanChatChannelArgs) ToResponsePlanChatChannelOutputWithContext(ctx context.Context) ResponsePlanChatChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanChatChannelOutput)
}

func (i ResponsePlanChatChannelArgs) ToResponsePlanChatChannelPtrOutput() ResponsePlanChatChannelPtrOutput {
	return i.ToResponsePlanChatChannelPtrOutputWithContext(context.Background())
}

func (i ResponsePlanChatChannelArgs) ToResponsePlanChatChannelPtrOutputWithContext(ctx context.Context) ResponsePlanChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanChatChannelOutput).ToResponsePlanChatChannelPtrOutputWithContext(ctx)
}

// ResponsePlanChatChannelPtrInput is an input type that accepts ResponsePlanChatChannelArgs, ResponsePlanChatChannelPtr and ResponsePlanChatChannelPtrOutput values.
// You can construct a concrete instance of `ResponsePlanChatChannelPtrInput` via:
//
//          ResponsePlanChatChannelArgs{...}
//
//  or:
//
//          nil
type ResponsePlanChatChannelPtrInput interface {
	pulumi.Input

	ToResponsePlanChatChannelPtrOutput() ResponsePlanChatChannelPtrOutput
	ToResponsePlanChatChannelPtrOutputWithContext(context.Context) ResponsePlanChatChannelPtrOutput
}

type responsePlanChatChannelPtrType ResponsePlanChatChannelArgs

func ResponsePlanChatChannelPtr(v *ResponsePlanChatChannelArgs) ResponsePlanChatChannelPtrInput {
	return (*responsePlanChatChannelPtrType)(v)
}

func (*responsePlanChatChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanChatChannel)(nil)).Elem()
}

func (i *responsePlanChatChannelPtrType) ToResponsePlanChatChannelPtrOutput() ResponsePlanChatChannelPtrOutput {
	return i.ToResponsePlanChatChannelPtrOutputWithContext(context.Background())
}

func (i *responsePlanChatChannelPtrType) ToResponsePlanChatChannelPtrOutputWithContext(ctx context.Context) ResponsePlanChatChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanChatChannelPtrOutput)
}

// The chat channel configuration.
type ResponsePlanChatChannelOutput struct{ *pulumi.OutputState }

func (ResponsePlanChatChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanChatChannel)(nil)).Elem()
}

func (o ResponsePlanChatChannelOutput) ToResponsePlanChatChannelOutput() ResponsePlanChatChannelOutput {
	return o
}

func (o ResponsePlanChatChannelOutput) ToResponsePlanChatChannelOutputWithContext(ctx context.Context) ResponsePlanChatChannelOutput {
	return o
}

func (o ResponsePlanChatChannelOutput) ToResponsePlanChatChannelPtrOutput() ResponsePlanChatChannelPtrOutput {
	return o.ToResponsePlanChatChannelPtrOutputWithContext(context.Background())
}

func (o ResponsePlanChatChannelOutput) ToResponsePlanChatChannelPtrOutputWithContext(ctx context.Context) ResponsePlanChatChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanChatChannel) *ResponsePlanChatChannel {
		return &v
	}).(ResponsePlanChatChannelPtrOutput)
}

func (o ResponsePlanChatChannelOutput) ChatbotSns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponsePlanChatChannel) []string { return v.ChatbotSns }).(pulumi.StringArrayOutput)
}

type ResponsePlanChatChannelPtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanChatChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanChatChannel)(nil)).Elem()
}

func (o ResponsePlanChatChannelPtrOutput) ToResponsePlanChatChannelPtrOutput() ResponsePlanChatChannelPtrOutput {
	return o
}

func (o ResponsePlanChatChannelPtrOutput) ToResponsePlanChatChannelPtrOutputWithContext(ctx context.Context) ResponsePlanChatChannelPtrOutput {
	return o
}

func (o ResponsePlanChatChannelPtrOutput) Elem() ResponsePlanChatChannelOutput {
	return o.ApplyT(func(v *ResponsePlanChatChannel) ResponsePlanChatChannel {
		if v != nil {
			return *v
		}
		var ret ResponsePlanChatChannel
		return ret
	}).(ResponsePlanChatChannelOutput)
}

func (o ResponsePlanChatChannelPtrOutput) ChatbotSns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponsePlanChatChannel) []string {
		if v == nil {
			return nil
		}
		return v.ChatbotSns
	}).(pulumi.StringArrayOutput)
}

// The incident template configuration.
type ResponsePlanIncidentTemplate struct {
	// The deduplication string.
	DedupeString *string `pulumi:"dedupeString"`
	// The impact value.
	Impact int `pulumi:"impact"`
	// The list of notification targets.
	NotificationTargets []ResponsePlanNotificationTargetItem `pulumi:"notificationTargets"`
	// The summary string.
	Summary *string `pulumi:"summary"`
	// The title string.
	Title string `pulumi:"title"`
}

// ResponsePlanIncidentTemplateInput is an input type that accepts ResponsePlanIncidentTemplateArgs and ResponsePlanIncidentTemplateOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplateInput` via:
//
//          ResponsePlanIncidentTemplateArgs{...}
type ResponsePlanIncidentTemplateInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput
	ToResponsePlanIncidentTemplateOutputWithContext(context.Context) ResponsePlanIncidentTemplateOutput
}

// The incident template configuration.
type ResponsePlanIncidentTemplateArgs struct {
	// The deduplication string.
	DedupeString pulumi.StringPtrInput `pulumi:"dedupeString"`
	// The impact value.
	Impact pulumi.IntInput `pulumi:"impact"`
	// The list of notification targets.
	NotificationTargets ResponsePlanNotificationTargetItemArrayInput `pulumi:"notificationTargets"`
	// The summary string.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The title string.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ResponsePlanIncidentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput {
	return i.ToResponsePlanIncidentTemplateOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateOutput)
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return i.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (i ResponsePlanIncidentTemplateArgs) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplateOutput).ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx)
}

// ResponsePlanIncidentTemplatePtrInput is an input type that accepts ResponsePlanIncidentTemplateArgs, ResponsePlanIncidentTemplatePtr and ResponsePlanIncidentTemplatePtrOutput values.
// You can construct a concrete instance of `ResponsePlanIncidentTemplatePtrInput` via:
//
//          ResponsePlanIncidentTemplateArgs{...}
//
//  or:
//
//          nil
type ResponsePlanIncidentTemplatePtrInput interface {
	pulumi.Input

	ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput
	ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Context) ResponsePlanIncidentTemplatePtrOutput
}

type responsePlanIncidentTemplatePtrType ResponsePlanIncidentTemplateArgs

func ResponsePlanIncidentTemplatePtr(v *ResponsePlanIncidentTemplateArgs) ResponsePlanIncidentTemplatePtrInput {
	return (*responsePlanIncidentTemplatePtrType)(v)
}

func (*responsePlanIncidentTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (i *responsePlanIncidentTemplatePtrType) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return i.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (i *responsePlanIncidentTemplatePtrType) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanIncidentTemplatePtrOutput)
}

// The incident template configuration.
type ResponsePlanIncidentTemplateOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplateOutput() ResponsePlanIncidentTemplateOutput {
	return o
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplateOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplateOutput {
	return o
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return o.ToResponsePlanIncidentTemplatePtrOutputWithContext(context.Background())
}

func (o ResponsePlanIncidentTemplateOutput) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanIncidentTemplate) *ResponsePlanIncidentTemplate {
		return &v
	}).(ResponsePlanIncidentTemplatePtrOutput)
}

// The deduplication string.
func (o ResponsePlanIncidentTemplateOutput) DedupeString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) *string { return v.DedupeString }).(pulumi.StringPtrOutput)
}

// The impact value.
func (o ResponsePlanIncidentTemplateOutput) Impact() pulumi.IntOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) int { return v.Impact }).(pulumi.IntOutput)
}

// The list of notification targets.
func (o ResponsePlanIncidentTemplateOutput) NotificationTargets() ResponsePlanNotificationTargetItemArrayOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) []ResponsePlanNotificationTargetItem {
		return v.NotificationTargets
	}).(ResponsePlanNotificationTargetItemArrayOutput)
}

// The summary string.
func (o ResponsePlanIncidentTemplateOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The title string.
func (o ResponsePlanIncidentTemplateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanIncidentTemplate) string { return v.Title }).(pulumi.StringOutput)
}

type ResponsePlanIncidentTemplatePtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanIncidentTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanIncidentTemplate)(nil)).Elem()
}

func (o ResponsePlanIncidentTemplatePtrOutput) ToResponsePlanIncidentTemplatePtrOutput() ResponsePlanIncidentTemplatePtrOutput {
	return o
}

func (o ResponsePlanIncidentTemplatePtrOutput) ToResponsePlanIncidentTemplatePtrOutputWithContext(ctx context.Context) ResponsePlanIncidentTemplatePtrOutput {
	return o
}

func (o ResponsePlanIncidentTemplatePtrOutput) Elem() ResponsePlanIncidentTemplateOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) ResponsePlanIncidentTemplate {
		if v != nil {
			return *v
		}
		var ret ResponsePlanIncidentTemplate
		return ret
	}).(ResponsePlanIncidentTemplateOutput)
}

// The deduplication string.
func (o ResponsePlanIncidentTemplatePtrOutput) DedupeString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DedupeString
	}).(pulumi.StringPtrOutput)
}

// The impact value.
func (o ResponsePlanIncidentTemplatePtrOutput) Impact() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *int {
		if v == nil {
			return nil
		}
		return &v.Impact
	}).(pulumi.IntPtrOutput)
}

// The list of notification targets.
func (o ResponsePlanIncidentTemplatePtrOutput) NotificationTargets() ResponsePlanNotificationTargetItemArrayOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) []ResponsePlanNotificationTargetItem {
		if v == nil {
			return nil
		}
		return v.NotificationTargets
	}).(ResponsePlanNotificationTargetItemArrayOutput)
}

// The summary string.
func (o ResponsePlanIncidentTemplatePtrOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Summary
	}).(pulumi.StringPtrOutput)
}

// The title string.
func (o ResponsePlanIncidentTemplatePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanIncidentTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// A notification target.
type ResponsePlanNotificationTargetItem struct {
	SnsTopicArn *string `pulumi:"snsTopicArn"`
}

// ResponsePlanNotificationTargetItemInput is an input type that accepts ResponsePlanNotificationTargetItemArgs and ResponsePlanNotificationTargetItemOutput values.
// You can construct a concrete instance of `ResponsePlanNotificationTargetItemInput` via:
//
//          ResponsePlanNotificationTargetItemArgs{...}
type ResponsePlanNotificationTargetItemInput interface {
	pulumi.Input

	ToResponsePlanNotificationTargetItemOutput() ResponsePlanNotificationTargetItemOutput
	ToResponsePlanNotificationTargetItemOutputWithContext(context.Context) ResponsePlanNotificationTargetItemOutput
}

// A notification target.
type ResponsePlanNotificationTargetItemArgs struct {
	SnsTopicArn pulumi.StringPtrInput `pulumi:"snsTopicArn"`
}

func (ResponsePlanNotificationTargetItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanNotificationTargetItem)(nil)).Elem()
}

func (i ResponsePlanNotificationTargetItemArgs) ToResponsePlanNotificationTargetItemOutput() ResponsePlanNotificationTargetItemOutput {
	return i.ToResponsePlanNotificationTargetItemOutputWithContext(context.Background())
}

func (i ResponsePlanNotificationTargetItemArgs) ToResponsePlanNotificationTargetItemOutputWithContext(ctx context.Context) ResponsePlanNotificationTargetItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanNotificationTargetItemOutput)
}

// ResponsePlanNotificationTargetItemArrayInput is an input type that accepts ResponsePlanNotificationTargetItemArray and ResponsePlanNotificationTargetItemArrayOutput values.
// You can construct a concrete instance of `ResponsePlanNotificationTargetItemArrayInput` via:
//
//          ResponsePlanNotificationTargetItemArray{ ResponsePlanNotificationTargetItemArgs{...} }
type ResponsePlanNotificationTargetItemArrayInput interface {
	pulumi.Input

	ToResponsePlanNotificationTargetItemArrayOutput() ResponsePlanNotificationTargetItemArrayOutput
	ToResponsePlanNotificationTargetItemArrayOutputWithContext(context.Context) ResponsePlanNotificationTargetItemArrayOutput
}

type ResponsePlanNotificationTargetItemArray []ResponsePlanNotificationTargetItemInput

func (ResponsePlanNotificationTargetItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanNotificationTargetItem)(nil)).Elem()
}

func (i ResponsePlanNotificationTargetItemArray) ToResponsePlanNotificationTargetItemArrayOutput() ResponsePlanNotificationTargetItemArrayOutput {
	return i.ToResponsePlanNotificationTargetItemArrayOutputWithContext(context.Background())
}

func (i ResponsePlanNotificationTargetItemArray) ToResponsePlanNotificationTargetItemArrayOutputWithContext(ctx context.Context) ResponsePlanNotificationTargetItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanNotificationTargetItemArrayOutput)
}

// A notification target.
type ResponsePlanNotificationTargetItemOutput struct{ *pulumi.OutputState }

func (ResponsePlanNotificationTargetItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanNotificationTargetItem)(nil)).Elem()
}

func (o ResponsePlanNotificationTargetItemOutput) ToResponsePlanNotificationTargetItemOutput() ResponsePlanNotificationTargetItemOutput {
	return o
}

func (o ResponsePlanNotificationTargetItemOutput) ToResponsePlanNotificationTargetItemOutputWithContext(ctx context.Context) ResponsePlanNotificationTargetItemOutput {
	return o
}

func (o ResponsePlanNotificationTargetItemOutput) SnsTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanNotificationTargetItem) *string { return v.SnsTopicArn }).(pulumi.StringPtrOutput)
}

type ResponsePlanNotificationTargetItemArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanNotificationTargetItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanNotificationTargetItem)(nil)).Elem()
}

func (o ResponsePlanNotificationTargetItemArrayOutput) ToResponsePlanNotificationTargetItemArrayOutput() ResponsePlanNotificationTargetItemArrayOutput {
	return o
}

func (o ResponsePlanNotificationTargetItemArrayOutput) ToResponsePlanNotificationTargetItemArrayOutputWithContext(ctx context.Context) ResponsePlanNotificationTargetItemArrayOutput {
	return o
}

func (o ResponsePlanNotificationTargetItemArrayOutput) Index(i pulumi.IntInput) ResponsePlanNotificationTargetItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanNotificationTargetItem {
		return vs[0].([]ResponsePlanNotificationTargetItem)[vs[1].(int)]
	}).(ResponsePlanNotificationTargetItemOutput)
}

// The configuration to use when starting the SSM automation document.
type ResponsePlanSsmAutomation struct {
	// The document name to use when starting the SSM automation document.
	DocumentName string `pulumi:"documentName"`
	// The version of the document to use when starting the SSM automation document.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The parameters to set when starting the SSM automation document.
	Parameters []ResponsePlanSsmParameter `pulumi:"parameters"`
	// The role ARN to use when starting the SSM automation document.
	RoleArn string `pulumi:"roleArn"`
	// The account type to use when starting the SSM automation document.
	TargetAccount *ResponsePlanSsmAutomationTargetAccount `pulumi:"targetAccount"`
}

// ResponsePlanSsmAutomationInput is an input type that accepts ResponsePlanSsmAutomationArgs and ResponsePlanSsmAutomationOutput values.
// You can construct a concrete instance of `ResponsePlanSsmAutomationInput` via:
//
//          ResponsePlanSsmAutomationArgs{...}
type ResponsePlanSsmAutomationInput interface {
	pulumi.Input

	ToResponsePlanSsmAutomationOutput() ResponsePlanSsmAutomationOutput
	ToResponsePlanSsmAutomationOutputWithContext(context.Context) ResponsePlanSsmAutomationOutput
}

// The configuration to use when starting the SSM automation document.
type ResponsePlanSsmAutomationArgs struct {
	// The document name to use when starting the SSM automation document.
	DocumentName pulumi.StringInput `pulumi:"documentName"`
	// The version of the document to use when starting the SSM automation document.
	DocumentVersion pulumi.StringPtrInput `pulumi:"documentVersion"`
	// The parameters to set when starting the SSM automation document.
	Parameters ResponsePlanSsmParameterArrayInput `pulumi:"parameters"`
	// The role ARN to use when starting the SSM automation document.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The account type to use when starting the SSM automation document.
	TargetAccount ResponsePlanSsmAutomationTargetAccountPtrInput `pulumi:"targetAccount"`
}

func (ResponsePlanSsmAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanSsmAutomation)(nil)).Elem()
}

func (i ResponsePlanSsmAutomationArgs) ToResponsePlanSsmAutomationOutput() ResponsePlanSsmAutomationOutput {
	return i.ToResponsePlanSsmAutomationOutputWithContext(context.Background())
}

func (i ResponsePlanSsmAutomationArgs) ToResponsePlanSsmAutomationOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanSsmAutomationOutput)
}

func (i ResponsePlanSsmAutomationArgs) ToResponsePlanSsmAutomationPtrOutput() ResponsePlanSsmAutomationPtrOutput {
	return i.ToResponsePlanSsmAutomationPtrOutputWithContext(context.Background())
}

func (i ResponsePlanSsmAutomationArgs) ToResponsePlanSsmAutomationPtrOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanSsmAutomationOutput).ToResponsePlanSsmAutomationPtrOutputWithContext(ctx)
}

// ResponsePlanSsmAutomationPtrInput is an input type that accepts ResponsePlanSsmAutomationArgs, ResponsePlanSsmAutomationPtr and ResponsePlanSsmAutomationPtrOutput values.
// You can construct a concrete instance of `ResponsePlanSsmAutomationPtrInput` via:
//
//          ResponsePlanSsmAutomationArgs{...}
//
//  or:
//
//          nil
type ResponsePlanSsmAutomationPtrInput interface {
	pulumi.Input

	ToResponsePlanSsmAutomationPtrOutput() ResponsePlanSsmAutomationPtrOutput
	ToResponsePlanSsmAutomationPtrOutputWithContext(context.Context) ResponsePlanSsmAutomationPtrOutput
}

type responsePlanSsmAutomationPtrType ResponsePlanSsmAutomationArgs

func ResponsePlanSsmAutomationPtr(v *ResponsePlanSsmAutomationArgs) ResponsePlanSsmAutomationPtrInput {
	return (*responsePlanSsmAutomationPtrType)(v)
}

func (*responsePlanSsmAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanSsmAutomation)(nil)).Elem()
}

func (i *responsePlanSsmAutomationPtrType) ToResponsePlanSsmAutomationPtrOutput() ResponsePlanSsmAutomationPtrOutput {
	return i.ToResponsePlanSsmAutomationPtrOutputWithContext(context.Background())
}

func (i *responsePlanSsmAutomationPtrType) ToResponsePlanSsmAutomationPtrOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanSsmAutomationPtrOutput)
}

// The configuration to use when starting the SSM automation document.
type ResponsePlanSsmAutomationOutput struct{ *pulumi.OutputState }

func (ResponsePlanSsmAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanSsmAutomation)(nil)).Elem()
}

func (o ResponsePlanSsmAutomationOutput) ToResponsePlanSsmAutomationOutput() ResponsePlanSsmAutomationOutput {
	return o
}

func (o ResponsePlanSsmAutomationOutput) ToResponsePlanSsmAutomationOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationOutput {
	return o
}

func (o ResponsePlanSsmAutomationOutput) ToResponsePlanSsmAutomationPtrOutput() ResponsePlanSsmAutomationPtrOutput {
	return o.ToResponsePlanSsmAutomationPtrOutputWithContext(context.Background())
}

func (o ResponsePlanSsmAutomationOutput) ToResponsePlanSsmAutomationPtrOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponsePlanSsmAutomation) *ResponsePlanSsmAutomation {
		return &v
	}).(ResponsePlanSsmAutomationPtrOutput)
}

// The document name to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationOutput) DocumentName() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanSsmAutomation) string { return v.DocumentName }).(pulumi.StringOutput)
}

// The version of the document to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponsePlanSsmAutomation) *string { return v.DocumentVersion }).(pulumi.StringPtrOutput)
}

// The parameters to set when starting the SSM automation document.
func (o ResponsePlanSsmAutomationOutput) Parameters() ResponsePlanSsmParameterArrayOutput {
	return o.ApplyT(func(v ResponsePlanSsmAutomation) []ResponsePlanSsmParameter { return v.Parameters }).(ResponsePlanSsmParameterArrayOutput)
}

// The role ARN to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanSsmAutomation) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The account type to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationOutput) TargetAccount() ResponsePlanSsmAutomationTargetAccountPtrOutput {
	return o.ApplyT(func(v ResponsePlanSsmAutomation) *ResponsePlanSsmAutomationTargetAccount { return v.TargetAccount }).(ResponsePlanSsmAutomationTargetAccountPtrOutput)
}

type ResponsePlanSsmAutomationPtrOutput struct{ *pulumi.OutputState }

func (ResponsePlanSsmAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponsePlanSsmAutomation)(nil)).Elem()
}

func (o ResponsePlanSsmAutomationPtrOutput) ToResponsePlanSsmAutomationPtrOutput() ResponsePlanSsmAutomationPtrOutput {
	return o
}

func (o ResponsePlanSsmAutomationPtrOutput) ToResponsePlanSsmAutomationPtrOutputWithContext(ctx context.Context) ResponsePlanSsmAutomationPtrOutput {
	return o
}

func (o ResponsePlanSsmAutomationPtrOutput) Elem() ResponsePlanSsmAutomationOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) ResponsePlanSsmAutomation {
		if v != nil {
			return *v
		}
		var ret ResponsePlanSsmAutomation
		return ret
	}).(ResponsePlanSsmAutomationOutput)
}

// The document name to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationPtrOutput) DocumentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) *string {
		if v == nil {
			return nil
		}
		return &v.DocumentName
	}).(pulumi.StringPtrOutput)
}

// The version of the document to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationPtrOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) *string {
		if v == nil {
			return nil
		}
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

// The parameters to set when starting the SSM automation document.
func (o ResponsePlanSsmAutomationPtrOutput) Parameters() ResponsePlanSsmParameterArrayOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) []ResponsePlanSsmParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(ResponsePlanSsmParameterArrayOutput)
}

// The role ARN to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The account type to use when starting the SSM automation document.
func (o ResponsePlanSsmAutomationPtrOutput) TargetAccount() ResponsePlanSsmAutomationTargetAccountPtrOutput {
	return o.ApplyT(func(v *ResponsePlanSsmAutomation) *ResponsePlanSsmAutomationTargetAccount {
		if v == nil {
			return nil
		}
		return v.TargetAccount
	}).(ResponsePlanSsmAutomationTargetAccountPtrOutput)
}

// A parameter to set when starting the SSM automation document.
type ResponsePlanSsmParameter struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// ResponsePlanSsmParameterInput is an input type that accepts ResponsePlanSsmParameterArgs and ResponsePlanSsmParameterOutput values.
// You can construct a concrete instance of `ResponsePlanSsmParameterInput` via:
//
//          ResponsePlanSsmParameterArgs{...}
type ResponsePlanSsmParameterInput interface {
	pulumi.Input

	ToResponsePlanSsmParameterOutput() ResponsePlanSsmParameterOutput
	ToResponsePlanSsmParameterOutputWithContext(context.Context) ResponsePlanSsmParameterOutput
}

// A parameter to set when starting the SSM automation document.
type ResponsePlanSsmParameterArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ResponsePlanSsmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanSsmParameter)(nil)).Elem()
}

func (i ResponsePlanSsmParameterArgs) ToResponsePlanSsmParameterOutput() ResponsePlanSsmParameterOutput {
	return i.ToResponsePlanSsmParameterOutputWithContext(context.Background())
}

func (i ResponsePlanSsmParameterArgs) ToResponsePlanSsmParameterOutputWithContext(ctx context.Context) ResponsePlanSsmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanSsmParameterOutput)
}

// ResponsePlanSsmParameterArrayInput is an input type that accepts ResponsePlanSsmParameterArray and ResponsePlanSsmParameterArrayOutput values.
// You can construct a concrete instance of `ResponsePlanSsmParameterArrayInput` via:
//
//          ResponsePlanSsmParameterArray{ ResponsePlanSsmParameterArgs{...} }
type ResponsePlanSsmParameterArrayInput interface {
	pulumi.Input

	ToResponsePlanSsmParameterArrayOutput() ResponsePlanSsmParameterArrayOutput
	ToResponsePlanSsmParameterArrayOutputWithContext(context.Context) ResponsePlanSsmParameterArrayOutput
}

type ResponsePlanSsmParameterArray []ResponsePlanSsmParameterInput

func (ResponsePlanSsmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanSsmParameter)(nil)).Elem()
}

func (i ResponsePlanSsmParameterArray) ToResponsePlanSsmParameterArrayOutput() ResponsePlanSsmParameterArrayOutput {
	return i.ToResponsePlanSsmParameterArrayOutputWithContext(context.Background())
}

func (i ResponsePlanSsmParameterArray) ToResponsePlanSsmParameterArrayOutputWithContext(ctx context.Context) ResponsePlanSsmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanSsmParameterArrayOutput)
}

// A parameter to set when starting the SSM automation document.
type ResponsePlanSsmParameterOutput struct{ *pulumi.OutputState }

func (ResponsePlanSsmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanSsmParameter)(nil)).Elem()
}

func (o ResponsePlanSsmParameterOutput) ToResponsePlanSsmParameterOutput() ResponsePlanSsmParameterOutput {
	return o
}

func (o ResponsePlanSsmParameterOutput) ToResponsePlanSsmParameterOutputWithContext(ctx context.Context) ResponsePlanSsmParameterOutput {
	return o
}

func (o ResponsePlanSsmParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanSsmParameter) string { return v.Key }).(pulumi.StringOutput)
}

func (o ResponsePlanSsmParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponsePlanSsmParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ResponsePlanSsmParameterArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanSsmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanSsmParameter)(nil)).Elem()
}

func (o ResponsePlanSsmParameterArrayOutput) ToResponsePlanSsmParameterArrayOutput() ResponsePlanSsmParameterArrayOutput {
	return o
}

func (o ResponsePlanSsmParameterArrayOutput) ToResponsePlanSsmParameterArrayOutputWithContext(ctx context.Context) ResponsePlanSsmParameterArrayOutput {
	return o
}

func (o ResponsePlanSsmParameterArrayOutput) Index(i pulumi.IntInput) ResponsePlanSsmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanSsmParameter {
		return vs[0].([]ResponsePlanSsmParameter)[vs[1].(int)]
	}).(ResponsePlanSsmParameterOutput)
}

// A key-value pair to tag a resource.
type ResponsePlanTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ResponsePlanTagInput is an input type that accepts ResponsePlanTagArgs and ResponsePlanTagOutput values.
// You can construct a concrete instance of `ResponsePlanTagInput` via:
//
//          ResponsePlanTagArgs{...}
type ResponsePlanTagInput interface {
	pulumi.Input

	ToResponsePlanTagOutput() ResponsePlanTagOutput
	ToResponsePlanTagOutputWithContext(context.Context) ResponsePlanTagOutput
}

// A key-value pair to tag a resource.
type ResponsePlanTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResponsePlanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanTag)(nil)).Elem()
}

func (i ResponsePlanTagArgs) ToResponsePlanTagOutput() ResponsePlanTagOutput {
	return i.ToResponsePlanTagOutputWithContext(context.Background())
}

func (i ResponsePlanTagArgs) ToResponsePlanTagOutputWithContext(ctx context.Context) ResponsePlanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanTagOutput)
}

// ResponsePlanTagArrayInput is an input type that accepts ResponsePlanTagArray and ResponsePlanTagArrayOutput values.
// You can construct a concrete instance of `ResponsePlanTagArrayInput` via:
//
//          ResponsePlanTagArray{ ResponsePlanTagArgs{...} }
type ResponsePlanTagArrayInput interface {
	pulumi.Input

	ToResponsePlanTagArrayOutput() ResponsePlanTagArrayOutput
	ToResponsePlanTagArrayOutputWithContext(context.Context) ResponsePlanTagArrayOutput
}

type ResponsePlanTagArray []ResponsePlanTagInput

func (ResponsePlanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanTag)(nil)).Elem()
}

func (i ResponsePlanTagArray) ToResponsePlanTagArrayOutput() ResponsePlanTagArrayOutput {
	return i.ToResponsePlanTagArrayOutputWithContext(context.Background())
}

func (i ResponsePlanTagArray) ToResponsePlanTagArrayOutputWithContext(ctx context.Context) ResponsePlanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponsePlanTagArrayOutput)
}

// A key-value pair to tag a resource.
type ResponsePlanTagOutput struct{ *pulumi.OutputState }

func (ResponsePlanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponsePlanTag)(nil)).Elem()
}

func (o ResponsePlanTagOutput) ToResponsePlanTagOutput() ResponsePlanTagOutput {
	return o
}

func (o ResponsePlanTagOutput) ToResponsePlanTagOutputWithContext(ctx context.Context) ResponsePlanTagOutput {
	return o
}

func (o ResponsePlanTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ResponsePlanTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResponsePlanTag) string { return v.Value }).(pulumi.StringOutput)
}

type ResponsePlanTagArrayOutput struct{ *pulumi.OutputState }

func (ResponsePlanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponsePlanTag)(nil)).Elem()
}

func (o ResponsePlanTagArrayOutput) ToResponsePlanTagArrayOutput() ResponsePlanTagArrayOutput {
	return o
}

func (o ResponsePlanTagArrayOutput) ToResponsePlanTagArrayOutputWithContext(ctx context.Context) ResponsePlanTagArrayOutput {
	return o
}

func (o ResponsePlanTagArrayOutput) Index(i pulumi.IntInput) ResponsePlanTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponsePlanTag {
		return vs[0].([]ResponsePlanTag)[vs[1].(int)]
	}).(ResponsePlanTagOutput)
}

func init() {
	pulumi.RegisterOutputType(ReplicationSetRegionConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicationSetRegionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ReplicationSetReplicationRegionOutput{})
	pulumi.RegisterOutputType(ReplicationSetReplicationRegionArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionOutput{})
	pulumi.RegisterOutputType(ResponsePlanActionArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanChatChannelOutput{})
	pulumi.RegisterOutputType(ResponsePlanChatChannelPtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplateOutput{})
	pulumi.RegisterOutputType(ResponsePlanIncidentTemplatePtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanNotificationTargetItemOutput{})
	pulumi.RegisterOutputType(ResponsePlanNotificationTargetItemArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanSsmAutomationOutput{})
	pulumi.RegisterOutputType(ResponsePlanSsmAutomationPtrOutput{})
	pulumi.RegisterOutputType(ResponsePlanSsmParameterOutput{})
	pulumi.RegisterOutputType(ResponsePlanSsmParameterArrayOutput{})
	pulumi.RegisterOutputType(ResponsePlanTagOutput{})
	pulumi.RegisterOutputType(ResponsePlanTagArrayOutput{})
}
