// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcaconnectorad

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::PCAConnectorAD::TemplateGroupAccessControlEntry Resource Type
type TemplateGroupAccessControlEntry struct {
	pulumi.CustomResourceState

	AccessRights            TemplateGroupAccessControlEntryAccessRightsOutput `pulumi:"accessRights"`
	GroupDisplayName        pulumi.StringOutput                               `pulumi:"groupDisplayName"`
	GroupSecurityIdentifier pulumi.StringPtrOutput                            `pulumi:"groupSecurityIdentifier"`
	TemplateArn             pulumi.StringPtrOutput                            `pulumi:"templateArn"`
}

// NewTemplateGroupAccessControlEntry registers a new resource with the given unique name, arguments, and options.
func NewTemplateGroupAccessControlEntry(ctx *pulumi.Context,
	name string, args *TemplateGroupAccessControlEntryArgs, opts ...pulumi.ResourceOption) (*TemplateGroupAccessControlEntry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessRights == nil {
		return nil, errors.New("invalid value for required argument 'AccessRights'")
	}
	if args.GroupDisplayName == nil {
		return nil, errors.New("invalid value for required argument 'GroupDisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"groupSecurityIdentifier",
		"templateArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TemplateGroupAccessControlEntry
	err := ctx.RegisterResource("aws-native:pcaconnectorad:TemplateGroupAccessControlEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplateGroupAccessControlEntry gets an existing TemplateGroupAccessControlEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplateGroupAccessControlEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateGroupAccessControlEntryState, opts ...pulumi.ResourceOption) (*TemplateGroupAccessControlEntry, error) {
	var resource TemplateGroupAccessControlEntry
	err := ctx.ReadResource("aws-native:pcaconnectorad:TemplateGroupAccessControlEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TemplateGroupAccessControlEntry resources.
type templateGroupAccessControlEntryState struct {
}

type TemplateGroupAccessControlEntryState struct {
}

func (TemplateGroupAccessControlEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateGroupAccessControlEntryState)(nil)).Elem()
}

type templateGroupAccessControlEntryArgs struct {
	AccessRights            TemplateGroupAccessControlEntryAccessRights `pulumi:"accessRights"`
	GroupDisplayName        string                                      `pulumi:"groupDisplayName"`
	GroupSecurityIdentifier *string                                     `pulumi:"groupSecurityIdentifier"`
	TemplateArn             *string                                     `pulumi:"templateArn"`
}

// The set of arguments for constructing a TemplateGroupAccessControlEntry resource.
type TemplateGroupAccessControlEntryArgs struct {
	AccessRights            TemplateGroupAccessControlEntryAccessRightsInput
	GroupDisplayName        pulumi.StringInput
	GroupSecurityIdentifier pulumi.StringPtrInput
	TemplateArn             pulumi.StringPtrInput
}

func (TemplateGroupAccessControlEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateGroupAccessControlEntryArgs)(nil)).Elem()
}

type TemplateGroupAccessControlEntryInput interface {
	pulumi.Input

	ToTemplateGroupAccessControlEntryOutput() TemplateGroupAccessControlEntryOutput
	ToTemplateGroupAccessControlEntryOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryOutput
}

func (*TemplateGroupAccessControlEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGroupAccessControlEntry)(nil)).Elem()
}

func (i *TemplateGroupAccessControlEntry) ToTemplateGroupAccessControlEntryOutput() TemplateGroupAccessControlEntryOutput {
	return i.ToTemplateGroupAccessControlEntryOutputWithContext(context.Background())
}

func (i *TemplateGroupAccessControlEntry) ToTemplateGroupAccessControlEntryOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGroupAccessControlEntryOutput)
}

func (i *TemplateGroupAccessControlEntry) ToOutput(ctx context.Context) pulumix.Output[*TemplateGroupAccessControlEntry] {
	return pulumix.Output[*TemplateGroupAccessControlEntry]{
		OutputState: i.ToTemplateGroupAccessControlEntryOutputWithContext(ctx).OutputState,
	}
}

type TemplateGroupAccessControlEntryOutput struct{ *pulumi.OutputState }

func (TemplateGroupAccessControlEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGroupAccessControlEntry)(nil)).Elem()
}

func (o TemplateGroupAccessControlEntryOutput) ToTemplateGroupAccessControlEntryOutput() TemplateGroupAccessControlEntryOutput {
	return o
}

func (o TemplateGroupAccessControlEntryOutput) ToTemplateGroupAccessControlEntryOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryOutput {
	return o
}

func (o TemplateGroupAccessControlEntryOutput) ToOutput(ctx context.Context) pulumix.Output[*TemplateGroupAccessControlEntry] {
	return pulumix.Output[*TemplateGroupAccessControlEntry]{
		OutputState: o.OutputState,
	}
}

func (o TemplateGroupAccessControlEntryOutput) AccessRights() TemplateGroupAccessControlEntryAccessRightsOutput {
	return o.ApplyT(func(v *TemplateGroupAccessControlEntry) TemplateGroupAccessControlEntryAccessRightsOutput {
		return v.AccessRights
	}).(TemplateGroupAccessControlEntryAccessRightsOutput)
}

func (o TemplateGroupAccessControlEntryOutput) GroupDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplateGroupAccessControlEntry) pulumi.StringOutput { return v.GroupDisplayName }).(pulumi.StringOutput)
}

func (o TemplateGroupAccessControlEntryOutput) GroupSecurityIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGroupAccessControlEntry) pulumi.StringPtrOutput { return v.GroupSecurityIdentifier }).(pulumi.StringPtrOutput)
}

func (o TemplateGroupAccessControlEntryOutput) TemplateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGroupAccessControlEntry) pulumi.StringPtrOutput { return v.TemplateArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGroupAccessControlEntryInput)(nil)).Elem(), &TemplateGroupAccessControlEntry{})
	pulumi.RegisterOutputType(TemplateGroupAccessControlEntryOutput{})
}
