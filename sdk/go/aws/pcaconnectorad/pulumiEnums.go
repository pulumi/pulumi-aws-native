// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcaconnectorad

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type TemplateApplicationPolicyType string

const (
	TemplateApplicationPolicyTypeAllApplicationPolicies                     = TemplateApplicationPolicyType("ALL_APPLICATION_POLICIES")
	TemplateApplicationPolicyTypeAnyPurpose                                 = TemplateApplicationPolicyType("ANY_PURPOSE")
	TemplateApplicationPolicyTypeAttestationIdentityKeyCertificate          = TemplateApplicationPolicyType("ATTESTATION_IDENTITY_KEY_CERTIFICATE")
	TemplateApplicationPolicyTypeCertificateRequestAgent                    = TemplateApplicationPolicyType("CERTIFICATE_REQUEST_AGENT")
	TemplateApplicationPolicyTypeClientAuthentication                       = TemplateApplicationPolicyType("CLIENT_AUTHENTICATION")
	TemplateApplicationPolicyTypeCodeSigning                                = TemplateApplicationPolicyType("CODE_SIGNING")
	TemplateApplicationPolicyTypeCtlUsage                                   = TemplateApplicationPolicyType("CTL_USAGE")
	TemplateApplicationPolicyTypeDigitalRights                              = TemplateApplicationPolicyType("DIGITAL_RIGHTS")
	TemplateApplicationPolicyTypeDirectoryServiceEmailReplication           = TemplateApplicationPolicyType("DIRECTORY_SERVICE_EMAIL_REPLICATION")
	TemplateApplicationPolicyTypeDisallowedList                             = TemplateApplicationPolicyType("DISALLOWED_LIST")
	TemplateApplicationPolicyTypeDnsServerTrust                             = TemplateApplicationPolicyType("DNS_SERVER_TRUST")
	TemplateApplicationPolicyTypeDocumentEncryption                         = TemplateApplicationPolicyType("DOCUMENT_ENCRYPTION")
	TemplateApplicationPolicyTypeDocumentSigning                            = TemplateApplicationPolicyType("DOCUMENT_SIGNING")
	TemplateApplicationPolicyTypeDynamicCodeGenerator                       = TemplateApplicationPolicyType("DYNAMIC_CODE_GENERATOR")
	TemplateApplicationPolicyTypeEarlyLaunchAntimalwareDriver               = TemplateApplicationPolicyType("EARLY_LAUNCH_ANTIMALWARE_DRIVER")
	TemplateApplicationPolicyTypeEmbeddedWindowsSystemComponentVerification = TemplateApplicationPolicyType("EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION")
	TemplateApplicationPolicyTypeEnclave                                    = TemplateApplicationPolicyType("ENCLAVE")
	TemplateApplicationPolicyTypeEncryptingFileSystem                       = TemplateApplicationPolicyType("ENCRYPTING_FILE_SYSTEM")
	TemplateApplicationPolicyTypeEndorsementKeyCertificate                  = TemplateApplicationPolicyType("ENDORSEMENT_KEY_CERTIFICATE")
	TemplateApplicationPolicyTypeFileRecovery                               = TemplateApplicationPolicyType("FILE_RECOVERY")
	TemplateApplicationPolicyTypeHalExtension                               = TemplateApplicationPolicyType("HAL_EXTENSION")
	TemplateApplicationPolicyTypeIpSecurityEndSystem                        = TemplateApplicationPolicyType("IP_SECURITY_END_SYSTEM")
	TemplateApplicationPolicyTypeIpSecurityIkeIntermediate                  = TemplateApplicationPolicyType("IP_SECURITY_IKE_INTERMEDIATE")
	TemplateApplicationPolicyTypeIpSecurityTunnelTermination                = TemplateApplicationPolicyType("IP_SECURITY_TUNNEL_TERMINATION")
	TemplateApplicationPolicyTypeIpSecurityUser                             = TemplateApplicationPolicyType("IP_SECURITY_USER")
	TemplateApplicationPolicyTypeIsolatedUserMode                           = TemplateApplicationPolicyType("ISOLATED_USER_MODE")
	TemplateApplicationPolicyTypeKdcAuthentication                          = TemplateApplicationPolicyType("KDC_AUTHENTICATION")
	TemplateApplicationPolicyTypeKernelModeCodeSigning                      = TemplateApplicationPolicyType("KERNEL_MODE_CODE_SIGNING")
	TemplateApplicationPolicyTypeKeyPackLicenses                            = TemplateApplicationPolicyType("KEY_PACK_LICENSES")
	TemplateApplicationPolicyTypeKeyRecovery                                = TemplateApplicationPolicyType("KEY_RECOVERY")
	TemplateApplicationPolicyTypeKeyRecoveryAgent                           = TemplateApplicationPolicyType("KEY_RECOVERY_AGENT")
	TemplateApplicationPolicyTypeLicenseServerVerification                  = TemplateApplicationPolicyType("LICENSE_SERVER_VERIFICATION")
	TemplateApplicationPolicyTypeLifetimeSigning                            = TemplateApplicationPolicyType("LIFETIME_SIGNING")
	TemplateApplicationPolicyTypeMicrosoftPublisher                         = TemplateApplicationPolicyType("MICROSOFT_PUBLISHER")
	TemplateApplicationPolicyTypeMicrosoftTimeStamping                      = TemplateApplicationPolicyType("MICROSOFT_TIME_STAMPING")
	TemplateApplicationPolicyTypeMicrosoftTrustListSigning                  = TemplateApplicationPolicyType("MICROSOFT_TRUST_LIST_SIGNING")
	TemplateApplicationPolicyTypeOcspSigning                                = TemplateApplicationPolicyType("OCSP_SIGNING")
	TemplateApplicationPolicyTypeOemWindowsSystemComponentVerification      = TemplateApplicationPolicyType("OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION")
	TemplateApplicationPolicyTypePlatformCertificate                        = TemplateApplicationPolicyType("PLATFORM_CERTIFICATE")
	TemplateApplicationPolicyTypePreviewBuildSigning                        = TemplateApplicationPolicyType("PREVIEW_BUILD_SIGNING")
	TemplateApplicationPolicyTypePrivateKeyArchival                         = TemplateApplicationPolicyType("PRIVATE_KEY_ARCHIVAL")
	TemplateApplicationPolicyTypeProtectedProcessLightVerification          = TemplateApplicationPolicyType("PROTECTED_PROCESS_LIGHT_VERIFICATION")
	TemplateApplicationPolicyTypeProtectedProcessVerification               = TemplateApplicationPolicyType("PROTECTED_PROCESS_VERIFICATION")
	TemplateApplicationPolicyTypeQualifiedSubordination                     = TemplateApplicationPolicyType("QUALIFIED_SUBORDINATION")
	TemplateApplicationPolicyTypeRevokedListSigner                          = TemplateApplicationPolicyType("REVOKED_LIST_SIGNER")
	TemplateApplicationPolicyTypeRootProgramAutoUpdateCaRevocation          = TemplateApplicationPolicyType("ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION")
	TemplateApplicationPolicyTypeRootProgramAutoUpdateEndRevocation         = TemplateApplicationPolicyType("ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION")
	TemplateApplicationPolicyTypeRootProgramNoOscpFailoverToCrl             = TemplateApplicationPolicyType("ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL")
	TemplateApplicationPolicyTypeRootListSigner                             = TemplateApplicationPolicyType("ROOT_LIST_SIGNER")
	TemplateApplicationPolicyTypeSecureEmail                                = TemplateApplicationPolicyType("SECURE_EMAIL")
	TemplateApplicationPolicyTypeServerAuthentication                       = TemplateApplicationPolicyType("SERVER_AUTHENTICATION")
	TemplateApplicationPolicyTypeSmartCardLogin                             = TemplateApplicationPolicyType("SMART_CARD_LOGIN")
	TemplateApplicationPolicyTypeSpcEncryptedDigestRetryCount               = TemplateApplicationPolicyType("SPC_ENCRYPTED_DIGEST_RETRY_COUNT")
	TemplateApplicationPolicyTypeSpcRelaxedPeMarkerCheck                    = TemplateApplicationPolicyType("SPC_RELAXED_PE_MARKER_CHECK")
	TemplateApplicationPolicyTypeTimeStamping                               = TemplateApplicationPolicyType("TIME_STAMPING")
	TemplateApplicationPolicyTypeWindowsHardwareDriverAttestedVerification  = TemplateApplicationPolicyType("WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsHardwareDriverExtendedVerification  = TemplateApplicationPolicyType("WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsHardwareDriverVerification          = TemplateApplicationPolicyType("WINDOWS_HARDWARE_DRIVER_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsHelloRecoveryKeyEncryption          = TemplateApplicationPolicyType("WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION")
	TemplateApplicationPolicyTypeWindowsKitsComponent                       = TemplateApplicationPolicyType("WINDOWS_KITS_COMPONENT")
	TemplateApplicationPolicyTypeWindowsRtVerification                      = TemplateApplicationPolicyType("WINDOWS_RT_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsSoftwareExtensionVerification       = TemplateApplicationPolicyType("WINDOWS_SOFTWARE_EXTENSION_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsStore                               = TemplateApplicationPolicyType("WINDOWS_STORE")
	TemplateApplicationPolicyTypeWindowsSystemComponentVerification         = TemplateApplicationPolicyType("WINDOWS_SYSTEM_COMPONENT_VERIFICATION")
	TemplateApplicationPolicyTypeWindowsTcbComponent                        = TemplateApplicationPolicyType("WINDOWS_TCB_COMPONENT")
	TemplateApplicationPolicyTypeWindowsThirdPartyApplicationComponent      = TemplateApplicationPolicyType("WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT")
	TemplateApplicationPolicyTypeWindowsUpdate                              = TemplateApplicationPolicyType("WINDOWS_UPDATE")
)

type TemplateClientCompatibilityV2 string

const (
	TemplateClientCompatibilityV2WindowsServer2003   = TemplateClientCompatibilityV2("WINDOWS_SERVER_2003")
	TemplateClientCompatibilityV2WindowsServer2008   = TemplateClientCompatibilityV2("WINDOWS_SERVER_2008")
	TemplateClientCompatibilityV2WindowsServer2008r2 = TemplateClientCompatibilityV2("WINDOWS_SERVER_2008_R2")
	TemplateClientCompatibilityV2WindowsServer2012   = TemplateClientCompatibilityV2("WINDOWS_SERVER_2012")
	TemplateClientCompatibilityV2WindowsServer2012r2 = TemplateClientCompatibilityV2("WINDOWS_SERVER_2012_R2")
	TemplateClientCompatibilityV2WindowsServer2016   = TemplateClientCompatibilityV2("WINDOWS_SERVER_2016")
)

type TemplateClientCompatibilityV3 string

const (
	TemplateClientCompatibilityV3WindowsServer2008   = TemplateClientCompatibilityV3("WINDOWS_SERVER_2008")
	TemplateClientCompatibilityV3WindowsServer2008r2 = TemplateClientCompatibilityV3("WINDOWS_SERVER_2008_R2")
	TemplateClientCompatibilityV3WindowsServer2012   = TemplateClientCompatibilityV3("WINDOWS_SERVER_2012")
	TemplateClientCompatibilityV3WindowsServer2012r2 = TemplateClientCompatibilityV3("WINDOWS_SERVER_2012_R2")
	TemplateClientCompatibilityV3WindowsServer2016   = TemplateClientCompatibilityV3("WINDOWS_SERVER_2016")
)

type TemplateClientCompatibilityV4 string

const (
	TemplateClientCompatibilityV4WindowsServer2012   = TemplateClientCompatibilityV4("WINDOWS_SERVER_2012")
	TemplateClientCompatibilityV4WindowsServer2012r2 = TemplateClientCompatibilityV4("WINDOWS_SERVER_2012_R2")
	TemplateClientCompatibilityV4WindowsServer2016   = TemplateClientCompatibilityV4("WINDOWS_SERVER_2016")
)

type TemplateGroupAccessControlEntryAccessRight string

const (
	TemplateGroupAccessControlEntryAccessRightAllow = TemplateGroupAccessControlEntryAccessRight("ALLOW")
	TemplateGroupAccessControlEntryAccessRightDeny  = TemplateGroupAccessControlEntryAccessRight("DENY")
)

func (TemplateGroupAccessControlEntryAccessRight) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRight)(nil)).Elem()
}

func (e TemplateGroupAccessControlEntryAccessRight) ToTemplateGroupAccessControlEntryAccessRightOutput() TemplateGroupAccessControlEntryAccessRightOutput {
	return pulumi.ToOutput(e).(TemplateGroupAccessControlEntryAccessRightOutput)
}

func (e TemplateGroupAccessControlEntryAccessRight) ToTemplateGroupAccessControlEntryAccessRightOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TemplateGroupAccessControlEntryAccessRightOutput)
}

func (e TemplateGroupAccessControlEntryAccessRight) ToTemplateGroupAccessControlEntryAccessRightPtrOutput() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return e.ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(context.Background())
}

func (e TemplateGroupAccessControlEntryAccessRight) ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return TemplateGroupAccessControlEntryAccessRight(e).ToTemplateGroupAccessControlEntryAccessRightOutputWithContext(ctx).ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx)
}

func (e TemplateGroupAccessControlEntryAccessRight) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateGroupAccessControlEntryAccessRight) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TemplateGroupAccessControlEntryAccessRight) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TemplateGroupAccessControlEntryAccessRight) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TemplateGroupAccessControlEntryAccessRightOutput struct{ *pulumi.OutputState }

func (TemplateGroupAccessControlEntryAccessRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRight)(nil)).Elem()
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToTemplateGroupAccessControlEntryAccessRightOutput() TemplateGroupAccessControlEntryAccessRightOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToTemplateGroupAccessControlEntryAccessRightOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToTemplateGroupAccessControlEntryAccessRightPtrOutput() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o.ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(context.Background())
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGroupAccessControlEntryAccessRight) *TemplateGroupAccessControlEntryAccessRight {
		return &v
	}).(TemplateGroupAccessControlEntryAccessRightPtrOutput)
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToOutput(ctx context.Context) pulumix.Output[TemplateGroupAccessControlEntryAccessRight] {
	return pulumix.Output[TemplateGroupAccessControlEntryAccessRight]{
		OutputState: o.OutputState,
	}
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateGroupAccessControlEntryAccessRight) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateGroupAccessControlEntryAccessRightOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TemplateGroupAccessControlEntryAccessRight) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TemplateGroupAccessControlEntryAccessRightPtrOutput struct{ *pulumi.OutputState }

func (TemplateGroupAccessControlEntryAccessRightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGroupAccessControlEntryAccessRight)(nil)).Elem()
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) ToTemplateGroupAccessControlEntryAccessRightPtrOutput() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TemplateGroupAccessControlEntryAccessRight] {
	return pulumix.Output[*TemplateGroupAccessControlEntryAccessRight]{
		OutputState: o.OutputState,
	}
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) Elem() TemplateGroupAccessControlEntryAccessRightOutput {
	return o.ApplyT(func(v *TemplateGroupAccessControlEntryAccessRight) TemplateGroupAccessControlEntryAccessRight {
		if v != nil {
			return *v
		}
		var ret TemplateGroupAccessControlEntryAccessRight
		return ret
	}).(TemplateGroupAccessControlEntryAccessRightOutput)
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TemplateGroupAccessControlEntryAccessRightPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TemplateGroupAccessControlEntryAccessRight) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TemplateGroupAccessControlEntryAccessRightInput is an input type that accepts TemplateGroupAccessControlEntryAccessRightArgs and TemplateGroupAccessControlEntryAccessRightOutput values.
// You can construct a concrete instance of `TemplateGroupAccessControlEntryAccessRightInput` via:
//
//	TemplateGroupAccessControlEntryAccessRightArgs{...}
type TemplateGroupAccessControlEntryAccessRightInput interface {
	pulumi.Input

	ToTemplateGroupAccessControlEntryAccessRightOutput() TemplateGroupAccessControlEntryAccessRightOutput
	ToTemplateGroupAccessControlEntryAccessRightOutputWithContext(context.Context) TemplateGroupAccessControlEntryAccessRightOutput
}

var templateGroupAccessControlEntryAccessRightPtrType = reflect.TypeOf((**TemplateGroupAccessControlEntryAccessRight)(nil)).Elem()

type TemplateGroupAccessControlEntryAccessRightPtrInput interface {
	pulumi.Input

	ToTemplateGroupAccessControlEntryAccessRightPtrOutput() TemplateGroupAccessControlEntryAccessRightPtrOutput
	ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(context.Context) TemplateGroupAccessControlEntryAccessRightPtrOutput
}

type templateGroupAccessControlEntryAccessRightPtr string

func TemplateGroupAccessControlEntryAccessRightPtr(v string) TemplateGroupAccessControlEntryAccessRightPtrInput {
	return (*templateGroupAccessControlEntryAccessRightPtr)(&v)
}

func (*templateGroupAccessControlEntryAccessRightPtr) ElementType() reflect.Type {
	return templateGroupAccessControlEntryAccessRightPtrType
}

func (in *templateGroupAccessControlEntryAccessRightPtr) ToTemplateGroupAccessControlEntryAccessRightPtrOutput() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return pulumi.ToOutput(in).(TemplateGroupAccessControlEntryAccessRightPtrOutput)
}

func (in *templateGroupAccessControlEntryAccessRightPtr) ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TemplateGroupAccessControlEntryAccessRightPtrOutput)
}

func (in *templateGroupAccessControlEntryAccessRightPtr) ToOutput(ctx context.Context) pulumix.Output[*TemplateGroupAccessControlEntryAccessRight] {
	return pulumix.Output[*TemplateGroupAccessControlEntryAccessRight]{
		OutputState: in.ToTemplateGroupAccessControlEntryAccessRightPtrOutputWithContext(ctx).OutputState,
	}
}

type TemplateHashAlgorithm string

const (
	TemplateHashAlgorithmSha256 = TemplateHashAlgorithm("SHA256")
	TemplateHashAlgorithmSha384 = TemplateHashAlgorithm("SHA384")
	TemplateHashAlgorithmSha512 = TemplateHashAlgorithm("SHA512")
)

type TemplateKeySpec string

const (
	TemplateKeySpecKeyExchange = TemplateKeySpec("KEY_EXCHANGE")
	TemplateKeySpecSignature   = TemplateKeySpec("SIGNATURE")
)

type TemplateKeyUsagePropertyType string

const (
	TemplateKeyUsagePropertyTypeAll = TemplateKeyUsagePropertyType("ALL")
)

type TemplatePrivateKeyAlgorithm string

const (
	TemplatePrivateKeyAlgorithmRsa      = TemplatePrivateKeyAlgorithm("RSA")
	TemplatePrivateKeyAlgorithmEcdhP256 = TemplatePrivateKeyAlgorithm("ECDH_P256")
	TemplatePrivateKeyAlgorithmEcdhP384 = TemplatePrivateKeyAlgorithm("ECDH_P384")
	TemplatePrivateKeyAlgorithmEcdhP521 = TemplatePrivateKeyAlgorithm("ECDH_P521")
)

type TemplateValidityPeriodType string

const (
	TemplateValidityPeriodTypeHours  = TemplateValidityPeriodType("HOURS")
	TemplateValidityPeriodTypeDays   = TemplateValidityPeriodType("DAYS")
	TemplateValidityPeriodTypeWeeks  = TemplateValidityPeriodType("WEEKS")
	TemplateValidityPeriodTypeMonths = TemplateValidityPeriodType("MONTHS")
	TemplateValidityPeriodTypeYears  = TemplateValidityPeriodType("YEARS")
)

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRightInput)(nil)).Elem(), TemplateGroupAccessControlEntryAccessRight("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRightPtrInput)(nil)).Elem(), TemplateGroupAccessControlEntryAccessRight("ALLOW"))
	pulumi.RegisterOutputType(TemplateGroupAccessControlEntryAccessRightOutput{})
	pulumi.RegisterOutputType(TemplateGroupAccessControlEntryAccessRightPtrOutput{})
}
