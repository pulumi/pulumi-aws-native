// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pcaconnectorad

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectorTags struct {
}

// ConnectorTagsInput is an input type that accepts ConnectorTagsArgs and ConnectorTagsOutput values.
// You can construct a concrete instance of `ConnectorTagsInput` via:
//
//	ConnectorTagsArgs{...}
type ConnectorTagsInput interface {
	pulumi.Input

	ToConnectorTagsOutput() ConnectorTagsOutput
	ToConnectorTagsOutputWithContext(context.Context) ConnectorTagsOutput
}

type ConnectorTagsArgs struct {
}

func (ConnectorTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTags)(nil)).Elem()
}

func (i ConnectorTagsArgs) ToConnectorTagsOutput() ConnectorTagsOutput {
	return i.ToConnectorTagsOutputWithContext(context.Background())
}

func (i ConnectorTagsArgs) ToConnectorTagsOutputWithContext(ctx context.Context) ConnectorTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTagsOutput)
}

func (i ConnectorTagsArgs) ToConnectorTagsPtrOutput() ConnectorTagsPtrOutput {
	return i.ToConnectorTagsPtrOutputWithContext(context.Background())
}

func (i ConnectorTagsArgs) ToConnectorTagsPtrOutputWithContext(ctx context.Context) ConnectorTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTagsOutput).ToConnectorTagsPtrOutputWithContext(ctx)
}

// ConnectorTagsPtrInput is an input type that accepts ConnectorTagsArgs, ConnectorTagsPtr and ConnectorTagsPtrOutput values.
// You can construct a concrete instance of `ConnectorTagsPtrInput` via:
//
//	        ConnectorTagsArgs{...}
//
//	or:
//
//	        nil
type ConnectorTagsPtrInput interface {
	pulumi.Input

	ToConnectorTagsPtrOutput() ConnectorTagsPtrOutput
	ToConnectorTagsPtrOutputWithContext(context.Context) ConnectorTagsPtrOutput
}

type connectorTagsPtrType ConnectorTagsArgs

func ConnectorTagsPtr(v *ConnectorTagsArgs) ConnectorTagsPtrInput {
	return (*connectorTagsPtrType)(v)
}

func (*connectorTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTags)(nil)).Elem()
}

func (i *connectorTagsPtrType) ToConnectorTagsPtrOutput() ConnectorTagsPtrOutput {
	return i.ToConnectorTagsPtrOutputWithContext(context.Background())
}

func (i *connectorTagsPtrType) ToConnectorTagsPtrOutputWithContext(ctx context.Context) ConnectorTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTagsPtrOutput)
}

type ConnectorTagsOutput struct{ *pulumi.OutputState }

func (ConnectorTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTags)(nil)).Elem()
}

func (o ConnectorTagsOutput) ToConnectorTagsOutput() ConnectorTagsOutput {
	return o
}

func (o ConnectorTagsOutput) ToConnectorTagsOutputWithContext(ctx context.Context) ConnectorTagsOutput {
	return o
}

func (o ConnectorTagsOutput) ToConnectorTagsPtrOutput() ConnectorTagsPtrOutput {
	return o.ToConnectorTagsPtrOutputWithContext(context.Background())
}

func (o ConnectorTagsOutput) ToConnectorTagsPtrOutputWithContext(ctx context.Context) ConnectorTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTags) *ConnectorTags {
		return &v
	}).(ConnectorTagsPtrOutput)
}

type ConnectorTagsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTags)(nil)).Elem()
}

func (o ConnectorTagsPtrOutput) ToConnectorTagsPtrOutput() ConnectorTagsPtrOutput {
	return o
}

func (o ConnectorTagsPtrOutput) ToConnectorTagsPtrOutputWithContext(ctx context.Context) ConnectorTagsPtrOutput {
	return o
}

func (o ConnectorTagsPtrOutput) Elem() ConnectorTagsOutput {
	return o.ApplyT(func(v *ConnectorTags) ConnectorTags {
		if v != nil {
			return *v
		}
		var ret ConnectorTags
		return ret
	}).(ConnectorTagsOutput)
}

type ConnectorVpcInformation struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
}

// ConnectorVpcInformationInput is an input type that accepts ConnectorVpcInformationArgs and ConnectorVpcInformationOutput values.
// You can construct a concrete instance of `ConnectorVpcInformationInput` via:
//
//	ConnectorVpcInformationArgs{...}
type ConnectorVpcInformationInput interface {
	pulumi.Input

	ToConnectorVpcInformationOutput() ConnectorVpcInformationOutput
	ToConnectorVpcInformationOutputWithContext(context.Context) ConnectorVpcInformationOutput
}

type ConnectorVpcInformationArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
}

func (ConnectorVpcInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorVpcInformation)(nil)).Elem()
}

func (i ConnectorVpcInformationArgs) ToConnectorVpcInformationOutput() ConnectorVpcInformationOutput {
	return i.ToConnectorVpcInformationOutputWithContext(context.Background())
}

func (i ConnectorVpcInformationArgs) ToConnectorVpcInformationOutputWithContext(ctx context.Context) ConnectorVpcInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorVpcInformationOutput)
}

type ConnectorVpcInformationOutput struct{ *pulumi.OutputState }

func (ConnectorVpcInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorVpcInformation)(nil)).Elem()
}

func (o ConnectorVpcInformationOutput) ToConnectorVpcInformationOutput() ConnectorVpcInformationOutput {
	return o
}

func (o ConnectorVpcInformationOutput) ToConnectorVpcInformationOutputWithContext(ctx context.Context) ConnectorVpcInformationOutput {
	return o
}

func (o ConnectorVpcInformationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorVpcInformation) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

type DirectoryRegistrationTags struct {
}

// DirectoryRegistrationTagsInput is an input type that accepts DirectoryRegistrationTagsArgs and DirectoryRegistrationTagsOutput values.
// You can construct a concrete instance of `DirectoryRegistrationTagsInput` via:
//
//	DirectoryRegistrationTagsArgs{...}
type DirectoryRegistrationTagsInput interface {
	pulumi.Input

	ToDirectoryRegistrationTagsOutput() DirectoryRegistrationTagsOutput
	ToDirectoryRegistrationTagsOutputWithContext(context.Context) DirectoryRegistrationTagsOutput
}

type DirectoryRegistrationTagsArgs struct {
}

func (DirectoryRegistrationTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryRegistrationTags)(nil)).Elem()
}

func (i DirectoryRegistrationTagsArgs) ToDirectoryRegistrationTagsOutput() DirectoryRegistrationTagsOutput {
	return i.ToDirectoryRegistrationTagsOutputWithContext(context.Background())
}

func (i DirectoryRegistrationTagsArgs) ToDirectoryRegistrationTagsOutputWithContext(ctx context.Context) DirectoryRegistrationTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryRegistrationTagsOutput)
}

func (i DirectoryRegistrationTagsArgs) ToDirectoryRegistrationTagsPtrOutput() DirectoryRegistrationTagsPtrOutput {
	return i.ToDirectoryRegistrationTagsPtrOutputWithContext(context.Background())
}

func (i DirectoryRegistrationTagsArgs) ToDirectoryRegistrationTagsPtrOutputWithContext(ctx context.Context) DirectoryRegistrationTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryRegistrationTagsOutput).ToDirectoryRegistrationTagsPtrOutputWithContext(ctx)
}

// DirectoryRegistrationTagsPtrInput is an input type that accepts DirectoryRegistrationTagsArgs, DirectoryRegistrationTagsPtr and DirectoryRegistrationTagsPtrOutput values.
// You can construct a concrete instance of `DirectoryRegistrationTagsPtrInput` via:
//
//	        DirectoryRegistrationTagsArgs{...}
//
//	or:
//
//	        nil
type DirectoryRegistrationTagsPtrInput interface {
	pulumi.Input

	ToDirectoryRegistrationTagsPtrOutput() DirectoryRegistrationTagsPtrOutput
	ToDirectoryRegistrationTagsPtrOutputWithContext(context.Context) DirectoryRegistrationTagsPtrOutput
}

type directoryRegistrationTagsPtrType DirectoryRegistrationTagsArgs

func DirectoryRegistrationTagsPtr(v *DirectoryRegistrationTagsArgs) DirectoryRegistrationTagsPtrInput {
	return (*directoryRegistrationTagsPtrType)(v)
}

func (*directoryRegistrationTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryRegistrationTags)(nil)).Elem()
}

func (i *directoryRegistrationTagsPtrType) ToDirectoryRegistrationTagsPtrOutput() DirectoryRegistrationTagsPtrOutput {
	return i.ToDirectoryRegistrationTagsPtrOutputWithContext(context.Background())
}

func (i *directoryRegistrationTagsPtrType) ToDirectoryRegistrationTagsPtrOutputWithContext(ctx context.Context) DirectoryRegistrationTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryRegistrationTagsPtrOutput)
}

type DirectoryRegistrationTagsOutput struct{ *pulumi.OutputState }

func (DirectoryRegistrationTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryRegistrationTags)(nil)).Elem()
}

func (o DirectoryRegistrationTagsOutput) ToDirectoryRegistrationTagsOutput() DirectoryRegistrationTagsOutput {
	return o
}

func (o DirectoryRegistrationTagsOutput) ToDirectoryRegistrationTagsOutputWithContext(ctx context.Context) DirectoryRegistrationTagsOutput {
	return o
}

func (o DirectoryRegistrationTagsOutput) ToDirectoryRegistrationTagsPtrOutput() DirectoryRegistrationTagsPtrOutput {
	return o.ToDirectoryRegistrationTagsPtrOutputWithContext(context.Background())
}

func (o DirectoryRegistrationTagsOutput) ToDirectoryRegistrationTagsPtrOutputWithContext(ctx context.Context) DirectoryRegistrationTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryRegistrationTags) *DirectoryRegistrationTags {
		return &v
	}).(DirectoryRegistrationTagsPtrOutput)
}

type DirectoryRegistrationTagsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryRegistrationTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryRegistrationTags)(nil)).Elem()
}

func (o DirectoryRegistrationTagsPtrOutput) ToDirectoryRegistrationTagsPtrOutput() DirectoryRegistrationTagsPtrOutput {
	return o
}

func (o DirectoryRegistrationTagsPtrOutput) ToDirectoryRegistrationTagsPtrOutputWithContext(ctx context.Context) DirectoryRegistrationTagsPtrOutput {
	return o
}

func (o DirectoryRegistrationTagsPtrOutput) Elem() DirectoryRegistrationTagsOutput {
	return o.ApplyT(func(v *DirectoryRegistrationTags) DirectoryRegistrationTags {
		if v != nil {
			return *v
		}
		var ret DirectoryRegistrationTags
		return ret
	}).(DirectoryRegistrationTagsOutput)
}

type TemplateApplicationPolicies struct {
	Critical *bool         `pulumi:"critical"`
	Policies []interface{} `pulumi:"policies"`
}

// TemplateApplicationPoliciesInput is an input type that accepts TemplateApplicationPoliciesArgs and TemplateApplicationPoliciesOutput values.
// You can construct a concrete instance of `TemplateApplicationPoliciesInput` via:
//
//	TemplateApplicationPoliciesArgs{...}
type TemplateApplicationPoliciesInput interface {
	pulumi.Input

	ToTemplateApplicationPoliciesOutput() TemplateApplicationPoliciesOutput
	ToTemplateApplicationPoliciesOutputWithContext(context.Context) TemplateApplicationPoliciesOutput
}

type TemplateApplicationPoliciesArgs struct {
	Critical pulumi.BoolPtrInput `pulumi:"critical"`
	Policies pulumi.ArrayInput   `pulumi:"policies"`
}

func (TemplateApplicationPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicies)(nil)).Elem()
}

func (i TemplateApplicationPoliciesArgs) ToTemplateApplicationPoliciesOutput() TemplateApplicationPoliciesOutput {
	return i.ToTemplateApplicationPoliciesOutputWithContext(context.Background())
}

func (i TemplateApplicationPoliciesArgs) ToTemplateApplicationPoliciesOutputWithContext(ctx context.Context) TemplateApplicationPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateApplicationPoliciesOutput)
}

func (i TemplateApplicationPoliciesArgs) ToTemplateApplicationPoliciesPtrOutput() TemplateApplicationPoliciesPtrOutput {
	return i.ToTemplateApplicationPoliciesPtrOutputWithContext(context.Background())
}

func (i TemplateApplicationPoliciesArgs) ToTemplateApplicationPoliciesPtrOutputWithContext(ctx context.Context) TemplateApplicationPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateApplicationPoliciesOutput).ToTemplateApplicationPoliciesPtrOutputWithContext(ctx)
}

// TemplateApplicationPoliciesPtrInput is an input type that accepts TemplateApplicationPoliciesArgs, TemplateApplicationPoliciesPtr and TemplateApplicationPoliciesPtrOutput values.
// You can construct a concrete instance of `TemplateApplicationPoliciesPtrInput` via:
//
//	        TemplateApplicationPoliciesArgs{...}
//
//	or:
//
//	        nil
type TemplateApplicationPoliciesPtrInput interface {
	pulumi.Input

	ToTemplateApplicationPoliciesPtrOutput() TemplateApplicationPoliciesPtrOutput
	ToTemplateApplicationPoliciesPtrOutputWithContext(context.Context) TemplateApplicationPoliciesPtrOutput
}

type templateApplicationPoliciesPtrType TemplateApplicationPoliciesArgs

func TemplateApplicationPoliciesPtr(v *TemplateApplicationPoliciesArgs) TemplateApplicationPoliciesPtrInput {
	return (*templateApplicationPoliciesPtrType)(v)
}

func (*templateApplicationPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateApplicationPolicies)(nil)).Elem()
}

func (i *templateApplicationPoliciesPtrType) ToTemplateApplicationPoliciesPtrOutput() TemplateApplicationPoliciesPtrOutput {
	return i.ToTemplateApplicationPoliciesPtrOutputWithContext(context.Background())
}

func (i *templateApplicationPoliciesPtrType) ToTemplateApplicationPoliciesPtrOutputWithContext(ctx context.Context) TemplateApplicationPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateApplicationPoliciesPtrOutput)
}

type TemplateApplicationPoliciesOutput struct{ *pulumi.OutputState }

func (TemplateApplicationPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicies)(nil)).Elem()
}

func (o TemplateApplicationPoliciesOutput) ToTemplateApplicationPoliciesOutput() TemplateApplicationPoliciesOutput {
	return o
}

func (o TemplateApplicationPoliciesOutput) ToTemplateApplicationPoliciesOutputWithContext(ctx context.Context) TemplateApplicationPoliciesOutput {
	return o
}

func (o TemplateApplicationPoliciesOutput) ToTemplateApplicationPoliciesPtrOutput() TemplateApplicationPoliciesPtrOutput {
	return o.ToTemplateApplicationPoliciesPtrOutputWithContext(context.Background())
}

func (o TemplateApplicationPoliciesOutput) ToTemplateApplicationPoliciesPtrOutputWithContext(ctx context.Context) TemplateApplicationPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateApplicationPolicies) *TemplateApplicationPolicies {
		return &v
	}).(TemplateApplicationPoliciesPtrOutput)
}

func (o TemplateApplicationPoliciesOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateApplicationPolicies) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

func (o TemplateApplicationPoliciesOutput) Policies() pulumi.ArrayOutput {
	return o.ApplyT(func(v TemplateApplicationPolicies) []interface{} { return v.Policies }).(pulumi.ArrayOutput)
}

type TemplateApplicationPoliciesPtrOutput struct{ *pulumi.OutputState }

func (TemplateApplicationPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateApplicationPolicies)(nil)).Elem()
}

func (o TemplateApplicationPoliciesPtrOutput) ToTemplateApplicationPoliciesPtrOutput() TemplateApplicationPoliciesPtrOutput {
	return o
}

func (o TemplateApplicationPoliciesPtrOutput) ToTemplateApplicationPoliciesPtrOutputWithContext(ctx context.Context) TemplateApplicationPoliciesPtrOutput {
	return o
}

func (o TemplateApplicationPoliciesPtrOutput) Elem() TemplateApplicationPoliciesOutput {
	return o.ApplyT(func(v *TemplateApplicationPolicies) TemplateApplicationPolicies {
		if v != nil {
			return *v
		}
		var ret TemplateApplicationPolicies
		return ret
	}).(TemplateApplicationPoliciesOutput)
}

func (o TemplateApplicationPoliciesPtrOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateApplicationPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateApplicationPoliciesPtrOutput) Policies() pulumi.ArrayOutput {
	return o.ApplyT(func(v *TemplateApplicationPolicies) []interface{} {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.ArrayOutput)
}

type TemplateApplicationPolicy0Properties struct {
	PolicyType TemplateApplicationPolicyType `pulumi:"policyType"`
}

// TemplateApplicationPolicy0PropertiesInput is an input type that accepts TemplateApplicationPolicy0PropertiesArgs and TemplateApplicationPolicy0PropertiesOutput values.
// You can construct a concrete instance of `TemplateApplicationPolicy0PropertiesInput` via:
//
//	TemplateApplicationPolicy0PropertiesArgs{...}
type TemplateApplicationPolicy0PropertiesInput interface {
	pulumi.Input

	ToTemplateApplicationPolicy0PropertiesOutput() TemplateApplicationPolicy0PropertiesOutput
	ToTemplateApplicationPolicy0PropertiesOutputWithContext(context.Context) TemplateApplicationPolicy0PropertiesOutput
}

type TemplateApplicationPolicy0PropertiesArgs struct {
	PolicyType TemplateApplicationPolicyTypeInput `pulumi:"policyType"`
}

func (TemplateApplicationPolicy0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicy0Properties)(nil)).Elem()
}

func (i TemplateApplicationPolicy0PropertiesArgs) ToTemplateApplicationPolicy0PropertiesOutput() TemplateApplicationPolicy0PropertiesOutput {
	return i.ToTemplateApplicationPolicy0PropertiesOutputWithContext(context.Background())
}

func (i TemplateApplicationPolicy0PropertiesArgs) ToTemplateApplicationPolicy0PropertiesOutputWithContext(ctx context.Context) TemplateApplicationPolicy0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateApplicationPolicy0PropertiesOutput)
}

type TemplateApplicationPolicy0PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateApplicationPolicy0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicy0Properties)(nil)).Elem()
}

func (o TemplateApplicationPolicy0PropertiesOutput) ToTemplateApplicationPolicy0PropertiesOutput() TemplateApplicationPolicy0PropertiesOutput {
	return o
}

func (o TemplateApplicationPolicy0PropertiesOutput) ToTemplateApplicationPolicy0PropertiesOutputWithContext(ctx context.Context) TemplateApplicationPolicy0PropertiesOutput {
	return o
}

func (o TemplateApplicationPolicy0PropertiesOutput) PolicyType() TemplateApplicationPolicyTypeOutput {
	return o.ApplyT(func(v TemplateApplicationPolicy0Properties) TemplateApplicationPolicyType { return v.PolicyType }).(TemplateApplicationPolicyTypeOutput)
}

type TemplateApplicationPolicy1Properties struct {
	PolicyObjectIdentifier string `pulumi:"policyObjectIdentifier"`
}

// TemplateApplicationPolicy1PropertiesInput is an input type that accepts TemplateApplicationPolicy1PropertiesArgs and TemplateApplicationPolicy1PropertiesOutput values.
// You can construct a concrete instance of `TemplateApplicationPolicy1PropertiesInput` via:
//
//	TemplateApplicationPolicy1PropertiesArgs{...}
type TemplateApplicationPolicy1PropertiesInput interface {
	pulumi.Input

	ToTemplateApplicationPolicy1PropertiesOutput() TemplateApplicationPolicy1PropertiesOutput
	ToTemplateApplicationPolicy1PropertiesOutputWithContext(context.Context) TemplateApplicationPolicy1PropertiesOutput
}

type TemplateApplicationPolicy1PropertiesArgs struct {
	PolicyObjectIdentifier pulumi.StringInput `pulumi:"policyObjectIdentifier"`
}

func (TemplateApplicationPolicy1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicy1Properties)(nil)).Elem()
}

func (i TemplateApplicationPolicy1PropertiesArgs) ToTemplateApplicationPolicy1PropertiesOutput() TemplateApplicationPolicy1PropertiesOutput {
	return i.ToTemplateApplicationPolicy1PropertiesOutputWithContext(context.Background())
}

func (i TemplateApplicationPolicy1PropertiesArgs) ToTemplateApplicationPolicy1PropertiesOutputWithContext(ctx context.Context) TemplateApplicationPolicy1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateApplicationPolicy1PropertiesOutput)
}

type TemplateApplicationPolicy1PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateApplicationPolicy1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateApplicationPolicy1Properties)(nil)).Elem()
}

func (o TemplateApplicationPolicy1PropertiesOutput) ToTemplateApplicationPolicy1PropertiesOutput() TemplateApplicationPolicy1PropertiesOutput {
	return o
}

func (o TemplateApplicationPolicy1PropertiesOutput) ToTemplateApplicationPolicy1PropertiesOutputWithContext(ctx context.Context) TemplateApplicationPolicy1PropertiesOutput {
	return o
}

func (o TemplateApplicationPolicy1PropertiesOutput) PolicyObjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateApplicationPolicy1Properties) string { return v.PolicyObjectIdentifier }).(pulumi.StringOutput)
}

type TemplateCertificateValidity struct {
	RenewalPeriod  TemplateValidityPeriod `pulumi:"renewalPeriod"`
	ValidityPeriod TemplateValidityPeriod `pulumi:"validityPeriod"`
}

// TemplateCertificateValidityInput is an input type that accepts TemplateCertificateValidityArgs and TemplateCertificateValidityOutput values.
// You can construct a concrete instance of `TemplateCertificateValidityInput` via:
//
//	TemplateCertificateValidityArgs{...}
type TemplateCertificateValidityInput interface {
	pulumi.Input

	ToTemplateCertificateValidityOutput() TemplateCertificateValidityOutput
	ToTemplateCertificateValidityOutputWithContext(context.Context) TemplateCertificateValidityOutput
}

type TemplateCertificateValidityArgs struct {
	RenewalPeriod  TemplateValidityPeriodInput `pulumi:"renewalPeriod"`
	ValidityPeriod TemplateValidityPeriodInput `pulumi:"validityPeriod"`
}

func (TemplateCertificateValidityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCertificateValidity)(nil)).Elem()
}

func (i TemplateCertificateValidityArgs) ToTemplateCertificateValidityOutput() TemplateCertificateValidityOutput {
	return i.ToTemplateCertificateValidityOutputWithContext(context.Background())
}

func (i TemplateCertificateValidityArgs) ToTemplateCertificateValidityOutputWithContext(ctx context.Context) TemplateCertificateValidityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateCertificateValidityOutput)
}

type TemplateCertificateValidityOutput struct{ *pulumi.OutputState }

func (TemplateCertificateValidityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateCertificateValidity)(nil)).Elem()
}

func (o TemplateCertificateValidityOutput) ToTemplateCertificateValidityOutput() TemplateCertificateValidityOutput {
	return o
}

func (o TemplateCertificateValidityOutput) ToTemplateCertificateValidityOutputWithContext(ctx context.Context) TemplateCertificateValidityOutput {
	return o
}

func (o TemplateCertificateValidityOutput) RenewalPeriod() TemplateValidityPeriodOutput {
	return o.ApplyT(func(v TemplateCertificateValidity) TemplateValidityPeriod { return v.RenewalPeriod }).(TemplateValidityPeriodOutput)
}

func (o TemplateCertificateValidityOutput) ValidityPeriod() TemplateValidityPeriodOutput {
	return o.ApplyT(func(v TemplateCertificateValidity) TemplateValidityPeriod { return v.ValidityPeriod }).(TemplateValidityPeriodOutput)
}

type TemplateDefinition0Properties struct {
	TemplateV2 TemplateV2 `pulumi:"templateV2"`
}

// TemplateDefinition0PropertiesInput is an input type that accepts TemplateDefinition0PropertiesArgs and TemplateDefinition0PropertiesOutput values.
// You can construct a concrete instance of `TemplateDefinition0PropertiesInput` via:
//
//	TemplateDefinition0PropertiesArgs{...}
type TemplateDefinition0PropertiesInput interface {
	pulumi.Input

	ToTemplateDefinition0PropertiesOutput() TemplateDefinition0PropertiesOutput
	ToTemplateDefinition0PropertiesOutputWithContext(context.Context) TemplateDefinition0PropertiesOutput
}

type TemplateDefinition0PropertiesArgs struct {
	TemplateV2 TemplateV2Input `pulumi:"templateV2"`
}

func (TemplateDefinition0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition0Properties)(nil)).Elem()
}

func (i TemplateDefinition0PropertiesArgs) ToTemplateDefinition0PropertiesOutput() TemplateDefinition0PropertiesOutput {
	return i.ToTemplateDefinition0PropertiesOutputWithContext(context.Background())
}

func (i TemplateDefinition0PropertiesArgs) ToTemplateDefinition0PropertiesOutputWithContext(ctx context.Context) TemplateDefinition0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefinition0PropertiesOutput)
}

type TemplateDefinition0PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateDefinition0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition0Properties)(nil)).Elem()
}

func (o TemplateDefinition0PropertiesOutput) ToTemplateDefinition0PropertiesOutput() TemplateDefinition0PropertiesOutput {
	return o
}

func (o TemplateDefinition0PropertiesOutput) ToTemplateDefinition0PropertiesOutputWithContext(ctx context.Context) TemplateDefinition0PropertiesOutput {
	return o
}

func (o TemplateDefinition0PropertiesOutput) TemplateV2() TemplateV2Output {
	return o.ApplyT(func(v TemplateDefinition0Properties) TemplateV2 { return v.TemplateV2 }).(TemplateV2Output)
}

type TemplateDefinition1Properties struct {
	TemplateV3 TemplateV3 `pulumi:"templateV3"`
}

// TemplateDefinition1PropertiesInput is an input type that accepts TemplateDefinition1PropertiesArgs and TemplateDefinition1PropertiesOutput values.
// You can construct a concrete instance of `TemplateDefinition1PropertiesInput` via:
//
//	TemplateDefinition1PropertiesArgs{...}
type TemplateDefinition1PropertiesInput interface {
	pulumi.Input

	ToTemplateDefinition1PropertiesOutput() TemplateDefinition1PropertiesOutput
	ToTemplateDefinition1PropertiesOutputWithContext(context.Context) TemplateDefinition1PropertiesOutput
}

type TemplateDefinition1PropertiesArgs struct {
	TemplateV3 TemplateV3Input `pulumi:"templateV3"`
}

func (TemplateDefinition1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition1Properties)(nil)).Elem()
}

func (i TemplateDefinition1PropertiesArgs) ToTemplateDefinition1PropertiesOutput() TemplateDefinition1PropertiesOutput {
	return i.ToTemplateDefinition1PropertiesOutputWithContext(context.Background())
}

func (i TemplateDefinition1PropertiesArgs) ToTemplateDefinition1PropertiesOutputWithContext(ctx context.Context) TemplateDefinition1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefinition1PropertiesOutput)
}

type TemplateDefinition1PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateDefinition1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition1Properties)(nil)).Elem()
}

func (o TemplateDefinition1PropertiesOutput) ToTemplateDefinition1PropertiesOutput() TemplateDefinition1PropertiesOutput {
	return o
}

func (o TemplateDefinition1PropertiesOutput) ToTemplateDefinition1PropertiesOutputWithContext(ctx context.Context) TemplateDefinition1PropertiesOutput {
	return o
}

func (o TemplateDefinition1PropertiesOutput) TemplateV3() TemplateV3Output {
	return o.ApplyT(func(v TemplateDefinition1Properties) TemplateV3 { return v.TemplateV3 }).(TemplateV3Output)
}

type TemplateDefinition2Properties struct {
	TemplateV4 TemplateV4 `pulumi:"templateV4"`
}

// TemplateDefinition2PropertiesInput is an input type that accepts TemplateDefinition2PropertiesArgs and TemplateDefinition2PropertiesOutput values.
// You can construct a concrete instance of `TemplateDefinition2PropertiesInput` via:
//
//	TemplateDefinition2PropertiesArgs{...}
type TemplateDefinition2PropertiesInput interface {
	pulumi.Input

	ToTemplateDefinition2PropertiesOutput() TemplateDefinition2PropertiesOutput
	ToTemplateDefinition2PropertiesOutputWithContext(context.Context) TemplateDefinition2PropertiesOutput
}

type TemplateDefinition2PropertiesArgs struct {
	TemplateV4 TemplateV4Input `pulumi:"templateV4"`
}

func (TemplateDefinition2PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition2Properties)(nil)).Elem()
}

func (i TemplateDefinition2PropertiesArgs) ToTemplateDefinition2PropertiesOutput() TemplateDefinition2PropertiesOutput {
	return i.ToTemplateDefinition2PropertiesOutputWithContext(context.Background())
}

func (i TemplateDefinition2PropertiesArgs) ToTemplateDefinition2PropertiesOutputWithContext(ctx context.Context) TemplateDefinition2PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateDefinition2PropertiesOutput)
}

type TemplateDefinition2PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateDefinition2PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateDefinition2Properties)(nil)).Elem()
}

func (o TemplateDefinition2PropertiesOutput) ToTemplateDefinition2PropertiesOutput() TemplateDefinition2PropertiesOutput {
	return o
}

func (o TemplateDefinition2PropertiesOutput) ToTemplateDefinition2PropertiesOutputWithContext(ctx context.Context) TemplateDefinition2PropertiesOutput {
	return o
}

func (o TemplateDefinition2PropertiesOutput) TemplateV4() TemplateV4Output {
	return o.ApplyT(func(v TemplateDefinition2Properties) TemplateV4 { return v.TemplateV4 }).(TemplateV4Output)
}

type TemplateEnrollmentFlagsV2 struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  *bool `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                *bool `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       *bool `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore *bool `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   *bool `pulumi:"userInteractionRequired"`
}

// TemplateEnrollmentFlagsV2Input is an input type that accepts TemplateEnrollmentFlagsV2Args and TemplateEnrollmentFlagsV2Output values.
// You can construct a concrete instance of `TemplateEnrollmentFlagsV2Input` via:
//
//	TemplateEnrollmentFlagsV2Args{...}
type TemplateEnrollmentFlagsV2Input interface {
	pulumi.Input

	ToTemplateEnrollmentFlagsV2Output() TemplateEnrollmentFlagsV2Output
	ToTemplateEnrollmentFlagsV2OutputWithContext(context.Context) TemplateEnrollmentFlagsV2Output
}

type TemplateEnrollmentFlagsV2Args struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  pulumi.BoolPtrInput `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                pulumi.BoolPtrInput `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       pulumi.BoolPtrInput `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore pulumi.BoolPtrInput `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   pulumi.BoolPtrInput `pulumi:"userInteractionRequired"`
}

func (TemplateEnrollmentFlagsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV2)(nil)).Elem()
}

func (i TemplateEnrollmentFlagsV2Args) ToTemplateEnrollmentFlagsV2Output() TemplateEnrollmentFlagsV2Output {
	return i.ToTemplateEnrollmentFlagsV2OutputWithContext(context.Background())
}

func (i TemplateEnrollmentFlagsV2Args) ToTemplateEnrollmentFlagsV2OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEnrollmentFlagsV2Output)
}

type TemplateEnrollmentFlagsV2Output struct{ *pulumi.OutputState }

func (TemplateEnrollmentFlagsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV2)(nil)).Elem()
}

func (o TemplateEnrollmentFlagsV2Output) ToTemplateEnrollmentFlagsV2Output() TemplateEnrollmentFlagsV2Output {
	return o
}

func (o TemplateEnrollmentFlagsV2Output) ToTemplateEnrollmentFlagsV2OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV2Output {
	return o
}

func (o TemplateEnrollmentFlagsV2Output) EnableKeyReuseOnNtTokenKeysetStorageFull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV2) *bool { return v.EnableKeyReuseOnNtTokenKeysetStorageFull }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV2Output) IncludeSymmetricAlgorithms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV2) *bool { return v.IncludeSymmetricAlgorithms }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV2Output) NoSecurityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV2) *bool { return v.NoSecurityExtension }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV2Output) RemoveInvalidCertificateFromPersonalStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV2) *bool { return v.RemoveInvalidCertificateFromPersonalStore }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV2Output) UserInteractionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV2) *bool { return v.UserInteractionRequired }).(pulumi.BoolPtrOutput)
}

type TemplateEnrollmentFlagsV3 struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  *bool `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                *bool `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       *bool `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore *bool `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   *bool `pulumi:"userInteractionRequired"`
}

// TemplateEnrollmentFlagsV3Input is an input type that accepts TemplateEnrollmentFlagsV3Args and TemplateEnrollmentFlagsV3Output values.
// You can construct a concrete instance of `TemplateEnrollmentFlagsV3Input` via:
//
//	TemplateEnrollmentFlagsV3Args{...}
type TemplateEnrollmentFlagsV3Input interface {
	pulumi.Input

	ToTemplateEnrollmentFlagsV3Output() TemplateEnrollmentFlagsV3Output
	ToTemplateEnrollmentFlagsV3OutputWithContext(context.Context) TemplateEnrollmentFlagsV3Output
}

type TemplateEnrollmentFlagsV3Args struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  pulumi.BoolPtrInput `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                pulumi.BoolPtrInput `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       pulumi.BoolPtrInput `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore pulumi.BoolPtrInput `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   pulumi.BoolPtrInput `pulumi:"userInteractionRequired"`
}

func (TemplateEnrollmentFlagsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV3)(nil)).Elem()
}

func (i TemplateEnrollmentFlagsV3Args) ToTemplateEnrollmentFlagsV3Output() TemplateEnrollmentFlagsV3Output {
	return i.ToTemplateEnrollmentFlagsV3OutputWithContext(context.Background())
}

func (i TemplateEnrollmentFlagsV3Args) ToTemplateEnrollmentFlagsV3OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEnrollmentFlagsV3Output)
}

type TemplateEnrollmentFlagsV3Output struct{ *pulumi.OutputState }

func (TemplateEnrollmentFlagsV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV3)(nil)).Elem()
}

func (o TemplateEnrollmentFlagsV3Output) ToTemplateEnrollmentFlagsV3Output() TemplateEnrollmentFlagsV3Output {
	return o
}

func (o TemplateEnrollmentFlagsV3Output) ToTemplateEnrollmentFlagsV3OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV3Output {
	return o
}

func (o TemplateEnrollmentFlagsV3Output) EnableKeyReuseOnNtTokenKeysetStorageFull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV3) *bool { return v.EnableKeyReuseOnNtTokenKeysetStorageFull }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV3Output) IncludeSymmetricAlgorithms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV3) *bool { return v.IncludeSymmetricAlgorithms }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV3Output) NoSecurityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV3) *bool { return v.NoSecurityExtension }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV3Output) RemoveInvalidCertificateFromPersonalStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV3) *bool { return v.RemoveInvalidCertificateFromPersonalStore }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV3Output) UserInteractionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV3) *bool { return v.UserInteractionRequired }).(pulumi.BoolPtrOutput)
}

type TemplateEnrollmentFlagsV4 struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  *bool `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                *bool `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       *bool `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore *bool `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   *bool `pulumi:"userInteractionRequired"`
}

// TemplateEnrollmentFlagsV4Input is an input type that accepts TemplateEnrollmentFlagsV4Args and TemplateEnrollmentFlagsV4Output values.
// You can construct a concrete instance of `TemplateEnrollmentFlagsV4Input` via:
//
//	TemplateEnrollmentFlagsV4Args{...}
type TemplateEnrollmentFlagsV4Input interface {
	pulumi.Input

	ToTemplateEnrollmentFlagsV4Output() TemplateEnrollmentFlagsV4Output
	ToTemplateEnrollmentFlagsV4OutputWithContext(context.Context) TemplateEnrollmentFlagsV4Output
}

type TemplateEnrollmentFlagsV4Args struct {
	EnableKeyReuseOnNtTokenKeysetStorageFull  pulumi.BoolPtrInput `pulumi:"enableKeyReuseOnNtTokenKeysetStorageFull"`
	IncludeSymmetricAlgorithms                pulumi.BoolPtrInput `pulumi:"includeSymmetricAlgorithms"`
	NoSecurityExtension                       pulumi.BoolPtrInput `pulumi:"noSecurityExtension"`
	RemoveInvalidCertificateFromPersonalStore pulumi.BoolPtrInput `pulumi:"removeInvalidCertificateFromPersonalStore"`
	UserInteractionRequired                   pulumi.BoolPtrInput `pulumi:"userInteractionRequired"`
}

func (TemplateEnrollmentFlagsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV4)(nil)).Elem()
}

func (i TemplateEnrollmentFlagsV4Args) ToTemplateEnrollmentFlagsV4Output() TemplateEnrollmentFlagsV4Output {
	return i.ToTemplateEnrollmentFlagsV4OutputWithContext(context.Background())
}

func (i TemplateEnrollmentFlagsV4Args) ToTemplateEnrollmentFlagsV4OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateEnrollmentFlagsV4Output)
}

type TemplateEnrollmentFlagsV4Output struct{ *pulumi.OutputState }

func (TemplateEnrollmentFlagsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateEnrollmentFlagsV4)(nil)).Elem()
}

func (o TemplateEnrollmentFlagsV4Output) ToTemplateEnrollmentFlagsV4Output() TemplateEnrollmentFlagsV4Output {
	return o
}

func (o TemplateEnrollmentFlagsV4Output) ToTemplateEnrollmentFlagsV4OutputWithContext(ctx context.Context) TemplateEnrollmentFlagsV4Output {
	return o
}

func (o TemplateEnrollmentFlagsV4Output) EnableKeyReuseOnNtTokenKeysetStorageFull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV4) *bool { return v.EnableKeyReuseOnNtTokenKeysetStorageFull }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV4Output) IncludeSymmetricAlgorithms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV4) *bool { return v.IncludeSymmetricAlgorithms }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV4Output) NoSecurityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV4) *bool { return v.NoSecurityExtension }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV4Output) RemoveInvalidCertificateFromPersonalStore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV4) *bool { return v.RemoveInvalidCertificateFromPersonalStore }).(pulumi.BoolPtrOutput)
}

func (o TemplateEnrollmentFlagsV4Output) UserInteractionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateEnrollmentFlagsV4) *bool { return v.UserInteractionRequired }).(pulumi.BoolPtrOutput)
}

type TemplateExtensionsV2 struct {
	ApplicationPolicies *TemplateApplicationPolicies `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsage             `pulumi:"keyUsage"`
}

// TemplateExtensionsV2Input is an input type that accepts TemplateExtensionsV2Args and TemplateExtensionsV2Output values.
// You can construct a concrete instance of `TemplateExtensionsV2Input` via:
//
//	TemplateExtensionsV2Args{...}
type TemplateExtensionsV2Input interface {
	pulumi.Input

	ToTemplateExtensionsV2Output() TemplateExtensionsV2Output
	ToTemplateExtensionsV2OutputWithContext(context.Context) TemplateExtensionsV2Output
}

type TemplateExtensionsV2Args struct {
	ApplicationPolicies TemplateApplicationPoliciesPtrInput `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsageInput               `pulumi:"keyUsage"`
}

func (TemplateExtensionsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV2)(nil)).Elem()
}

func (i TemplateExtensionsV2Args) ToTemplateExtensionsV2Output() TemplateExtensionsV2Output {
	return i.ToTemplateExtensionsV2OutputWithContext(context.Background())
}

func (i TemplateExtensionsV2Args) ToTemplateExtensionsV2OutputWithContext(ctx context.Context) TemplateExtensionsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExtensionsV2Output)
}

type TemplateExtensionsV2Output struct{ *pulumi.OutputState }

func (TemplateExtensionsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV2)(nil)).Elem()
}

func (o TemplateExtensionsV2Output) ToTemplateExtensionsV2Output() TemplateExtensionsV2Output {
	return o
}

func (o TemplateExtensionsV2Output) ToTemplateExtensionsV2OutputWithContext(ctx context.Context) TemplateExtensionsV2Output {
	return o
}

func (o TemplateExtensionsV2Output) ApplicationPolicies() TemplateApplicationPoliciesPtrOutput {
	return o.ApplyT(func(v TemplateExtensionsV2) *TemplateApplicationPolicies { return v.ApplicationPolicies }).(TemplateApplicationPoliciesPtrOutput)
}

func (o TemplateExtensionsV2Output) KeyUsage() TemplateKeyUsageOutput {
	return o.ApplyT(func(v TemplateExtensionsV2) TemplateKeyUsage { return v.KeyUsage }).(TemplateKeyUsageOutput)
}

type TemplateExtensionsV3 struct {
	ApplicationPolicies *TemplateApplicationPolicies `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsage             `pulumi:"keyUsage"`
}

// TemplateExtensionsV3Input is an input type that accepts TemplateExtensionsV3Args and TemplateExtensionsV3Output values.
// You can construct a concrete instance of `TemplateExtensionsV3Input` via:
//
//	TemplateExtensionsV3Args{...}
type TemplateExtensionsV3Input interface {
	pulumi.Input

	ToTemplateExtensionsV3Output() TemplateExtensionsV3Output
	ToTemplateExtensionsV3OutputWithContext(context.Context) TemplateExtensionsV3Output
}

type TemplateExtensionsV3Args struct {
	ApplicationPolicies TemplateApplicationPoliciesPtrInput `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsageInput               `pulumi:"keyUsage"`
}

func (TemplateExtensionsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV3)(nil)).Elem()
}

func (i TemplateExtensionsV3Args) ToTemplateExtensionsV3Output() TemplateExtensionsV3Output {
	return i.ToTemplateExtensionsV3OutputWithContext(context.Background())
}

func (i TemplateExtensionsV3Args) ToTemplateExtensionsV3OutputWithContext(ctx context.Context) TemplateExtensionsV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExtensionsV3Output)
}

type TemplateExtensionsV3Output struct{ *pulumi.OutputState }

func (TemplateExtensionsV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV3)(nil)).Elem()
}

func (o TemplateExtensionsV3Output) ToTemplateExtensionsV3Output() TemplateExtensionsV3Output {
	return o
}

func (o TemplateExtensionsV3Output) ToTemplateExtensionsV3OutputWithContext(ctx context.Context) TemplateExtensionsV3Output {
	return o
}

func (o TemplateExtensionsV3Output) ApplicationPolicies() TemplateApplicationPoliciesPtrOutput {
	return o.ApplyT(func(v TemplateExtensionsV3) *TemplateApplicationPolicies { return v.ApplicationPolicies }).(TemplateApplicationPoliciesPtrOutput)
}

func (o TemplateExtensionsV3Output) KeyUsage() TemplateKeyUsageOutput {
	return o.ApplyT(func(v TemplateExtensionsV3) TemplateKeyUsage { return v.KeyUsage }).(TemplateKeyUsageOutput)
}

type TemplateExtensionsV4 struct {
	ApplicationPolicies *TemplateApplicationPolicies `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsage             `pulumi:"keyUsage"`
}

// TemplateExtensionsV4Input is an input type that accepts TemplateExtensionsV4Args and TemplateExtensionsV4Output values.
// You can construct a concrete instance of `TemplateExtensionsV4Input` via:
//
//	TemplateExtensionsV4Args{...}
type TemplateExtensionsV4Input interface {
	pulumi.Input

	ToTemplateExtensionsV4Output() TemplateExtensionsV4Output
	ToTemplateExtensionsV4OutputWithContext(context.Context) TemplateExtensionsV4Output
}

type TemplateExtensionsV4Args struct {
	ApplicationPolicies TemplateApplicationPoliciesPtrInput `pulumi:"applicationPolicies"`
	KeyUsage            TemplateKeyUsageInput               `pulumi:"keyUsage"`
}

func (TemplateExtensionsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV4)(nil)).Elem()
}

func (i TemplateExtensionsV4Args) ToTemplateExtensionsV4Output() TemplateExtensionsV4Output {
	return i.ToTemplateExtensionsV4OutputWithContext(context.Background())
}

func (i TemplateExtensionsV4Args) ToTemplateExtensionsV4OutputWithContext(ctx context.Context) TemplateExtensionsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateExtensionsV4Output)
}

type TemplateExtensionsV4Output struct{ *pulumi.OutputState }

func (TemplateExtensionsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateExtensionsV4)(nil)).Elem()
}

func (o TemplateExtensionsV4Output) ToTemplateExtensionsV4Output() TemplateExtensionsV4Output {
	return o
}

func (o TemplateExtensionsV4Output) ToTemplateExtensionsV4OutputWithContext(ctx context.Context) TemplateExtensionsV4Output {
	return o
}

func (o TemplateExtensionsV4Output) ApplicationPolicies() TemplateApplicationPoliciesPtrOutput {
	return o.ApplyT(func(v TemplateExtensionsV4) *TemplateApplicationPolicies { return v.ApplicationPolicies }).(TemplateApplicationPoliciesPtrOutput)
}

func (o TemplateExtensionsV4Output) KeyUsage() TemplateKeyUsageOutput {
	return o.ApplyT(func(v TemplateExtensionsV4) TemplateKeyUsage { return v.KeyUsage }).(TemplateKeyUsageOutput)
}

type TemplateGeneralFlagsV2 struct {
	AutoEnrollment *bool `pulumi:"autoEnrollment"`
	MachineType    *bool `pulumi:"machineType"`
}

// TemplateGeneralFlagsV2Input is an input type that accepts TemplateGeneralFlagsV2Args and TemplateGeneralFlagsV2Output values.
// You can construct a concrete instance of `TemplateGeneralFlagsV2Input` via:
//
//	TemplateGeneralFlagsV2Args{...}
type TemplateGeneralFlagsV2Input interface {
	pulumi.Input

	ToTemplateGeneralFlagsV2Output() TemplateGeneralFlagsV2Output
	ToTemplateGeneralFlagsV2OutputWithContext(context.Context) TemplateGeneralFlagsV2Output
}

type TemplateGeneralFlagsV2Args struct {
	AutoEnrollment pulumi.BoolPtrInput `pulumi:"autoEnrollment"`
	MachineType    pulumi.BoolPtrInput `pulumi:"machineType"`
}

func (TemplateGeneralFlagsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV2)(nil)).Elem()
}

func (i TemplateGeneralFlagsV2Args) ToTemplateGeneralFlagsV2Output() TemplateGeneralFlagsV2Output {
	return i.ToTemplateGeneralFlagsV2OutputWithContext(context.Background())
}

func (i TemplateGeneralFlagsV2Args) ToTemplateGeneralFlagsV2OutputWithContext(ctx context.Context) TemplateGeneralFlagsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeneralFlagsV2Output)
}

type TemplateGeneralFlagsV2Output struct{ *pulumi.OutputState }

func (TemplateGeneralFlagsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV2)(nil)).Elem()
}

func (o TemplateGeneralFlagsV2Output) ToTemplateGeneralFlagsV2Output() TemplateGeneralFlagsV2Output {
	return o
}

func (o TemplateGeneralFlagsV2Output) ToTemplateGeneralFlagsV2OutputWithContext(ctx context.Context) TemplateGeneralFlagsV2Output {
	return o
}

func (o TemplateGeneralFlagsV2Output) AutoEnrollment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV2) *bool { return v.AutoEnrollment }).(pulumi.BoolPtrOutput)
}

func (o TemplateGeneralFlagsV2Output) MachineType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV2) *bool { return v.MachineType }).(pulumi.BoolPtrOutput)
}

type TemplateGeneralFlagsV3 struct {
	AutoEnrollment *bool `pulumi:"autoEnrollment"`
	MachineType    *bool `pulumi:"machineType"`
}

// TemplateGeneralFlagsV3Input is an input type that accepts TemplateGeneralFlagsV3Args and TemplateGeneralFlagsV3Output values.
// You can construct a concrete instance of `TemplateGeneralFlagsV3Input` via:
//
//	TemplateGeneralFlagsV3Args{...}
type TemplateGeneralFlagsV3Input interface {
	pulumi.Input

	ToTemplateGeneralFlagsV3Output() TemplateGeneralFlagsV3Output
	ToTemplateGeneralFlagsV3OutputWithContext(context.Context) TemplateGeneralFlagsV3Output
}

type TemplateGeneralFlagsV3Args struct {
	AutoEnrollment pulumi.BoolPtrInput `pulumi:"autoEnrollment"`
	MachineType    pulumi.BoolPtrInput `pulumi:"machineType"`
}

func (TemplateGeneralFlagsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV3)(nil)).Elem()
}

func (i TemplateGeneralFlagsV3Args) ToTemplateGeneralFlagsV3Output() TemplateGeneralFlagsV3Output {
	return i.ToTemplateGeneralFlagsV3OutputWithContext(context.Background())
}

func (i TemplateGeneralFlagsV3Args) ToTemplateGeneralFlagsV3OutputWithContext(ctx context.Context) TemplateGeneralFlagsV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeneralFlagsV3Output)
}

type TemplateGeneralFlagsV3Output struct{ *pulumi.OutputState }

func (TemplateGeneralFlagsV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV3)(nil)).Elem()
}

func (o TemplateGeneralFlagsV3Output) ToTemplateGeneralFlagsV3Output() TemplateGeneralFlagsV3Output {
	return o
}

func (o TemplateGeneralFlagsV3Output) ToTemplateGeneralFlagsV3OutputWithContext(ctx context.Context) TemplateGeneralFlagsV3Output {
	return o
}

func (o TemplateGeneralFlagsV3Output) AutoEnrollment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV3) *bool { return v.AutoEnrollment }).(pulumi.BoolPtrOutput)
}

func (o TemplateGeneralFlagsV3Output) MachineType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV3) *bool { return v.MachineType }).(pulumi.BoolPtrOutput)
}

type TemplateGeneralFlagsV4 struct {
	AutoEnrollment *bool `pulumi:"autoEnrollment"`
	MachineType    *bool `pulumi:"machineType"`
}

// TemplateGeneralFlagsV4Input is an input type that accepts TemplateGeneralFlagsV4Args and TemplateGeneralFlagsV4Output values.
// You can construct a concrete instance of `TemplateGeneralFlagsV4Input` via:
//
//	TemplateGeneralFlagsV4Args{...}
type TemplateGeneralFlagsV4Input interface {
	pulumi.Input

	ToTemplateGeneralFlagsV4Output() TemplateGeneralFlagsV4Output
	ToTemplateGeneralFlagsV4OutputWithContext(context.Context) TemplateGeneralFlagsV4Output
}

type TemplateGeneralFlagsV4Args struct {
	AutoEnrollment pulumi.BoolPtrInput `pulumi:"autoEnrollment"`
	MachineType    pulumi.BoolPtrInput `pulumi:"machineType"`
}

func (TemplateGeneralFlagsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV4)(nil)).Elem()
}

func (i TemplateGeneralFlagsV4Args) ToTemplateGeneralFlagsV4Output() TemplateGeneralFlagsV4Output {
	return i.ToTemplateGeneralFlagsV4OutputWithContext(context.Background())
}

func (i TemplateGeneralFlagsV4Args) ToTemplateGeneralFlagsV4OutputWithContext(ctx context.Context) TemplateGeneralFlagsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGeneralFlagsV4Output)
}

type TemplateGeneralFlagsV4Output struct{ *pulumi.OutputState }

func (TemplateGeneralFlagsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGeneralFlagsV4)(nil)).Elem()
}

func (o TemplateGeneralFlagsV4Output) ToTemplateGeneralFlagsV4Output() TemplateGeneralFlagsV4Output {
	return o
}

func (o TemplateGeneralFlagsV4Output) ToTemplateGeneralFlagsV4OutputWithContext(ctx context.Context) TemplateGeneralFlagsV4Output {
	return o
}

func (o TemplateGeneralFlagsV4Output) AutoEnrollment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV4) *bool { return v.AutoEnrollment }).(pulumi.BoolPtrOutput)
}

func (o TemplateGeneralFlagsV4Output) MachineType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateGeneralFlagsV4) *bool { return v.MachineType }).(pulumi.BoolPtrOutput)
}

type TemplateGroupAccessControlEntryAccessRights struct {
	AutoEnroll *TemplateGroupAccessControlEntryAccessRight `pulumi:"autoEnroll"`
	Enroll     *TemplateGroupAccessControlEntryAccessRight `pulumi:"enroll"`
}

// TemplateGroupAccessControlEntryAccessRightsInput is an input type that accepts TemplateGroupAccessControlEntryAccessRightsArgs and TemplateGroupAccessControlEntryAccessRightsOutput values.
// You can construct a concrete instance of `TemplateGroupAccessControlEntryAccessRightsInput` via:
//
//	TemplateGroupAccessControlEntryAccessRightsArgs{...}
type TemplateGroupAccessControlEntryAccessRightsInput interface {
	pulumi.Input

	ToTemplateGroupAccessControlEntryAccessRightsOutput() TemplateGroupAccessControlEntryAccessRightsOutput
	ToTemplateGroupAccessControlEntryAccessRightsOutputWithContext(context.Context) TemplateGroupAccessControlEntryAccessRightsOutput
}

type TemplateGroupAccessControlEntryAccessRightsArgs struct {
	AutoEnroll TemplateGroupAccessControlEntryAccessRightPtrInput `pulumi:"autoEnroll"`
	Enroll     TemplateGroupAccessControlEntryAccessRightPtrInput `pulumi:"enroll"`
}

func (TemplateGroupAccessControlEntryAccessRightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRights)(nil)).Elem()
}

func (i TemplateGroupAccessControlEntryAccessRightsArgs) ToTemplateGroupAccessControlEntryAccessRightsOutput() TemplateGroupAccessControlEntryAccessRightsOutput {
	return i.ToTemplateGroupAccessControlEntryAccessRightsOutputWithContext(context.Background())
}

func (i TemplateGroupAccessControlEntryAccessRightsArgs) ToTemplateGroupAccessControlEntryAccessRightsOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGroupAccessControlEntryAccessRightsOutput)
}

type TemplateGroupAccessControlEntryAccessRightsOutput struct{ *pulumi.OutputState }

func (TemplateGroupAccessControlEntryAccessRightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRights)(nil)).Elem()
}

func (o TemplateGroupAccessControlEntryAccessRightsOutput) ToTemplateGroupAccessControlEntryAccessRightsOutput() TemplateGroupAccessControlEntryAccessRightsOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightsOutput) ToTemplateGroupAccessControlEntryAccessRightsOutputWithContext(ctx context.Context) TemplateGroupAccessControlEntryAccessRightsOutput {
	return o
}

func (o TemplateGroupAccessControlEntryAccessRightsOutput) AutoEnroll() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o.ApplyT(func(v TemplateGroupAccessControlEntryAccessRights) *TemplateGroupAccessControlEntryAccessRight {
		return v.AutoEnroll
	}).(TemplateGroupAccessControlEntryAccessRightPtrOutput)
}

func (o TemplateGroupAccessControlEntryAccessRightsOutput) Enroll() TemplateGroupAccessControlEntryAccessRightPtrOutput {
	return o.ApplyT(func(v TemplateGroupAccessControlEntryAccessRights) *TemplateGroupAccessControlEntryAccessRight {
		return v.Enroll
	}).(TemplateGroupAccessControlEntryAccessRightPtrOutput)
}

type TemplateKeyUsage struct {
	Critical   *bool                 `pulumi:"critical"`
	UsageFlags TemplateKeyUsageFlags `pulumi:"usageFlags"`
}

// TemplateKeyUsageInput is an input type that accepts TemplateKeyUsageArgs and TemplateKeyUsageOutput values.
// You can construct a concrete instance of `TemplateKeyUsageInput` via:
//
//	TemplateKeyUsageArgs{...}
type TemplateKeyUsageInput interface {
	pulumi.Input

	ToTemplateKeyUsageOutput() TemplateKeyUsageOutput
	ToTemplateKeyUsageOutputWithContext(context.Context) TemplateKeyUsageOutput
}

type TemplateKeyUsageArgs struct {
	Critical   pulumi.BoolPtrInput        `pulumi:"critical"`
	UsageFlags TemplateKeyUsageFlagsInput `pulumi:"usageFlags"`
}

func (TemplateKeyUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsage)(nil)).Elem()
}

func (i TemplateKeyUsageArgs) ToTemplateKeyUsageOutput() TemplateKeyUsageOutput {
	return i.ToTemplateKeyUsageOutputWithContext(context.Background())
}

func (i TemplateKeyUsageArgs) ToTemplateKeyUsageOutputWithContext(ctx context.Context) TemplateKeyUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageOutput)
}

type TemplateKeyUsageOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsage)(nil)).Elem()
}

func (o TemplateKeyUsageOutput) ToTemplateKeyUsageOutput() TemplateKeyUsageOutput {
	return o
}

func (o TemplateKeyUsageOutput) ToTemplateKeyUsageOutputWithContext(ctx context.Context) TemplateKeyUsageOutput {
	return o
}

func (o TemplateKeyUsageOutput) Critical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsage) *bool { return v.Critical }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsageOutput) UsageFlags() TemplateKeyUsageFlagsOutput {
	return o.ApplyT(func(v TemplateKeyUsage) TemplateKeyUsageFlags { return v.UsageFlags }).(TemplateKeyUsageFlagsOutput)
}

type TemplateKeyUsageFlags struct {
	DataEncipherment *bool `pulumi:"dataEncipherment"`
	DigitalSignature *bool `pulumi:"digitalSignature"`
	KeyAgreement     *bool `pulumi:"keyAgreement"`
	KeyEncipherment  *bool `pulumi:"keyEncipherment"`
	NonRepudiation   *bool `pulumi:"nonRepudiation"`
}

// TemplateKeyUsageFlagsInput is an input type that accepts TemplateKeyUsageFlagsArgs and TemplateKeyUsageFlagsOutput values.
// You can construct a concrete instance of `TemplateKeyUsageFlagsInput` via:
//
//	TemplateKeyUsageFlagsArgs{...}
type TemplateKeyUsageFlagsInput interface {
	pulumi.Input

	ToTemplateKeyUsageFlagsOutput() TemplateKeyUsageFlagsOutput
	ToTemplateKeyUsageFlagsOutputWithContext(context.Context) TemplateKeyUsageFlagsOutput
}

type TemplateKeyUsageFlagsArgs struct {
	DataEncipherment pulumi.BoolPtrInput `pulumi:"dataEncipherment"`
	DigitalSignature pulumi.BoolPtrInput `pulumi:"digitalSignature"`
	KeyAgreement     pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	KeyEncipherment  pulumi.BoolPtrInput `pulumi:"keyEncipherment"`
	NonRepudiation   pulumi.BoolPtrInput `pulumi:"nonRepudiation"`
}

func (TemplateKeyUsageFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageFlags)(nil)).Elem()
}

func (i TemplateKeyUsageFlagsArgs) ToTemplateKeyUsageFlagsOutput() TemplateKeyUsageFlagsOutput {
	return i.ToTemplateKeyUsageFlagsOutputWithContext(context.Background())
}

func (i TemplateKeyUsageFlagsArgs) ToTemplateKeyUsageFlagsOutputWithContext(ctx context.Context) TemplateKeyUsageFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageFlagsOutput)
}

type TemplateKeyUsageFlagsOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageFlags)(nil)).Elem()
}

func (o TemplateKeyUsageFlagsOutput) ToTemplateKeyUsageFlagsOutput() TemplateKeyUsageFlagsOutput {
	return o
}

func (o TemplateKeyUsageFlagsOutput) ToTemplateKeyUsageFlagsOutputWithContext(ctx context.Context) TemplateKeyUsageFlagsOutput {
	return o
}

func (o TemplateKeyUsageFlagsOutput) DataEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsageFlags) *bool { return v.DataEncipherment }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsageFlagsOutput) DigitalSignature() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsageFlags) *bool { return v.DigitalSignature }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsageFlagsOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsageFlags) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsageFlagsOutput) KeyEncipherment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsageFlags) *bool { return v.KeyEncipherment }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsageFlagsOutput) NonRepudiation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsageFlags) *bool { return v.NonRepudiation }).(pulumi.BoolPtrOutput)
}

type TemplateKeyUsageProperty0Properties struct {
	PropertyType TemplateKeyUsagePropertyType `pulumi:"propertyType"`
}

// TemplateKeyUsageProperty0PropertiesInput is an input type that accepts TemplateKeyUsageProperty0PropertiesArgs and TemplateKeyUsageProperty0PropertiesOutput values.
// You can construct a concrete instance of `TemplateKeyUsageProperty0PropertiesInput` via:
//
//	TemplateKeyUsageProperty0PropertiesArgs{...}
type TemplateKeyUsageProperty0PropertiesInput interface {
	pulumi.Input

	ToTemplateKeyUsageProperty0PropertiesOutput() TemplateKeyUsageProperty0PropertiesOutput
	ToTemplateKeyUsageProperty0PropertiesOutputWithContext(context.Context) TemplateKeyUsageProperty0PropertiesOutput
}

type TemplateKeyUsageProperty0PropertiesArgs struct {
	PropertyType TemplateKeyUsagePropertyTypeInput `pulumi:"propertyType"`
}

func (TemplateKeyUsageProperty0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageProperty0Properties)(nil)).Elem()
}

func (i TemplateKeyUsageProperty0PropertiesArgs) ToTemplateKeyUsageProperty0PropertiesOutput() TemplateKeyUsageProperty0PropertiesOutput {
	return i.ToTemplateKeyUsageProperty0PropertiesOutputWithContext(context.Background())
}

func (i TemplateKeyUsageProperty0PropertiesArgs) ToTemplateKeyUsageProperty0PropertiesOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty0PropertiesOutput)
}

func (i TemplateKeyUsageProperty0PropertiesArgs) ToTemplateKeyUsageProperty0PropertiesPtrOutput() TemplateKeyUsageProperty0PropertiesPtrOutput {
	return i.ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateKeyUsageProperty0PropertiesArgs) ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty0PropertiesOutput).ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(ctx)
}

// TemplateKeyUsageProperty0PropertiesPtrInput is an input type that accepts TemplateKeyUsageProperty0PropertiesArgs, TemplateKeyUsageProperty0PropertiesPtr and TemplateKeyUsageProperty0PropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateKeyUsageProperty0PropertiesPtrInput` via:
//
//	        TemplateKeyUsageProperty0PropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateKeyUsageProperty0PropertiesPtrInput interface {
	pulumi.Input

	ToTemplateKeyUsageProperty0PropertiesPtrOutput() TemplateKeyUsageProperty0PropertiesPtrOutput
	ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(context.Context) TemplateKeyUsageProperty0PropertiesPtrOutput
}

type templateKeyUsageProperty0PropertiesPtrType TemplateKeyUsageProperty0PropertiesArgs

func TemplateKeyUsageProperty0PropertiesPtr(v *TemplateKeyUsageProperty0PropertiesArgs) TemplateKeyUsageProperty0PropertiesPtrInput {
	return (*templateKeyUsageProperty0PropertiesPtrType)(v)
}

func (*templateKeyUsageProperty0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsageProperty0Properties)(nil)).Elem()
}

func (i *templateKeyUsageProperty0PropertiesPtrType) ToTemplateKeyUsageProperty0PropertiesPtrOutput() TemplateKeyUsageProperty0PropertiesPtrOutput {
	return i.ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(context.Background())
}

func (i *templateKeyUsageProperty0PropertiesPtrType) ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty0PropertiesPtrOutput)
}

type TemplateKeyUsageProperty0PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageProperty0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageProperty0Properties)(nil)).Elem()
}

func (o TemplateKeyUsageProperty0PropertiesOutput) ToTemplateKeyUsageProperty0PropertiesOutput() TemplateKeyUsageProperty0PropertiesOutput {
	return o
}

func (o TemplateKeyUsageProperty0PropertiesOutput) ToTemplateKeyUsageProperty0PropertiesOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesOutput {
	return o
}

func (o TemplateKeyUsageProperty0PropertiesOutput) ToTemplateKeyUsageProperty0PropertiesPtrOutput() TemplateKeyUsageProperty0PropertiesPtrOutput {
	return o.ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateKeyUsageProperty0PropertiesOutput) ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKeyUsageProperty0Properties) *TemplateKeyUsageProperty0Properties {
		return &v
	}).(TemplateKeyUsageProperty0PropertiesPtrOutput)
}

func (o TemplateKeyUsageProperty0PropertiesOutput) PropertyType() TemplateKeyUsagePropertyTypeOutput {
	return o.ApplyT(func(v TemplateKeyUsageProperty0Properties) TemplateKeyUsagePropertyType { return v.PropertyType }).(TemplateKeyUsagePropertyTypeOutput)
}

type TemplateKeyUsageProperty0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageProperty0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsageProperty0Properties)(nil)).Elem()
}

func (o TemplateKeyUsageProperty0PropertiesPtrOutput) ToTemplateKeyUsageProperty0PropertiesPtrOutput() TemplateKeyUsageProperty0PropertiesPtrOutput {
	return o
}

func (o TemplateKeyUsageProperty0PropertiesPtrOutput) ToTemplateKeyUsageProperty0PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty0PropertiesPtrOutput {
	return o
}

func (o TemplateKeyUsageProperty0PropertiesPtrOutput) Elem() TemplateKeyUsageProperty0PropertiesOutput {
	return o.ApplyT(func(v *TemplateKeyUsageProperty0Properties) TemplateKeyUsageProperty0Properties {
		if v != nil {
			return *v
		}
		var ret TemplateKeyUsageProperty0Properties
		return ret
	}).(TemplateKeyUsageProperty0PropertiesOutput)
}

func (o TemplateKeyUsageProperty0PropertiesPtrOutput) PropertyType() TemplateKeyUsagePropertyTypePtrOutput {
	return o.ApplyT(func(v *TemplateKeyUsageProperty0Properties) *TemplateKeyUsagePropertyType {
		if v == nil {
			return nil
		}
		return &v.PropertyType
	}).(TemplateKeyUsagePropertyTypePtrOutput)
}

type TemplateKeyUsageProperty1Properties struct {
	PropertyFlags TemplateKeyUsagePropertyFlags `pulumi:"propertyFlags"`
}

// TemplateKeyUsageProperty1PropertiesInput is an input type that accepts TemplateKeyUsageProperty1PropertiesArgs and TemplateKeyUsageProperty1PropertiesOutput values.
// You can construct a concrete instance of `TemplateKeyUsageProperty1PropertiesInput` via:
//
//	TemplateKeyUsageProperty1PropertiesArgs{...}
type TemplateKeyUsageProperty1PropertiesInput interface {
	pulumi.Input

	ToTemplateKeyUsageProperty1PropertiesOutput() TemplateKeyUsageProperty1PropertiesOutput
	ToTemplateKeyUsageProperty1PropertiesOutputWithContext(context.Context) TemplateKeyUsageProperty1PropertiesOutput
}

type TemplateKeyUsageProperty1PropertiesArgs struct {
	PropertyFlags TemplateKeyUsagePropertyFlagsInput `pulumi:"propertyFlags"`
}

func (TemplateKeyUsageProperty1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageProperty1Properties)(nil)).Elem()
}

func (i TemplateKeyUsageProperty1PropertiesArgs) ToTemplateKeyUsageProperty1PropertiesOutput() TemplateKeyUsageProperty1PropertiesOutput {
	return i.ToTemplateKeyUsageProperty1PropertiesOutputWithContext(context.Background())
}

func (i TemplateKeyUsageProperty1PropertiesArgs) ToTemplateKeyUsageProperty1PropertiesOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty1PropertiesOutput)
}

func (i TemplateKeyUsageProperty1PropertiesArgs) ToTemplateKeyUsageProperty1PropertiesPtrOutput() TemplateKeyUsageProperty1PropertiesPtrOutput {
	return i.ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateKeyUsageProperty1PropertiesArgs) ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty1PropertiesOutput).ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(ctx)
}

// TemplateKeyUsageProperty1PropertiesPtrInput is an input type that accepts TemplateKeyUsageProperty1PropertiesArgs, TemplateKeyUsageProperty1PropertiesPtr and TemplateKeyUsageProperty1PropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateKeyUsageProperty1PropertiesPtrInput` via:
//
//	        TemplateKeyUsageProperty1PropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateKeyUsageProperty1PropertiesPtrInput interface {
	pulumi.Input

	ToTemplateKeyUsageProperty1PropertiesPtrOutput() TemplateKeyUsageProperty1PropertiesPtrOutput
	ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(context.Context) TemplateKeyUsageProperty1PropertiesPtrOutput
}

type templateKeyUsageProperty1PropertiesPtrType TemplateKeyUsageProperty1PropertiesArgs

func TemplateKeyUsageProperty1PropertiesPtr(v *TemplateKeyUsageProperty1PropertiesArgs) TemplateKeyUsageProperty1PropertiesPtrInput {
	return (*templateKeyUsageProperty1PropertiesPtrType)(v)
}

func (*templateKeyUsageProperty1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsageProperty1Properties)(nil)).Elem()
}

func (i *templateKeyUsageProperty1PropertiesPtrType) ToTemplateKeyUsageProperty1PropertiesPtrOutput() TemplateKeyUsageProperty1PropertiesPtrOutput {
	return i.ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(context.Background())
}

func (i *templateKeyUsageProperty1PropertiesPtrType) ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsageProperty1PropertiesPtrOutput)
}

type TemplateKeyUsageProperty1PropertiesOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageProperty1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsageProperty1Properties)(nil)).Elem()
}

func (o TemplateKeyUsageProperty1PropertiesOutput) ToTemplateKeyUsageProperty1PropertiesOutput() TemplateKeyUsageProperty1PropertiesOutput {
	return o
}

func (o TemplateKeyUsageProperty1PropertiesOutput) ToTemplateKeyUsageProperty1PropertiesOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesOutput {
	return o
}

func (o TemplateKeyUsageProperty1PropertiesOutput) ToTemplateKeyUsageProperty1PropertiesPtrOutput() TemplateKeyUsageProperty1PropertiesPtrOutput {
	return o.ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateKeyUsageProperty1PropertiesOutput) ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKeyUsageProperty1Properties) *TemplateKeyUsageProperty1Properties {
		return &v
	}).(TemplateKeyUsageProperty1PropertiesPtrOutput)
}

func (o TemplateKeyUsageProperty1PropertiesOutput) PropertyFlags() TemplateKeyUsagePropertyFlagsOutput {
	return o.ApplyT(func(v TemplateKeyUsageProperty1Properties) TemplateKeyUsagePropertyFlags { return v.PropertyFlags }).(TemplateKeyUsagePropertyFlagsOutput)
}

type TemplateKeyUsageProperty1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsageProperty1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsageProperty1Properties)(nil)).Elem()
}

func (o TemplateKeyUsageProperty1PropertiesPtrOutput) ToTemplateKeyUsageProperty1PropertiesPtrOutput() TemplateKeyUsageProperty1PropertiesPtrOutput {
	return o
}

func (o TemplateKeyUsageProperty1PropertiesPtrOutput) ToTemplateKeyUsageProperty1PropertiesPtrOutputWithContext(ctx context.Context) TemplateKeyUsageProperty1PropertiesPtrOutput {
	return o
}

func (o TemplateKeyUsageProperty1PropertiesPtrOutput) Elem() TemplateKeyUsageProperty1PropertiesOutput {
	return o.ApplyT(func(v *TemplateKeyUsageProperty1Properties) TemplateKeyUsageProperty1Properties {
		if v != nil {
			return *v
		}
		var ret TemplateKeyUsageProperty1Properties
		return ret
	}).(TemplateKeyUsageProperty1PropertiesOutput)
}

func (o TemplateKeyUsageProperty1PropertiesPtrOutput) PropertyFlags() TemplateKeyUsagePropertyFlagsPtrOutput {
	return o.ApplyT(func(v *TemplateKeyUsageProperty1Properties) *TemplateKeyUsagePropertyFlags {
		if v == nil {
			return nil
		}
		return &v.PropertyFlags
	}).(TemplateKeyUsagePropertyFlagsPtrOutput)
}

type TemplateKeyUsagePropertyFlags struct {
	Decrypt      *bool `pulumi:"decrypt"`
	KeyAgreement *bool `pulumi:"keyAgreement"`
	Sign         *bool `pulumi:"sign"`
}

// TemplateKeyUsagePropertyFlagsInput is an input type that accepts TemplateKeyUsagePropertyFlagsArgs and TemplateKeyUsagePropertyFlagsOutput values.
// You can construct a concrete instance of `TemplateKeyUsagePropertyFlagsInput` via:
//
//	TemplateKeyUsagePropertyFlagsArgs{...}
type TemplateKeyUsagePropertyFlagsInput interface {
	pulumi.Input

	ToTemplateKeyUsagePropertyFlagsOutput() TemplateKeyUsagePropertyFlagsOutput
	ToTemplateKeyUsagePropertyFlagsOutputWithContext(context.Context) TemplateKeyUsagePropertyFlagsOutput
}

type TemplateKeyUsagePropertyFlagsArgs struct {
	Decrypt      pulumi.BoolPtrInput `pulumi:"decrypt"`
	KeyAgreement pulumi.BoolPtrInput `pulumi:"keyAgreement"`
	Sign         pulumi.BoolPtrInput `pulumi:"sign"`
}

func (TemplateKeyUsagePropertyFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsagePropertyFlags)(nil)).Elem()
}

func (i TemplateKeyUsagePropertyFlagsArgs) ToTemplateKeyUsagePropertyFlagsOutput() TemplateKeyUsagePropertyFlagsOutput {
	return i.ToTemplateKeyUsagePropertyFlagsOutputWithContext(context.Background())
}

func (i TemplateKeyUsagePropertyFlagsArgs) ToTemplateKeyUsagePropertyFlagsOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsagePropertyFlagsOutput)
}

func (i TemplateKeyUsagePropertyFlagsArgs) ToTemplateKeyUsagePropertyFlagsPtrOutput() TemplateKeyUsagePropertyFlagsPtrOutput {
	return i.ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(context.Background())
}

func (i TemplateKeyUsagePropertyFlagsArgs) ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsagePropertyFlagsOutput).ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(ctx)
}

// TemplateKeyUsagePropertyFlagsPtrInput is an input type that accepts TemplateKeyUsagePropertyFlagsArgs, TemplateKeyUsagePropertyFlagsPtr and TemplateKeyUsagePropertyFlagsPtrOutput values.
// You can construct a concrete instance of `TemplateKeyUsagePropertyFlagsPtrInput` via:
//
//	        TemplateKeyUsagePropertyFlagsArgs{...}
//
//	or:
//
//	        nil
type TemplateKeyUsagePropertyFlagsPtrInput interface {
	pulumi.Input

	ToTemplateKeyUsagePropertyFlagsPtrOutput() TemplateKeyUsagePropertyFlagsPtrOutput
	ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(context.Context) TemplateKeyUsagePropertyFlagsPtrOutput
}

type templateKeyUsagePropertyFlagsPtrType TemplateKeyUsagePropertyFlagsArgs

func TemplateKeyUsagePropertyFlagsPtr(v *TemplateKeyUsagePropertyFlagsArgs) TemplateKeyUsagePropertyFlagsPtrInput {
	return (*templateKeyUsagePropertyFlagsPtrType)(v)
}

func (*templateKeyUsagePropertyFlagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsagePropertyFlags)(nil)).Elem()
}

func (i *templateKeyUsagePropertyFlagsPtrType) ToTemplateKeyUsagePropertyFlagsPtrOutput() TemplateKeyUsagePropertyFlagsPtrOutput {
	return i.ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(context.Background())
}

func (i *templateKeyUsagePropertyFlagsPtrType) ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateKeyUsagePropertyFlagsPtrOutput)
}

type TemplateKeyUsagePropertyFlagsOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsagePropertyFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateKeyUsagePropertyFlags)(nil)).Elem()
}

func (o TemplateKeyUsagePropertyFlagsOutput) ToTemplateKeyUsagePropertyFlagsOutput() TemplateKeyUsagePropertyFlagsOutput {
	return o
}

func (o TemplateKeyUsagePropertyFlagsOutput) ToTemplateKeyUsagePropertyFlagsOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsOutput {
	return o
}

func (o TemplateKeyUsagePropertyFlagsOutput) ToTemplateKeyUsagePropertyFlagsPtrOutput() TemplateKeyUsagePropertyFlagsPtrOutput {
	return o.ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(context.Background())
}

func (o TemplateKeyUsagePropertyFlagsOutput) ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateKeyUsagePropertyFlags) *TemplateKeyUsagePropertyFlags {
		return &v
	}).(TemplateKeyUsagePropertyFlagsPtrOutput)
}

func (o TemplateKeyUsagePropertyFlagsOutput) Decrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsagePropertyFlags) *bool { return v.Decrypt }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsagePropertyFlagsOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsagePropertyFlags) *bool { return v.KeyAgreement }).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsagePropertyFlagsOutput) Sign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateKeyUsagePropertyFlags) *bool { return v.Sign }).(pulumi.BoolPtrOutput)
}

type TemplateKeyUsagePropertyFlagsPtrOutput struct{ *pulumi.OutputState }

func (TemplateKeyUsagePropertyFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateKeyUsagePropertyFlags)(nil)).Elem()
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) ToTemplateKeyUsagePropertyFlagsPtrOutput() TemplateKeyUsagePropertyFlagsPtrOutput {
	return o
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) ToTemplateKeyUsagePropertyFlagsPtrOutputWithContext(ctx context.Context) TemplateKeyUsagePropertyFlagsPtrOutput {
	return o
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) Elem() TemplateKeyUsagePropertyFlagsOutput {
	return o.ApplyT(func(v *TemplateKeyUsagePropertyFlags) TemplateKeyUsagePropertyFlags {
		if v != nil {
			return *v
		}
		var ret TemplateKeyUsagePropertyFlags
		return ret
	}).(TemplateKeyUsagePropertyFlagsOutput)
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) Decrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateKeyUsagePropertyFlags) *bool {
		if v == nil {
			return nil
		}
		return v.Decrypt
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) KeyAgreement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateKeyUsagePropertyFlags) *bool {
		if v == nil {
			return nil
		}
		return v.KeyAgreement
	}).(pulumi.BoolPtrOutput)
}

func (o TemplateKeyUsagePropertyFlagsPtrOutput) Sign() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TemplateKeyUsagePropertyFlags) *bool {
		if v == nil {
			return nil
		}
		return v.Sign
	}).(pulumi.BoolPtrOutput)
}

type TemplatePrivateKeyAttributesV2 struct {
	CryptoProviders  []string        `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpec `pulumi:"keySpec"`
	MinimalKeyLength float64         `pulumi:"minimalKeyLength"`
}

// TemplatePrivateKeyAttributesV2Input is an input type that accepts TemplatePrivateKeyAttributesV2Args and TemplatePrivateKeyAttributesV2Output values.
// You can construct a concrete instance of `TemplatePrivateKeyAttributesV2Input` via:
//
//	TemplatePrivateKeyAttributesV2Args{...}
type TemplatePrivateKeyAttributesV2Input interface {
	pulumi.Input

	ToTemplatePrivateKeyAttributesV2Output() TemplatePrivateKeyAttributesV2Output
	ToTemplatePrivateKeyAttributesV2OutputWithContext(context.Context) TemplatePrivateKeyAttributesV2Output
}

type TemplatePrivateKeyAttributesV2Args struct {
	CryptoProviders  pulumi.StringArrayInput `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpecInput    `pulumi:"keySpec"`
	MinimalKeyLength pulumi.Float64Input     `pulumi:"minimalKeyLength"`
}

func (TemplatePrivateKeyAttributesV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV2)(nil)).Elem()
}

func (i TemplatePrivateKeyAttributesV2Args) ToTemplatePrivateKeyAttributesV2Output() TemplatePrivateKeyAttributesV2Output {
	return i.ToTemplatePrivateKeyAttributesV2OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyAttributesV2Args) ToTemplatePrivateKeyAttributesV2OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyAttributesV2Output)
}

type TemplatePrivateKeyAttributesV2Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyAttributesV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV2)(nil)).Elem()
}

func (o TemplatePrivateKeyAttributesV2Output) ToTemplatePrivateKeyAttributesV2Output() TemplatePrivateKeyAttributesV2Output {
	return o
}

func (o TemplatePrivateKeyAttributesV2Output) ToTemplatePrivateKeyAttributesV2OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV2Output {
	return o
}

func (o TemplatePrivateKeyAttributesV2Output) CryptoProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV2) []string { return v.CryptoProviders }).(pulumi.StringArrayOutput)
}

func (o TemplatePrivateKeyAttributesV2Output) KeySpec() TemplateKeySpecOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV2) TemplateKeySpec { return v.KeySpec }).(TemplateKeySpecOutput)
}

func (o TemplatePrivateKeyAttributesV2Output) MinimalKeyLength() pulumi.Float64Output {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV2) float64 { return v.MinimalKeyLength }).(pulumi.Float64Output)
}

type TemplatePrivateKeyAttributesV3 struct {
	Algorithm        TemplatePrivateKeyAlgorithm `pulumi:"algorithm"`
	CryptoProviders  []string                    `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpec             `pulumi:"keySpec"`
	KeyUsageProperty interface{}                 `pulumi:"keyUsageProperty"`
	MinimalKeyLength float64                     `pulumi:"minimalKeyLength"`
}

// TemplatePrivateKeyAttributesV3Input is an input type that accepts TemplatePrivateKeyAttributesV3Args and TemplatePrivateKeyAttributesV3Output values.
// You can construct a concrete instance of `TemplatePrivateKeyAttributesV3Input` via:
//
//	TemplatePrivateKeyAttributesV3Args{...}
type TemplatePrivateKeyAttributesV3Input interface {
	pulumi.Input

	ToTemplatePrivateKeyAttributesV3Output() TemplatePrivateKeyAttributesV3Output
	ToTemplatePrivateKeyAttributesV3OutputWithContext(context.Context) TemplatePrivateKeyAttributesV3Output
}

type TemplatePrivateKeyAttributesV3Args struct {
	Algorithm        TemplatePrivateKeyAlgorithmInput `pulumi:"algorithm"`
	CryptoProviders  pulumi.StringArrayInput          `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpecInput             `pulumi:"keySpec"`
	KeyUsageProperty pulumi.Input                     `pulumi:"keyUsageProperty"`
	MinimalKeyLength pulumi.Float64Input              `pulumi:"minimalKeyLength"`
}

func (TemplatePrivateKeyAttributesV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV3)(nil)).Elem()
}

func (i TemplatePrivateKeyAttributesV3Args) ToTemplatePrivateKeyAttributesV3Output() TemplatePrivateKeyAttributesV3Output {
	return i.ToTemplatePrivateKeyAttributesV3OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyAttributesV3Args) ToTemplatePrivateKeyAttributesV3OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyAttributesV3Output)
}

type TemplatePrivateKeyAttributesV3Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyAttributesV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV3)(nil)).Elem()
}

func (o TemplatePrivateKeyAttributesV3Output) ToTemplatePrivateKeyAttributesV3Output() TemplatePrivateKeyAttributesV3Output {
	return o
}

func (o TemplatePrivateKeyAttributesV3Output) ToTemplatePrivateKeyAttributesV3OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV3Output {
	return o
}

func (o TemplatePrivateKeyAttributesV3Output) Algorithm() TemplatePrivateKeyAlgorithmOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV3) TemplatePrivateKeyAlgorithm { return v.Algorithm }).(TemplatePrivateKeyAlgorithmOutput)
}

func (o TemplatePrivateKeyAttributesV3Output) CryptoProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV3) []string { return v.CryptoProviders }).(pulumi.StringArrayOutput)
}

func (o TemplatePrivateKeyAttributesV3Output) KeySpec() TemplateKeySpecOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV3) TemplateKeySpec { return v.KeySpec }).(TemplateKeySpecOutput)
}

func (o TemplatePrivateKeyAttributesV3Output) KeyUsageProperty() pulumi.AnyOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV3) interface{} { return v.KeyUsageProperty }).(pulumi.AnyOutput)
}

func (o TemplatePrivateKeyAttributesV3Output) MinimalKeyLength() pulumi.Float64Output {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV3) float64 { return v.MinimalKeyLength }).(pulumi.Float64Output)
}

type TemplatePrivateKeyAttributesV4 struct {
	Algorithm        *TemplatePrivateKeyAlgorithm `pulumi:"algorithm"`
	CryptoProviders  []string                     `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpec              `pulumi:"keySpec"`
	KeyUsageProperty interface{}                  `pulumi:"keyUsageProperty"`
	MinimalKeyLength float64                      `pulumi:"minimalKeyLength"`
}

// TemplatePrivateKeyAttributesV4Input is an input type that accepts TemplatePrivateKeyAttributesV4Args and TemplatePrivateKeyAttributesV4Output values.
// You can construct a concrete instance of `TemplatePrivateKeyAttributesV4Input` via:
//
//	TemplatePrivateKeyAttributesV4Args{...}
type TemplatePrivateKeyAttributesV4Input interface {
	pulumi.Input

	ToTemplatePrivateKeyAttributesV4Output() TemplatePrivateKeyAttributesV4Output
	ToTemplatePrivateKeyAttributesV4OutputWithContext(context.Context) TemplatePrivateKeyAttributesV4Output
}

type TemplatePrivateKeyAttributesV4Args struct {
	Algorithm        TemplatePrivateKeyAlgorithmPtrInput `pulumi:"algorithm"`
	CryptoProviders  pulumi.StringArrayInput             `pulumi:"cryptoProviders"`
	KeySpec          TemplateKeySpecInput                `pulumi:"keySpec"`
	KeyUsageProperty pulumi.Input                        `pulumi:"keyUsageProperty"`
	MinimalKeyLength pulumi.Float64Input                 `pulumi:"minimalKeyLength"`
}

func (TemplatePrivateKeyAttributesV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV4)(nil)).Elem()
}

func (i TemplatePrivateKeyAttributesV4Args) ToTemplatePrivateKeyAttributesV4Output() TemplatePrivateKeyAttributesV4Output {
	return i.ToTemplatePrivateKeyAttributesV4OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyAttributesV4Args) ToTemplatePrivateKeyAttributesV4OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyAttributesV4Output)
}

type TemplatePrivateKeyAttributesV4Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyAttributesV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyAttributesV4)(nil)).Elem()
}

func (o TemplatePrivateKeyAttributesV4Output) ToTemplatePrivateKeyAttributesV4Output() TemplatePrivateKeyAttributesV4Output {
	return o
}

func (o TemplatePrivateKeyAttributesV4Output) ToTemplatePrivateKeyAttributesV4OutputWithContext(ctx context.Context) TemplatePrivateKeyAttributesV4Output {
	return o
}

func (o TemplatePrivateKeyAttributesV4Output) Algorithm() TemplatePrivateKeyAlgorithmPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV4) *TemplatePrivateKeyAlgorithm { return v.Algorithm }).(TemplatePrivateKeyAlgorithmPtrOutput)
}

func (o TemplatePrivateKeyAttributesV4Output) CryptoProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV4) []string { return v.CryptoProviders }).(pulumi.StringArrayOutput)
}

func (o TemplatePrivateKeyAttributesV4Output) KeySpec() TemplateKeySpecOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV4) TemplateKeySpec { return v.KeySpec }).(TemplateKeySpecOutput)
}

func (o TemplatePrivateKeyAttributesV4Output) KeyUsageProperty() pulumi.AnyOutput {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV4) interface{} { return v.KeyUsageProperty }).(pulumi.AnyOutput)
}

func (o TemplatePrivateKeyAttributesV4Output) MinimalKeyLength() pulumi.Float64Output {
	return o.ApplyT(func(v TemplatePrivateKeyAttributesV4) float64 { return v.MinimalKeyLength }).(pulumi.Float64Output)
}

type TemplatePrivateKeyFlagsV2 struct {
	ClientVersion               TemplateClientCompatibilityV2 `pulumi:"clientVersion"`
	ExportableKey               *bool                         `pulumi:"exportableKey"`
	StrongKeyProtectionRequired *bool                         `pulumi:"strongKeyProtectionRequired"`
}

// TemplatePrivateKeyFlagsV2Input is an input type that accepts TemplatePrivateKeyFlagsV2Args and TemplatePrivateKeyFlagsV2Output values.
// You can construct a concrete instance of `TemplatePrivateKeyFlagsV2Input` via:
//
//	TemplatePrivateKeyFlagsV2Args{...}
type TemplatePrivateKeyFlagsV2Input interface {
	pulumi.Input

	ToTemplatePrivateKeyFlagsV2Output() TemplatePrivateKeyFlagsV2Output
	ToTemplatePrivateKeyFlagsV2OutputWithContext(context.Context) TemplatePrivateKeyFlagsV2Output
}

type TemplatePrivateKeyFlagsV2Args struct {
	ClientVersion               TemplateClientCompatibilityV2Input `pulumi:"clientVersion"`
	ExportableKey               pulumi.BoolPtrInput                `pulumi:"exportableKey"`
	StrongKeyProtectionRequired pulumi.BoolPtrInput                `pulumi:"strongKeyProtectionRequired"`
}

func (TemplatePrivateKeyFlagsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV2)(nil)).Elem()
}

func (i TemplatePrivateKeyFlagsV2Args) ToTemplatePrivateKeyFlagsV2Output() TemplatePrivateKeyFlagsV2Output {
	return i.ToTemplatePrivateKeyFlagsV2OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyFlagsV2Args) ToTemplatePrivateKeyFlagsV2OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyFlagsV2Output)
}

type TemplatePrivateKeyFlagsV2Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyFlagsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV2)(nil)).Elem()
}

func (o TemplatePrivateKeyFlagsV2Output) ToTemplatePrivateKeyFlagsV2Output() TemplatePrivateKeyFlagsV2Output {
	return o
}

func (o TemplatePrivateKeyFlagsV2Output) ToTemplatePrivateKeyFlagsV2OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV2Output {
	return o
}

func (o TemplatePrivateKeyFlagsV2Output) ClientVersion() TemplateClientCompatibilityV2Output {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV2) TemplateClientCompatibilityV2 { return v.ClientVersion }).(TemplateClientCompatibilityV2Output)
}

func (o TemplatePrivateKeyFlagsV2Output) ExportableKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV2) *bool { return v.ExportableKey }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV2Output) StrongKeyProtectionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV2) *bool { return v.StrongKeyProtectionRequired }).(pulumi.BoolPtrOutput)
}

type TemplatePrivateKeyFlagsV3 struct {
	ClientVersion                      TemplateClientCompatibilityV3 `pulumi:"clientVersion"`
	ExportableKey                      *bool                         `pulumi:"exportableKey"`
	RequireAlternateSignatureAlgorithm *bool                         `pulumi:"requireAlternateSignatureAlgorithm"`
	StrongKeyProtectionRequired        *bool                         `pulumi:"strongKeyProtectionRequired"`
}

// TemplatePrivateKeyFlagsV3Input is an input type that accepts TemplatePrivateKeyFlagsV3Args and TemplatePrivateKeyFlagsV3Output values.
// You can construct a concrete instance of `TemplatePrivateKeyFlagsV3Input` via:
//
//	TemplatePrivateKeyFlagsV3Args{...}
type TemplatePrivateKeyFlagsV3Input interface {
	pulumi.Input

	ToTemplatePrivateKeyFlagsV3Output() TemplatePrivateKeyFlagsV3Output
	ToTemplatePrivateKeyFlagsV3OutputWithContext(context.Context) TemplatePrivateKeyFlagsV3Output
}

type TemplatePrivateKeyFlagsV3Args struct {
	ClientVersion                      TemplateClientCompatibilityV3Input `pulumi:"clientVersion"`
	ExportableKey                      pulumi.BoolPtrInput                `pulumi:"exportableKey"`
	RequireAlternateSignatureAlgorithm pulumi.BoolPtrInput                `pulumi:"requireAlternateSignatureAlgorithm"`
	StrongKeyProtectionRequired        pulumi.BoolPtrInput                `pulumi:"strongKeyProtectionRequired"`
}

func (TemplatePrivateKeyFlagsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV3)(nil)).Elem()
}

func (i TemplatePrivateKeyFlagsV3Args) ToTemplatePrivateKeyFlagsV3Output() TemplatePrivateKeyFlagsV3Output {
	return i.ToTemplatePrivateKeyFlagsV3OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyFlagsV3Args) ToTemplatePrivateKeyFlagsV3OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyFlagsV3Output)
}

type TemplatePrivateKeyFlagsV3Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyFlagsV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV3)(nil)).Elem()
}

func (o TemplatePrivateKeyFlagsV3Output) ToTemplatePrivateKeyFlagsV3Output() TemplatePrivateKeyFlagsV3Output {
	return o
}

func (o TemplatePrivateKeyFlagsV3Output) ToTemplatePrivateKeyFlagsV3OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV3Output {
	return o
}

func (o TemplatePrivateKeyFlagsV3Output) ClientVersion() TemplateClientCompatibilityV3Output {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV3) TemplateClientCompatibilityV3 { return v.ClientVersion }).(TemplateClientCompatibilityV3Output)
}

func (o TemplatePrivateKeyFlagsV3Output) ExportableKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV3) *bool { return v.ExportableKey }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV3Output) RequireAlternateSignatureAlgorithm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV3) *bool { return v.RequireAlternateSignatureAlgorithm }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV3Output) StrongKeyProtectionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV3) *bool { return v.StrongKeyProtectionRequired }).(pulumi.BoolPtrOutput)
}

type TemplatePrivateKeyFlagsV4 struct {
	ClientVersion                      TemplateClientCompatibilityV4 `pulumi:"clientVersion"`
	ExportableKey                      *bool                         `pulumi:"exportableKey"`
	RequireAlternateSignatureAlgorithm *bool                         `pulumi:"requireAlternateSignatureAlgorithm"`
	RequireSameKeyRenewal              *bool                         `pulumi:"requireSameKeyRenewal"`
	StrongKeyProtectionRequired        *bool                         `pulumi:"strongKeyProtectionRequired"`
	UseLegacyProvider                  *bool                         `pulumi:"useLegacyProvider"`
}

// TemplatePrivateKeyFlagsV4Input is an input type that accepts TemplatePrivateKeyFlagsV4Args and TemplatePrivateKeyFlagsV4Output values.
// You can construct a concrete instance of `TemplatePrivateKeyFlagsV4Input` via:
//
//	TemplatePrivateKeyFlagsV4Args{...}
type TemplatePrivateKeyFlagsV4Input interface {
	pulumi.Input

	ToTemplatePrivateKeyFlagsV4Output() TemplatePrivateKeyFlagsV4Output
	ToTemplatePrivateKeyFlagsV4OutputWithContext(context.Context) TemplatePrivateKeyFlagsV4Output
}

type TemplatePrivateKeyFlagsV4Args struct {
	ClientVersion                      TemplateClientCompatibilityV4Input `pulumi:"clientVersion"`
	ExportableKey                      pulumi.BoolPtrInput                `pulumi:"exportableKey"`
	RequireAlternateSignatureAlgorithm pulumi.BoolPtrInput                `pulumi:"requireAlternateSignatureAlgorithm"`
	RequireSameKeyRenewal              pulumi.BoolPtrInput                `pulumi:"requireSameKeyRenewal"`
	StrongKeyProtectionRequired        pulumi.BoolPtrInput                `pulumi:"strongKeyProtectionRequired"`
	UseLegacyProvider                  pulumi.BoolPtrInput                `pulumi:"useLegacyProvider"`
}

func (TemplatePrivateKeyFlagsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV4)(nil)).Elem()
}

func (i TemplatePrivateKeyFlagsV4Args) ToTemplatePrivateKeyFlagsV4Output() TemplatePrivateKeyFlagsV4Output {
	return i.ToTemplatePrivateKeyFlagsV4OutputWithContext(context.Background())
}

func (i TemplatePrivateKeyFlagsV4Args) ToTemplatePrivateKeyFlagsV4OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePrivateKeyFlagsV4Output)
}

type TemplatePrivateKeyFlagsV4Output struct{ *pulumi.OutputState }

func (TemplatePrivateKeyFlagsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplatePrivateKeyFlagsV4)(nil)).Elem()
}

func (o TemplatePrivateKeyFlagsV4Output) ToTemplatePrivateKeyFlagsV4Output() TemplatePrivateKeyFlagsV4Output {
	return o
}

func (o TemplatePrivateKeyFlagsV4Output) ToTemplatePrivateKeyFlagsV4OutputWithContext(ctx context.Context) TemplatePrivateKeyFlagsV4Output {
	return o
}

func (o TemplatePrivateKeyFlagsV4Output) ClientVersion() TemplateClientCompatibilityV4Output {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) TemplateClientCompatibilityV4 { return v.ClientVersion }).(TemplateClientCompatibilityV4Output)
}

func (o TemplatePrivateKeyFlagsV4Output) ExportableKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) *bool { return v.ExportableKey }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV4Output) RequireAlternateSignatureAlgorithm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) *bool { return v.RequireAlternateSignatureAlgorithm }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV4Output) RequireSameKeyRenewal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) *bool { return v.RequireSameKeyRenewal }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV4Output) StrongKeyProtectionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) *bool { return v.StrongKeyProtectionRequired }).(pulumi.BoolPtrOutput)
}

func (o TemplatePrivateKeyFlagsV4Output) UseLegacyProvider() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplatePrivateKeyFlagsV4) *bool { return v.UseLegacyProvider }).(pulumi.BoolPtrOutput)
}

type TemplateSubjectNameFlagsV2 struct {
	RequireCommonName       *bool `pulumi:"requireCommonName"`
	RequireDirectoryPath    *bool `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          *bool `pulumi:"requireDnsAsCn"`
	RequireEmail            *bool `pulumi:"requireEmail"`
	SanRequireDirectoryGuid *bool `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           *bool `pulumi:"sanRequireDns"`
	SanRequireDomainDns     *bool `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         *bool `pulumi:"sanRequireEmail"`
	SanRequireSpn           *bool `pulumi:"sanRequireSpn"`
	SanRequireUpn           *bool `pulumi:"sanRequireUpn"`
}

// TemplateSubjectNameFlagsV2Input is an input type that accepts TemplateSubjectNameFlagsV2Args and TemplateSubjectNameFlagsV2Output values.
// You can construct a concrete instance of `TemplateSubjectNameFlagsV2Input` via:
//
//	TemplateSubjectNameFlagsV2Args{...}
type TemplateSubjectNameFlagsV2Input interface {
	pulumi.Input

	ToTemplateSubjectNameFlagsV2Output() TemplateSubjectNameFlagsV2Output
	ToTemplateSubjectNameFlagsV2OutputWithContext(context.Context) TemplateSubjectNameFlagsV2Output
}

type TemplateSubjectNameFlagsV2Args struct {
	RequireCommonName       pulumi.BoolPtrInput `pulumi:"requireCommonName"`
	RequireDirectoryPath    pulumi.BoolPtrInput `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          pulumi.BoolPtrInput `pulumi:"requireDnsAsCn"`
	RequireEmail            pulumi.BoolPtrInput `pulumi:"requireEmail"`
	SanRequireDirectoryGuid pulumi.BoolPtrInput `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           pulumi.BoolPtrInput `pulumi:"sanRequireDns"`
	SanRequireDomainDns     pulumi.BoolPtrInput `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         pulumi.BoolPtrInput `pulumi:"sanRequireEmail"`
	SanRequireSpn           pulumi.BoolPtrInput `pulumi:"sanRequireSpn"`
	SanRequireUpn           pulumi.BoolPtrInput `pulumi:"sanRequireUpn"`
}

func (TemplateSubjectNameFlagsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV2)(nil)).Elem()
}

func (i TemplateSubjectNameFlagsV2Args) ToTemplateSubjectNameFlagsV2Output() TemplateSubjectNameFlagsV2Output {
	return i.ToTemplateSubjectNameFlagsV2OutputWithContext(context.Background())
}

func (i TemplateSubjectNameFlagsV2Args) ToTemplateSubjectNameFlagsV2OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubjectNameFlagsV2Output)
}

type TemplateSubjectNameFlagsV2Output struct{ *pulumi.OutputState }

func (TemplateSubjectNameFlagsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV2)(nil)).Elem()
}

func (o TemplateSubjectNameFlagsV2Output) ToTemplateSubjectNameFlagsV2Output() TemplateSubjectNameFlagsV2Output {
	return o
}

func (o TemplateSubjectNameFlagsV2Output) ToTemplateSubjectNameFlagsV2OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV2Output {
	return o
}

func (o TemplateSubjectNameFlagsV2Output) RequireCommonName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.RequireCommonName }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) RequireDirectoryPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.RequireDirectoryPath }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) RequireDnsAsCn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.RequireDnsAsCn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) RequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.RequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireDirectoryGuid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireDirectoryGuid }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireDomainDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireDomainDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireSpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireSpn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV2Output) SanRequireUpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV2) *bool { return v.SanRequireUpn }).(pulumi.BoolPtrOutput)
}

type TemplateSubjectNameFlagsV3 struct {
	RequireCommonName       *bool `pulumi:"requireCommonName"`
	RequireDirectoryPath    *bool `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          *bool `pulumi:"requireDnsAsCn"`
	RequireEmail            *bool `pulumi:"requireEmail"`
	SanRequireDirectoryGuid *bool `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           *bool `pulumi:"sanRequireDns"`
	SanRequireDomainDns     *bool `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         *bool `pulumi:"sanRequireEmail"`
	SanRequireSpn           *bool `pulumi:"sanRequireSpn"`
	SanRequireUpn           *bool `pulumi:"sanRequireUpn"`
}

// TemplateSubjectNameFlagsV3Input is an input type that accepts TemplateSubjectNameFlagsV3Args and TemplateSubjectNameFlagsV3Output values.
// You can construct a concrete instance of `TemplateSubjectNameFlagsV3Input` via:
//
//	TemplateSubjectNameFlagsV3Args{...}
type TemplateSubjectNameFlagsV3Input interface {
	pulumi.Input

	ToTemplateSubjectNameFlagsV3Output() TemplateSubjectNameFlagsV3Output
	ToTemplateSubjectNameFlagsV3OutputWithContext(context.Context) TemplateSubjectNameFlagsV3Output
}

type TemplateSubjectNameFlagsV3Args struct {
	RequireCommonName       pulumi.BoolPtrInput `pulumi:"requireCommonName"`
	RequireDirectoryPath    pulumi.BoolPtrInput `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          pulumi.BoolPtrInput `pulumi:"requireDnsAsCn"`
	RequireEmail            pulumi.BoolPtrInput `pulumi:"requireEmail"`
	SanRequireDirectoryGuid pulumi.BoolPtrInput `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           pulumi.BoolPtrInput `pulumi:"sanRequireDns"`
	SanRequireDomainDns     pulumi.BoolPtrInput `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         pulumi.BoolPtrInput `pulumi:"sanRequireEmail"`
	SanRequireSpn           pulumi.BoolPtrInput `pulumi:"sanRequireSpn"`
	SanRequireUpn           pulumi.BoolPtrInput `pulumi:"sanRequireUpn"`
}

func (TemplateSubjectNameFlagsV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV3)(nil)).Elem()
}

func (i TemplateSubjectNameFlagsV3Args) ToTemplateSubjectNameFlagsV3Output() TemplateSubjectNameFlagsV3Output {
	return i.ToTemplateSubjectNameFlagsV3OutputWithContext(context.Background())
}

func (i TemplateSubjectNameFlagsV3Args) ToTemplateSubjectNameFlagsV3OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubjectNameFlagsV3Output)
}

type TemplateSubjectNameFlagsV3Output struct{ *pulumi.OutputState }

func (TemplateSubjectNameFlagsV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV3)(nil)).Elem()
}

func (o TemplateSubjectNameFlagsV3Output) ToTemplateSubjectNameFlagsV3Output() TemplateSubjectNameFlagsV3Output {
	return o
}

func (o TemplateSubjectNameFlagsV3Output) ToTemplateSubjectNameFlagsV3OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV3Output {
	return o
}

func (o TemplateSubjectNameFlagsV3Output) RequireCommonName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.RequireCommonName }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) RequireDirectoryPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.RequireDirectoryPath }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) RequireDnsAsCn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.RequireDnsAsCn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) RequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.RequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireDirectoryGuid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireDirectoryGuid }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireDomainDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireDomainDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireSpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireSpn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV3Output) SanRequireUpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV3) *bool { return v.SanRequireUpn }).(pulumi.BoolPtrOutput)
}

type TemplateSubjectNameFlagsV4 struct {
	RequireCommonName       *bool `pulumi:"requireCommonName"`
	RequireDirectoryPath    *bool `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          *bool `pulumi:"requireDnsAsCn"`
	RequireEmail            *bool `pulumi:"requireEmail"`
	SanRequireDirectoryGuid *bool `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           *bool `pulumi:"sanRequireDns"`
	SanRequireDomainDns     *bool `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         *bool `pulumi:"sanRequireEmail"`
	SanRequireSpn           *bool `pulumi:"sanRequireSpn"`
	SanRequireUpn           *bool `pulumi:"sanRequireUpn"`
}

// TemplateSubjectNameFlagsV4Input is an input type that accepts TemplateSubjectNameFlagsV4Args and TemplateSubjectNameFlagsV4Output values.
// You can construct a concrete instance of `TemplateSubjectNameFlagsV4Input` via:
//
//	TemplateSubjectNameFlagsV4Args{...}
type TemplateSubjectNameFlagsV4Input interface {
	pulumi.Input

	ToTemplateSubjectNameFlagsV4Output() TemplateSubjectNameFlagsV4Output
	ToTemplateSubjectNameFlagsV4OutputWithContext(context.Context) TemplateSubjectNameFlagsV4Output
}

type TemplateSubjectNameFlagsV4Args struct {
	RequireCommonName       pulumi.BoolPtrInput `pulumi:"requireCommonName"`
	RequireDirectoryPath    pulumi.BoolPtrInput `pulumi:"requireDirectoryPath"`
	RequireDnsAsCn          pulumi.BoolPtrInput `pulumi:"requireDnsAsCn"`
	RequireEmail            pulumi.BoolPtrInput `pulumi:"requireEmail"`
	SanRequireDirectoryGuid pulumi.BoolPtrInput `pulumi:"sanRequireDirectoryGuid"`
	SanRequireDns           pulumi.BoolPtrInput `pulumi:"sanRequireDns"`
	SanRequireDomainDns     pulumi.BoolPtrInput `pulumi:"sanRequireDomainDns"`
	SanRequireEmail         pulumi.BoolPtrInput `pulumi:"sanRequireEmail"`
	SanRequireSpn           pulumi.BoolPtrInput `pulumi:"sanRequireSpn"`
	SanRequireUpn           pulumi.BoolPtrInput `pulumi:"sanRequireUpn"`
}

func (TemplateSubjectNameFlagsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV4)(nil)).Elem()
}

func (i TemplateSubjectNameFlagsV4Args) ToTemplateSubjectNameFlagsV4Output() TemplateSubjectNameFlagsV4Output {
	return i.ToTemplateSubjectNameFlagsV4OutputWithContext(context.Background())
}

func (i TemplateSubjectNameFlagsV4Args) ToTemplateSubjectNameFlagsV4OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSubjectNameFlagsV4Output)
}

type TemplateSubjectNameFlagsV4Output struct{ *pulumi.OutputState }

func (TemplateSubjectNameFlagsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSubjectNameFlagsV4)(nil)).Elem()
}

func (o TemplateSubjectNameFlagsV4Output) ToTemplateSubjectNameFlagsV4Output() TemplateSubjectNameFlagsV4Output {
	return o
}

func (o TemplateSubjectNameFlagsV4Output) ToTemplateSubjectNameFlagsV4OutputWithContext(ctx context.Context) TemplateSubjectNameFlagsV4Output {
	return o
}

func (o TemplateSubjectNameFlagsV4Output) RequireCommonName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.RequireCommonName }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) RequireDirectoryPath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.RequireDirectoryPath }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) RequireDnsAsCn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.RequireDnsAsCn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) RequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.RequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireDirectoryGuid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireDirectoryGuid }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireDomainDns() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireDomainDns }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireEmail }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireSpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireSpn }).(pulumi.BoolPtrOutput)
}

func (o TemplateSubjectNameFlagsV4Output) SanRequireUpn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TemplateSubjectNameFlagsV4) *bool { return v.SanRequireUpn }).(pulumi.BoolPtrOutput)
}

type TemplateTags struct {
}

// TemplateTagsInput is an input type that accepts TemplateTagsArgs and TemplateTagsOutput values.
// You can construct a concrete instance of `TemplateTagsInput` via:
//
//	TemplateTagsArgs{...}
type TemplateTagsInput interface {
	pulumi.Input

	ToTemplateTagsOutput() TemplateTagsOutput
	ToTemplateTagsOutputWithContext(context.Context) TemplateTagsOutput
}

type TemplateTagsArgs struct {
}

func (TemplateTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTags)(nil)).Elem()
}

func (i TemplateTagsArgs) ToTemplateTagsOutput() TemplateTagsOutput {
	return i.ToTemplateTagsOutputWithContext(context.Background())
}

func (i TemplateTagsArgs) ToTemplateTagsOutputWithContext(ctx context.Context) TemplateTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTagsOutput)
}

func (i TemplateTagsArgs) ToTemplateTagsPtrOutput() TemplateTagsPtrOutput {
	return i.ToTemplateTagsPtrOutputWithContext(context.Background())
}

func (i TemplateTagsArgs) ToTemplateTagsPtrOutputWithContext(ctx context.Context) TemplateTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTagsOutput).ToTemplateTagsPtrOutputWithContext(ctx)
}

// TemplateTagsPtrInput is an input type that accepts TemplateTagsArgs, TemplateTagsPtr and TemplateTagsPtrOutput values.
// You can construct a concrete instance of `TemplateTagsPtrInput` via:
//
//	        TemplateTagsArgs{...}
//
//	or:
//
//	        nil
type TemplateTagsPtrInput interface {
	pulumi.Input

	ToTemplateTagsPtrOutput() TemplateTagsPtrOutput
	ToTemplateTagsPtrOutputWithContext(context.Context) TemplateTagsPtrOutput
}

type templateTagsPtrType TemplateTagsArgs

func TemplateTagsPtr(v *TemplateTagsArgs) TemplateTagsPtrInput {
	return (*templateTagsPtrType)(v)
}

func (*templateTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTags)(nil)).Elem()
}

func (i *templateTagsPtrType) ToTemplateTagsPtrOutput() TemplateTagsPtrOutput {
	return i.ToTemplateTagsPtrOutputWithContext(context.Background())
}

func (i *templateTagsPtrType) ToTemplateTagsPtrOutputWithContext(ctx context.Context) TemplateTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateTagsPtrOutput)
}

type TemplateTagsOutput struct{ *pulumi.OutputState }

func (TemplateTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateTags)(nil)).Elem()
}

func (o TemplateTagsOutput) ToTemplateTagsOutput() TemplateTagsOutput {
	return o
}

func (o TemplateTagsOutput) ToTemplateTagsOutputWithContext(ctx context.Context) TemplateTagsOutput {
	return o
}

func (o TemplateTagsOutput) ToTemplateTagsPtrOutput() TemplateTagsPtrOutput {
	return o.ToTemplateTagsPtrOutputWithContext(context.Background())
}

func (o TemplateTagsOutput) ToTemplateTagsPtrOutputWithContext(ctx context.Context) TemplateTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateTags) *TemplateTags {
		return &v
	}).(TemplateTagsPtrOutput)
}

type TemplateTagsPtrOutput struct{ *pulumi.OutputState }

func (TemplateTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateTags)(nil)).Elem()
}

func (o TemplateTagsPtrOutput) ToTemplateTagsPtrOutput() TemplateTagsPtrOutput {
	return o
}

func (o TemplateTagsPtrOutput) ToTemplateTagsPtrOutputWithContext(ctx context.Context) TemplateTagsPtrOutput {
	return o
}

func (o TemplateTagsPtrOutput) Elem() TemplateTagsOutput {
	return o.ApplyT(func(v *TemplateTags) TemplateTags {
		if v != nil {
			return *v
		}
		var ret TemplateTags
		return ret
	}).(TemplateTagsOutput)
}

type TemplateV2 struct {
	CertificateValidity  TemplateCertificateValidity    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV2      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV2           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV2         `pulumi:"generalFlags"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV2 `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV2      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV2     `pulumi:"subjectNameFlags"`
	SupersededTemplates  []string                       `pulumi:"supersededTemplates"`
}

// TemplateV2Input is an input type that accepts TemplateV2Args and TemplateV2Output values.
// You can construct a concrete instance of `TemplateV2Input` via:
//
//	TemplateV2Args{...}
type TemplateV2Input interface {
	pulumi.Input

	ToTemplateV2Output() TemplateV2Output
	ToTemplateV2OutputWithContext(context.Context) TemplateV2Output
}

type TemplateV2Args struct {
	CertificateValidity  TemplateCertificateValidityInput    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV2Input      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV2Input           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV2Input         `pulumi:"generalFlags"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV2Input `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV2Input      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV2Input     `pulumi:"subjectNameFlags"`
	SupersededTemplates  pulumi.StringArrayInput             `pulumi:"supersededTemplates"`
}

func (TemplateV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV2)(nil)).Elem()
}

func (i TemplateV2Args) ToTemplateV2Output() TemplateV2Output {
	return i.ToTemplateV2OutputWithContext(context.Background())
}

func (i TemplateV2Args) ToTemplateV2OutputWithContext(ctx context.Context) TemplateV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV2Output)
}

type TemplateV2Output struct{ *pulumi.OutputState }

func (TemplateV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV2)(nil)).Elem()
}

func (o TemplateV2Output) ToTemplateV2Output() TemplateV2Output {
	return o
}

func (o TemplateV2Output) ToTemplateV2OutputWithContext(ctx context.Context) TemplateV2Output {
	return o
}

func (o TemplateV2Output) CertificateValidity() TemplateCertificateValidityOutput {
	return o.ApplyT(func(v TemplateV2) TemplateCertificateValidity { return v.CertificateValidity }).(TemplateCertificateValidityOutput)
}

func (o TemplateV2Output) EnrollmentFlags() TemplateEnrollmentFlagsV2Output {
	return o.ApplyT(func(v TemplateV2) TemplateEnrollmentFlagsV2 { return v.EnrollmentFlags }).(TemplateEnrollmentFlagsV2Output)
}

func (o TemplateV2Output) Extensions() TemplateExtensionsV2Output {
	return o.ApplyT(func(v TemplateV2) TemplateExtensionsV2 { return v.Extensions }).(TemplateExtensionsV2Output)
}

func (o TemplateV2Output) GeneralFlags() TemplateGeneralFlagsV2Output {
	return o.ApplyT(func(v TemplateV2) TemplateGeneralFlagsV2 { return v.GeneralFlags }).(TemplateGeneralFlagsV2Output)
}

func (o TemplateV2Output) PrivateKeyAttributes() TemplatePrivateKeyAttributesV2Output {
	return o.ApplyT(func(v TemplateV2) TemplatePrivateKeyAttributesV2 { return v.PrivateKeyAttributes }).(TemplatePrivateKeyAttributesV2Output)
}

func (o TemplateV2Output) PrivateKeyFlags() TemplatePrivateKeyFlagsV2Output {
	return o.ApplyT(func(v TemplateV2) TemplatePrivateKeyFlagsV2 { return v.PrivateKeyFlags }).(TemplatePrivateKeyFlagsV2Output)
}

func (o TemplateV2Output) SubjectNameFlags() TemplateSubjectNameFlagsV2Output {
	return o.ApplyT(func(v TemplateV2) TemplateSubjectNameFlagsV2 { return v.SubjectNameFlags }).(TemplateSubjectNameFlagsV2Output)
}

func (o TemplateV2Output) SupersededTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateV2) []string { return v.SupersededTemplates }).(pulumi.StringArrayOutput)
}

type TemplateV3 struct {
	CertificateValidity  TemplateCertificateValidity    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV3      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV3           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV3         `pulumi:"generalFlags"`
	HashAlgorithm        TemplateHashAlgorithm          `pulumi:"hashAlgorithm"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV3 `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV3      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV3     `pulumi:"subjectNameFlags"`
	SupersededTemplates  []string                       `pulumi:"supersededTemplates"`
}

// TemplateV3Input is an input type that accepts TemplateV3Args and TemplateV3Output values.
// You can construct a concrete instance of `TemplateV3Input` via:
//
//	TemplateV3Args{...}
type TemplateV3Input interface {
	pulumi.Input

	ToTemplateV3Output() TemplateV3Output
	ToTemplateV3OutputWithContext(context.Context) TemplateV3Output
}

type TemplateV3Args struct {
	CertificateValidity  TemplateCertificateValidityInput    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV3Input      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV3Input           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV3Input         `pulumi:"generalFlags"`
	HashAlgorithm        TemplateHashAlgorithmInput          `pulumi:"hashAlgorithm"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV3Input `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV3Input      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV3Input     `pulumi:"subjectNameFlags"`
	SupersededTemplates  pulumi.StringArrayInput             `pulumi:"supersededTemplates"`
}

func (TemplateV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV3)(nil)).Elem()
}

func (i TemplateV3Args) ToTemplateV3Output() TemplateV3Output {
	return i.ToTemplateV3OutputWithContext(context.Background())
}

func (i TemplateV3Args) ToTemplateV3OutputWithContext(ctx context.Context) TemplateV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV3Output)
}

type TemplateV3Output struct{ *pulumi.OutputState }

func (TemplateV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV3)(nil)).Elem()
}

func (o TemplateV3Output) ToTemplateV3Output() TemplateV3Output {
	return o
}

func (o TemplateV3Output) ToTemplateV3OutputWithContext(ctx context.Context) TemplateV3Output {
	return o
}

func (o TemplateV3Output) CertificateValidity() TemplateCertificateValidityOutput {
	return o.ApplyT(func(v TemplateV3) TemplateCertificateValidity { return v.CertificateValidity }).(TemplateCertificateValidityOutput)
}

func (o TemplateV3Output) EnrollmentFlags() TemplateEnrollmentFlagsV3Output {
	return o.ApplyT(func(v TemplateV3) TemplateEnrollmentFlagsV3 { return v.EnrollmentFlags }).(TemplateEnrollmentFlagsV3Output)
}

func (o TemplateV3Output) Extensions() TemplateExtensionsV3Output {
	return o.ApplyT(func(v TemplateV3) TemplateExtensionsV3 { return v.Extensions }).(TemplateExtensionsV3Output)
}

func (o TemplateV3Output) GeneralFlags() TemplateGeneralFlagsV3Output {
	return o.ApplyT(func(v TemplateV3) TemplateGeneralFlagsV3 { return v.GeneralFlags }).(TemplateGeneralFlagsV3Output)
}

func (o TemplateV3Output) HashAlgorithm() TemplateHashAlgorithmOutput {
	return o.ApplyT(func(v TemplateV3) TemplateHashAlgorithm { return v.HashAlgorithm }).(TemplateHashAlgorithmOutput)
}

func (o TemplateV3Output) PrivateKeyAttributes() TemplatePrivateKeyAttributesV3Output {
	return o.ApplyT(func(v TemplateV3) TemplatePrivateKeyAttributesV3 { return v.PrivateKeyAttributes }).(TemplatePrivateKeyAttributesV3Output)
}

func (o TemplateV3Output) PrivateKeyFlags() TemplatePrivateKeyFlagsV3Output {
	return o.ApplyT(func(v TemplateV3) TemplatePrivateKeyFlagsV3 { return v.PrivateKeyFlags }).(TemplatePrivateKeyFlagsV3Output)
}

func (o TemplateV3Output) SubjectNameFlags() TemplateSubjectNameFlagsV3Output {
	return o.ApplyT(func(v TemplateV3) TemplateSubjectNameFlagsV3 { return v.SubjectNameFlags }).(TemplateSubjectNameFlagsV3Output)
}

func (o TemplateV3Output) SupersededTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateV3) []string { return v.SupersededTemplates }).(pulumi.StringArrayOutput)
}

type TemplateV4 struct {
	CertificateValidity  TemplateCertificateValidity    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV4      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV4           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV4         `pulumi:"generalFlags"`
	HashAlgorithm        *TemplateHashAlgorithm         `pulumi:"hashAlgorithm"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV4 `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV4      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV4     `pulumi:"subjectNameFlags"`
	SupersededTemplates  []string                       `pulumi:"supersededTemplates"`
}

// TemplateV4Input is an input type that accepts TemplateV4Args and TemplateV4Output values.
// You can construct a concrete instance of `TemplateV4Input` via:
//
//	TemplateV4Args{...}
type TemplateV4Input interface {
	pulumi.Input

	ToTemplateV4Output() TemplateV4Output
	ToTemplateV4OutputWithContext(context.Context) TemplateV4Output
}

type TemplateV4Args struct {
	CertificateValidity  TemplateCertificateValidityInput    `pulumi:"certificateValidity"`
	EnrollmentFlags      TemplateEnrollmentFlagsV4Input      `pulumi:"enrollmentFlags"`
	Extensions           TemplateExtensionsV4Input           `pulumi:"extensions"`
	GeneralFlags         TemplateGeneralFlagsV4Input         `pulumi:"generalFlags"`
	HashAlgorithm        TemplateHashAlgorithmPtrInput       `pulumi:"hashAlgorithm"`
	PrivateKeyAttributes TemplatePrivateKeyAttributesV4Input `pulumi:"privateKeyAttributes"`
	PrivateKeyFlags      TemplatePrivateKeyFlagsV4Input      `pulumi:"privateKeyFlags"`
	SubjectNameFlags     TemplateSubjectNameFlagsV4Input     `pulumi:"subjectNameFlags"`
	SupersededTemplates  pulumi.StringArrayInput             `pulumi:"supersededTemplates"`
}

func (TemplateV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV4)(nil)).Elem()
}

func (i TemplateV4Args) ToTemplateV4Output() TemplateV4Output {
	return i.ToTemplateV4OutputWithContext(context.Background())
}

func (i TemplateV4Args) ToTemplateV4OutputWithContext(ctx context.Context) TemplateV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateV4Output)
}

type TemplateV4Output struct{ *pulumi.OutputState }

func (TemplateV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateV4)(nil)).Elem()
}

func (o TemplateV4Output) ToTemplateV4Output() TemplateV4Output {
	return o
}

func (o TemplateV4Output) ToTemplateV4OutputWithContext(ctx context.Context) TemplateV4Output {
	return o
}

func (o TemplateV4Output) CertificateValidity() TemplateCertificateValidityOutput {
	return o.ApplyT(func(v TemplateV4) TemplateCertificateValidity { return v.CertificateValidity }).(TemplateCertificateValidityOutput)
}

func (o TemplateV4Output) EnrollmentFlags() TemplateEnrollmentFlagsV4Output {
	return o.ApplyT(func(v TemplateV4) TemplateEnrollmentFlagsV4 { return v.EnrollmentFlags }).(TemplateEnrollmentFlagsV4Output)
}

func (o TemplateV4Output) Extensions() TemplateExtensionsV4Output {
	return o.ApplyT(func(v TemplateV4) TemplateExtensionsV4 { return v.Extensions }).(TemplateExtensionsV4Output)
}

func (o TemplateV4Output) GeneralFlags() TemplateGeneralFlagsV4Output {
	return o.ApplyT(func(v TemplateV4) TemplateGeneralFlagsV4 { return v.GeneralFlags }).(TemplateGeneralFlagsV4Output)
}

func (o TemplateV4Output) HashAlgorithm() TemplateHashAlgorithmPtrOutput {
	return o.ApplyT(func(v TemplateV4) *TemplateHashAlgorithm { return v.HashAlgorithm }).(TemplateHashAlgorithmPtrOutput)
}

func (o TemplateV4Output) PrivateKeyAttributes() TemplatePrivateKeyAttributesV4Output {
	return o.ApplyT(func(v TemplateV4) TemplatePrivateKeyAttributesV4 { return v.PrivateKeyAttributes }).(TemplatePrivateKeyAttributesV4Output)
}

func (o TemplateV4Output) PrivateKeyFlags() TemplatePrivateKeyFlagsV4Output {
	return o.ApplyT(func(v TemplateV4) TemplatePrivateKeyFlagsV4 { return v.PrivateKeyFlags }).(TemplatePrivateKeyFlagsV4Output)
}

func (o TemplateV4Output) SubjectNameFlags() TemplateSubjectNameFlagsV4Output {
	return o.ApplyT(func(v TemplateV4) TemplateSubjectNameFlagsV4 { return v.SubjectNameFlags }).(TemplateSubjectNameFlagsV4Output)
}

func (o TemplateV4Output) SupersededTemplates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateV4) []string { return v.SupersededTemplates }).(pulumi.StringArrayOutput)
}

type TemplateValidityPeriod struct {
	Period     float64                    `pulumi:"period"`
	PeriodType TemplateValidityPeriodType `pulumi:"periodType"`
}

// TemplateValidityPeriodInput is an input type that accepts TemplateValidityPeriodArgs and TemplateValidityPeriodOutput values.
// You can construct a concrete instance of `TemplateValidityPeriodInput` via:
//
//	TemplateValidityPeriodArgs{...}
type TemplateValidityPeriodInput interface {
	pulumi.Input

	ToTemplateValidityPeriodOutput() TemplateValidityPeriodOutput
	ToTemplateValidityPeriodOutputWithContext(context.Context) TemplateValidityPeriodOutput
}

type TemplateValidityPeriodArgs struct {
	Period     pulumi.Float64Input             `pulumi:"period"`
	PeriodType TemplateValidityPeriodTypeInput `pulumi:"periodType"`
}

func (TemplateValidityPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidityPeriod)(nil)).Elem()
}

func (i TemplateValidityPeriodArgs) ToTemplateValidityPeriodOutput() TemplateValidityPeriodOutput {
	return i.ToTemplateValidityPeriodOutputWithContext(context.Background())
}

func (i TemplateValidityPeriodArgs) ToTemplateValidityPeriodOutputWithContext(ctx context.Context) TemplateValidityPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateValidityPeriodOutput)
}

type TemplateValidityPeriodOutput struct{ *pulumi.OutputState }

func (TemplateValidityPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateValidityPeriod)(nil)).Elem()
}

func (o TemplateValidityPeriodOutput) ToTemplateValidityPeriodOutput() TemplateValidityPeriodOutput {
	return o
}

func (o TemplateValidityPeriodOutput) ToTemplateValidityPeriodOutputWithContext(ctx context.Context) TemplateValidityPeriodOutput {
	return o
}

func (o TemplateValidityPeriodOutput) Period() pulumi.Float64Output {
	return o.ApplyT(func(v TemplateValidityPeriod) float64 { return v.Period }).(pulumi.Float64Output)
}

func (o TemplateValidityPeriodOutput) PeriodType() TemplateValidityPeriodTypeOutput {
	return o.ApplyT(func(v TemplateValidityPeriod) TemplateValidityPeriodType { return v.PeriodType }).(TemplateValidityPeriodTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTagsInput)(nil)).Elem(), ConnectorTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTagsPtrInput)(nil)).Elem(), ConnectorTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorVpcInformationInput)(nil)).Elem(), ConnectorVpcInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryRegistrationTagsInput)(nil)).Elem(), DirectoryRegistrationTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryRegistrationTagsPtrInput)(nil)).Elem(), DirectoryRegistrationTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateApplicationPoliciesInput)(nil)).Elem(), TemplateApplicationPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateApplicationPoliciesPtrInput)(nil)).Elem(), TemplateApplicationPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateApplicationPolicy0PropertiesInput)(nil)).Elem(), TemplateApplicationPolicy0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateApplicationPolicy1PropertiesInput)(nil)).Elem(), TemplateApplicationPolicy1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateCertificateValidityInput)(nil)).Elem(), TemplateCertificateValidityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefinition0PropertiesInput)(nil)).Elem(), TemplateDefinition0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefinition1PropertiesInput)(nil)).Elem(), TemplateDefinition1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateDefinition2PropertiesInput)(nil)).Elem(), TemplateDefinition2PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateEnrollmentFlagsV2Input)(nil)).Elem(), TemplateEnrollmentFlagsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateEnrollmentFlagsV3Input)(nil)).Elem(), TemplateEnrollmentFlagsV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateEnrollmentFlagsV4Input)(nil)).Elem(), TemplateEnrollmentFlagsV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExtensionsV2Input)(nil)).Elem(), TemplateExtensionsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExtensionsV3Input)(nil)).Elem(), TemplateExtensionsV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateExtensionsV4Input)(nil)).Elem(), TemplateExtensionsV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeneralFlagsV2Input)(nil)).Elem(), TemplateGeneralFlagsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeneralFlagsV3Input)(nil)).Elem(), TemplateGeneralFlagsV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGeneralFlagsV4Input)(nil)).Elem(), TemplateGeneralFlagsV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGroupAccessControlEntryAccessRightsInput)(nil)).Elem(), TemplateGroupAccessControlEntryAccessRightsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageInput)(nil)).Elem(), TemplateKeyUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageFlagsInput)(nil)).Elem(), TemplateKeyUsageFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageProperty0PropertiesInput)(nil)).Elem(), TemplateKeyUsageProperty0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageProperty0PropertiesPtrInput)(nil)).Elem(), TemplateKeyUsageProperty0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageProperty1PropertiesInput)(nil)).Elem(), TemplateKeyUsageProperty1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsageProperty1PropertiesPtrInput)(nil)).Elem(), TemplateKeyUsageProperty1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsagePropertyFlagsInput)(nil)).Elem(), TemplateKeyUsagePropertyFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateKeyUsagePropertyFlagsPtrInput)(nil)).Elem(), TemplateKeyUsagePropertyFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyAttributesV2Input)(nil)).Elem(), TemplatePrivateKeyAttributesV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyAttributesV3Input)(nil)).Elem(), TemplatePrivateKeyAttributesV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyAttributesV4Input)(nil)).Elem(), TemplatePrivateKeyAttributesV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyFlagsV2Input)(nil)).Elem(), TemplatePrivateKeyFlagsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyFlagsV3Input)(nil)).Elem(), TemplatePrivateKeyFlagsV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatePrivateKeyFlagsV4Input)(nil)).Elem(), TemplatePrivateKeyFlagsV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSubjectNameFlagsV2Input)(nil)).Elem(), TemplateSubjectNameFlagsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSubjectNameFlagsV3Input)(nil)).Elem(), TemplateSubjectNameFlagsV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSubjectNameFlagsV4Input)(nil)).Elem(), TemplateSubjectNameFlagsV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTagsInput)(nil)).Elem(), TemplateTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateTagsPtrInput)(nil)).Elem(), TemplateTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV2Input)(nil)).Elem(), TemplateV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV3Input)(nil)).Elem(), TemplateV3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateV4Input)(nil)).Elem(), TemplateV4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateValidityPeriodInput)(nil)).Elem(), TemplateValidityPeriodArgs{})
	pulumi.RegisterOutputType(ConnectorTagsOutput{})
	pulumi.RegisterOutputType(ConnectorTagsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorVpcInformationOutput{})
	pulumi.RegisterOutputType(DirectoryRegistrationTagsOutput{})
	pulumi.RegisterOutputType(DirectoryRegistrationTagsPtrOutput{})
	pulumi.RegisterOutputType(TemplateApplicationPoliciesOutput{})
	pulumi.RegisterOutputType(TemplateApplicationPoliciesPtrOutput{})
	pulumi.RegisterOutputType(TemplateApplicationPolicy0PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateApplicationPolicy1PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateCertificateValidityOutput{})
	pulumi.RegisterOutputType(TemplateDefinition0PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateDefinition1PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateDefinition2PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateEnrollmentFlagsV2Output{})
	pulumi.RegisterOutputType(TemplateEnrollmentFlagsV3Output{})
	pulumi.RegisterOutputType(TemplateEnrollmentFlagsV4Output{})
	pulumi.RegisterOutputType(TemplateExtensionsV2Output{})
	pulumi.RegisterOutputType(TemplateExtensionsV3Output{})
	pulumi.RegisterOutputType(TemplateExtensionsV4Output{})
	pulumi.RegisterOutputType(TemplateGeneralFlagsV2Output{})
	pulumi.RegisterOutputType(TemplateGeneralFlagsV3Output{})
	pulumi.RegisterOutputType(TemplateGeneralFlagsV4Output{})
	pulumi.RegisterOutputType(TemplateGroupAccessControlEntryAccessRightsOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageFlagsOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageProperty0PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageProperty0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageProperty1PropertiesOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsageProperty1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsagePropertyFlagsOutput{})
	pulumi.RegisterOutputType(TemplateKeyUsagePropertyFlagsPtrOutput{})
	pulumi.RegisterOutputType(TemplatePrivateKeyAttributesV2Output{})
	pulumi.RegisterOutputType(TemplatePrivateKeyAttributesV3Output{})
	pulumi.RegisterOutputType(TemplatePrivateKeyAttributesV4Output{})
	pulumi.RegisterOutputType(TemplatePrivateKeyFlagsV2Output{})
	pulumi.RegisterOutputType(TemplatePrivateKeyFlagsV3Output{})
	pulumi.RegisterOutputType(TemplatePrivateKeyFlagsV4Output{})
	pulumi.RegisterOutputType(TemplateSubjectNameFlagsV2Output{})
	pulumi.RegisterOutputType(TemplateSubjectNameFlagsV3Output{})
	pulumi.RegisterOutputType(TemplateSubjectNameFlagsV4Output{})
	pulumi.RegisterOutputType(TemplateTagsOutput{})
	pulumi.RegisterOutputType(TemplateTagsPtrOutput{})
	pulumi.RegisterOutputType(TemplateV2Output{})
	pulumi.RegisterOutputType(TemplateV3Output{})
	pulumi.RegisterOutputType(TemplateV4Output{})
	pulumi.RegisterOutputType(TemplateValidityPeriodOutput{})
}
