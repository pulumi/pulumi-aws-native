// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package certificatemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountExpiryEventsConfiguration struct {
	// This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
	DaysBeforeExpiry *int `pulumi:"daysBeforeExpiry"`
}

// AccountExpiryEventsConfigurationInput is an input type that accepts AccountExpiryEventsConfigurationArgs and AccountExpiryEventsConfigurationOutput values.
// You can construct a concrete instance of `AccountExpiryEventsConfigurationInput` via:
//
//	AccountExpiryEventsConfigurationArgs{...}
type AccountExpiryEventsConfigurationInput interface {
	pulumi.Input

	ToAccountExpiryEventsConfigurationOutput() AccountExpiryEventsConfigurationOutput
	ToAccountExpiryEventsConfigurationOutputWithContext(context.Context) AccountExpiryEventsConfigurationOutput
}

type AccountExpiryEventsConfigurationArgs struct {
	// This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
	DaysBeforeExpiry pulumi.IntPtrInput `pulumi:"daysBeforeExpiry"`
}

func (AccountExpiryEventsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountExpiryEventsConfiguration)(nil)).Elem()
}

func (i AccountExpiryEventsConfigurationArgs) ToAccountExpiryEventsConfigurationOutput() AccountExpiryEventsConfigurationOutput {
	return i.ToAccountExpiryEventsConfigurationOutputWithContext(context.Background())
}

func (i AccountExpiryEventsConfigurationArgs) ToAccountExpiryEventsConfigurationOutputWithContext(ctx context.Context) AccountExpiryEventsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountExpiryEventsConfigurationOutput)
}

type AccountExpiryEventsConfigurationOutput struct{ *pulumi.OutputState }

func (AccountExpiryEventsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountExpiryEventsConfiguration)(nil)).Elem()
}

func (o AccountExpiryEventsConfigurationOutput) ToAccountExpiryEventsConfigurationOutput() AccountExpiryEventsConfigurationOutput {
	return o
}

func (o AccountExpiryEventsConfigurationOutput) ToAccountExpiryEventsConfigurationOutputWithContext(ctx context.Context) AccountExpiryEventsConfigurationOutput {
	return o
}

// This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
func (o AccountExpiryEventsConfigurationOutput) DaysBeforeExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountExpiryEventsConfiguration) *int { return v.DaysBeforeExpiry }).(pulumi.IntPtrOutput)
}

type AccountExpiryEventsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AccountExpiryEventsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountExpiryEventsConfiguration)(nil)).Elem()
}

func (o AccountExpiryEventsConfigurationPtrOutput) ToAccountExpiryEventsConfigurationPtrOutput() AccountExpiryEventsConfigurationPtrOutput {
	return o
}

func (o AccountExpiryEventsConfigurationPtrOutput) ToAccountExpiryEventsConfigurationPtrOutputWithContext(ctx context.Context) AccountExpiryEventsConfigurationPtrOutput {
	return o
}

func (o AccountExpiryEventsConfigurationPtrOutput) Elem() AccountExpiryEventsConfigurationOutput {
	return o.ApplyT(func(v *AccountExpiryEventsConfiguration) AccountExpiryEventsConfiguration {
		if v != nil {
			return *v
		}
		var ret AccountExpiryEventsConfiguration
		return ret
	}).(AccountExpiryEventsConfigurationOutput)
}

// This option specifies the number of days prior to certificate expiration when ACM starts generating `EventBridge` events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.
func (o AccountExpiryEventsConfigurationPtrOutput) DaysBeforeExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountExpiryEventsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.DaysBeforeExpiry
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountExpiryEventsConfigurationInput)(nil)).Elem(), AccountExpiryEventsConfigurationArgs{})
	pulumi.RegisterOutputType(AccountExpiryEventsConfigurationOutput{})
	pulumi.RegisterOutputType(AccountExpiryEventsConfigurationPtrOutput{})
}
