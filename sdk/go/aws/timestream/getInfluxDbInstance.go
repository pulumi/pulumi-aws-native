// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timestream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::Timestream::InfluxDBInstance resource creates an InfluxDB instance.
func LookupInfluxDbInstance(ctx *pulumi.Context, args *LookupInfluxDbInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInfluxDbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInfluxDbInstanceResult
	err := ctx.Invoke("aws-native:timestream:getInfluxDbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInfluxDbInstanceArgs struct {
	// The service generated unique identifier for InfluxDB instance.
	Id string `pulumi:"id"`
}

type LookupInfluxDbInstanceResult struct {
	// The Amazon Resource Name (ARN) that is associated with the InfluxDB instance.
	Arn *string `pulumi:"arn"`
	// The Availability Zone (AZ) where the InfluxDB instance is created.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of an existing InfluxDB parameter group.
	DbParameterGroupIdentifier *string `pulumi:"dbParameterGroupIdentifier"`
	// The connection endpoint for the InfluxDB instance.
	Endpoint *string `pulumi:"endpoint"`
	// The service generated unique identifier for InfluxDB instance.
	Id *string `pulumi:"id"`
	// The Auth parameters secret Amazon Resource name (ARN) that is associated with the InfluxDB instance.
	InfluxAuthParametersSecretArn *string `pulumi:"influxAuthParametersSecretArn"`
	// Configuration for sending logs to customer account from the InfluxDB instance.
	LogDeliveryConfiguration *LogDeliveryConfigurationProperties `pulumi:"logDeliveryConfiguration"`
	// The Secondary Availability Zone (AZ) where the InfluxDB instance is created, if DeploymentType is set as WITH_MULTIAZ_STANDBY.
	SecondaryAvailabilityZone *string `pulumi:"secondaryAvailabilityZone"`
	// Status of the InfluxDB Instance.
	Status *InfluxDbInstanceStatus `pulumi:"status"`
	// An arbitrary set of tags (key-value pairs) for this DB instance.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupInfluxDbInstanceOutput(ctx *pulumi.Context, args LookupInfluxDbInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInfluxDbInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInfluxDbInstanceResult, error) {
			args := v.(LookupInfluxDbInstanceArgs)
			r, err := LookupInfluxDbInstance(ctx, &args, opts...)
			var s LookupInfluxDbInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInfluxDbInstanceResultOutput)
}

type LookupInfluxDbInstanceOutputArgs struct {
	// The service generated unique identifier for InfluxDB instance.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupInfluxDbInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfluxDbInstanceArgs)(nil)).Elem()
}

type LookupInfluxDbInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInfluxDbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfluxDbInstanceResult)(nil)).Elem()
}

func (o LookupInfluxDbInstanceResultOutput) ToLookupInfluxDbInstanceResultOutput() LookupInfluxDbInstanceResultOutput {
	return o
}

func (o LookupInfluxDbInstanceResultOutput) ToLookupInfluxDbInstanceResultOutputWithContext(ctx context.Context) LookupInfluxDbInstanceResultOutput {
	return o
}

// The Amazon Resource Name (ARN) that is associated with the InfluxDB instance.
func (o LookupInfluxDbInstanceResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The Availability Zone (AZ) where the InfluxDB instance is created.
func (o LookupInfluxDbInstanceResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of an existing InfluxDB parameter group.
func (o LookupInfluxDbInstanceResultOutput) DbParameterGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.DbParameterGroupIdentifier }).(pulumi.StringPtrOutput)
}

// The connection endpoint for the InfluxDB instance.
func (o LookupInfluxDbInstanceResultOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The service generated unique identifier for InfluxDB instance.
func (o LookupInfluxDbInstanceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Auth parameters secret Amazon Resource name (ARN) that is associated with the InfluxDB instance.
func (o LookupInfluxDbInstanceResultOutput) InfluxAuthParametersSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.InfluxAuthParametersSecretArn }).(pulumi.StringPtrOutput)
}

// Configuration for sending logs to customer account from the InfluxDB instance.
func (o LookupInfluxDbInstanceResultOutput) LogDeliveryConfiguration() LogDeliveryConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *LogDeliveryConfigurationProperties {
		return v.LogDeliveryConfiguration
	}).(LogDeliveryConfigurationPropertiesPtrOutput)
}

// The Secondary Availability Zone (AZ) where the InfluxDB instance is created, if DeploymentType is set as WITH_MULTIAZ_STANDBY.
func (o LookupInfluxDbInstanceResultOutput) SecondaryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *string { return v.SecondaryAvailabilityZone }).(pulumi.StringPtrOutput)
}

// Status of the InfluxDB Instance.
func (o LookupInfluxDbInstanceResultOutput) Status() InfluxDbInstanceStatusPtrOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) *InfluxDbInstanceStatus { return v.Status }).(InfluxDbInstanceStatusPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this DB instance.
func (o LookupInfluxDbInstanceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupInfluxDbInstanceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInfluxDbInstanceResultOutput{})
}
