// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package personalize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Personalize::Dataset.
func LookupDataset(ctx *pulumi.Context, args *LookupDatasetArgs, opts ...pulumi.InvokeOption) (*LookupDatasetResult, error) {
	var rv LookupDatasetResult
	err := ctx.Invoke("aws-native:personalize:getDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatasetArgs struct {
	// The ARN of the dataset
	DatasetArn string `pulumi:"datasetArn"`
}

type LookupDatasetResult struct {
	// The ARN of the dataset
	DatasetArn       *string           `pulumi:"datasetArn"`
	DatasetImportJob *DatasetImportJob `pulumi:"datasetImportJob"`
}

func LookupDatasetOutput(ctx *pulumi.Context, args LookupDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetResult, error) {
			args := v.(LookupDatasetArgs)
			r, err := LookupDataset(ctx, &args, opts...)
			var s LookupDatasetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatasetResultOutput)
}

type LookupDatasetOutputArgs struct {
	// The ARN of the dataset
	DatasetArn pulumi.StringInput `pulumi:"datasetArn"`
}

func (LookupDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetArgs)(nil)).Elem()
}

type LookupDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetResult)(nil)).Elem()
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutput() LookupDatasetResultOutput {
	return o
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutputWithContext(ctx context.Context) LookupDatasetResultOutput {
	return o
}

// The ARN of the dataset
func (o LookupDatasetResultOutput) DatasetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DatasetArn }).(pulumi.StringPtrOutput)
}

func (o LookupDatasetResultOutput) DatasetImportJob() DatasetImportJobPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *DatasetImportJob { return v.DatasetImportJob }).(DatasetImportJobPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetResultOutput{})
}
