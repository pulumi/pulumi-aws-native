// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package personalize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Personalize::Solution.
func LookupSolution(ctx *pulumi.Context, args *LookupSolutionArgs, opts ...pulumi.InvokeOption) (*LookupSolutionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSolutionResult
	err := ctx.Invoke("aws-native:personalize:getSolution", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSolutionArgs struct {
	// The Amazon Resource Name (ARN) of the solution.
	SolutionArn string `pulumi:"solutionArn"`
}

type LookupSolutionResult struct {
	// The Amazon Resource Name (ARN) of the solution.
	SolutionArn *string `pulumi:"solutionArn"`
}

func LookupSolutionOutput(ctx *pulumi.Context, args LookupSolutionOutputArgs, opts ...pulumi.InvokeOption) LookupSolutionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSolutionResultOutput, error) {
			args := v.(LookupSolutionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:personalize:getSolution", args, LookupSolutionResultOutput{}, options).(LookupSolutionResultOutput), nil
		}).(LookupSolutionResultOutput)
}

type LookupSolutionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the solution.
	SolutionArn pulumi.StringInput `pulumi:"solutionArn"`
}

func (LookupSolutionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionArgs)(nil)).Elem()
}

type LookupSolutionResultOutput struct{ *pulumi.OutputState }

func (LookupSolutionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSolutionResult)(nil)).Elem()
}

func (o LookupSolutionResultOutput) ToLookupSolutionResultOutput() LookupSolutionResultOutput {
	return o
}

func (o LookupSolutionResultOutput) ToLookupSolutionResultOutputWithContext(ctx context.Context) LookupSolutionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the solution.
func (o LookupSolutionResultOutput) SolutionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSolutionResult) *string { return v.SolutionArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSolutionResultOutput{})
}
