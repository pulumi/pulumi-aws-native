// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package personalize

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Initial DatasetImportJob for the created dataset
type DatasetImportJob struct {
	// The Amazon S3 bucket that contains the training data to import.
	DataSource *DatasetImportJobDataSourceProperties `pulumi:"dataSource"`
	// The ARN of the dataset that receives the imported data
	DatasetArn *string `pulumi:"datasetArn"`
	// The ARN of the dataset import job
	DatasetImportJobArn *string `pulumi:"datasetImportJobArn"`
	// The name for the dataset import job.
	JobName *string `pulumi:"jobName"`
	// The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
	RoleArn *string `pulumi:"roleArn"`
}

// DatasetImportJobInput is an input type that accepts DatasetImportJobArgs and DatasetImportJobOutput values.
// You can construct a concrete instance of `DatasetImportJobInput` via:
//
//          DatasetImportJobArgs{...}
type DatasetImportJobInput interface {
	pulumi.Input

	ToDatasetImportJobOutput() DatasetImportJobOutput
	ToDatasetImportJobOutputWithContext(context.Context) DatasetImportJobOutput
}

// Initial DatasetImportJob for the created dataset
type DatasetImportJobArgs struct {
	// The Amazon S3 bucket that contains the training data to import.
	DataSource DatasetImportJobDataSourcePropertiesPtrInput `pulumi:"dataSource"`
	// The ARN of the dataset that receives the imported data
	DatasetArn pulumi.StringPtrInput `pulumi:"datasetArn"`
	// The ARN of the dataset import job
	DatasetImportJobArn pulumi.StringPtrInput `pulumi:"datasetImportJobArn"`
	// The name for the dataset import job.
	JobName pulumi.StringPtrInput `pulumi:"jobName"`
	// The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (DatasetImportJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetImportJob)(nil)).Elem()
}

func (i DatasetImportJobArgs) ToDatasetImportJobOutput() DatasetImportJobOutput {
	return i.ToDatasetImportJobOutputWithContext(context.Background())
}

func (i DatasetImportJobArgs) ToDatasetImportJobOutputWithContext(ctx context.Context) DatasetImportJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobOutput)
}

func (i DatasetImportJobArgs) ToDatasetImportJobPtrOutput() DatasetImportJobPtrOutput {
	return i.ToDatasetImportJobPtrOutputWithContext(context.Background())
}

func (i DatasetImportJobArgs) ToDatasetImportJobPtrOutputWithContext(ctx context.Context) DatasetImportJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobOutput).ToDatasetImportJobPtrOutputWithContext(ctx)
}

// DatasetImportJobPtrInput is an input type that accepts DatasetImportJobArgs, DatasetImportJobPtr and DatasetImportJobPtrOutput values.
// You can construct a concrete instance of `DatasetImportJobPtrInput` via:
//
//          DatasetImportJobArgs{...}
//
//  or:
//
//          nil
type DatasetImportJobPtrInput interface {
	pulumi.Input

	ToDatasetImportJobPtrOutput() DatasetImportJobPtrOutput
	ToDatasetImportJobPtrOutputWithContext(context.Context) DatasetImportJobPtrOutput
}

type datasetImportJobPtrType DatasetImportJobArgs

func DatasetImportJobPtr(v *DatasetImportJobArgs) DatasetImportJobPtrInput {
	return (*datasetImportJobPtrType)(v)
}

func (*datasetImportJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetImportJob)(nil)).Elem()
}

func (i *datasetImportJobPtrType) ToDatasetImportJobPtrOutput() DatasetImportJobPtrOutput {
	return i.ToDatasetImportJobPtrOutputWithContext(context.Background())
}

func (i *datasetImportJobPtrType) ToDatasetImportJobPtrOutputWithContext(ctx context.Context) DatasetImportJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobPtrOutput)
}

// Initial DatasetImportJob for the created dataset
type DatasetImportJobOutput struct{ *pulumi.OutputState }

func (DatasetImportJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetImportJob)(nil)).Elem()
}

func (o DatasetImportJobOutput) ToDatasetImportJobOutput() DatasetImportJobOutput {
	return o
}

func (o DatasetImportJobOutput) ToDatasetImportJobOutputWithContext(ctx context.Context) DatasetImportJobOutput {
	return o
}

func (o DatasetImportJobOutput) ToDatasetImportJobPtrOutput() DatasetImportJobPtrOutput {
	return o.ToDatasetImportJobPtrOutputWithContext(context.Background())
}

func (o DatasetImportJobOutput) ToDatasetImportJobPtrOutputWithContext(ctx context.Context) DatasetImportJobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetImportJob) *DatasetImportJob {
		return &v
	}).(DatasetImportJobPtrOutput)
}

// The Amazon S3 bucket that contains the training data to import.
func (o DatasetImportJobOutput) DataSource() DatasetImportJobDataSourcePropertiesPtrOutput {
	return o.ApplyT(func(v DatasetImportJob) *DatasetImportJobDataSourceProperties { return v.DataSource }).(DatasetImportJobDataSourcePropertiesPtrOutput)
}

// The ARN of the dataset that receives the imported data
func (o DatasetImportJobOutput) DatasetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetImportJob) *string { return v.DatasetArn }).(pulumi.StringPtrOutput)
}

// The ARN of the dataset import job
func (o DatasetImportJobOutput) DatasetImportJobArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetImportJob) *string { return v.DatasetImportJobArn }).(pulumi.StringPtrOutput)
}

// The name for the dataset import job.
func (o DatasetImportJobOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetImportJob) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
func (o DatasetImportJobOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetImportJob) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type DatasetImportJobPtrOutput struct{ *pulumi.OutputState }

func (DatasetImportJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetImportJob)(nil)).Elem()
}

func (o DatasetImportJobPtrOutput) ToDatasetImportJobPtrOutput() DatasetImportJobPtrOutput {
	return o
}

func (o DatasetImportJobPtrOutput) ToDatasetImportJobPtrOutputWithContext(ctx context.Context) DatasetImportJobPtrOutput {
	return o
}

func (o DatasetImportJobPtrOutput) Elem() DatasetImportJobOutput {
	return o.ApplyT(func(v *DatasetImportJob) DatasetImportJob {
		if v != nil {
			return *v
		}
		var ret DatasetImportJob
		return ret
	}).(DatasetImportJobOutput)
}

// The Amazon S3 bucket that contains the training data to import.
func (o DatasetImportJobPtrOutput) DataSource() DatasetImportJobDataSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *DatasetImportJob) *DatasetImportJobDataSourceProperties {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(DatasetImportJobDataSourcePropertiesPtrOutput)
}

// The ARN of the dataset that receives the imported data
func (o DatasetImportJobPtrOutput) DatasetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetImportJob) *string {
		if v == nil {
			return nil
		}
		return v.DatasetArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the dataset import job
func (o DatasetImportJobPtrOutput) DatasetImportJobArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetImportJob) *string {
		if v == nil {
			return nil
		}
		return v.DatasetImportJobArn
	}).(pulumi.StringPtrOutput)
}

// The name for the dataset import job.
func (o DatasetImportJobPtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetImportJob) *string {
		if v == nil {
			return nil
		}
		return v.JobName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
func (o DatasetImportJobPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetImportJob) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 bucket that contains the training data to import.
type DatasetImportJobDataSourceProperties struct {
	// The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
	DataLocation *string `pulumi:"dataLocation"`
}

// DatasetImportJobDataSourcePropertiesInput is an input type that accepts DatasetImportJobDataSourcePropertiesArgs and DatasetImportJobDataSourcePropertiesOutput values.
// You can construct a concrete instance of `DatasetImportJobDataSourcePropertiesInput` via:
//
//          DatasetImportJobDataSourcePropertiesArgs{...}
type DatasetImportJobDataSourcePropertiesInput interface {
	pulumi.Input

	ToDatasetImportJobDataSourcePropertiesOutput() DatasetImportJobDataSourcePropertiesOutput
	ToDatasetImportJobDataSourcePropertiesOutputWithContext(context.Context) DatasetImportJobDataSourcePropertiesOutput
}

// The Amazon S3 bucket that contains the training data to import.
type DatasetImportJobDataSourcePropertiesArgs struct {
	// The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
	DataLocation pulumi.StringPtrInput `pulumi:"dataLocation"`
}

func (DatasetImportJobDataSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetImportJobDataSourceProperties)(nil)).Elem()
}

func (i DatasetImportJobDataSourcePropertiesArgs) ToDatasetImportJobDataSourcePropertiesOutput() DatasetImportJobDataSourcePropertiesOutput {
	return i.ToDatasetImportJobDataSourcePropertiesOutputWithContext(context.Background())
}

func (i DatasetImportJobDataSourcePropertiesArgs) ToDatasetImportJobDataSourcePropertiesOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobDataSourcePropertiesOutput)
}

func (i DatasetImportJobDataSourcePropertiesArgs) ToDatasetImportJobDataSourcePropertiesPtrOutput() DatasetImportJobDataSourcePropertiesPtrOutput {
	return i.ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i DatasetImportJobDataSourcePropertiesArgs) ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobDataSourcePropertiesOutput).ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(ctx)
}

// DatasetImportJobDataSourcePropertiesPtrInput is an input type that accepts DatasetImportJobDataSourcePropertiesArgs, DatasetImportJobDataSourcePropertiesPtr and DatasetImportJobDataSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `DatasetImportJobDataSourcePropertiesPtrInput` via:
//
//          DatasetImportJobDataSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type DatasetImportJobDataSourcePropertiesPtrInput interface {
	pulumi.Input

	ToDatasetImportJobDataSourcePropertiesPtrOutput() DatasetImportJobDataSourcePropertiesPtrOutput
	ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(context.Context) DatasetImportJobDataSourcePropertiesPtrOutput
}

type datasetImportJobDataSourcePropertiesPtrType DatasetImportJobDataSourcePropertiesArgs

func DatasetImportJobDataSourcePropertiesPtr(v *DatasetImportJobDataSourcePropertiesArgs) DatasetImportJobDataSourcePropertiesPtrInput {
	return (*datasetImportJobDataSourcePropertiesPtrType)(v)
}

func (*datasetImportJobDataSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetImportJobDataSourceProperties)(nil)).Elem()
}

func (i *datasetImportJobDataSourcePropertiesPtrType) ToDatasetImportJobDataSourcePropertiesPtrOutput() DatasetImportJobDataSourcePropertiesPtrOutput {
	return i.ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *datasetImportJobDataSourcePropertiesPtrType) ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetImportJobDataSourcePropertiesPtrOutput)
}

// The Amazon S3 bucket that contains the training data to import.
type DatasetImportJobDataSourcePropertiesOutput struct{ *pulumi.OutputState }

func (DatasetImportJobDataSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetImportJobDataSourceProperties)(nil)).Elem()
}

func (o DatasetImportJobDataSourcePropertiesOutput) ToDatasetImportJobDataSourcePropertiesOutput() DatasetImportJobDataSourcePropertiesOutput {
	return o
}

func (o DatasetImportJobDataSourcePropertiesOutput) ToDatasetImportJobDataSourcePropertiesOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesOutput {
	return o
}

func (o DatasetImportJobDataSourcePropertiesOutput) ToDatasetImportJobDataSourcePropertiesPtrOutput() DatasetImportJobDataSourcePropertiesPtrOutput {
	return o.ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o DatasetImportJobDataSourcePropertiesOutput) ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetImportJobDataSourceProperties) *DatasetImportJobDataSourceProperties {
		return &v
	}).(DatasetImportJobDataSourcePropertiesPtrOutput)
}

// The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
func (o DatasetImportJobDataSourcePropertiesOutput) DataLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetImportJobDataSourceProperties) *string { return v.DataLocation }).(pulumi.StringPtrOutput)
}

type DatasetImportJobDataSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DatasetImportJobDataSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetImportJobDataSourceProperties)(nil)).Elem()
}

func (o DatasetImportJobDataSourcePropertiesPtrOutput) ToDatasetImportJobDataSourcePropertiesPtrOutput() DatasetImportJobDataSourcePropertiesPtrOutput {
	return o
}

func (o DatasetImportJobDataSourcePropertiesPtrOutput) ToDatasetImportJobDataSourcePropertiesPtrOutputWithContext(ctx context.Context) DatasetImportJobDataSourcePropertiesPtrOutput {
	return o
}

func (o DatasetImportJobDataSourcePropertiesPtrOutput) Elem() DatasetImportJobDataSourcePropertiesOutput {
	return o.ApplyT(func(v *DatasetImportJobDataSourceProperties) DatasetImportJobDataSourceProperties {
		if v != nil {
			return *v
		}
		var ret DatasetImportJobDataSourceProperties
		return ret
	}).(DatasetImportJobDataSourcePropertiesOutput)
}

// The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
func (o DatasetImportJobDataSourcePropertiesPtrOutput) DataLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetImportJobDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataLocation
	}).(pulumi.StringPtrOutput)
}

// Provides the name and values of a Categorical hyperparameter.
type SolutionCategoricalHyperParameterRange struct {
	// The name of the hyperparameter.
	Name *string `pulumi:"name"`
	// A list of the categories for the hyperparameter.
	Values []string `pulumi:"values"`
}

// SolutionCategoricalHyperParameterRangeInput is an input type that accepts SolutionCategoricalHyperParameterRangeArgs and SolutionCategoricalHyperParameterRangeOutput values.
// You can construct a concrete instance of `SolutionCategoricalHyperParameterRangeInput` via:
//
//          SolutionCategoricalHyperParameterRangeArgs{...}
type SolutionCategoricalHyperParameterRangeInput interface {
	pulumi.Input

	ToSolutionCategoricalHyperParameterRangeOutput() SolutionCategoricalHyperParameterRangeOutput
	ToSolutionCategoricalHyperParameterRangeOutputWithContext(context.Context) SolutionCategoricalHyperParameterRangeOutput
}

// Provides the name and values of a Categorical hyperparameter.
type SolutionCategoricalHyperParameterRangeArgs struct {
	// The name of the hyperparameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of the categories for the hyperparameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SolutionCategoricalHyperParameterRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionCategoricalHyperParameterRange)(nil)).Elem()
}

func (i SolutionCategoricalHyperParameterRangeArgs) ToSolutionCategoricalHyperParameterRangeOutput() SolutionCategoricalHyperParameterRangeOutput {
	return i.ToSolutionCategoricalHyperParameterRangeOutputWithContext(context.Background())
}

func (i SolutionCategoricalHyperParameterRangeArgs) ToSolutionCategoricalHyperParameterRangeOutputWithContext(ctx context.Context) SolutionCategoricalHyperParameterRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionCategoricalHyperParameterRangeOutput)
}

// SolutionCategoricalHyperParameterRangeArrayInput is an input type that accepts SolutionCategoricalHyperParameterRangeArray and SolutionCategoricalHyperParameterRangeArrayOutput values.
// You can construct a concrete instance of `SolutionCategoricalHyperParameterRangeArrayInput` via:
//
//          SolutionCategoricalHyperParameterRangeArray{ SolutionCategoricalHyperParameterRangeArgs{...} }
type SolutionCategoricalHyperParameterRangeArrayInput interface {
	pulumi.Input

	ToSolutionCategoricalHyperParameterRangeArrayOutput() SolutionCategoricalHyperParameterRangeArrayOutput
	ToSolutionCategoricalHyperParameterRangeArrayOutputWithContext(context.Context) SolutionCategoricalHyperParameterRangeArrayOutput
}

type SolutionCategoricalHyperParameterRangeArray []SolutionCategoricalHyperParameterRangeInput

func (SolutionCategoricalHyperParameterRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionCategoricalHyperParameterRange)(nil)).Elem()
}

func (i SolutionCategoricalHyperParameterRangeArray) ToSolutionCategoricalHyperParameterRangeArrayOutput() SolutionCategoricalHyperParameterRangeArrayOutput {
	return i.ToSolutionCategoricalHyperParameterRangeArrayOutputWithContext(context.Background())
}

func (i SolutionCategoricalHyperParameterRangeArray) ToSolutionCategoricalHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionCategoricalHyperParameterRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionCategoricalHyperParameterRangeArrayOutput)
}

// Provides the name and values of a Categorical hyperparameter.
type SolutionCategoricalHyperParameterRangeOutput struct{ *pulumi.OutputState }

func (SolutionCategoricalHyperParameterRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionCategoricalHyperParameterRange)(nil)).Elem()
}

func (o SolutionCategoricalHyperParameterRangeOutput) ToSolutionCategoricalHyperParameterRangeOutput() SolutionCategoricalHyperParameterRangeOutput {
	return o
}

func (o SolutionCategoricalHyperParameterRangeOutput) ToSolutionCategoricalHyperParameterRangeOutputWithContext(ctx context.Context) SolutionCategoricalHyperParameterRangeOutput {
	return o
}

// The name of the hyperparameter.
func (o SolutionCategoricalHyperParameterRangeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionCategoricalHyperParameterRange) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of the categories for the hyperparameter.
func (o SolutionCategoricalHyperParameterRangeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionCategoricalHyperParameterRange) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SolutionCategoricalHyperParameterRangeArrayOutput struct{ *pulumi.OutputState }

func (SolutionCategoricalHyperParameterRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionCategoricalHyperParameterRange)(nil)).Elem()
}

func (o SolutionCategoricalHyperParameterRangeArrayOutput) ToSolutionCategoricalHyperParameterRangeArrayOutput() SolutionCategoricalHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionCategoricalHyperParameterRangeArrayOutput) ToSolutionCategoricalHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionCategoricalHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionCategoricalHyperParameterRangeArrayOutput) Index(i pulumi.IntInput) SolutionCategoricalHyperParameterRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionCategoricalHyperParameterRange {
		return vs[0].([]SolutionCategoricalHyperParameterRange)[vs[1].(int)]
	}).(SolutionCategoricalHyperParameterRangeOutput)
}

// The configuration to use with the solution. When performAutoML is set to true, Amazon Personalize only evaluates the autoMLConfig section of the solution configuration.
type SolutionConfig struct {
	// Lists the hyperparameter names and ranges.
	AlgorithmHyperParameters interface{} `pulumi:"algorithmHyperParameters"`
	// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
	AutoMLConfig *SolutionConfigAutoMLConfigProperties `pulumi:"autoMLConfig"`
	// Only events with a value greater than or equal to this threshold are used for training a model.
	EventValueThreshold *string `pulumi:"eventValueThreshold"`
	// Lists the feature transformation parameters.
	FeatureTransformationParameters interface{} `pulumi:"featureTransformationParameters"`
	// Describes the properties for hyperparameter optimization (HPO)
	HpoConfig *SolutionConfigHpoConfigProperties `pulumi:"hpoConfig"`
}

// SolutionConfigInput is an input type that accepts SolutionConfigArgs and SolutionConfigOutput values.
// You can construct a concrete instance of `SolutionConfigInput` via:
//
//          SolutionConfigArgs{...}
type SolutionConfigInput interface {
	pulumi.Input

	ToSolutionConfigOutput() SolutionConfigOutput
	ToSolutionConfigOutputWithContext(context.Context) SolutionConfigOutput
}

// The configuration to use with the solution. When performAutoML is set to true, Amazon Personalize only evaluates the autoMLConfig section of the solution configuration.
type SolutionConfigArgs struct {
	// Lists the hyperparameter names and ranges.
	AlgorithmHyperParameters pulumi.Input `pulumi:"algorithmHyperParameters"`
	// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
	AutoMLConfig SolutionConfigAutoMLConfigPropertiesPtrInput `pulumi:"autoMLConfig"`
	// Only events with a value greater than or equal to this threshold are used for training a model.
	EventValueThreshold pulumi.StringPtrInput `pulumi:"eventValueThreshold"`
	// Lists the feature transformation parameters.
	FeatureTransformationParameters pulumi.Input `pulumi:"featureTransformationParameters"`
	// Describes the properties for hyperparameter optimization (HPO)
	HpoConfig SolutionConfigHpoConfigPropertiesPtrInput `pulumi:"hpoConfig"`
}

func (SolutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfig)(nil)).Elem()
}

func (i SolutionConfigArgs) ToSolutionConfigOutput() SolutionConfigOutput {
	return i.ToSolutionConfigOutputWithContext(context.Background())
}

func (i SolutionConfigArgs) ToSolutionConfigOutputWithContext(ctx context.Context) SolutionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigOutput)
}

func (i SolutionConfigArgs) ToSolutionConfigPtrOutput() SolutionConfigPtrOutput {
	return i.ToSolutionConfigPtrOutputWithContext(context.Background())
}

func (i SolutionConfigArgs) ToSolutionConfigPtrOutputWithContext(ctx context.Context) SolutionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigOutput).ToSolutionConfigPtrOutputWithContext(ctx)
}

// SolutionConfigPtrInput is an input type that accepts SolutionConfigArgs, SolutionConfigPtr and SolutionConfigPtrOutput values.
// You can construct a concrete instance of `SolutionConfigPtrInput` via:
//
//          SolutionConfigArgs{...}
//
//  or:
//
//          nil
type SolutionConfigPtrInput interface {
	pulumi.Input

	ToSolutionConfigPtrOutput() SolutionConfigPtrOutput
	ToSolutionConfigPtrOutputWithContext(context.Context) SolutionConfigPtrOutput
}

type solutionConfigPtrType SolutionConfigArgs

func SolutionConfigPtr(v *SolutionConfigArgs) SolutionConfigPtrInput {
	return (*solutionConfigPtrType)(v)
}

func (*solutionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfig)(nil)).Elem()
}

func (i *solutionConfigPtrType) ToSolutionConfigPtrOutput() SolutionConfigPtrOutput {
	return i.ToSolutionConfigPtrOutputWithContext(context.Background())
}

func (i *solutionConfigPtrType) ToSolutionConfigPtrOutputWithContext(ctx context.Context) SolutionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigPtrOutput)
}

// The configuration to use with the solution. When performAutoML is set to true, Amazon Personalize only evaluates the autoMLConfig section of the solution configuration.
type SolutionConfigOutput struct{ *pulumi.OutputState }

func (SolutionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfig)(nil)).Elem()
}

func (o SolutionConfigOutput) ToSolutionConfigOutput() SolutionConfigOutput {
	return o
}

func (o SolutionConfigOutput) ToSolutionConfigOutputWithContext(ctx context.Context) SolutionConfigOutput {
	return o
}

func (o SolutionConfigOutput) ToSolutionConfigPtrOutput() SolutionConfigPtrOutput {
	return o.ToSolutionConfigPtrOutputWithContext(context.Background())
}

func (o SolutionConfigOutput) ToSolutionConfigPtrOutputWithContext(ctx context.Context) SolutionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfig) *SolutionConfig {
		return &v
	}).(SolutionConfigPtrOutput)
}

// Lists the hyperparameter names and ranges.
func (o SolutionConfigOutput) AlgorithmHyperParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SolutionConfig) interface{} { return v.AlgorithmHyperParameters }).(pulumi.AnyOutput)
}

// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
func (o SolutionConfigOutput) AutoMLConfig() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o.ApplyT(func(v SolutionConfig) *SolutionConfigAutoMLConfigProperties { return v.AutoMLConfig }).(SolutionConfigAutoMLConfigPropertiesPtrOutput)
}

// Only events with a value greater than or equal to this threshold are used for training a model.
func (o SolutionConfigOutput) EventValueThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfig) *string { return v.EventValueThreshold }).(pulumi.StringPtrOutput)
}

// Lists the feature transformation parameters.
func (o SolutionConfigOutput) FeatureTransformationParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v SolutionConfig) interface{} { return v.FeatureTransformationParameters }).(pulumi.AnyOutput)
}

// Describes the properties for hyperparameter optimization (HPO)
func (o SolutionConfigOutput) HpoConfig() SolutionConfigHpoConfigPropertiesPtrOutput {
	return o.ApplyT(func(v SolutionConfig) *SolutionConfigHpoConfigProperties { return v.HpoConfig }).(SolutionConfigHpoConfigPropertiesPtrOutput)
}

type SolutionConfigPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfig)(nil)).Elem()
}

func (o SolutionConfigPtrOutput) ToSolutionConfigPtrOutput() SolutionConfigPtrOutput {
	return o
}

func (o SolutionConfigPtrOutput) ToSolutionConfigPtrOutputWithContext(ctx context.Context) SolutionConfigPtrOutput {
	return o
}

func (o SolutionConfigPtrOutput) Elem() SolutionConfigOutput {
	return o.ApplyT(func(v *SolutionConfig) SolutionConfig {
		if v != nil {
			return *v
		}
		var ret SolutionConfig
		return ret
	}).(SolutionConfigOutput)
}

// Lists the hyperparameter names and ranges.
func (o SolutionConfigPtrOutput) AlgorithmHyperParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *SolutionConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.AlgorithmHyperParameters
	}).(pulumi.AnyOutput)
}

// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
func (o SolutionConfigPtrOutput) AutoMLConfig() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *SolutionConfig) *SolutionConfigAutoMLConfigProperties {
		if v == nil {
			return nil
		}
		return v.AutoMLConfig
	}).(SolutionConfigAutoMLConfigPropertiesPtrOutput)
}

// Only events with a value greater than or equal to this threshold are used for training a model.
func (o SolutionConfigPtrOutput) EventValueThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfig) *string {
		if v == nil {
			return nil
		}
		return v.EventValueThreshold
	}).(pulumi.StringPtrOutput)
}

// Lists the feature transformation parameters.
func (o SolutionConfigPtrOutput) FeatureTransformationParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *SolutionConfig) interface{} {
		if v == nil {
			return nil
		}
		return v.FeatureTransformationParameters
	}).(pulumi.AnyOutput)
}

// Describes the properties for hyperparameter optimization (HPO)
func (o SolutionConfigPtrOutput) HpoConfig() SolutionConfigHpoConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *SolutionConfig) *SolutionConfigHpoConfigProperties {
		if v == nil {
			return nil
		}
		return v.HpoConfig
	}).(SolutionConfigHpoConfigPropertiesPtrOutput)
}

// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
type SolutionConfigAutoMLConfigProperties struct {
	// The metric to optimize.
	MetricName *string `pulumi:"metricName"`
	// The list of candidate recipes.
	RecipeList []string `pulumi:"recipeList"`
}

// SolutionConfigAutoMLConfigPropertiesInput is an input type that accepts SolutionConfigAutoMLConfigPropertiesArgs and SolutionConfigAutoMLConfigPropertiesOutput values.
// You can construct a concrete instance of `SolutionConfigAutoMLConfigPropertiesInput` via:
//
//          SolutionConfigAutoMLConfigPropertiesArgs{...}
type SolutionConfigAutoMLConfigPropertiesInput interface {
	pulumi.Input

	ToSolutionConfigAutoMLConfigPropertiesOutput() SolutionConfigAutoMLConfigPropertiesOutput
	ToSolutionConfigAutoMLConfigPropertiesOutputWithContext(context.Context) SolutionConfigAutoMLConfigPropertiesOutput
}

// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
type SolutionConfigAutoMLConfigPropertiesArgs struct {
	// The metric to optimize.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The list of candidate recipes.
	RecipeList pulumi.StringArrayInput `pulumi:"recipeList"`
}

func (SolutionConfigAutoMLConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigAutoMLConfigProperties)(nil)).Elem()
}

func (i SolutionConfigAutoMLConfigPropertiesArgs) ToSolutionConfigAutoMLConfigPropertiesOutput() SolutionConfigAutoMLConfigPropertiesOutput {
	return i.ToSolutionConfigAutoMLConfigPropertiesOutputWithContext(context.Background())
}

func (i SolutionConfigAutoMLConfigPropertiesArgs) ToSolutionConfigAutoMLConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigAutoMLConfigPropertiesOutput)
}

func (i SolutionConfigAutoMLConfigPropertiesArgs) ToSolutionConfigAutoMLConfigPropertiesPtrOutput() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return i.ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionConfigAutoMLConfigPropertiesArgs) ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigAutoMLConfigPropertiesOutput).ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(ctx)
}

// SolutionConfigAutoMLConfigPropertiesPtrInput is an input type that accepts SolutionConfigAutoMLConfigPropertiesArgs, SolutionConfigAutoMLConfigPropertiesPtr and SolutionConfigAutoMLConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionConfigAutoMLConfigPropertiesPtrInput` via:
//
//          SolutionConfigAutoMLConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type SolutionConfigAutoMLConfigPropertiesPtrInput interface {
	pulumi.Input

	ToSolutionConfigAutoMLConfigPropertiesPtrOutput() SolutionConfigAutoMLConfigPropertiesPtrOutput
	ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(context.Context) SolutionConfigAutoMLConfigPropertiesPtrOutput
}

type solutionConfigAutoMLConfigPropertiesPtrType SolutionConfigAutoMLConfigPropertiesArgs

func SolutionConfigAutoMLConfigPropertiesPtr(v *SolutionConfigAutoMLConfigPropertiesArgs) SolutionConfigAutoMLConfigPropertiesPtrInput {
	return (*solutionConfigAutoMLConfigPropertiesPtrType)(v)
}

func (*solutionConfigAutoMLConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigAutoMLConfigProperties)(nil)).Elem()
}

func (i *solutionConfigAutoMLConfigPropertiesPtrType) ToSolutionConfigAutoMLConfigPropertiesPtrOutput() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return i.ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionConfigAutoMLConfigPropertiesPtrType) ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigAutoMLConfigPropertiesPtrOutput)
}

// The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
type SolutionConfigAutoMLConfigPropertiesOutput struct{ *pulumi.OutputState }

func (SolutionConfigAutoMLConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigAutoMLConfigProperties)(nil)).Elem()
}

func (o SolutionConfigAutoMLConfigPropertiesOutput) ToSolutionConfigAutoMLConfigPropertiesOutput() SolutionConfigAutoMLConfigPropertiesOutput {
	return o
}

func (o SolutionConfigAutoMLConfigPropertiesOutput) ToSolutionConfigAutoMLConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesOutput {
	return o
}

func (o SolutionConfigAutoMLConfigPropertiesOutput) ToSolutionConfigAutoMLConfigPropertiesPtrOutput() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o.ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionConfigAutoMLConfigPropertiesOutput) ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfigAutoMLConfigProperties) *SolutionConfigAutoMLConfigProperties {
		return &v
	}).(SolutionConfigAutoMLConfigPropertiesPtrOutput)
}

// The metric to optimize.
func (o SolutionConfigAutoMLConfigPropertiesOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfigAutoMLConfigProperties) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// The list of candidate recipes.
func (o SolutionConfigAutoMLConfigPropertiesOutput) RecipeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SolutionConfigAutoMLConfigProperties) []string { return v.RecipeList }).(pulumi.StringArrayOutput)
}

type SolutionConfigAutoMLConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigAutoMLConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigAutoMLConfigProperties)(nil)).Elem()
}

func (o SolutionConfigAutoMLConfigPropertiesPtrOutput) ToSolutionConfigAutoMLConfigPropertiesPtrOutput() SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigAutoMLConfigPropertiesPtrOutput) ToSolutionConfigAutoMLConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigAutoMLConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigAutoMLConfigPropertiesPtrOutput) Elem() SolutionConfigAutoMLConfigPropertiesOutput {
	return o.ApplyT(func(v *SolutionConfigAutoMLConfigProperties) SolutionConfigAutoMLConfigProperties {
		if v != nil {
			return *v
		}
		var ret SolutionConfigAutoMLConfigProperties
		return ret
	}).(SolutionConfigAutoMLConfigPropertiesOutput)
}

// The metric to optimize.
func (o SolutionConfigAutoMLConfigPropertiesPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfigAutoMLConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The list of candidate recipes.
func (o SolutionConfigAutoMLConfigPropertiesPtrOutput) RecipeList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SolutionConfigAutoMLConfigProperties) []string {
		if v == nil {
			return nil
		}
		return v.RecipeList
	}).(pulumi.StringArrayOutput)
}

// Describes the properties for hyperparameter optimization (HPO)
type SolutionConfigHpoConfigProperties struct {
	// The hyperparameters and their allowable ranges
	AlgorithmHyperParameterRanges *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties `pulumi:"algorithmHyperParameterRanges"`
	// The metric to optimize during HPO.
	HpoObjective *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties `pulumi:"hpoObjective"`
	// Describes the resource configuration for hyperparameter optimization (HPO).
	HpoResourceConfig *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties `pulumi:"hpoResourceConfig"`
}

// SolutionConfigHpoConfigPropertiesInput is an input type that accepts SolutionConfigHpoConfigPropertiesArgs and SolutionConfigHpoConfigPropertiesOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesInput` via:
//
//          SolutionConfigHpoConfigPropertiesArgs{...}
type SolutionConfigHpoConfigPropertiesInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesOutput
	ToSolutionConfigHpoConfigPropertiesOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesOutput
}

// Describes the properties for hyperparameter optimization (HPO)
type SolutionConfigHpoConfigPropertiesArgs struct {
	// The hyperparameters and their allowable ranges
	AlgorithmHyperParameterRanges SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput `pulumi:"algorithmHyperParameterRanges"`
	// The metric to optimize during HPO.
	HpoObjective SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput `pulumi:"hpoObjective"`
	// Describes the resource configuration for hyperparameter optimization (HPO).
	HpoResourceConfig SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput `pulumi:"hpoResourceConfig"`
}

func (SolutionConfigHpoConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigProperties)(nil)).Elem()
}

func (i SolutionConfigHpoConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesOutput {
	return i.ToSolutionConfigHpoConfigPropertiesOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesOutput)
}

func (i SolutionConfigHpoConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesOutput).ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(ctx)
}

// SolutionConfigHpoConfigPropertiesPtrInput is an input type that accepts SolutionConfigHpoConfigPropertiesArgs, SolutionConfigHpoConfigPropertiesPtr and SolutionConfigHpoConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesPtrInput` via:
//
//          SolutionConfigHpoConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type SolutionConfigHpoConfigPropertiesPtrInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesPtrOutput
	ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesPtrOutput
}

type solutionConfigHpoConfigPropertiesPtrType SolutionConfigHpoConfigPropertiesArgs

func SolutionConfigHpoConfigPropertiesPtr(v *SolutionConfigHpoConfigPropertiesArgs) SolutionConfigHpoConfigPropertiesPtrInput {
	return (*solutionConfigHpoConfigPropertiesPtrType)(v)
}

func (*solutionConfigHpoConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigProperties)(nil)).Elem()
}

func (i *solutionConfigHpoConfigPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionConfigHpoConfigPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesPtrOutput)
}

// Describes the properties for hyperparameter optimization (HPO)
type SolutionConfigHpoConfigPropertiesOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesPtrOutput {
	return o.ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionConfigHpoConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigProperties {
		return &v
	}).(SolutionConfigHpoConfigPropertiesPtrOutput)
}

// The hyperparameters and their allowable ranges
func (o SolutionConfigHpoConfigPropertiesOutput) AlgorithmHyperParameterRanges() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties {
		return v.AlgorithmHyperParameterRanges
	}).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput)
}

// The metric to optimize during HPO.
func (o SolutionConfigHpoConfigPropertiesOutput) HpoObjective() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties {
		return v.HpoObjective
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput)
}

// Describes the resource configuration for hyperparameter optimization (HPO).
func (o SolutionConfigHpoConfigPropertiesOutput) HpoResourceConfig() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties {
		return v.HpoResourceConfig
	}).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput)
}

type SolutionConfigHpoConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesPtrOutput) Elem() SolutionConfigHpoConfigPropertiesOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigProperties) SolutionConfigHpoConfigProperties {
		if v != nil {
			return *v
		}
		var ret SolutionConfigHpoConfigProperties
		return ret
	}).(SolutionConfigHpoConfigPropertiesOutput)
}

// The hyperparameters and their allowable ranges
func (o SolutionConfigHpoConfigPropertiesPtrOutput) AlgorithmHyperParameterRanges() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties {
		if v == nil {
			return nil
		}
		return v.AlgorithmHyperParameterRanges
	}).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput)
}

// The metric to optimize during HPO.
func (o SolutionConfigHpoConfigPropertiesPtrOutput) HpoObjective() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties {
		if v == nil {
			return nil
		}
		return v.HpoObjective
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput)
}

// Describes the resource configuration for hyperparameter optimization (HPO).
func (o SolutionConfigHpoConfigPropertiesPtrOutput) HpoResourceConfig() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigProperties) *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties {
		if v == nil {
			return nil
		}
		return v.HpoResourceConfig
	}).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput)
}

// The hyperparameters and their allowable ranges
type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties struct {
	// The categorical hyperparameters and their ranges.
	CategoricalHyperParameterRanges []SolutionCategoricalHyperParameterRange `pulumi:"categoricalHyperParameterRanges"`
	// The continuous hyperparameters and their ranges.
	ContinuousHyperParameterRanges []SolutionContinuousHyperParameterRange `pulumi:"continuousHyperParameterRanges"`
	// The integer hyperparameters and their ranges.
	IntegerHyperParameterRanges []SolutionIntegerHyperParameterRange `pulumi:"integerHyperParameterRanges"`
}

// SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesInput is an input type that accepts SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs and SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesInput` via:
//
//          SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs{...}
type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput
	ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput
}

// The hyperparameters and their allowable ranges
type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs struct {
	// The categorical hyperparameters and their ranges.
	CategoricalHyperParameterRanges SolutionCategoricalHyperParameterRangeArrayInput `pulumi:"categoricalHyperParameterRanges"`
	// The continuous hyperparameters and their ranges.
	ContinuousHyperParameterRanges SolutionContinuousHyperParameterRangeArrayInput `pulumi:"continuousHyperParameterRanges"`
	// The integer hyperparameters and their ranges.
	IntegerHyperParameterRanges SolutionIntegerHyperParameterRangeArrayInput `pulumi:"integerHyperParameterRanges"`
}

func (SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties)(nil)).Elem()
}

func (i SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput {
	return i.ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput)
}

func (i SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput).ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(ctx)
}

// SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput is an input type that accepts SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs, SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtr and SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput` via:
//
//          SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs{...}
//
//  or:
//
//          nil
type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput
	ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput
}

type solutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrType SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs

func SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtr(v *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput {
	return (*solutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrType)(v)
}

func (*solutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties)(nil)).Elem()
}

func (i *solutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput)
}

// The hyperparameters and their allowable ranges
type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o.ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties {
		return &v
	}).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput)
}

// The categorical hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) CategoricalHyperParameterRanges() SolutionCategoricalHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionCategoricalHyperParameterRange {
		return v.CategoricalHyperParameterRanges
	}).(SolutionCategoricalHyperParameterRangeArrayOutput)
}

// The continuous hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) ContinuousHyperParameterRanges() SolutionContinuousHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionContinuousHyperParameterRange {
		return v.ContinuousHyperParameterRanges
	}).(SolutionContinuousHyperParameterRangeArrayOutput)
}

// The integer hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput) IntegerHyperParameterRanges() SolutionIntegerHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionIntegerHyperParameterRange {
		return v.IntegerHyperParameterRanges
	}).(SolutionIntegerHyperParameterRangeArrayOutput)
}

type SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) Elem() SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties {
		if v != nil {
			return *v
		}
		var ret SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties
		return ret
	}).(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput)
}

// The categorical hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) CategoricalHyperParameterRanges() SolutionCategoricalHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionCategoricalHyperParameterRange {
		if v == nil {
			return nil
		}
		return v.CategoricalHyperParameterRanges
	}).(SolutionCategoricalHyperParameterRangeArrayOutput)
}

// The continuous hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) ContinuousHyperParameterRanges() SolutionContinuousHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionContinuousHyperParameterRange {
		if v == nil {
			return nil
		}
		return v.ContinuousHyperParameterRanges
	}).(SolutionContinuousHyperParameterRangeArrayOutput)
}

// The integer hyperparameters and their ranges.
func (o SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput) IntegerHyperParameterRanges() SolutionIntegerHyperParameterRangeArrayOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesProperties) []SolutionIntegerHyperParameterRange {
		if v == nil {
			return nil
		}
		return v.IntegerHyperParameterRanges
	}).(SolutionIntegerHyperParameterRangeArrayOutput)
}

// The metric to optimize during HPO.
type SolutionConfigHpoConfigPropertiesHpoObjectiveProperties struct {
	// The name of the metric
	MetricName *string `pulumi:"metricName"`
	// A regular expression for finding the metric in the training job logs.
	MetricRegex *string `pulumi:"metricRegex"`
	// The type of the metric. Valid values are Maximize and Minimize.
	Type *SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType `pulumi:"type"`
}

// SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesInput is an input type that accepts SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs and SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesInput` via:
//
//          SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs{...}
type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput
	ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput
}

// The metric to optimize during HPO.
type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs struct {
	// The name of the metric
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// A regular expression for finding the metric in the training job logs.
	MetricRegex pulumi.StringPtrInput `pulumi:"metricRegex"`
	// The type of the metric. Valid values are Maximize and Minimize.
	Type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesTypePtrInput `pulumi:"type"`
}

func (SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoObjectiveProperties)(nil)).Elem()
}

func (i SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput)
}

func (i SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput).ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(ctx)
}

// SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput is an input type that accepts SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs, SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtr and SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput` via:
//
//          SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs{...}
//
//  or:
//
//          nil
type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput
	ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput
}

type solutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrType SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs

func SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtr(v *SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput {
	return (*solutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrType)(v)
}

func (*solutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesHpoObjectiveProperties)(nil)).Elem()
}

func (i *solutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrType) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrType) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput)
}

// The metric to optimize during HPO.
type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoObjectiveProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o.ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties {
		return &v
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput)
}

// The name of the metric
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// A regular expression for finding the metric in the training job logs.
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) MetricRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *string { return v.MetricRegex }).(pulumi.StringPtrOutput)
}

// The type of the metric. Valid values are Maximize and Minimize.
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput) Type() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesTypePtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType {
		return v.Type
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesTypePtrOutput)
}

type SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesHpoObjectiveProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) Elem() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) SolutionConfigHpoConfigPropertiesHpoObjectiveProperties {
		if v != nil {
			return *v
		}
		var ret SolutionConfigHpoConfigPropertiesHpoObjectiveProperties
		return ret
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput)
}

// The name of the metric
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// A regular expression for finding the metric in the training job logs.
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) MetricRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *string {
		if v == nil {
			return nil
		}
		return v.MetricRegex
	}).(pulumi.StringPtrOutput)
}

// The type of the metric. Valid values are Maximize and Minimize.
func (o SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput) Type() SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesTypePtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoObjectiveProperties) *SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesTypePtrOutput)
}

// Describes the resource configuration for hyperparameter optimization (HPO).
type SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties struct {
	// The maximum number of training jobs when you create a solution version. The maximum value for maxNumberOfTrainingJobs is 40.
	MaxNumberOfTrainingJobs *string `pulumi:"maxNumberOfTrainingJobs"`
	// The maximum number of parallel training jobs when you create a solution version. The maximum value for maxParallelTrainingJobs is 10.
	MaxParallelTrainingJobs *string `pulumi:"maxParallelTrainingJobs"`
}

// SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesInput is an input type that accepts SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs and SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesInput` via:
//
//          SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs{...}
type SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput
	ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput
}

// Describes the resource configuration for hyperparameter optimization (HPO).
type SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs struct {
	// The maximum number of training jobs when you create a solution version. The maximum value for maxNumberOfTrainingJobs is 40.
	MaxNumberOfTrainingJobs pulumi.StringPtrInput `pulumi:"maxNumberOfTrainingJobs"`
	// The maximum number of parallel training jobs when you create a solution version. The maximum value for maxParallelTrainingJobs is 10.
	MaxParallelTrainingJobs pulumi.StringPtrInput `pulumi:"maxParallelTrainingJobs"`
}

func (SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties)(nil)).Elem()
}

func (i SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput)
}

func (i SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput).ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(ctx)
}

// SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput is an input type that accepts SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs, SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtr and SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput` via:
//
//          SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput interface {
	pulumi.Input

	ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput
	ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput
}

type solutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrType SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs

func SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtr(v *SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput {
	return (*solutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrType)(v)
}

func (*solutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties)(nil)).Elem()
}

func (i *solutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return i.ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *solutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrType) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput)
}

// Describes the resource configuration for hyperparameter optimization (HPO).
type SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o.ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties {
		return &v
	}).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput)
}

// The maximum number of training jobs when you create a solution version. The maximum value for maxNumberOfTrainingJobs is 40.
func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) MaxNumberOfTrainingJobs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) *string {
		return v.MaxNumberOfTrainingJobs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of parallel training jobs when you create a solution version. The maximum value for maxParallelTrainingJobs is 10.
func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput) MaxParallelTrainingJobs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) *string {
		return v.MaxParallelTrainingJobs
	}).(pulumi.StringPtrOutput)
}

type SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties)(nil)).Elem()
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) ToSolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutputWithContext(ctx context.Context) SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput {
	return o
}

func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) Elem() SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties {
		if v != nil {
			return *v
		}
		var ret SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties
		return ret
	}).(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput)
}

// The maximum number of training jobs when you create a solution version. The maximum value for maxNumberOfTrainingJobs is 40.
func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) MaxNumberOfTrainingJobs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfTrainingJobs
	}).(pulumi.StringPtrOutput)
}

// The maximum number of parallel training jobs when you create a solution version. The maximum value for maxParallelTrainingJobs is 10.
func (o SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput) MaxParallelTrainingJobs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolutionConfigHpoConfigPropertiesHpoResourceConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.MaxParallelTrainingJobs
	}).(pulumi.StringPtrOutput)
}

// Provides the name and range of a continuous hyperparameter.
type SolutionContinuousHyperParameterRange struct {
	// The maximum allowable value for the hyperparameter.
	MaxValue *float64 `pulumi:"maxValue"`
	// The minimum allowable value for the hyperparameter.
	MinValue *float64 `pulumi:"minValue"`
	// The name of the hyperparameter.
	Name *string `pulumi:"name"`
}

// SolutionContinuousHyperParameterRangeInput is an input type that accepts SolutionContinuousHyperParameterRangeArgs and SolutionContinuousHyperParameterRangeOutput values.
// You can construct a concrete instance of `SolutionContinuousHyperParameterRangeInput` via:
//
//          SolutionContinuousHyperParameterRangeArgs{...}
type SolutionContinuousHyperParameterRangeInput interface {
	pulumi.Input

	ToSolutionContinuousHyperParameterRangeOutput() SolutionContinuousHyperParameterRangeOutput
	ToSolutionContinuousHyperParameterRangeOutputWithContext(context.Context) SolutionContinuousHyperParameterRangeOutput
}

// Provides the name and range of a continuous hyperparameter.
type SolutionContinuousHyperParameterRangeArgs struct {
	// The maximum allowable value for the hyperparameter.
	MaxValue pulumi.Float64PtrInput `pulumi:"maxValue"`
	// The minimum allowable value for the hyperparameter.
	MinValue pulumi.Float64PtrInput `pulumi:"minValue"`
	// The name of the hyperparameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionContinuousHyperParameterRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionContinuousHyperParameterRange)(nil)).Elem()
}

func (i SolutionContinuousHyperParameterRangeArgs) ToSolutionContinuousHyperParameterRangeOutput() SolutionContinuousHyperParameterRangeOutput {
	return i.ToSolutionContinuousHyperParameterRangeOutputWithContext(context.Background())
}

func (i SolutionContinuousHyperParameterRangeArgs) ToSolutionContinuousHyperParameterRangeOutputWithContext(ctx context.Context) SolutionContinuousHyperParameterRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionContinuousHyperParameterRangeOutput)
}

// SolutionContinuousHyperParameterRangeArrayInput is an input type that accepts SolutionContinuousHyperParameterRangeArray and SolutionContinuousHyperParameterRangeArrayOutput values.
// You can construct a concrete instance of `SolutionContinuousHyperParameterRangeArrayInput` via:
//
//          SolutionContinuousHyperParameterRangeArray{ SolutionContinuousHyperParameterRangeArgs{...} }
type SolutionContinuousHyperParameterRangeArrayInput interface {
	pulumi.Input

	ToSolutionContinuousHyperParameterRangeArrayOutput() SolutionContinuousHyperParameterRangeArrayOutput
	ToSolutionContinuousHyperParameterRangeArrayOutputWithContext(context.Context) SolutionContinuousHyperParameterRangeArrayOutput
}

type SolutionContinuousHyperParameterRangeArray []SolutionContinuousHyperParameterRangeInput

func (SolutionContinuousHyperParameterRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionContinuousHyperParameterRange)(nil)).Elem()
}

func (i SolutionContinuousHyperParameterRangeArray) ToSolutionContinuousHyperParameterRangeArrayOutput() SolutionContinuousHyperParameterRangeArrayOutput {
	return i.ToSolutionContinuousHyperParameterRangeArrayOutputWithContext(context.Background())
}

func (i SolutionContinuousHyperParameterRangeArray) ToSolutionContinuousHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionContinuousHyperParameterRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionContinuousHyperParameterRangeArrayOutput)
}

// Provides the name and range of a continuous hyperparameter.
type SolutionContinuousHyperParameterRangeOutput struct{ *pulumi.OutputState }

func (SolutionContinuousHyperParameterRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionContinuousHyperParameterRange)(nil)).Elem()
}

func (o SolutionContinuousHyperParameterRangeOutput) ToSolutionContinuousHyperParameterRangeOutput() SolutionContinuousHyperParameterRangeOutput {
	return o
}

func (o SolutionContinuousHyperParameterRangeOutput) ToSolutionContinuousHyperParameterRangeOutputWithContext(ctx context.Context) SolutionContinuousHyperParameterRangeOutput {
	return o
}

// The maximum allowable value for the hyperparameter.
func (o SolutionContinuousHyperParameterRangeOutput) MaxValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SolutionContinuousHyperParameterRange) *float64 { return v.MaxValue }).(pulumi.Float64PtrOutput)
}

// The minimum allowable value for the hyperparameter.
func (o SolutionContinuousHyperParameterRangeOutput) MinValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SolutionContinuousHyperParameterRange) *float64 { return v.MinValue }).(pulumi.Float64PtrOutput)
}

// The name of the hyperparameter.
func (o SolutionContinuousHyperParameterRangeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionContinuousHyperParameterRange) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionContinuousHyperParameterRangeArrayOutput struct{ *pulumi.OutputState }

func (SolutionContinuousHyperParameterRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionContinuousHyperParameterRange)(nil)).Elem()
}

func (o SolutionContinuousHyperParameterRangeArrayOutput) ToSolutionContinuousHyperParameterRangeArrayOutput() SolutionContinuousHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionContinuousHyperParameterRangeArrayOutput) ToSolutionContinuousHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionContinuousHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionContinuousHyperParameterRangeArrayOutput) Index(i pulumi.IntInput) SolutionContinuousHyperParameterRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionContinuousHyperParameterRange {
		return vs[0].([]SolutionContinuousHyperParameterRange)[vs[1].(int)]
	}).(SolutionContinuousHyperParameterRangeOutput)
}

// Provides the name and range of an integer-valued hyperparameter.
type SolutionIntegerHyperParameterRange struct {
	// The maximum allowable value for the hyperparameter.
	MaxValue *int `pulumi:"maxValue"`
	// The minimum allowable value for the hyperparameter.
	MinValue *int `pulumi:"minValue"`
	// The name of the hyperparameter.
	Name *string `pulumi:"name"`
}

// SolutionIntegerHyperParameterRangeInput is an input type that accepts SolutionIntegerHyperParameterRangeArgs and SolutionIntegerHyperParameterRangeOutput values.
// You can construct a concrete instance of `SolutionIntegerHyperParameterRangeInput` via:
//
//          SolutionIntegerHyperParameterRangeArgs{...}
type SolutionIntegerHyperParameterRangeInput interface {
	pulumi.Input

	ToSolutionIntegerHyperParameterRangeOutput() SolutionIntegerHyperParameterRangeOutput
	ToSolutionIntegerHyperParameterRangeOutputWithContext(context.Context) SolutionIntegerHyperParameterRangeOutput
}

// Provides the name and range of an integer-valued hyperparameter.
type SolutionIntegerHyperParameterRangeArgs struct {
	// The maximum allowable value for the hyperparameter.
	MaxValue pulumi.IntPtrInput `pulumi:"maxValue"`
	// The minimum allowable value for the hyperparameter.
	MinValue pulumi.IntPtrInput `pulumi:"minValue"`
	// The name of the hyperparameter.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SolutionIntegerHyperParameterRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionIntegerHyperParameterRange)(nil)).Elem()
}

func (i SolutionIntegerHyperParameterRangeArgs) ToSolutionIntegerHyperParameterRangeOutput() SolutionIntegerHyperParameterRangeOutput {
	return i.ToSolutionIntegerHyperParameterRangeOutputWithContext(context.Background())
}

func (i SolutionIntegerHyperParameterRangeArgs) ToSolutionIntegerHyperParameterRangeOutputWithContext(ctx context.Context) SolutionIntegerHyperParameterRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionIntegerHyperParameterRangeOutput)
}

// SolutionIntegerHyperParameterRangeArrayInput is an input type that accepts SolutionIntegerHyperParameterRangeArray and SolutionIntegerHyperParameterRangeArrayOutput values.
// You can construct a concrete instance of `SolutionIntegerHyperParameterRangeArrayInput` via:
//
//          SolutionIntegerHyperParameterRangeArray{ SolutionIntegerHyperParameterRangeArgs{...} }
type SolutionIntegerHyperParameterRangeArrayInput interface {
	pulumi.Input

	ToSolutionIntegerHyperParameterRangeArrayOutput() SolutionIntegerHyperParameterRangeArrayOutput
	ToSolutionIntegerHyperParameterRangeArrayOutputWithContext(context.Context) SolutionIntegerHyperParameterRangeArrayOutput
}

type SolutionIntegerHyperParameterRangeArray []SolutionIntegerHyperParameterRangeInput

func (SolutionIntegerHyperParameterRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionIntegerHyperParameterRange)(nil)).Elem()
}

func (i SolutionIntegerHyperParameterRangeArray) ToSolutionIntegerHyperParameterRangeArrayOutput() SolutionIntegerHyperParameterRangeArrayOutput {
	return i.ToSolutionIntegerHyperParameterRangeArrayOutputWithContext(context.Background())
}

func (i SolutionIntegerHyperParameterRangeArray) ToSolutionIntegerHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionIntegerHyperParameterRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolutionIntegerHyperParameterRangeArrayOutput)
}

// Provides the name and range of an integer-valued hyperparameter.
type SolutionIntegerHyperParameterRangeOutput struct{ *pulumi.OutputState }

func (SolutionIntegerHyperParameterRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SolutionIntegerHyperParameterRange)(nil)).Elem()
}

func (o SolutionIntegerHyperParameterRangeOutput) ToSolutionIntegerHyperParameterRangeOutput() SolutionIntegerHyperParameterRangeOutput {
	return o
}

func (o SolutionIntegerHyperParameterRangeOutput) ToSolutionIntegerHyperParameterRangeOutputWithContext(ctx context.Context) SolutionIntegerHyperParameterRangeOutput {
	return o
}

// The maximum allowable value for the hyperparameter.
func (o SolutionIntegerHyperParameterRangeOutput) MaxValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SolutionIntegerHyperParameterRange) *int { return v.MaxValue }).(pulumi.IntPtrOutput)
}

// The minimum allowable value for the hyperparameter.
func (o SolutionIntegerHyperParameterRangeOutput) MinValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SolutionIntegerHyperParameterRange) *int { return v.MinValue }).(pulumi.IntPtrOutput)
}

// The name of the hyperparameter.
func (o SolutionIntegerHyperParameterRangeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SolutionIntegerHyperParameterRange) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SolutionIntegerHyperParameterRangeArrayOutput struct{ *pulumi.OutputState }

func (SolutionIntegerHyperParameterRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SolutionIntegerHyperParameterRange)(nil)).Elem()
}

func (o SolutionIntegerHyperParameterRangeArrayOutput) ToSolutionIntegerHyperParameterRangeArrayOutput() SolutionIntegerHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionIntegerHyperParameterRangeArrayOutput) ToSolutionIntegerHyperParameterRangeArrayOutputWithContext(ctx context.Context) SolutionIntegerHyperParameterRangeArrayOutput {
	return o
}

func (o SolutionIntegerHyperParameterRangeArrayOutput) Index(i pulumi.IntInput) SolutionIntegerHyperParameterRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SolutionIntegerHyperParameterRange {
		return vs[0].([]SolutionIntegerHyperParameterRange)[vs[1].(int)]
	}).(SolutionIntegerHyperParameterRangeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetImportJobInput)(nil)).Elem(), DatasetImportJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetImportJobPtrInput)(nil)).Elem(), DatasetImportJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetImportJobDataSourcePropertiesInput)(nil)).Elem(), DatasetImportJobDataSourcePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetImportJobDataSourcePropertiesPtrInput)(nil)).Elem(), DatasetImportJobDataSourcePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionCategoricalHyperParameterRangeInput)(nil)).Elem(), SolutionCategoricalHyperParameterRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionCategoricalHyperParameterRangeArrayInput)(nil)).Elem(), SolutionCategoricalHyperParameterRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigInput)(nil)).Elem(), SolutionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigPtrInput)(nil)).Elem(), SolutionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigAutoMLConfigPropertiesInput)(nil)).Elem(), SolutionConfigAutoMLConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigAutoMLConfigPropertiesPtrInput)(nil)).Elem(), SolutionConfigAutoMLConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesPtrInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrInput)(nil)).Elem(), SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionContinuousHyperParameterRangeInput)(nil)).Elem(), SolutionContinuousHyperParameterRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionContinuousHyperParameterRangeArrayInput)(nil)).Elem(), SolutionContinuousHyperParameterRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionIntegerHyperParameterRangeInput)(nil)).Elem(), SolutionIntegerHyperParameterRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolutionIntegerHyperParameterRangeArrayInput)(nil)).Elem(), SolutionIntegerHyperParameterRangeArray{})
	pulumi.RegisterOutputType(DatasetImportJobOutput{})
	pulumi.RegisterOutputType(DatasetImportJobPtrOutput{})
	pulumi.RegisterOutputType(DatasetImportJobDataSourcePropertiesOutput{})
	pulumi.RegisterOutputType(DatasetImportJobDataSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionCategoricalHyperParameterRangeOutput{})
	pulumi.RegisterOutputType(SolutionCategoricalHyperParameterRangeArrayOutput{})
	pulumi.RegisterOutputType(SolutionConfigOutput{})
	pulumi.RegisterOutputType(SolutionConfigPtrOutput{})
	pulumi.RegisterOutputType(SolutionConfigAutoMLConfigPropertiesOutput{})
	pulumi.RegisterOutputType(SolutionConfigAutoMLConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesAlgorithmHyperParameterRangesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesHpoObjectivePropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesOutput{})
	pulumi.RegisterOutputType(SolutionConfigHpoConfigPropertiesHpoResourceConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(SolutionContinuousHyperParameterRangeOutput{})
	pulumi.RegisterOutputType(SolutionContinuousHyperParameterRangeArrayOutput{})
	pulumi.RegisterOutputType(SolutionIntegerHyperParameterRangeOutput{})
	pulumi.RegisterOutputType(SolutionIntegerHyperParameterRangeArrayOutput{})
}
