// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Connect::TrafficDistributionGroup
type TrafficDistributionGroup struct {
	pulumi.CustomResourceState

	// A description for the traffic distribution group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The identifier of the Amazon Connect instance that has been replicated.
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// If this is the default traffic distribution group.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The name for the traffic distribution group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the traffic distribution group.
	Status TrafficDistributionGroupStatusOutput `pulumi:"status"`
	// One or more tags.
	Tags TrafficDistributionGroupTagArrayOutput `pulumi:"tags"`
	// The identifier of the traffic distribution group.
	TrafficDistributionGroupArn pulumi.StringOutput `pulumi:"trafficDistributionGroupArn"`
}

// NewTrafficDistributionGroup registers a new resource with the given unique name, arguments, and options.
func NewTrafficDistributionGroup(ctx *pulumi.Context,
	name string, args *TrafficDistributionGroupArgs, opts ...pulumi.ResourceOption) (*TrafficDistributionGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"description",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficDistributionGroup
	err := ctx.RegisterResource("aws-native:connect:TrafficDistributionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficDistributionGroup gets an existing TrafficDistributionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficDistributionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficDistributionGroupState, opts ...pulumi.ResourceOption) (*TrafficDistributionGroup, error) {
	var resource TrafficDistributionGroup
	err := ctx.ReadResource("aws-native:connect:TrafficDistributionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficDistributionGroup resources.
type trafficDistributionGroupState struct {
}

type TrafficDistributionGroupState struct {
}

func (TrafficDistributionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficDistributionGroupState)(nil)).Elem()
}

type trafficDistributionGroupArgs struct {
	// A description for the traffic distribution group.
	Description *string `pulumi:"description"`
	// The identifier of the Amazon Connect instance that has been replicated.
	InstanceArn string `pulumi:"instanceArn"`
	// The name for the traffic distribution group.
	Name *string `pulumi:"name"`
	// One or more tags.
	Tags []TrafficDistributionGroupTag `pulumi:"tags"`
}

// The set of arguments for constructing a TrafficDistributionGroup resource.
type TrafficDistributionGroupArgs struct {
	// A description for the traffic distribution group.
	Description pulumi.StringPtrInput
	// The identifier of the Amazon Connect instance that has been replicated.
	InstanceArn pulumi.StringInput
	// The name for the traffic distribution group.
	Name pulumi.StringPtrInput
	// One or more tags.
	Tags TrafficDistributionGroupTagArrayInput
}

func (TrafficDistributionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficDistributionGroupArgs)(nil)).Elem()
}

type TrafficDistributionGroupInput interface {
	pulumi.Input

	ToTrafficDistributionGroupOutput() TrafficDistributionGroupOutput
	ToTrafficDistributionGroupOutputWithContext(ctx context.Context) TrafficDistributionGroupOutput
}

func (*TrafficDistributionGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficDistributionGroup)(nil)).Elem()
}

func (i *TrafficDistributionGroup) ToTrafficDistributionGroupOutput() TrafficDistributionGroupOutput {
	return i.ToTrafficDistributionGroupOutputWithContext(context.Background())
}

func (i *TrafficDistributionGroup) ToTrafficDistributionGroupOutputWithContext(ctx context.Context) TrafficDistributionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficDistributionGroupOutput)
}

func (i *TrafficDistributionGroup) ToOutput(ctx context.Context) pulumix.Output[*TrafficDistributionGroup] {
	return pulumix.Output[*TrafficDistributionGroup]{
		OutputState: i.ToTrafficDistributionGroupOutputWithContext(ctx).OutputState,
	}
}

type TrafficDistributionGroupOutput struct{ *pulumi.OutputState }

func (TrafficDistributionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficDistributionGroup)(nil)).Elem()
}

func (o TrafficDistributionGroupOutput) ToTrafficDistributionGroupOutput() TrafficDistributionGroupOutput {
	return o
}

func (o TrafficDistributionGroupOutput) ToTrafficDistributionGroupOutputWithContext(ctx context.Context) TrafficDistributionGroupOutput {
	return o
}

func (o TrafficDistributionGroupOutput) ToOutput(ctx context.Context) pulumix.Output[*TrafficDistributionGroup] {
	return pulumix.Output[*TrafficDistributionGroup]{
		OutputState: o.OutputState,
	}
}

// A description for the traffic distribution group.
func (o TrafficDistributionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Connect instance that has been replicated.
func (o TrafficDistributionGroupOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

// If this is the default traffic distribution group.
func (o TrafficDistributionGroupOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name for the traffic distribution group.
func (o TrafficDistributionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the traffic distribution group.
func (o TrafficDistributionGroupOutput) Status() TrafficDistributionGroupStatusOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) TrafficDistributionGroupStatusOutput { return v.Status }).(TrafficDistributionGroupStatusOutput)
}

// One or more tags.
func (o TrafficDistributionGroupOutput) Tags() TrafficDistributionGroupTagArrayOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) TrafficDistributionGroupTagArrayOutput { return v.Tags }).(TrafficDistributionGroupTagArrayOutput)
}

// The identifier of the traffic distribution group.
func (o TrafficDistributionGroupOutput) TrafficDistributionGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficDistributionGroup) pulumi.StringOutput { return v.TrafficDistributionGroupArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficDistributionGroupInput)(nil)).Elem(), &TrafficDistributionGroup{})
	pulumi.RegisterOutputType(TrafficDistributionGroupOutput{})
}
