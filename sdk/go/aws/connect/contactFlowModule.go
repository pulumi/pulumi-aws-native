// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::ContactFlowModule.
type ContactFlowModule struct {
	pulumi.CustomResourceState

	// The identifier of the contact flow module (ARN).
	ContactFlowModuleArn pulumi.StringOutput `pulumi:"contactFlowModuleArn"`
	// The content of the contact flow module in JSON format.
	Content pulumi.StringOutput `pulumi:"content"`
	// The description of the contact flow module.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The identifier of the Amazon Connect instance (ARN).
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// The name of the contact flow module.
	Name pulumi.StringOutput `pulumi:"name"`
	// The state of the contact flow module.
	State ContactFlowModuleStateEnumPtrOutput `pulumi:"state"`
	// The status of the contact flow module.
	Status ContactFlowModuleStatusOutput `pulumi:"status"`
	// One or more tags.
	Tags ContactFlowModuleTagArrayOutput `pulumi:"tags"`
}

// NewContactFlowModule registers a new resource with the given unique name, arguments, and options.
func NewContactFlowModule(ctx *pulumi.Context,
	name string, args *ContactFlowModuleArgs, opts ...pulumi.ResourceOption) (*ContactFlowModule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	var resource ContactFlowModule
	err := ctx.RegisterResource("aws-native:connect:ContactFlowModule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContactFlowModule gets an existing ContactFlowModule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContactFlowModule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactFlowModuleState, opts ...pulumi.ResourceOption) (*ContactFlowModule, error) {
	var resource ContactFlowModule
	err := ctx.ReadResource("aws-native:connect:ContactFlowModule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContactFlowModule resources.
type contactFlowModuleState struct {
}

type ContactFlowModuleState struct {
}

func (ContactFlowModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*contactFlowModuleState)(nil)).Elem()
}

type contactFlowModuleArgs struct {
	// The content of the contact flow module in JSON format.
	Content string `pulumi:"content"`
	// The description of the contact flow module.
	Description *string `pulumi:"description"`
	// The identifier of the Amazon Connect instance (ARN).
	InstanceArn string `pulumi:"instanceArn"`
	// The name of the contact flow module.
	Name *string `pulumi:"name"`
	// The state of the contact flow module.
	State *ContactFlowModuleStateEnum `pulumi:"state"`
	// One or more tags.
	Tags []ContactFlowModuleTag `pulumi:"tags"`
}

// The set of arguments for constructing a ContactFlowModule resource.
type ContactFlowModuleArgs struct {
	// The content of the contact flow module in JSON format.
	Content pulumi.StringInput
	// The description of the contact flow module.
	Description pulumi.StringPtrInput
	// The identifier of the Amazon Connect instance (ARN).
	InstanceArn pulumi.StringInput
	// The name of the contact flow module.
	Name pulumi.StringPtrInput
	// The state of the contact flow module.
	State ContactFlowModuleStateEnumPtrInput
	// One or more tags.
	Tags ContactFlowModuleTagArrayInput
}

func (ContactFlowModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contactFlowModuleArgs)(nil)).Elem()
}

type ContactFlowModuleInput interface {
	pulumi.Input

	ToContactFlowModuleOutput() ContactFlowModuleOutput
	ToContactFlowModuleOutputWithContext(ctx context.Context) ContactFlowModuleOutput
}

func (*ContactFlowModule) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModule)(nil))
}

func (i *ContactFlowModule) ToContactFlowModuleOutput() ContactFlowModuleOutput {
	return i.ToContactFlowModuleOutputWithContext(context.Background())
}

func (i *ContactFlowModule) ToContactFlowModuleOutputWithContext(ctx context.Context) ContactFlowModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactFlowModuleOutput)
}

type ContactFlowModuleOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModule)(nil))
}

func (o ContactFlowModuleOutput) ToContactFlowModuleOutput() ContactFlowModuleOutput {
	return o
}

func (o ContactFlowModuleOutput) ToContactFlowModuleOutputWithContext(ctx context.Context) ContactFlowModuleOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowModuleInput)(nil)).Elem(), &ContactFlowModule{})
	pulumi.RegisterOutputType(ContactFlowModuleOutput{})
}
