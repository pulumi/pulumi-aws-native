// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html
type QuickConnect struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name
	Name            pulumi.StringOutput `pulumi:"name"`
	QuickConnectArn pulumi.StringOutput `pulumi:"quickConnectArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig
	QuickConnectConfig QuickConnectQuickConnectConfigOutput `pulumi:"quickConnectConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewQuickConnect registers a new resource with the given unique name, arguments, and options.
func NewQuickConnect(ctx *pulumi.Context,
	name string, args *QuickConnectArgs, opts ...pulumi.ResourceOption) (*QuickConnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.QuickConnectConfig == nil {
		return nil, errors.New("invalid value for required argument 'QuickConnectConfig'")
	}
	var resource QuickConnect
	err := ctx.RegisterResource("aws-native:Connect:QuickConnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQuickConnect gets an existing QuickConnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQuickConnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QuickConnectState, opts ...pulumi.ResourceOption) (*QuickConnect, error) {
	var resource QuickConnect
	err := ctx.ReadResource("aws-native:Connect:QuickConnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QuickConnect resources.
type quickConnectState struct {
}

type QuickConnectState struct {
}

func (QuickConnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*quickConnectState)(nil)).Elem()
}

type quickConnectArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn
	InstanceArn string `pulumi:"instanceArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig
	QuickConnectConfig QuickConnectQuickConnectConfig `pulumi:"quickConnectConfig"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a QuickConnect resource.
type QuickConnectArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn
	InstanceArn pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name
	Name pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig
	QuickConnectConfig QuickConnectQuickConnectConfigInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags
	Tags aws.TagArrayInput
}

func (QuickConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*quickConnectArgs)(nil)).Elem()
}

type QuickConnectInput interface {
	pulumi.Input

	ToQuickConnectOutput() QuickConnectOutput
	ToQuickConnectOutputWithContext(ctx context.Context) QuickConnectOutput
}

func (*QuickConnect) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnect)(nil))
}

func (i *QuickConnect) ToQuickConnectOutput() QuickConnectOutput {
	return i.ToQuickConnectOutputWithContext(context.Background())
}

func (i *QuickConnect) ToQuickConnectOutputWithContext(ctx context.Context) QuickConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectOutput)
}

type QuickConnectOutput struct{ *pulumi.OutputState }

func (QuickConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnect)(nil))
}

func (o QuickConnectOutput) ToQuickConnectOutput() QuickConnectOutput {
	return o
}

func (o QuickConnectOutput) ToQuickConnectOutputWithContext(ctx context.Context) QuickConnectOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(QuickConnectOutput{})
}
