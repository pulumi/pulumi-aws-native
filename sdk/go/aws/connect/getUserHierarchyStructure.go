// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::UserHierarchyStructure
func LookupUserHierarchyStructure(ctx *pulumi.Context, args *LookupUserHierarchyStructureArgs, opts ...pulumi.InvokeOption) (*LookupUserHierarchyStructureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserHierarchyStructureResult
	err := ctx.Invoke("aws-native:connect:getUserHierarchyStructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserHierarchyStructureArgs struct {
	// The identifier of the User Hierarchy Structure.
	UserHierarchyStructureArn string `pulumi:"userHierarchyStructureArn"`
}

type LookupUserHierarchyStructureResult struct {
	// Information about the hierarchy structure.
	UserHierarchyStructure *UserHierarchyStructureProperties `pulumi:"userHierarchyStructure"`
	// The identifier of the User Hierarchy Structure.
	UserHierarchyStructureArn *string `pulumi:"userHierarchyStructureArn"`
}

func LookupUserHierarchyStructureOutput(ctx *pulumi.Context, args LookupUserHierarchyStructureOutputArgs, opts ...pulumi.InvokeOption) LookupUserHierarchyStructureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserHierarchyStructureResult, error) {
			args := v.(LookupUserHierarchyStructureArgs)
			r, err := LookupUserHierarchyStructure(ctx, &args, opts...)
			var s LookupUserHierarchyStructureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserHierarchyStructureResultOutput)
}

type LookupUserHierarchyStructureOutputArgs struct {
	// The identifier of the User Hierarchy Structure.
	UserHierarchyStructureArn pulumi.StringInput `pulumi:"userHierarchyStructureArn"`
}

func (LookupUserHierarchyStructureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserHierarchyStructureArgs)(nil)).Elem()
}

type LookupUserHierarchyStructureResultOutput struct{ *pulumi.OutputState }

func (LookupUserHierarchyStructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserHierarchyStructureResult)(nil)).Elem()
}

func (o LookupUserHierarchyStructureResultOutput) ToLookupUserHierarchyStructureResultOutput() LookupUserHierarchyStructureResultOutput {
	return o
}

func (o LookupUserHierarchyStructureResultOutput) ToLookupUserHierarchyStructureResultOutputWithContext(ctx context.Context) LookupUserHierarchyStructureResultOutput {
	return o
}

// Information about the hierarchy structure.
func (o LookupUserHierarchyStructureResultOutput) UserHierarchyStructure() UserHierarchyStructurePropertiesPtrOutput {
	return o.ApplyT(func(v LookupUserHierarchyStructureResult) *UserHierarchyStructureProperties {
		return v.UserHierarchyStructure
	}).(UserHierarchyStructurePropertiesPtrOutput)
}

// The identifier of the User Hierarchy Structure.
func (o LookupUserHierarchyStructureResultOutput) UserHierarchyStructureArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserHierarchyStructureResult) *string { return v.UserHierarchyStructureArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserHierarchyStructureResultOutput{})
}
