// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS:Connect::Rule
func LookupRule(ctx *pulumi.Context, args *LookupRuleArgs, opts ...pulumi.InvokeOption) (*LookupRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRuleResult
	err := ctx.Invoke("aws-native:connect:getRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRuleArgs struct {
	// The Amazon Resource Name (ARN) of the rule.
	RuleArn string `pulumi:"ruleArn"`
}

type LookupRuleResult struct {
	// The list of actions that will be executed when a rule is triggered.
	Actions *RuleActions `pulumi:"actions"`
	// The conditions of a rule.
	Function *string `pulumi:"function"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// The publish status of a rule, either draft or published.
	PublishStatus *RulePublishStatus `pulumi:"publishStatus"`
	// The Amazon Resource Name (ARN) of the rule.
	RuleArn *string `pulumi:"ruleArn"`
	// One or more tags.
	Tags []RuleTag `pulumi:"tags"`
}

func LookupRuleOutput(ctx *pulumi.Context, args LookupRuleOutputArgs, opts ...pulumi.InvokeOption) LookupRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRuleResult, error) {
			args := v.(LookupRuleArgs)
			r, err := LookupRule(ctx, &args, opts...)
			var s LookupRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRuleResultOutput)
}

type LookupRuleOutputArgs struct {
	// The Amazon Resource Name (ARN) of the rule.
	RuleArn pulumi.StringInput `pulumi:"ruleArn"`
}

func (LookupRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleArgs)(nil)).Elem()
}

type LookupRuleResultOutput struct{ *pulumi.OutputState }

func (LookupRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRuleResult)(nil)).Elem()
}

func (o LookupRuleResultOutput) ToLookupRuleResultOutput() LookupRuleResultOutput {
	return o
}

func (o LookupRuleResultOutput) ToLookupRuleResultOutputWithContext(ctx context.Context) LookupRuleResultOutput {
	return o
}

// The list of actions that will be executed when a rule is triggered.
func (o LookupRuleResultOutput) Actions() RuleActionsPtrOutput {
	return o.ApplyT(func(v LookupRuleResult) *RuleActions { return v.Actions }).(RuleActionsPtrOutput)
}

// The conditions of a rule.
func (o LookupRuleResultOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRuleResult) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// The name of the rule.
func (o LookupRuleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRuleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The publish status of a rule, either draft or published.
func (o LookupRuleResultOutput) PublishStatus() RulePublishStatusPtrOutput {
	return o.ApplyT(func(v LookupRuleResult) *RulePublishStatus { return v.PublishStatus }).(RulePublishStatusPtrOutput)
}

// The Amazon Resource Name (ARN) of the rule.
func (o LookupRuleResultOutput) RuleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRuleResult) *string { return v.RuleArn }).(pulumi.StringPtrOutput)
}

// One or more tags.
func (o LookupRuleResultOutput) Tags() RuleTagArrayOutput {
	return o.ApplyT(func(v LookupRuleResult) []RuleTag { return v.Tags }).(RuleTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRuleResultOutput{})
}
