// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::SecurityKey
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/connect"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := connect.NewSecurityKey(ctx, "securityKey", &connect.SecurityKeyArgs{
//				InstanceId: pulumi.String("arn:aws:connect:region-name:aws-account-id:instance/instance-arn"),
//				Key:        pulumi.String("valid-pem-key"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecurityKey struct {
	pulumi.CustomResourceState

	// An `AssociationId` is automatically generated when a storage config is associated with an instance.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The Amazon Resource Name (ARN) of the instance.
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `100`
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// A valid security key in PEM format. For example:
	//
	// `"-----BEGIN PUBLIC KEY-----\ [a lot of characters] ----END PUBLIC KEY-----"`
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `1024`
	Key pulumi.StringOutput `pulumi:"key"`
}

// NewSecurityKey registers a new resource with the given unique name, arguments, and options.
func NewSecurityKey(ctx *pulumi.Context,
	name string, args *SecurityKeyArgs, opts ...pulumi.ResourceOption) (*SecurityKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"instanceId",
		"key",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityKey
	err := ctx.RegisterResource("aws-native:connect:SecurityKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityKey gets an existing SecurityKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityKeyState, opts ...pulumi.ResourceOption) (*SecurityKey, error) {
	var resource SecurityKey
	err := ctx.ReadResource("aws-native:connect:SecurityKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityKey resources.
type securityKeyState struct {
}

type SecurityKeyState struct {
}

func (SecurityKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityKeyState)(nil)).Elem()
}

type securityKeyArgs struct {
	// The Amazon Resource Name (ARN) of the instance.
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `100`
	InstanceId string `pulumi:"instanceId"`
	// A valid security key in PEM format. For example:
	//
	// `"-----BEGIN PUBLIC KEY-----\ [a lot of characters] ----END PUBLIC KEY-----"`
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `1024`
	Key string `pulumi:"key"`
}

// The set of arguments for constructing a SecurityKey resource.
type SecurityKeyArgs struct {
	// The Amazon Resource Name (ARN) of the instance.
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `100`
	InstanceId pulumi.StringInput
	// A valid security key in PEM format. For example:
	//
	// `"-----BEGIN PUBLIC KEY-----\ [a lot of characters] ----END PUBLIC KEY-----"`
	//
	// *Minimum* : `1`
	//
	// *Maximum* : `1024`
	Key pulumi.StringInput
}

func (SecurityKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityKeyArgs)(nil)).Elem()
}

type SecurityKeyInput interface {
	pulumi.Input

	ToSecurityKeyOutput() SecurityKeyOutput
	ToSecurityKeyOutputWithContext(ctx context.Context) SecurityKeyOutput
}

func (*SecurityKey) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityKey)(nil)).Elem()
}

func (i *SecurityKey) ToSecurityKeyOutput() SecurityKeyOutput {
	return i.ToSecurityKeyOutputWithContext(context.Background())
}

func (i *SecurityKey) ToSecurityKeyOutputWithContext(ctx context.Context) SecurityKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityKeyOutput)
}

type SecurityKeyOutput struct{ *pulumi.OutputState }

func (SecurityKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityKey)(nil)).Elem()
}

func (o SecurityKeyOutput) ToSecurityKeyOutput() SecurityKeyOutput {
	return o
}

func (o SecurityKeyOutput) ToSecurityKeyOutputWithContext(ctx context.Context) SecurityKeyOutput {
	return o
}

// An `AssociationId` is automatically generated when a storage config is associated with an instance.
func (o SecurityKeyOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityKey) pulumi.StringOutput { return v.AssociationId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the instance.
//
// *Minimum* : `1`
//
// *Maximum* : `100`
func (o SecurityKeyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityKey) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// A valid security key in PEM format. For example:
//
// `"-----BEGIN PUBLIC KEY-----\ [a lot of characters] ----END PUBLIC KEY-----"`
//
// *Minimum* : `1`
//
// *Maximum* : `1024`
func (o SecurityKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityKey) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityKeyInput)(nil)).Elem(), &SecurityKey{})
	pulumi.RegisterOutputType(SecurityKeyOutput{})
}
