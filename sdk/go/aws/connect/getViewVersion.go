// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Connect::ViewVersion
func LookupViewVersion(ctx *pulumi.Context, args *LookupViewVersionArgs, opts ...pulumi.InvokeOption) (*LookupViewVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupViewVersionResult
	err := ctx.Invoke("aws-native:connect:getViewVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupViewVersionArgs struct {
	// The Amazon Resource Name (ARN) of the created view version.
	ViewVersionArn string `pulumi:"viewVersionArn"`
}

type LookupViewVersionResult struct {
	// The version of the view.
	Version *int `pulumi:"version"`
	// The Amazon Resource Name (ARN) of the created view version.
	ViewVersionArn *string `pulumi:"viewVersionArn"`
}

func LookupViewVersionOutput(ctx *pulumi.Context, args LookupViewVersionOutputArgs, opts ...pulumi.InvokeOption) LookupViewVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupViewVersionResult, error) {
			args := v.(LookupViewVersionArgs)
			r, err := LookupViewVersion(ctx, &args, opts...)
			var s LookupViewVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupViewVersionResultOutput)
}

type LookupViewVersionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the created view version.
	ViewVersionArn pulumi.StringInput `pulumi:"viewVersionArn"`
}

func (LookupViewVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewVersionArgs)(nil)).Elem()
}

type LookupViewVersionResultOutput struct{ *pulumi.OutputState }

func (LookupViewVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupViewVersionResult)(nil)).Elem()
}

func (o LookupViewVersionResultOutput) ToLookupViewVersionResultOutput() LookupViewVersionResultOutput {
	return o
}

func (o LookupViewVersionResultOutput) ToLookupViewVersionResultOutputWithContext(ctx context.Context) LookupViewVersionResultOutput {
	return o
}

func (o LookupViewVersionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupViewVersionResult] {
	return pulumix.Output[LookupViewVersionResult]{
		OutputState: o.OutputState,
	}
}

// The version of the view.
func (o LookupViewVersionResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupViewVersionResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the created view version.
func (o LookupViewVersionResultOutput) ViewVersionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupViewVersionResult) *string { return v.ViewVersionArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupViewVersionResultOutput{})
}
