// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::HoursOfOperation
type HoursOfOperation struct {
	pulumi.CustomResourceState

	// Configuration information for the hours of operation: day, start time, and end time.
	Config HoursOfOperationConfigArrayOutput `pulumi:"config"`
	// The description of the hours of operation.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Amazon Resource Name (ARN) for the hours of operation.
	HoursOfOperationArn pulumi.StringOutput `pulumi:"hoursOfOperationArn"`
	// The identifier of the Amazon Connect instance.
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// The name of the hours of operation.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more tags.
	Tags HoursOfOperationTagArrayOutput `pulumi:"tags"`
	// The time zone of the hours of operation.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
}

// NewHoursOfOperation registers a new resource with the given unique name, arguments, and options.
func NewHoursOfOperation(ctx *pulumi.Context,
	name string, args *HoursOfOperationArgs, opts ...pulumi.ResourceOption) (*HoursOfOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.TimeZone == nil {
		return nil, errors.New("invalid value for required argument 'TimeZone'")
	}
	var resource HoursOfOperation
	err := ctx.RegisterResource("aws-native:connect:HoursOfOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHoursOfOperation gets an existing HoursOfOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHoursOfOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HoursOfOperationState, opts ...pulumi.ResourceOption) (*HoursOfOperation, error) {
	var resource HoursOfOperation
	err := ctx.ReadResource("aws-native:connect:HoursOfOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HoursOfOperation resources.
type hoursOfOperationState struct {
}

type HoursOfOperationState struct {
}

func (HoursOfOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*hoursOfOperationState)(nil)).Elem()
}

type hoursOfOperationArgs struct {
	// Configuration information for the hours of operation: day, start time, and end time.
	Config []HoursOfOperationConfig `pulumi:"config"`
	// The description of the hours of operation.
	Description *string `pulumi:"description"`
	// The identifier of the Amazon Connect instance.
	InstanceArn string `pulumi:"instanceArn"`
	// The name of the hours of operation.
	Name string `pulumi:"name"`
	// One or more tags.
	Tags []HoursOfOperationTag `pulumi:"tags"`
	// The time zone of the hours of operation.
	TimeZone string `pulumi:"timeZone"`
}

// The set of arguments for constructing a HoursOfOperation resource.
type HoursOfOperationArgs struct {
	// Configuration information for the hours of operation: day, start time, and end time.
	Config HoursOfOperationConfigArrayInput
	// The description of the hours of operation.
	Description pulumi.StringPtrInput
	// The identifier of the Amazon Connect instance.
	InstanceArn pulumi.StringInput
	// The name of the hours of operation.
	Name pulumi.StringInput
	// One or more tags.
	Tags HoursOfOperationTagArrayInput
	// The time zone of the hours of operation.
	TimeZone pulumi.StringInput
}

func (HoursOfOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hoursOfOperationArgs)(nil)).Elem()
}

type HoursOfOperationInput interface {
	pulumi.Input

	ToHoursOfOperationOutput() HoursOfOperationOutput
	ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput
}

func (*HoursOfOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperation)(nil))
}

func (i *HoursOfOperation) ToHoursOfOperationOutput() HoursOfOperationOutput {
	return i.ToHoursOfOperationOutputWithContext(context.Background())
}

func (i *HoursOfOperation) ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOutput)
}

type HoursOfOperationOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperation)(nil))
}

func (o HoursOfOperationOutput) ToHoursOfOperationOutput() HoursOfOperationOutput {
	return o
}

func (o HoursOfOperationOutput) ToHoursOfOperationOutputWithContext(ctx context.Context) HoursOfOperationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationInput)(nil)).Elem(), &HoursOfOperation{})
	pulumi.RegisterOutputType(HoursOfOperationOutput{})
}
