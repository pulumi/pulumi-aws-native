// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::User
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	var rv LookupUserResult
	err := ctx.Invoke("aws-native:connect:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserArgs struct {
	// The Amazon Resource Name (ARN) for the user.
	UserArn string `pulumi:"userArn"`
}

type LookupUserResult struct {
	// The identifier of the user account in the directory used for identity management.
	DirectoryUserId *string `pulumi:"directoryUserId"`
	// The identifier of the hierarchy group for the user.
	HierarchyGroupArn *string `pulumi:"hierarchyGroupArn"`
	// The information about the identity of the user.
	IdentityInfo *UserIdentityInfo `pulumi:"identityInfo"`
	// The identifier of the Amazon Connect instance.
	InstanceArn *string `pulumi:"instanceArn"`
	// The phone settings for the user.
	PhoneConfig *UserPhoneConfig `pulumi:"phoneConfig"`
	// The identifier of the routing profile for the user.
	RoutingProfileArn *string `pulumi:"routingProfileArn"`
	// One or more security profile arns for the user
	SecurityProfileArns []string `pulumi:"securityProfileArns"`
	// One or more tags.
	Tags []UserTag `pulumi:"tags"`
	// The Amazon Resource Name (ARN) for the user.
	UserArn *string `pulumi:"userArn"`
	// The user name for the account.
	Username *string `pulumi:"username"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserResult, error) {
			args := v.(LookupUserArgs)
			r, err := LookupUser(ctx, &args, opts...)
			var s LookupUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserResultOutput)
}

type LookupUserOutputArgs struct {
	// The Amazon Resource Name (ARN) for the user.
	UserArn pulumi.StringInput `pulumi:"userArn"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

// The identifier of the user account in the directory used for identity management.
func (o LookupUserResultOutput) DirectoryUserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.DirectoryUserId }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy group for the user.
func (o LookupUserResultOutput) HierarchyGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.HierarchyGroupArn }).(pulumi.StringPtrOutput)
}

// The information about the identity of the user.
func (o LookupUserResultOutput) IdentityInfo() UserIdentityInfoPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *UserIdentityInfo { return v.IdentityInfo }).(UserIdentityInfoPtrOutput)
}

// The identifier of the Amazon Connect instance.
func (o LookupUserResultOutput) InstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.InstanceArn }).(pulumi.StringPtrOutput)
}

// The phone settings for the user.
func (o LookupUserResultOutput) PhoneConfig() UserPhoneConfigPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *UserPhoneConfig { return v.PhoneConfig }).(UserPhoneConfigPtrOutput)
}

// The identifier of the routing profile for the user.
func (o LookupUserResultOutput) RoutingProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.RoutingProfileArn }).(pulumi.StringPtrOutput)
}

// One or more security profile arns for the user
func (o LookupUserResultOutput) SecurityProfileArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.SecurityProfileArns }).(pulumi.StringArrayOutput)
}

// One or more tags.
func (o LookupUserResultOutput) Tags() UserTagArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []UserTag { return v.Tags }).(UserTagArrayOutput)
}

// The Amazon Resource Name (ARN) for the user.
func (o LookupUserResultOutput) UserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.UserArn }).(pulumi.StringPtrOutput)
}

// The user name for the account.
func (o LookupUserResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
