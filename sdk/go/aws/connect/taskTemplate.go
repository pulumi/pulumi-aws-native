// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::TaskTemplate.
type TaskTemplate struct {
	pulumi.CustomResourceState

	// The identifier (arn) of the task template.
	Arn         pulumi.StringOutput    `pulumi:"arn"`
	ClientToken pulumi.StringPtrOutput `pulumi:"clientToken"`
	// The constraints for the task template
	Constraints ConstraintsPropertiesPtrOutput `pulumi:"constraints"`
	// The identifier of the contact flow.
	ContactFlowArn pulumi.StringPtrOutput                   `pulumi:"contactFlowArn"`
	Defaults       TaskTemplateDefaultFieldValueArrayOutput `pulumi:"defaults"`
	// The description of the task template.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The list of task template's fields
	Fields TaskTemplateFieldArrayOutput `pulumi:"fields"`
	// The identifier (arn) of the instance.
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// The name of the task template.
	Name   pulumi.StringPtrOutput      `pulumi:"name"`
	Status TaskTemplateStatusPtrOutput `pulumi:"status"`
	// One or more tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewTaskTemplate registers a new resource with the given unique name, arguments, and options.
func NewTaskTemplate(ctx *pulumi.Context,
	name string, args *TaskTemplateArgs, opts ...pulumi.ResourceOption) (*TaskTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TaskTemplate
	err := ctx.RegisterResource("aws-native:connect:TaskTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskTemplate gets an existing TaskTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskTemplateState, opts ...pulumi.ResourceOption) (*TaskTemplate, error) {
	var resource TaskTemplate
	err := ctx.ReadResource("aws-native:connect:TaskTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskTemplate resources.
type taskTemplateState struct {
}

type TaskTemplateState struct {
}

func (TaskTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskTemplateState)(nil)).Elem()
}

type taskTemplateArgs struct {
	ClientToken *string `pulumi:"clientToken"`
	// The constraints for the task template
	Constraints *ConstraintsProperties `pulumi:"constraints"`
	// The identifier of the contact flow.
	ContactFlowArn *string                         `pulumi:"contactFlowArn"`
	Defaults       []TaskTemplateDefaultFieldValue `pulumi:"defaults"`
	// The description of the task template.
	Description *string `pulumi:"description"`
	// The list of task template's fields
	Fields []TaskTemplateField `pulumi:"fields"`
	// The identifier (arn) of the instance.
	InstanceArn string `pulumi:"instanceArn"`
	// The name of the task template.
	Name   *string             `pulumi:"name"`
	Status *TaskTemplateStatus `pulumi:"status"`
	// One or more tags.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a TaskTemplate resource.
type TaskTemplateArgs struct {
	ClientToken pulumi.StringPtrInput
	// The constraints for the task template
	Constraints ConstraintsPropertiesPtrInput
	// The identifier of the contact flow.
	ContactFlowArn pulumi.StringPtrInput
	Defaults       TaskTemplateDefaultFieldValueArrayInput
	// The description of the task template.
	Description pulumi.StringPtrInput
	// The list of task template's fields
	Fields TaskTemplateFieldArrayInput
	// The identifier (arn) of the instance.
	InstanceArn pulumi.StringInput
	// The name of the task template.
	Name   pulumi.StringPtrInput
	Status TaskTemplateStatusPtrInput
	// One or more tags.
	Tags aws.TagArrayInput
}

func (TaskTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskTemplateArgs)(nil)).Elem()
}

type TaskTemplateInput interface {
	pulumi.Input

	ToTaskTemplateOutput() TaskTemplateOutput
	ToTaskTemplateOutputWithContext(ctx context.Context) TaskTemplateOutput
}

func (*TaskTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplate)(nil)).Elem()
}

func (i *TaskTemplate) ToTaskTemplateOutput() TaskTemplateOutput {
	return i.ToTaskTemplateOutputWithContext(context.Background())
}

func (i *TaskTemplate) ToTaskTemplateOutputWithContext(ctx context.Context) TaskTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateOutput)
}

type TaskTemplateOutput struct{ *pulumi.OutputState }

func (TaskTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplate)(nil)).Elem()
}

func (o TaskTemplateOutput) ToTaskTemplateOutput() TaskTemplateOutput {
	return o
}

func (o TaskTemplateOutput) ToTaskTemplateOutputWithContext(ctx context.Context) TaskTemplateOutput {
	return o
}

// The identifier (arn) of the task template.
func (o TaskTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TaskTemplateOutput) ClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringPtrOutput { return v.ClientToken }).(pulumi.StringPtrOutput)
}

// The constraints for the task template
func (o TaskTemplateOutput) Constraints() ConstraintsPropertiesPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) ConstraintsPropertiesPtrOutput { return v.Constraints }).(ConstraintsPropertiesPtrOutput)
}

// The identifier of the contact flow.
func (o TaskTemplateOutput) ContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringPtrOutput { return v.ContactFlowArn }).(pulumi.StringPtrOutput)
}

func (o TaskTemplateOutput) Defaults() TaskTemplateDefaultFieldValueArrayOutput {
	return o.ApplyT(func(v *TaskTemplate) TaskTemplateDefaultFieldValueArrayOutput { return v.Defaults }).(TaskTemplateDefaultFieldValueArrayOutput)
}

// The description of the task template.
func (o TaskTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of task template's fields
func (o TaskTemplateOutput) Fields() TaskTemplateFieldArrayOutput {
	return o.ApplyT(func(v *TaskTemplate) TaskTemplateFieldArrayOutput { return v.Fields }).(TaskTemplateFieldArrayOutput)
}

// The identifier (arn) of the instance.
func (o TaskTemplateOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

// The name of the task template.
func (o TaskTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TaskTemplateOutput) Status() TaskTemplateStatusPtrOutput {
	return o.ApplyT(func(v *TaskTemplate) TaskTemplateStatusPtrOutput { return v.Status }).(TaskTemplateStatusPtrOutput)
}

// One or more tags.
func (o TaskTemplateOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *TaskTemplate) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateInput)(nil)).Elem(), &TaskTemplate{})
	pulumi.RegisterOutputType(TaskTemplateOutput{})
}
