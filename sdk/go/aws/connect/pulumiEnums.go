// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
type QuickConnectQuickConnectType string

const (
	QuickConnectQuickConnectTypePhoneNumber = QuickConnectQuickConnectType("PHONE_NUMBER")
	QuickConnectQuickConnectTypeQueue       = QuickConnectQuickConnectType("QUEUE")
	QuickConnectQuickConnectTypeUser        = QuickConnectQuickConnectType("USER")
)

func (QuickConnectQuickConnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectType)(nil)).Elem()
}

func (e QuickConnectQuickConnectType) ToQuickConnectQuickConnectTypeOutput() QuickConnectQuickConnectTypeOutput {
	return pulumi.ToOutput(e).(QuickConnectQuickConnectTypeOutput)
}

func (e QuickConnectQuickConnectType) ToQuickConnectQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QuickConnectQuickConnectTypeOutput)
}

func (e QuickConnectQuickConnectType) ToQuickConnectQuickConnectTypePtrOutput() QuickConnectQuickConnectTypePtrOutput {
	return e.ToQuickConnectQuickConnectTypePtrOutputWithContext(context.Background())
}

func (e QuickConnectQuickConnectType) ToQuickConnectQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypePtrOutput {
	return QuickConnectQuickConnectType(e).ToQuickConnectQuickConnectTypeOutputWithContext(ctx).ToQuickConnectQuickConnectTypePtrOutputWithContext(ctx)
}

func (e QuickConnectQuickConnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectQuickConnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectQuickConnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QuickConnectQuickConnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QuickConnectQuickConnectTypeOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQuickConnectType)(nil)).Elem()
}

func (o QuickConnectQuickConnectTypeOutput) ToQuickConnectQuickConnectTypeOutput() QuickConnectQuickConnectTypeOutput {
	return o
}

func (o QuickConnectQuickConnectTypeOutput) ToQuickConnectQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypeOutput {
	return o
}

func (o QuickConnectQuickConnectTypeOutput) ToQuickConnectQuickConnectTypePtrOutput() QuickConnectQuickConnectTypePtrOutput {
	return o.ToQuickConnectQuickConnectTypePtrOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectTypeOutput) ToQuickConnectQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectQuickConnectType) *QuickConnectQuickConnectType {
		return &v
	}).(QuickConnectQuickConnectTypePtrOutput)
}

func (o QuickConnectQuickConnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectQuickConnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QuickConnectQuickConnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectQuickConnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QuickConnectQuickConnectTypePtrOutput struct{ *pulumi.OutputState }

func (QuickConnectQuickConnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQuickConnectType)(nil)).Elem()
}

func (o QuickConnectQuickConnectTypePtrOutput) ToQuickConnectQuickConnectTypePtrOutput() QuickConnectQuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectQuickConnectTypePtrOutput) ToQuickConnectQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectQuickConnectTypePtrOutput) Elem() QuickConnectQuickConnectTypeOutput {
	return o.ApplyT(func(v *QuickConnectQuickConnectType) QuickConnectQuickConnectType {
		if v != nil {
			return *v
		}
		var ret QuickConnectQuickConnectType
		return ret
	}).(QuickConnectQuickConnectTypeOutput)
}

func (o QuickConnectQuickConnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectQuickConnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QuickConnectQuickConnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QuickConnectQuickConnectTypeInput is an input type that accepts QuickConnectQuickConnectTypeArgs and QuickConnectQuickConnectTypeOutput values.
// You can construct a concrete instance of `QuickConnectQuickConnectTypeInput` via:
//
//          QuickConnectQuickConnectTypeArgs{...}
type QuickConnectQuickConnectTypeInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectTypeOutput() QuickConnectQuickConnectTypeOutput
	ToQuickConnectQuickConnectTypeOutputWithContext(context.Context) QuickConnectQuickConnectTypeOutput
}

var quickConnectQuickConnectTypePtrType = reflect.TypeOf((**QuickConnectQuickConnectType)(nil)).Elem()

type QuickConnectQuickConnectTypePtrInput interface {
	pulumi.Input

	ToQuickConnectQuickConnectTypePtrOutput() QuickConnectQuickConnectTypePtrOutput
	ToQuickConnectQuickConnectTypePtrOutputWithContext(context.Context) QuickConnectQuickConnectTypePtrOutput
}

type quickConnectQuickConnectTypePtr string

func QuickConnectQuickConnectTypePtr(v string) QuickConnectQuickConnectTypePtrInput {
	return (*quickConnectQuickConnectTypePtr)(&v)
}

func (*quickConnectQuickConnectTypePtr) ElementType() reflect.Type {
	return quickConnectQuickConnectTypePtrType
}

func (in *quickConnectQuickConnectTypePtr) ToQuickConnectQuickConnectTypePtrOutput() QuickConnectQuickConnectTypePtrOutput {
	return pulumi.ToOutput(in).(QuickConnectQuickConnectTypePtrOutput)
}

func (in *quickConnectQuickConnectTypePtr) ToQuickConnectQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectQuickConnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QuickConnectQuickConnectTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(QuickConnectQuickConnectTypeOutput{})
	pulumi.RegisterOutputType(QuickConnectQuickConnectTypePtrOutput{})
}
