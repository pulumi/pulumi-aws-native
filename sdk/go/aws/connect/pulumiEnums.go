// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The state of the contact flow.
type ContactFlowStateEnum string

const (
	ContactFlowStateEnumActive   = ContactFlowStateEnum("ACTIVE")
	ContactFlowStateEnumArchived = ContactFlowStateEnum("ARCHIVED")
)

func (ContactFlowStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowStateEnum)(nil)).Elem()
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput {
	return pulumi.ToOutput(e).(ContactFlowStateEnumOutput)
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumOutputWithContext(ctx context.Context) ContactFlowStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactFlowStateEnumOutput)
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return e.ToContactFlowStateEnumPtrOutputWithContext(context.Background())
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return ContactFlowStateEnum(e).ToContactFlowStateEnumOutputWithContext(ctx).ToContactFlowStateEnumPtrOutputWithContext(ctx)
}

func (e ContactFlowStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactFlowStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactFlowStateEnumOutput struct{ *pulumi.OutputState }

func (ContactFlowStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowStateEnum)(nil)).Elem()
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput {
	return o
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumOutputWithContext(ctx context.Context) ContactFlowStateEnumOutput {
	return o
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return o.ToContactFlowStateEnumPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowStateEnum) *ContactFlowStateEnum {
		return &v
	}).(ContactFlowStateEnumPtrOutput)
}

func (o ContactFlowStateEnumOutput) ToOutput(ctx context.Context) pulumix.Output[ContactFlowStateEnum] {
	return pulumix.Output[ContactFlowStateEnum]{
		OutputState: o.OutputState,
	}
}

func (o ContactFlowStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ContactFlowStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowStateEnum)(nil)).Elem()
}

func (o ContactFlowStateEnumPtrOutput) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return o
}

func (o ContactFlowStateEnumPtrOutput) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return o
}

func (o ContactFlowStateEnumPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ContactFlowStateEnum] {
	return pulumix.Output[*ContactFlowStateEnum]{
		OutputState: o.OutputState,
	}
}

func (o ContactFlowStateEnumPtrOutput) Elem() ContactFlowStateEnumOutput {
	return o.ApplyT(func(v *ContactFlowStateEnum) ContactFlowStateEnum {
		if v != nil {
			return *v
		}
		var ret ContactFlowStateEnum
		return ret
	}).(ContactFlowStateEnumOutput)
}

func (o ContactFlowStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactFlowStateEnumInput is an input type that accepts ContactFlowStateEnumArgs and ContactFlowStateEnumOutput values.
// You can construct a concrete instance of `ContactFlowStateEnumInput` via:
//
//	ContactFlowStateEnumArgs{...}
type ContactFlowStateEnumInput interface {
	pulumi.Input

	ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput
	ToContactFlowStateEnumOutputWithContext(context.Context) ContactFlowStateEnumOutput
}

var contactFlowStateEnumPtrType = reflect.TypeOf((**ContactFlowStateEnum)(nil)).Elem()

type ContactFlowStateEnumPtrInput interface {
	pulumi.Input

	ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput
	ToContactFlowStateEnumPtrOutputWithContext(context.Context) ContactFlowStateEnumPtrOutput
}

type contactFlowStateEnumPtr string

func ContactFlowStateEnumPtr(v string) ContactFlowStateEnumPtrInput {
	return (*contactFlowStateEnumPtr)(&v)
}

func (*contactFlowStateEnumPtr) ElementType() reflect.Type {
	return contactFlowStateEnumPtrType
}

func (in *contactFlowStateEnumPtr) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ContactFlowStateEnumPtrOutput)
}

func (in *contactFlowStateEnumPtr) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactFlowStateEnumPtrOutput)
}

func (in *contactFlowStateEnumPtr) ToOutput(ctx context.Context) pulumix.Output[*ContactFlowStateEnum] {
	return pulumix.Output[*ContactFlowStateEnum]{
		OutputState: in.ToContactFlowStateEnumPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the contact flow.
type ContactFlowType string

const (
	ContactFlowTypeContactFlow     = ContactFlowType("CONTACT_FLOW")
	ContactFlowTypeCustomerQueue   = ContactFlowType("CUSTOMER_QUEUE")
	ContactFlowTypeCustomerHold    = ContactFlowType("CUSTOMER_HOLD")
	ContactFlowTypeCustomerWhisper = ContactFlowType("CUSTOMER_WHISPER")
	ContactFlowTypeAgentHold       = ContactFlowType("AGENT_HOLD")
	ContactFlowTypeAgentWhisper    = ContactFlowType("AGENT_WHISPER")
	ContactFlowTypeOutboundWhisper = ContactFlowType("OUTBOUND_WHISPER")
	ContactFlowTypeAgentTransfer   = ContactFlowType("AGENT_TRANSFER")
	ContactFlowTypeQueueTransfer   = ContactFlowType("QUEUE_TRANSFER")
)

func (ContactFlowType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowType)(nil)).Elem()
}

func (e ContactFlowType) ToContactFlowTypeOutput() ContactFlowTypeOutput {
	return pulumi.ToOutput(e).(ContactFlowTypeOutput)
}

func (e ContactFlowType) ToContactFlowTypeOutputWithContext(ctx context.Context) ContactFlowTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactFlowTypeOutput)
}

func (e ContactFlowType) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return e.ToContactFlowTypePtrOutputWithContext(context.Background())
}

func (e ContactFlowType) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return ContactFlowType(e).ToContactFlowTypeOutputWithContext(ctx).ToContactFlowTypePtrOutputWithContext(ctx)
}

func (e ContactFlowType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactFlowType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactFlowTypeOutput struct{ *pulumi.OutputState }

func (ContactFlowTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowType)(nil)).Elem()
}

func (o ContactFlowTypeOutput) ToContactFlowTypeOutput() ContactFlowTypeOutput {
	return o
}

func (o ContactFlowTypeOutput) ToContactFlowTypeOutputWithContext(ctx context.Context) ContactFlowTypeOutput {
	return o
}

func (o ContactFlowTypeOutput) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return o.ToContactFlowTypePtrOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowType) *ContactFlowType {
		return &v
	}).(ContactFlowTypePtrOutput)
}

func (o ContactFlowTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ContactFlowType] {
	return pulumix.Output[ContactFlowType]{
		OutputState: o.OutputState,
	}
}

func (o ContactFlowTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowTypePtrOutput struct{ *pulumi.OutputState }

func (ContactFlowTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowType)(nil)).Elem()
}

func (o ContactFlowTypePtrOutput) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return o
}

func (o ContactFlowTypePtrOutput) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return o
}

func (o ContactFlowTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ContactFlowType] {
	return pulumix.Output[*ContactFlowType]{
		OutputState: o.OutputState,
	}
}

func (o ContactFlowTypePtrOutput) Elem() ContactFlowTypeOutput {
	return o.ApplyT(func(v *ContactFlowType) ContactFlowType {
		if v != nil {
			return *v
		}
		var ret ContactFlowType
		return ret
	}).(ContactFlowTypeOutput)
}

func (o ContactFlowTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactFlowTypeInput is an input type that accepts ContactFlowTypeArgs and ContactFlowTypeOutput values.
// You can construct a concrete instance of `ContactFlowTypeInput` via:
//
//	ContactFlowTypeArgs{...}
type ContactFlowTypeInput interface {
	pulumi.Input

	ToContactFlowTypeOutput() ContactFlowTypeOutput
	ToContactFlowTypeOutputWithContext(context.Context) ContactFlowTypeOutput
}

var contactFlowTypePtrType = reflect.TypeOf((**ContactFlowType)(nil)).Elem()

type ContactFlowTypePtrInput interface {
	pulumi.Input

	ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput
	ToContactFlowTypePtrOutputWithContext(context.Context) ContactFlowTypePtrOutput
}

type contactFlowTypePtr string

func ContactFlowTypePtr(v string) ContactFlowTypePtrInput {
	return (*contactFlowTypePtr)(&v)
}

func (*contactFlowTypePtr) ElementType() reflect.Type {
	return contactFlowTypePtrType
}

func (in *contactFlowTypePtr) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return pulumi.ToOutput(in).(ContactFlowTypePtrOutput)
}

func (in *contactFlowTypePtr) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactFlowTypePtrOutput)
}

func (in *contactFlowTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ContactFlowType] {
	return pulumix.Output[*ContactFlowType]{
		OutputState: in.ToContactFlowTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The automation property label.
type EvaluationFormNumericQuestionPropertyValueAutomationLabel string

const (
	EvaluationFormNumericQuestionPropertyValueAutomationLabelOverallCustomerSentimentScore = EvaluationFormNumericQuestionPropertyValueAutomationLabel("OVERALL_CUSTOMER_SENTIMENT_SCORE")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelOverallAgentSentimentScore    = EvaluationFormNumericQuestionPropertyValueAutomationLabel("OVERALL_AGENT_SENTIMENT_SCORE")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelNonTalkTime                   = EvaluationFormNumericQuestionPropertyValueAutomationLabel("NON_TALK_TIME")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelNonTalkTimePercentage         = EvaluationFormNumericQuestionPropertyValueAutomationLabel("NON_TALK_TIME_PERCENTAGE")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelNumberOfInterruptions         = EvaluationFormNumericQuestionPropertyValueAutomationLabel("NUMBER_OF_INTERRUPTIONS")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelContactDuration               = EvaluationFormNumericQuestionPropertyValueAutomationLabel("CONTACT_DURATION")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelAgentInteractionDuration      = EvaluationFormNumericQuestionPropertyValueAutomationLabel("AGENT_INTERACTION_DURATION")
	EvaluationFormNumericQuestionPropertyValueAutomationLabelCustomerHoldTime              = EvaluationFormNumericQuestionPropertyValueAutomationLabel("CUSTOMER_HOLD_TIME")
)

func (EvaluationFormNumericQuestionPropertyValueAutomationLabel) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationLabel)(nil)).Elem()
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return pulumi.ToOutput(e).(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput)
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput)
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return e.ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(context.Background())
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return EvaluationFormNumericQuestionPropertyValueAutomationLabel(e).ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutputWithContext(ctx).ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx)
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormNumericQuestionPropertyValueAutomationLabel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationLabel)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o.ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionPropertyValueAutomationLabel) *EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		return &v
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput)
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormNumericQuestionPropertyValueAutomationLabel] {
	return pulumix.Output[EvaluationFormNumericQuestionPropertyValueAutomationLabel]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormNumericQuestionPropertyValueAutomationLabel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormNumericQuestionPropertyValueAutomationLabel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomationLabel)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormNumericQuestionPropertyValueAutomationLabel] {
	return pulumix.Output[*EvaluationFormNumericQuestionPropertyValueAutomationLabel]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) Elem() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionPropertyValueAutomationLabel) EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionPropertyValueAutomationLabel
		return ret
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput)
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormNumericQuestionPropertyValueAutomationLabel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormNumericQuestionPropertyValueAutomationLabelInput is an input type that accepts EvaluationFormNumericQuestionPropertyValueAutomationLabelArgs and EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertyValueAutomationLabelInput` via:
//
//	EvaluationFormNumericQuestionPropertyValueAutomationLabelArgs{...}
type EvaluationFormNumericQuestionPropertyValueAutomationLabelInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationLabelOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput
}

var evaluationFormNumericQuestionPropertyValueAutomationLabelPtrType = reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomationLabel)(nil)).Elem()

type EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput
}

type evaluationFormNumericQuestionPropertyValueAutomationLabelPtr string

func EvaluationFormNumericQuestionPropertyValueAutomationLabelPtr(v string) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrInput {
	return (*evaluationFormNumericQuestionPropertyValueAutomationLabelPtr)(&v)
}

func (*evaluationFormNumericQuestionPropertyValueAutomationLabelPtr) ElementType() reflect.Type {
	return evaluationFormNumericQuestionPropertyValueAutomationLabelPtrType
}

func (in *evaluationFormNumericQuestionPropertyValueAutomationLabelPtr) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput)
}

func (in *evaluationFormNumericQuestionPropertyValueAutomationLabelPtr) ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput)
}

func (in *evaluationFormNumericQuestionPropertyValueAutomationLabelPtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormNumericQuestionPropertyValueAutomationLabel] {
	return pulumix.Output[*EvaluationFormNumericQuestionPropertyValueAutomationLabel]{
		OutputState: in.ToEvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the question.
type EvaluationFormQuestionQuestionType string

const (
	EvaluationFormQuestionQuestionTypeNumeric      = EvaluationFormQuestionQuestionType("NUMERIC")
	EvaluationFormQuestionQuestionTypeSingleselect = EvaluationFormQuestionQuestionType("SINGLESELECT")
	EvaluationFormQuestionQuestionTypeText         = EvaluationFormQuestionQuestionType("TEXT")
)

func (EvaluationFormQuestionQuestionType) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionQuestionType)(nil)).Elem()
}

func (e EvaluationFormQuestionQuestionType) ToEvaluationFormQuestionQuestionTypeOutput() EvaluationFormQuestionQuestionTypeOutput {
	return pulumi.ToOutput(e).(EvaluationFormQuestionQuestionTypeOutput)
}

func (e EvaluationFormQuestionQuestionType) ToEvaluationFormQuestionQuestionTypeOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormQuestionQuestionTypeOutput)
}

func (e EvaluationFormQuestionQuestionType) ToEvaluationFormQuestionQuestionTypePtrOutput() EvaluationFormQuestionQuestionTypePtrOutput {
	return e.ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(context.Background())
}

func (e EvaluationFormQuestionQuestionType) ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypePtrOutput {
	return EvaluationFormQuestionQuestionType(e).ToEvaluationFormQuestionQuestionTypeOutputWithContext(ctx).ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx)
}

func (e EvaluationFormQuestionQuestionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormQuestionQuestionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormQuestionQuestionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormQuestionQuestionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormQuestionQuestionTypeOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionQuestionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionQuestionType)(nil)).Elem()
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToEvaluationFormQuestionQuestionTypeOutput() EvaluationFormQuestionQuestionTypeOutput {
	return o
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToEvaluationFormQuestionQuestionTypeOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypeOutput {
	return o
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToEvaluationFormQuestionQuestionTypePtrOutput() EvaluationFormQuestionQuestionTypePtrOutput {
	return o.ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormQuestionQuestionType) *EvaluationFormQuestionQuestionType {
		return &v
	}).(EvaluationFormQuestionQuestionTypePtrOutput)
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormQuestionQuestionType] {
	return pulumix.Output[EvaluationFormQuestionQuestionType]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormQuestionQuestionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionQuestionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormQuestionQuestionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormQuestionQuestionTypePtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionQuestionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestionQuestionType)(nil)).Elem()
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) ToEvaluationFormQuestionQuestionTypePtrOutput() EvaluationFormQuestionQuestionTypePtrOutput {
	return o
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypePtrOutput {
	return o
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormQuestionQuestionType] {
	return pulumix.Output[*EvaluationFormQuestionQuestionType]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) Elem() EvaluationFormQuestionQuestionTypeOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionQuestionType) EvaluationFormQuestionQuestionType {
		if v != nil {
			return *v
		}
		var ret EvaluationFormQuestionQuestionType
		return ret
	}).(EvaluationFormQuestionQuestionTypeOutput)
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionQuestionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormQuestionQuestionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormQuestionQuestionTypeInput is an input type that accepts EvaluationFormQuestionQuestionTypeArgs and EvaluationFormQuestionQuestionTypeOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionQuestionTypeInput` via:
//
//	EvaluationFormQuestionQuestionTypeArgs{...}
type EvaluationFormQuestionQuestionTypeInput interface {
	pulumi.Input

	ToEvaluationFormQuestionQuestionTypeOutput() EvaluationFormQuestionQuestionTypeOutput
	ToEvaluationFormQuestionQuestionTypeOutputWithContext(context.Context) EvaluationFormQuestionQuestionTypeOutput
}

var evaluationFormQuestionQuestionTypePtrType = reflect.TypeOf((**EvaluationFormQuestionQuestionType)(nil)).Elem()

type EvaluationFormQuestionQuestionTypePtrInput interface {
	pulumi.Input

	ToEvaluationFormQuestionQuestionTypePtrOutput() EvaluationFormQuestionQuestionTypePtrOutput
	ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(context.Context) EvaluationFormQuestionQuestionTypePtrOutput
}

type evaluationFormQuestionQuestionTypePtr string

func EvaluationFormQuestionQuestionTypePtr(v string) EvaluationFormQuestionQuestionTypePtrInput {
	return (*evaluationFormQuestionQuestionTypePtr)(&v)
}

func (*evaluationFormQuestionQuestionTypePtr) ElementType() reflect.Type {
	return evaluationFormQuestionQuestionTypePtrType
}

func (in *evaluationFormQuestionQuestionTypePtr) ToEvaluationFormQuestionQuestionTypePtrOutput() EvaluationFormQuestionQuestionTypePtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormQuestionQuestionTypePtrOutput)
}

func (in *evaluationFormQuestionQuestionTypePtr) ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx context.Context) EvaluationFormQuestionQuestionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormQuestionQuestionTypePtrOutput)
}

func (in *evaluationFormQuestionQuestionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormQuestionQuestionType] {
	return pulumix.Output[*EvaluationFormQuestionQuestionType]{
		OutputState: in.ToEvaluationFormQuestionQuestionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The scoring mode.
type EvaluationFormScoringStrategyMode string

const (
	EvaluationFormScoringStrategyModeQuestionOnly = EvaluationFormScoringStrategyMode("QUESTION_ONLY")
	EvaluationFormScoringStrategyModeSectionOnly  = EvaluationFormScoringStrategyMode("SECTION_ONLY")
)

func (EvaluationFormScoringStrategyMode) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategyMode)(nil)).Elem()
}

func (e EvaluationFormScoringStrategyMode) ToEvaluationFormScoringStrategyModeOutput() EvaluationFormScoringStrategyModeOutput {
	return pulumi.ToOutput(e).(EvaluationFormScoringStrategyModeOutput)
}

func (e EvaluationFormScoringStrategyMode) ToEvaluationFormScoringStrategyModeOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormScoringStrategyModeOutput)
}

func (e EvaluationFormScoringStrategyMode) ToEvaluationFormScoringStrategyModePtrOutput() EvaluationFormScoringStrategyModePtrOutput {
	return e.ToEvaluationFormScoringStrategyModePtrOutputWithContext(context.Background())
}

func (e EvaluationFormScoringStrategyMode) ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModePtrOutput {
	return EvaluationFormScoringStrategyMode(e).ToEvaluationFormScoringStrategyModeOutputWithContext(ctx).ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx)
}

func (e EvaluationFormScoringStrategyMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormScoringStrategyMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormScoringStrategyMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormScoringStrategyMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormScoringStrategyModeOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategyMode)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyModeOutput) ToEvaluationFormScoringStrategyModeOutput() EvaluationFormScoringStrategyModeOutput {
	return o
}

func (o EvaluationFormScoringStrategyModeOutput) ToEvaluationFormScoringStrategyModeOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModeOutput {
	return o
}

func (o EvaluationFormScoringStrategyModeOutput) ToEvaluationFormScoringStrategyModePtrOutput() EvaluationFormScoringStrategyModePtrOutput {
	return o.ToEvaluationFormScoringStrategyModePtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyModeOutput) ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormScoringStrategyMode) *EvaluationFormScoringStrategyMode {
		return &v
	}).(EvaluationFormScoringStrategyModePtrOutput)
}

func (o EvaluationFormScoringStrategyModeOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormScoringStrategyMode] {
	return pulumix.Output[EvaluationFormScoringStrategyMode]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormScoringStrategyModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormScoringStrategyMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormScoringStrategyModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormScoringStrategyMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormScoringStrategyModePtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategyMode)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyModePtrOutput) ToEvaluationFormScoringStrategyModePtrOutput() EvaluationFormScoringStrategyModePtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyModePtrOutput) ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModePtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyModePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormScoringStrategyMode] {
	return pulumix.Output[*EvaluationFormScoringStrategyMode]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormScoringStrategyModePtrOutput) Elem() EvaluationFormScoringStrategyModeOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategyMode) EvaluationFormScoringStrategyMode {
		if v != nil {
			return *v
		}
		var ret EvaluationFormScoringStrategyMode
		return ret
	}).(EvaluationFormScoringStrategyModeOutput)
}

func (o EvaluationFormScoringStrategyModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormScoringStrategyMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormScoringStrategyModeInput is an input type that accepts EvaluationFormScoringStrategyModeArgs and EvaluationFormScoringStrategyModeOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyModeInput` via:
//
//	EvaluationFormScoringStrategyModeArgs{...}
type EvaluationFormScoringStrategyModeInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyModeOutput() EvaluationFormScoringStrategyModeOutput
	ToEvaluationFormScoringStrategyModeOutputWithContext(context.Context) EvaluationFormScoringStrategyModeOutput
}

var evaluationFormScoringStrategyModePtrType = reflect.TypeOf((**EvaluationFormScoringStrategyMode)(nil)).Elem()

type EvaluationFormScoringStrategyModePtrInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyModePtrOutput() EvaluationFormScoringStrategyModePtrOutput
	ToEvaluationFormScoringStrategyModePtrOutputWithContext(context.Context) EvaluationFormScoringStrategyModePtrOutput
}

type evaluationFormScoringStrategyModePtr string

func EvaluationFormScoringStrategyModePtr(v string) EvaluationFormScoringStrategyModePtrInput {
	return (*evaluationFormScoringStrategyModePtr)(&v)
}

func (*evaluationFormScoringStrategyModePtr) ElementType() reflect.Type {
	return evaluationFormScoringStrategyModePtrType
}

func (in *evaluationFormScoringStrategyModePtr) ToEvaluationFormScoringStrategyModePtrOutput() EvaluationFormScoringStrategyModePtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormScoringStrategyModePtrOutput)
}

func (in *evaluationFormScoringStrategyModePtr) ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormScoringStrategyModePtrOutput)
}

func (in *evaluationFormScoringStrategyModePtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormScoringStrategyMode] {
	return pulumix.Output[*EvaluationFormScoringStrategyMode]{
		OutputState: in.ToEvaluationFormScoringStrategyModePtrOutputWithContext(ctx).OutputState,
	}
}

// The scoring status.
type EvaluationFormScoringStrategyStatus string

const (
	EvaluationFormScoringStrategyStatusEnabled  = EvaluationFormScoringStrategyStatus("ENABLED")
	EvaluationFormScoringStrategyStatusDisabled = EvaluationFormScoringStrategyStatus("DISABLED")
)

func (EvaluationFormScoringStrategyStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategyStatus)(nil)).Elem()
}

func (e EvaluationFormScoringStrategyStatus) ToEvaluationFormScoringStrategyStatusOutput() EvaluationFormScoringStrategyStatusOutput {
	return pulumi.ToOutput(e).(EvaluationFormScoringStrategyStatusOutput)
}

func (e EvaluationFormScoringStrategyStatus) ToEvaluationFormScoringStrategyStatusOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormScoringStrategyStatusOutput)
}

func (e EvaluationFormScoringStrategyStatus) ToEvaluationFormScoringStrategyStatusPtrOutput() EvaluationFormScoringStrategyStatusPtrOutput {
	return e.ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(context.Background())
}

func (e EvaluationFormScoringStrategyStatus) ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusPtrOutput {
	return EvaluationFormScoringStrategyStatus(e).ToEvaluationFormScoringStrategyStatusOutputWithContext(ctx).ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx)
}

func (e EvaluationFormScoringStrategyStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormScoringStrategyStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormScoringStrategyStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormScoringStrategyStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormScoringStrategyStatusOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategyStatus)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyStatusOutput) ToEvaluationFormScoringStrategyStatusOutput() EvaluationFormScoringStrategyStatusOutput {
	return o
}

func (o EvaluationFormScoringStrategyStatusOutput) ToEvaluationFormScoringStrategyStatusOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusOutput {
	return o
}

func (o EvaluationFormScoringStrategyStatusOutput) ToEvaluationFormScoringStrategyStatusPtrOutput() EvaluationFormScoringStrategyStatusPtrOutput {
	return o.ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyStatusOutput) ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormScoringStrategyStatus) *EvaluationFormScoringStrategyStatus {
		return &v
	}).(EvaluationFormScoringStrategyStatusPtrOutput)
}

func (o EvaluationFormScoringStrategyStatusOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormScoringStrategyStatus] {
	return pulumix.Output[EvaluationFormScoringStrategyStatus]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormScoringStrategyStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormScoringStrategyStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormScoringStrategyStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormScoringStrategyStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormScoringStrategyStatusPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategyStatus)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) ToEvaluationFormScoringStrategyStatusPtrOutput() EvaluationFormScoringStrategyStatusPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormScoringStrategyStatus] {
	return pulumix.Output[*EvaluationFormScoringStrategyStatus]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) Elem() EvaluationFormScoringStrategyStatusOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategyStatus) EvaluationFormScoringStrategyStatus {
		if v != nil {
			return *v
		}
		var ret EvaluationFormScoringStrategyStatus
		return ret
	}).(EvaluationFormScoringStrategyStatusOutput)
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormScoringStrategyStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormScoringStrategyStatusInput is an input type that accepts EvaluationFormScoringStrategyStatusArgs and EvaluationFormScoringStrategyStatusOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyStatusInput` via:
//
//	EvaluationFormScoringStrategyStatusArgs{...}
type EvaluationFormScoringStrategyStatusInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyStatusOutput() EvaluationFormScoringStrategyStatusOutput
	ToEvaluationFormScoringStrategyStatusOutputWithContext(context.Context) EvaluationFormScoringStrategyStatusOutput
}

var evaluationFormScoringStrategyStatusPtrType = reflect.TypeOf((**EvaluationFormScoringStrategyStatus)(nil)).Elem()

type EvaluationFormScoringStrategyStatusPtrInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyStatusPtrOutput() EvaluationFormScoringStrategyStatusPtrOutput
	ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(context.Context) EvaluationFormScoringStrategyStatusPtrOutput
}

type evaluationFormScoringStrategyStatusPtr string

func EvaluationFormScoringStrategyStatusPtr(v string) EvaluationFormScoringStrategyStatusPtrInput {
	return (*evaluationFormScoringStrategyStatusPtr)(&v)
}

func (*evaluationFormScoringStrategyStatusPtr) ElementType() reflect.Type {
	return evaluationFormScoringStrategyStatusPtrType
}

func (in *evaluationFormScoringStrategyStatusPtr) ToEvaluationFormScoringStrategyStatusPtrOutput() EvaluationFormScoringStrategyStatusPtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormScoringStrategyStatusPtrOutput)
}

func (in *evaluationFormScoringStrategyStatusPtr) ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormScoringStrategyStatusPtrOutput)
}

func (in *evaluationFormScoringStrategyStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormScoringStrategyStatus] {
	return pulumix.Output[*EvaluationFormScoringStrategyStatus]{
		OutputState: in.ToEvaluationFormScoringStrategyStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The display mode of the single-select question.
type EvaluationFormSingleSelectQuestionPropertiesDisplayAs string

const (
	EvaluationFormSingleSelectQuestionPropertiesDisplayAsDropdown = EvaluationFormSingleSelectQuestionPropertiesDisplayAs("DROPDOWN")
	EvaluationFormSingleSelectQuestionPropertiesDisplayAsRadio    = EvaluationFormSingleSelectQuestionPropertiesDisplayAs("RADIO")
)

func (EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesDisplayAs)(nil)).Elem()
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput {
	return pulumi.ToOutput(e).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput)
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput)
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return e.ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(context.Background())
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return EvaluationFormSingleSelectQuestionPropertiesDisplayAs(e).ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutputWithContext(ctx).ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx)
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesDisplayAs)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionPropertiesDisplayAs) *EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		return &v
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormSingleSelectQuestionPropertiesDisplayAs] {
	return pulumix.Output[EvaluationFormSingleSelectQuestionPropertiesDisplayAs]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormSingleSelectQuestionPropertiesDisplayAs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionPropertiesDisplayAs)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormSingleSelectQuestionPropertiesDisplayAs] {
	return pulumix.Output[*EvaluationFormSingleSelectQuestionPropertiesDisplayAs]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) Elem() EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionPropertiesDisplayAs) EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionPropertiesDisplayAs
		return ret
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput)
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormSingleSelectQuestionPropertiesDisplayAs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormSingleSelectQuestionPropertiesDisplayAsInput is an input type that accepts EvaluationFormSingleSelectQuestionPropertiesDisplayAsArgs and EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionPropertiesDisplayAsInput` via:
//
//	EvaluationFormSingleSelectQuestionPropertiesDisplayAsArgs{...}
type EvaluationFormSingleSelectQuestionPropertiesDisplayAsInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput
	ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput
}

var evaluationFormSingleSelectQuestionPropertiesDisplayAsPtrType = reflect.TypeOf((**EvaluationFormSingleSelectQuestionPropertiesDisplayAs)(nil)).Elem()

type EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput
	ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput
}

type evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr string

func EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtr(v string) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrInput {
	return (*evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr)(&v)
}

func (*evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr) ElementType() reflect.Type {
	return evaluationFormSingleSelectQuestionPropertiesDisplayAsPtrType
}

func (in *evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

func (in *evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr) ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

func (in *evaluationFormSingleSelectQuestionPropertiesDisplayAsPtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormSingleSelectQuestionPropertiesDisplayAs] {
	return pulumix.Output[*EvaluationFormSingleSelectQuestionPropertiesDisplayAs]{
		OutputState: in.ToEvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutputWithContext(ctx).OutputState,
	}
}

// The automation condition applied on contact categories.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition string

const (
	EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPresent    = EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition("PRESENT")
	EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionNotPresent = EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition("NOT_PRESENT")
)

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition)(nil)).Elem()
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return pulumi.ToOutput(e).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput)
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput)
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return e.ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(context.Background())
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition(e).ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutputWithContext(ctx).ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx)
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) *EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition {
		return &v
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput)
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition] {
	return pulumix.Output[EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition] {
	return pulumix.Output[*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) Elem() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition
		return ret
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput)
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput is an input type that accepts EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionArgs and EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput` via:
//
//	EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionArgs{...}
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput
	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput
}

var evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrType = reflect.TypeOf((**EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition)(nil)).Elem()

type EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput
	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput
}

type evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr string

func EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr(v string) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrInput {
	return (*evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr)(&v)
}

func (*evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr) ElementType() reflect.Type {
	return evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrType
}

func (in *evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput)
}

func (in *evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput)
}

func (in *evaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition] {
	return pulumix.Output[*EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition]{
		OutputState: in.ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the evaluation form.
type EvaluationFormStatus string

const (
	EvaluationFormStatusDraft  = EvaluationFormStatus("DRAFT")
	EvaluationFormStatusActive = EvaluationFormStatus("ACTIVE")
)

func (EvaluationFormStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormStatus)(nil)).Elem()
}

func (e EvaluationFormStatus) ToEvaluationFormStatusOutput() EvaluationFormStatusOutput {
	return pulumi.ToOutput(e).(EvaluationFormStatusOutput)
}

func (e EvaluationFormStatus) ToEvaluationFormStatusOutputWithContext(ctx context.Context) EvaluationFormStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EvaluationFormStatusOutput)
}

func (e EvaluationFormStatus) ToEvaluationFormStatusPtrOutput() EvaluationFormStatusPtrOutput {
	return e.ToEvaluationFormStatusPtrOutputWithContext(context.Background())
}

func (e EvaluationFormStatus) ToEvaluationFormStatusPtrOutputWithContext(ctx context.Context) EvaluationFormStatusPtrOutput {
	return EvaluationFormStatus(e).ToEvaluationFormStatusOutputWithContext(ctx).ToEvaluationFormStatusPtrOutputWithContext(ctx)
}

func (e EvaluationFormStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EvaluationFormStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EvaluationFormStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EvaluationFormStatusOutput struct{ *pulumi.OutputState }

func (EvaluationFormStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormStatus)(nil)).Elem()
}

func (o EvaluationFormStatusOutput) ToEvaluationFormStatusOutput() EvaluationFormStatusOutput {
	return o
}

func (o EvaluationFormStatusOutput) ToEvaluationFormStatusOutputWithContext(ctx context.Context) EvaluationFormStatusOutput {
	return o
}

func (o EvaluationFormStatusOutput) ToEvaluationFormStatusPtrOutput() EvaluationFormStatusPtrOutput {
	return o.ToEvaluationFormStatusPtrOutputWithContext(context.Background())
}

func (o EvaluationFormStatusOutput) ToEvaluationFormStatusPtrOutputWithContext(ctx context.Context) EvaluationFormStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormStatus) *EvaluationFormStatus {
		return &v
	}).(EvaluationFormStatusPtrOutput)
}

func (o EvaluationFormStatusOutput) ToOutput(ctx context.Context) pulumix.Output[EvaluationFormStatus] {
	return pulumix.Output[EvaluationFormStatus]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EvaluationFormStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EvaluationFormStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EvaluationFormStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EvaluationFormStatusPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormStatus)(nil)).Elem()
}

func (o EvaluationFormStatusPtrOutput) ToEvaluationFormStatusPtrOutput() EvaluationFormStatusPtrOutput {
	return o
}

func (o EvaluationFormStatusPtrOutput) ToEvaluationFormStatusPtrOutputWithContext(ctx context.Context) EvaluationFormStatusPtrOutput {
	return o
}

func (o EvaluationFormStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormStatus] {
	return pulumix.Output[*EvaluationFormStatus]{
		OutputState: o.OutputState,
	}
}

func (o EvaluationFormStatusPtrOutput) Elem() EvaluationFormStatusOutput {
	return o.ApplyT(func(v *EvaluationFormStatus) EvaluationFormStatus {
		if v != nil {
			return *v
		}
		var ret EvaluationFormStatus
		return ret
	}).(EvaluationFormStatusOutput)
}

func (o EvaluationFormStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EvaluationFormStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EvaluationFormStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EvaluationFormStatusInput is an input type that accepts EvaluationFormStatusArgs and EvaluationFormStatusOutput values.
// You can construct a concrete instance of `EvaluationFormStatusInput` via:
//
//	EvaluationFormStatusArgs{...}
type EvaluationFormStatusInput interface {
	pulumi.Input

	ToEvaluationFormStatusOutput() EvaluationFormStatusOutput
	ToEvaluationFormStatusOutputWithContext(context.Context) EvaluationFormStatusOutput
}

var evaluationFormStatusPtrType = reflect.TypeOf((**EvaluationFormStatus)(nil)).Elem()

type EvaluationFormStatusPtrInput interface {
	pulumi.Input

	ToEvaluationFormStatusPtrOutput() EvaluationFormStatusPtrOutput
	ToEvaluationFormStatusPtrOutputWithContext(context.Context) EvaluationFormStatusPtrOutput
}

type evaluationFormStatusPtr string

func EvaluationFormStatusPtr(v string) EvaluationFormStatusPtrInput {
	return (*evaluationFormStatusPtr)(&v)
}

func (*evaluationFormStatusPtr) ElementType() reflect.Type {
	return evaluationFormStatusPtrType
}

func (in *evaluationFormStatusPtr) ToEvaluationFormStatusPtrOutput() EvaluationFormStatusPtrOutput {
	return pulumi.ToOutput(in).(EvaluationFormStatusPtrOutput)
}

func (in *evaluationFormStatusPtr) ToEvaluationFormStatusPtrOutputWithContext(ctx context.Context) EvaluationFormStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EvaluationFormStatusPtrOutput)
}

func (in *evaluationFormStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*EvaluationFormStatus] {
	return pulumix.Output[*EvaluationFormStatus]{
		OutputState: in.ToEvaluationFormStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The day that the hours of operation applies to.
type HoursOfOperationConfigDay string

const (
	HoursOfOperationConfigDaySunday    = HoursOfOperationConfigDay("SUNDAY")
	HoursOfOperationConfigDayMonday    = HoursOfOperationConfigDay("MONDAY")
	HoursOfOperationConfigDayTuesday   = HoursOfOperationConfigDay("TUESDAY")
	HoursOfOperationConfigDayWednesday = HoursOfOperationConfigDay("WEDNESDAY")
	HoursOfOperationConfigDayThursday  = HoursOfOperationConfigDay("THURSDAY")
	HoursOfOperationConfigDayFriday    = HoursOfOperationConfigDay("FRIDAY")
	HoursOfOperationConfigDaySaturday  = HoursOfOperationConfigDay("SATURDAY")
)

func (HoursOfOperationConfigDay) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return pulumi.ToOutput(e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return e.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return HoursOfOperationConfigDay(e).ToHoursOfOperationConfigDayOutputWithContext(ctx).ToHoursOfOperationConfigDayPtrOutputWithContext(ctx)
}

func (e HoursOfOperationConfigDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HoursOfOperationConfigDayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HoursOfOperationConfigDay) *HoursOfOperationConfigDay {
		return &v
	}).(HoursOfOperationConfigDayPtrOutput)
}

func (o HoursOfOperationConfigDayOutput) ToOutput(ctx context.Context) pulumix.Output[HoursOfOperationConfigDay] {
	return pulumix.Output[HoursOfOperationConfigDay]{
		OutputState: o.OutputState,
	}
}

func (o HoursOfOperationConfigDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HoursOfOperationConfigDayPtrOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*HoursOfOperationConfigDay] {
	return pulumix.Output[*HoursOfOperationConfigDay]{
		OutputState: o.OutputState,
	}
}

func (o HoursOfOperationConfigDayPtrOutput) Elem() HoursOfOperationConfigDayOutput {
	return o.ApplyT(func(v *HoursOfOperationConfigDay) HoursOfOperationConfigDay {
		if v != nil {
			return *v
		}
		var ret HoursOfOperationConfigDay
		return ret
	}).(HoursOfOperationConfigDayOutput)
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HoursOfOperationConfigDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HoursOfOperationConfigDayInput is an input type that accepts HoursOfOperationConfigDayArgs and HoursOfOperationConfigDayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigDayInput` via:
//
//	HoursOfOperationConfigDayArgs{...}
type HoursOfOperationConfigDayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput
	ToHoursOfOperationConfigDayOutputWithContext(context.Context) HoursOfOperationConfigDayOutput
}

var hoursOfOperationConfigDayPtrType = reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()

type HoursOfOperationConfigDayPtrInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput
	ToHoursOfOperationConfigDayPtrOutputWithContext(context.Context) HoursOfOperationConfigDayPtrOutput
}

type hoursOfOperationConfigDayPtr string

func HoursOfOperationConfigDayPtr(v string) HoursOfOperationConfigDayPtrInput {
	return (*hoursOfOperationConfigDayPtr)(&v)
}

func (*hoursOfOperationConfigDayPtr) ElementType() reflect.Type {
	return hoursOfOperationConfigDayPtrType
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutput(in).(HoursOfOperationConfigDayPtrOutput)
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HoursOfOperationConfigDayPtrOutput)
}

func (in *hoursOfOperationConfigDayPtr) ToOutput(ctx context.Context) pulumix.Output[*HoursOfOperationConfigDay] {
	return pulumix.Output[*HoursOfOperationConfigDay]{
		OutputState: in.ToHoursOfOperationConfigDayPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the type of directory integration for new instance.
type InstanceIdentityManagementType string

const (
	InstanceIdentityManagementTypeSaml              = InstanceIdentityManagementType("SAML")
	InstanceIdentityManagementTypeConnectManaged    = InstanceIdentityManagementType("CONNECT_MANAGED")
	InstanceIdentityManagementTypeExistingDirectory = InstanceIdentityManagementType("EXISTING_DIRECTORY")
)

func (InstanceIdentityManagementType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIdentityManagementType)(nil)).Elem()
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput {
	return pulumi.ToOutput(e).(InstanceIdentityManagementTypeOutput)
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypeOutputWithContext(ctx context.Context) InstanceIdentityManagementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceIdentityManagementTypeOutput)
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return e.ToInstanceIdentityManagementTypePtrOutputWithContext(context.Background())
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return InstanceIdentityManagementType(e).ToInstanceIdentityManagementTypeOutputWithContext(ctx).ToInstanceIdentityManagementTypePtrOutputWithContext(ctx)
}

func (e InstanceIdentityManagementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceIdentityManagementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceIdentityManagementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceIdentityManagementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceIdentityManagementTypeOutput struct{ *pulumi.OutputState }

func (InstanceIdentityManagementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIdentityManagementType)(nil)).Elem()
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput {
	return o
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypeOutputWithContext(ctx context.Context) InstanceIdentityManagementTypeOutput {
	return o
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return o.ToInstanceIdentityManagementTypePtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIdentityManagementType) *InstanceIdentityManagementType {
		return &v
	}).(InstanceIdentityManagementTypePtrOutput)
}

func (o InstanceIdentityManagementTypeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceIdentityManagementType] {
	return pulumix.Output[InstanceIdentityManagementType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceIdentityManagementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceIdentityManagementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceIdentityManagementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceIdentityManagementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceIdentityManagementTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceIdentityManagementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIdentityManagementType)(nil)).Elem()
}

func (o InstanceIdentityManagementTypePtrOutput) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return o
}

func (o InstanceIdentityManagementTypePtrOutput) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return o
}

func (o InstanceIdentityManagementTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceIdentityManagementType] {
	return pulumix.Output[*InstanceIdentityManagementType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceIdentityManagementTypePtrOutput) Elem() InstanceIdentityManagementTypeOutput {
	return o.ApplyT(func(v *InstanceIdentityManagementType) InstanceIdentityManagementType {
		if v != nil {
			return *v
		}
		var ret InstanceIdentityManagementType
		return ret
	}).(InstanceIdentityManagementTypeOutput)
}

func (o InstanceIdentityManagementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceIdentityManagementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceIdentityManagementTypeInput is an input type that accepts InstanceIdentityManagementTypeArgs and InstanceIdentityManagementTypeOutput values.
// You can construct a concrete instance of `InstanceIdentityManagementTypeInput` via:
//
//	InstanceIdentityManagementTypeArgs{...}
type InstanceIdentityManagementTypeInput interface {
	pulumi.Input

	ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput
	ToInstanceIdentityManagementTypeOutputWithContext(context.Context) InstanceIdentityManagementTypeOutput
}

var instanceIdentityManagementTypePtrType = reflect.TypeOf((**InstanceIdentityManagementType)(nil)).Elem()

type InstanceIdentityManagementTypePtrInput interface {
	pulumi.Input

	ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput
	ToInstanceIdentityManagementTypePtrOutputWithContext(context.Context) InstanceIdentityManagementTypePtrOutput
}

type instanceIdentityManagementTypePtr string

func InstanceIdentityManagementTypePtr(v string) InstanceIdentityManagementTypePtrInput {
	return (*instanceIdentityManagementTypePtr)(&v)
}

func (*instanceIdentityManagementTypePtr) ElementType() reflect.Type {
	return instanceIdentityManagementTypePtrType
}

func (in *instanceIdentityManagementTypePtr) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceIdentityManagementTypePtrOutput)
}

func (in *instanceIdentityManagementTypePtr) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceIdentityManagementTypePtrOutput)
}

func (in *instanceIdentityManagementTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceIdentityManagementType] {
	return pulumix.Output[*InstanceIdentityManagementType]{
		OutputState: in.ToInstanceIdentityManagementTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the creation status of new instance.
type InstanceStatus string

const (
	InstanceStatusCreationInProgress = InstanceStatus("CREATION_IN_PROGRESS")
	InstanceStatusCreationFailed     = InstanceStatus("CREATION_FAILED")
	InstanceStatusActive             = InstanceStatus("ACTIVE")
)

type InstanceStatusOutput struct{ *pulumi.OutputState }

func (InstanceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusOutput) ToInstanceStatusOutput() InstanceStatusOutput {
	return o
}

func (o InstanceStatusOutput) ToInstanceStatusOutputWithContext(ctx context.Context) InstanceStatusOutput {
	return o
}

func (o InstanceStatusOutput) ToInstanceStatusPtrOutput() InstanceStatusPtrOutput {
	return o.ToInstanceStatusPtrOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToInstanceStatusPtrOutputWithContext(ctx context.Context) InstanceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStatus) *InstanceStatus {
		return &v
	}).(InstanceStatusPtrOutput)
}

func (o InstanceStatusOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStatus] {
	return pulumix.Output[InstanceStatus]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStatusPtrOutput struct{ *pulumi.OutputState }

func (InstanceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusPtrOutput) ToInstanceStatusPtrOutput() InstanceStatusPtrOutput {
	return o
}

func (o InstanceStatusPtrOutput) ToInstanceStatusPtrOutputWithContext(ctx context.Context) InstanceStatusPtrOutput {
	return o
}

func (o InstanceStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStatus] {
	return pulumix.Output[*InstanceStatus]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStatusPtrOutput) Elem() InstanceStatusOutput {
	return o.ApplyT(func(v *InstanceStatus) InstanceStatus {
		if v != nil {
			return *v
		}
		var ret InstanceStatus
		return ret
	}).(InstanceStatusOutput)
}

func (o InstanceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Specifies default encryption using AWS KMS-Managed Keys
type InstanceStorageConfigEncryptionType string

const (
	InstanceStorageConfigEncryptionTypeKms = InstanceStorageConfigEncryptionType("KMS")
)

func (InstanceStorageConfigEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigEncryptionTypeOutput)
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigEncryptionTypeOutput)
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return e.ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return InstanceStorageConfigEncryptionType(e).ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx).ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigEncryptionTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypeOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigEncryptionType) *InstanceStorageConfigEncryptionType {
		return &v
	}).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigEncryptionType] {
	return pulumix.Output[InstanceStorageConfigEncryptionType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigEncryptionType] {
	return pulumix.Output[*InstanceStorageConfigEncryptionType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) Elem() InstanceStorageConfigEncryptionTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionType) InstanceStorageConfigEncryptionType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigEncryptionType
		return ret
	}).(InstanceStorageConfigEncryptionTypeOutput)
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigEncryptionTypeInput is an input type that accepts InstanceStorageConfigEncryptionTypeArgs and InstanceStorageConfigEncryptionTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionTypeInput` via:
//
//	InstanceStorageConfigEncryptionTypeArgs{...}
type InstanceStorageConfigEncryptionTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput
	ToInstanceStorageConfigEncryptionTypeOutputWithContext(context.Context) InstanceStorageConfigEncryptionTypeOutput
}

var instanceStorageConfigEncryptionTypePtrType = reflect.TypeOf((**InstanceStorageConfigEncryptionType)(nil)).Elem()

type InstanceStorageConfigEncryptionTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput
	ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Context) InstanceStorageConfigEncryptionTypePtrOutput
}

type instanceStorageConfigEncryptionTypePtr string

func InstanceStorageConfigEncryptionTypePtr(v string) InstanceStorageConfigEncryptionTypePtrInput {
	return (*instanceStorageConfigEncryptionTypePtr)(&v)
}

func (*instanceStorageConfigEncryptionTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigEncryptionTypePtrType
}

func (in *instanceStorageConfigEncryptionTypePtr) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (in *instanceStorageConfigEncryptionTypePtr) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (in *instanceStorageConfigEncryptionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigEncryptionType] {
	return pulumix.Output[*InstanceStorageConfigEncryptionType]{
		OutputState: in.ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the type of storage resource available for the instance
type InstanceStorageConfigInstanceStorageResourceType string

const (
	InstanceStorageConfigInstanceStorageResourceTypeChatTranscripts     = InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS")
	InstanceStorageConfigInstanceStorageResourceTypeCallRecordings      = InstanceStorageConfigInstanceStorageResourceType("CALL_RECORDINGS")
	InstanceStorageConfigInstanceStorageResourceTypeScheduledReports    = InstanceStorageConfigInstanceStorageResourceType("SCHEDULED_REPORTS")
	InstanceStorageConfigInstanceStorageResourceTypeMediaStreams        = InstanceStorageConfigInstanceStorageResourceType("MEDIA_STREAMS")
	InstanceStorageConfigInstanceStorageResourceTypeContactTraceRecords = InstanceStorageConfigInstanceStorageResourceType("CONTACT_TRACE_RECORDS")
	InstanceStorageConfigInstanceStorageResourceTypeAgentEvents         = InstanceStorageConfigInstanceStorageResourceType("AGENT_EVENTS")
)

func (InstanceStorageConfigInstanceStorageResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return e.ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return InstanceStorageConfigInstanceStorageResourceType(e).ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx).ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigInstanceStorageResourceTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigInstanceStorageResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o.ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigInstanceStorageResourceType) *InstanceStorageConfigInstanceStorageResourceType {
		return &v
	}).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigInstanceStorageResourceType] {
	return pulumix.Output[InstanceStorageConfigInstanceStorageResourceType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigInstanceStorageResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigInstanceStorageResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigInstanceStorageResourceTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigInstanceStorageResourceType] {
	return pulumix.Output[*InstanceStorageConfigInstanceStorageResourceType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) Elem() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigInstanceStorageResourceType) InstanceStorageConfigInstanceStorageResourceType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigInstanceStorageResourceType
		return ret
	}).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigInstanceStorageResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigInstanceStorageResourceTypeInput is an input type that accepts InstanceStorageConfigInstanceStorageResourceTypeArgs and InstanceStorageConfigInstanceStorageResourceTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigInstanceStorageResourceTypeInput` via:
//
//	InstanceStorageConfigInstanceStorageResourceTypeArgs{...}
type InstanceStorageConfigInstanceStorageResourceTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput
	ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput
}

var instanceStorageConfigInstanceStorageResourceTypePtrType = reflect.TypeOf((**InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()

type InstanceStorageConfigInstanceStorageResourceTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput
	ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput
}

type instanceStorageConfigInstanceStorageResourceTypePtr string

func InstanceStorageConfigInstanceStorageResourceTypePtr(v string) InstanceStorageConfigInstanceStorageResourceTypePtrInput {
	return (*instanceStorageConfigInstanceStorageResourceTypePtr)(&v)
}

func (*instanceStorageConfigInstanceStorageResourceTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigInstanceStorageResourceTypePtrType
}

func (in *instanceStorageConfigInstanceStorageResourceTypePtr) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

func (in *instanceStorageConfigInstanceStorageResourceTypePtr) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

func (in *instanceStorageConfigInstanceStorageResourceTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigInstanceStorageResourceType] {
	return pulumix.Output[*InstanceStorageConfigInstanceStorageResourceType]{
		OutputState: in.ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the storage type to be associated with the instance
type InstanceStorageConfigStorageType string

const (
	InstanceStorageConfigStorageTypeS3                 = InstanceStorageConfigStorageType("S3")
	InstanceStorageConfigStorageTypeKinesisVideoStream = InstanceStorageConfigStorageType("KINESIS_VIDEO_STREAM")
	InstanceStorageConfigStorageTypeKinesisStream      = InstanceStorageConfigStorageType("KINESIS_STREAM")
	InstanceStorageConfigStorageTypeKinesisFirehose    = InstanceStorageConfigStorageType("KINESIS_FIREHOSE")
)

func (InstanceStorageConfigStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageType)(nil)).Elem()
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigStorageTypeOutput)
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypeOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigStorageTypeOutput)
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return e.ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return InstanceStorageConfigStorageType(e).ToInstanceStorageConfigStorageTypeOutputWithContext(ctx).ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigStorageTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageType)(nil)).Elem()
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput {
	return o
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypeOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypeOutput {
	return o
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return o.ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageType) *InstanceStorageConfigStorageType {
		return &v
	}).(InstanceStorageConfigStorageTypePtrOutput)
}

func (o InstanceStorageConfigStorageTypeOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceStorageConfigStorageType] {
	return pulumix.Output[InstanceStorageConfigStorageType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageType)(nil)).Elem()
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return o
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return o
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageType] {
	return pulumix.Output[*InstanceStorageConfigStorageType]{
		OutputState: o.OutputState,
	}
}

func (o InstanceStorageConfigStorageTypePtrOutput) Elem() InstanceStorageConfigStorageTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageType) InstanceStorageConfigStorageType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageType
		return ret
	}).(InstanceStorageConfigStorageTypeOutput)
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigStorageTypeInput is an input type that accepts InstanceStorageConfigStorageTypeArgs and InstanceStorageConfigStorageTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageTypeInput` via:
//
//	InstanceStorageConfigStorageTypeArgs{...}
type InstanceStorageConfigStorageTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput
	ToInstanceStorageConfigStorageTypeOutputWithContext(context.Context) InstanceStorageConfigStorageTypeOutput
}

var instanceStorageConfigStorageTypePtrType = reflect.TypeOf((**InstanceStorageConfigStorageType)(nil)).Elem()

type InstanceStorageConfigStorageTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput
	ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Context) InstanceStorageConfigStorageTypePtrOutput
}

type instanceStorageConfigStorageTypePtr string

func InstanceStorageConfigStorageTypePtr(v string) InstanceStorageConfigStorageTypePtrInput {
	return (*instanceStorageConfigStorageTypePtr)(&v)
}

func (*instanceStorageConfigStorageTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigStorageTypePtrType
}

func (in *instanceStorageConfigStorageTypePtr) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigStorageTypePtrOutput)
}

func (in *instanceStorageConfigStorageTypePtr) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigStorageTypePtrOutput)
}

func (in *instanceStorageConfigStorageTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceStorageConfigStorageType] {
	return pulumix.Output[*InstanceStorageConfigStorageType]{
		OutputState: in.ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the integration type to be associated with the instance
type IntegrationAssociationIntegrationType string

const (
	IntegrationAssociationIntegrationTypeLexBot         = IntegrationAssociationIntegrationType("LEX_BOT")
	IntegrationAssociationIntegrationTypeLambdaFunction = IntegrationAssociationIntegrationType("LAMBDA_FUNCTION")
)

func (IntegrationAssociationIntegrationType) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput {
	return pulumi.ToOutput(e).(IntegrationAssociationIntegrationTypeOutput)
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationAssociationIntegrationTypeOutput)
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return e.ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Background())
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return IntegrationAssociationIntegrationType(e).ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx).ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx)
}

func (e IntegrationAssociationIntegrationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationAssociationIntegrationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationAssociationIntegrationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationAssociationIntegrationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationAssociationIntegrationTypeOutput struct{ *pulumi.OutputState }

func (IntegrationAssociationIntegrationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypeOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return o.ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAssociationIntegrationType) *IntegrationAssociationIntegrationType {
		return &v
	}).(IntegrationAssociationIntegrationTypePtrOutput)
}

func (o IntegrationAssociationIntegrationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[IntegrationAssociationIntegrationType] {
	return pulumix.Output[IntegrationAssociationIntegrationType]{
		OutputState: o.OutputState,
	}
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationAssociationIntegrationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationAssociationIntegrationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationAssociationIntegrationTypePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAssociationIntegrationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IntegrationAssociationIntegrationType] {
	return pulumix.Output[*IntegrationAssociationIntegrationType]{
		OutputState: o.OutputState,
	}
}

func (o IntegrationAssociationIntegrationTypePtrOutput) Elem() IntegrationAssociationIntegrationTypeOutput {
	return o.ApplyT(func(v *IntegrationAssociationIntegrationType) IntegrationAssociationIntegrationType {
		if v != nil {
			return *v
		}
		var ret IntegrationAssociationIntegrationType
		return ret
	}).(IntegrationAssociationIntegrationTypeOutput)
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationAssociationIntegrationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationAssociationIntegrationTypeInput is an input type that accepts IntegrationAssociationIntegrationTypeArgs and IntegrationAssociationIntegrationTypeOutput values.
// You can construct a concrete instance of `IntegrationAssociationIntegrationTypeInput` via:
//
//	IntegrationAssociationIntegrationTypeArgs{...}
type IntegrationAssociationIntegrationTypeInput interface {
	pulumi.Input

	ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput
	ToIntegrationAssociationIntegrationTypeOutputWithContext(context.Context) IntegrationAssociationIntegrationTypeOutput
}

var integrationAssociationIntegrationTypePtrType = reflect.TypeOf((**IntegrationAssociationIntegrationType)(nil)).Elem()

type IntegrationAssociationIntegrationTypePtrInput interface {
	pulumi.Input

	ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput
	ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Context) IntegrationAssociationIntegrationTypePtrOutput
}

type integrationAssociationIntegrationTypePtr string

func IntegrationAssociationIntegrationTypePtr(v string) IntegrationAssociationIntegrationTypePtrInput {
	return (*integrationAssociationIntegrationTypePtr)(&v)
}

func (*integrationAssociationIntegrationTypePtr) ElementType() reflect.Type {
	return integrationAssociationIntegrationTypePtrType
}

func (in *integrationAssociationIntegrationTypePtr) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return pulumi.ToOutput(in).(IntegrationAssociationIntegrationTypePtrOutput)
}

func (in *integrationAssociationIntegrationTypePtr) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationAssociationIntegrationTypePtrOutput)
}

func (in *integrationAssociationIntegrationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*IntegrationAssociationIntegrationType] {
	return pulumix.Output[*IntegrationAssociationIntegrationType]{
		OutputState: in.ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the queue.
type QueueStatus string

const (
	QueueStatusEnabled  = QueueStatus("ENABLED")
	QueueStatusDisabled = QueueStatus("DISABLED")
)

func (QueueStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueStatus)(nil)).Elem()
}

func (e QueueStatus) ToQueueStatusOutput() QueueStatusOutput {
	return pulumi.ToOutput(e).(QueueStatusOutput)
}

func (e QueueStatus) ToQueueStatusOutputWithContext(ctx context.Context) QueueStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QueueStatusOutput)
}

func (e QueueStatus) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return e.ToQueueStatusPtrOutputWithContext(context.Background())
}

func (e QueueStatus) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return QueueStatus(e).ToQueueStatusOutputWithContext(ctx).ToQueueStatusPtrOutputWithContext(ctx)
}

func (e QueueStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueueStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueueStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QueueStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QueueStatusOutput struct{ *pulumi.OutputState }

func (QueueStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueStatus)(nil)).Elem()
}

func (o QueueStatusOutput) ToQueueStatusOutput() QueueStatusOutput {
	return o
}

func (o QueueStatusOutput) ToQueueStatusOutputWithContext(ctx context.Context) QueueStatusOutput {
	return o
}

func (o QueueStatusOutput) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return o.ToQueueStatusPtrOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueStatus) *QueueStatus {
		return &v
	}).(QueueStatusPtrOutput)
}

func (o QueueStatusOutput) ToOutput(ctx context.Context) pulumix.Output[QueueStatus] {
	return pulumix.Output[QueueStatus]{
		OutputState: o.OutputState,
	}
}

func (o QueueStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QueueStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QueueStatusPtrOutput struct{ *pulumi.OutputState }

func (QueueStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueStatus)(nil)).Elem()
}

func (o QueueStatusPtrOutput) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return o
}

func (o QueueStatusPtrOutput) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return o
}

func (o QueueStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*QueueStatus] {
	return pulumix.Output[*QueueStatus]{
		OutputState: o.OutputState,
	}
}

func (o QueueStatusPtrOutput) Elem() QueueStatusOutput {
	return o.ApplyT(func(v *QueueStatus) QueueStatus {
		if v != nil {
			return *v
		}
		var ret QueueStatus
		return ret
	}).(QueueStatusOutput)
}

func (o QueueStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QueueStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QueueStatusInput is an input type that accepts QueueStatusArgs and QueueStatusOutput values.
// You can construct a concrete instance of `QueueStatusInput` via:
//
//	QueueStatusArgs{...}
type QueueStatusInput interface {
	pulumi.Input

	ToQueueStatusOutput() QueueStatusOutput
	ToQueueStatusOutputWithContext(context.Context) QueueStatusOutput
}

var queueStatusPtrType = reflect.TypeOf((**QueueStatus)(nil)).Elem()

type QueueStatusPtrInput interface {
	pulumi.Input

	ToQueueStatusPtrOutput() QueueStatusPtrOutput
	ToQueueStatusPtrOutputWithContext(context.Context) QueueStatusPtrOutput
}

type queueStatusPtr string

func QueueStatusPtr(v string) QueueStatusPtrInput {
	return (*queueStatusPtr)(&v)
}

func (*queueStatusPtr) ElementType() reflect.Type {
	return queueStatusPtrType
}

func (in *queueStatusPtr) ToQueueStatusPtrOutput() QueueStatusPtrOutput {
	return pulumi.ToOutput(in).(QueueStatusPtrOutput)
}

func (in *queueStatusPtr) ToQueueStatusPtrOutputWithContext(ctx context.Context) QueueStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QueueStatusPtrOutput)
}

func (in *queueStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*QueueStatus] {
	return pulumix.Output[*QueueStatus]{
		OutputState: in.ToQueueStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of queue.
type QueueType string

const (
	QueueTypeStandard = QueueType("STANDARD")
	QueueTypeAgent    = QueueType("AGENT")
)

type QueueTypeOutput struct{ *pulumi.OutputState }

func (QueueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueType)(nil)).Elem()
}

func (o QueueTypeOutput) ToQueueTypeOutput() QueueTypeOutput {
	return o
}

func (o QueueTypeOutput) ToQueueTypeOutputWithContext(ctx context.Context) QueueTypeOutput {
	return o
}

func (o QueueTypeOutput) ToQueueTypePtrOutput() QueueTypePtrOutput {
	return o.ToQueueTypePtrOutputWithContext(context.Background())
}

func (o QueueTypeOutput) ToQueueTypePtrOutputWithContext(ctx context.Context) QueueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueType) *QueueType {
		return &v
	}).(QueueTypePtrOutput)
}

func (o QueueTypeOutput) ToOutput(ctx context.Context) pulumix.Output[QueueType] {
	return pulumix.Output[QueueType]{
		OutputState: o.OutputState,
	}
}

func (o QueueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QueueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QueueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QueueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QueueTypePtrOutput struct{ *pulumi.OutputState }

func (QueueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueType)(nil)).Elem()
}

func (o QueueTypePtrOutput) ToQueueTypePtrOutput() QueueTypePtrOutput {
	return o
}

func (o QueueTypePtrOutput) ToQueueTypePtrOutputWithContext(ctx context.Context) QueueTypePtrOutput {
	return o
}

func (o QueueTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*QueueType] {
	return pulumix.Output[*QueueType]{
		OutputState: o.OutputState,
	}
}

func (o QueueTypePtrOutput) Elem() QueueTypeOutput {
	return o.ApplyT(func(v *QueueType) QueueType {
		if v != nil {
			return *v
		}
		var ret QueueType
		return ret
	}).(QueueTypeOutput)
}

func (o QueueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QueueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QueueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
type QuickConnectType string

const (
	QuickConnectTypePhoneNumber = QuickConnectType("PHONE_NUMBER")
	QuickConnectTypeQueue       = QuickConnectType("QUEUE")
	QuickConnectTypeUser        = QuickConnectType("USER")
)

func (QuickConnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (e QuickConnectType) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return pulumi.ToOutput(e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return e.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return QuickConnectType(e).ToQuickConnectTypeOutputWithContext(ctx).ToQuickConnectTypePtrOutputWithContext(ctx)
}

func (e QuickConnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QuickConnectTypeOutput struct{ *pulumi.OutputState }

func (QuickConnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectType) *QuickConnectType {
		return &v
	}).(QuickConnectTypePtrOutput)
}

func (o QuickConnectTypeOutput) ToOutput(ctx context.Context) pulumix.Output[QuickConnectType] {
	return pulumix.Output[QuickConnectType]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QuickConnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QuickConnectTypePtrOutput struct{ *pulumi.OutputState }

func (QuickConnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*QuickConnectType] {
	return pulumix.Output[*QuickConnectType]{
		OutputState: o.OutputState,
	}
}

func (o QuickConnectTypePtrOutput) Elem() QuickConnectTypeOutput {
	return o.ApplyT(func(v *QuickConnectType) QuickConnectType {
		if v != nil {
			return *v
		}
		var ret QuickConnectType
		return ret
	}).(QuickConnectTypeOutput)
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QuickConnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QuickConnectTypeInput is an input type that accepts QuickConnectTypeArgs and QuickConnectTypeOutput values.
// You can construct a concrete instance of `QuickConnectTypeInput` via:
//
//	QuickConnectTypeArgs{...}
type QuickConnectTypeInput interface {
	pulumi.Input

	ToQuickConnectTypeOutput() QuickConnectTypeOutput
	ToQuickConnectTypeOutputWithContext(context.Context) QuickConnectTypeOutput
}

var quickConnectTypePtrType = reflect.TypeOf((**QuickConnectType)(nil)).Elem()

type QuickConnectTypePtrInput interface {
	pulumi.Input

	ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput
	ToQuickConnectTypePtrOutputWithContext(context.Context) QuickConnectTypePtrOutput
}

type quickConnectTypePtr string

func QuickConnectTypePtr(v string) QuickConnectTypePtrInput {
	return (*quickConnectTypePtr)(&v)
}

func (*quickConnectTypePtr) ElementType() reflect.Type {
	return quickConnectTypePtrType
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return pulumi.ToOutput(in).(QuickConnectTypePtrOutput)
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QuickConnectTypePtrOutput)
}

func (in *quickConnectTypePtr) ToOutput(ctx context.Context) pulumix.Output[*QuickConnectType] {
	return pulumix.Output[*QuickConnectType]{
		OutputState: in.ToQuickConnectTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Whether agents with this routing profile will have their routing order calculated based on longest idle time or time since their last inbound contact.
type RoutingProfileAgentAvailabilityTimer string

const (
	RoutingProfileAgentAvailabilityTimerTimeSinceLastActivity = RoutingProfileAgentAvailabilityTimer("TIME_SINCE_LAST_ACTIVITY")
	RoutingProfileAgentAvailabilityTimerTimeSinceLastInbound  = RoutingProfileAgentAvailabilityTimer("TIME_SINCE_LAST_INBOUND")
)

func (RoutingProfileAgentAvailabilityTimer) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileAgentAvailabilityTimer)(nil)).Elem()
}

func (e RoutingProfileAgentAvailabilityTimer) ToRoutingProfileAgentAvailabilityTimerOutput() RoutingProfileAgentAvailabilityTimerOutput {
	return pulumi.ToOutput(e).(RoutingProfileAgentAvailabilityTimerOutput)
}

func (e RoutingProfileAgentAvailabilityTimer) ToRoutingProfileAgentAvailabilityTimerOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoutingProfileAgentAvailabilityTimerOutput)
}

func (e RoutingProfileAgentAvailabilityTimer) ToRoutingProfileAgentAvailabilityTimerPtrOutput() RoutingProfileAgentAvailabilityTimerPtrOutput {
	return e.ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(context.Background())
}

func (e RoutingProfileAgentAvailabilityTimer) ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerPtrOutput {
	return RoutingProfileAgentAvailabilityTimer(e).ToRoutingProfileAgentAvailabilityTimerOutputWithContext(ctx).ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx)
}

func (e RoutingProfileAgentAvailabilityTimer) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileAgentAvailabilityTimer) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileAgentAvailabilityTimer) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoutingProfileAgentAvailabilityTimer) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoutingProfileAgentAvailabilityTimerOutput struct{ *pulumi.OutputState }

func (RoutingProfileAgentAvailabilityTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileAgentAvailabilityTimer)(nil)).Elem()
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToRoutingProfileAgentAvailabilityTimerOutput() RoutingProfileAgentAvailabilityTimerOutput {
	return o
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToRoutingProfileAgentAvailabilityTimerOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerOutput {
	return o
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToRoutingProfileAgentAvailabilityTimerPtrOutput() RoutingProfileAgentAvailabilityTimerPtrOutput {
	return o.ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(context.Background())
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingProfileAgentAvailabilityTimer) *RoutingProfileAgentAvailabilityTimer {
		return &v
	}).(RoutingProfileAgentAvailabilityTimerPtrOutput)
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileAgentAvailabilityTimer] {
	return pulumix.Output[RoutingProfileAgentAvailabilityTimer]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileAgentAvailabilityTimer) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileAgentAvailabilityTimerOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileAgentAvailabilityTimer) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoutingProfileAgentAvailabilityTimerPtrOutput struct{ *pulumi.OutputState }

func (RoutingProfileAgentAvailabilityTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProfileAgentAvailabilityTimer)(nil)).Elem()
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) ToRoutingProfileAgentAvailabilityTimerPtrOutput() RoutingProfileAgentAvailabilityTimerPtrOutput {
	return o
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerPtrOutput {
	return o
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileAgentAvailabilityTimer] {
	return pulumix.Output[*RoutingProfileAgentAvailabilityTimer]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) Elem() RoutingProfileAgentAvailabilityTimerOutput {
	return o.ApplyT(func(v *RoutingProfileAgentAvailabilityTimer) RoutingProfileAgentAvailabilityTimer {
		if v != nil {
			return *v
		}
		var ret RoutingProfileAgentAvailabilityTimer
		return ret
	}).(RoutingProfileAgentAvailabilityTimerOutput)
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileAgentAvailabilityTimerPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoutingProfileAgentAvailabilityTimer) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoutingProfileAgentAvailabilityTimerInput is an input type that accepts RoutingProfileAgentAvailabilityTimerArgs and RoutingProfileAgentAvailabilityTimerOutput values.
// You can construct a concrete instance of `RoutingProfileAgentAvailabilityTimerInput` via:
//
//	RoutingProfileAgentAvailabilityTimerArgs{...}
type RoutingProfileAgentAvailabilityTimerInput interface {
	pulumi.Input

	ToRoutingProfileAgentAvailabilityTimerOutput() RoutingProfileAgentAvailabilityTimerOutput
	ToRoutingProfileAgentAvailabilityTimerOutputWithContext(context.Context) RoutingProfileAgentAvailabilityTimerOutput
}

var routingProfileAgentAvailabilityTimerPtrType = reflect.TypeOf((**RoutingProfileAgentAvailabilityTimer)(nil)).Elem()

type RoutingProfileAgentAvailabilityTimerPtrInput interface {
	pulumi.Input

	ToRoutingProfileAgentAvailabilityTimerPtrOutput() RoutingProfileAgentAvailabilityTimerPtrOutput
	ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(context.Context) RoutingProfileAgentAvailabilityTimerPtrOutput
}

type routingProfileAgentAvailabilityTimerPtr string

func RoutingProfileAgentAvailabilityTimerPtr(v string) RoutingProfileAgentAvailabilityTimerPtrInput {
	return (*routingProfileAgentAvailabilityTimerPtr)(&v)
}

func (*routingProfileAgentAvailabilityTimerPtr) ElementType() reflect.Type {
	return routingProfileAgentAvailabilityTimerPtrType
}

func (in *routingProfileAgentAvailabilityTimerPtr) ToRoutingProfileAgentAvailabilityTimerPtrOutput() RoutingProfileAgentAvailabilityTimerPtrOutput {
	return pulumi.ToOutput(in).(RoutingProfileAgentAvailabilityTimerPtrOutput)
}

func (in *routingProfileAgentAvailabilityTimerPtr) ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx context.Context) RoutingProfileAgentAvailabilityTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoutingProfileAgentAvailabilityTimerPtrOutput)
}

func (in *routingProfileAgentAvailabilityTimerPtr) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileAgentAvailabilityTimer] {
	return pulumix.Output[*RoutingProfileAgentAvailabilityTimer]{
		OutputState: in.ToRoutingProfileAgentAvailabilityTimerPtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies the other channels that can be routed to an agent handling their current channel.
type RoutingProfileBehaviorType string

const (
	RoutingProfileBehaviorTypeRouteCurrentChannelOnly = RoutingProfileBehaviorType("ROUTE_CURRENT_CHANNEL_ONLY")
	RoutingProfileBehaviorTypeRouteAnyChannel         = RoutingProfileBehaviorType("ROUTE_ANY_CHANNEL")
)

func (RoutingProfileBehaviorType) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileBehaviorType)(nil)).Elem()
}

func (e RoutingProfileBehaviorType) ToRoutingProfileBehaviorTypeOutput() RoutingProfileBehaviorTypeOutput {
	return pulumi.ToOutput(e).(RoutingProfileBehaviorTypeOutput)
}

func (e RoutingProfileBehaviorType) ToRoutingProfileBehaviorTypeOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoutingProfileBehaviorTypeOutput)
}

func (e RoutingProfileBehaviorType) ToRoutingProfileBehaviorTypePtrOutput() RoutingProfileBehaviorTypePtrOutput {
	return e.ToRoutingProfileBehaviorTypePtrOutputWithContext(context.Background())
}

func (e RoutingProfileBehaviorType) ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypePtrOutput {
	return RoutingProfileBehaviorType(e).ToRoutingProfileBehaviorTypeOutputWithContext(ctx).ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx)
}

func (e RoutingProfileBehaviorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileBehaviorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileBehaviorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoutingProfileBehaviorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoutingProfileBehaviorTypeOutput struct{ *pulumi.OutputState }

func (RoutingProfileBehaviorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileBehaviorType)(nil)).Elem()
}

func (o RoutingProfileBehaviorTypeOutput) ToRoutingProfileBehaviorTypeOutput() RoutingProfileBehaviorTypeOutput {
	return o
}

func (o RoutingProfileBehaviorTypeOutput) ToRoutingProfileBehaviorTypeOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypeOutput {
	return o
}

func (o RoutingProfileBehaviorTypeOutput) ToRoutingProfileBehaviorTypePtrOutput() RoutingProfileBehaviorTypePtrOutput {
	return o.ToRoutingProfileBehaviorTypePtrOutputWithContext(context.Background())
}

func (o RoutingProfileBehaviorTypeOutput) ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingProfileBehaviorType) *RoutingProfileBehaviorType {
		return &v
	}).(RoutingProfileBehaviorTypePtrOutput)
}

func (o RoutingProfileBehaviorTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileBehaviorType] {
	return pulumix.Output[RoutingProfileBehaviorType]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileBehaviorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoutingProfileBehaviorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileBehaviorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoutingProfileBehaviorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileBehaviorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileBehaviorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoutingProfileBehaviorTypePtrOutput struct{ *pulumi.OutputState }

func (RoutingProfileBehaviorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProfileBehaviorType)(nil)).Elem()
}

func (o RoutingProfileBehaviorTypePtrOutput) ToRoutingProfileBehaviorTypePtrOutput() RoutingProfileBehaviorTypePtrOutput {
	return o
}

func (o RoutingProfileBehaviorTypePtrOutput) ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypePtrOutput {
	return o
}

func (o RoutingProfileBehaviorTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileBehaviorType] {
	return pulumix.Output[*RoutingProfileBehaviorType]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileBehaviorTypePtrOutput) Elem() RoutingProfileBehaviorTypeOutput {
	return o.ApplyT(func(v *RoutingProfileBehaviorType) RoutingProfileBehaviorType {
		if v != nil {
			return *v
		}
		var ret RoutingProfileBehaviorType
		return ret
	}).(RoutingProfileBehaviorTypeOutput)
}

func (o RoutingProfileBehaviorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileBehaviorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoutingProfileBehaviorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoutingProfileBehaviorTypeInput is an input type that accepts RoutingProfileBehaviorTypeArgs and RoutingProfileBehaviorTypeOutput values.
// You can construct a concrete instance of `RoutingProfileBehaviorTypeInput` via:
//
//	RoutingProfileBehaviorTypeArgs{...}
type RoutingProfileBehaviorTypeInput interface {
	pulumi.Input

	ToRoutingProfileBehaviorTypeOutput() RoutingProfileBehaviorTypeOutput
	ToRoutingProfileBehaviorTypeOutputWithContext(context.Context) RoutingProfileBehaviorTypeOutput
}

var routingProfileBehaviorTypePtrType = reflect.TypeOf((**RoutingProfileBehaviorType)(nil)).Elem()

type RoutingProfileBehaviorTypePtrInput interface {
	pulumi.Input

	ToRoutingProfileBehaviorTypePtrOutput() RoutingProfileBehaviorTypePtrOutput
	ToRoutingProfileBehaviorTypePtrOutputWithContext(context.Context) RoutingProfileBehaviorTypePtrOutput
}

type routingProfileBehaviorTypePtr string

func RoutingProfileBehaviorTypePtr(v string) RoutingProfileBehaviorTypePtrInput {
	return (*routingProfileBehaviorTypePtr)(&v)
}

func (*routingProfileBehaviorTypePtr) ElementType() reflect.Type {
	return routingProfileBehaviorTypePtrType
}

func (in *routingProfileBehaviorTypePtr) ToRoutingProfileBehaviorTypePtrOutput() RoutingProfileBehaviorTypePtrOutput {
	return pulumi.ToOutput(in).(RoutingProfileBehaviorTypePtrOutput)
}

func (in *routingProfileBehaviorTypePtr) ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx context.Context) RoutingProfileBehaviorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoutingProfileBehaviorTypePtrOutput)
}

func (in *routingProfileBehaviorTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileBehaviorType] {
	return pulumix.Output[*RoutingProfileBehaviorType]{
		OutputState: in.ToRoutingProfileBehaviorTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The channels that agents can handle in the Contact Control Panel (CCP).
type RoutingProfileChannel string

const (
	RoutingProfileChannelVoice = RoutingProfileChannel("VOICE")
	RoutingProfileChannelChat  = RoutingProfileChannel("CHAT")
	RoutingProfileChannelTask  = RoutingProfileChannel("TASK")
)

func (RoutingProfileChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileChannel)(nil)).Elem()
}

func (e RoutingProfileChannel) ToRoutingProfileChannelOutput() RoutingProfileChannelOutput {
	return pulumi.ToOutput(e).(RoutingProfileChannelOutput)
}

func (e RoutingProfileChannel) ToRoutingProfileChannelOutputWithContext(ctx context.Context) RoutingProfileChannelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoutingProfileChannelOutput)
}

func (e RoutingProfileChannel) ToRoutingProfileChannelPtrOutput() RoutingProfileChannelPtrOutput {
	return e.ToRoutingProfileChannelPtrOutputWithContext(context.Background())
}

func (e RoutingProfileChannel) ToRoutingProfileChannelPtrOutputWithContext(ctx context.Context) RoutingProfileChannelPtrOutput {
	return RoutingProfileChannel(e).ToRoutingProfileChannelOutputWithContext(ctx).ToRoutingProfileChannelPtrOutputWithContext(ctx)
}

func (e RoutingProfileChannel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileChannel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingProfileChannel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoutingProfileChannel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoutingProfileChannelOutput struct{ *pulumi.OutputState }

func (RoutingProfileChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileChannel)(nil)).Elem()
}

func (o RoutingProfileChannelOutput) ToRoutingProfileChannelOutput() RoutingProfileChannelOutput {
	return o
}

func (o RoutingProfileChannelOutput) ToRoutingProfileChannelOutputWithContext(ctx context.Context) RoutingProfileChannelOutput {
	return o
}

func (o RoutingProfileChannelOutput) ToRoutingProfileChannelPtrOutput() RoutingProfileChannelPtrOutput {
	return o.ToRoutingProfileChannelPtrOutputWithContext(context.Background())
}

func (o RoutingProfileChannelOutput) ToRoutingProfileChannelPtrOutputWithContext(ctx context.Context) RoutingProfileChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingProfileChannel) *RoutingProfileChannel {
		return &v
	}).(RoutingProfileChannelPtrOutput)
}

func (o RoutingProfileChannelOutput) ToOutput(ctx context.Context) pulumix.Output[RoutingProfileChannel] {
	return pulumix.Output[RoutingProfileChannel]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileChannelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoutingProfileChannelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileChannel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoutingProfileChannelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileChannelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingProfileChannel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoutingProfileChannelPtrOutput struct{ *pulumi.OutputState }

func (RoutingProfileChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProfileChannel)(nil)).Elem()
}

func (o RoutingProfileChannelPtrOutput) ToRoutingProfileChannelPtrOutput() RoutingProfileChannelPtrOutput {
	return o
}

func (o RoutingProfileChannelPtrOutput) ToRoutingProfileChannelPtrOutputWithContext(ctx context.Context) RoutingProfileChannelPtrOutput {
	return o
}

func (o RoutingProfileChannelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileChannel] {
	return pulumix.Output[*RoutingProfileChannel]{
		OutputState: o.OutputState,
	}
}

func (o RoutingProfileChannelPtrOutput) Elem() RoutingProfileChannelOutput {
	return o.ApplyT(func(v *RoutingProfileChannel) RoutingProfileChannel {
		if v != nil {
			return *v
		}
		var ret RoutingProfileChannel
		return ret
	}).(RoutingProfileChannelOutput)
}

func (o RoutingProfileChannelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingProfileChannelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoutingProfileChannel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoutingProfileChannelInput is an input type that accepts RoutingProfileChannelArgs and RoutingProfileChannelOutput values.
// You can construct a concrete instance of `RoutingProfileChannelInput` via:
//
//	RoutingProfileChannelArgs{...}
type RoutingProfileChannelInput interface {
	pulumi.Input

	ToRoutingProfileChannelOutput() RoutingProfileChannelOutput
	ToRoutingProfileChannelOutputWithContext(context.Context) RoutingProfileChannelOutput
}

var routingProfileChannelPtrType = reflect.TypeOf((**RoutingProfileChannel)(nil)).Elem()

type RoutingProfileChannelPtrInput interface {
	pulumi.Input

	ToRoutingProfileChannelPtrOutput() RoutingProfileChannelPtrOutput
	ToRoutingProfileChannelPtrOutputWithContext(context.Context) RoutingProfileChannelPtrOutput
}

type routingProfileChannelPtr string

func RoutingProfileChannelPtr(v string) RoutingProfileChannelPtrInput {
	return (*routingProfileChannelPtr)(&v)
}

func (*routingProfileChannelPtr) ElementType() reflect.Type {
	return routingProfileChannelPtrType
}

func (in *routingProfileChannelPtr) ToRoutingProfileChannelPtrOutput() RoutingProfileChannelPtrOutput {
	return pulumi.ToOutput(in).(RoutingProfileChannelPtrOutput)
}

func (in *routingProfileChannelPtr) ToRoutingProfileChannelPtrOutputWithContext(ctx context.Context) RoutingProfileChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoutingProfileChannelPtrOutput)
}

func (in *routingProfileChannelPtr) ToOutput(ctx context.Context) pulumix.Output[*RoutingProfileChannel] {
	return pulumix.Output[*RoutingProfileChannel]{
		OutputState: in.ToRoutingProfileChannelPtrOutputWithContext(ctx).OutputState,
	}
}

// The publish status of a rule, either draft or published.
type RulePublishStatus string

const (
	RulePublishStatusDraft     = RulePublishStatus("DRAFT")
	RulePublishStatusPublished = RulePublishStatus("PUBLISHED")
)

func (RulePublishStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePublishStatus)(nil)).Elem()
}

func (e RulePublishStatus) ToRulePublishStatusOutput() RulePublishStatusOutput {
	return pulumi.ToOutput(e).(RulePublishStatusOutput)
}

func (e RulePublishStatus) ToRulePublishStatusOutputWithContext(ctx context.Context) RulePublishStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RulePublishStatusOutput)
}

func (e RulePublishStatus) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return e.ToRulePublishStatusPtrOutputWithContext(context.Background())
}

func (e RulePublishStatus) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return RulePublishStatus(e).ToRulePublishStatusOutputWithContext(ctx).ToRulePublishStatusPtrOutputWithContext(ctx)
}

func (e RulePublishStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RulePublishStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RulePublishStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RulePublishStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RulePublishStatusOutput struct{ *pulumi.OutputState }

func (RulePublishStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePublishStatus)(nil)).Elem()
}

func (o RulePublishStatusOutput) ToRulePublishStatusOutput() RulePublishStatusOutput {
	return o
}

func (o RulePublishStatusOutput) ToRulePublishStatusOutputWithContext(ctx context.Context) RulePublishStatusOutput {
	return o
}

func (o RulePublishStatusOutput) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return o.ToRulePublishStatusPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulePublishStatus) *RulePublishStatus {
		return &v
	}).(RulePublishStatusPtrOutput)
}

func (o RulePublishStatusOutput) ToOutput(ctx context.Context) pulumix.Output[RulePublishStatus] {
	return pulumix.Output[RulePublishStatus]{
		OutputState: o.OutputState,
	}
}

func (o RulePublishStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RulePublishStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RulePublishStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RulePublishStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RulePublishStatusPtrOutput struct{ *pulumi.OutputState }

func (RulePublishStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulePublishStatus)(nil)).Elem()
}

func (o RulePublishStatusPtrOutput) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return o
}

func (o RulePublishStatusPtrOutput) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return o
}

func (o RulePublishStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RulePublishStatus] {
	return pulumix.Output[*RulePublishStatus]{
		OutputState: o.OutputState,
	}
}

func (o RulePublishStatusPtrOutput) Elem() RulePublishStatusOutput {
	return o.ApplyT(func(v *RulePublishStatus) RulePublishStatus {
		if v != nil {
			return *v
		}
		var ret RulePublishStatus
		return ret
	}).(RulePublishStatusOutput)
}

func (o RulePublishStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RulePublishStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RulePublishStatusInput is an input type that accepts RulePublishStatusArgs and RulePublishStatusOutput values.
// You can construct a concrete instance of `RulePublishStatusInput` via:
//
//	RulePublishStatusArgs{...}
type RulePublishStatusInput interface {
	pulumi.Input

	ToRulePublishStatusOutput() RulePublishStatusOutput
	ToRulePublishStatusOutputWithContext(context.Context) RulePublishStatusOutput
}

var rulePublishStatusPtrType = reflect.TypeOf((**RulePublishStatus)(nil)).Elem()

type RulePublishStatusPtrInput interface {
	pulumi.Input

	ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput
	ToRulePublishStatusPtrOutputWithContext(context.Context) RulePublishStatusPtrOutput
}

type rulePublishStatusPtr string

func RulePublishStatusPtr(v string) RulePublishStatusPtrInput {
	return (*rulePublishStatusPtr)(&v)
}

func (*rulePublishStatusPtr) ElementType() reflect.Type {
	return rulePublishStatusPtrType
}

func (in *rulePublishStatusPtr) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return pulumi.ToOutput(in).(RulePublishStatusPtrOutput)
}

func (in *rulePublishStatusPtr) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RulePublishStatusPtrOutput)
}

func (in *rulePublishStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*RulePublishStatus] {
	return pulumix.Output[*RulePublishStatus]{
		OutputState: in.ToRulePublishStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The type of content.
type RuleSendNotificationActionContentType string

const (
	RuleSendNotificationActionContentTypePlainText = RuleSendNotificationActionContentType("PLAIN_TEXT")
)

func (RuleSendNotificationActionContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionContentType)(nil)).Elem()
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput {
	return pulumi.ToOutput(e).(RuleSendNotificationActionContentTypeOutput)
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypeOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleSendNotificationActionContentTypeOutput)
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return e.ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return RuleSendNotificationActionContentType(e).ToRuleSendNotificationActionContentTypeOutputWithContext(ctx).ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx)
}

func (e RuleSendNotificationActionContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleSendNotificationActionContentTypeOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionContentType)(nil)).Elem()
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput {
	return o
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypeOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypeOutput {
	return o
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return o.ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSendNotificationActionContentType) *RuleSendNotificationActionContentType {
		return &v
	}).(RuleSendNotificationActionContentTypePtrOutput)
}

func (o RuleSendNotificationActionContentTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleSendNotificationActionContentType] {
	return pulumix.Output[RuleSendNotificationActionContentType]{
		OutputState: o.OutputState,
	}
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionContentTypePtrOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSendNotificationActionContentType)(nil)).Elem()
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return o
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return o
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleSendNotificationActionContentType] {
	return pulumix.Output[*RuleSendNotificationActionContentType]{
		OutputState: o.OutputState,
	}
}

func (o RuleSendNotificationActionContentTypePtrOutput) Elem() RuleSendNotificationActionContentTypeOutput {
	return o.ApplyT(func(v *RuleSendNotificationActionContentType) RuleSendNotificationActionContentType {
		if v != nil {
			return *v
		}
		var ret RuleSendNotificationActionContentType
		return ret
	}).(RuleSendNotificationActionContentTypeOutput)
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleSendNotificationActionContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleSendNotificationActionContentTypeInput is an input type that accepts RuleSendNotificationActionContentTypeArgs and RuleSendNotificationActionContentTypeOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionContentTypeInput` via:
//
//	RuleSendNotificationActionContentTypeArgs{...}
type RuleSendNotificationActionContentTypeInput interface {
	pulumi.Input

	ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput
	ToRuleSendNotificationActionContentTypeOutputWithContext(context.Context) RuleSendNotificationActionContentTypeOutput
}

var ruleSendNotificationActionContentTypePtrType = reflect.TypeOf((**RuleSendNotificationActionContentType)(nil)).Elem()

type RuleSendNotificationActionContentTypePtrInput interface {
	pulumi.Input

	ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput
	ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Context) RuleSendNotificationActionContentTypePtrOutput
}

type ruleSendNotificationActionContentTypePtr string

func RuleSendNotificationActionContentTypePtr(v string) RuleSendNotificationActionContentTypePtrInput {
	return (*ruleSendNotificationActionContentTypePtr)(&v)
}

func (*ruleSendNotificationActionContentTypePtr) ElementType() reflect.Type {
	return ruleSendNotificationActionContentTypePtrType
}

func (in *ruleSendNotificationActionContentTypePtr) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return pulumi.ToOutput(in).(RuleSendNotificationActionContentTypePtrOutput)
}

func (in *ruleSendNotificationActionContentTypePtr) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleSendNotificationActionContentTypePtrOutput)
}

func (in *ruleSendNotificationActionContentTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleSendNotificationActionContentType] {
	return pulumix.Output[*RuleSendNotificationActionContentType]{
		OutputState: in.ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The means of delivery.
type RuleSendNotificationActionDeliveryMethod string

const (
	RuleSendNotificationActionDeliveryMethodEmail = RuleSendNotificationActionDeliveryMethod("EMAIL")
)

func (RuleSendNotificationActionDeliveryMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput {
	return pulumi.ToOutput(e).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return e.ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return RuleSendNotificationActionDeliveryMethod(e).ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx).ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleSendNotificationActionDeliveryMethodOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionDeliveryMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o.ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSendNotificationActionDeliveryMethod) *RuleSendNotificationActionDeliveryMethod {
		return &v
	}).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToOutput(ctx context.Context) pulumix.Output[RuleSendNotificationActionDeliveryMethod] {
	return pulumix.Output[RuleSendNotificationActionDeliveryMethod]{
		OutputState: o.OutputState,
	}
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionDeliveryMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionDeliveryMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionDeliveryMethodPtrOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionDeliveryMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleSendNotificationActionDeliveryMethod] {
	return pulumix.Output[*RuleSendNotificationActionDeliveryMethod]{
		OutputState: o.OutputState,
	}
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) Elem() RuleSendNotificationActionDeliveryMethodOutput {
	return o.ApplyT(func(v *RuleSendNotificationActionDeliveryMethod) RuleSendNotificationActionDeliveryMethod {
		if v != nil {
			return *v
		}
		var ret RuleSendNotificationActionDeliveryMethod
		return ret
	}).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleSendNotificationActionDeliveryMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleSendNotificationActionDeliveryMethodInput is an input type that accepts RuleSendNotificationActionDeliveryMethodArgs and RuleSendNotificationActionDeliveryMethodOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionDeliveryMethodInput` via:
//
//	RuleSendNotificationActionDeliveryMethodArgs{...}
type RuleSendNotificationActionDeliveryMethodInput interface {
	pulumi.Input

	ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput
	ToRuleSendNotificationActionDeliveryMethodOutputWithContext(context.Context) RuleSendNotificationActionDeliveryMethodOutput
}

var ruleSendNotificationActionDeliveryMethodPtrType = reflect.TypeOf((**RuleSendNotificationActionDeliveryMethod)(nil)).Elem()

type RuleSendNotificationActionDeliveryMethodPtrInput interface {
	pulumi.Input

	ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput
	ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput
}

type ruleSendNotificationActionDeliveryMethodPtr string

func RuleSendNotificationActionDeliveryMethodPtr(v string) RuleSendNotificationActionDeliveryMethodPtrInput {
	return (*ruleSendNotificationActionDeliveryMethodPtr)(&v)
}

func (*ruleSendNotificationActionDeliveryMethodPtr) ElementType() reflect.Type {
	return ruleSendNotificationActionDeliveryMethodPtrType
}

func (in *ruleSendNotificationActionDeliveryMethodPtr) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return pulumi.ToOutput(in).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

func (in *ruleSendNotificationActionDeliveryMethodPtr) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

func (in *ruleSendNotificationActionDeliveryMethodPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleSendNotificationActionDeliveryMethod] {
	return pulumix.Output[*RuleSendNotificationActionDeliveryMethod]{
		OutputState: in.ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx).OutputState,
	}
}

// The name of event source.
type RuleTriggerEventSourceEventSourceName string

const (
	RuleTriggerEventSourceEventSourceNameOnContactEvaluationSubmit       = RuleTriggerEventSourceEventSourceName("OnContactEvaluationSubmit")
	RuleTriggerEventSourceEventSourceNameOnPostCallAnalysisAvailable     = RuleTriggerEventSourceEventSourceName("OnPostCallAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnRealTimeCallAnalysisAvailable = RuleTriggerEventSourceEventSourceName("OnRealTimeCallAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnPostChatAnalysisAvailable     = RuleTriggerEventSourceEventSourceName("OnPostChatAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnZendeskTicketCreate           = RuleTriggerEventSourceEventSourceName("OnZendeskTicketCreate")
	RuleTriggerEventSourceEventSourceNameOnZendeskTicketStatusUpdate     = RuleTriggerEventSourceEventSourceName("OnZendeskTicketStatusUpdate")
	RuleTriggerEventSourceEventSourceNameOnSalesforceCaseCreate          = RuleTriggerEventSourceEventSourceName("OnSalesforceCaseCreate")
	RuleTriggerEventSourceEventSourceNameOnMetricDataUpdate              = RuleTriggerEventSourceEventSourceName("OnMetricDataUpdate")
)

func (RuleTriggerEventSourceEventSourceName) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput {
	return pulumi.ToOutput(e).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return e.ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Background())
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return RuleTriggerEventSourceEventSourceName(e).ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx).ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleTriggerEventSourceEventSourceName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleTriggerEventSourceEventSourceNameOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceEventSourceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNameOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o.ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleTriggerEventSourceEventSourceName) *RuleTriggerEventSourceEventSourceName {
		return &v
	}).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToOutput(ctx context.Context) pulumix.Output[RuleTriggerEventSourceEventSourceName] {
	return pulumix.Output[RuleTriggerEventSourceEventSourceName]{
		OutputState: o.OutputState,
	}
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleTriggerEventSourceEventSourceName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleTriggerEventSourceEventSourceName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleTriggerEventSourceEventSourceNamePtrOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceEventSourceNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleTriggerEventSourceEventSourceName] {
	return pulumix.Output[*RuleTriggerEventSourceEventSourceName]{
		OutputState: o.OutputState,
	}
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) Elem() RuleTriggerEventSourceEventSourceNameOutput {
	return o.ApplyT(func(v *RuleTriggerEventSourceEventSourceName) RuleTriggerEventSourceEventSourceName {
		if v != nil {
			return *v
		}
		var ret RuleTriggerEventSourceEventSourceName
		return ret
	}).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleTriggerEventSourceEventSourceName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleTriggerEventSourceEventSourceNameInput is an input type that accepts RuleTriggerEventSourceEventSourceNameArgs and RuleTriggerEventSourceEventSourceNameOutput values.
// You can construct a concrete instance of `RuleTriggerEventSourceEventSourceNameInput` via:
//
//	RuleTriggerEventSourceEventSourceNameArgs{...}
type RuleTriggerEventSourceEventSourceNameInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput
	ToRuleTriggerEventSourceEventSourceNameOutputWithContext(context.Context) RuleTriggerEventSourceEventSourceNameOutput
}

var ruleTriggerEventSourceEventSourceNamePtrType = reflect.TypeOf((**RuleTriggerEventSourceEventSourceName)(nil)).Elem()

type RuleTriggerEventSourceEventSourceNamePtrInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput
	ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput
}

type ruleTriggerEventSourceEventSourceNamePtr string

func RuleTriggerEventSourceEventSourceNamePtr(v string) RuleTriggerEventSourceEventSourceNamePtrInput {
	return (*ruleTriggerEventSourceEventSourceNamePtr)(&v)
}

func (*ruleTriggerEventSourceEventSourceNamePtr) ElementType() reflect.Type {
	return ruleTriggerEventSourceEventSourceNamePtrType
}

func (in *ruleTriggerEventSourceEventSourceNamePtr) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return pulumi.ToOutput(in).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

func (in *ruleTriggerEventSourceEventSourceNamePtr) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

func (in *ruleTriggerEventSourceEventSourceNamePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleTriggerEventSourceEventSourceName] {
	return pulumix.Output[*RuleTriggerEventSourceEventSourceName]{
		OutputState: in.ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the task template's field
type TaskTemplateFieldType string

const (
	TaskTemplateFieldTypeName          = TaskTemplateFieldType("NAME")
	TaskTemplateFieldTypeDescription   = TaskTemplateFieldType("DESCRIPTION")
	TaskTemplateFieldTypeScheduledTime = TaskTemplateFieldType("SCHEDULED_TIME")
	TaskTemplateFieldTypeQuickConnect  = TaskTemplateFieldType("QUICK_CONNECT")
	TaskTemplateFieldTypeUrl           = TaskTemplateFieldType("URL")
	TaskTemplateFieldTypeNumber        = TaskTemplateFieldType("NUMBER")
	TaskTemplateFieldTypeText          = TaskTemplateFieldType("TEXT")
	TaskTemplateFieldTypeTextArea      = TaskTemplateFieldType("TEXT_AREA")
	TaskTemplateFieldTypeDateTime      = TaskTemplateFieldType("DATE_TIME")
	TaskTemplateFieldTypeBoolean       = TaskTemplateFieldType("BOOLEAN")
	TaskTemplateFieldTypeSingleSelect  = TaskTemplateFieldType("SINGLE_SELECT")
	TaskTemplateFieldTypeEmail         = TaskTemplateFieldType("EMAIL")
)

func (TaskTemplateFieldType) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldType)(nil)).Elem()
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput {
	return pulumi.ToOutput(e).(TaskTemplateFieldTypeOutput)
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypeOutputWithContext(ctx context.Context) TaskTemplateFieldTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskTemplateFieldTypeOutput)
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return e.ToTaskTemplateFieldTypePtrOutputWithContext(context.Background())
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return TaskTemplateFieldType(e).ToTaskTemplateFieldTypeOutputWithContext(ctx).ToTaskTemplateFieldTypePtrOutputWithContext(ctx)
}

func (e TaskTemplateFieldType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateFieldType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateFieldType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskTemplateFieldType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskTemplateFieldTypeOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldType)(nil)).Elem()
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput {
	return o
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypeOutputWithContext(ctx context.Context) TaskTemplateFieldTypeOutput {
	return o
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return o.ToTaskTemplateFieldTypePtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskTemplateFieldType) *TaskTemplateFieldType {
		return &v
	}).(TaskTemplateFieldTypePtrOutput)
}

func (o TaskTemplateFieldTypeOutput) ToOutput(ctx context.Context) pulumix.Output[TaskTemplateFieldType] {
	return pulumix.Output[TaskTemplateFieldType]{
		OutputState: o.OutputState,
	}
}

func (o TaskTemplateFieldTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateFieldType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskTemplateFieldTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateFieldType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskTemplateFieldTypePtrOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplateFieldType)(nil)).Elem()
}

func (o TaskTemplateFieldTypePtrOutput) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return o
}

func (o TaskTemplateFieldTypePtrOutput) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return o
}

func (o TaskTemplateFieldTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TaskTemplateFieldType] {
	return pulumix.Output[*TaskTemplateFieldType]{
		OutputState: o.OutputState,
	}
}

func (o TaskTemplateFieldTypePtrOutput) Elem() TaskTemplateFieldTypeOutput {
	return o.ApplyT(func(v *TaskTemplateFieldType) TaskTemplateFieldType {
		if v != nil {
			return *v
		}
		var ret TaskTemplateFieldType
		return ret
	}).(TaskTemplateFieldTypeOutput)
}

func (o TaskTemplateFieldTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskTemplateFieldType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskTemplateFieldTypeInput is an input type that accepts TaskTemplateFieldTypeArgs and TaskTemplateFieldTypeOutput values.
// You can construct a concrete instance of `TaskTemplateFieldTypeInput` via:
//
//	TaskTemplateFieldTypeArgs{...}
type TaskTemplateFieldTypeInput interface {
	pulumi.Input

	ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput
	ToTaskTemplateFieldTypeOutputWithContext(context.Context) TaskTemplateFieldTypeOutput
}

var taskTemplateFieldTypePtrType = reflect.TypeOf((**TaskTemplateFieldType)(nil)).Elem()

type TaskTemplateFieldTypePtrInput interface {
	pulumi.Input

	ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput
	ToTaskTemplateFieldTypePtrOutputWithContext(context.Context) TaskTemplateFieldTypePtrOutput
}

type taskTemplateFieldTypePtr string

func TaskTemplateFieldTypePtr(v string) TaskTemplateFieldTypePtrInput {
	return (*taskTemplateFieldTypePtr)(&v)
}

func (*taskTemplateFieldTypePtr) ElementType() reflect.Type {
	return taskTemplateFieldTypePtrType
}

func (in *taskTemplateFieldTypePtr) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return pulumi.ToOutput(in).(TaskTemplateFieldTypePtrOutput)
}

func (in *taskTemplateFieldTypePtr) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskTemplateFieldTypePtrOutput)
}

func (in *taskTemplateFieldTypePtr) ToOutput(ctx context.Context) pulumix.Output[*TaskTemplateFieldType] {
	return pulumix.Output[*TaskTemplateFieldType]{
		OutputState: in.ToTaskTemplateFieldTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the task template
type TaskTemplateStatus string

const (
	TaskTemplateStatusActive   = TaskTemplateStatus("ACTIVE")
	TaskTemplateStatusInactive = TaskTemplateStatus("INACTIVE")
)

func (TaskTemplateStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateStatus)(nil)).Elem()
}

func (e TaskTemplateStatus) ToTaskTemplateStatusOutput() TaskTemplateStatusOutput {
	return pulumi.ToOutput(e).(TaskTemplateStatusOutput)
}

func (e TaskTemplateStatus) ToTaskTemplateStatusOutputWithContext(ctx context.Context) TaskTemplateStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskTemplateStatusOutput)
}

func (e TaskTemplateStatus) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return e.ToTaskTemplateStatusPtrOutputWithContext(context.Background())
}

func (e TaskTemplateStatus) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return TaskTemplateStatus(e).ToTaskTemplateStatusOutputWithContext(ctx).ToTaskTemplateStatusPtrOutputWithContext(ctx)
}

func (e TaskTemplateStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskTemplateStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskTemplateStatusOutput struct{ *pulumi.OutputState }

func (TaskTemplateStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateStatus)(nil)).Elem()
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusOutput() TaskTemplateStatusOutput {
	return o
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusOutputWithContext(ctx context.Context) TaskTemplateStatusOutput {
	return o
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return o.ToTaskTemplateStatusPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskTemplateStatus) *TaskTemplateStatus {
		return &v
	}).(TaskTemplateStatusPtrOutput)
}

func (o TaskTemplateStatusOutput) ToOutput(ctx context.Context) pulumix.Output[TaskTemplateStatus] {
	return pulumix.Output[TaskTemplateStatus]{
		OutputState: o.OutputState,
	}
}

func (o TaskTemplateStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskTemplateStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskTemplateStatusPtrOutput struct{ *pulumi.OutputState }

func (TaskTemplateStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplateStatus)(nil)).Elem()
}

func (o TaskTemplateStatusPtrOutput) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return o
}

func (o TaskTemplateStatusPtrOutput) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return o
}

func (o TaskTemplateStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TaskTemplateStatus] {
	return pulumix.Output[*TaskTemplateStatus]{
		OutputState: o.OutputState,
	}
}

func (o TaskTemplateStatusPtrOutput) Elem() TaskTemplateStatusOutput {
	return o.ApplyT(func(v *TaskTemplateStatus) TaskTemplateStatus {
		if v != nil {
			return *v
		}
		var ret TaskTemplateStatus
		return ret
	}).(TaskTemplateStatusOutput)
}

func (o TaskTemplateStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskTemplateStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskTemplateStatusInput is an input type that accepts TaskTemplateStatusArgs and TaskTemplateStatusOutput values.
// You can construct a concrete instance of `TaskTemplateStatusInput` via:
//
//	TaskTemplateStatusArgs{...}
type TaskTemplateStatusInput interface {
	pulumi.Input

	ToTaskTemplateStatusOutput() TaskTemplateStatusOutput
	ToTaskTemplateStatusOutputWithContext(context.Context) TaskTemplateStatusOutput
}

var taskTemplateStatusPtrType = reflect.TypeOf((**TaskTemplateStatus)(nil)).Elem()

type TaskTemplateStatusPtrInput interface {
	pulumi.Input

	ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput
	ToTaskTemplateStatusPtrOutputWithContext(context.Context) TaskTemplateStatusPtrOutput
}

type taskTemplateStatusPtr string

func TaskTemplateStatusPtr(v string) TaskTemplateStatusPtrInput {
	return (*taskTemplateStatusPtr)(&v)
}

func (*taskTemplateStatusPtr) ElementType() reflect.Type {
	return taskTemplateStatusPtrType
}

func (in *taskTemplateStatusPtr) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return pulumi.ToOutput(in).(TaskTemplateStatusPtrOutput)
}

func (in *taskTemplateStatusPtr) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskTemplateStatusPtrOutput)
}

func (in *taskTemplateStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*TaskTemplateStatus] {
	return pulumix.Output[*TaskTemplateStatus]{
		OutputState: in.ToTaskTemplateStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The status of the traffic distribution group.
type TrafficDistributionGroupStatus string

const (
	TrafficDistributionGroupStatusCreationInProgress = TrafficDistributionGroupStatus("CREATION_IN_PROGRESS")
	TrafficDistributionGroupStatusActive             = TrafficDistributionGroupStatus("ACTIVE")
	TrafficDistributionGroupStatusCreationFailed     = TrafficDistributionGroupStatus("CREATION_FAILED")
	TrafficDistributionGroupStatusPendingDeletion    = TrafficDistributionGroupStatus("PENDING_DELETION")
	TrafficDistributionGroupStatusDeletionFailed     = TrafficDistributionGroupStatus("DELETION_FAILED")
	TrafficDistributionGroupStatusUpdateInProgress   = TrafficDistributionGroupStatus("UPDATE_IN_PROGRESS")
)

type TrafficDistributionGroupStatusOutput struct{ *pulumi.OutputState }

func (TrafficDistributionGroupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficDistributionGroupStatus)(nil)).Elem()
}

func (o TrafficDistributionGroupStatusOutput) ToTrafficDistributionGroupStatusOutput() TrafficDistributionGroupStatusOutput {
	return o
}

func (o TrafficDistributionGroupStatusOutput) ToTrafficDistributionGroupStatusOutputWithContext(ctx context.Context) TrafficDistributionGroupStatusOutput {
	return o
}

func (o TrafficDistributionGroupStatusOutput) ToTrafficDistributionGroupStatusPtrOutput() TrafficDistributionGroupStatusPtrOutput {
	return o.ToTrafficDistributionGroupStatusPtrOutputWithContext(context.Background())
}

func (o TrafficDistributionGroupStatusOutput) ToTrafficDistributionGroupStatusPtrOutputWithContext(ctx context.Context) TrafficDistributionGroupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficDistributionGroupStatus) *TrafficDistributionGroupStatus {
		return &v
	}).(TrafficDistributionGroupStatusPtrOutput)
}

func (o TrafficDistributionGroupStatusOutput) ToOutput(ctx context.Context) pulumix.Output[TrafficDistributionGroupStatus] {
	return pulumix.Output[TrafficDistributionGroupStatus]{
		OutputState: o.OutputState,
	}
}

func (o TrafficDistributionGroupStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrafficDistributionGroupStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficDistributionGroupStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrafficDistributionGroupStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficDistributionGroupStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficDistributionGroupStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrafficDistributionGroupStatusPtrOutput struct{ *pulumi.OutputState }

func (TrafficDistributionGroupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficDistributionGroupStatus)(nil)).Elem()
}

func (o TrafficDistributionGroupStatusPtrOutput) ToTrafficDistributionGroupStatusPtrOutput() TrafficDistributionGroupStatusPtrOutput {
	return o
}

func (o TrafficDistributionGroupStatusPtrOutput) ToTrafficDistributionGroupStatusPtrOutputWithContext(ctx context.Context) TrafficDistributionGroupStatusPtrOutput {
	return o
}

func (o TrafficDistributionGroupStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TrafficDistributionGroupStatus] {
	return pulumix.Output[*TrafficDistributionGroupStatus]{
		OutputState: o.OutputState,
	}
}

func (o TrafficDistributionGroupStatusPtrOutput) Elem() TrafficDistributionGroupStatusOutput {
	return o.ApplyT(func(v *TrafficDistributionGroupStatus) TrafficDistributionGroupStatus {
		if v != nil {
			return *v
		}
		var ret TrafficDistributionGroupStatus
		return ret
	}).(TrafficDistributionGroupStatusOutput)
}

func (o TrafficDistributionGroupStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficDistributionGroupStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrafficDistributionGroupStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The phone type.
type UserPhoneType string

const (
	UserPhoneTypeSoftPhone = UserPhoneType("SOFT_PHONE")
	UserPhoneTypeDeskPhone = UserPhoneType("DESK_PHONE")
)

func (UserPhoneType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (e UserPhoneType) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return pulumi.ToOutput(e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return e.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return UserPhoneType(e).ToUserPhoneTypeOutputWithContext(ctx).ToUserPhoneTypePtrOutputWithContext(ctx)
}

func (e UserPhoneType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserPhoneTypeOutput struct{ *pulumi.OutputState }

func (UserPhoneTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPhoneType) *UserPhoneType {
		return &v
	}).(UserPhoneTypePtrOutput)
}

func (o UserPhoneTypeOutput) ToOutput(ctx context.Context) pulumix.Output[UserPhoneType] {
	return pulumix.Output[UserPhoneType]{
		OutputState: o.OutputState,
	}
}

func (o UserPhoneTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserPhoneTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserPhoneTypePtrOutput struct{ *pulumi.OutputState }

func (UserPhoneTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*UserPhoneType] {
	return pulumix.Output[*UserPhoneType]{
		OutputState: o.OutputState,
	}
}

func (o UserPhoneTypePtrOutput) Elem() UserPhoneTypeOutput {
	return o.ApplyT(func(v *UserPhoneType) UserPhoneType {
		if v != nil {
			return *v
		}
		var ret UserPhoneType
		return ret
	}).(UserPhoneTypeOutput)
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserPhoneType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserPhoneTypeInput is an input type that accepts UserPhoneTypeArgs and UserPhoneTypeOutput values.
// You can construct a concrete instance of `UserPhoneTypeInput` via:
//
//	UserPhoneTypeArgs{...}
type UserPhoneTypeInput interface {
	pulumi.Input

	ToUserPhoneTypeOutput() UserPhoneTypeOutput
	ToUserPhoneTypeOutputWithContext(context.Context) UserPhoneTypeOutput
}

var userPhoneTypePtrType = reflect.TypeOf((**UserPhoneType)(nil)).Elem()

type UserPhoneTypePtrInput interface {
	pulumi.Input

	ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput
	ToUserPhoneTypePtrOutputWithContext(context.Context) UserPhoneTypePtrOutput
}

type userPhoneTypePtr string

func UserPhoneTypePtr(v string) UserPhoneTypePtrInput {
	return (*userPhoneTypePtr)(&v)
}

func (*userPhoneTypePtr) ElementType() reflect.Type {
	return userPhoneTypePtrType
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return pulumi.ToOutput(in).(UserPhoneTypePtrOutput)
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserPhoneTypePtrOutput)
}

func (in *userPhoneTypePtr) ToOutput(ctx context.Context) pulumix.Output[*UserPhoneType] {
	return pulumix.Output[*UserPhoneType]{
		OutputState: in.ToUserPhoneTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowStateEnumInput)(nil)).Elem(), ContactFlowStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowStateEnumPtrInput)(nil)).Elem(), ContactFlowStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTypeInput)(nil)).Elem(), ContactFlowType("CONTACT_FLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTypePtrInput)(nil)).Elem(), ContactFlowType("CONTACT_FLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationLabelInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationLabel("OVERALL_CUSTOMER_SENTIMENT_SCORE"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationLabel("OVERALL_CUSTOMER_SENTIMENT_SCORE"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionQuestionTypeInput)(nil)).Elem(), EvaluationFormQuestionQuestionType("NUMERIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionQuestionTypePtrInput)(nil)).Elem(), EvaluationFormQuestionQuestionType("NUMERIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyModeInput)(nil)).Elem(), EvaluationFormScoringStrategyMode("QUESTION_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyModePtrInput)(nil)).Elem(), EvaluationFormScoringStrategyMode("QUESTION_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyStatusInput)(nil)).Elem(), EvaluationFormScoringStrategyStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyStatusPtrInput)(nil)).Elem(), EvaluationFormScoringStrategyStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesDisplayAsInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesDisplayAs("DROPDOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesDisplayAs("DROPDOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition("PRESENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition("PRESENT"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormStatusInput)(nil)).Elem(), EvaluationFormStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormStatusPtrInput)(nil)).Elem(), EvaluationFormStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayPtrInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIdentityManagementTypeInput)(nil)).Elem(), InstanceIdentityManagementType("SAML"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIdentityManagementTypePtrInput)(nil)).Elem(), InstanceIdentityManagementType("SAML"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionTypeInput)(nil)).Elem(), InstanceStorageConfigEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionTypePtrInput)(nil)).Elem(), InstanceStorageConfigEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceTypeInput)(nil)).Elem(), InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceTypePtrInput)(nil)).Elem(), InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageTypeInput)(nil)).Elem(), InstanceStorageConfigStorageType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageTypePtrInput)(nil)).Elem(), InstanceStorageConfigStorageType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAssociationIntegrationTypeInput)(nil)).Elem(), IntegrationAssociationIntegrationType("LEX_BOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAssociationIntegrationTypePtrInput)(nil)).Elem(), IntegrationAssociationIntegrationType("LEX_BOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*QueueStatusInput)(nil)).Elem(), QueueStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*QueueStatusPtrInput)(nil)).Elem(), QueueStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypeInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypePtrInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileAgentAvailabilityTimerInput)(nil)).Elem(), RoutingProfileAgentAvailabilityTimer("TIME_SINCE_LAST_ACTIVITY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileAgentAvailabilityTimerPtrInput)(nil)).Elem(), RoutingProfileAgentAvailabilityTimer("TIME_SINCE_LAST_ACTIVITY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileBehaviorTypeInput)(nil)).Elem(), RoutingProfileBehaviorType("ROUTE_CURRENT_CHANNEL_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileBehaviorTypePtrInput)(nil)).Elem(), RoutingProfileBehaviorType("ROUTE_CURRENT_CHANNEL_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileChannelInput)(nil)).Elem(), RoutingProfileChannel("VOICE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileChannelPtrInput)(nil)).Elem(), RoutingProfileChannel("VOICE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RulePublishStatusInput)(nil)).Elem(), RulePublishStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RulePublishStatusPtrInput)(nil)).Elem(), RulePublishStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionContentTypeInput)(nil)).Elem(), RuleSendNotificationActionContentType("PLAIN_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionContentTypePtrInput)(nil)).Elem(), RuleSendNotificationActionContentType("PLAIN_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionDeliveryMethodInput)(nil)).Elem(), RuleSendNotificationActionDeliveryMethod("EMAIL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionDeliveryMethodPtrInput)(nil)).Elem(), RuleSendNotificationActionDeliveryMethod("EMAIL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceEventSourceNameInput)(nil)).Elem(), RuleTriggerEventSourceEventSourceName("OnContactEvaluationSubmit"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceEventSourceNamePtrInput)(nil)).Elem(), RuleTriggerEventSourceEventSourceName("OnContactEvaluationSubmit"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldTypeInput)(nil)).Elem(), TaskTemplateFieldType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldTypePtrInput)(nil)).Elem(), TaskTemplateFieldType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateStatusInput)(nil)).Elem(), TaskTemplateStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateStatusPtrInput)(nil)).Elem(), TaskTemplateStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypeInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypePtrInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterOutputType(ContactFlowStateEnumOutput{})
	pulumi.RegisterOutputType(ContactFlowStateEnumPtrOutput{})
	pulumi.RegisterOutputType(ContactFlowTypeOutput{})
	pulumi.RegisterOutputType(ContactFlowTypePtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionQuestionTypeOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionQuestionTypePtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyModeOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyModePtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyStatusOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyStatusPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesDisplayAsOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormStatusOutput{})
	pulumi.RegisterOutputType(EvaluationFormStatusPtrOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigDayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigDayPtrOutput{})
	pulumi.RegisterOutputType(InstanceIdentityManagementTypeOutput{})
	pulumi.RegisterOutputType(InstanceIdentityManagementTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStatusOutput{})
	pulumi.RegisterOutputType(InstanceStatusPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigInstanceStorageResourceTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigInstanceStorageResourceTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAssociationIntegrationTypeOutput{})
	pulumi.RegisterOutputType(IntegrationAssociationIntegrationTypePtrOutput{})
	pulumi.RegisterOutputType(QueueStatusOutput{})
	pulumi.RegisterOutputType(QueueStatusPtrOutput{})
	pulumi.RegisterOutputType(QueueTypeOutput{})
	pulumi.RegisterOutputType(QueueTypePtrOutput{})
	pulumi.RegisterOutputType(QuickConnectTypeOutput{})
	pulumi.RegisterOutputType(QuickConnectTypePtrOutput{})
	pulumi.RegisterOutputType(RoutingProfileAgentAvailabilityTimerOutput{})
	pulumi.RegisterOutputType(RoutingProfileAgentAvailabilityTimerPtrOutput{})
	pulumi.RegisterOutputType(RoutingProfileBehaviorTypeOutput{})
	pulumi.RegisterOutputType(RoutingProfileBehaviorTypePtrOutput{})
	pulumi.RegisterOutputType(RoutingProfileChannelOutput{})
	pulumi.RegisterOutputType(RoutingProfileChannelPtrOutput{})
	pulumi.RegisterOutputType(RulePublishStatusOutput{})
	pulumi.RegisterOutputType(RulePublishStatusPtrOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionContentTypeOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionContentTypePtrOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionDeliveryMethodOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionDeliveryMethodPtrOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceEventSourceNameOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceEventSourceNamePtrOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldTypeOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldTypePtrOutput{})
	pulumi.RegisterOutputType(TaskTemplateStatusOutput{})
	pulumi.RegisterOutputType(TaskTemplateStatusPtrOutput{})
	pulumi.RegisterOutputType(TrafficDistributionGroupStatusOutput{})
	pulumi.RegisterOutputType(TrafficDistributionGroupStatusPtrOutput{})
	pulumi.RegisterOutputType(UserPhoneTypeOutput{})
	pulumi.RegisterOutputType(UserPhoneTypePtrOutput{})
}
