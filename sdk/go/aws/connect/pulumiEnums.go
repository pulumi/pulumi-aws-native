// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The state of the contact flow module.
type ContactFlowModuleStateEnum string

const (
	ContactFlowModuleStateEnumActive   = ContactFlowModuleStateEnum("ACTIVE")
	ContactFlowModuleStateEnumArchived = ContactFlowModuleStateEnum("ARCHIVED")
)

func (ContactFlowModuleStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModuleStateEnum)(nil)).Elem()
}

func (e ContactFlowModuleStateEnum) ToContactFlowModuleStateEnumOutput() ContactFlowModuleStateEnumOutput {
	return pulumi.ToOutput(e).(ContactFlowModuleStateEnumOutput)
}

func (e ContactFlowModuleStateEnum) ToContactFlowModuleStateEnumOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactFlowModuleStateEnumOutput)
}

func (e ContactFlowModuleStateEnum) ToContactFlowModuleStateEnumPtrOutput() ContactFlowModuleStateEnumPtrOutput {
	return e.ToContactFlowModuleStateEnumPtrOutputWithContext(context.Background())
}

func (e ContactFlowModuleStateEnum) ToContactFlowModuleStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumPtrOutput {
	return ContactFlowModuleStateEnum(e).ToContactFlowModuleStateEnumOutputWithContext(ctx).ToContactFlowModuleStateEnumPtrOutputWithContext(ctx)
}

func (e ContactFlowModuleStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowModuleStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowModuleStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactFlowModuleStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactFlowModuleStateEnumOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModuleStateEnum)(nil)).Elem()
}

func (o ContactFlowModuleStateEnumOutput) ToContactFlowModuleStateEnumOutput() ContactFlowModuleStateEnumOutput {
	return o
}

func (o ContactFlowModuleStateEnumOutput) ToContactFlowModuleStateEnumOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumOutput {
	return o
}

func (o ContactFlowModuleStateEnumOutput) ToContactFlowModuleStateEnumPtrOutput() ContactFlowModuleStateEnumPtrOutput {
	return o.ToContactFlowModuleStateEnumPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStateEnumOutput) ToContactFlowModuleStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowModuleStateEnum) *ContactFlowModuleStateEnum {
		return &v
	}).(ContactFlowModuleStateEnumPtrOutput)
}

func (o ContactFlowModuleStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowModuleStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowModuleStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowModuleStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowModuleStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowModuleStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowModuleStateEnum)(nil)).Elem()
}

func (o ContactFlowModuleStateEnumPtrOutput) ToContactFlowModuleStateEnumPtrOutput() ContactFlowModuleStateEnumPtrOutput {
	return o
}

func (o ContactFlowModuleStateEnumPtrOutput) ToContactFlowModuleStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumPtrOutput {
	return o
}

func (o ContactFlowModuleStateEnumPtrOutput) Elem() ContactFlowModuleStateEnumOutput {
	return o.ApplyT(func(v *ContactFlowModuleStateEnum) ContactFlowModuleStateEnum {
		if v != nil {
			return *v
		}
		var ret ContactFlowModuleStateEnum
		return ret
	}).(ContactFlowModuleStateEnumOutput)
}

func (o ContactFlowModuleStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowModuleStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactFlowModuleStateEnumInput is an input type that accepts ContactFlowModuleStateEnumArgs and ContactFlowModuleStateEnumOutput values.
// You can construct a concrete instance of `ContactFlowModuleStateEnumInput` via:
//
//	ContactFlowModuleStateEnumArgs{...}
type ContactFlowModuleStateEnumInput interface {
	pulumi.Input

	ToContactFlowModuleStateEnumOutput() ContactFlowModuleStateEnumOutput
	ToContactFlowModuleStateEnumOutputWithContext(context.Context) ContactFlowModuleStateEnumOutput
}

var contactFlowModuleStateEnumPtrType = reflect.TypeOf((**ContactFlowModuleStateEnum)(nil)).Elem()

type ContactFlowModuleStateEnumPtrInput interface {
	pulumi.Input

	ToContactFlowModuleStateEnumPtrOutput() ContactFlowModuleStateEnumPtrOutput
	ToContactFlowModuleStateEnumPtrOutputWithContext(context.Context) ContactFlowModuleStateEnumPtrOutput
}

type contactFlowModuleStateEnumPtr string

func ContactFlowModuleStateEnumPtr(v string) ContactFlowModuleStateEnumPtrInput {
	return (*contactFlowModuleStateEnumPtr)(&v)
}

func (*contactFlowModuleStateEnumPtr) ElementType() reflect.Type {
	return contactFlowModuleStateEnumPtrType
}

func (in *contactFlowModuleStateEnumPtr) ToContactFlowModuleStateEnumPtrOutput() ContactFlowModuleStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ContactFlowModuleStateEnumPtrOutput)
}

func (in *contactFlowModuleStateEnumPtr) ToContactFlowModuleStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowModuleStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactFlowModuleStateEnumPtrOutput)
}

// The status of the contact flow module.
type ContactFlowModuleStatus string

const (
	ContactFlowModuleStatusPublished = ContactFlowModuleStatus("PUBLISHED")
	ContactFlowModuleStatusSaved     = ContactFlowModuleStatus("SAVED")
)

type ContactFlowModuleStatusOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModuleStatus)(nil)).Elem()
}

func (o ContactFlowModuleStatusOutput) ToContactFlowModuleStatusOutput() ContactFlowModuleStatusOutput {
	return o
}

func (o ContactFlowModuleStatusOutput) ToContactFlowModuleStatusOutputWithContext(ctx context.Context) ContactFlowModuleStatusOutput {
	return o
}

func (o ContactFlowModuleStatusOutput) ToContactFlowModuleStatusPtrOutput() ContactFlowModuleStatusPtrOutput {
	return o.ToContactFlowModuleStatusPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStatusOutput) ToContactFlowModuleStatusPtrOutputWithContext(ctx context.Context) ContactFlowModuleStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowModuleStatus) *ContactFlowModuleStatus {
		return &v
	}).(ContactFlowModuleStatusPtrOutput)
}

func (o ContactFlowModuleStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowModuleStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowModuleStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowModuleStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowModuleStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowModuleStatusPtrOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowModuleStatus)(nil)).Elem()
}

func (o ContactFlowModuleStatusPtrOutput) ToContactFlowModuleStatusPtrOutput() ContactFlowModuleStatusPtrOutput {
	return o
}

func (o ContactFlowModuleStatusPtrOutput) ToContactFlowModuleStatusPtrOutputWithContext(ctx context.Context) ContactFlowModuleStatusPtrOutput {
	return o
}

func (o ContactFlowModuleStatusPtrOutput) Elem() ContactFlowModuleStatusOutput {
	return o.ApplyT(func(v *ContactFlowModuleStatus) ContactFlowModuleStatus {
		if v != nil {
			return *v
		}
		var ret ContactFlowModuleStatus
		return ret
	}).(ContactFlowModuleStatusOutput)
}

func (o ContactFlowModuleStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowModuleStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowModuleStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The state of the contact flow.
type ContactFlowStateEnum string

const (
	ContactFlowStateEnumActive   = ContactFlowStateEnum("ACTIVE")
	ContactFlowStateEnumArchived = ContactFlowStateEnum("ARCHIVED")
)

func (ContactFlowStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowStateEnum)(nil)).Elem()
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput {
	return pulumi.ToOutput(e).(ContactFlowStateEnumOutput)
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumOutputWithContext(ctx context.Context) ContactFlowStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactFlowStateEnumOutput)
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return e.ToContactFlowStateEnumPtrOutputWithContext(context.Background())
}

func (e ContactFlowStateEnum) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return ContactFlowStateEnum(e).ToContactFlowStateEnumOutputWithContext(ctx).ToContactFlowStateEnumPtrOutputWithContext(ctx)
}

func (e ContactFlowStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactFlowStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactFlowStateEnumOutput struct{ *pulumi.OutputState }

func (ContactFlowStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowStateEnum)(nil)).Elem()
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput {
	return o
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumOutputWithContext(ctx context.Context) ContactFlowStateEnumOutput {
	return o
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return o.ToContactFlowStateEnumPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowStateEnum) *ContactFlowStateEnum {
		return &v
	}).(ContactFlowStateEnumPtrOutput)
}

func (o ContactFlowStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ContactFlowStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowStateEnum)(nil)).Elem()
}

func (o ContactFlowStateEnumPtrOutput) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return o
}

func (o ContactFlowStateEnumPtrOutput) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return o
}

func (o ContactFlowStateEnumPtrOutput) Elem() ContactFlowStateEnumOutput {
	return o.ApplyT(func(v *ContactFlowStateEnum) ContactFlowStateEnum {
		if v != nil {
			return *v
		}
		var ret ContactFlowStateEnum
		return ret
	}).(ContactFlowStateEnumOutput)
}

func (o ContactFlowStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactFlowStateEnumInput is an input type that accepts ContactFlowStateEnumArgs and ContactFlowStateEnumOutput values.
// You can construct a concrete instance of `ContactFlowStateEnumInput` via:
//
//	ContactFlowStateEnumArgs{...}
type ContactFlowStateEnumInput interface {
	pulumi.Input

	ToContactFlowStateEnumOutput() ContactFlowStateEnumOutput
	ToContactFlowStateEnumOutputWithContext(context.Context) ContactFlowStateEnumOutput
}

var contactFlowStateEnumPtrType = reflect.TypeOf((**ContactFlowStateEnum)(nil)).Elem()

type ContactFlowStateEnumPtrInput interface {
	pulumi.Input

	ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput
	ToContactFlowStateEnumPtrOutputWithContext(context.Context) ContactFlowStateEnumPtrOutput
}

type contactFlowStateEnumPtr string

func ContactFlowStateEnumPtr(v string) ContactFlowStateEnumPtrInput {
	return (*contactFlowStateEnumPtr)(&v)
}

func (*contactFlowStateEnumPtr) ElementType() reflect.Type {
	return contactFlowStateEnumPtrType
}

func (in *contactFlowStateEnumPtr) ToContactFlowStateEnumPtrOutput() ContactFlowStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ContactFlowStateEnumPtrOutput)
}

func (in *contactFlowStateEnumPtr) ToContactFlowStateEnumPtrOutputWithContext(ctx context.Context) ContactFlowStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactFlowStateEnumPtrOutput)
}

// The type of the contact flow.
type ContactFlowType string

const (
	ContactFlowTypeContactFlow     = ContactFlowType("CONTACT_FLOW")
	ContactFlowTypeCustomerQueue   = ContactFlowType("CUSTOMER_QUEUE")
	ContactFlowTypeCustomerHold    = ContactFlowType("CUSTOMER_HOLD")
	ContactFlowTypeCustomerWhisper = ContactFlowType("CUSTOMER_WHISPER")
	ContactFlowTypeAgentHold       = ContactFlowType("AGENT_HOLD")
	ContactFlowTypeAgentWhisper    = ContactFlowType("AGENT_WHISPER")
	ContactFlowTypeOutboundWhisper = ContactFlowType("OUTBOUND_WHISPER")
	ContactFlowTypeAgentTransfer   = ContactFlowType("AGENT_TRANSFER")
	ContactFlowTypeQueueTransfer   = ContactFlowType("QUEUE_TRANSFER")
)

func (ContactFlowType) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowType)(nil)).Elem()
}

func (e ContactFlowType) ToContactFlowTypeOutput() ContactFlowTypeOutput {
	return pulumi.ToOutput(e).(ContactFlowTypeOutput)
}

func (e ContactFlowType) ToContactFlowTypeOutputWithContext(ctx context.Context) ContactFlowTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ContactFlowTypeOutput)
}

func (e ContactFlowType) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return e.ToContactFlowTypePtrOutputWithContext(context.Background())
}

func (e ContactFlowType) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return ContactFlowType(e).ToContactFlowTypeOutputWithContext(ctx).ToContactFlowTypePtrOutputWithContext(ctx)
}

func (e ContactFlowType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ContactFlowType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ContactFlowType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ContactFlowTypeOutput struct{ *pulumi.OutputState }

func (ContactFlowTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowType)(nil)).Elem()
}

func (o ContactFlowTypeOutput) ToContactFlowTypeOutput() ContactFlowTypeOutput {
	return o
}

func (o ContactFlowTypeOutput) ToContactFlowTypeOutputWithContext(ctx context.Context) ContactFlowTypeOutput {
	return o
}

func (o ContactFlowTypeOutput) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return o.ToContactFlowTypePtrOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactFlowType) *ContactFlowType {
		return &v
	}).(ContactFlowTypePtrOutput)
}

func (o ContactFlowTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ContactFlowTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ContactFlowType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ContactFlowTypePtrOutput struct{ *pulumi.OutputState }

func (ContactFlowTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactFlowType)(nil)).Elem()
}

func (o ContactFlowTypePtrOutput) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return o
}

func (o ContactFlowTypePtrOutput) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return o
}

func (o ContactFlowTypePtrOutput) Elem() ContactFlowTypeOutput {
	return o.ApplyT(func(v *ContactFlowType) ContactFlowType {
		if v != nil {
			return *v
		}
		var ret ContactFlowType
		return ret
	}).(ContactFlowTypeOutput)
}

func (o ContactFlowTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ContactFlowTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ContactFlowType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ContactFlowTypeInput is an input type that accepts ContactFlowTypeArgs and ContactFlowTypeOutput values.
// You can construct a concrete instance of `ContactFlowTypeInput` via:
//
//	ContactFlowTypeArgs{...}
type ContactFlowTypeInput interface {
	pulumi.Input

	ToContactFlowTypeOutput() ContactFlowTypeOutput
	ToContactFlowTypeOutputWithContext(context.Context) ContactFlowTypeOutput
}

var contactFlowTypePtrType = reflect.TypeOf((**ContactFlowType)(nil)).Elem()

type ContactFlowTypePtrInput interface {
	pulumi.Input

	ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput
	ToContactFlowTypePtrOutputWithContext(context.Context) ContactFlowTypePtrOutput
}

type contactFlowTypePtr string

func ContactFlowTypePtr(v string) ContactFlowTypePtrInput {
	return (*contactFlowTypePtr)(&v)
}

func (*contactFlowTypePtr) ElementType() reflect.Type {
	return contactFlowTypePtrType
}

func (in *contactFlowTypePtr) ToContactFlowTypePtrOutput() ContactFlowTypePtrOutput {
	return pulumi.ToOutput(in).(ContactFlowTypePtrOutput)
}

func (in *contactFlowTypePtr) ToContactFlowTypePtrOutputWithContext(ctx context.Context) ContactFlowTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ContactFlowTypePtrOutput)
}

// The day that the hours of operation applies to.
type HoursOfOperationConfigDay string

const (
	HoursOfOperationConfigDaySunday    = HoursOfOperationConfigDay("SUNDAY")
	HoursOfOperationConfigDayMonday    = HoursOfOperationConfigDay("MONDAY")
	HoursOfOperationConfigDayTuesday   = HoursOfOperationConfigDay("TUESDAY")
	HoursOfOperationConfigDayWednesday = HoursOfOperationConfigDay("WEDNESDAY")
	HoursOfOperationConfigDayThursday  = HoursOfOperationConfigDay("THURSDAY")
	HoursOfOperationConfigDayFriday    = HoursOfOperationConfigDay("FRIDAY")
	HoursOfOperationConfigDaySaturday  = HoursOfOperationConfigDay("SATURDAY")
)

func (HoursOfOperationConfigDay) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return pulumi.ToOutput(e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return e.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return HoursOfOperationConfigDay(e).ToHoursOfOperationConfigDayOutputWithContext(ctx).ToHoursOfOperationConfigDayPtrOutputWithContext(ctx)
}

func (e HoursOfOperationConfigDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HoursOfOperationConfigDayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HoursOfOperationConfigDay) *HoursOfOperationConfigDay {
		return &v
	}).(HoursOfOperationConfigDayPtrOutput)
}

func (o HoursOfOperationConfigDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HoursOfOperationConfigDayPtrOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) Elem() HoursOfOperationConfigDayOutput {
	return o.ApplyT(func(v *HoursOfOperationConfigDay) HoursOfOperationConfigDay {
		if v != nil {
			return *v
		}
		var ret HoursOfOperationConfigDay
		return ret
	}).(HoursOfOperationConfigDayOutput)
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HoursOfOperationConfigDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HoursOfOperationConfigDayInput is an input type that accepts HoursOfOperationConfigDayArgs and HoursOfOperationConfigDayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigDayInput` via:
//
//	HoursOfOperationConfigDayArgs{...}
type HoursOfOperationConfigDayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput
	ToHoursOfOperationConfigDayOutputWithContext(context.Context) HoursOfOperationConfigDayOutput
}

var hoursOfOperationConfigDayPtrType = reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()

type HoursOfOperationConfigDayPtrInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput
	ToHoursOfOperationConfigDayPtrOutputWithContext(context.Context) HoursOfOperationConfigDayPtrOutput
}

type hoursOfOperationConfigDayPtr string

func HoursOfOperationConfigDayPtr(v string) HoursOfOperationConfigDayPtrInput {
	return (*hoursOfOperationConfigDayPtr)(&v)
}

func (*hoursOfOperationConfigDayPtr) ElementType() reflect.Type {
	return hoursOfOperationConfigDayPtrType
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutput(in).(HoursOfOperationConfigDayPtrOutput)
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HoursOfOperationConfigDayPtrOutput)
}

// Specifies the type of directory integration for new instance.
type InstanceIdentityManagementType string

const (
	InstanceIdentityManagementTypeSaml              = InstanceIdentityManagementType("SAML")
	InstanceIdentityManagementTypeConnectManaged    = InstanceIdentityManagementType("CONNECT_MANAGED")
	InstanceIdentityManagementTypeExistingDirectory = InstanceIdentityManagementType("EXISTING_DIRECTORY")
)

func (InstanceIdentityManagementType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIdentityManagementType)(nil)).Elem()
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput {
	return pulumi.ToOutput(e).(InstanceIdentityManagementTypeOutput)
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypeOutputWithContext(ctx context.Context) InstanceIdentityManagementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceIdentityManagementTypeOutput)
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return e.ToInstanceIdentityManagementTypePtrOutputWithContext(context.Background())
}

func (e InstanceIdentityManagementType) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return InstanceIdentityManagementType(e).ToInstanceIdentityManagementTypeOutputWithContext(ctx).ToInstanceIdentityManagementTypePtrOutputWithContext(ctx)
}

func (e InstanceIdentityManagementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceIdentityManagementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceIdentityManagementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceIdentityManagementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceIdentityManagementTypeOutput struct{ *pulumi.OutputState }

func (InstanceIdentityManagementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIdentityManagementType)(nil)).Elem()
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput {
	return o
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypeOutputWithContext(ctx context.Context) InstanceIdentityManagementTypeOutput {
	return o
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return o.ToInstanceIdentityManagementTypePtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceIdentityManagementType) *InstanceIdentityManagementType {
		return &v
	}).(InstanceIdentityManagementTypePtrOutput)
}

func (o InstanceIdentityManagementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceIdentityManagementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceIdentityManagementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceIdentityManagementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceIdentityManagementTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceIdentityManagementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIdentityManagementType)(nil)).Elem()
}

func (o InstanceIdentityManagementTypePtrOutput) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return o
}

func (o InstanceIdentityManagementTypePtrOutput) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return o
}

func (o InstanceIdentityManagementTypePtrOutput) Elem() InstanceIdentityManagementTypeOutput {
	return o.ApplyT(func(v *InstanceIdentityManagementType) InstanceIdentityManagementType {
		if v != nil {
			return *v
		}
		var ret InstanceIdentityManagementType
		return ret
	}).(InstanceIdentityManagementTypeOutput)
}

func (o InstanceIdentityManagementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceIdentityManagementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceIdentityManagementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceIdentityManagementTypeInput is an input type that accepts InstanceIdentityManagementTypeArgs and InstanceIdentityManagementTypeOutput values.
// You can construct a concrete instance of `InstanceIdentityManagementTypeInput` via:
//
//	InstanceIdentityManagementTypeArgs{...}
type InstanceIdentityManagementTypeInput interface {
	pulumi.Input

	ToInstanceIdentityManagementTypeOutput() InstanceIdentityManagementTypeOutput
	ToInstanceIdentityManagementTypeOutputWithContext(context.Context) InstanceIdentityManagementTypeOutput
}

var instanceIdentityManagementTypePtrType = reflect.TypeOf((**InstanceIdentityManagementType)(nil)).Elem()

type InstanceIdentityManagementTypePtrInput interface {
	pulumi.Input

	ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput
	ToInstanceIdentityManagementTypePtrOutputWithContext(context.Context) InstanceIdentityManagementTypePtrOutput
}

type instanceIdentityManagementTypePtr string

func InstanceIdentityManagementTypePtr(v string) InstanceIdentityManagementTypePtrInput {
	return (*instanceIdentityManagementTypePtr)(&v)
}

func (*instanceIdentityManagementTypePtr) ElementType() reflect.Type {
	return instanceIdentityManagementTypePtrType
}

func (in *instanceIdentityManagementTypePtr) ToInstanceIdentityManagementTypePtrOutput() InstanceIdentityManagementTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceIdentityManagementTypePtrOutput)
}

func (in *instanceIdentityManagementTypePtr) ToInstanceIdentityManagementTypePtrOutputWithContext(ctx context.Context) InstanceIdentityManagementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceIdentityManagementTypePtrOutput)
}

// Specifies the creation status of new instance.
type InstanceStatus string

const (
	InstanceStatusCreationInProgress = InstanceStatus("CREATION_IN_PROGRESS")
	InstanceStatusCreationFailed     = InstanceStatus("CREATION_FAILED")
	InstanceStatusActive             = InstanceStatus("ACTIVE")
)

type InstanceStatusOutput struct{ *pulumi.OutputState }

func (InstanceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusOutput) ToInstanceStatusOutput() InstanceStatusOutput {
	return o
}

func (o InstanceStatusOutput) ToInstanceStatusOutputWithContext(ctx context.Context) InstanceStatusOutput {
	return o
}

func (o InstanceStatusOutput) ToInstanceStatusPtrOutput() InstanceStatusPtrOutput {
	return o.ToInstanceStatusPtrOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToInstanceStatusPtrOutputWithContext(ctx context.Context) InstanceStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStatus) *InstanceStatus {
		return &v
	}).(InstanceStatusPtrOutput)
}

func (o InstanceStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStatusPtrOutput struct{ *pulumi.OutputState }

func (InstanceStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStatus)(nil)).Elem()
}

func (o InstanceStatusPtrOutput) ToInstanceStatusPtrOutput() InstanceStatusPtrOutput {
	return o
}

func (o InstanceStatusPtrOutput) ToInstanceStatusPtrOutputWithContext(ctx context.Context) InstanceStatusPtrOutput {
	return o
}

func (o InstanceStatusPtrOutput) Elem() InstanceStatusOutput {
	return o.ApplyT(func(v *InstanceStatus) InstanceStatus {
		if v != nil {
			return *v
		}
		var ret InstanceStatus
		return ret
	}).(InstanceStatusOutput)
}

func (o InstanceStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Specifies default encryption using AWS KMS-Managed Keys
type InstanceStorageConfigEncryptionType string

const (
	InstanceStorageConfigEncryptionTypeKms = InstanceStorageConfigEncryptionType("KMS")
)

func (InstanceStorageConfigEncryptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigEncryptionTypeOutput)
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigEncryptionTypeOutput)
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return e.ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigEncryptionType) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return InstanceStorageConfigEncryptionType(e).ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx).ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigEncryptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigEncryptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigEncryptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigEncryptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigEncryptionTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypeOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypeOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigEncryptionType) *InstanceStorageConfigEncryptionType {
		return &v
	}).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigEncryptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigEncryptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigEncryptionTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionType)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) Elem() InstanceStorageConfigEncryptionTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionType) InstanceStorageConfigEncryptionType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigEncryptionType
		return ret
	}).(InstanceStorageConfigEncryptionTypeOutput)
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigEncryptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigEncryptionTypeInput is an input type that accepts InstanceStorageConfigEncryptionTypeArgs and InstanceStorageConfigEncryptionTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionTypeInput` via:
//
//	InstanceStorageConfigEncryptionTypeArgs{...}
type InstanceStorageConfigEncryptionTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionTypeOutput() InstanceStorageConfigEncryptionTypeOutput
	ToInstanceStorageConfigEncryptionTypeOutputWithContext(context.Context) InstanceStorageConfigEncryptionTypeOutput
}

var instanceStorageConfigEncryptionTypePtrType = reflect.TypeOf((**InstanceStorageConfigEncryptionType)(nil)).Elem()

type InstanceStorageConfigEncryptionTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput
	ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(context.Context) InstanceStorageConfigEncryptionTypePtrOutput
}

type instanceStorageConfigEncryptionTypePtr string

func InstanceStorageConfigEncryptionTypePtr(v string) InstanceStorageConfigEncryptionTypePtrInput {
	return (*instanceStorageConfigEncryptionTypePtr)(&v)
}

func (*instanceStorageConfigEncryptionTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigEncryptionTypePtrType
}

func (in *instanceStorageConfigEncryptionTypePtr) ToInstanceStorageConfigEncryptionTypePtrOutput() InstanceStorageConfigEncryptionTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (in *instanceStorageConfigEncryptionTypePtr) ToInstanceStorageConfigEncryptionTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigEncryptionTypePtrOutput)
}

// Specifies the type of storage resource available for the instance
type InstanceStorageConfigInstanceStorageResourceType string

const (
	InstanceStorageConfigInstanceStorageResourceTypeChatTranscripts     = InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS")
	InstanceStorageConfigInstanceStorageResourceTypeCallRecordings      = InstanceStorageConfigInstanceStorageResourceType("CALL_RECORDINGS")
	InstanceStorageConfigInstanceStorageResourceTypeScheduledReports    = InstanceStorageConfigInstanceStorageResourceType("SCHEDULED_REPORTS")
	InstanceStorageConfigInstanceStorageResourceTypeMediaStreams        = InstanceStorageConfigInstanceStorageResourceType("MEDIA_STREAMS")
	InstanceStorageConfigInstanceStorageResourceTypeContactTraceRecords = InstanceStorageConfigInstanceStorageResourceType("CONTACT_TRACE_RECORDS")
	InstanceStorageConfigInstanceStorageResourceTypeAgentEvents         = InstanceStorageConfigInstanceStorageResourceType("AGENT_EVENTS")
)

func (InstanceStorageConfigInstanceStorageResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return e.ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return InstanceStorageConfigInstanceStorageResourceType(e).ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx).ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigInstanceStorageResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigInstanceStorageResourceTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigInstanceStorageResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o.ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigInstanceStorageResourceType) *InstanceStorageConfigInstanceStorageResourceType {
		return &v
	}).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigInstanceStorageResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigInstanceStorageResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigInstanceStorageResourceTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return o
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) Elem() InstanceStorageConfigInstanceStorageResourceTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigInstanceStorageResourceType) InstanceStorageConfigInstanceStorageResourceType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigInstanceStorageResourceType
		return ret
	}).(InstanceStorageConfigInstanceStorageResourceTypeOutput)
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigInstanceStorageResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigInstanceStorageResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigInstanceStorageResourceTypeInput is an input type that accepts InstanceStorageConfigInstanceStorageResourceTypeArgs and InstanceStorageConfigInstanceStorageResourceTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigInstanceStorageResourceTypeInput` via:
//
//	InstanceStorageConfigInstanceStorageResourceTypeArgs{...}
type InstanceStorageConfigInstanceStorageResourceTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigInstanceStorageResourceTypeOutput() InstanceStorageConfigInstanceStorageResourceTypeOutput
	ToInstanceStorageConfigInstanceStorageResourceTypeOutputWithContext(context.Context) InstanceStorageConfigInstanceStorageResourceTypeOutput
}

var instanceStorageConfigInstanceStorageResourceTypePtrType = reflect.TypeOf((**InstanceStorageConfigInstanceStorageResourceType)(nil)).Elem()

type InstanceStorageConfigInstanceStorageResourceTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput
	ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput
}

type instanceStorageConfigInstanceStorageResourceTypePtr string

func InstanceStorageConfigInstanceStorageResourceTypePtr(v string) InstanceStorageConfigInstanceStorageResourceTypePtrInput {
	return (*instanceStorageConfigInstanceStorageResourceTypePtr)(&v)
}

func (*instanceStorageConfigInstanceStorageResourceTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigInstanceStorageResourceTypePtrType
}

func (in *instanceStorageConfigInstanceStorageResourceTypePtr) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutput() InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

func (in *instanceStorageConfigInstanceStorageResourceTypePtr) ToInstanceStorageConfigInstanceStorageResourceTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigInstanceStorageResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigInstanceStorageResourceTypePtrOutput)
}

// Specifies the storage type to be associated with the instance
type InstanceStorageConfigStorageType string

const (
	InstanceStorageConfigStorageTypeS3                 = InstanceStorageConfigStorageType("S3")
	InstanceStorageConfigStorageTypeKinesisVideoStream = InstanceStorageConfigStorageType("KINESIS_VIDEO_STREAM")
	InstanceStorageConfigStorageTypeKinesisStream      = InstanceStorageConfigStorageType("KINESIS_STREAM")
	InstanceStorageConfigStorageTypeKinesisFirehose    = InstanceStorageConfigStorageType("KINESIS_FIREHOSE")
)

func (InstanceStorageConfigStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageType)(nil)).Elem()
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput {
	return pulumi.ToOutput(e).(InstanceStorageConfigStorageTypeOutput)
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypeOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceStorageConfigStorageTypeOutput)
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return e.ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigStorageType) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return InstanceStorageConfigStorageType(e).ToInstanceStorageConfigStorageTypeOutputWithContext(ctx).ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx)
}

func (e InstanceStorageConfigStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStorageConfigStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStorageConfigStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceStorageConfigStorageTypeOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigStorageType)(nil)).Elem()
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput {
	return o
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypeOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypeOutput {
	return o
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return o.ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigStorageType) *InstanceStorageConfigStorageType {
		return &v
	}).(InstanceStorageConfigStorageTypePtrOutput)
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceStorageConfigStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigStorageTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigStorageType)(nil)).Elem()
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return o
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return o
}

func (o InstanceStorageConfigStorageTypePtrOutput) Elem() InstanceStorageConfigStorageTypeOutput {
	return o.ApplyT(func(v *InstanceStorageConfigStorageType) InstanceStorageConfigStorageType {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigStorageType
		return ret
	}).(InstanceStorageConfigStorageTypeOutput)
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceStorageConfigStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceStorageConfigStorageTypeInput is an input type that accepts InstanceStorageConfigStorageTypeArgs and InstanceStorageConfigStorageTypeOutput values.
// You can construct a concrete instance of `InstanceStorageConfigStorageTypeInput` via:
//
//	InstanceStorageConfigStorageTypeArgs{...}
type InstanceStorageConfigStorageTypeInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageTypeOutput() InstanceStorageConfigStorageTypeOutput
	ToInstanceStorageConfigStorageTypeOutputWithContext(context.Context) InstanceStorageConfigStorageTypeOutput
}

var instanceStorageConfigStorageTypePtrType = reflect.TypeOf((**InstanceStorageConfigStorageType)(nil)).Elem()

type InstanceStorageConfigStorageTypePtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput
	ToInstanceStorageConfigStorageTypePtrOutputWithContext(context.Context) InstanceStorageConfigStorageTypePtrOutput
}

type instanceStorageConfigStorageTypePtr string

func InstanceStorageConfigStorageTypePtr(v string) InstanceStorageConfigStorageTypePtrInput {
	return (*instanceStorageConfigStorageTypePtr)(&v)
}

func (*instanceStorageConfigStorageTypePtr) ElementType() reflect.Type {
	return instanceStorageConfigStorageTypePtrType
}

func (in *instanceStorageConfigStorageTypePtr) ToInstanceStorageConfigStorageTypePtrOutput() InstanceStorageConfigStorageTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceStorageConfigStorageTypePtrOutput)
}

func (in *instanceStorageConfigStorageTypePtr) ToInstanceStorageConfigStorageTypePtrOutputWithContext(ctx context.Context) InstanceStorageConfigStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceStorageConfigStorageTypePtrOutput)
}

// Specifies the integration type to be associated with the instance
type IntegrationAssociationIntegrationType string

const (
	IntegrationAssociationIntegrationTypeLexBot         = IntegrationAssociationIntegrationType("LEX_BOT")
	IntegrationAssociationIntegrationTypeLambdaFunction = IntegrationAssociationIntegrationType("LAMBDA_FUNCTION")
)

func (IntegrationAssociationIntegrationType) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput {
	return pulumi.ToOutput(e).(IntegrationAssociationIntegrationTypeOutput)
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IntegrationAssociationIntegrationTypeOutput)
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return e.ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Background())
}

func (e IntegrationAssociationIntegrationType) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return IntegrationAssociationIntegrationType(e).ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx).ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx)
}

func (e IntegrationAssociationIntegrationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationAssociationIntegrationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IntegrationAssociationIntegrationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IntegrationAssociationIntegrationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IntegrationAssociationIntegrationTypeOutput struct{ *pulumi.OutputState }

func (IntegrationAssociationIntegrationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypeOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypeOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return o.ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAssociationIntegrationType) *IntegrationAssociationIntegrationType {
		return &v
	}).(IntegrationAssociationIntegrationTypePtrOutput)
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationAssociationIntegrationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IntegrationAssociationIntegrationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IntegrationAssociationIntegrationTypePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAssociationIntegrationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAssociationIntegrationType)(nil)).Elem()
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return o
}

func (o IntegrationAssociationIntegrationTypePtrOutput) Elem() IntegrationAssociationIntegrationTypeOutput {
	return o.ApplyT(func(v *IntegrationAssociationIntegrationType) IntegrationAssociationIntegrationType {
		if v != nil {
			return *v
		}
		var ret IntegrationAssociationIntegrationType
		return ret
	}).(IntegrationAssociationIntegrationTypeOutput)
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IntegrationAssociationIntegrationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IntegrationAssociationIntegrationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IntegrationAssociationIntegrationTypeInput is an input type that accepts IntegrationAssociationIntegrationTypeArgs and IntegrationAssociationIntegrationTypeOutput values.
// You can construct a concrete instance of `IntegrationAssociationIntegrationTypeInput` via:
//
//	IntegrationAssociationIntegrationTypeArgs{...}
type IntegrationAssociationIntegrationTypeInput interface {
	pulumi.Input

	ToIntegrationAssociationIntegrationTypeOutput() IntegrationAssociationIntegrationTypeOutput
	ToIntegrationAssociationIntegrationTypeOutputWithContext(context.Context) IntegrationAssociationIntegrationTypeOutput
}

var integrationAssociationIntegrationTypePtrType = reflect.TypeOf((**IntegrationAssociationIntegrationType)(nil)).Elem()

type IntegrationAssociationIntegrationTypePtrInput interface {
	pulumi.Input

	ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput
	ToIntegrationAssociationIntegrationTypePtrOutputWithContext(context.Context) IntegrationAssociationIntegrationTypePtrOutput
}

type integrationAssociationIntegrationTypePtr string

func IntegrationAssociationIntegrationTypePtr(v string) IntegrationAssociationIntegrationTypePtrInput {
	return (*integrationAssociationIntegrationTypePtr)(&v)
}

func (*integrationAssociationIntegrationTypePtr) ElementType() reflect.Type {
	return integrationAssociationIntegrationTypePtrType
}

func (in *integrationAssociationIntegrationTypePtr) ToIntegrationAssociationIntegrationTypePtrOutput() IntegrationAssociationIntegrationTypePtrOutput {
	return pulumi.ToOutput(in).(IntegrationAssociationIntegrationTypePtrOutput)
}

func (in *integrationAssociationIntegrationTypePtr) ToIntegrationAssociationIntegrationTypePtrOutputWithContext(ctx context.Context) IntegrationAssociationIntegrationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IntegrationAssociationIntegrationTypePtrOutput)
}

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
type QuickConnectType string

const (
	QuickConnectTypePhoneNumber = QuickConnectType("PHONE_NUMBER")
	QuickConnectTypeQueue       = QuickConnectType("QUEUE")
	QuickConnectTypeUser        = QuickConnectType("USER")
)

func (QuickConnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (e QuickConnectType) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return pulumi.ToOutput(e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return e.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return QuickConnectType(e).ToQuickConnectTypeOutputWithContext(ctx).ToQuickConnectTypePtrOutputWithContext(ctx)
}

func (e QuickConnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QuickConnectTypeOutput struct{ *pulumi.OutputState }

func (QuickConnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectType) *QuickConnectType {
		return &v
	}).(QuickConnectTypePtrOutput)
}

func (o QuickConnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QuickConnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QuickConnectTypePtrOutput struct{ *pulumi.OutputState }

func (QuickConnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) Elem() QuickConnectTypeOutput {
	return o.ApplyT(func(v *QuickConnectType) QuickConnectType {
		if v != nil {
			return *v
		}
		var ret QuickConnectType
		return ret
	}).(QuickConnectTypeOutput)
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QuickConnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QuickConnectTypeInput is an input type that accepts QuickConnectTypeArgs and QuickConnectTypeOutput values.
// You can construct a concrete instance of `QuickConnectTypeInput` via:
//
//	QuickConnectTypeArgs{...}
type QuickConnectTypeInput interface {
	pulumi.Input

	ToQuickConnectTypeOutput() QuickConnectTypeOutput
	ToQuickConnectTypeOutputWithContext(context.Context) QuickConnectTypeOutput
}

var quickConnectTypePtrType = reflect.TypeOf((**QuickConnectType)(nil)).Elem()

type QuickConnectTypePtrInput interface {
	pulumi.Input

	ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput
	ToQuickConnectTypePtrOutputWithContext(context.Context) QuickConnectTypePtrOutput
}

type quickConnectTypePtr string

func QuickConnectTypePtr(v string) QuickConnectTypePtrInput {
	return (*quickConnectTypePtr)(&v)
}

func (*quickConnectTypePtr) ElementType() reflect.Type {
	return quickConnectTypePtrType
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return pulumi.ToOutput(in).(QuickConnectTypePtrOutput)
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QuickConnectTypePtrOutput)
}

// The publish status of a rule, either draft or published.
type RulePublishStatus string

const (
	RulePublishStatusDraft     = RulePublishStatus("DRAFT")
	RulePublishStatusPublished = RulePublishStatus("PUBLISHED")
)

func (RulePublishStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePublishStatus)(nil)).Elem()
}

func (e RulePublishStatus) ToRulePublishStatusOutput() RulePublishStatusOutput {
	return pulumi.ToOutput(e).(RulePublishStatusOutput)
}

func (e RulePublishStatus) ToRulePublishStatusOutputWithContext(ctx context.Context) RulePublishStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RulePublishStatusOutput)
}

func (e RulePublishStatus) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return e.ToRulePublishStatusPtrOutputWithContext(context.Background())
}

func (e RulePublishStatus) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return RulePublishStatus(e).ToRulePublishStatusOutputWithContext(ctx).ToRulePublishStatusPtrOutputWithContext(ctx)
}

func (e RulePublishStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RulePublishStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RulePublishStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RulePublishStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RulePublishStatusOutput struct{ *pulumi.OutputState }

func (RulePublishStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePublishStatus)(nil)).Elem()
}

func (o RulePublishStatusOutput) ToRulePublishStatusOutput() RulePublishStatusOutput {
	return o
}

func (o RulePublishStatusOutput) ToRulePublishStatusOutputWithContext(ctx context.Context) RulePublishStatusOutput {
	return o
}

func (o RulePublishStatusOutput) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return o.ToRulePublishStatusPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RulePublishStatus) *RulePublishStatus {
		return &v
	}).(RulePublishStatusPtrOutput)
}

func (o RulePublishStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RulePublishStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RulePublishStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RulePublishStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RulePublishStatusPtrOutput struct{ *pulumi.OutputState }

func (RulePublishStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RulePublishStatus)(nil)).Elem()
}

func (o RulePublishStatusPtrOutput) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return o
}

func (o RulePublishStatusPtrOutput) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return o
}

func (o RulePublishStatusPtrOutput) Elem() RulePublishStatusOutput {
	return o.ApplyT(func(v *RulePublishStatus) RulePublishStatus {
		if v != nil {
			return *v
		}
		var ret RulePublishStatus
		return ret
	}).(RulePublishStatusOutput)
}

func (o RulePublishStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RulePublishStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RulePublishStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RulePublishStatusInput is an input type that accepts RulePublishStatusArgs and RulePublishStatusOutput values.
// You can construct a concrete instance of `RulePublishStatusInput` via:
//
//	RulePublishStatusArgs{...}
type RulePublishStatusInput interface {
	pulumi.Input

	ToRulePublishStatusOutput() RulePublishStatusOutput
	ToRulePublishStatusOutputWithContext(context.Context) RulePublishStatusOutput
}

var rulePublishStatusPtrType = reflect.TypeOf((**RulePublishStatus)(nil)).Elem()

type RulePublishStatusPtrInput interface {
	pulumi.Input

	ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput
	ToRulePublishStatusPtrOutputWithContext(context.Context) RulePublishStatusPtrOutput
}

type rulePublishStatusPtr string

func RulePublishStatusPtr(v string) RulePublishStatusPtrInput {
	return (*rulePublishStatusPtr)(&v)
}

func (*rulePublishStatusPtr) ElementType() reflect.Type {
	return rulePublishStatusPtrType
}

func (in *rulePublishStatusPtr) ToRulePublishStatusPtrOutput() RulePublishStatusPtrOutput {
	return pulumi.ToOutput(in).(RulePublishStatusPtrOutput)
}

func (in *rulePublishStatusPtr) ToRulePublishStatusPtrOutputWithContext(ctx context.Context) RulePublishStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RulePublishStatusPtrOutput)
}

// The type of content.
type RuleSendNotificationActionContentType string

const (
	RuleSendNotificationActionContentTypePlainText = RuleSendNotificationActionContentType("PLAIN_TEXT")
)

func (RuleSendNotificationActionContentType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionContentType)(nil)).Elem()
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput {
	return pulumi.ToOutput(e).(RuleSendNotificationActionContentTypeOutput)
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypeOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleSendNotificationActionContentTypeOutput)
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return e.ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionContentType) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return RuleSendNotificationActionContentType(e).ToRuleSendNotificationActionContentTypeOutputWithContext(ctx).ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx)
}

func (e RuleSendNotificationActionContentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionContentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionContentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionContentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleSendNotificationActionContentTypeOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionContentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionContentType)(nil)).Elem()
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput {
	return o
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypeOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypeOutput {
	return o
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return o.ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSendNotificationActionContentType) *RuleSendNotificationActionContentType {
		return &v
	}).(RuleSendNotificationActionContentTypePtrOutput)
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionContentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionContentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionContentTypePtrOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionContentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSendNotificationActionContentType)(nil)).Elem()
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return o
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return o
}

func (o RuleSendNotificationActionContentTypePtrOutput) Elem() RuleSendNotificationActionContentTypeOutput {
	return o.ApplyT(func(v *RuleSendNotificationActionContentType) RuleSendNotificationActionContentType {
		if v != nil {
			return *v
		}
		var ret RuleSendNotificationActionContentType
		return ret
	}).(RuleSendNotificationActionContentTypeOutput)
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionContentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleSendNotificationActionContentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleSendNotificationActionContentTypeInput is an input type that accepts RuleSendNotificationActionContentTypeArgs and RuleSendNotificationActionContentTypeOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionContentTypeInput` via:
//
//	RuleSendNotificationActionContentTypeArgs{...}
type RuleSendNotificationActionContentTypeInput interface {
	pulumi.Input

	ToRuleSendNotificationActionContentTypeOutput() RuleSendNotificationActionContentTypeOutput
	ToRuleSendNotificationActionContentTypeOutputWithContext(context.Context) RuleSendNotificationActionContentTypeOutput
}

var ruleSendNotificationActionContentTypePtrType = reflect.TypeOf((**RuleSendNotificationActionContentType)(nil)).Elem()

type RuleSendNotificationActionContentTypePtrInput interface {
	pulumi.Input

	ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput
	ToRuleSendNotificationActionContentTypePtrOutputWithContext(context.Context) RuleSendNotificationActionContentTypePtrOutput
}

type ruleSendNotificationActionContentTypePtr string

func RuleSendNotificationActionContentTypePtr(v string) RuleSendNotificationActionContentTypePtrInput {
	return (*ruleSendNotificationActionContentTypePtr)(&v)
}

func (*ruleSendNotificationActionContentTypePtr) ElementType() reflect.Type {
	return ruleSendNotificationActionContentTypePtrType
}

func (in *ruleSendNotificationActionContentTypePtr) ToRuleSendNotificationActionContentTypePtrOutput() RuleSendNotificationActionContentTypePtrOutput {
	return pulumi.ToOutput(in).(RuleSendNotificationActionContentTypePtrOutput)
}

func (in *ruleSendNotificationActionContentTypePtr) ToRuleSendNotificationActionContentTypePtrOutputWithContext(ctx context.Context) RuleSendNotificationActionContentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleSendNotificationActionContentTypePtrOutput)
}

// The means of delivery.
type RuleSendNotificationActionDeliveryMethod string

const (
	RuleSendNotificationActionDeliveryMethodEmail = RuleSendNotificationActionDeliveryMethod("EMAIL")
)

func (RuleSendNotificationActionDeliveryMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput {
	return pulumi.ToOutput(e).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return e.ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionDeliveryMethod) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return RuleSendNotificationActionDeliveryMethod(e).ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx).ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleSendNotificationActionDeliveryMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleSendNotificationActionDeliveryMethodOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionDeliveryMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o.ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSendNotificationActionDeliveryMethod) *RuleSendNotificationActionDeliveryMethod {
		return &v
	}).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionDeliveryMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleSendNotificationActionDeliveryMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionDeliveryMethodPtrOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionDeliveryMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSendNotificationActionDeliveryMethod)(nil)).Elem()
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return o
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) Elem() RuleSendNotificationActionDeliveryMethodOutput {
	return o.ApplyT(func(v *RuleSendNotificationActionDeliveryMethod) RuleSendNotificationActionDeliveryMethod {
		if v != nil {
			return *v
		}
		var ret RuleSendNotificationActionDeliveryMethod
		return ret
	}).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleSendNotificationActionDeliveryMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleSendNotificationActionDeliveryMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleSendNotificationActionDeliveryMethodInput is an input type that accepts RuleSendNotificationActionDeliveryMethodArgs and RuleSendNotificationActionDeliveryMethodOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionDeliveryMethodInput` via:
//
//	RuleSendNotificationActionDeliveryMethodArgs{...}
type RuleSendNotificationActionDeliveryMethodInput interface {
	pulumi.Input

	ToRuleSendNotificationActionDeliveryMethodOutput() RuleSendNotificationActionDeliveryMethodOutput
	ToRuleSendNotificationActionDeliveryMethodOutputWithContext(context.Context) RuleSendNotificationActionDeliveryMethodOutput
}

var ruleSendNotificationActionDeliveryMethodPtrType = reflect.TypeOf((**RuleSendNotificationActionDeliveryMethod)(nil)).Elem()

type RuleSendNotificationActionDeliveryMethodPtrInput interface {
	pulumi.Input

	ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput
	ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput
}

type ruleSendNotificationActionDeliveryMethodPtr string

func RuleSendNotificationActionDeliveryMethodPtr(v string) RuleSendNotificationActionDeliveryMethodPtrInput {
	return (*ruleSendNotificationActionDeliveryMethodPtr)(&v)
}

func (*ruleSendNotificationActionDeliveryMethodPtr) ElementType() reflect.Type {
	return ruleSendNotificationActionDeliveryMethodPtrType
}

func (in *ruleSendNotificationActionDeliveryMethodPtr) ToRuleSendNotificationActionDeliveryMethodPtrOutput() RuleSendNotificationActionDeliveryMethodPtrOutput {
	return pulumi.ToOutput(in).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

func (in *ruleSendNotificationActionDeliveryMethodPtr) ToRuleSendNotificationActionDeliveryMethodPtrOutputWithContext(ctx context.Context) RuleSendNotificationActionDeliveryMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleSendNotificationActionDeliveryMethodPtrOutput)
}

// The name of event source.
type RuleTriggerEventSourceEventSourceName string

const (
	RuleTriggerEventSourceEventSourceNameOnPostCallAnalysisAvailable     = RuleTriggerEventSourceEventSourceName("OnPostCallAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnRealTimeCallAnalysisAvailable = RuleTriggerEventSourceEventSourceName("OnRealTimeCallAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnPostChatAnalysisAvailable     = RuleTriggerEventSourceEventSourceName("OnPostChatAnalysisAvailable")
	RuleTriggerEventSourceEventSourceNameOnZendeskTicketCreate           = RuleTriggerEventSourceEventSourceName("OnZendeskTicketCreate")
	RuleTriggerEventSourceEventSourceNameOnZendeskTicketStatusUpdate     = RuleTriggerEventSourceEventSourceName("OnZendeskTicketStatusUpdate")
	RuleTriggerEventSourceEventSourceNameOnSalesforceCaseCreate          = RuleTriggerEventSourceEventSourceName("OnSalesforceCaseCreate")
)

func (RuleTriggerEventSourceEventSourceName) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput {
	return pulumi.ToOutput(e).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return e.ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Background())
}

func (e RuleTriggerEventSourceEventSourceName) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return RuleTriggerEventSourceEventSourceName(e).ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx).ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleTriggerEventSourceEventSourceName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleTriggerEventSourceEventSourceName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleTriggerEventSourceEventSourceNameOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceEventSourceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNameOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNameOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o.ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleTriggerEventSourceEventSourceName) *RuleTriggerEventSourceEventSourceName {
		return &v
	}).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleTriggerEventSourceEventSourceName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleTriggerEventSourceEventSourceName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleTriggerEventSourceEventSourceNamePtrOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceEventSourceNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleTriggerEventSourceEventSourceName)(nil)).Elem()
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return o
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) Elem() RuleTriggerEventSourceEventSourceNameOutput {
	return o.ApplyT(func(v *RuleTriggerEventSourceEventSourceName) RuleTriggerEventSourceEventSourceName {
		if v != nil {
			return *v
		}
		var ret RuleTriggerEventSourceEventSourceName
		return ret
	}).(RuleTriggerEventSourceEventSourceNameOutput)
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleTriggerEventSourceEventSourceNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleTriggerEventSourceEventSourceName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleTriggerEventSourceEventSourceNameInput is an input type that accepts RuleTriggerEventSourceEventSourceNameArgs and RuleTriggerEventSourceEventSourceNameOutput values.
// You can construct a concrete instance of `RuleTriggerEventSourceEventSourceNameInput` via:
//
//	RuleTriggerEventSourceEventSourceNameArgs{...}
type RuleTriggerEventSourceEventSourceNameInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceEventSourceNameOutput() RuleTriggerEventSourceEventSourceNameOutput
	ToRuleTriggerEventSourceEventSourceNameOutputWithContext(context.Context) RuleTriggerEventSourceEventSourceNameOutput
}

var ruleTriggerEventSourceEventSourceNamePtrType = reflect.TypeOf((**RuleTriggerEventSourceEventSourceName)(nil)).Elem()

type RuleTriggerEventSourceEventSourceNamePtrInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput
	ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput
}

type ruleTriggerEventSourceEventSourceNamePtr string

func RuleTriggerEventSourceEventSourceNamePtr(v string) RuleTriggerEventSourceEventSourceNamePtrInput {
	return (*ruleTriggerEventSourceEventSourceNamePtr)(&v)
}

func (*ruleTriggerEventSourceEventSourceNamePtr) ElementType() reflect.Type {
	return ruleTriggerEventSourceEventSourceNamePtrType
}

func (in *ruleTriggerEventSourceEventSourceNamePtr) ToRuleTriggerEventSourceEventSourceNamePtrOutput() RuleTriggerEventSourceEventSourceNamePtrOutput {
	return pulumi.ToOutput(in).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

func (in *ruleTriggerEventSourceEventSourceNamePtr) ToRuleTriggerEventSourceEventSourceNamePtrOutputWithContext(ctx context.Context) RuleTriggerEventSourceEventSourceNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleTriggerEventSourceEventSourceNamePtrOutput)
}

// The type of the task template's field
type TaskTemplateFieldType string

const (
	TaskTemplateFieldTypeName          = TaskTemplateFieldType("NAME")
	TaskTemplateFieldTypeDescription   = TaskTemplateFieldType("DESCRIPTION")
	TaskTemplateFieldTypeScheduledTime = TaskTemplateFieldType("SCHEDULED_TIME")
	TaskTemplateFieldTypeQuickConnect  = TaskTemplateFieldType("QUICK_CONNECT")
	TaskTemplateFieldTypeUrl           = TaskTemplateFieldType("URL")
	TaskTemplateFieldTypeNumber        = TaskTemplateFieldType("NUMBER")
	TaskTemplateFieldTypeText          = TaskTemplateFieldType("TEXT")
	TaskTemplateFieldTypeTextArea      = TaskTemplateFieldType("TEXT_AREA")
	TaskTemplateFieldTypeDateTime      = TaskTemplateFieldType("DATE_TIME")
	TaskTemplateFieldTypeBoolean       = TaskTemplateFieldType("BOOLEAN")
	TaskTemplateFieldTypeSingleSelect  = TaskTemplateFieldType("SINGLE_SELECT")
	TaskTemplateFieldTypeEmail         = TaskTemplateFieldType("EMAIL")
)

func (TaskTemplateFieldType) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldType)(nil)).Elem()
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput {
	return pulumi.ToOutput(e).(TaskTemplateFieldTypeOutput)
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypeOutputWithContext(ctx context.Context) TaskTemplateFieldTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskTemplateFieldTypeOutput)
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return e.ToTaskTemplateFieldTypePtrOutputWithContext(context.Background())
}

func (e TaskTemplateFieldType) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return TaskTemplateFieldType(e).ToTaskTemplateFieldTypeOutputWithContext(ctx).ToTaskTemplateFieldTypePtrOutputWithContext(ctx)
}

func (e TaskTemplateFieldType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateFieldType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateFieldType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskTemplateFieldType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskTemplateFieldTypeOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldType)(nil)).Elem()
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput {
	return o
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypeOutputWithContext(ctx context.Context) TaskTemplateFieldTypeOutput {
	return o
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return o.ToTaskTemplateFieldTypePtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskTemplateFieldType) *TaskTemplateFieldType {
		return &v
	}).(TaskTemplateFieldTypePtrOutput)
}

func (o TaskTemplateFieldTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateFieldType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskTemplateFieldTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateFieldType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskTemplateFieldTypePtrOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplateFieldType)(nil)).Elem()
}

func (o TaskTemplateFieldTypePtrOutput) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return o
}

func (o TaskTemplateFieldTypePtrOutput) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return o
}

func (o TaskTemplateFieldTypePtrOutput) Elem() TaskTemplateFieldTypeOutput {
	return o.ApplyT(func(v *TaskTemplateFieldType) TaskTemplateFieldType {
		if v != nil {
			return *v
		}
		var ret TaskTemplateFieldType
		return ret
	}).(TaskTemplateFieldTypeOutput)
}

func (o TaskTemplateFieldTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateFieldTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskTemplateFieldType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskTemplateFieldTypeInput is an input type that accepts TaskTemplateFieldTypeArgs and TaskTemplateFieldTypeOutput values.
// You can construct a concrete instance of `TaskTemplateFieldTypeInput` via:
//
//	TaskTemplateFieldTypeArgs{...}
type TaskTemplateFieldTypeInput interface {
	pulumi.Input

	ToTaskTemplateFieldTypeOutput() TaskTemplateFieldTypeOutput
	ToTaskTemplateFieldTypeOutputWithContext(context.Context) TaskTemplateFieldTypeOutput
}

var taskTemplateFieldTypePtrType = reflect.TypeOf((**TaskTemplateFieldType)(nil)).Elem()

type TaskTemplateFieldTypePtrInput interface {
	pulumi.Input

	ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput
	ToTaskTemplateFieldTypePtrOutputWithContext(context.Context) TaskTemplateFieldTypePtrOutput
}

type taskTemplateFieldTypePtr string

func TaskTemplateFieldTypePtr(v string) TaskTemplateFieldTypePtrInput {
	return (*taskTemplateFieldTypePtr)(&v)
}

func (*taskTemplateFieldTypePtr) ElementType() reflect.Type {
	return taskTemplateFieldTypePtrType
}

func (in *taskTemplateFieldTypePtr) ToTaskTemplateFieldTypePtrOutput() TaskTemplateFieldTypePtrOutput {
	return pulumi.ToOutput(in).(TaskTemplateFieldTypePtrOutput)
}

func (in *taskTemplateFieldTypePtr) ToTaskTemplateFieldTypePtrOutputWithContext(ctx context.Context) TaskTemplateFieldTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskTemplateFieldTypePtrOutput)
}

// The status of the task template
type TaskTemplateStatus string

const (
	TaskTemplateStatusActive   = TaskTemplateStatus("ACTIVE")
	TaskTemplateStatusInactive = TaskTemplateStatus("INACTIVE")
)

func (TaskTemplateStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateStatus)(nil)).Elem()
}

func (e TaskTemplateStatus) ToTaskTemplateStatusOutput() TaskTemplateStatusOutput {
	return pulumi.ToOutput(e).(TaskTemplateStatusOutput)
}

func (e TaskTemplateStatus) ToTaskTemplateStatusOutputWithContext(ctx context.Context) TaskTemplateStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TaskTemplateStatusOutput)
}

func (e TaskTemplateStatus) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return e.ToTaskTemplateStatusPtrOutputWithContext(context.Background())
}

func (e TaskTemplateStatus) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return TaskTemplateStatus(e).ToTaskTemplateStatusOutputWithContext(ctx).ToTaskTemplateStatusPtrOutputWithContext(ctx)
}

func (e TaskTemplateStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskTemplateStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskTemplateStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TaskTemplateStatusOutput struct{ *pulumi.OutputState }

func (TaskTemplateStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateStatus)(nil)).Elem()
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusOutput() TaskTemplateStatusOutput {
	return o
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusOutputWithContext(ctx context.Context) TaskTemplateStatusOutput {
	return o
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return o.ToTaskTemplateStatusPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TaskTemplateStatus) *TaskTemplateStatus {
		return &v
	}).(TaskTemplateStatusPtrOutput)
}

func (o TaskTemplateStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TaskTemplateStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TaskTemplateStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TaskTemplateStatusPtrOutput struct{ *pulumi.OutputState }

func (TaskTemplateStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskTemplateStatus)(nil)).Elem()
}

func (o TaskTemplateStatusPtrOutput) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return o
}

func (o TaskTemplateStatusPtrOutput) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return o
}

func (o TaskTemplateStatusPtrOutput) Elem() TaskTemplateStatusOutput {
	return o.ApplyT(func(v *TaskTemplateStatus) TaskTemplateStatus {
		if v != nil {
			return *v
		}
		var ret TaskTemplateStatus
		return ret
	}).(TaskTemplateStatusOutput)
}

func (o TaskTemplateStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TaskTemplateStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TaskTemplateStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TaskTemplateStatusInput is an input type that accepts TaskTemplateStatusArgs and TaskTemplateStatusOutput values.
// You can construct a concrete instance of `TaskTemplateStatusInput` via:
//
//	TaskTemplateStatusArgs{...}
type TaskTemplateStatusInput interface {
	pulumi.Input

	ToTaskTemplateStatusOutput() TaskTemplateStatusOutput
	ToTaskTemplateStatusOutputWithContext(context.Context) TaskTemplateStatusOutput
}

var taskTemplateStatusPtrType = reflect.TypeOf((**TaskTemplateStatus)(nil)).Elem()

type TaskTemplateStatusPtrInput interface {
	pulumi.Input

	ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput
	ToTaskTemplateStatusPtrOutputWithContext(context.Context) TaskTemplateStatusPtrOutput
}

type taskTemplateStatusPtr string

func TaskTemplateStatusPtr(v string) TaskTemplateStatusPtrInput {
	return (*taskTemplateStatusPtr)(&v)
}

func (*taskTemplateStatusPtr) ElementType() reflect.Type {
	return taskTemplateStatusPtrType
}

func (in *taskTemplateStatusPtr) ToTaskTemplateStatusPtrOutput() TaskTemplateStatusPtrOutput {
	return pulumi.ToOutput(in).(TaskTemplateStatusPtrOutput)
}

func (in *taskTemplateStatusPtr) ToTaskTemplateStatusPtrOutputWithContext(ctx context.Context) TaskTemplateStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TaskTemplateStatusPtrOutput)
}

// The phone type.
type UserPhoneType string

const (
	UserPhoneTypeSoftPhone = UserPhoneType("SOFT_PHONE")
	UserPhoneTypeDeskPhone = UserPhoneType("DESK_PHONE")
)

func (UserPhoneType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (e UserPhoneType) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return pulumi.ToOutput(e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return e.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return UserPhoneType(e).ToUserPhoneTypeOutputWithContext(ctx).ToUserPhoneTypePtrOutputWithContext(ctx)
}

func (e UserPhoneType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserPhoneTypeOutput struct{ *pulumi.OutputState }

func (UserPhoneTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPhoneType) *UserPhoneType {
		return &v
	}).(UserPhoneTypePtrOutput)
}

func (o UserPhoneTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserPhoneTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserPhoneTypePtrOutput struct{ *pulumi.OutputState }

func (UserPhoneTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) Elem() UserPhoneTypeOutput {
	return o.ApplyT(func(v *UserPhoneType) UserPhoneType {
		if v != nil {
			return *v
		}
		var ret UserPhoneType
		return ret
	}).(UserPhoneTypeOutput)
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserPhoneType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserPhoneTypeInput is an input type that accepts UserPhoneTypeArgs and UserPhoneTypeOutput values.
// You can construct a concrete instance of `UserPhoneTypeInput` via:
//
//	UserPhoneTypeArgs{...}
type UserPhoneTypeInput interface {
	pulumi.Input

	ToUserPhoneTypeOutput() UserPhoneTypeOutput
	ToUserPhoneTypeOutputWithContext(context.Context) UserPhoneTypeOutput
}

var userPhoneTypePtrType = reflect.TypeOf((**UserPhoneType)(nil)).Elem()

type UserPhoneTypePtrInput interface {
	pulumi.Input

	ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput
	ToUserPhoneTypePtrOutputWithContext(context.Context) UserPhoneTypePtrOutput
}

type userPhoneTypePtr string

func UserPhoneTypePtr(v string) UserPhoneTypePtrInput {
	return (*userPhoneTypePtr)(&v)
}

func (*userPhoneTypePtr) ElementType() reflect.Type {
	return userPhoneTypePtrType
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return pulumi.ToOutput(in).(UserPhoneTypePtrOutput)
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserPhoneTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowModuleStateEnumInput)(nil)).Elem(), ContactFlowModuleStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowModuleStateEnumPtrInput)(nil)).Elem(), ContactFlowModuleStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowStateEnumInput)(nil)).Elem(), ContactFlowStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowStateEnumPtrInput)(nil)).Elem(), ContactFlowStateEnum("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTypeInput)(nil)).Elem(), ContactFlowType("CONTACT_FLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTypePtrInput)(nil)).Elem(), ContactFlowType("CONTACT_FLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayPtrInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIdentityManagementTypeInput)(nil)).Elem(), InstanceIdentityManagementType("SAML"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceIdentityManagementTypePtrInput)(nil)).Elem(), InstanceIdentityManagementType("SAML"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionTypeInput)(nil)).Elem(), InstanceStorageConfigEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionTypePtrInput)(nil)).Elem(), InstanceStorageConfigEncryptionType("KMS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceTypeInput)(nil)).Elem(), InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigInstanceStorageResourceTypePtrInput)(nil)).Elem(), InstanceStorageConfigInstanceStorageResourceType("CHAT_TRANSCRIPTS"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageTypeInput)(nil)).Elem(), InstanceStorageConfigStorageType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigStorageTypePtrInput)(nil)).Elem(), InstanceStorageConfigStorageType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAssociationIntegrationTypeInput)(nil)).Elem(), IntegrationAssociationIntegrationType("LEX_BOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAssociationIntegrationTypePtrInput)(nil)).Elem(), IntegrationAssociationIntegrationType("LEX_BOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypeInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypePtrInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*RulePublishStatusInput)(nil)).Elem(), RulePublishStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RulePublishStatusPtrInput)(nil)).Elem(), RulePublishStatus("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionContentTypeInput)(nil)).Elem(), RuleSendNotificationActionContentType("PLAIN_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionContentTypePtrInput)(nil)).Elem(), RuleSendNotificationActionContentType("PLAIN_TEXT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionDeliveryMethodInput)(nil)).Elem(), RuleSendNotificationActionDeliveryMethod("EMAIL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionDeliveryMethodPtrInput)(nil)).Elem(), RuleSendNotificationActionDeliveryMethod("EMAIL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceEventSourceNameInput)(nil)).Elem(), RuleTriggerEventSourceEventSourceName("OnPostCallAnalysisAvailable"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceEventSourceNamePtrInput)(nil)).Elem(), RuleTriggerEventSourceEventSourceName("OnPostCallAnalysisAvailable"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldTypeInput)(nil)).Elem(), TaskTemplateFieldType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldTypePtrInput)(nil)).Elem(), TaskTemplateFieldType("NAME"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateStatusInput)(nil)).Elem(), TaskTemplateStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateStatusPtrInput)(nil)).Elem(), TaskTemplateStatus("ACTIVE"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypeInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypePtrInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterOutputType(ContactFlowModuleStateEnumOutput{})
	pulumi.RegisterOutputType(ContactFlowModuleStateEnumPtrOutput{})
	pulumi.RegisterOutputType(ContactFlowModuleStatusOutput{})
	pulumi.RegisterOutputType(ContactFlowModuleStatusPtrOutput{})
	pulumi.RegisterOutputType(ContactFlowStateEnumOutput{})
	pulumi.RegisterOutputType(ContactFlowStateEnumPtrOutput{})
	pulumi.RegisterOutputType(ContactFlowTypeOutput{})
	pulumi.RegisterOutputType(ContactFlowTypePtrOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigDayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigDayPtrOutput{})
	pulumi.RegisterOutputType(InstanceIdentityManagementTypeOutput{})
	pulumi.RegisterOutputType(InstanceIdentityManagementTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStatusOutput{})
	pulumi.RegisterOutputType(InstanceStatusPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigInstanceStorageResourceTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigInstanceStorageResourceTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageTypeOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigStorageTypePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAssociationIntegrationTypeOutput{})
	pulumi.RegisterOutputType(IntegrationAssociationIntegrationTypePtrOutput{})
	pulumi.RegisterOutputType(QuickConnectTypeOutput{})
	pulumi.RegisterOutputType(QuickConnectTypePtrOutput{})
	pulumi.RegisterOutputType(RulePublishStatusOutput{})
	pulumi.RegisterOutputType(RulePublishStatusPtrOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionContentTypeOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionContentTypePtrOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionDeliveryMethodOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionDeliveryMethodPtrOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceEventSourceNameOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceEventSourceNamePtrOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldTypeOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldTypePtrOutput{})
	pulumi.RegisterOutputType(TaskTemplateStatusOutput{})
	pulumi.RegisterOutputType(TaskTemplateStatusPtrOutput{})
	pulumi.RegisterOutputType(UserPhoneTypeOutput{})
	pulumi.RegisterOutputType(UserPhoneTypePtrOutput{})
}
