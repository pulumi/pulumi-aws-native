// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The day that the hours of operation applies to.
type HoursOfOperationConfigDay string

const (
	HoursOfOperationConfigDaySunday    = HoursOfOperationConfigDay("SUNDAY")
	HoursOfOperationConfigDayMonday    = HoursOfOperationConfigDay("MONDAY")
	HoursOfOperationConfigDayTuesday   = HoursOfOperationConfigDay("TUESDAY")
	HoursOfOperationConfigDayWednesday = HoursOfOperationConfigDay("WEDNESDAY")
	HoursOfOperationConfigDayThursday  = HoursOfOperationConfigDay("THURSDAY")
	HoursOfOperationConfigDayFriday    = HoursOfOperationConfigDay("FRIDAY")
	HoursOfOperationConfigDaySaturday  = HoursOfOperationConfigDay("SATURDAY")
)

func (HoursOfOperationConfigDay) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return pulumi.ToOutput(e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HoursOfOperationConfigDayOutput)
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return e.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return HoursOfOperationConfigDay(e).ToHoursOfOperationConfigDayOutputWithContext(ctx).ToHoursOfOperationConfigDayPtrOutputWithContext(ctx)
}

func (e HoursOfOperationConfigDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HoursOfOperationConfigDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HoursOfOperationConfigDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HoursOfOperationConfigDayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayOutputWithContext(ctx context.Context) HoursOfOperationConfigDayOutput {
	return o
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o.ToHoursOfOperationConfigDayPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HoursOfOperationConfigDay) *HoursOfOperationConfigDay {
		return &v
	}).(HoursOfOperationConfigDayPtrOutput)
}

func (o HoursOfOperationConfigDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HoursOfOperationConfigDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HoursOfOperationConfigDayPtrOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return o
}

func (o HoursOfOperationConfigDayPtrOutput) Elem() HoursOfOperationConfigDayOutput {
	return o.ApplyT(func(v *HoursOfOperationConfigDay) HoursOfOperationConfigDay {
		if v != nil {
			return *v
		}
		var ret HoursOfOperationConfigDay
		return ret
	}).(HoursOfOperationConfigDayOutput)
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HoursOfOperationConfigDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HoursOfOperationConfigDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HoursOfOperationConfigDayInput is an input type that accepts HoursOfOperationConfigDayArgs and HoursOfOperationConfigDayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigDayInput` via:
//
//          HoursOfOperationConfigDayArgs{...}
type HoursOfOperationConfigDayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayOutput() HoursOfOperationConfigDayOutput
	ToHoursOfOperationConfigDayOutputWithContext(context.Context) HoursOfOperationConfigDayOutput
}

var hoursOfOperationConfigDayPtrType = reflect.TypeOf((**HoursOfOperationConfigDay)(nil)).Elem()

type HoursOfOperationConfigDayPtrInput interface {
	pulumi.Input

	ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput
	ToHoursOfOperationConfigDayPtrOutputWithContext(context.Context) HoursOfOperationConfigDayPtrOutput
}

type hoursOfOperationConfigDayPtr string

func HoursOfOperationConfigDayPtr(v string) HoursOfOperationConfigDayPtrInput {
	return (*hoursOfOperationConfigDayPtr)(&v)
}

func (*hoursOfOperationConfigDayPtr) ElementType() reflect.Type {
	return hoursOfOperationConfigDayPtrType
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutput() HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutput(in).(HoursOfOperationConfigDayPtrOutput)
}

func (in *hoursOfOperationConfigDayPtr) ToHoursOfOperationConfigDayPtrOutputWithContext(ctx context.Context) HoursOfOperationConfigDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HoursOfOperationConfigDayPtrOutput)
}

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
type QuickConnectType string

const (
	QuickConnectTypePhoneNumber = QuickConnectType("PHONE_NUMBER")
	QuickConnectTypeQueue       = QuickConnectType("QUEUE")
	QuickConnectTypeUser        = QuickConnectType("USER")
)

func (QuickConnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (e QuickConnectType) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return pulumi.ToOutput(e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return e.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return QuickConnectType(e).ToQuickConnectTypeOutputWithContext(ctx).ToQuickConnectTypePtrOutputWithContext(ctx)
}

func (e QuickConnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QuickConnectTypeOutput struct{ *pulumi.OutputState }

func (QuickConnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectType) *QuickConnectType {
		return &v
	}).(QuickConnectTypePtrOutput)
}

func (o QuickConnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QuickConnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QuickConnectTypePtrOutput struct{ *pulumi.OutputState }

func (QuickConnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) Elem() QuickConnectTypeOutput {
	return o.ApplyT(func(v *QuickConnectType) QuickConnectType {
		if v != nil {
			return *v
		}
		var ret QuickConnectType
		return ret
	}).(QuickConnectTypeOutput)
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QuickConnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QuickConnectTypeInput is an input type that accepts QuickConnectTypeArgs and QuickConnectTypeOutput values.
// You can construct a concrete instance of `QuickConnectTypeInput` via:
//
//          QuickConnectTypeArgs{...}
type QuickConnectTypeInput interface {
	pulumi.Input

	ToQuickConnectTypeOutput() QuickConnectTypeOutput
	ToQuickConnectTypeOutputWithContext(context.Context) QuickConnectTypeOutput
}

var quickConnectTypePtrType = reflect.TypeOf((**QuickConnectType)(nil)).Elem()

type QuickConnectTypePtrInput interface {
	pulumi.Input

	ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput
	ToQuickConnectTypePtrOutputWithContext(context.Context) QuickConnectTypePtrOutput
}

type quickConnectTypePtr string

func QuickConnectTypePtr(v string) QuickConnectTypePtrInput {
	return (*quickConnectTypePtr)(&v)
}

func (*quickConnectTypePtr) ElementType() reflect.Type {
	return quickConnectTypePtrType
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return pulumi.ToOutput(in).(QuickConnectTypePtrOutput)
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QuickConnectTypePtrOutput)
}

// The phone type.
type UserPhoneType string

const (
	UserPhoneTypeSoftPhone = UserPhoneType("SOFT_PHONE")
	UserPhoneTypeDeskPhone = UserPhoneType("DESK_PHONE")
)

func (UserPhoneType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (e UserPhoneType) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return pulumi.ToOutput(e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserPhoneTypeOutput)
}

func (e UserPhoneType) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return e.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return UserPhoneType(e).ToUserPhoneTypeOutputWithContext(ctx).ToUserPhoneTypePtrOutputWithContext(ctx)
}

func (e UserPhoneType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserPhoneType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserPhoneType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserPhoneTypeOutput struct{ *pulumi.OutputState }

func (UserPhoneTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutput() UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypeOutputWithContext(ctx context.Context) UserPhoneTypeOutput {
	return o
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o.ToUserPhoneTypePtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPhoneType) *UserPhoneType {
		return &v
	}).(UserPhoneTypePtrOutput)
}

func (o UserPhoneTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserPhoneTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserPhoneType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserPhoneTypePtrOutput struct{ *pulumi.OutputState }

func (UserPhoneTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneType)(nil)).Elem()
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return o
}

func (o UserPhoneTypePtrOutput) Elem() UserPhoneTypeOutput {
	return o.ApplyT(func(v *UserPhoneType) UserPhoneType {
		if v != nil {
			return *v
		}
		var ret UserPhoneType
		return ret
	}).(UserPhoneTypeOutput)
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserPhoneTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserPhoneType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserPhoneTypeInput is an input type that accepts UserPhoneTypeArgs and UserPhoneTypeOutput values.
// You can construct a concrete instance of `UserPhoneTypeInput` via:
//
//          UserPhoneTypeArgs{...}
type UserPhoneTypeInput interface {
	pulumi.Input

	ToUserPhoneTypeOutput() UserPhoneTypeOutput
	ToUserPhoneTypeOutputWithContext(context.Context) UserPhoneTypeOutput
}

var userPhoneTypePtrType = reflect.TypeOf((**UserPhoneType)(nil)).Elem()

type UserPhoneTypePtrInput interface {
	pulumi.Input

	ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput
	ToUserPhoneTypePtrOutputWithContext(context.Context) UserPhoneTypePtrOutput
}

type userPhoneTypePtr string

func UserPhoneTypePtr(v string) UserPhoneTypePtrInput {
	return (*userPhoneTypePtr)(&v)
}

func (*userPhoneTypePtr) ElementType() reflect.Type {
	return userPhoneTypePtrType
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutput() UserPhoneTypePtrOutput {
	return pulumi.ToOutput(in).(UserPhoneTypePtrOutput)
}

func (in *userPhoneTypePtr) ToUserPhoneTypePtrOutputWithContext(ctx context.Context) UserPhoneTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserPhoneTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigDayPtrInput)(nil)).Elem(), HoursOfOperationConfigDay("SUNDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypeInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTypePtrInput)(nil)).Elem(), QuickConnectType("PHONE_NUMBER"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypeInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneTypePtrInput)(nil)).Elem(), UserPhoneType("SOFT_PHONE"))
	pulumi.RegisterOutputType(HoursOfOperationConfigDayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigDayPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectTypeOutput{})
	pulumi.RegisterOutputType(QuickConnectTypePtrOutput{})
	pulumi.RegisterOutputType(UserPhoneTypeOutput{})
	pulumi.RegisterOutputType(UserPhoneTypePtrOutput{})
}
