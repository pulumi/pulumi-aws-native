// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
type QuickConnectType string

const (
	QuickConnectTypePhoneNumber = QuickConnectType("PHONE_NUMBER")
	QuickConnectTypeQueue       = QuickConnectType("QUEUE")
	QuickConnectTypeUser        = QuickConnectType("USER")
)

func (QuickConnectType) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (e QuickConnectType) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return pulumi.ToOutput(e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(QuickConnectTypeOutput)
}

func (e QuickConnectType) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return e.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return QuickConnectType(e).ToQuickConnectTypeOutputWithContext(ctx).ToQuickConnectTypePtrOutputWithContext(ctx)
}

func (e QuickConnectType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QuickConnectType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QuickConnectType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type QuickConnectTypeOutput struct{ *pulumi.OutputState }

func (QuickConnectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutput() QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypeOutputWithContext(ctx context.Context) QuickConnectTypeOutput {
	return o
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o.ToQuickConnectTypePtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectType) *QuickConnectType {
		return &v
	}).(QuickConnectTypePtrOutput)
}

func (o QuickConnectTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o QuickConnectTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e QuickConnectType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type QuickConnectTypePtrOutput struct{ *pulumi.OutputState }

func (QuickConnectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectType)(nil)).Elem()
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return o
}

func (o QuickConnectTypePtrOutput) Elem() QuickConnectTypeOutput {
	return o.ApplyT(func(v *QuickConnectType) QuickConnectType {
		if v != nil {
			return *v
		}
		var ret QuickConnectType
		return ret
	}).(QuickConnectTypeOutput)
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o QuickConnectTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *QuickConnectType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// QuickConnectTypeInput is an input type that accepts QuickConnectTypeArgs and QuickConnectTypeOutput values.
// You can construct a concrete instance of `QuickConnectTypeInput` via:
//
//          QuickConnectTypeArgs{...}
type QuickConnectTypeInput interface {
	pulumi.Input

	ToQuickConnectTypeOutput() QuickConnectTypeOutput
	ToQuickConnectTypeOutputWithContext(context.Context) QuickConnectTypeOutput
}

var quickConnectTypePtrType = reflect.TypeOf((**QuickConnectType)(nil)).Elem()

type QuickConnectTypePtrInput interface {
	pulumi.Input

	ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput
	ToQuickConnectTypePtrOutputWithContext(context.Context) QuickConnectTypePtrOutput
}

type quickConnectTypePtr string

func QuickConnectTypePtr(v string) QuickConnectTypePtrInput {
	return (*quickConnectTypePtr)(&v)
}

func (*quickConnectTypePtr) ElementType() reflect.Type {
	return quickConnectTypePtrType
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutput() QuickConnectTypePtrOutput {
	return pulumi.ToOutput(in).(QuickConnectTypePtrOutput)
}

func (in *quickConnectTypePtr) ToQuickConnectTypePtrOutputWithContext(ctx context.Context) QuickConnectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(QuickConnectTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(QuickConnectTypeOutput{})
	pulumi.RegisterOutputType(QuickConnectTypePtrOutput{})
}
