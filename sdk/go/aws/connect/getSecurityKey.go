// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Connect::SecurityKey
func LookupSecurityKey(ctx *pulumi.Context, args *LookupSecurityKeyArgs, opts ...pulumi.InvokeOption) (*LookupSecurityKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityKeyResult
	err := ctx.Invoke("aws-native:connect:getSecurityKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityKeyArgs struct {
	AssociationId string `pulumi:"associationId"`
	InstanceId    string `pulumi:"instanceId"`
}

type LookupSecurityKeyResult struct {
	AssociationId *string `pulumi:"associationId"`
}

func LookupSecurityKeyOutput(ctx *pulumi.Context, args LookupSecurityKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecurityKeyResult, error) {
			args := v.(LookupSecurityKeyArgs)
			r, err := LookupSecurityKey(ctx, &args, opts...)
			var s LookupSecurityKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecurityKeyResultOutput)
}

type LookupSecurityKeyOutputArgs struct {
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	InstanceId    pulumi.StringInput `pulumi:"instanceId"`
}

func (LookupSecurityKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityKeyArgs)(nil)).Elem()
}

type LookupSecurityKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityKeyResult)(nil)).Elem()
}

func (o LookupSecurityKeyResultOutput) ToLookupSecurityKeyResultOutput() LookupSecurityKeyResultOutput {
	return o
}

func (o LookupSecurityKeyResultOutput) ToLookupSecurityKeyResultOutputWithContext(ctx context.Context) LookupSecurityKeyResultOutput {
	return o
}

func (o LookupSecurityKeyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSecurityKeyResult] {
	return pulumix.Output[LookupSecurityKeyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSecurityKeyResultOutput) AssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityKeyResult) *string { return v.AssociationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityKeyResultOutput{})
}
