// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::UserHierarchyStructure
type UserHierarchyStructure struct {
	pulumi.CustomResourceState

	// The identifier of the Amazon Connect instance.
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// Information about the hierarchy structure.
	UserHierarchyStructure UserHierarchyStructurePropertiesPtrOutput `pulumi:"userHierarchyStructure"`
	// The identifier of the User Hierarchy Structure.
	UserHierarchyStructureArn pulumi.StringOutput `pulumi:"userHierarchyStructureArn"`
}

// NewUserHierarchyStructure registers a new resource with the given unique name, arguments, and options.
func NewUserHierarchyStructure(ctx *pulumi.Context,
	name string, args *UserHierarchyStructureArgs, opts ...pulumi.ResourceOption) (*UserHierarchyStructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"instanceArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserHierarchyStructure
	err := ctx.RegisterResource("aws-native:connect:UserHierarchyStructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserHierarchyStructure gets an existing UserHierarchyStructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserHierarchyStructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserHierarchyStructureState, opts ...pulumi.ResourceOption) (*UserHierarchyStructure, error) {
	var resource UserHierarchyStructure
	err := ctx.ReadResource("aws-native:connect:UserHierarchyStructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserHierarchyStructure resources.
type userHierarchyStructureState struct {
}

type UserHierarchyStructureState struct {
}

func (UserHierarchyStructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyStructureState)(nil)).Elem()
}

type userHierarchyStructureArgs struct {
	// The identifier of the Amazon Connect instance.
	InstanceArn string `pulumi:"instanceArn"`
	// Information about the hierarchy structure.
	UserHierarchyStructure *UserHierarchyStructureProperties `pulumi:"userHierarchyStructure"`
}

// The set of arguments for constructing a UserHierarchyStructure resource.
type UserHierarchyStructureArgs struct {
	// The identifier of the Amazon Connect instance.
	InstanceArn pulumi.StringInput
	// Information about the hierarchy structure.
	UserHierarchyStructure UserHierarchyStructurePropertiesPtrInput
}

func (UserHierarchyStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyStructureArgs)(nil)).Elem()
}

type UserHierarchyStructureInput interface {
	pulumi.Input

	ToUserHierarchyStructureOutput() UserHierarchyStructureOutput
	ToUserHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureOutput
}

func (*UserHierarchyStructure) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructure)(nil)).Elem()
}

func (i *UserHierarchyStructure) ToUserHierarchyStructureOutput() UserHierarchyStructureOutput {
	return i.ToUserHierarchyStructureOutputWithContext(context.Background())
}

func (i *UserHierarchyStructure) ToUserHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureOutput)
}

type UserHierarchyStructureOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureOutput) ToUserHierarchyStructureOutput() UserHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureOutput) ToUserHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureOutput {
	return o
}

// The identifier of the Amazon Connect instance.
func (o UserHierarchyStructureOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserHierarchyStructure) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

// Information about the hierarchy structure.
func (o UserHierarchyStructureOutput) UserHierarchyStructure() UserHierarchyStructurePropertiesPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructure) UserHierarchyStructurePropertiesPtrOutput {
		return v.UserHierarchyStructure
	}).(UserHierarchyStructurePropertiesPtrOutput)
}

// The identifier of the User Hierarchy Structure.
func (o UserHierarchyStructureOutput) UserHierarchyStructureArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserHierarchyStructure) pulumi.StringOutput { return v.UserHierarchyStructureArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureInput)(nil)).Elem(), &UserHierarchyStructure{})
	pulumi.RegisterOutputType(UserHierarchyStructureOutput{})
}
