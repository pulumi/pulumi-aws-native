// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::EmailAddress
func LookupEmailAddress(ctx *pulumi.Context, args *LookupEmailAddressArgs, opts ...pulumi.InvokeOption) (*LookupEmailAddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmailAddressResult
	err := ctx.Invoke("aws-native:connect:getEmailAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEmailAddressArgs struct {
	// The identifier of the email address.
	EmailAddressArn string `pulumi:"emailAddressArn"`
}

type LookupEmailAddressResult struct {
	// A description for the email address.
	Description *string `pulumi:"description"`
	// The display name for the email address.
	DisplayName *string `pulumi:"displayName"`
	// The identifier of the email address.
	EmailAddressArn *string `pulumi:"emailAddressArn"`
	// The identifier of the Amazon Connect instance.
	InstanceArn *string `pulumi:"instanceArn"`
	// One or more tags.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupEmailAddressOutput(ctx *pulumi.Context, args LookupEmailAddressOutputArgs, opts ...pulumi.InvokeOption) LookupEmailAddressResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEmailAddressResultOutput, error) {
			args := v.(LookupEmailAddressArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:connect:getEmailAddress", args, LookupEmailAddressResultOutput{}, options).(LookupEmailAddressResultOutput), nil
		}).(LookupEmailAddressResultOutput)
}

type LookupEmailAddressOutputArgs struct {
	// The identifier of the email address.
	EmailAddressArn pulumi.StringInput `pulumi:"emailAddressArn"`
}

func (LookupEmailAddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailAddressArgs)(nil)).Elem()
}

type LookupEmailAddressResultOutput struct{ *pulumi.OutputState }

func (LookupEmailAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailAddressResult)(nil)).Elem()
}

func (o LookupEmailAddressResultOutput) ToLookupEmailAddressResultOutput() LookupEmailAddressResultOutput {
	return o
}

func (o LookupEmailAddressResultOutput) ToLookupEmailAddressResultOutputWithContext(ctx context.Context) LookupEmailAddressResultOutput {
	return o
}

// A description for the email address.
func (o LookupEmailAddressResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEmailAddressResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the email address.
func (o LookupEmailAddressResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEmailAddressResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the email address.
func (o LookupEmailAddressResultOutput) EmailAddressArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEmailAddressResult) *string { return v.EmailAddressArn }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Connect instance.
func (o LookupEmailAddressResultOutput) InstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEmailAddressResult) *string { return v.InstanceArn }).(pulumi.StringPtrOutput)
}

// One or more tags.
func (o LookupEmailAddressResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupEmailAddressResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEmailAddressResultOutput{})
}
