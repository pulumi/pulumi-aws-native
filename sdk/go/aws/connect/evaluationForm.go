// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::EvaluationForm
type EvaluationForm struct {
	pulumi.CustomResourceState

	// The description of the evaluation form.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Amazon Resource Name (ARN) for the evaluation form.
	EvaluationFormArn pulumi.StringOutput `pulumi:"evaluationFormArn"`
	// The Amazon Resource Name (ARN) of the instance.
	InstanceArn pulumi.StringOutput `pulumi:"instanceArn"`
	// The list of evaluation form items.
	Items EvaluationFormBaseItemArrayOutput `pulumi:"items"`
	// The scoring strategy.
	ScoringStrategy EvaluationFormScoringStrategyPtrOutput `pulumi:"scoringStrategy"`
	// The status of the evaluation form.
	Status EvaluationFormStatusOutput `pulumi:"status"`
	// One or more tags.
	Tags EvaluationFormTagArrayOutput `pulumi:"tags"`
	// The title of the evaluation form.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewEvaluationForm registers a new resource with the given unique name, arguments, and options.
func NewEvaluationForm(ctx *pulumi.Context,
	name string, args *EvaluationFormArgs, opts ...pulumi.ResourceOption) (*EvaluationForm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EvaluationForm
	err := ctx.RegisterResource("aws-native:connect:EvaluationForm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvaluationForm gets an existing EvaluationForm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvaluationForm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EvaluationFormState, opts ...pulumi.ResourceOption) (*EvaluationForm, error) {
	var resource EvaluationForm
	err := ctx.ReadResource("aws-native:connect:EvaluationForm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EvaluationForm resources.
type evaluationFormState struct {
}

type EvaluationFormState struct {
}

func (EvaluationFormState) ElementType() reflect.Type {
	return reflect.TypeOf((*evaluationFormState)(nil)).Elem()
}

type evaluationFormArgs struct {
	// The description of the evaluation form.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) of the instance.
	InstanceArn string `pulumi:"instanceArn"`
	// The list of evaluation form items.
	Items []EvaluationFormBaseItem `pulumi:"items"`
	// The scoring strategy.
	ScoringStrategy *EvaluationFormScoringStrategy `pulumi:"scoringStrategy"`
	// The status of the evaluation form.
	Status EvaluationFormStatus `pulumi:"status"`
	// One or more tags.
	Tags []EvaluationFormTag `pulumi:"tags"`
	// The title of the evaluation form.
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a EvaluationForm resource.
type EvaluationFormArgs struct {
	// The description of the evaluation form.
	Description pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the instance.
	InstanceArn pulumi.StringInput
	// The list of evaluation form items.
	Items EvaluationFormBaseItemArrayInput
	// The scoring strategy.
	ScoringStrategy EvaluationFormScoringStrategyPtrInput
	// The status of the evaluation form.
	Status EvaluationFormStatusInput
	// One or more tags.
	Tags EvaluationFormTagArrayInput
	// The title of the evaluation form.
	Title pulumi.StringInput
}

func (EvaluationFormArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*evaluationFormArgs)(nil)).Elem()
}

type EvaluationFormInput interface {
	pulumi.Input

	ToEvaluationFormOutput() EvaluationFormOutput
	ToEvaluationFormOutputWithContext(ctx context.Context) EvaluationFormOutput
}

func (*EvaluationForm) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationForm)(nil)).Elem()
}

func (i *EvaluationForm) ToEvaluationFormOutput() EvaluationFormOutput {
	return i.ToEvaluationFormOutputWithContext(context.Background())
}

func (i *EvaluationForm) ToEvaluationFormOutputWithContext(ctx context.Context) EvaluationFormOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormOutput)
}

type EvaluationFormOutput struct{ *pulumi.OutputState }

func (EvaluationFormOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationForm)(nil)).Elem()
}

func (o EvaluationFormOutput) ToEvaluationFormOutput() EvaluationFormOutput {
	return o
}

func (o EvaluationFormOutput) ToEvaluationFormOutputWithContext(ctx context.Context) EvaluationFormOutput {
	return o
}

// The description of the evaluation form.
func (o EvaluationFormOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationForm) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the evaluation form.
func (o EvaluationFormOutput) EvaluationFormArn() pulumi.StringOutput {
	return o.ApplyT(func(v *EvaluationForm) pulumi.StringOutput { return v.EvaluationFormArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the instance.
func (o EvaluationFormOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *EvaluationForm) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

// The list of evaluation form items.
func (o EvaluationFormOutput) Items() EvaluationFormBaseItemArrayOutput {
	return o.ApplyT(func(v *EvaluationForm) EvaluationFormBaseItemArrayOutput { return v.Items }).(EvaluationFormBaseItemArrayOutput)
}

// The scoring strategy.
func (o EvaluationFormOutput) ScoringStrategy() EvaluationFormScoringStrategyPtrOutput {
	return o.ApplyT(func(v *EvaluationForm) EvaluationFormScoringStrategyPtrOutput { return v.ScoringStrategy }).(EvaluationFormScoringStrategyPtrOutput)
}

// The status of the evaluation form.
func (o EvaluationFormOutput) Status() EvaluationFormStatusOutput {
	return o.ApplyT(func(v *EvaluationForm) EvaluationFormStatusOutput { return v.Status }).(EvaluationFormStatusOutput)
}

// One or more tags.
func (o EvaluationFormOutput) Tags() EvaluationFormTagArrayOutput {
	return o.ApplyT(func(v *EvaluationForm) EvaluationFormTagArrayOutput { return v.Tags }).(EvaluationFormTagArrayOutput)
}

// The title of the evaluation form.
func (o EvaluationFormOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *EvaluationForm) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormInput)(nil)).Elem(), &EvaluationForm{})
	pulumi.RegisterOutputType(EvaluationFormOutput{})
}
