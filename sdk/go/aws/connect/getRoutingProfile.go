// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Connect::RoutingProfile
func LookupRoutingProfile(ctx *pulumi.Context, args *LookupRoutingProfileArgs, opts ...pulumi.InvokeOption) (*LookupRoutingProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoutingProfileResult
	err := ctx.Invoke("aws-native:connect:getRoutingProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRoutingProfileArgs struct {
	// The Amazon Resource Name (ARN) of the routing profile.
	RoutingProfileArn string `pulumi:"routingProfileArn"`
}

type LookupRoutingProfileResult struct {
	// The identifier of the default outbound queue for this routing profile.
	DefaultOutboundQueueArn *string `pulumi:"defaultOutboundQueueArn"`
	// The description of the routing profile.
	Description *string `pulumi:"description"`
	// The identifier of the Amazon Connect instance.
	InstanceArn *string `pulumi:"instanceArn"`
	// The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
	MediaConcurrencies []RoutingProfileMediaConcurrency `pulumi:"mediaConcurrencies"`
	// The name of the routing profile.
	Name *string `pulumi:"name"`
	// The queues to associate with this routing profile.
	QueueConfigs []RoutingProfileQueueConfig `pulumi:"queueConfigs"`
	// The Amazon Resource Name (ARN) of the routing profile.
	RoutingProfileArn *string `pulumi:"routingProfileArn"`
	// An array of key-value pairs to apply to this resource.
	Tags []RoutingProfileTag `pulumi:"tags"`
}

func LookupRoutingProfileOutput(ctx *pulumi.Context, args LookupRoutingProfileOutputArgs, opts ...pulumi.InvokeOption) LookupRoutingProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRoutingProfileResult, error) {
			args := v.(LookupRoutingProfileArgs)
			r, err := LookupRoutingProfile(ctx, &args, opts...)
			var s LookupRoutingProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRoutingProfileResultOutput)
}

type LookupRoutingProfileOutputArgs struct {
	// The Amazon Resource Name (ARN) of the routing profile.
	RoutingProfileArn pulumi.StringInput `pulumi:"routingProfileArn"`
}

func (LookupRoutingProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingProfileArgs)(nil)).Elem()
}

type LookupRoutingProfileResultOutput struct{ *pulumi.OutputState }

func (LookupRoutingProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingProfileResult)(nil)).Elem()
}

func (o LookupRoutingProfileResultOutput) ToLookupRoutingProfileResultOutput() LookupRoutingProfileResultOutput {
	return o
}

func (o LookupRoutingProfileResultOutput) ToLookupRoutingProfileResultOutputWithContext(ctx context.Context) LookupRoutingProfileResultOutput {
	return o
}

func (o LookupRoutingProfileResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRoutingProfileResult] {
	return pulumix.Output[LookupRoutingProfileResult]{
		OutputState: o.OutputState,
	}
}

// The identifier of the default outbound queue for this routing profile.
func (o LookupRoutingProfileResultOutput) DefaultOutboundQueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) *string { return v.DefaultOutboundQueueArn }).(pulumi.StringPtrOutput)
}

// The description of the routing profile.
func (o LookupRoutingProfileResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Connect instance.
func (o LookupRoutingProfileResultOutput) InstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) *string { return v.InstanceArn }).(pulumi.StringPtrOutput)
}

// The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
func (o LookupRoutingProfileResultOutput) MediaConcurrencies() RoutingProfileMediaConcurrencyArrayOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) []RoutingProfileMediaConcurrency { return v.MediaConcurrencies }).(RoutingProfileMediaConcurrencyArrayOutput)
}

// The name of the routing profile.
func (o LookupRoutingProfileResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The queues to associate with this routing profile.
func (o LookupRoutingProfileResultOutput) QueueConfigs() RoutingProfileQueueConfigArrayOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) []RoutingProfileQueueConfig { return v.QueueConfigs }).(RoutingProfileQueueConfigArrayOutput)
}

// The Amazon Resource Name (ARN) of the routing profile.
func (o LookupRoutingProfileResultOutput) RoutingProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) *string { return v.RoutingProfileArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupRoutingProfileResultOutput) Tags() RoutingProfileTagArrayOutput {
	return o.ApplyT(func(v LookupRoutingProfileResult) []RoutingProfileTag { return v.Tags }).(RoutingProfileTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoutingProfileResultOutput{})
}
