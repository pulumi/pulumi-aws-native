// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// The constraints for the task template
type ConstraintsProperties struct {
	InvisibleFields []TaskTemplateInvisibleFieldInfo `pulumi:"invisibleFields"`
	ReadOnlyFields  []TaskTemplateReadOnlyFieldInfo  `pulumi:"readOnlyFields"`
	RequiredFields  []TaskTemplateRequiredFieldInfo  `pulumi:"requiredFields"`
}

// ConstraintsPropertiesInput is an input type that accepts ConstraintsPropertiesArgs and ConstraintsPropertiesOutput values.
// You can construct a concrete instance of `ConstraintsPropertiesInput` via:
//
//	ConstraintsPropertiesArgs{...}
type ConstraintsPropertiesInput interface {
	pulumi.Input

	ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput
	ToConstraintsPropertiesOutputWithContext(context.Context) ConstraintsPropertiesOutput
}

// The constraints for the task template
type ConstraintsPropertiesArgs struct {
	InvisibleFields TaskTemplateInvisibleFieldInfoArrayInput `pulumi:"invisibleFields"`
	ReadOnlyFields  TaskTemplateReadOnlyFieldInfoArrayInput  `pulumi:"readOnlyFields"`
	RequiredFields  TaskTemplateRequiredFieldInfoArrayInput  `pulumi:"requiredFields"`
}

func (ConstraintsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConstraintsProperties)(nil)).Elem()
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput {
	return i.ToConstraintsPropertiesOutputWithContext(context.Background())
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesOutputWithContext(ctx context.Context) ConstraintsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesOutput)
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return i.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesOutput).ToConstraintsPropertiesPtrOutputWithContext(ctx)
}

// ConstraintsPropertiesPtrInput is an input type that accepts ConstraintsPropertiesArgs, ConstraintsPropertiesPtr and ConstraintsPropertiesPtrOutput values.
// You can construct a concrete instance of `ConstraintsPropertiesPtrInput` via:
//
//	        ConstraintsPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConstraintsPropertiesPtrInput interface {
	pulumi.Input

	ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput
	ToConstraintsPropertiesPtrOutputWithContext(context.Context) ConstraintsPropertiesPtrOutput
}

type constraintsPropertiesPtrType ConstraintsPropertiesArgs

func ConstraintsPropertiesPtr(v *ConstraintsPropertiesArgs) ConstraintsPropertiesPtrInput {
	return (*constraintsPropertiesPtrType)(v)
}

func (*constraintsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConstraintsProperties)(nil)).Elem()
}

func (i *constraintsPropertiesPtrType) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return i.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (i *constraintsPropertiesPtrType) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesPtrOutput)
}

// The constraints for the task template
type ConstraintsPropertiesOutput struct{ *pulumi.OutputState }

func (ConstraintsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConstraintsProperties)(nil)).Elem()
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput {
	return o
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesOutputWithContext(ctx context.Context) ConstraintsPropertiesOutput {
	return o
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return o.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConstraintsProperties) *ConstraintsProperties {
		return &v
	}).(ConstraintsPropertiesPtrOutput)
}

func (o ConstraintsPropertiesOutput) InvisibleFields() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateInvisibleFieldInfo { return v.InvisibleFields }).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

func (o ConstraintsPropertiesOutput) ReadOnlyFields() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateReadOnlyFieldInfo { return v.ReadOnlyFields }).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

func (o ConstraintsPropertiesOutput) RequiredFields() TaskTemplateRequiredFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateRequiredFieldInfo { return v.RequiredFields }).(TaskTemplateRequiredFieldInfoArrayOutput)
}

type ConstraintsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConstraintsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConstraintsProperties)(nil)).Elem()
}

func (o ConstraintsPropertiesPtrOutput) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return o
}

func (o ConstraintsPropertiesPtrOutput) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return o
}

func (o ConstraintsPropertiesPtrOutput) Elem() ConstraintsPropertiesOutput {
	return o.ApplyT(func(v *ConstraintsProperties) ConstraintsProperties {
		if v != nil {
			return *v
		}
		var ret ConstraintsProperties
		return ret
	}).(ConstraintsPropertiesOutput)
}

func (o ConstraintsPropertiesPtrOutput) InvisibleFields() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateInvisibleFieldInfo {
		if v == nil {
			return nil
		}
		return v.InvisibleFields
	}).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

func (o ConstraintsPropertiesPtrOutput) ReadOnlyFields() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateReadOnlyFieldInfo {
		if v == nil {
			return nil
		}
		return v.ReadOnlyFields
	}).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

func (o ConstraintsPropertiesPtrOutput) RequiredFields() TaskTemplateRequiredFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateRequiredFieldInfo {
		if v == nil {
			return nil
		}
		return v.RequiredFields
	}).(TaskTemplateRequiredFieldInfoArrayOutput)
}

// A key-value pair to associate with a resource.
type ContactFlowModuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ContactFlowModuleTagInput is an input type that accepts ContactFlowModuleTagArgs and ContactFlowModuleTagOutput values.
// You can construct a concrete instance of `ContactFlowModuleTagInput` via:
//
//	ContactFlowModuleTagArgs{...}
type ContactFlowModuleTagInput interface {
	pulumi.Input

	ToContactFlowModuleTagOutput() ContactFlowModuleTagOutput
	ToContactFlowModuleTagOutputWithContext(context.Context) ContactFlowModuleTagOutput
}

// A key-value pair to associate with a resource.
type ContactFlowModuleTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContactFlowModuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModuleTag)(nil)).Elem()
}

func (i ContactFlowModuleTagArgs) ToContactFlowModuleTagOutput() ContactFlowModuleTagOutput {
	return i.ToContactFlowModuleTagOutputWithContext(context.Background())
}

func (i ContactFlowModuleTagArgs) ToContactFlowModuleTagOutputWithContext(ctx context.Context) ContactFlowModuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactFlowModuleTagOutput)
}

// ContactFlowModuleTagArrayInput is an input type that accepts ContactFlowModuleTagArray and ContactFlowModuleTagArrayOutput values.
// You can construct a concrete instance of `ContactFlowModuleTagArrayInput` via:
//
//	ContactFlowModuleTagArray{ ContactFlowModuleTagArgs{...} }
type ContactFlowModuleTagArrayInput interface {
	pulumi.Input

	ToContactFlowModuleTagArrayOutput() ContactFlowModuleTagArrayOutput
	ToContactFlowModuleTagArrayOutputWithContext(context.Context) ContactFlowModuleTagArrayOutput
}

type ContactFlowModuleTagArray []ContactFlowModuleTagInput

func (ContactFlowModuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactFlowModuleTag)(nil)).Elem()
}

func (i ContactFlowModuleTagArray) ToContactFlowModuleTagArrayOutput() ContactFlowModuleTagArrayOutput {
	return i.ToContactFlowModuleTagArrayOutputWithContext(context.Background())
}

func (i ContactFlowModuleTagArray) ToContactFlowModuleTagArrayOutputWithContext(ctx context.Context) ContactFlowModuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactFlowModuleTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ContactFlowModuleTagOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowModuleTag)(nil)).Elem()
}

func (o ContactFlowModuleTagOutput) ToContactFlowModuleTagOutput() ContactFlowModuleTagOutput {
	return o
}

func (o ContactFlowModuleTagOutput) ToContactFlowModuleTagOutputWithContext(ctx context.Context) ContactFlowModuleTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ContactFlowModuleTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContactFlowModuleTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ContactFlowModuleTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContactFlowModuleTag) string { return v.Value }).(pulumi.StringOutput)
}

type ContactFlowModuleTagArrayOutput struct{ *pulumi.OutputState }

func (ContactFlowModuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactFlowModuleTag)(nil)).Elem()
}

func (o ContactFlowModuleTagArrayOutput) ToContactFlowModuleTagArrayOutput() ContactFlowModuleTagArrayOutput {
	return o
}

func (o ContactFlowModuleTagArrayOutput) ToContactFlowModuleTagArrayOutputWithContext(ctx context.Context) ContactFlowModuleTagArrayOutput {
	return o
}

func (o ContactFlowModuleTagArrayOutput) Index(i pulumi.IntInput) ContactFlowModuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactFlowModuleTag {
		return vs[0].([]ContactFlowModuleTag)[vs[1].(int)]
	}).(ContactFlowModuleTagOutput)
}

// A key-value pair to associate with a resource.
type ContactFlowTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ContactFlowTagInput is an input type that accepts ContactFlowTagArgs and ContactFlowTagOutput values.
// You can construct a concrete instance of `ContactFlowTagInput` via:
//
//	ContactFlowTagArgs{...}
type ContactFlowTagInput interface {
	pulumi.Input

	ToContactFlowTagOutput() ContactFlowTagOutput
	ToContactFlowTagOutputWithContext(context.Context) ContactFlowTagOutput
}

// A key-value pair to associate with a resource.
type ContactFlowTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContactFlowTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowTag)(nil)).Elem()
}

func (i ContactFlowTagArgs) ToContactFlowTagOutput() ContactFlowTagOutput {
	return i.ToContactFlowTagOutputWithContext(context.Background())
}

func (i ContactFlowTagArgs) ToContactFlowTagOutputWithContext(ctx context.Context) ContactFlowTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactFlowTagOutput)
}

// ContactFlowTagArrayInput is an input type that accepts ContactFlowTagArray and ContactFlowTagArrayOutput values.
// You can construct a concrete instance of `ContactFlowTagArrayInput` via:
//
//	ContactFlowTagArray{ ContactFlowTagArgs{...} }
type ContactFlowTagArrayInput interface {
	pulumi.Input

	ToContactFlowTagArrayOutput() ContactFlowTagArrayOutput
	ToContactFlowTagArrayOutputWithContext(context.Context) ContactFlowTagArrayOutput
}

type ContactFlowTagArray []ContactFlowTagInput

func (ContactFlowTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactFlowTag)(nil)).Elem()
}

func (i ContactFlowTagArray) ToContactFlowTagArrayOutput() ContactFlowTagArrayOutput {
	return i.ToContactFlowTagArrayOutputWithContext(context.Background())
}

func (i ContactFlowTagArray) ToContactFlowTagArrayOutputWithContext(ctx context.Context) ContactFlowTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactFlowTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ContactFlowTagOutput struct{ *pulumi.OutputState }

func (ContactFlowTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactFlowTag)(nil)).Elem()
}

func (o ContactFlowTagOutput) ToContactFlowTagOutput() ContactFlowTagOutput {
	return o
}

func (o ContactFlowTagOutput) ToContactFlowTagOutputWithContext(ctx context.Context) ContactFlowTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ContactFlowTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContactFlowTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ContactFlowTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContactFlowTag) string { return v.Value }).(pulumi.StringOutput)
}

type ContactFlowTagArrayOutput struct{ *pulumi.OutputState }

func (ContactFlowTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactFlowTag)(nil)).Elem()
}

func (o ContactFlowTagArrayOutput) ToContactFlowTagArrayOutput() ContactFlowTagArrayOutput {
	return o
}

func (o ContactFlowTagArrayOutput) ToContactFlowTagArrayOutputWithContext(ctx context.Context) ContactFlowTagArrayOutput {
	return o
}

func (o ContactFlowTagArrayOutput) Index(i pulumi.IntInput) ContactFlowTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactFlowTag {
		return vs[0].([]ContactFlowTag)[vs[1].(int)]
	}).(ContactFlowTagOutput)
}

// The evaluation form base item.
type EvaluationFormBaseItem struct {
	// The evaluation form section item
	Section EvaluationFormSection `pulumi:"section"`
}

// EvaluationFormBaseItemInput is an input type that accepts EvaluationFormBaseItemArgs and EvaluationFormBaseItemOutput values.
// You can construct a concrete instance of `EvaluationFormBaseItemInput` via:
//
//	EvaluationFormBaseItemArgs{...}
type EvaluationFormBaseItemInput interface {
	pulumi.Input

	ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput
	ToEvaluationFormBaseItemOutputWithContext(context.Context) EvaluationFormBaseItemOutput
}

// The evaluation form base item.
type EvaluationFormBaseItemArgs struct {
	// The evaluation form section item
	Section EvaluationFormSectionInput `pulumi:"section"`
}

func (EvaluationFormBaseItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormBaseItem)(nil)).Elem()
}

func (i EvaluationFormBaseItemArgs) ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput {
	return i.ToEvaluationFormBaseItemOutputWithContext(context.Background())
}

func (i EvaluationFormBaseItemArgs) ToEvaluationFormBaseItemOutputWithContext(ctx context.Context) EvaluationFormBaseItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormBaseItemOutput)
}

// EvaluationFormBaseItemArrayInput is an input type that accepts EvaluationFormBaseItemArray and EvaluationFormBaseItemArrayOutput values.
// You can construct a concrete instance of `EvaluationFormBaseItemArrayInput` via:
//
//	EvaluationFormBaseItemArray{ EvaluationFormBaseItemArgs{...} }
type EvaluationFormBaseItemArrayInput interface {
	pulumi.Input

	ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput
	ToEvaluationFormBaseItemArrayOutputWithContext(context.Context) EvaluationFormBaseItemArrayOutput
}

type EvaluationFormBaseItemArray []EvaluationFormBaseItemInput

func (EvaluationFormBaseItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormBaseItem)(nil)).Elem()
}

func (i EvaluationFormBaseItemArray) ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput {
	return i.ToEvaluationFormBaseItemArrayOutputWithContext(context.Background())
}

func (i EvaluationFormBaseItemArray) ToEvaluationFormBaseItemArrayOutputWithContext(ctx context.Context) EvaluationFormBaseItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormBaseItemArrayOutput)
}

// The evaluation form base item.
type EvaluationFormBaseItemOutput struct{ *pulumi.OutputState }

func (EvaluationFormBaseItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormBaseItem)(nil)).Elem()
}

func (o EvaluationFormBaseItemOutput) ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput {
	return o
}

func (o EvaluationFormBaseItemOutput) ToEvaluationFormBaseItemOutputWithContext(ctx context.Context) EvaluationFormBaseItemOutput {
	return o
}

// The evaluation form section item
func (o EvaluationFormBaseItemOutput) Section() EvaluationFormSectionOutput {
	return o.ApplyT(func(v EvaluationFormBaseItem) EvaluationFormSection { return v.Section }).(EvaluationFormSectionOutput)
}

type EvaluationFormBaseItemArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormBaseItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormBaseItem)(nil)).Elem()
}

func (o EvaluationFormBaseItemArrayOutput) ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput {
	return o
}

func (o EvaluationFormBaseItemArrayOutput) ToEvaluationFormBaseItemArrayOutputWithContext(ctx context.Context) EvaluationFormBaseItemArrayOutput {
	return o
}

func (o EvaluationFormBaseItemArrayOutput) Index(i pulumi.IntInput) EvaluationFormBaseItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormBaseItem {
		return vs[0].([]EvaluationFormBaseItem)[vs[1].(int)]
	}).(EvaluationFormBaseItemOutput)
}

// The evaluation form item.
type EvaluationFormItem struct {
	// The evaluation form question item
	Question *EvaluationFormQuestion `pulumi:"question"`
	// The evaluation form section item
	Section *EvaluationFormSection `pulumi:"section"`
}

// EvaluationFormItemInput is an input type that accepts EvaluationFormItemArgs and EvaluationFormItemOutput values.
// You can construct a concrete instance of `EvaluationFormItemInput` via:
//
//	EvaluationFormItemArgs{...}
type EvaluationFormItemInput interface {
	pulumi.Input

	ToEvaluationFormItemOutput() EvaluationFormItemOutput
	ToEvaluationFormItemOutputWithContext(context.Context) EvaluationFormItemOutput
}

// The evaluation form item.
type EvaluationFormItemArgs struct {
	// The evaluation form question item
	Question EvaluationFormQuestionPtrInput `pulumi:"question"`
	// The evaluation form section item
	Section EvaluationFormSectionPtrInput `pulumi:"section"`
}

func (EvaluationFormItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormItem)(nil)).Elem()
}

func (i EvaluationFormItemArgs) ToEvaluationFormItemOutput() EvaluationFormItemOutput {
	return i.ToEvaluationFormItemOutputWithContext(context.Background())
}

func (i EvaluationFormItemArgs) ToEvaluationFormItemOutputWithContext(ctx context.Context) EvaluationFormItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormItemOutput)
}

// EvaluationFormItemArrayInput is an input type that accepts EvaluationFormItemArray and EvaluationFormItemArrayOutput values.
// You can construct a concrete instance of `EvaluationFormItemArrayInput` via:
//
//	EvaluationFormItemArray{ EvaluationFormItemArgs{...} }
type EvaluationFormItemArrayInput interface {
	pulumi.Input

	ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput
	ToEvaluationFormItemArrayOutputWithContext(context.Context) EvaluationFormItemArrayOutput
}

type EvaluationFormItemArray []EvaluationFormItemInput

func (EvaluationFormItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormItem)(nil)).Elem()
}

func (i EvaluationFormItemArray) ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput {
	return i.ToEvaluationFormItemArrayOutputWithContext(context.Background())
}

func (i EvaluationFormItemArray) ToEvaluationFormItemArrayOutputWithContext(ctx context.Context) EvaluationFormItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormItemArrayOutput)
}

// The evaluation form item.
type EvaluationFormItemOutput struct{ *pulumi.OutputState }

func (EvaluationFormItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormItem)(nil)).Elem()
}

func (o EvaluationFormItemOutput) ToEvaluationFormItemOutput() EvaluationFormItemOutput {
	return o
}

func (o EvaluationFormItemOutput) ToEvaluationFormItemOutputWithContext(ctx context.Context) EvaluationFormItemOutput {
	return o
}

// The evaluation form question item
func (o EvaluationFormItemOutput) Question() EvaluationFormQuestionPtrOutput {
	return o.ApplyT(func(v EvaluationFormItem) *EvaluationFormQuestion { return v.Question }).(EvaluationFormQuestionPtrOutput)
}

// The evaluation form section item
func (o EvaluationFormItemOutput) Section() EvaluationFormSectionPtrOutput {
	return o.ApplyT(func(v EvaluationFormItem) *EvaluationFormSection { return v.Section }).(EvaluationFormSectionPtrOutput)
}

type EvaluationFormItemArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormItem)(nil)).Elem()
}

func (o EvaluationFormItemArrayOutput) ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput {
	return o
}

func (o EvaluationFormItemArrayOutput) ToEvaluationFormItemArrayOutputWithContext(ctx context.Context) EvaluationFormItemArrayOutput {
	return o
}

func (o EvaluationFormItemArrayOutput) Index(i pulumi.IntInput) EvaluationFormItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormItem {
		return vs[0].([]EvaluationFormItem)[vs[1].(int)]
	}).(EvaluationFormItemOutput)
}

// The automation properties for the numeric question.
type EvaluationFormNumericQuestionAutomation struct {
	// The automation property name of the question.
	PropertyValue EvaluationFormNumericQuestionPropertyValueAutomation `pulumi:"propertyValue"`
}

// EvaluationFormNumericQuestionAutomationInput is an input type that accepts EvaluationFormNumericQuestionAutomationArgs and EvaluationFormNumericQuestionAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionAutomationInput` via:
//
//	EvaluationFormNumericQuestionAutomationArgs{...}
type EvaluationFormNumericQuestionAutomationInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput
	ToEvaluationFormNumericQuestionAutomationOutputWithContext(context.Context) EvaluationFormNumericQuestionAutomationOutput
}

// The automation properties for the numeric question.
type EvaluationFormNumericQuestionAutomationArgs struct {
	// The automation property name of the question.
	PropertyValue EvaluationFormNumericQuestionPropertyValueAutomationInput `pulumi:"propertyValue"`
}

func (EvaluationFormNumericQuestionAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput {
	return i.ToEvaluationFormNumericQuestionAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationOutput)
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationOutput).ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionAutomationPtrInput is an input type that accepts EvaluationFormNumericQuestionAutomationArgs, EvaluationFormNumericQuestionAutomationPtr and EvaluationFormNumericQuestionAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionAutomationPtrInput` via:
//
//	        EvaluationFormNumericQuestionAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput
	ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionAutomationPtrOutput
}

type evaluationFormNumericQuestionAutomationPtrType EvaluationFormNumericQuestionAutomationArgs

func EvaluationFormNumericQuestionAutomationPtr(v *EvaluationFormNumericQuestionAutomationArgs) EvaluationFormNumericQuestionAutomationPtrInput {
	return (*evaluationFormNumericQuestionAutomationPtrType)(v)
}

func (*evaluationFormNumericQuestionAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionAutomationPtrType) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionAutomationPtrType) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The automation properties for the numeric question.
type EvaluationFormNumericQuestionAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionAutomation) *EvaluationFormNumericQuestionAutomation {
		return &v
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The automation property name of the question.
func (o EvaluationFormNumericQuestionAutomationOutput) PropertyValue() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionAutomation) EvaluationFormNumericQuestionPropertyValueAutomation {
		return v.PropertyValue
	}).(EvaluationFormNumericQuestionPropertyValueAutomationOutput)
}

type EvaluationFormNumericQuestionAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) Elem() EvaluationFormNumericQuestionAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionAutomation) EvaluationFormNumericQuestionAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionAutomation
		return ret
	}).(EvaluationFormNumericQuestionAutomationOutput)
}

// The automation property name of the question.
func (o EvaluationFormNumericQuestionAutomationPtrOutput) PropertyValue() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionAutomation) *EvaluationFormNumericQuestionPropertyValueAutomation {
		if v == nil {
			return nil
		}
		return &v.PropertyValue
	}).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// The option ranges used for scoring in numeric questions.
type EvaluationFormNumericQuestionOption struct {
	// The flag to mark the option as automatic fail.
	AutomaticFail *bool `pulumi:"automaticFail"`
	// The maximum value of the option range.
	MaxValue int `pulumi:"maxValue"`
	// The minimum value of the option range.
	MinValue int `pulumi:"minValue"`
	// The score of the option range.
	Score *int `pulumi:"score"`
}

// EvaluationFormNumericQuestionOptionInput is an input type that accepts EvaluationFormNumericQuestionOptionArgs and EvaluationFormNumericQuestionOptionOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionOptionInput` via:
//
//	EvaluationFormNumericQuestionOptionArgs{...}
type EvaluationFormNumericQuestionOptionInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput
	ToEvaluationFormNumericQuestionOptionOutputWithContext(context.Context) EvaluationFormNumericQuestionOptionOutput
}

// The option ranges used for scoring in numeric questions.
type EvaluationFormNumericQuestionOptionArgs struct {
	// The flag to mark the option as automatic fail.
	AutomaticFail pulumi.BoolPtrInput `pulumi:"automaticFail"`
	// The maximum value of the option range.
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The minimum value of the option range.
	MinValue pulumi.IntInput `pulumi:"minValue"`
	// The score of the option range.
	Score pulumi.IntPtrInput `pulumi:"score"`
}

func (EvaluationFormNumericQuestionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionOptionArgs) ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput {
	return i.ToEvaluationFormNumericQuestionOptionOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionOptionArgs) ToEvaluationFormNumericQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionOptionOutput)
}

// EvaluationFormNumericQuestionOptionArrayInput is an input type that accepts EvaluationFormNumericQuestionOptionArray and EvaluationFormNumericQuestionOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionOptionArrayInput` via:
//
//	EvaluationFormNumericQuestionOptionArray{ EvaluationFormNumericQuestionOptionArgs{...} }
type EvaluationFormNumericQuestionOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput
	ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(context.Context) EvaluationFormNumericQuestionOptionArrayOutput
}

type EvaluationFormNumericQuestionOptionArray []EvaluationFormNumericQuestionOptionInput

func (EvaluationFormNumericQuestionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionOptionArray) ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput {
	return i.ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionOptionArray) ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionOptionArrayOutput)
}

// The option ranges used for scoring in numeric questions.
type EvaluationFormNumericQuestionOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionOptionOutput) ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionOutput) ToEvaluationFormNumericQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionOutput {
	return o
}

// The flag to mark the option as automatic fail.
func (o EvaluationFormNumericQuestionOptionOutput) AutomaticFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) *bool { return v.AutomaticFail }).(pulumi.BoolPtrOutput)
}

// The maximum value of the option range.
func (o EvaluationFormNumericQuestionOptionOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The minimum value of the option range.
func (o EvaluationFormNumericQuestionOptionOutput) MinValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) int { return v.MinValue }).(pulumi.IntOutput)
}

// The score of the option range.
func (o EvaluationFormNumericQuestionOptionOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) *int { return v.Score }).(pulumi.IntPtrOutput)
}

type EvaluationFormNumericQuestionOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormNumericQuestionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormNumericQuestionOption {
		return vs[0].([]EvaluationFormNumericQuestionOption)[vs[1].(int)]
	}).(EvaluationFormNumericQuestionOptionOutput)
}

// The properties of the numeric question.
type EvaluationFormNumericQuestionProperties struct {
	// The automation properties for the numeric question.
	Automation *EvaluationFormNumericQuestionAutomation `pulumi:"automation"`
	// The maximum value for answers of the question.
	MaxValue int `pulumi:"maxValue"`
	// The minimum value for answers of the question.
	MinValue int `pulumi:"minValue"`
	// The list of option ranges used for scoring.
	Options []EvaluationFormNumericQuestionOption `pulumi:"options"`
}

// EvaluationFormNumericQuestionPropertiesInput is an input type that accepts EvaluationFormNumericQuestionPropertiesArgs and EvaluationFormNumericQuestionPropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertiesInput` via:
//
//	EvaluationFormNumericQuestionPropertiesArgs{...}
type EvaluationFormNumericQuestionPropertiesInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput
	ToEvaluationFormNumericQuestionPropertiesOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertiesOutput
}

// The properties of the numeric question.
type EvaluationFormNumericQuestionPropertiesArgs struct {
	// The automation properties for the numeric question.
	Automation EvaluationFormNumericQuestionAutomationPtrInput `pulumi:"automation"`
	// The maximum value for answers of the question.
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The minimum value for answers of the question.
	MinValue pulumi.IntInput `pulumi:"minValue"`
	// The list of option ranges used for scoring.
	Options EvaluationFormNumericQuestionOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormNumericQuestionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesOutput)
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesOutput).ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionPropertiesPtrInput is an input type that accepts EvaluationFormNumericQuestionPropertiesArgs, EvaluationFormNumericQuestionPropertiesPtr and EvaluationFormNumericQuestionPropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertiesPtrInput` via:
//
//	        EvaluationFormNumericQuestionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionPropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput
	ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput
}

type evaluationFormNumericQuestionPropertiesPtrType EvaluationFormNumericQuestionPropertiesArgs

func EvaluationFormNumericQuestionPropertiesPtr(v *EvaluationFormNumericQuestionPropertiesArgs) EvaluationFormNumericQuestionPropertiesPtrInput {
	return (*evaluationFormNumericQuestionPropertiesPtrType)(v)
}

func (*evaluationFormNumericQuestionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionPropertiesPtrType) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionPropertiesPtrType) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The properties of the numeric question.
type EvaluationFormNumericQuestionPropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionProperties {
		return &v
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The automation properties for the numeric question.
func (o EvaluationFormNumericQuestionPropertiesOutput) Automation() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionAutomation {
		return v.Automation
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The maximum value for answers of the question.
func (o EvaluationFormNumericQuestionPropertiesOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The minimum value for answers of the question.
func (o EvaluationFormNumericQuestionPropertiesOutput) MinValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) int { return v.MinValue }).(pulumi.IntOutput)
}

// The list of option ranges used for scoring.
func (o EvaluationFormNumericQuestionPropertiesOutput) Options() EvaluationFormNumericQuestionOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) []EvaluationFormNumericQuestionOption {
		return v.Options
	}).(EvaluationFormNumericQuestionOptionArrayOutput)
}

type EvaluationFormNumericQuestionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Elem() EvaluationFormNumericQuestionPropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) EvaluationFormNumericQuestionProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionProperties
		return ret
	}).(EvaluationFormNumericQuestionPropertiesOutput)
}

// The automation properties for the numeric question.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Automation() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionAutomation {
		if v == nil {
			return nil
		}
		return v.Automation
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The maximum value for answers of the question.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) MaxValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaxValue
	}).(pulumi.IntPtrOutput)
}

// The minimum value for answers of the question.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) MinValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MinValue
	}).(pulumi.IntPtrOutput)
}

// The list of option ranges used for scoring.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Options() EvaluationFormNumericQuestionOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) []EvaluationFormNumericQuestionOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormNumericQuestionOptionArrayOutput)
}

// The automation property name of the question.
type EvaluationFormNumericQuestionPropertyValueAutomation struct {
	// The automation property label.
	Label EvaluationFormNumericQuestionPropertyValueAutomationLabel `pulumi:"label"`
}

// EvaluationFormNumericQuestionPropertyValueAutomationInput is an input type that accepts EvaluationFormNumericQuestionPropertyValueAutomationArgs and EvaluationFormNumericQuestionPropertyValueAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertyValueAutomationInput` via:
//
//	EvaluationFormNumericQuestionPropertyValueAutomationArgs{...}
type EvaluationFormNumericQuestionPropertyValueAutomationInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput
}

// The automation property name of the question.
type EvaluationFormNumericQuestionPropertyValueAutomationArgs struct {
	// The automation property label.
	Label EvaluationFormNumericQuestionPropertyValueAutomationLabelInput `pulumi:"label"`
}

func (EvaluationFormNumericQuestionPropertyValueAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationOutput)
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationOutput).ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionPropertyValueAutomationPtrInput is an input type that accepts EvaluationFormNumericQuestionPropertyValueAutomationArgs, EvaluationFormNumericQuestionPropertyValueAutomationPtr and EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertyValueAutomationPtrInput` via:
//
//	        EvaluationFormNumericQuestionPropertyValueAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionPropertyValueAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput
}

type evaluationFormNumericQuestionPropertyValueAutomationPtrType EvaluationFormNumericQuestionPropertyValueAutomationArgs

func EvaluationFormNumericQuestionPropertyValueAutomationPtr(v *EvaluationFormNumericQuestionPropertyValueAutomationArgs) EvaluationFormNumericQuestionPropertyValueAutomationPtrInput {
	return (*evaluationFormNumericQuestionPropertyValueAutomationPtrType)(v)
}

func (*evaluationFormNumericQuestionPropertyValueAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionPropertyValueAutomationPtrType) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionPropertyValueAutomationPtrType) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// The automation property name of the question.
type EvaluationFormNumericQuestionPropertyValueAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionPropertyValueAutomation) *EvaluationFormNumericQuestionPropertyValueAutomation {
		return &v
	}).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// The automation property label.
func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) Label() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionPropertyValueAutomation) EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		return v.Label
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput)
}

type EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) Elem() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionPropertyValueAutomation) EvaluationFormNumericQuestionPropertyValueAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionPropertyValueAutomation
		return ret
	}).(EvaluationFormNumericQuestionPropertyValueAutomationOutput)
}

// The automation property label.
func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) Label() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionPropertyValueAutomation) *EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput)
}

// The evaluation form question.
type EvaluationFormQuestion struct {
	// The instructions for the question.
	Instructions *string `pulumi:"instructions"`
	// The flag to enable not applicable answers to the question.
	NotApplicableEnabled *bool `pulumi:"notApplicableEnabled"`
	// The type of the question.
	QuestionType EvaluationFormQuestionQuestionType `pulumi:"questionType"`
	// The properties of the question
	QuestionTypeProperties *EvaluationFormQuestionTypeProperties `pulumi:"questionTypeProperties"`
	// The identifier used to reference the question.
	RefId string `pulumi:"refId"`
	// The title of the question.
	Title string `pulumi:"title"`
	// The question weight used for scoring.
	Weight *float64 `pulumi:"weight"`
}

// EvaluationFormQuestionInput is an input type that accepts EvaluationFormQuestionArgs and EvaluationFormQuestionOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionInput` via:
//
//	EvaluationFormQuestionArgs{...}
type EvaluationFormQuestionInput interface {
	pulumi.Input

	ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput
	ToEvaluationFormQuestionOutputWithContext(context.Context) EvaluationFormQuestionOutput
}

// The evaluation form question.
type EvaluationFormQuestionArgs struct {
	// The instructions for the question.
	Instructions pulumi.StringPtrInput `pulumi:"instructions"`
	// The flag to enable not applicable answers to the question.
	NotApplicableEnabled pulumi.BoolPtrInput `pulumi:"notApplicableEnabled"`
	// The type of the question.
	QuestionType EvaluationFormQuestionQuestionTypeInput `pulumi:"questionType"`
	// The properties of the question
	QuestionTypeProperties EvaluationFormQuestionTypePropertiesPtrInput `pulumi:"questionTypeProperties"`
	// The identifier used to reference the question.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The title of the question.
	Title pulumi.StringInput `pulumi:"title"`
	// The question weight used for scoring.
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (EvaluationFormQuestionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestion)(nil)).Elem()
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput {
	return i.ToEvaluationFormQuestionOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionOutputWithContext(ctx context.Context) EvaluationFormQuestionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionOutput)
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return i.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionOutput).ToEvaluationFormQuestionPtrOutputWithContext(ctx)
}

// EvaluationFormQuestionPtrInput is an input type that accepts EvaluationFormQuestionArgs, EvaluationFormQuestionPtr and EvaluationFormQuestionPtrOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionPtrInput` via:
//
//	        EvaluationFormQuestionArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormQuestionPtrInput interface {
	pulumi.Input

	ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput
	ToEvaluationFormQuestionPtrOutputWithContext(context.Context) EvaluationFormQuestionPtrOutput
}

type evaluationFormQuestionPtrType EvaluationFormQuestionArgs

func EvaluationFormQuestionPtr(v *EvaluationFormQuestionArgs) EvaluationFormQuestionPtrInput {
	return (*evaluationFormQuestionPtrType)(v)
}

func (*evaluationFormQuestionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestion)(nil)).Elem()
}

func (i *evaluationFormQuestionPtrType) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return i.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (i *evaluationFormQuestionPtrType) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionPtrOutput)
}

// The evaluation form question.
type EvaluationFormQuestionOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestion)(nil)).Elem()
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput {
	return o
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionOutputWithContext(ctx context.Context) EvaluationFormQuestionOutput {
	return o
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return o.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormQuestion) *EvaluationFormQuestion {
		return &v
	}).(EvaluationFormQuestionPtrOutput)
}

// The instructions for the question.
func (o EvaluationFormQuestionOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *string { return v.Instructions }).(pulumi.StringPtrOutput)
}

// The flag to enable not applicable answers to the question.
func (o EvaluationFormQuestionOutput) NotApplicableEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *bool { return v.NotApplicableEnabled }).(pulumi.BoolPtrOutput)
}

// The type of the question.
func (o EvaluationFormQuestionOutput) QuestionType() EvaluationFormQuestionQuestionTypeOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) EvaluationFormQuestionQuestionType { return v.QuestionType }).(EvaluationFormQuestionQuestionTypeOutput)
}

// The properties of the question
func (o EvaluationFormQuestionOutput) QuestionTypeProperties() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *EvaluationFormQuestionTypeProperties { return v.QuestionTypeProperties }).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The identifier used to reference the question.
func (o EvaluationFormQuestionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) string { return v.RefId }).(pulumi.StringOutput)
}

// The title of the question.
func (o EvaluationFormQuestionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) string { return v.Title }).(pulumi.StringOutput)
}

// The question weight used for scoring.
func (o EvaluationFormQuestionOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EvaluationFormQuestionPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestion)(nil)).Elem()
}

func (o EvaluationFormQuestionPtrOutput) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return o
}

func (o EvaluationFormQuestionPtrOutput) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return o
}

func (o EvaluationFormQuestionPtrOutput) Elem() EvaluationFormQuestionOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) EvaluationFormQuestion {
		if v != nil {
			return *v
		}
		var ret EvaluationFormQuestion
		return ret
	}).(EvaluationFormQuestionOutput)
}

// The instructions for the question.
func (o EvaluationFormQuestionPtrOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return v.Instructions
	}).(pulumi.StringPtrOutput)
}

// The flag to enable not applicable answers to the question.
func (o EvaluationFormQuestionPtrOutput) NotApplicableEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *bool {
		if v == nil {
			return nil
		}
		return v.NotApplicableEnabled
	}).(pulumi.BoolPtrOutput)
}

// The type of the question.
func (o EvaluationFormQuestionPtrOutput) QuestionType() EvaluationFormQuestionQuestionTypePtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *EvaluationFormQuestionQuestionType {
		if v == nil {
			return nil
		}
		return &v.QuestionType
	}).(EvaluationFormQuestionQuestionTypePtrOutput)
}

// The properties of the question
func (o EvaluationFormQuestionPtrOutput) QuestionTypeProperties() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *EvaluationFormQuestionTypeProperties {
		if v == nil {
			return nil
		}
		return v.QuestionTypeProperties
	}).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The identifier used to reference the question.
func (o EvaluationFormQuestionPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return &v.RefId
	}).(pulumi.StringPtrOutput)
}

// The title of the question.
func (o EvaluationFormQuestionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// The question weight used for scoring.
func (o EvaluationFormQuestionPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *float64 {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.Float64PtrOutput)
}

// The properties of the question.
type EvaluationFormQuestionTypeProperties struct {
	// The properties of the numeric question.
	Numeric *EvaluationFormNumericQuestionProperties `pulumi:"numeric"`
	// The properties of the single-select question.
	SingleSelect *EvaluationFormSingleSelectQuestionProperties `pulumi:"singleSelect"`
}

// EvaluationFormQuestionTypePropertiesInput is an input type that accepts EvaluationFormQuestionTypePropertiesArgs and EvaluationFormQuestionTypePropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionTypePropertiesInput` via:
//
//	EvaluationFormQuestionTypePropertiesArgs{...}
type EvaluationFormQuestionTypePropertiesInput interface {
	pulumi.Input

	ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput
	ToEvaluationFormQuestionTypePropertiesOutputWithContext(context.Context) EvaluationFormQuestionTypePropertiesOutput
}

// The properties of the question.
type EvaluationFormQuestionTypePropertiesArgs struct {
	// The properties of the numeric question.
	Numeric EvaluationFormNumericQuestionPropertiesPtrInput `pulumi:"numeric"`
	// The properties of the single-select question.
	SingleSelect EvaluationFormSingleSelectQuestionPropertiesPtrInput `pulumi:"singleSelect"`
}

func (EvaluationFormQuestionTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput {
	return i.ToEvaluationFormQuestionTypePropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesOutput)
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return i.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesOutput).ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormQuestionTypePropertiesPtrInput is an input type that accepts EvaluationFormQuestionTypePropertiesArgs, EvaluationFormQuestionTypePropertiesPtr and EvaluationFormQuestionTypePropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionTypePropertiesPtrInput` via:
//
//	        EvaluationFormQuestionTypePropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormQuestionTypePropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput
	ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Context) EvaluationFormQuestionTypePropertiesPtrOutput
}

type evaluationFormQuestionTypePropertiesPtrType EvaluationFormQuestionTypePropertiesArgs

func EvaluationFormQuestionTypePropertiesPtr(v *EvaluationFormQuestionTypePropertiesArgs) EvaluationFormQuestionTypePropertiesPtrInput {
	return (*evaluationFormQuestionTypePropertiesPtrType)(v)
}

func (*evaluationFormQuestionTypePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (i *evaluationFormQuestionTypePropertiesPtrType) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return i.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormQuestionTypePropertiesPtrType) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The properties of the question.
type EvaluationFormQuestionTypePropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormQuestionTypeProperties) *EvaluationFormQuestionTypeProperties {
		return &v
	}).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesOutput) Numeric() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestionTypeProperties) *EvaluationFormNumericQuestionProperties {
		return v.Numeric
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The properties of the single-select question.
func (o EvaluationFormQuestionTypePropertiesOutput) SingleSelect() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestionTypeProperties) *EvaluationFormSingleSelectQuestionProperties {
		return v.SingleSelect
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

type EvaluationFormQuestionTypePropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionTypePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) Elem() EvaluationFormQuestionTypePropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) EvaluationFormQuestionTypeProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormQuestionTypeProperties
		return ret
	}).(EvaluationFormQuestionTypePropertiesOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesPtrOutput) Numeric() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) *EvaluationFormNumericQuestionProperties {
		if v == nil {
			return nil
		}
		return v.Numeric
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The properties of the single-select question.
func (o EvaluationFormQuestionTypePropertiesPtrOutput) SingleSelect() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) *EvaluationFormSingleSelectQuestionProperties {
		if v == nil {
			return nil
		}
		return v.SingleSelect
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// The scoring strategy.
type EvaluationFormScoringStrategy struct {
	// The scoring mode.
	Mode EvaluationFormScoringStrategyMode `pulumi:"mode"`
	// The scoring status.
	Status EvaluationFormScoringStrategyStatus `pulumi:"status"`
}

// EvaluationFormScoringStrategyInput is an input type that accepts EvaluationFormScoringStrategyArgs and EvaluationFormScoringStrategyOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyInput` via:
//
//	EvaluationFormScoringStrategyArgs{...}
type EvaluationFormScoringStrategyInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput
	ToEvaluationFormScoringStrategyOutputWithContext(context.Context) EvaluationFormScoringStrategyOutput
}

// The scoring strategy.
type EvaluationFormScoringStrategyArgs struct {
	// The scoring mode.
	Mode EvaluationFormScoringStrategyModeInput `pulumi:"mode"`
	// The scoring status.
	Status EvaluationFormScoringStrategyStatusInput `pulumi:"status"`
}

func (EvaluationFormScoringStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategy)(nil)).Elem()
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput {
	return i.ToEvaluationFormScoringStrategyOutputWithContext(context.Background())
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyOutput)
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return i.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyOutput).ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx)
}

// EvaluationFormScoringStrategyPtrInput is an input type that accepts EvaluationFormScoringStrategyArgs, EvaluationFormScoringStrategyPtr and EvaluationFormScoringStrategyPtrOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyPtrInput` via:
//
//	        EvaluationFormScoringStrategyArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormScoringStrategyPtrInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput
	ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Context) EvaluationFormScoringStrategyPtrOutput
}

type evaluationFormScoringStrategyPtrType EvaluationFormScoringStrategyArgs

func EvaluationFormScoringStrategyPtr(v *EvaluationFormScoringStrategyArgs) EvaluationFormScoringStrategyPtrInput {
	return (*evaluationFormScoringStrategyPtrType)(v)
}

func (*evaluationFormScoringStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategy)(nil)).Elem()
}

func (i *evaluationFormScoringStrategyPtrType) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return i.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (i *evaluationFormScoringStrategyPtrType) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyPtrOutput)
}

// The scoring strategy.
type EvaluationFormScoringStrategyOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategy)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput {
	return o
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyOutput {
	return o
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return o.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormScoringStrategy) *EvaluationFormScoringStrategy {
		return &v
	}).(EvaluationFormScoringStrategyPtrOutput)
}

// The scoring mode.
func (o EvaluationFormScoringStrategyOutput) Mode() EvaluationFormScoringStrategyModeOutput {
	return o.ApplyT(func(v EvaluationFormScoringStrategy) EvaluationFormScoringStrategyMode { return v.Mode }).(EvaluationFormScoringStrategyModeOutput)
}

// The scoring status.
func (o EvaluationFormScoringStrategyOutput) Status() EvaluationFormScoringStrategyStatusOutput {
	return o.ApplyT(func(v EvaluationFormScoringStrategy) EvaluationFormScoringStrategyStatus { return v.Status }).(EvaluationFormScoringStrategyStatusOutput)
}

type EvaluationFormScoringStrategyPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategy)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyPtrOutput) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyPtrOutput) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyPtrOutput) Elem() EvaluationFormScoringStrategyOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) EvaluationFormScoringStrategy {
		if v != nil {
			return *v
		}
		var ret EvaluationFormScoringStrategy
		return ret
	}).(EvaluationFormScoringStrategyOutput)
}

// The scoring mode.
func (o EvaluationFormScoringStrategyPtrOutput) Mode() EvaluationFormScoringStrategyModePtrOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) *EvaluationFormScoringStrategyMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(EvaluationFormScoringStrategyModePtrOutput)
}

// The scoring status.
func (o EvaluationFormScoringStrategyPtrOutput) Status() EvaluationFormScoringStrategyStatusPtrOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) *EvaluationFormScoringStrategyStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(EvaluationFormScoringStrategyStatusPtrOutput)
}

// The evaluation form section.
type EvaluationFormSection struct {
	// The instructions for the section.
	Instructions *string `pulumi:"instructions"`
	// The list of section items.
	Items []EvaluationFormItem `pulumi:"items"`
	// The identifier to reference the section.
	RefId string `pulumi:"refId"`
	// The title of the section.
	Title string `pulumi:"title"`
	// The item weight used for scoring.
	Weight *float64 `pulumi:"weight"`
}

// EvaluationFormSectionInput is an input type that accepts EvaluationFormSectionArgs and EvaluationFormSectionOutput values.
// You can construct a concrete instance of `EvaluationFormSectionInput` via:
//
//	EvaluationFormSectionArgs{...}
type EvaluationFormSectionInput interface {
	pulumi.Input

	ToEvaluationFormSectionOutput() EvaluationFormSectionOutput
	ToEvaluationFormSectionOutputWithContext(context.Context) EvaluationFormSectionOutput
}

// The evaluation form section.
type EvaluationFormSectionArgs struct {
	// The instructions for the section.
	Instructions pulumi.StringPtrInput `pulumi:"instructions"`
	// The list of section items.
	Items EvaluationFormItemArrayInput `pulumi:"items"`
	// The identifier to reference the section.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The title of the section.
	Title pulumi.StringInput `pulumi:"title"`
	// The item weight used for scoring.
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (EvaluationFormSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSection)(nil)).Elem()
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionOutput() EvaluationFormSectionOutput {
	return i.ToEvaluationFormSectionOutputWithContext(context.Background())
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionOutputWithContext(ctx context.Context) EvaluationFormSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionOutput)
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return i.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionOutput).ToEvaluationFormSectionPtrOutputWithContext(ctx)
}

// EvaluationFormSectionPtrInput is an input type that accepts EvaluationFormSectionArgs, EvaluationFormSectionPtr and EvaluationFormSectionPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSectionPtrInput` via:
//
//	        EvaluationFormSectionArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSectionPtrInput interface {
	pulumi.Input

	ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput
	ToEvaluationFormSectionPtrOutputWithContext(context.Context) EvaluationFormSectionPtrOutput
}

type evaluationFormSectionPtrType EvaluationFormSectionArgs

func EvaluationFormSectionPtr(v *EvaluationFormSectionArgs) EvaluationFormSectionPtrInput {
	return (*evaluationFormSectionPtrType)(v)
}

func (*evaluationFormSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSection)(nil)).Elem()
}

func (i *evaluationFormSectionPtrType) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return i.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSectionPtrType) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionPtrOutput)
}

// The evaluation form section.
type EvaluationFormSectionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSection)(nil)).Elem()
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionOutput() EvaluationFormSectionOutput {
	return o
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionOutputWithContext(ctx context.Context) EvaluationFormSectionOutput {
	return o
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return o.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSection) *EvaluationFormSection {
		return &v
	}).(EvaluationFormSectionPtrOutput)
}

// The instructions for the section.
func (o EvaluationFormSectionOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormSection) *string { return v.Instructions }).(pulumi.StringPtrOutput)
}

// The list of section items.
func (o EvaluationFormSectionOutput) Items() EvaluationFormItemArrayOutput {
	return o.ApplyT(func(v EvaluationFormSection) []EvaluationFormItem { return v.Items }).(EvaluationFormItemArrayOutput)
}

// The identifier to reference the section.
func (o EvaluationFormSectionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSection) string { return v.RefId }).(pulumi.StringOutput)
}

// The title of the section.
func (o EvaluationFormSectionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSection) string { return v.Title }).(pulumi.StringOutput)
}

// The item weight used for scoring.
func (o EvaluationFormSectionOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EvaluationFormSection) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EvaluationFormSectionPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSection)(nil)).Elem()
}

func (o EvaluationFormSectionPtrOutput) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return o
}

func (o EvaluationFormSectionPtrOutput) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return o
}

func (o EvaluationFormSectionPtrOutput) Elem() EvaluationFormSectionOutput {
	return o.ApplyT(func(v *EvaluationFormSection) EvaluationFormSection {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSection
		return ret
	}).(EvaluationFormSectionOutput)
}

// The instructions for the section.
func (o EvaluationFormSectionPtrOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return v.Instructions
	}).(pulumi.StringPtrOutput)
}

// The list of section items.
func (o EvaluationFormSectionPtrOutput) Items() EvaluationFormItemArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSection) []EvaluationFormItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(EvaluationFormItemArrayOutput)
}

// The identifier to reference the section.
func (o EvaluationFormSectionPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return &v.RefId
	}).(pulumi.StringPtrOutput)
}

// The title of the section.
func (o EvaluationFormSectionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// The item weight used for scoring.
func (o EvaluationFormSectionPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *float64 {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.Float64PtrOutput)
}

// The automation properties for the single-select question.
type EvaluationFormSingleSelectQuestionAutomation struct {
	// The option reference identifier of the default answer.
	DefaultOptionRefId *string `pulumi:"defaultOptionRefId"`
	// The answer options for the automation.
	Options []EvaluationFormSingleSelectQuestionAutomationOption `pulumi:"options"`
}

// EvaluationFormSingleSelectQuestionAutomationInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationArgs and EvaluationFormSingleSelectQuestionAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationArgs{...}
type EvaluationFormSingleSelectQuestionAutomationInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput
	ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOutput
}

// The automation properties for the single-select question.
type EvaluationFormSingleSelectQuestionAutomationArgs struct {
	// The option reference identifier of the default answer.
	DefaultOptionRefId pulumi.StringPtrInput `pulumi:"defaultOptionRefId"`
	// The answer options for the automation.
	Options EvaluationFormSingleSelectQuestionAutomationOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormSingleSelectQuestionAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOutput)
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOutput).ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormSingleSelectQuestionAutomationPtrInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationArgs, EvaluationFormSingleSelectQuestionAutomationPtr and EvaluationFormSingleSelectQuestionAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationPtrInput` via:
//
//	        EvaluationFormSingleSelectQuestionAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSingleSelectQuestionAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput
	ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput
}

type evaluationFormSingleSelectQuestionAutomationPtrType EvaluationFormSingleSelectQuestionAutomationArgs

func EvaluationFormSingleSelectQuestionAutomationPtr(v *EvaluationFormSingleSelectQuestionAutomationArgs) EvaluationFormSingleSelectQuestionAutomationPtrInput {
	return (*evaluationFormSingleSelectQuestionAutomationPtrType)(v)
}

func (*evaluationFormSingleSelectQuestionAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (i *evaluationFormSingleSelectQuestionAutomationPtrType) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSingleSelectQuestionAutomationPtrType) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The automation properties for the single-select question.
type EvaluationFormSingleSelectQuestionAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionAutomation) *EvaluationFormSingleSelectQuestionAutomation {
		return &v
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The option reference identifier of the default answer.
func (o EvaluationFormSingleSelectQuestionAutomationOutput) DefaultOptionRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomation) *string { return v.DefaultOptionRefId }).(pulumi.StringPtrOutput)
}

// The answer options for the automation.
func (o EvaluationFormSingleSelectQuestionAutomationOutput) Options() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomation) []EvaluationFormSingleSelectQuestionAutomationOption {
		return v.Options
	}).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

type EvaluationFormSingleSelectQuestionAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) Elem() EvaluationFormSingleSelectQuestionAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) EvaluationFormSingleSelectQuestionAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionAutomation
		return ret
	}).(EvaluationFormSingleSelectQuestionAutomationOutput)
}

// The option reference identifier of the default answer.
func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) DefaultOptionRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) *string {
		if v == nil {
			return nil
		}
		return v.DefaultOptionRefId
	}).(pulumi.StringPtrOutput)
}

// The answer options for the automation.
func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) Options() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) []EvaluationFormSingleSelectQuestionAutomationOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

// The automation option for the single-select question.
type EvaluationFormSingleSelectQuestionAutomationOption struct {
	// The automation option based on Rules categories.
	RuleCategory EvaluationFormSingleSelectQuestionRuleCategoryAutomation `pulumi:"ruleCategory"`
}

// EvaluationFormSingleSelectQuestionAutomationOptionInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationOptionArgs and EvaluationFormSingleSelectQuestionAutomationOptionOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationOptionInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationOptionArgs{...}
type EvaluationFormSingleSelectQuestionAutomationOptionInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput
	ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput
}

// The automation option for the single-select question.
type EvaluationFormSingleSelectQuestionAutomationOptionArgs struct {
	// The automation option based on Rules categories.
	RuleCategory EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput `pulumi:"ruleCategory"`
}

func (EvaluationFormSingleSelectQuestionAutomationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArgs) ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArgs) ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOptionOutput)
}

// EvaluationFormSingleSelectQuestionAutomationOptionArrayInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationOptionArray and EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationOptionArrayInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationOptionArray{ EvaluationFormSingleSelectQuestionAutomationOptionArgs{...} }
type EvaluationFormSingleSelectQuestionAutomationOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput
	ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput
}

type EvaluationFormSingleSelectQuestionAutomationOptionArray []EvaluationFormSingleSelectQuestionAutomationOptionInput

func (EvaluationFormSingleSelectQuestionAutomationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArray) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArray) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

// The automation option for the single-select question.
type EvaluationFormSingleSelectQuestionAutomationOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return o
}

// The automation option based on Rules categories.
func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) RuleCategory() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomationOption) EvaluationFormSingleSelectQuestionRuleCategoryAutomation {
		return v.RuleCategory
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput)
}

type EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormSingleSelectQuestionAutomationOption {
		return vs[0].([]EvaluationFormSingleSelectQuestionAutomationOption)[vs[1].(int)]
	}).(EvaluationFormSingleSelectQuestionAutomationOptionOutput)
}

// The option for a question.
type EvaluationFormSingleSelectQuestionOption struct {
	// The flag to mark the option as automatic fail.
	AutomaticFail *bool `pulumi:"automaticFail"`
	// The identifier used to reference the option.
	RefId string `pulumi:"refId"`
	// The score of the option.
	Score *int `pulumi:"score"`
	// The title of the option.
	Text string `pulumi:"text"`
}

// EvaluationFormSingleSelectQuestionOptionInput is an input type that accepts EvaluationFormSingleSelectQuestionOptionArgs and EvaluationFormSingleSelectQuestionOptionOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionOptionInput` via:
//
//	EvaluationFormSingleSelectQuestionOptionArgs{...}
type EvaluationFormSingleSelectQuestionOptionInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput
	ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionOptionOutput
}

// The option for a question.
type EvaluationFormSingleSelectQuestionOptionArgs struct {
	// The flag to mark the option as automatic fail.
	AutomaticFail pulumi.BoolPtrInput `pulumi:"automaticFail"`
	// The identifier used to reference the option.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The score of the option.
	Score pulumi.IntPtrInput `pulumi:"score"`
	// The title of the option.
	Text pulumi.StringInput `pulumi:"text"`
}

func (EvaluationFormSingleSelectQuestionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionOptionArgs) ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput {
	return i.ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionOptionArgs) ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionOptionOutput)
}

// EvaluationFormSingleSelectQuestionOptionArrayInput is an input type that accepts EvaluationFormSingleSelectQuestionOptionArray and EvaluationFormSingleSelectQuestionOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionOptionArrayInput` via:
//
//	EvaluationFormSingleSelectQuestionOptionArray{ EvaluationFormSingleSelectQuestionOptionArgs{...} }
type EvaluationFormSingleSelectQuestionOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput
	ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput
}

type EvaluationFormSingleSelectQuestionOptionArray []EvaluationFormSingleSelectQuestionOptionInput

func (EvaluationFormSingleSelectQuestionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionOptionArray) ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return i.ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionOptionArray) ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

// The option for a question.
type EvaluationFormSingleSelectQuestionOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionOptionOutput) ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionOutput) ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionOutput {
	return o
}

// The flag to mark the option as automatic fail.
func (o EvaluationFormSingleSelectQuestionOptionOutput) AutomaticFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) *bool { return v.AutomaticFail }).(pulumi.BoolPtrOutput)
}

// The identifier used to reference the option.
func (o EvaluationFormSingleSelectQuestionOptionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) string { return v.RefId }).(pulumi.StringOutput)
}

// The score of the option.
func (o EvaluationFormSingleSelectQuestionOptionOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// The title of the option.
func (o EvaluationFormSingleSelectQuestionOptionOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) string { return v.Text }).(pulumi.StringOutput)
}

type EvaluationFormSingleSelectQuestionOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormSingleSelectQuestionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormSingleSelectQuestionOption {
		return vs[0].([]EvaluationFormSingleSelectQuestionOption)[vs[1].(int)]
	}).(EvaluationFormSingleSelectQuestionOptionOutput)
}

// The properties of the single-select question.
type EvaluationFormSingleSelectQuestionProperties struct {
	// The automation properties for the single-select question.
	Automation *EvaluationFormSingleSelectQuestionAutomation `pulumi:"automation"`
	// The display mode of the single-select question.
	DisplayAs *EvaluationFormSingleSelectQuestionPropertiesDisplayAs `pulumi:"displayAs"`
	// The list of options for the question.
	Options []EvaluationFormSingleSelectQuestionOption `pulumi:"options"`
}

// EvaluationFormSingleSelectQuestionPropertiesInput is an input type that accepts EvaluationFormSingleSelectQuestionPropertiesArgs and EvaluationFormSingleSelectQuestionPropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionPropertiesInput` via:
//
//	EvaluationFormSingleSelectQuestionPropertiesArgs{...}
type EvaluationFormSingleSelectQuestionPropertiesInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput
	ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput
}

// The properties of the single-select question.
type EvaluationFormSingleSelectQuestionPropertiesArgs struct {
	// The automation properties for the single-select question.
	Automation EvaluationFormSingleSelectQuestionAutomationPtrInput `pulumi:"automation"`
	// The display mode of the single-select question.
	DisplayAs EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrInput `pulumi:"displayAs"`
	// The list of options for the question.
	Options EvaluationFormSingleSelectQuestionOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormSingleSelectQuestionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesOutput)
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesOutput).ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormSingleSelectQuestionPropertiesPtrInput is an input type that accepts EvaluationFormSingleSelectQuestionPropertiesArgs, EvaluationFormSingleSelectQuestionPropertiesPtr and EvaluationFormSingleSelectQuestionPropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionPropertiesPtrInput` via:
//
//	        EvaluationFormSingleSelectQuestionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSingleSelectQuestionPropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput
	ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput
}

type evaluationFormSingleSelectQuestionPropertiesPtrType EvaluationFormSingleSelectQuestionPropertiesArgs

func EvaluationFormSingleSelectQuestionPropertiesPtr(v *EvaluationFormSingleSelectQuestionPropertiesArgs) EvaluationFormSingleSelectQuestionPropertiesPtrInput {
	return (*evaluationFormSingleSelectQuestionPropertiesPtrType)(v)
}

func (*evaluationFormSingleSelectQuestionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (i *evaluationFormSingleSelectQuestionPropertiesPtrType) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSingleSelectQuestionPropertiesPtrType) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// The properties of the single-select question.
type EvaluationFormSingleSelectQuestionPropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionProperties {
		return &v
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// The automation properties for the single-select question.
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) Automation() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionAutomation {
		return v.Automation
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The display mode of the single-select question.
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) DisplayAs() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		return v.DisplayAs
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

// The list of options for the question.
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) Options() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) []EvaluationFormSingleSelectQuestionOption {
		return v.Options
	}).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

type EvaluationFormSingleSelectQuestionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Elem() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) EvaluationFormSingleSelectQuestionProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionProperties
		return ret
	}).(EvaluationFormSingleSelectQuestionPropertiesOutput)
}

// The automation properties for the single-select question.
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Automation() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionAutomation {
		if v == nil {
			return nil
		}
		return v.Automation
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The display mode of the single-select question.
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) DisplayAs() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		if v == nil {
			return nil
		}
		return v.DisplayAs
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

// The list of options for the question.
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Options() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) []EvaluationFormSingleSelectQuestionOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

// The automation option based on Rules categories.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomation struct {
	// The category name as defined in Rules.
	Category string `pulumi:"category"`
	// The automation condition applied on contact categories.
	Condition EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition `pulumi:"condition"`
	// The option identifier referencing the option to be selected when the automation option is triggered.
	OptionRefId string `pulumi:"optionRefId"`
}

// EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput is an input type that accepts EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs and EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput` via:
//
//	EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs{...}
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput
	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput
}

// The automation option based on Rules categories.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs struct {
	// The category name as defined in Rules.
	Category pulumi.StringInput `pulumi:"category"`
	// The automation condition applied on contact categories.
	Condition EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput `pulumi:"condition"`
	// The option identifier referencing the option to be selected when the automation option is triggered.
	OptionRefId pulumi.StringInput `pulumi:"optionRefId"`
}

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomation)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return i.ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput)
}

// The automation option based on Rules categories.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o
}

// The category name as defined in Rules.
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) string { return v.Category }).(pulumi.StringOutput)
}

// The automation condition applied on contact categories.
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) Condition() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition {
		return v.Condition
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput)
}

// The option identifier referencing the option to be selected when the automation option is triggered.
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) OptionRefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) string { return v.OptionRefId }).(pulumi.StringOutput)
}

// A key-value pair to associate with a resource.
type EvaluationFormTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value string `pulumi:"value"`
}

// EvaluationFormTagInput is an input type that accepts EvaluationFormTagArgs and EvaluationFormTagOutput values.
// You can construct a concrete instance of `EvaluationFormTagInput` via:
//
//	EvaluationFormTagArgs{...}
type EvaluationFormTagInput interface {
	pulumi.Input

	ToEvaluationFormTagOutput() EvaluationFormTagOutput
	ToEvaluationFormTagOutputWithContext(context.Context) EvaluationFormTagOutput
}

// A key-value pair to associate with a resource.
type EvaluationFormTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EvaluationFormTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormTag)(nil)).Elem()
}

func (i EvaluationFormTagArgs) ToEvaluationFormTagOutput() EvaluationFormTagOutput {
	return i.ToEvaluationFormTagOutputWithContext(context.Background())
}

func (i EvaluationFormTagArgs) ToEvaluationFormTagOutputWithContext(ctx context.Context) EvaluationFormTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormTagOutput)
}

// EvaluationFormTagArrayInput is an input type that accepts EvaluationFormTagArray and EvaluationFormTagArrayOutput values.
// You can construct a concrete instance of `EvaluationFormTagArrayInput` via:
//
//	EvaluationFormTagArray{ EvaluationFormTagArgs{...} }
type EvaluationFormTagArrayInput interface {
	pulumi.Input

	ToEvaluationFormTagArrayOutput() EvaluationFormTagArrayOutput
	ToEvaluationFormTagArrayOutputWithContext(context.Context) EvaluationFormTagArrayOutput
}

type EvaluationFormTagArray []EvaluationFormTagInput

func (EvaluationFormTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormTag)(nil)).Elem()
}

func (i EvaluationFormTagArray) ToEvaluationFormTagArrayOutput() EvaluationFormTagArrayOutput {
	return i.ToEvaluationFormTagArrayOutputWithContext(context.Background())
}

func (i EvaluationFormTagArray) ToEvaluationFormTagArrayOutputWithContext(ctx context.Context) EvaluationFormTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormTagArrayOutput)
}

// A key-value pair to associate with a resource.
type EvaluationFormTagOutput struct{ *pulumi.OutputState }

func (EvaluationFormTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormTag)(nil)).Elem()
}

func (o EvaluationFormTagOutput) ToEvaluationFormTagOutput() EvaluationFormTagOutput {
	return o
}

func (o EvaluationFormTagOutput) ToEvaluationFormTagOutputWithContext(ctx context.Context) EvaluationFormTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o EvaluationFormTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that's 1 to 256 characters in length.
func (o EvaluationFormTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormTag) string { return v.Value }).(pulumi.StringOutput)
}

type EvaluationFormTagArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormTag)(nil)).Elem()
}

func (o EvaluationFormTagArrayOutput) ToEvaluationFormTagArrayOutput() EvaluationFormTagArrayOutput {
	return o
}

func (o EvaluationFormTagArrayOutput) ToEvaluationFormTagArrayOutputWithContext(ctx context.Context) EvaluationFormTagArrayOutput {
	return o
}

func (o EvaluationFormTagArrayOutput) Index(i pulumi.IntInput) EvaluationFormTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormTag {
		return vs[0].([]EvaluationFormTag)[vs[1].(int)]
	}).(EvaluationFormTagOutput)
}

// Contains information about the hours of operation.
type HoursOfOperationConfig struct {
	// The day that the hours of operation applies to.
	Day HoursOfOperationConfigDay `pulumi:"day"`
	// The end time that your contact center closes.
	EndTime HoursOfOperationTimeSlice `pulumi:"endTime"`
	// The start time that your contact center opens.
	StartTime HoursOfOperationTimeSlice `pulumi:"startTime"`
}

// HoursOfOperationConfigInput is an input type that accepts HoursOfOperationConfigArgs and HoursOfOperationConfigOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigInput` via:
//
//	HoursOfOperationConfigArgs{...}
type HoursOfOperationConfigInput interface {
	pulumi.Input

	ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput
	ToHoursOfOperationConfigOutputWithContext(context.Context) HoursOfOperationConfigOutput
}

// Contains information about the hours of operation.
type HoursOfOperationConfigArgs struct {
	// The day that the hours of operation applies to.
	Day HoursOfOperationConfigDayInput `pulumi:"day"`
	// The end time that your contact center closes.
	EndTime HoursOfOperationTimeSliceInput `pulumi:"endTime"`
	// The start time that your contact center opens.
	StartTime HoursOfOperationTimeSliceInput `pulumi:"startTime"`
}

func (HoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return i.ToHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigOutput)
}

// HoursOfOperationConfigArrayInput is an input type that accepts HoursOfOperationConfigArray and HoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigArrayInput` via:
//
//	HoursOfOperationConfigArray{ HoursOfOperationConfigArgs{...} }
type HoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput
	ToHoursOfOperationConfigArrayOutputWithContext(context.Context) HoursOfOperationConfigArrayOutput
}

type HoursOfOperationConfigArray []HoursOfOperationConfigInput

func (HoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return i.ToHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigArrayOutput)
}

// Contains information about the hours of operation.
type HoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return o
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return o
}

// The day that the hours of operation applies to.
func (o HoursOfOperationConfigOutput) Day() HoursOfOperationConfigDayOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigDay { return v.Day }).(HoursOfOperationConfigDayOutput)
}

// The end time that your contact center closes.
func (o HoursOfOperationConfigOutput) EndTime() HoursOfOperationTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationTimeSlice { return v.EndTime }).(HoursOfOperationTimeSliceOutput)
}

// The start time that your contact center opens.
func (o HoursOfOperationConfigOutput) StartTime() HoursOfOperationTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationTimeSlice { return v.StartTime }).(HoursOfOperationTimeSliceOutput)
}

type HoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) HoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationConfig {
		return vs[0].([]HoursOfOperationConfig)[vs[1].(int)]
	}).(HoursOfOperationConfigOutput)
}

// A key-value pair to associate with a resource.
type HoursOfOperationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// HoursOfOperationTagInput is an input type that accepts HoursOfOperationTagArgs and HoursOfOperationTagOutput values.
// You can construct a concrete instance of `HoursOfOperationTagInput` via:
//
//	HoursOfOperationTagArgs{...}
type HoursOfOperationTagInput interface {
	pulumi.Input

	ToHoursOfOperationTagOutput() HoursOfOperationTagOutput
	ToHoursOfOperationTagOutputWithContext(context.Context) HoursOfOperationTagOutput
}

// A key-value pair to associate with a resource.
type HoursOfOperationTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HoursOfOperationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTag)(nil)).Elem()
}

func (i HoursOfOperationTagArgs) ToHoursOfOperationTagOutput() HoursOfOperationTagOutput {
	return i.ToHoursOfOperationTagOutputWithContext(context.Background())
}

func (i HoursOfOperationTagArgs) ToHoursOfOperationTagOutputWithContext(ctx context.Context) HoursOfOperationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationTagOutput)
}

// HoursOfOperationTagArrayInput is an input type that accepts HoursOfOperationTagArray and HoursOfOperationTagArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationTagArrayInput` via:
//
//	HoursOfOperationTagArray{ HoursOfOperationTagArgs{...} }
type HoursOfOperationTagArrayInput interface {
	pulumi.Input

	ToHoursOfOperationTagArrayOutput() HoursOfOperationTagArrayOutput
	ToHoursOfOperationTagArrayOutputWithContext(context.Context) HoursOfOperationTagArrayOutput
}

type HoursOfOperationTagArray []HoursOfOperationTagInput

func (HoursOfOperationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationTag)(nil)).Elem()
}

func (i HoursOfOperationTagArray) ToHoursOfOperationTagArrayOutput() HoursOfOperationTagArrayOutput {
	return i.ToHoursOfOperationTagArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationTagArray) ToHoursOfOperationTagArrayOutputWithContext(ctx context.Context) HoursOfOperationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationTagArrayOutput)
}

// A key-value pair to associate with a resource.
type HoursOfOperationTagOutput struct{ *pulumi.OutputState }

func (HoursOfOperationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTag)(nil)).Elem()
}

func (o HoursOfOperationTagOutput) ToHoursOfOperationTagOutput() HoursOfOperationTagOutput {
	return o
}

func (o HoursOfOperationTagOutput) ToHoursOfOperationTagOutputWithContext(ctx context.Context) HoursOfOperationTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o HoursOfOperationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o HoursOfOperationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationTag) string { return v.Value }).(pulumi.StringOutput)
}

type HoursOfOperationTagArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationTag)(nil)).Elem()
}

func (o HoursOfOperationTagArrayOutput) ToHoursOfOperationTagArrayOutput() HoursOfOperationTagArrayOutput {
	return o
}

func (o HoursOfOperationTagArrayOutput) ToHoursOfOperationTagArrayOutputWithContext(ctx context.Context) HoursOfOperationTagArrayOutput {
	return o
}

func (o HoursOfOperationTagArrayOutput) Index(i pulumi.IntInput) HoursOfOperationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationTag {
		return vs[0].([]HoursOfOperationTag)[vs[1].(int)]
	}).(HoursOfOperationTagOutput)
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSlice struct {
	// The hours.
	Hours int `pulumi:"hours"`
	// The minutes.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationTimeSliceInput is an input type that accepts HoursOfOperationTimeSliceArgs and HoursOfOperationTimeSliceOutput values.
// You can construct a concrete instance of `HoursOfOperationTimeSliceInput` via:
//
//	HoursOfOperationTimeSliceArgs{...}
type HoursOfOperationTimeSliceInput interface {
	pulumi.Input

	ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput
	ToHoursOfOperationTimeSliceOutputWithContext(context.Context) HoursOfOperationTimeSliceOutput
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSliceArgs struct {
	// The hours.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationTimeSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTimeSlice)(nil)).Elem()
}

func (i HoursOfOperationTimeSliceArgs) ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput {
	return i.ToHoursOfOperationTimeSliceOutputWithContext(context.Background())
}

func (i HoursOfOperationTimeSliceArgs) ToHoursOfOperationTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationTimeSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationTimeSliceOutput)
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSliceOutput struct{ *pulumi.OutputState }

func (HoursOfOperationTimeSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTimeSlice)(nil)).Elem()
}

func (o HoursOfOperationTimeSliceOutput) ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput {
	return o
}

func (o HoursOfOperationTimeSliceOutput) ToHoursOfOperationTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationTimeSliceOutput {
	return o
}

// The hours.
func (o HoursOfOperationTimeSliceOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationTimeSlice) int { return v.Hours }).(pulumi.IntOutput)
}

// The minutes.
func (o HoursOfOperationTimeSliceOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationTimeSlice) int { return v.Minutes }).(pulumi.IntOutput)
}

type InstanceAttributes struct {
	AutoResolveBestVoices *bool `pulumi:"autoResolveBestVoices"`
	ContactLens           *bool `pulumi:"contactLens"`
	ContactflowLogs       *bool `pulumi:"contactflowLogs"`
	EarlyMedia            *bool `pulumi:"earlyMedia"`
	InboundCalls          bool  `pulumi:"inboundCalls"`
	OutboundCalls         bool  `pulumi:"outboundCalls"`
	UseCustomTTSVoices    *bool `pulumi:"useCustomTTSVoices"`
}

// InstanceAttributesInput is an input type that accepts InstanceAttributesArgs and InstanceAttributesOutput values.
// You can construct a concrete instance of `InstanceAttributesInput` via:
//
//	InstanceAttributesArgs{...}
type InstanceAttributesInput interface {
	pulumi.Input

	ToInstanceAttributesOutput() InstanceAttributesOutput
	ToInstanceAttributesOutputWithContext(context.Context) InstanceAttributesOutput
}

type InstanceAttributesArgs struct {
	AutoResolveBestVoices pulumi.BoolPtrInput `pulumi:"autoResolveBestVoices"`
	ContactLens           pulumi.BoolPtrInput `pulumi:"contactLens"`
	ContactflowLogs       pulumi.BoolPtrInput `pulumi:"contactflowLogs"`
	EarlyMedia            pulumi.BoolPtrInput `pulumi:"earlyMedia"`
	InboundCalls          pulumi.BoolInput    `pulumi:"inboundCalls"`
	OutboundCalls         pulumi.BoolInput    `pulumi:"outboundCalls"`
	UseCustomTTSVoices    pulumi.BoolPtrInput `pulumi:"useCustomTTSVoices"`
}

func (InstanceAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttributes)(nil)).Elem()
}

func (i InstanceAttributesArgs) ToInstanceAttributesOutput() InstanceAttributesOutput {
	return i.ToInstanceAttributesOutputWithContext(context.Background())
}

func (i InstanceAttributesArgs) ToInstanceAttributesOutputWithContext(ctx context.Context) InstanceAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttributesOutput)
}

type InstanceAttributesOutput struct{ *pulumi.OutputState }

func (InstanceAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttributes)(nil)).Elem()
}

func (o InstanceAttributesOutput) ToInstanceAttributesOutput() InstanceAttributesOutput {
	return o
}

func (o InstanceAttributesOutput) ToInstanceAttributesOutputWithContext(ctx context.Context) InstanceAttributesOutput {
	return o
}

func (o InstanceAttributesOutput) AutoResolveBestVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.AutoResolveBestVoices }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) ContactLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.ContactLens }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) ContactflowLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.ContactflowLogs }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) EarlyMedia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.EarlyMedia }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) InboundCalls() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceAttributes) bool { return v.InboundCalls }).(pulumi.BoolOutput)
}

func (o InstanceAttributesOutput) OutboundCalls() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceAttributes) bool { return v.OutboundCalls }).(pulumi.BoolOutput)
}

func (o InstanceAttributesOutput) UseCustomTTSVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.UseCustomTTSVoices }).(pulumi.BoolPtrOutput)
}

type InstanceAttributesPtrOutput struct{ *pulumi.OutputState }

func (InstanceAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAttributes)(nil)).Elem()
}

func (o InstanceAttributesPtrOutput) ToInstanceAttributesPtrOutput() InstanceAttributesPtrOutput {
	return o
}

func (o InstanceAttributesPtrOutput) ToInstanceAttributesPtrOutputWithContext(ctx context.Context) InstanceAttributesPtrOutput {
	return o
}

func (o InstanceAttributesPtrOutput) Elem() InstanceAttributesOutput {
	return o.ApplyT(func(v *InstanceAttributes) InstanceAttributes {
		if v != nil {
			return *v
		}
		var ret InstanceAttributes
		return ret
	}).(InstanceAttributesOutput)
}

func (o InstanceAttributesPtrOutput) AutoResolveBestVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.AutoResolveBestVoices
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) ContactLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.ContactLens
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) ContactflowLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.ContactflowLogs
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) EarlyMedia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EarlyMedia
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) InboundCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return &v.InboundCalls
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) OutboundCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return &v.OutboundCalls
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) UseCustomTTSVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.UseCustomTTSVoices
	}).(pulumi.BoolPtrOutput)
}

type InstanceStorageConfigEncryptionConfig struct {
	EncryptionType InstanceStorageConfigEncryptionType `pulumi:"encryptionType"`
	KeyId          string                              `pulumi:"keyId"`
}

// InstanceStorageConfigEncryptionConfigInput is an input type that accepts InstanceStorageConfigEncryptionConfigArgs and InstanceStorageConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionConfigInput` via:
//
//	InstanceStorageConfigEncryptionConfigArgs{...}
type InstanceStorageConfigEncryptionConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput
	ToInstanceStorageConfigEncryptionConfigOutputWithContext(context.Context) InstanceStorageConfigEncryptionConfigOutput
}

type InstanceStorageConfigEncryptionConfigArgs struct {
	EncryptionType InstanceStorageConfigEncryptionTypeInput `pulumi:"encryptionType"`
	KeyId          pulumi.StringInput                       `pulumi:"keyId"`
}

func (InstanceStorageConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput {
	return i.ToInstanceStorageConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigOutput)
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigOutput).ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigEncryptionConfigPtrInput is an input type that accepts InstanceStorageConfigEncryptionConfigArgs, InstanceStorageConfigEncryptionConfigPtr and InstanceStorageConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionConfigPtrInput` via:
//
//	        InstanceStorageConfigEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput
	ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Context) InstanceStorageConfigEncryptionConfigPtrOutput
}

type instanceStorageConfigEncryptionConfigPtrType InstanceStorageConfigEncryptionConfigArgs

func InstanceStorageConfigEncryptionConfigPtr(v *InstanceStorageConfigEncryptionConfigArgs) InstanceStorageConfigEncryptionConfigPtrInput {
	return (*instanceStorageConfigEncryptionConfigPtrType)(v)
}

func (*instanceStorageConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (i *instanceStorageConfigEncryptionConfigPtrType) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigEncryptionConfigPtrType) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigEncryptionConfig) *InstanceStorageConfigEncryptionConfig {
		return &v
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

func (o InstanceStorageConfigEncryptionConfigOutput) EncryptionType() InstanceStorageConfigEncryptionTypeOutput {
	return o.ApplyT(func(v InstanceStorageConfigEncryptionConfig) InstanceStorageConfigEncryptionType {
		return v.EncryptionType
	}).(InstanceStorageConfigEncryptionTypeOutput)
}

func (o InstanceStorageConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigEncryptionConfig) string { return v.KeyId }).(pulumi.StringOutput)
}

type InstanceStorageConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) Elem() InstanceStorageConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) InstanceStorageConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigEncryptionConfig
		return ret
	}).(InstanceStorageConfigEncryptionConfigOutput)
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) EncryptionType() InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) *InstanceStorageConfigEncryptionType {
		if v == nil {
			return nil
		}
		return &v.EncryptionType
	}).(InstanceStorageConfigEncryptionTypePtrOutput)
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisFirehoseConfig struct {
	FirehoseArn string `pulumi:"firehoseArn"`
}

// InstanceStorageConfigKinesisFirehoseConfigInput is an input type that accepts InstanceStorageConfigKinesisFirehoseConfigArgs and InstanceStorageConfigKinesisFirehoseConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisFirehoseConfigInput` via:
//
//	InstanceStorageConfigKinesisFirehoseConfigArgs{...}
type InstanceStorageConfigKinesisFirehoseConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput
	ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput
}

type InstanceStorageConfigKinesisFirehoseConfigArgs struct {
	FirehoseArn pulumi.StringInput `pulumi:"firehoseArn"`
}

func (InstanceStorageConfigKinesisFirehoseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigOutput)
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigOutput).ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisFirehoseConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisFirehoseConfigArgs, InstanceStorageConfigKinesisFirehoseConfigPtr and InstanceStorageConfigKinesisFirehoseConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisFirehoseConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisFirehoseConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisFirehoseConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput
	ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput
}

type instanceStorageConfigKinesisFirehoseConfigPtrType InstanceStorageConfigKinesisFirehoseConfigArgs

func InstanceStorageConfigKinesisFirehoseConfigPtr(v *InstanceStorageConfigKinesisFirehoseConfigArgs) InstanceStorageConfigKinesisFirehoseConfigPtrInput {
	return (*instanceStorageConfigKinesisFirehoseConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisFirehoseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigPtrOutput)
}

type InstanceStorageConfigKinesisFirehoseConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisFirehoseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisFirehoseConfig) *InstanceStorageConfigKinesisFirehoseConfig {
		return &v
	}).(InstanceStorageConfigKinesisFirehoseConfigPtrOutput)
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) FirehoseArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisFirehoseConfig) string { return v.FirehoseArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigKinesisFirehoseConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) Elem() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisFirehoseConfig) InstanceStorageConfigKinesisFirehoseConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisFirehoseConfig
		return ret
	}).(InstanceStorageConfigKinesisFirehoseConfigOutput)
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) FirehoseArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisFirehoseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FirehoseArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisStreamConfig struct {
	StreamArn string `pulumi:"streamArn"`
}

// InstanceStorageConfigKinesisStreamConfigInput is an input type that accepts InstanceStorageConfigKinesisStreamConfigArgs and InstanceStorageConfigKinesisStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisStreamConfigInput` via:
//
//	InstanceStorageConfigKinesisStreamConfigArgs{...}
type InstanceStorageConfigKinesisStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput
	ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisStreamConfigOutput
}

type InstanceStorageConfigKinesisStreamConfigArgs struct {
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (InstanceStorageConfigKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigOutput)
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigOutput).ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisStreamConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisStreamConfigArgs, InstanceStorageConfigKinesisStreamConfigPtr and InstanceStorageConfigKinesisStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput
	ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput
}

type instanceStorageConfigKinesisStreamConfigPtrType InstanceStorageConfigKinesisStreamConfigArgs

func InstanceStorageConfigKinesisStreamConfigPtr(v *InstanceStorageConfigKinesisStreamConfigArgs) InstanceStorageConfigKinesisStreamConfigPtrInput {
	return (*instanceStorageConfigKinesisStreamConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigPtrOutput)
}

type InstanceStorageConfigKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisStreamConfig) *InstanceStorageConfigKinesisStreamConfig {
		return &v
	}).(InstanceStorageConfigKinesisStreamConfigPtrOutput)
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisStreamConfig) string { return v.StreamArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigKinesisStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) Elem() InstanceStorageConfigKinesisStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisStreamConfig) InstanceStorageConfigKinesisStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisStreamConfig
		return ret
	}).(InstanceStorageConfigKinesisStreamConfigOutput)
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StreamArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisVideoStreamConfig struct {
	EncryptionConfig     *InstanceStorageConfigEncryptionConfig `pulumi:"encryptionConfig"`
	Prefix               string                                 `pulumi:"prefix"`
	RetentionPeriodHours float64                                `pulumi:"retentionPeriodHours"`
}

// InstanceStorageConfigKinesisVideoStreamConfigInput is an input type that accepts InstanceStorageConfigKinesisVideoStreamConfigArgs and InstanceStorageConfigKinesisVideoStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisVideoStreamConfigInput` via:
//
//	InstanceStorageConfigKinesisVideoStreamConfigArgs{...}
type InstanceStorageConfigKinesisVideoStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput
	ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput
}

type InstanceStorageConfigKinesisVideoStreamConfigArgs struct {
	EncryptionConfig     InstanceStorageConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	Prefix               pulumi.StringInput                            `pulumi:"prefix"`
	RetentionPeriodHours pulumi.Float64Input                           `pulumi:"retentionPeriodHours"`
}

func (InstanceStorageConfigKinesisVideoStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigOutput)
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigOutput).ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisVideoStreamConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisVideoStreamConfigArgs, InstanceStorageConfigKinesisVideoStreamConfigPtr and InstanceStorageConfigKinesisVideoStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisVideoStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisVideoStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisVideoStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput
	ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput
}

type instanceStorageConfigKinesisVideoStreamConfigPtrType InstanceStorageConfigKinesisVideoStreamConfigArgs

func InstanceStorageConfigKinesisVideoStreamConfigPtr(v *InstanceStorageConfigKinesisVideoStreamConfigArgs) InstanceStorageConfigKinesisVideoStreamConfigPtrInput {
	return (*instanceStorageConfigKinesisVideoStreamConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisVideoStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput)
}

type InstanceStorageConfigKinesisVideoStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisVideoStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigKinesisVideoStreamConfig {
		return &v
	}).(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) RetentionPeriodHours() pulumi.Float64Output {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) float64 { return v.RetentionPeriodHours }).(pulumi.Float64Output)
}

type InstanceStorageConfigKinesisVideoStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) Elem() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) InstanceStorageConfigKinesisVideoStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisVideoStreamConfig
		return ret
	}).(InstanceStorageConfigKinesisVideoStreamConfigOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) RetentionPeriodHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodHours
	}).(pulumi.Float64PtrOutput)
}

type InstanceStorageConfigS3Config struct {
	BucketName       string                                 `pulumi:"bucketName"`
	BucketPrefix     string                                 `pulumi:"bucketPrefix"`
	EncryptionConfig *InstanceStorageConfigEncryptionConfig `pulumi:"encryptionConfig"`
}

// InstanceStorageConfigS3ConfigInput is an input type that accepts InstanceStorageConfigS3ConfigArgs and InstanceStorageConfigS3ConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigS3ConfigInput` via:
//
//	InstanceStorageConfigS3ConfigArgs{...}
type InstanceStorageConfigS3ConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput
	ToInstanceStorageConfigS3ConfigOutputWithContext(context.Context) InstanceStorageConfigS3ConfigOutput
}

type InstanceStorageConfigS3ConfigArgs struct {
	BucketName       pulumi.StringInput                            `pulumi:"bucketName"`
	BucketPrefix     pulumi.StringInput                            `pulumi:"bucketPrefix"`
	EncryptionConfig InstanceStorageConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
}

func (InstanceStorageConfigS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigS3Config)(nil)).Elem()
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput {
	return i.ToInstanceStorageConfigS3ConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigOutput)
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigOutput).ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigS3ConfigPtrInput is an input type that accepts InstanceStorageConfigS3ConfigArgs, InstanceStorageConfigS3ConfigPtr and InstanceStorageConfigS3ConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigS3ConfigPtrInput` via:
//
//	        InstanceStorageConfigS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigS3ConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput
	ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Context) InstanceStorageConfigS3ConfigPtrOutput
}

type instanceStorageConfigS3ConfigPtrType InstanceStorageConfigS3ConfigArgs

func InstanceStorageConfigS3ConfigPtr(v *InstanceStorageConfigS3ConfigArgs) InstanceStorageConfigS3ConfigPtrInput {
	return (*instanceStorageConfigS3ConfigPtrType)(v)
}

func (*instanceStorageConfigS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigS3Config)(nil)).Elem()
}

func (i *instanceStorageConfigS3ConfigPtrType) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigS3ConfigPtrType) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigPtrOutput)
}

type InstanceStorageConfigS3ConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return o.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigS3Config) *InstanceStorageConfigS3Config {
		return &v
	}).(InstanceStorageConfigS3ConfigPtrOutput)
}

func (o InstanceStorageConfigS3ConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigS3ConfigOutput) BucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) string { return v.BucketPrefix }).(pulumi.StringOutput)
}

func (o InstanceStorageConfigS3ConfigOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) *InstanceStorageConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigPtrOutput) Elem() InstanceStorageConfigS3ConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) InstanceStorageConfigS3Config {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigS3Config
		return ret
	}).(InstanceStorageConfigS3ConfigOutput)
}

func (o InstanceStorageConfigS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o InstanceStorageConfigS3ConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o InstanceStorageConfigS3ConfigPtrOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *InstanceStorageConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

// A key-value pair to associate with a resource.
type PhoneNumberTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// PhoneNumberTagInput is an input type that accepts PhoneNumberTagArgs and PhoneNumberTagOutput values.
// You can construct a concrete instance of `PhoneNumberTagInput` via:
//
//	PhoneNumberTagArgs{...}
type PhoneNumberTagInput interface {
	pulumi.Input

	ToPhoneNumberTagOutput() PhoneNumberTagOutput
	ToPhoneNumberTagOutputWithContext(context.Context) PhoneNumberTagOutput
}

// A key-value pair to associate with a resource.
type PhoneNumberTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PhoneNumberTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberTag)(nil)).Elem()
}

func (i PhoneNumberTagArgs) ToPhoneNumberTagOutput() PhoneNumberTagOutput {
	return i.ToPhoneNumberTagOutputWithContext(context.Background())
}

func (i PhoneNumberTagArgs) ToPhoneNumberTagOutputWithContext(ctx context.Context) PhoneNumberTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberTagOutput)
}

// PhoneNumberTagArrayInput is an input type that accepts PhoneNumberTagArray and PhoneNumberTagArrayOutput values.
// You can construct a concrete instance of `PhoneNumberTagArrayInput` via:
//
//	PhoneNumberTagArray{ PhoneNumberTagArgs{...} }
type PhoneNumberTagArrayInput interface {
	pulumi.Input

	ToPhoneNumberTagArrayOutput() PhoneNumberTagArrayOutput
	ToPhoneNumberTagArrayOutputWithContext(context.Context) PhoneNumberTagArrayOutput
}

type PhoneNumberTagArray []PhoneNumberTagInput

func (PhoneNumberTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberTag)(nil)).Elem()
}

func (i PhoneNumberTagArray) ToPhoneNumberTagArrayOutput() PhoneNumberTagArrayOutput {
	return i.ToPhoneNumberTagArrayOutputWithContext(context.Background())
}

func (i PhoneNumberTagArray) ToPhoneNumberTagArrayOutputWithContext(ctx context.Context) PhoneNumberTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberTagArrayOutput)
}

// A key-value pair to associate with a resource.
type PhoneNumberTagOutput struct{ *pulumi.OutputState }

func (PhoneNumberTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PhoneNumberTag)(nil)).Elem()
}

func (o PhoneNumberTagOutput) ToPhoneNumberTagOutput() PhoneNumberTagOutput {
	return o
}

func (o PhoneNumberTagOutput) ToPhoneNumberTagOutputWithContext(ctx context.Context) PhoneNumberTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PhoneNumberTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PhoneNumberTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PhoneNumberTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PhoneNumberTag) string { return v.Value }).(pulumi.StringOutput)
}

type PhoneNumberTagArrayOutput struct{ *pulumi.OutputState }

func (PhoneNumberTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PhoneNumberTag)(nil)).Elem()
}

func (o PhoneNumberTagArrayOutput) ToPhoneNumberTagArrayOutput() PhoneNumberTagArrayOutput {
	return o
}

func (o PhoneNumberTagArrayOutput) ToPhoneNumberTagArrayOutputWithContext(ctx context.Context) PhoneNumberTagArrayOutput {
	return o
}

func (o PhoneNumberTagArrayOutput) Index(i pulumi.IntInput) PhoneNumberTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PhoneNumberTag {
		return vs[0].([]PhoneNumberTag)[vs[1].(int)]
	}).(PhoneNumberTagOutput)
}

// A key-value pair to associate with a resource.
type PromptTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// PromptTagInput is an input type that accepts PromptTagArgs and PromptTagOutput values.
// You can construct a concrete instance of `PromptTagInput` via:
//
//	PromptTagArgs{...}
type PromptTagInput interface {
	pulumi.Input

	ToPromptTagOutput() PromptTagOutput
	ToPromptTagOutputWithContext(context.Context) PromptTagOutput
}

// A key-value pair to associate with a resource.
type PromptTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PromptTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTag)(nil)).Elem()
}

func (i PromptTagArgs) ToPromptTagOutput() PromptTagOutput {
	return i.ToPromptTagOutputWithContext(context.Background())
}

func (i PromptTagArgs) ToPromptTagOutputWithContext(ctx context.Context) PromptTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTagOutput)
}

// PromptTagArrayInput is an input type that accepts PromptTagArray and PromptTagArrayOutput values.
// You can construct a concrete instance of `PromptTagArrayInput` via:
//
//	PromptTagArray{ PromptTagArgs{...} }
type PromptTagArrayInput interface {
	pulumi.Input

	ToPromptTagArrayOutput() PromptTagArrayOutput
	ToPromptTagArrayOutputWithContext(context.Context) PromptTagArrayOutput
}

type PromptTagArray []PromptTagInput

func (PromptTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptTag)(nil)).Elem()
}

func (i PromptTagArray) ToPromptTagArrayOutput() PromptTagArrayOutput {
	return i.ToPromptTagArrayOutputWithContext(context.Background())
}

func (i PromptTagArray) ToPromptTagArrayOutputWithContext(ctx context.Context) PromptTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTagArrayOutput)
}

// A key-value pair to associate with a resource.
type PromptTagOutput struct{ *pulumi.OutputState }

func (PromptTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTag)(nil)).Elem()
}

func (o PromptTagOutput) ToPromptTagOutput() PromptTagOutput {
	return o
}

func (o PromptTagOutput) ToPromptTagOutputWithContext(ctx context.Context) PromptTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PromptTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PromptTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o PromptTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PromptTag) string { return v.Value }).(pulumi.StringOutput)
}

type PromptTagArrayOutput struct{ *pulumi.OutputState }

func (PromptTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptTag)(nil)).Elem()
}

func (o PromptTagArrayOutput) ToPromptTagArrayOutput() PromptTagArrayOutput {
	return o
}

func (o PromptTagArrayOutput) ToPromptTagArrayOutputWithContext(ctx context.Context) PromptTagArrayOutput {
	return o
}

func (o PromptTagArrayOutput) Index(i pulumi.IntInput) PromptTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromptTag {
		return vs[0].([]PromptTag)[vs[1].(int)]
	}).(PromptTagOutput)
}

// Configuration settings for the quick connect.
type QuickConnectConfig struct {
	PhoneConfig      *QuickConnectPhoneNumberQuickConnectConfig `pulumi:"phoneConfig"`
	QueueConfig      *QuickConnectQueueQuickConnectConfig       `pulumi:"queueConfig"`
	QuickConnectType QuickConnectType                           `pulumi:"quickConnectType"`
	UserConfig       *QuickConnectUserQuickConnectConfig        `pulumi:"userConfig"`
}

// QuickConnectConfigInput is an input type that accepts QuickConnectConfigArgs and QuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectConfigInput` via:
//
//	QuickConnectConfigArgs{...}
type QuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectConfigOutput() QuickConnectConfigOutput
	ToQuickConnectConfigOutputWithContext(context.Context) QuickConnectConfigOutput
}

// Configuration settings for the quick connect.
type QuickConnectConfigArgs struct {
	PhoneConfig      QuickConnectPhoneNumberQuickConnectConfigPtrInput `pulumi:"phoneConfig"`
	QueueConfig      QuickConnectQueueQuickConnectConfigPtrInput       `pulumi:"queueConfig"`
	QuickConnectType QuickConnectTypeInput                             `pulumi:"quickConnectType"`
	UserConfig       QuickConnectUserQuickConnectConfigPtrInput        `pulumi:"userConfig"`
}

func (QuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectConfigArgs) ToQuickConnectConfigOutput() QuickConnectConfigOutput {
	return i.ToQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectConfigArgs) ToQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectConfigOutput)
}

// Configuration settings for the quick connect.
type QuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectConfigOutput) ToQuickConnectConfigOutput() QuickConnectConfigOutput {
	return o
}

func (o QuickConnectConfigOutput) ToQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectConfigOutput {
	return o
}

func (o QuickConnectConfigOutput) PhoneConfig() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig { return v.PhoneConfig }).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

func (o QuickConnectConfigOutput) QueueConfig() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectQueueQuickConnectConfig { return v.QueueConfig }).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

func (o QuickConnectConfigOutput) QuickConnectType() QuickConnectTypeOutput {
	return o.ApplyT(func(v QuickConnectConfig) QuickConnectType { return v.QuickConnectType }).(QuickConnectTypeOutput)
}

func (o QuickConnectConfigOutput) UserConfig() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectUserQuickConnectConfig { return v.UserConfig }).(QuickConnectUserQuickConnectConfigPtrOutput)
}

type QuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectConfigPtrOutput) ToQuickConnectConfigPtrOutput() QuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectConfigPtrOutput) ToQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectConfigPtrOutput) Elem() QuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectConfig) QuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectConfig
		return ret
	}).(QuickConnectConfigOutput)
}

func (o QuickConnectConfigPtrOutput) PhoneConfig() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.PhoneConfig
	}).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

func (o QuickConnectConfigPtrOutput) QueueConfig() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectQueueQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.QueueConfig
	}).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

func (o QuickConnectConfigPtrOutput) QuickConnectType() QuickConnectTypePtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectType {
		if v == nil {
			return nil
		}
		return &v.QuickConnectType
	}).(QuickConnectTypePtrOutput)
}

func (o QuickConnectConfigPtrOutput) UserConfig() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectUserQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.UserConfig
	}).(QuickConnectUserQuickConnectConfigPtrOutput)
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfig struct {
	PhoneNumber string `pulumi:"phoneNumber"`
}

// QuickConnectPhoneNumberQuickConnectConfigInput is an input type that accepts QuickConnectPhoneNumberQuickConnectConfigArgs and QuickConnectPhoneNumberQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectPhoneNumberQuickConnectConfigInput` via:
//
//	QuickConnectPhoneNumberQuickConnectConfigArgs{...}
type QuickConnectPhoneNumberQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput
	ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfigArgs struct {
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (QuickConnectPhoneNumberQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigOutput)
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigOutput).ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectPhoneNumberQuickConnectConfigPtrInput is an input type that accepts QuickConnectPhoneNumberQuickConnectConfigArgs, QuickConnectPhoneNumberQuickConnectConfigPtr and QuickConnectPhoneNumberQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectPhoneNumberQuickConnectConfigPtrInput` via:
//
//	        QuickConnectPhoneNumberQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectPhoneNumberQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput
	ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput
}

type quickConnectPhoneNumberQuickConnectConfigPtrType QuickConnectPhoneNumberQuickConnectConfigArgs

func QuickConnectPhoneNumberQuickConnectConfigPtr(v *QuickConnectPhoneNumberQuickConnectConfigArgs) QuickConnectPhoneNumberQuickConnectConfigPtrInput {
	return (*quickConnectPhoneNumberQuickConnectConfigPtrType)(v)
}

func (*quickConnectPhoneNumberQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectPhoneNumberQuickConnectConfigPtrType) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectPhoneNumberQuickConnectConfigPtrType) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectPhoneNumberQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectPhoneNumberQuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig {
		return &v
	}).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectPhoneNumberQuickConnectConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type QuickConnectPhoneNumberQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) Elem() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectPhoneNumberQuickConnectConfig) QuickConnectPhoneNumberQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectPhoneNumberQuickConnectConfig
		return ret
	}).(QuickConnectPhoneNumberQuickConnectConfigOutput)
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectPhoneNumberQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfig struct {
	ContactFlowArn string `pulumi:"contactFlowArn"`
	QueueArn       string `pulumi:"queueArn"`
}

// QuickConnectQueueQuickConnectConfigInput is an input type that accepts QuickConnectQueueQuickConnectConfigArgs and QuickConnectQueueQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectQueueQuickConnectConfigInput` via:
//
//	QuickConnectQueueQuickConnectConfigArgs{...}
type QuickConnectQueueQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput
	ToQuickConnectQueueQuickConnectConfigOutputWithContext(context.Context) QuickConnectQueueQuickConnectConfigOutput
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfigArgs struct {
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	QueueArn       pulumi.StringInput `pulumi:"queueArn"`
}

func (QuickConnectQueueQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput {
	return i.ToQuickConnectQueueQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigOutput)
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigOutput).ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectQueueQuickConnectConfigPtrInput is an input type that accepts QuickConnectQueueQuickConnectConfigArgs, QuickConnectQueueQuickConnectConfigPtr and QuickConnectQueueQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectQueueQuickConnectConfigPtrInput` via:
//
//	        QuickConnectQueueQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectQueueQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput
	ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectQueueQuickConnectConfigPtrOutput
}

type quickConnectQueueQuickConnectConfigPtrType QuickConnectQueueQuickConnectConfigArgs

func QuickConnectQueueQuickConnectConfigPtr(v *QuickConnectQueueQuickConnectConfigArgs) QuickConnectQueueQuickConnectConfigPtrInput {
	return (*quickConnectQueueQuickConnectConfigPtrType)(v)
}

func (*quickConnectQueueQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectQueueQuickConnectConfigPtrType) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectQueueQuickConnectConfigPtrType) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQueueQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectQueueQuickConnectConfig) *QuickConnectQueueQuickConnectConfig {
		return &v
	}).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

func (o QuickConnectQueueQuickConnectConfigOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQueueQuickConnectConfig) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

func (o QuickConnectQueueQuickConnectConfigOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQueueQuickConnectConfig) string { return v.QueueArn }).(pulumi.StringOutput)
}

type QuickConnectQueueQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectQueueQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) Elem() QuickConnectQueueQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) QuickConnectQueueQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectQueueQuickConnectConfig
		return ret
	}).(QuickConnectQueueQuickConnectConfigOutput)
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) ContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ContactFlowArn
	}).(pulumi.StringPtrOutput)
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) QueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QueueArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type QuickConnectTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// QuickConnectTagInput is an input type that accepts QuickConnectTagArgs and QuickConnectTagOutput values.
// You can construct a concrete instance of `QuickConnectTagInput` via:
//
//	QuickConnectTagArgs{...}
type QuickConnectTagInput interface {
	pulumi.Input

	ToQuickConnectTagOutput() QuickConnectTagOutput
	ToQuickConnectTagOutputWithContext(context.Context) QuickConnectTagOutput
}

// A key-value pair to associate with a resource.
type QuickConnectTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (QuickConnectTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectTag)(nil)).Elem()
}

func (i QuickConnectTagArgs) ToQuickConnectTagOutput() QuickConnectTagOutput {
	return i.ToQuickConnectTagOutputWithContext(context.Background())
}

func (i QuickConnectTagArgs) ToQuickConnectTagOutputWithContext(ctx context.Context) QuickConnectTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectTagOutput)
}

// QuickConnectTagArrayInput is an input type that accepts QuickConnectTagArray and QuickConnectTagArrayOutput values.
// You can construct a concrete instance of `QuickConnectTagArrayInput` via:
//
//	QuickConnectTagArray{ QuickConnectTagArgs{...} }
type QuickConnectTagArrayInput interface {
	pulumi.Input

	ToQuickConnectTagArrayOutput() QuickConnectTagArrayOutput
	ToQuickConnectTagArrayOutputWithContext(context.Context) QuickConnectTagArrayOutput
}

type QuickConnectTagArray []QuickConnectTagInput

func (QuickConnectTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectTag)(nil)).Elem()
}

func (i QuickConnectTagArray) ToQuickConnectTagArrayOutput() QuickConnectTagArrayOutput {
	return i.ToQuickConnectTagArrayOutputWithContext(context.Background())
}

func (i QuickConnectTagArray) ToQuickConnectTagArrayOutputWithContext(ctx context.Context) QuickConnectTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectTagArrayOutput)
}

// A key-value pair to associate with a resource.
type QuickConnectTagOutput struct{ *pulumi.OutputState }

func (QuickConnectTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectTag)(nil)).Elem()
}

func (o QuickConnectTagOutput) ToQuickConnectTagOutput() QuickConnectTagOutput {
	return o
}

func (o QuickConnectTagOutput) ToQuickConnectTagOutputWithContext(ctx context.Context) QuickConnectTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o QuickConnectTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o QuickConnectTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectTag) string { return v.Value }).(pulumi.StringOutput)
}

type QuickConnectTagArrayOutput struct{ *pulumi.OutputState }

func (QuickConnectTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QuickConnectTag)(nil)).Elem()
}

func (o QuickConnectTagArrayOutput) ToQuickConnectTagArrayOutput() QuickConnectTagArrayOutput {
	return o
}

func (o QuickConnectTagArrayOutput) ToQuickConnectTagArrayOutputWithContext(ctx context.Context) QuickConnectTagArrayOutput {
	return o
}

func (o QuickConnectTagArrayOutput) Index(i pulumi.IntInput) QuickConnectTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QuickConnectTag {
		return vs[0].([]QuickConnectTag)[vs[1].(int)]
	}).(QuickConnectTagOutput)
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfig struct {
	ContactFlowArn string `pulumi:"contactFlowArn"`
	UserArn        string `pulumi:"userArn"`
}

// QuickConnectUserQuickConnectConfigInput is an input type that accepts QuickConnectUserQuickConnectConfigArgs and QuickConnectUserQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectUserQuickConnectConfigInput` via:
//
//	QuickConnectUserQuickConnectConfigArgs{...}
type QuickConnectUserQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput
	ToQuickConnectUserQuickConnectConfigOutputWithContext(context.Context) QuickConnectUserQuickConnectConfigOutput
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfigArgs struct {
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	UserArn        pulumi.StringInput `pulumi:"userArn"`
}

func (QuickConnectUserQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput {
	return i.ToQuickConnectUserQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigOutput)
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return i.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigOutput).ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectUserQuickConnectConfigPtrInput is an input type that accepts QuickConnectUserQuickConnectConfigArgs, QuickConnectUserQuickConnectConfigPtr and QuickConnectUserQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectUserQuickConnectConfigPtrInput` via:
//
//	        QuickConnectUserQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectUserQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput
	ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectUserQuickConnectConfigPtrOutput
}

type quickConnectUserQuickConnectConfigPtrType QuickConnectUserQuickConnectConfigArgs

func QuickConnectUserQuickConnectConfigPtr(v *QuickConnectUserQuickConnectConfigArgs) QuickConnectUserQuickConnectConfigPtrInput {
	return (*quickConnectUserQuickConnectConfigPtrType)(v)
}

func (*quickConnectUserQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectUserQuickConnectConfigPtrType) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return i.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectUserQuickConnectConfigPtrType) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigPtrOutput)
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectUserQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectUserQuickConnectConfig) *QuickConnectUserQuickConnectConfig {
		return &v
	}).(QuickConnectUserQuickConnectConfigPtrOutput)
}

func (o QuickConnectUserQuickConnectConfigOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectUserQuickConnectConfig) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

func (o QuickConnectUserQuickConnectConfigOutput) UserArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectUserQuickConnectConfig) string { return v.UserArn }).(pulumi.StringOutput)
}

type QuickConnectUserQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectUserQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) Elem() QuickConnectUserQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) QuickConnectUserQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectUserQuickConnectConfig
		return ret
	}).(QuickConnectUserQuickConnectConfigOutput)
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) ContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ContactFlowArn
	}).(pulumi.StringPtrOutput)
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) UserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserArn
	}).(pulumi.StringPtrOutput)
}

// The list of actions that will be executed when a rule is triggered.
type RuleActions struct {
	AssignContactCategoryActions []RuleAssignContactCategoryAction `pulumi:"assignContactCategoryActions"`
	EventBridgeActions           []RuleEventBridgeAction           `pulumi:"eventBridgeActions"`
	SendNotificationActions      []RuleSendNotificationAction      `pulumi:"sendNotificationActions"`
	TaskActions                  []RuleTaskAction                  `pulumi:"taskActions"`
}

// RuleActionsInput is an input type that accepts RuleActionsArgs and RuleActionsOutput values.
// You can construct a concrete instance of `RuleActionsInput` via:
//
//	RuleActionsArgs{...}
type RuleActionsInput interface {
	pulumi.Input

	ToRuleActionsOutput() RuleActionsOutput
	ToRuleActionsOutputWithContext(context.Context) RuleActionsOutput
}

// The list of actions that will be executed when a rule is triggered.
type RuleActionsArgs struct {
	AssignContactCategoryActions RuleAssignContactCategoryActionArrayInput `pulumi:"assignContactCategoryActions"`
	EventBridgeActions           RuleEventBridgeActionArrayInput           `pulumi:"eventBridgeActions"`
	SendNotificationActions      RuleSendNotificationActionArrayInput      `pulumi:"sendNotificationActions"`
	TaskActions                  RuleTaskActionArrayInput                  `pulumi:"taskActions"`
}

func (RuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleActions)(nil)).Elem()
}

func (i RuleActionsArgs) ToRuleActionsOutput() RuleActionsOutput {
	return i.ToRuleActionsOutputWithContext(context.Background())
}

func (i RuleActionsArgs) ToRuleActionsOutputWithContext(ctx context.Context) RuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleActionsOutput)
}

// The list of actions that will be executed when a rule is triggered.
type RuleActionsOutput struct{ *pulumi.OutputState }

func (RuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleActions)(nil)).Elem()
}

func (o RuleActionsOutput) ToRuleActionsOutput() RuleActionsOutput {
	return o
}

func (o RuleActionsOutput) ToRuleActionsOutputWithContext(ctx context.Context) RuleActionsOutput {
	return o
}

func (o RuleActionsOutput) AssignContactCategoryActions() RuleAssignContactCategoryActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleAssignContactCategoryAction { return v.AssignContactCategoryActions }).(RuleAssignContactCategoryActionArrayOutput)
}

func (o RuleActionsOutput) EventBridgeActions() RuleEventBridgeActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleEventBridgeAction { return v.EventBridgeActions }).(RuleEventBridgeActionArrayOutput)
}

func (o RuleActionsOutput) SendNotificationActions() RuleSendNotificationActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleSendNotificationAction { return v.SendNotificationActions }).(RuleSendNotificationActionArrayOutput)
}

func (o RuleActionsOutput) TaskActions() RuleTaskActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleTaskAction { return v.TaskActions }).(RuleTaskActionArrayOutput)
}

type RuleActionsPtrOutput struct{ *pulumi.OutputState }

func (RuleActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleActions)(nil)).Elem()
}

func (o RuleActionsPtrOutput) ToRuleActionsPtrOutput() RuleActionsPtrOutput {
	return o
}

func (o RuleActionsPtrOutput) ToRuleActionsPtrOutputWithContext(ctx context.Context) RuleActionsPtrOutput {
	return o
}

func (o RuleActionsPtrOutput) Elem() RuleActionsOutput {
	return o.ApplyT(func(v *RuleActions) RuleActions {
		if v != nil {
			return *v
		}
		var ret RuleActions
		return ret
	}).(RuleActionsOutput)
}

func (o RuleActionsPtrOutput) AssignContactCategoryActions() RuleAssignContactCategoryActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleAssignContactCategoryAction {
		if v == nil {
			return nil
		}
		return v.AssignContactCategoryActions
	}).(RuleAssignContactCategoryActionArrayOutput)
}

func (o RuleActionsPtrOutput) EventBridgeActions() RuleEventBridgeActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleEventBridgeAction {
		if v == nil {
			return nil
		}
		return v.EventBridgeActions
	}).(RuleEventBridgeActionArrayOutput)
}

func (o RuleActionsPtrOutput) SendNotificationActions() RuleSendNotificationActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleSendNotificationAction {
		if v == nil {
			return nil
		}
		return v.SendNotificationActions
	}).(RuleSendNotificationActionArrayOutput)
}

func (o RuleActionsPtrOutput) TaskActions() RuleTaskActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleTaskAction {
		if v == nil {
			return nil
		}
		return v.TaskActions
	}).(RuleTaskActionArrayOutput)
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryAction struct {
}

// RuleAssignContactCategoryActionInput is an input type that accepts RuleAssignContactCategoryActionArgs and RuleAssignContactCategoryActionOutput values.
// You can construct a concrete instance of `RuleAssignContactCategoryActionInput` via:
//
//	RuleAssignContactCategoryActionArgs{...}
type RuleAssignContactCategoryActionInput interface {
	pulumi.Input

	ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput
	ToRuleAssignContactCategoryActionOutputWithContext(context.Context) RuleAssignContactCategoryActionOutput
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryActionArgs struct {
}

func (RuleAssignContactCategoryActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAssignContactCategoryAction)(nil)).Elem()
}

func (i RuleAssignContactCategoryActionArgs) ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput {
	return i.ToRuleAssignContactCategoryActionOutputWithContext(context.Background())
}

func (i RuleAssignContactCategoryActionArgs) ToRuleAssignContactCategoryActionOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAssignContactCategoryActionOutput)
}

// RuleAssignContactCategoryActionArrayInput is an input type that accepts RuleAssignContactCategoryActionArray and RuleAssignContactCategoryActionArrayOutput values.
// You can construct a concrete instance of `RuleAssignContactCategoryActionArrayInput` via:
//
//	RuleAssignContactCategoryActionArray{ RuleAssignContactCategoryActionArgs{...} }
type RuleAssignContactCategoryActionArrayInput interface {
	pulumi.Input

	ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput
	ToRuleAssignContactCategoryActionArrayOutputWithContext(context.Context) RuleAssignContactCategoryActionArrayOutput
}

type RuleAssignContactCategoryActionArray []RuleAssignContactCategoryActionInput

func (RuleAssignContactCategoryActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAssignContactCategoryAction)(nil)).Elem()
}

func (i RuleAssignContactCategoryActionArray) ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput {
	return i.ToRuleAssignContactCategoryActionArrayOutputWithContext(context.Background())
}

func (i RuleAssignContactCategoryActionArray) ToRuleAssignContactCategoryActionArrayOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAssignContactCategoryActionArrayOutput)
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryActionOutput struct{ *pulumi.OutputState }

func (RuleAssignContactCategoryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAssignContactCategoryAction)(nil)).Elem()
}

func (o RuleAssignContactCategoryActionOutput) ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput {
	return o
}

func (o RuleAssignContactCategoryActionOutput) ToRuleAssignContactCategoryActionOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionOutput {
	return o
}

type RuleAssignContactCategoryActionArrayOutput struct{ *pulumi.OutputState }

func (RuleAssignContactCategoryActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAssignContactCategoryAction)(nil)).Elem()
}

func (o RuleAssignContactCategoryActionArrayOutput) ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput {
	return o
}

func (o RuleAssignContactCategoryActionArrayOutput) ToRuleAssignContactCategoryActionArrayOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionArrayOutput {
	return o
}

func (o RuleAssignContactCategoryActionArrayOutput) Index(i pulumi.IntInput) RuleAssignContactCategoryActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleAssignContactCategoryAction {
		return vs[0].([]RuleAssignContactCategoryAction)[vs[1].(int)]
	}).(RuleAssignContactCategoryActionOutput)
}

// The definition for event bridge action.
type RuleEventBridgeAction struct {
	// The name of the event bridge action.
	Name string `pulumi:"name"`
}

// RuleEventBridgeActionInput is an input type that accepts RuleEventBridgeActionArgs and RuleEventBridgeActionOutput values.
// You can construct a concrete instance of `RuleEventBridgeActionInput` via:
//
//	RuleEventBridgeActionArgs{...}
type RuleEventBridgeActionInput interface {
	pulumi.Input

	ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput
	ToRuleEventBridgeActionOutputWithContext(context.Context) RuleEventBridgeActionOutput
}

// The definition for event bridge action.
type RuleEventBridgeActionArgs struct {
	// The name of the event bridge action.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RuleEventBridgeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEventBridgeAction)(nil)).Elem()
}

func (i RuleEventBridgeActionArgs) ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput {
	return i.ToRuleEventBridgeActionOutputWithContext(context.Background())
}

func (i RuleEventBridgeActionArgs) ToRuleEventBridgeActionOutputWithContext(ctx context.Context) RuleEventBridgeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEventBridgeActionOutput)
}

// RuleEventBridgeActionArrayInput is an input type that accepts RuleEventBridgeActionArray and RuleEventBridgeActionArrayOutput values.
// You can construct a concrete instance of `RuleEventBridgeActionArrayInput` via:
//
//	RuleEventBridgeActionArray{ RuleEventBridgeActionArgs{...} }
type RuleEventBridgeActionArrayInput interface {
	pulumi.Input

	ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput
	ToRuleEventBridgeActionArrayOutputWithContext(context.Context) RuleEventBridgeActionArrayOutput
}

type RuleEventBridgeActionArray []RuleEventBridgeActionInput

func (RuleEventBridgeActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEventBridgeAction)(nil)).Elem()
}

func (i RuleEventBridgeActionArray) ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput {
	return i.ToRuleEventBridgeActionArrayOutputWithContext(context.Background())
}

func (i RuleEventBridgeActionArray) ToRuleEventBridgeActionArrayOutputWithContext(ctx context.Context) RuleEventBridgeActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEventBridgeActionArrayOutput)
}

// The definition for event bridge action.
type RuleEventBridgeActionOutput struct{ *pulumi.OutputState }

func (RuleEventBridgeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEventBridgeAction)(nil)).Elem()
}

func (o RuleEventBridgeActionOutput) ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput {
	return o
}

func (o RuleEventBridgeActionOutput) ToRuleEventBridgeActionOutputWithContext(ctx context.Context) RuleEventBridgeActionOutput {
	return o
}

// The name of the event bridge action.
func (o RuleEventBridgeActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEventBridgeAction) string { return v.Name }).(pulumi.StringOutput)
}

type RuleEventBridgeActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEventBridgeActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEventBridgeAction)(nil)).Elem()
}

func (o RuleEventBridgeActionArrayOutput) ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput {
	return o
}

func (o RuleEventBridgeActionArrayOutput) ToRuleEventBridgeActionArrayOutputWithContext(ctx context.Context) RuleEventBridgeActionArrayOutput {
	return o
}

func (o RuleEventBridgeActionArrayOutput) Index(i pulumi.IntInput) RuleEventBridgeActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEventBridgeAction {
		return vs[0].([]RuleEventBridgeAction)[vs[1].(int)]
	}).(RuleEventBridgeActionOutput)
}

// The type of notification recipient.
type RuleNotificationRecipientType struct {
	// The list of recipients by user arns.
	UserArns []string `pulumi:"userArns"`
	// The collection of recipients who are identified by user tags
	UserTags interface{} `pulumi:"userTags"`
}

// RuleNotificationRecipientTypeInput is an input type that accepts RuleNotificationRecipientTypeArgs and RuleNotificationRecipientTypeOutput values.
// You can construct a concrete instance of `RuleNotificationRecipientTypeInput` via:
//
//	RuleNotificationRecipientTypeArgs{...}
type RuleNotificationRecipientTypeInput interface {
	pulumi.Input

	ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput
	ToRuleNotificationRecipientTypeOutputWithContext(context.Context) RuleNotificationRecipientTypeOutput
}

// The type of notification recipient.
type RuleNotificationRecipientTypeArgs struct {
	// The list of recipients by user arns.
	UserArns pulumi.StringArrayInput `pulumi:"userArns"`
	// The collection of recipients who are identified by user tags
	UserTags pulumi.Input `pulumi:"userTags"`
}

func (RuleNotificationRecipientTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNotificationRecipientType)(nil)).Elem()
}

func (i RuleNotificationRecipientTypeArgs) ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput {
	return i.ToRuleNotificationRecipientTypeOutputWithContext(context.Background())
}

func (i RuleNotificationRecipientTypeArgs) ToRuleNotificationRecipientTypeOutputWithContext(ctx context.Context) RuleNotificationRecipientTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleNotificationRecipientTypeOutput)
}

// The type of notification recipient.
type RuleNotificationRecipientTypeOutput struct{ *pulumi.OutputState }

func (RuleNotificationRecipientTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNotificationRecipientType)(nil)).Elem()
}

func (o RuleNotificationRecipientTypeOutput) ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput {
	return o
}

func (o RuleNotificationRecipientTypeOutput) ToRuleNotificationRecipientTypeOutputWithContext(ctx context.Context) RuleNotificationRecipientTypeOutput {
	return o
}

// The list of recipients by user arns.
func (o RuleNotificationRecipientTypeOutput) UserArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleNotificationRecipientType) []string { return v.UserArns }).(pulumi.StringArrayOutput)
}

// The collection of recipients who are identified by user tags
func (o RuleNotificationRecipientTypeOutput) UserTags() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleNotificationRecipientType) interface{} { return v.UserTags }).(pulumi.AnyOutput)
}

// The definition for sending notification action.
type RuleSendNotificationAction struct {
	// The content of notification.
	Content string `pulumi:"content"`
	// The type of content.
	ContentType RuleSendNotificationActionContentType `pulumi:"contentType"`
	// The means of delivery.
	DeliveryMethod RuleSendNotificationActionDeliveryMethod `pulumi:"deliveryMethod"`
	Recipient      RuleNotificationRecipientType            `pulumi:"recipient"`
	// The subject of notification.
	Subject *string `pulumi:"subject"`
}

// RuleSendNotificationActionInput is an input type that accepts RuleSendNotificationActionArgs and RuleSendNotificationActionOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionInput` via:
//
//	RuleSendNotificationActionArgs{...}
type RuleSendNotificationActionInput interface {
	pulumi.Input

	ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput
	ToRuleSendNotificationActionOutputWithContext(context.Context) RuleSendNotificationActionOutput
}

// The definition for sending notification action.
type RuleSendNotificationActionArgs struct {
	// The content of notification.
	Content pulumi.StringInput `pulumi:"content"`
	// The type of content.
	ContentType RuleSendNotificationActionContentTypeInput `pulumi:"contentType"`
	// The means of delivery.
	DeliveryMethod RuleSendNotificationActionDeliveryMethodInput `pulumi:"deliveryMethod"`
	Recipient      RuleNotificationRecipientTypeInput            `pulumi:"recipient"`
	// The subject of notification.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
}

func (RuleSendNotificationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationAction)(nil)).Elem()
}

func (i RuleSendNotificationActionArgs) ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput {
	return i.ToRuleSendNotificationActionOutputWithContext(context.Background())
}

func (i RuleSendNotificationActionArgs) ToRuleSendNotificationActionOutputWithContext(ctx context.Context) RuleSendNotificationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSendNotificationActionOutput)
}

// RuleSendNotificationActionArrayInput is an input type that accepts RuleSendNotificationActionArray and RuleSendNotificationActionArrayOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionArrayInput` via:
//
//	RuleSendNotificationActionArray{ RuleSendNotificationActionArgs{...} }
type RuleSendNotificationActionArrayInput interface {
	pulumi.Input

	ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput
	ToRuleSendNotificationActionArrayOutputWithContext(context.Context) RuleSendNotificationActionArrayOutput
}

type RuleSendNotificationActionArray []RuleSendNotificationActionInput

func (RuleSendNotificationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSendNotificationAction)(nil)).Elem()
}

func (i RuleSendNotificationActionArray) ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput {
	return i.ToRuleSendNotificationActionArrayOutputWithContext(context.Background())
}

func (i RuleSendNotificationActionArray) ToRuleSendNotificationActionArrayOutputWithContext(ctx context.Context) RuleSendNotificationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSendNotificationActionArrayOutput)
}

// The definition for sending notification action.
type RuleSendNotificationActionOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationAction)(nil)).Elem()
}

func (o RuleSendNotificationActionOutput) ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput {
	return o
}

func (o RuleSendNotificationActionOutput) ToRuleSendNotificationActionOutputWithContext(ctx context.Context) RuleSendNotificationActionOutput {
	return o
}

// The content of notification.
func (o RuleSendNotificationActionOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) string { return v.Content }).(pulumi.StringOutput)
}

// The type of content.
func (o RuleSendNotificationActionOutput) ContentType() RuleSendNotificationActionContentTypeOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleSendNotificationActionContentType { return v.ContentType }).(RuleSendNotificationActionContentTypeOutput)
}

// The means of delivery.
func (o RuleSendNotificationActionOutput) DeliveryMethod() RuleSendNotificationActionDeliveryMethodOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleSendNotificationActionDeliveryMethod { return v.DeliveryMethod }).(RuleSendNotificationActionDeliveryMethodOutput)
}

func (o RuleSendNotificationActionOutput) Recipient() RuleNotificationRecipientTypeOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleNotificationRecipientType { return v.Recipient }).(RuleNotificationRecipientTypeOutput)
}

// The subject of notification.
func (o RuleSendNotificationActionOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionArrayOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSendNotificationAction)(nil)).Elem()
}

func (o RuleSendNotificationActionArrayOutput) ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput {
	return o
}

func (o RuleSendNotificationActionArrayOutput) ToRuleSendNotificationActionArrayOutputWithContext(ctx context.Context) RuleSendNotificationActionArrayOutput {
	return o
}

func (o RuleSendNotificationActionArrayOutput) Index(i pulumi.IntInput) RuleSendNotificationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleSendNotificationAction {
		return vs[0].([]RuleSendNotificationAction)[vs[1].(int)]
	}).(RuleSendNotificationActionOutput)
}

// A key-value pair to associate with a resource.
type RuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value string `pulumi:"value"`
}

// RuleTagInput is an input type that accepts RuleTagArgs and RuleTagOutput values.
// You can construct a concrete instance of `RuleTagInput` via:
//
//	RuleTagArgs{...}
type RuleTagInput interface {
	pulumi.Input

	ToRuleTagOutput() RuleTagOutput
	ToRuleTagOutputWithContext(context.Context) RuleTagOutput
}

// A key-value pair to associate with a resource.
type RuleTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that's 1 to 256 characters in length.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTag)(nil)).Elem()
}

func (i RuleTagArgs) ToRuleTagOutput() RuleTagOutput {
	return i.ToRuleTagOutputWithContext(context.Background())
}

func (i RuleTagArgs) ToRuleTagOutputWithContext(ctx context.Context) RuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTagOutput)
}

// RuleTagArrayInput is an input type that accepts RuleTagArray and RuleTagArrayOutput values.
// You can construct a concrete instance of `RuleTagArrayInput` via:
//
//	RuleTagArray{ RuleTagArgs{...} }
type RuleTagArrayInput interface {
	pulumi.Input

	ToRuleTagArrayOutput() RuleTagArrayOutput
	ToRuleTagArrayOutputWithContext(context.Context) RuleTagArrayOutput
}

type RuleTagArray []RuleTagInput

func (RuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTag)(nil)).Elem()
}

func (i RuleTagArray) ToRuleTagArrayOutput() RuleTagArrayOutput {
	return i.ToRuleTagArrayOutputWithContext(context.Background())
}

func (i RuleTagArray) ToRuleTagArrayOutputWithContext(ctx context.Context) RuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTagArrayOutput)
}

// A key-value pair to associate with a resource.
type RuleTagOutput struct{ *pulumi.OutputState }

func (RuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTag)(nil)).Elem()
}

func (o RuleTagOutput) ToRuleTagOutput() RuleTagOutput {
	return o
}

func (o RuleTagOutput) ToRuleTagOutputWithContext(ctx context.Context) RuleTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o RuleTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that's 1 to 256 characters in length.
func (o RuleTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTag) string { return v.Value }).(pulumi.StringOutput)
}

type RuleTagArrayOutput struct{ *pulumi.OutputState }

func (RuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTag)(nil)).Elem()
}

func (o RuleTagArrayOutput) ToRuleTagArrayOutput() RuleTagArrayOutput {
	return o
}

func (o RuleTagArrayOutput) ToRuleTagArrayOutputWithContext(ctx context.Context) RuleTagArrayOutput {
	return o
}

func (o RuleTagArrayOutput) Index(i pulumi.IntInput) RuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleTag {
		return vs[0].([]RuleTag)[vs[1].(int)]
	}).(RuleTagOutput)
}

// The definition of task action.
type RuleTaskAction struct {
	// The Amazon Resource Name (ARN) of the contact flow.
	ContactFlowArn string `pulumi:"contactFlowArn"`
	// The description which appears in the agent's Contact Control Panel (CCP).
	Description *string `pulumi:"description"`
	// The name which appears in the agent's Contact Control Panel (CCP).
	Name string `pulumi:"name"`
	// A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
	References interface{} `pulumi:"references"`
}

// RuleTaskActionInput is an input type that accepts RuleTaskActionArgs and RuleTaskActionOutput values.
// You can construct a concrete instance of `RuleTaskActionInput` via:
//
//	RuleTaskActionArgs{...}
type RuleTaskActionInput interface {
	pulumi.Input

	ToRuleTaskActionOutput() RuleTaskActionOutput
	ToRuleTaskActionOutputWithContext(context.Context) RuleTaskActionOutput
}

// The definition of task action.
type RuleTaskActionArgs struct {
	// The Amazon Resource Name (ARN) of the contact flow.
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	// The description which appears in the agent's Contact Control Panel (CCP).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name which appears in the agent's Contact Control Panel (CCP).
	Name pulumi.StringInput `pulumi:"name"`
	// A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
	References pulumi.Input `pulumi:"references"`
}

func (RuleTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTaskAction)(nil)).Elem()
}

func (i RuleTaskActionArgs) ToRuleTaskActionOutput() RuleTaskActionOutput {
	return i.ToRuleTaskActionOutputWithContext(context.Background())
}

func (i RuleTaskActionArgs) ToRuleTaskActionOutputWithContext(ctx context.Context) RuleTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTaskActionOutput)
}

// RuleTaskActionArrayInput is an input type that accepts RuleTaskActionArray and RuleTaskActionArrayOutput values.
// You can construct a concrete instance of `RuleTaskActionArrayInput` via:
//
//	RuleTaskActionArray{ RuleTaskActionArgs{...} }
type RuleTaskActionArrayInput interface {
	pulumi.Input

	ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput
	ToRuleTaskActionArrayOutputWithContext(context.Context) RuleTaskActionArrayOutput
}

type RuleTaskActionArray []RuleTaskActionInput

func (RuleTaskActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTaskAction)(nil)).Elem()
}

func (i RuleTaskActionArray) ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput {
	return i.ToRuleTaskActionArrayOutputWithContext(context.Background())
}

func (i RuleTaskActionArray) ToRuleTaskActionArrayOutputWithContext(ctx context.Context) RuleTaskActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTaskActionArrayOutput)
}

// The definition of task action.
type RuleTaskActionOutput struct{ *pulumi.OutputState }

func (RuleTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTaskAction)(nil)).Elem()
}

func (o RuleTaskActionOutput) ToRuleTaskActionOutput() RuleTaskActionOutput {
	return o
}

func (o RuleTaskActionOutput) ToRuleTaskActionOutputWithContext(ctx context.Context) RuleTaskActionOutput {
	return o
}

// The Amazon Resource Name (ARN) of the contact flow.
func (o RuleTaskActionOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTaskAction) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

// The description which appears in the agent's Contact Control Panel (CCP).
func (o RuleTaskActionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTaskAction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which appears in the agent's Contact Control Panel (CCP).
func (o RuleTaskActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTaskAction) string { return v.Name }).(pulumi.StringOutput)
}

// A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
func (o RuleTaskActionOutput) References() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleTaskAction) interface{} { return v.References }).(pulumi.AnyOutput)
}

type RuleTaskActionArrayOutput struct{ *pulumi.OutputState }

func (RuleTaskActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTaskAction)(nil)).Elem()
}

func (o RuleTaskActionArrayOutput) ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput {
	return o
}

func (o RuleTaskActionArrayOutput) ToRuleTaskActionArrayOutputWithContext(ctx context.Context) RuleTaskActionArrayOutput {
	return o
}

func (o RuleTaskActionArrayOutput) Index(i pulumi.IntInput) RuleTaskActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleTaskAction {
		return vs[0].([]RuleTaskAction)[vs[1].(int)]
	}).(RuleTaskActionOutput)
}

// The event source that will trigger the rule.
type RuleTriggerEventSource struct {
	// The name of event source.
	EventSourceName RuleTriggerEventSourceEventSourceName `pulumi:"eventSourceName"`
	// The Amazon Resource Name (ARN) for the AppIntegration association.
	IntegrationAssociationArn *string `pulumi:"integrationAssociationArn"`
}

// RuleTriggerEventSourceInput is an input type that accepts RuleTriggerEventSourceArgs and RuleTriggerEventSourceOutput values.
// You can construct a concrete instance of `RuleTriggerEventSourceInput` via:
//
//	RuleTriggerEventSourceArgs{...}
type RuleTriggerEventSourceInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput
	ToRuleTriggerEventSourceOutputWithContext(context.Context) RuleTriggerEventSourceOutput
}

// The event source that will trigger the rule.
type RuleTriggerEventSourceArgs struct {
	// The name of event source.
	EventSourceName RuleTriggerEventSourceEventSourceNameInput `pulumi:"eventSourceName"`
	// The Amazon Resource Name (ARN) for the AppIntegration association.
	IntegrationAssociationArn pulumi.StringPtrInput `pulumi:"integrationAssociationArn"`
}

func (RuleTriggerEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSource)(nil)).Elem()
}

func (i RuleTriggerEventSourceArgs) ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput {
	return i.ToRuleTriggerEventSourceOutputWithContext(context.Background())
}

func (i RuleTriggerEventSourceArgs) ToRuleTriggerEventSourceOutputWithContext(ctx context.Context) RuleTriggerEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTriggerEventSourceOutput)
}

// The event source that will trigger the rule.
type RuleTriggerEventSourceOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSource)(nil)).Elem()
}

func (o RuleTriggerEventSourceOutput) ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput {
	return o
}

func (o RuleTriggerEventSourceOutput) ToRuleTriggerEventSourceOutputWithContext(ctx context.Context) RuleTriggerEventSourceOutput {
	return o
}

// The name of event source.
func (o RuleTriggerEventSourceOutput) EventSourceName() RuleTriggerEventSourceEventSourceNameOutput {
	return o.ApplyT(func(v RuleTriggerEventSource) RuleTriggerEventSourceEventSourceName { return v.EventSourceName }).(RuleTriggerEventSourceEventSourceNameOutput)
}

// The Amazon Resource Name (ARN) for the AppIntegration association.
func (o RuleTriggerEventSourceOutput) IntegrationAssociationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTriggerEventSource) *string { return v.IntegrationAssociationArn }).(pulumi.StringPtrOutput)
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValue struct {
	DefaultValue string                      `pulumi:"defaultValue"`
	Id           TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateDefaultFieldValueInput is an input type that accepts TaskTemplateDefaultFieldValueArgs and TaskTemplateDefaultFieldValueOutput values.
// You can construct a concrete instance of `TaskTemplateDefaultFieldValueInput` via:
//
//	TaskTemplateDefaultFieldValueArgs{...}
type TaskTemplateDefaultFieldValueInput interface {
	pulumi.Input

	ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput
	ToTaskTemplateDefaultFieldValueOutputWithContext(context.Context) TaskTemplateDefaultFieldValueOutput
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValueArgs struct {
	DefaultValue pulumi.StringInput               `pulumi:"defaultValue"`
	Id           TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateDefaultFieldValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (i TaskTemplateDefaultFieldValueArgs) ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput {
	return i.ToTaskTemplateDefaultFieldValueOutputWithContext(context.Background())
}

func (i TaskTemplateDefaultFieldValueArgs) ToTaskTemplateDefaultFieldValueOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateDefaultFieldValueOutput)
}

// TaskTemplateDefaultFieldValueArrayInput is an input type that accepts TaskTemplateDefaultFieldValueArray and TaskTemplateDefaultFieldValueArrayOutput values.
// You can construct a concrete instance of `TaskTemplateDefaultFieldValueArrayInput` via:
//
//	TaskTemplateDefaultFieldValueArray{ TaskTemplateDefaultFieldValueArgs{...} }
type TaskTemplateDefaultFieldValueArrayInput interface {
	pulumi.Input

	ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput
	ToTaskTemplateDefaultFieldValueArrayOutputWithContext(context.Context) TaskTemplateDefaultFieldValueArrayOutput
}

type TaskTemplateDefaultFieldValueArray []TaskTemplateDefaultFieldValueInput

func (TaskTemplateDefaultFieldValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (i TaskTemplateDefaultFieldValueArray) ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput {
	return i.ToTaskTemplateDefaultFieldValueArrayOutputWithContext(context.Background())
}

func (i TaskTemplateDefaultFieldValueArray) ToTaskTemplateDefaultFieldValueArrayOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateDefaultFieldValueArrayOutput)
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValueOutput struct{ *pulumi.OutputState }

func (TaskTemplateDefaultFieldValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (o TaskTemplateDefaultFieldValueOutput) ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueOutput) ToTaskTemplateDefaultFieldValueOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateDefaultFieldValue) string { return v.DefaultValue }).(pulumi.StringOutput)
}

func (o TaskTemplateDefaultFieldValueOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateDefaultFieldValue) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateDefaultFieldValueArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateDefaultFieldValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (o TaskTemplateDefaultFieldValueArrayOutput) ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueArrayOutput) ToTaskTemplateDefaultFieldValueArrayOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueArrayOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueArrayOutput) Index(i pulumi.IntInput) TaskTemplateDefaultFieldValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateDefaultFieldValue {
		return vs[0].([]TaskTemplateDefaultFieldValue)[vs[1].(int)]
	}).(TaskTemplateDefaultFieldValueOutput)
}

// A task template field object.
type TaskTemplateField struct {
	// The description of the task template's field
	Description *string                     `pulumi:"description"`
	Id          TaskTemplateFieldIdentifier `pulumi:"id"`
	// list of field options to be used with single select
	SingleSelectOptions []string              `pulumi:"singleSelectOptions"`
	Type                TaskTemplateFieldType `pulumi:"type"`
}

// TaskTemplateFieldInput is an input type that accepts TaskTemplateFieldArgs and TaskTemplateFieldOutput values.
// You can construct a concrete instance of `TaskTemplateFieldInput` via:
//
//	TaskTemplateFieldArgs{...}
type TaskTemplateFieldInput interface {
	pulumi.Input

	ToTaskTemplateFieldOutput() TaskTemplateFieldOutput
	ToTaskTemplateFieldOutputWithContext(context.Context) TaskTemplateFieldOutput
}

// A task template field object.
type TaskTemplateFieldArgs struct {
	// The description of the task template's field
	Description pulumi.StringPtrInput            `pulumi:"description"`
	Id          TaskTemplateFieldIdentifierInput `pulumi:"id"`
	// list of field options to be used with single select
	SingleSelectOptions pulumi.StringArrayInput    `pulumi:"singleSelectOptions"`
	Type                TaskTemplateFieldTypeInput `pulumi:"type"`
}

func (TaskTemplateFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateField)(nil)).Elem()
}

func (i TaskTemplateFieldArgs) ToTaskTemplateFieldOutput() TaskTemplateFieldOutput {
	return i.ToTaskTemplateFieldOutputWithContext(context.Background())
}

func (i TaskTemplateFieldArgs) ToTaskTemplateFieldOutputWithContext(ctx context.Context) TaskTemplateFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldOutput)
}

// TaskTemplateFieldArrayInput is an input type that accepts TaskTemplateFieldArray and TaskTemplateFieldArrayOutput values.
// You can construct a concrete instance of `TaskTemplateFieldArrayInput` via:
//
//	TaskTemplateFieldArray{ TaskTemplateFieldArgs{...} }
type TaskTemplateFieldArrayInput interface {
	pulumi.Input

	ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput
	ToTaskTemplateFieldArrayOutputWithContext(context.Context) TaskTemplateFieldArrayOutput
}

type TaskTemplateFieldArray []TaskTemplateFieldInput

func (TaskTemplateFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateField)(nil)).Elem()
}

func (i TaskTemplateFieldArray) ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput {
	return i.ToTaskTemplateFieldArrayOutputWithContext(context.Background())
}

func (i TaskTemplateFieldArray) ToTaskTemplateFieldArrayOutputWithContext(ctx context.Context) TaskTemplateFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldArrayOutput)
}

// A task template field object.
type TaskTemplateFieldOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateField)(nil)).Elem()
}

func (o TaskTemplateFieldOutput) ToTaskTemplateFieldOutput() TaskTemplateFieldOutput {
	return o
}

func (o TaskTemplateFieldOutput) ToTaskTemplateFieldOutputWithContext(ctx context.Context) TaskTemplateFieldOutput {
	return o
}

// The description of the task template's field
func (o TaskTemplateFieldOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskTemplateField) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TaskTemplateFieldOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateField) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

// list of field options to be used with single select
func (o TaskTemplateFieldOutput) SingleSelectOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskTemplateField) []string { return v.SingleSelectOptions }).(pulumi.StringArrayOutput)
}

func (o TaskTemplateFieldOutput) Type() TaskTemplateFieldTypeOutput {
	return o.ApplyT(func(v TaskTemplateField) TaskTemplateFieldType { return v.Type }).(TaskTemplateFieldTypeOutput)
}

type TaskTemplateFieldArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateField)(nil)).Elem()
}

func (o TaskTemplateFieldArrayOutput) ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput {
	return o
}

func (o TaskTemplateFieldArrayOutput) ToTaskTemplateFieldArrayOutputWithContext(ctx context.Context) TaskTemplateFieldArrayOutput {
	return o
}

func (o TaskTemplateFieldArrayOutput) Index(i pulumi.IntInput) TaskTemplateFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateField {
		return vs[0].([]TaskTemplateField)[vs[1].(int)]
	}).(TaskTemplateFieldOutput)
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifier struct {
	// The name of the task template field
	Name string `pulumi:"name"`
}

// TaskTemplateFieldIdentifierInput is an input type that accepts TaskTemplateFieldIdentifierArgs and TaskTemplateFieldIdentifierOutput values.
// You can construct a concrete instance of `TaskTemplateFieldIdentifierInput` via:
//
//	TaskTemplateFieldIdentifierArgs{...}
type TaskTemplateFieldIdentifierInput interface {
	pulumi.Input

	ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput
	ToTaskTemplateFieldIdentifierOutputWithContext(context.Context) TaskTemplateFieldIdentifierOutput
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifierArgs struct {
	// The name of the task template field
	Name pulumi.StringInput `pulumi:"name"`
}

func (TaskTemplateFieldIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldIdentifier)(nil)).Elem()
}

func (i TaskTemplateFieldIdentifierArgs) ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput {
	return i.ToTaskTemplateFieldIdentifierOutputWithContext(context.Background())
}

func (i TaskTemplateFieldIdentifierArgs) ToTaskTemplateFieldIdentifierOutputWithContext(ctx context.Context) TaskTemplateFieldIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldIdentifierOutput)
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifierOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldIdentifier)(nil)).Elem()
}

func (o TaskTemplateFieldIdentifierOutput) ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput {
	return o
}

func (o TaskTemplateFieldIdentifierOutput) ToTaskTemplateFieldIdentifierOutputWithContext(ctx context.Context) TaskTemplateFieldIdentifierOutput {
	return o
}

// The name of the task template field
func (o TaskTemplateFieldIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateFieldIdentifier) string { return v.Name }).(pulumi.StringOutput)
}

// Invisible field info
type TaskTemplateInvisibleFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateInvisibleFieldInfoInput is an input type that accepts TaskTemplateInvisibleFieldInfoArgs and TaskTemplateInvisibleFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateInvisibleFieldInfoInput` via:
//
//	TaskTemplateInvisibleFieldInfoArgs{...}
type TaskTemplateInvisibleFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput
	ToTaskTemplateInvisibleFieldInfoOutputWithContext(context.Context) TaskTemplateInvisibleFieldInfoOutput
}

// Invisible field info
type TaskTemplateInvisibleFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateInvisibleFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (i TaskTemplateInvisibleFieldInfoArgs) ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput {
	return i.ToTaskTemplateInvisibleFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateInvisibleFieldInfoArgs) ToTaskTemplateInvisibleFieldInfoOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateInvisibleFieldInfoOutput)
}

// TaskTemplateInvisibleFieldInfoArrayInput is an input type that accepts TaskTemplateInvisibleFieldInfoArray and TaskTemplateInvisibleFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateInvisibleFieldInfoArrayInput` via:
//
//	TaskTemplateInvisibleFieldInfoArray{ TaskTemplateInvisibleFieldInfoArgs{...} }
type TaskTemplateInvisibleFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput
	ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(context.Context) TaskTemplateInvisibleFieldInfoArrayOutput
}

type TaskTemplateInvisibleFieldInfoArray []TaskTemplateInvisibleFieldInfoInput

func (TaskTemplateInvisibleFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (i TaskTemplateInvisibleFieldInfoArray) ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput {
	return i.ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateInvisibleFieldInfoArray) ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

// Invisible field info
type TaskTemplateInvisibleFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateInvisibleFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (o TaskTemplateInvisibleFieldInfoOutput) ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoOutput) ToTaskTemplateInvisibleFieldInfoOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateInvisibleFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateInvisibleFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateInvisibleFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateInvisibleFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateInvisibleFieldInfo {
		return vs[0].([]TaskTemplateInvisibleFieldInfo)[vs[1].(int)]
	}).(TaskTemplateInvisibleFieldInfoOutput)
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateReadOnlyFieldInfoInput is an input type that accepts TaskTemplateReadOnlyFieldInfoArgs and TaskTemplateReadOnlyFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateReadOnlyFieldInfoInput` via:
//
//	TaskTemplateReadOnlyFieldInfoArgs{...}
type TaskTemplateReadOnlyFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput
	ToTaskTemplateReadOnlyFieldInfoOutputWithContext(context.Context) TaskTemplateReadOnlyFieldInfoOutput
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateReadOnlyFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (i TaskTemplateReadOnlyFieldInfoArgs) ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput {
	return i.ToTaskTemplateReadOnlyFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateReadOnlyFieldInfoArgs) ToTaskTemplateReadOnlyFieldInfoOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateReadOnlyFieldInfoOutput)
}

// TaskTemplateReadOnlyFieldInfoArrayInput is an input type that accepts TaskTemplateReadOnlyFieldInfoArray and TaskTemplateReadOnlyFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateReadOnlyFieldInfoArrayInput` via:
//
//	TaskTemplateReadOnlyFieldInfoArray{ TaskTemplateReadOnlyFieldInfoArgs{...} }
type TaskTemplateReadOnlyFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput
	ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput
}

type TaskTemplateReadOnlyFieldInfoArray []TaskTemplateReadOnlyFieldInfoInput

func (TaskTemplateReadOnlyFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (i TaskTemplateReadOnlyFieldInfoArray) ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return i.ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateReadOnlyFieldInfoArray) ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateReadOnlyFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (o TaskTemplateReadOnlyFieldInfoOutput) ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoOutput) ToTaskTemplateReadOnlyFieldInfoOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateReadOnlyFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateReadOnlyFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateReadOnlyFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateReadOnlyFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateReadOnlyFieldInfo {
		return vs[0].([]TaskTemplateReadOnlyFieldInfo)[vs[1].(int)]
	}).(TaskTemplateReadOnlyFieldInfoOutput)
}

// Required field info
type TaskTemplateRequiredFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateRequiredFieldInfoInput is an input type that accepts TaskTemplateRequiredFieldInfoArgs and TaskTemplateRequiredFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateRequiredFieldInfoInput` via:
//
//	TaskTemplateRequiredFieldInfoArgs{...}
type TaskTemplateRequiredFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput
	ToTaskTemplateRequiredFieldInfoOutputWithContext(context.Context) TaskTemplateRequiredFieldInfoOutput
}

// Required field info
type TaskTemplateRequiredFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateRequiredFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (i TaskTemplateRequiredFieldInfoArgs) ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput {
	return i.ToTaskTemplateRequiredFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateRequiredFieldInfoArgs) ToTaskTemplateRequiredFieldInfoOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateRequiredFieldInfoOutput)
}

// TaskTemplateRequiredFieldInfoArrayInput is an input type that accepts TaskTemplateRequiredFieldInfoArray and TaskTemplateRequiredFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateRequiredFieldInfoArrayInput` via:
//
//	TaskTemplateRequiredFieldInfoArray{ TaskTemplateRequiredFieldInfoArgs{...} }
type TaskTemplateRequiredFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput
	ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(context.Context) TaskTemplateRequiredFieldInfoArrayOutput
}

type TaskTemplateRequiredFieldInfoArray []TaskTemplateRequiredFieldInfoInput

func (TaskTemplateRequiredFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (i TaskTemplateRequiredFieldInfoArray) ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput {
	return i.ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateRequiredFieldInfoArray) ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateRequiredFieldInfoArrayOutput)
}

// Required field info
type TaskTemplateRequiredFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateRequiredFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (o TaskTemplateRequiredFieldInfoOutput) ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoOutput) ToTaskTemplateRequiredFieldInfoOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateRequiredFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateRequiredFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateRequiredFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateRequiredFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateRequiredFieldInfo {
		return vs[0].([]TaskTemplateRequiredFieldInfo)[vs[1].(int)]
	}).(TaskTemplateRequiredFieldInfoOutput)
}

// A key-value pair to associate with a resource.
type TaskTemplateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// TaskTemplateTagInput is an input type that accepts TaskTemplateTagArgs and TaskTemplateTagOutput values.
// You can construct a concrete instance of `TaskTemplateTagInput` via:
//
//	TaskTemplateTagArgs{...}
type TaskTemplateTagInput interface {
	pulumi.Input

	ToTaskTemplateTagOutput() TaskTemplateTagOutput
	ToTaskTemplateTagOutputWithContext(context.Context) TaskTemplateTagOutput
}

// A key-value pair to associate with a resource.
type TaskTemplateTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TaskTemplateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateTag)(nil)).Elem()
}

func (i TaskTemplateTagArgs) ToTaskTemplateTagOutput() TaskTemplateTagOutput {
	return i.ToTaskTemplateTagOutputWithContext(context.Background())
}

func (i TaskTemplateTagArgs) ToTaskTemplateTagOutputWithContext(ctx context.Context) TaskTemplateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateTagOutput)
}

// TaskTemplateTagArrayInput is an input type that accepts TaskTemplateTagArray and TaskTemplateTagArrayOutput values.
// You can construct a concrete instance of `TaskTemplateTagArrayInput` via:
//
//	TaskTemplateTagArray{ TaskTemplateTagArgs{...} }
type TaskTemplateTagArrayInput interface {
	pulumi.Input

	ToTaskTemplateTagArrayOutput() TaskTemplateTagArrayOutput
	ToTaskTemplateTagArrayOutputWithContext(context.Context) TaskTemplateTagArrayOutput
}

type TaskTemplateTagArray []TaskTemplateTagInput

func (TaskTemplateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateTag)(nil)).Elem()
}

func (i TaskTemplateTagArray) ToTaskTemplateTagArrayOutput() TaskTemplateTagArrayOutput {
	return i.ToTaskTemplateTagArrayOutputWithContext(context.Background())
}

func (i TaskTemplateTagArray) ToTaskTemplateTagArrayOutputWithContext(ctx context.Context) TaskTemplateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateTagArrayOutput)
}

// A key-value pair to associate with a resource.
type TaskTemplateTagOutput struct{ *pulumi.OutputState }

func (TaskTemplateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateTag)(nil)).Elem()
}

func (o TaskTemplateTagOutput) ToTaskTemplateTagOutput() TaskTemplateTagOutput {
	return o
}

func (o TaskTemplateTagOutput) ToTaskTemplateTagOutputWithContext(ctx context.Context) TaskTemplateTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TaskTemplateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TaskTemplateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateTag) string { return v.Value }).(pulumi.StringOutput)
}

type TaskTemplateTagArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateTag)(nil)).Elem()
}

func (o TaskTemplateTagArrayOutput) ToTaskTemplateTagArrayOutput() TaskTemplateTagArrayOutput {
	return o
}

func (o TaskTemplateTagArrayOutput) ToTaskTemplateTagArrayOutputWithContext(ctx context.Context) TaskTemplateTagArrayOutput {
	return o
}

func (o TaskTemplateTagArrayOutput) Index(i pulumi.IntInput) TaskTemplateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateTag {
		return vs[0].([]TaskTemplateTag)[vs[1].(int)]
	}).(TaskTemplateTagOutput)
}

// Contains information about the identity of a user.
type UserIdentityInfo struct {
	Email          *string `pulumi:"email"`
	FirstName      *string `pulumi:"firstName"`
	LastName       *string `pulumi:"lastName"`
	Mobile         *string `pulumi:"mobile"`
	SecondaryEmail *string `pulumi:"secondaryEmail"`
}

// UserIdentityInfoInput is an input type that accepts UserIdentityInfoArgs and UserIdentityInfoOutput values.
// You can construct a concrete instance of `UserIdentityInfoInput` via:
//
//	UserIdentityInfoArgs{...}
type UserIdentityInfoInput interface {
	pulumi.Input

	ToUserIdentityInfoOutput() UserIdentityInfoOutput
	ToUserIdentityInfoOutputWithContext(context.Context) UserIdentityInfoOutput
}

// Contains information about the identity of a user.
type UserIdentityInfoArgs struct {
	Email          pulumi.StringPtrInput `pulumi:"email"`
	FirstName      pulumi.StringPtrInput `pulumi:"firstName"`
	LastName       pulumi.StringPtrInput `pulumi:"lastName"`
	Mobile         pulumi.StringPtrInput `pulumi:"mobile"`
	SecondaryEmail pulumi.StringPtrInput `pulumi:"secondaryEmail"`
}

func (UserIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return i.ToUserIdentityInfoOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput)
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput).ToUserIdentityInfoPtrOutputWithContext(ctx)
}

// UserIdentityInfoPtrInput is an input type that accepts UserIdentityInfoArgs, UserIdentityInfoPtr and UserIdentityInfoPtrOutput values.
// You can construct a concrete instance of `UserIdentityInfoPtrInput` via:
//
//	        UserIdentityInfoArgs{...}
//
//	or:
//
//	        nil
type UserIdentityInfoPtrInput interface {
	pulumi.Input

	ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput
	ToUserIdentityInfoPtrOutputWithContext(context.Context) UserIdentityInfoPtrOutput
}

type userIdentityInfoPtrType UserIdentityInfoArgs

func UserIdentityInfoPtr(v *UserIdentityInfoArgs) UserIdentityInfoPtrInput {
	return (*userIdentityInfoPtrType)(v)
}

func (*userIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoPtrOutput)
}

// Contains information about the identity of a user.
type UserIdentityInfoOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserIdentityInfo) *UserIdentityInfo {
		return &v
	}).(UserIdentityInfoPtrOutput)
}

func (o UserIdentityInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoOutput) SecondaryEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.SecondaryEmail }).(pulumi.StringPtrOutput)
}

type UserIdentityInfoPtrOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) Elem() UserIdentityInfoOutput {
	return o.ApplyT(func(v *UserIdentityInfo) UserIdentityInfo {
		if v != nil {
			return *v
		}
		var ret UserIdentityInfo
		return ret
	}).(UserIdentityInfoOutput)
}

func (o UserIdentityInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

func (o UserIdentityInfoPtrOutput) SecondaryEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryEmail
	}).(pulumi.StringPtrOutput)
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfig struct {
	AfterContactWorkTimeLimit *int          `pulumi:"afterContactWorkTimeLimit"`
	AutoAccept                *bool         `pulumi:"autoAccept"`
	DeskPhoneNumber           *string       `pulumi:"deskPhoneNumber"`
	PhoneType                 UserPhoneType `pulumi:"phoneType"`
}

// UserPhoneConfigInput is an input type that accepts UserPhoneConfigArgs and UserPhoneConfigOutput values.
// You can construct a concrete instance of `UserPhoneConfigInput` via:
//
//	UserPhoneConfigArgs{...}
type UserPhoneConfigInput interface {
	pulumi.Input

	ToUserPhoneConfigOutput() UserPhoneConfigOutput
	ToUserPhoneConfigOutputWithContext(context.Context) UserPhoneConfigOutput
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfigArgs struct {
	AfterContactWorkTimeLimit pulumi.IntPtrInput    `pulumi:"afterContactWorkTimeLimit"`
	AutoAccept                pulumi.BoolPtrInput   `pulumi:"autoAccept"`
	DeskPhoneNumber           pulumi.StringPtrInput `pulumi:"deskPhoneNumber"`
	PhoneType                 UserPhoneTypeInput    `pulumi:"phoneType"`
}

func (UserPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return i.ToUserPhoneConfigOutputWithContext(context.Background())
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneConfigOutput)
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfigOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return o
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return o
}

func (o UserPhoneConfigOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *int { return v.AfterContactWorkTimeLimit }).(pulumi.IntPtrOutput)
}

func (o UserPhoneConfigOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *bool { return v.AutoAccept }).(pulumi.BoolPtrOutput)
}

func (o UserPhoneConfigOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *string { return v.DeskPhoneNumber }).(pulumi.StringPtrOutput)
}

func (o UserPhoneConfigOutput) PhoneType() UserPhoneTypeOutput {
	return o.ApplyT(func(v UserPhoneConfig) UserPhoneType { return v.PhoneType }).(UserPhoneTypeOutput)
}

type UserPhoneConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) Elem() UserPhoneConfigOutput {
	return o.ApplyT(func(v *UserPhoneConfig) UserPhoneConfig {
		if v != nil {
			return *v
		}
		var ret UserPhoneConfig
		return ret
	}).(UserPhoneConfigOutput)
}

func (o UserPhoneConfigPtrOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *int {
		if v == nil {
			return nil
		}
		return v.AfterContactWorkTimeLimit
	}).(pulumi.IntPtrOutput)
}

func (o UserPhoneConfigPtrOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoAccept
	}).(pulumi.BoolPtrOutput)
}

func (o UserPhoneConfigPtrOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeskPhoneNumber
	}).(pulumi.StringPtrOutput)
}

func (o UserPhoneConfigPtrOutput) PhoneType() UserPhoneTypePtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *UserPhoneType {
		if v == nil {
			return nil
		}
		return &v.PhoneType
	}).(UserPhoneTypePtrOutput)
}

// A key-value pair to associate with a resource.
type UserTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// UserTagInput is an input type that accepts UserTagArgs and UserTagOutput values.
// You can construct a concrete instance of `UserTagInput` via:
//
//	UserTagArgs{...}
type UserTagInput interface {
	pulumi.Input

	ToUserTagOutput() UserTagOutput
	ToUserTagOutputWithContext(context.Context) UserTagOutput
}

// A key-value pair to associate with a resource.
type UserTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (UserTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (i UserTagArgs) ToUserTagOutput() UserTagOutput {
	return i.ToUserTagOutputWithContext(context.Background())
}

func (i UserTagArgs) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagOutput)
}

// UserTagArrayInput is an input type that accepts UserTagArray and UserTagArrayOutput values.
// You can construct a concrete instance of `UserTagArrayInput` via:
//
//	UserTagArray{ UserTagArgs{...} }
type UserTagArrayInput interface {
	pulumi.Input

	ToUserTagArrayOutput() UserTagArrayOutput
	ToUserTagArrayOutputWithContext(context.Context) UserTagArrayOutput
}

type UserTagArray []UserTagInput

func (UserTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (i UserTagArray) ToUserTagArrayOutput() UserTagArrayOutput {
	return i.ToUserTagArrayOutputWithContext(context.Background())
}

func (i UserTagArray) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagArrayOutput)
}

// A key-value pair to associate with a resource.
type UserTagOutput struct{ *pulumi.OutputState }

func (UserTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (o UserTagOutput) ToUserTagOutput() UserTagOutput {
	return o
}

func (o UserTagOutput) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Value }).(pulumi.StringOutput)
}

type UserTagArrayOutput struct{ *pulumi.OutputState }

func (UserTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (o UserTagArrayOutput) ToUserTagArrayOutput() UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) Index(i pulumi.IntInput) UserTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserTag {
		return vs[0].([]UserTag)[vs[1].(int)]
	}).(UserTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConstraintsPropertiesInput)(nil)).Elem(), ConstraintsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConstraintsPropertiesPtrInput)(nil)).Elem(), ConstraintsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowModuleTagInput)(nil)).Elem(), ContactFlowModuleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowModuleTagArrayInput)(nil)).Elem(), ContactFlowModuleTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTagInput)(nil)).Elem(), ContactFlowTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactFlowTagArrayInput)(nil)).Elem(), ContactFlowTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormBaseItemInput)(nil)).Elem(), EvaluationFormBaseItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormBaseItemArrayInput)(nil)).Elem(), EvaluationFormBaseItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormItemInput)(nil)).Elem(), EvaluationFormItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormItemArrayInput)(nil)).Elem(), EvaluationFormItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionAutomationInput)(nil)).Elem(), EvaluationFormNumericQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionAutomationPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionOptionInput)(nil)).Elem(), EvaluationFormNumericQuestionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionOptionArrayInput)(nil)).Elem(), EvaluationFormNumericQuestionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertiesInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertiesPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionInput)(nil)).Elem(), EvaluationFormQuestionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionPtrInput)(nil)).Elem(), EvaluationFormQuestionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionTypePropertiesInput)(nil)).Elem(), EvaluationFormQuestionTypePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionTypePropertiesPtrInput)(nil)).Elem(), EvaluationFormQuestionTypePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyInput)(nil)).Elem(), EvaluationFormScoringStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyPtrInput)(nil)).Elem(), EvaluationFormScoringStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSectionInput)(nil)).Elem(), EvaluationFormSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSectionPtrInput)(nil)).Elem(), EvaluationFormSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOptionInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOptionArrayInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionOptionInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionOptionArrayInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormTagInput)(nil)).Elem(), EvaluationFormTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormTagArrayInput)(nil)).Elem(), EvaluationFormTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigInput)(nil)).Elem(), HoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigArrayInput)(nil)).Elem(), HoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationTagInput)(nil)).Elem(), HoursOfOperationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationTagArrayInput)(nil)).Elem(), HoursOfOperationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationTimeSliceInput)(nil)).Elem(), HoursOfOperationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAttributesInput)(nil)).Elem(), InstanceAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionConfigInput)(nil)).Elem(), InstanceStorageConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionConfigPtrInput)(nil)).Elem(), InstanceStorageConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigS3ConfigInput)(nil)).Elem(), InstanceStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigS3ConfigPtrInput)(nil)).Elem(), InstanceStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberTagInput)(nil)).Elem(), PhoneNumberTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberTagArrayInput)(nil)).Elem(), PhoneNumberTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTagInput)(nil)).Elem(), PromptTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTagArrayInput)(nil)).Elem(), PromptTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectConfigInput)(nil)).Elem(), QuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfigInput)(nil)).Elem(), QuickConnectPhoneNumberQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectPhoneNumberQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQueueQuickConnectConfigInput)(nil)).Elem(), QuickConnectQueueQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQueueQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectQueueQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTagInput)(nil)).Elem(), QuickConnectTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectTagArrayInput)(nil)).Elem(), QuickConnectTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectUserQuickConnectConfigInput)(nil)).Elem(), QuickConnectUserQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectUserQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectUserQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleActionsInput)(nil)).Elem(), RuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAssignContactCategoryActionInput)(nil)).Elem(), RuleAssignContactCategoryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAssignContactCategoryActionArrayInput)(nil)).Elem(), RuleAssignContactCategoryActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEventBridgeActionInput)(nil)).Elem(), RuleEventBridgeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEventBridgeActionArrayInput)(nil)).Elem(), RuleEventBridgeActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleNotificationRecipientTypeInput)(nil)).Elem(), RuleNotificationRecipientTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionInput)(nil)).Elem(), RuleSendNotificationActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionArrayInput)(nil)).Elem(), RuleSendNotificationActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTagInput)(nil)).Elem(), RuleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTagArrayInput)(nil)).Elem(), RuleTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTaskActionInput)(nil)).Elem(), RuleTaskActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTaskActionArrayInput)(nil)).Elem(), RuleTaskActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceInput)(nil)).Elem(), RuleTriggerEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateDefaultFieldValueInput)(nil)).Elem(), TaskTemplateDefaultFieldValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateDefaultFieldValueArrayInput)(nil)).Elem(), TaskTemplateDefaultFieldValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldInput)(nil)).Elem(), TaskTemplateFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldArrayInput)(nil)).Elem(), TaskTemplateFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldIdentifierInput)(nil)).Elem(), TaskTemplateFieldIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateInvisibleFieldInfoInput)(nil)).Elem(), TaskTemplateInvisibleFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateInvisibleFieldInfoArrayInput)(nil)).Elem(), TaskTemplateInvisibleFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateReadOnlyFieldInfoInput)(nil)).Elem(), TaskTemplateReadOnlyFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateReadOnlyFieldInfoArrayInput)(nil)).Elem(), TaskTemplateReadOnlyFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateRequiredFieldInfoInput)(nil)).Elem(), TaskTemplateRequiredFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateRequiredFieldInfoArrayInput)(nil)).Elem(), TaskTemplateRequiredFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateTagInput)(nil)).Elem(), TaskTemplateTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateTagArrayInput)(nil)).Elem(), TaskTemplateTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoPtrInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneConfigInput)(nil)).Elem(), UserPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagInput)(nil)).Elem(), UserTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagArrayInput)(nil)).Elem(), UserTagArray{})
	pulumi.RegisterOutputType(ConstraintsPropertiesOutput{})
	pulumi.RegisterOutputType(ConstraintsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContactFlowModuleTagOutput{})
	pulumi.RegisterOutputType(ContactFlowModuleTagArrayOutput{})
	pulumi.RegisterOutputType(ContactFlowTagOutput{})
	pulumi.RegisterOutputType(ContactFlowTagArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormBaseItemOutput{})
	pulumi.RegisterOutputType(EvaluationFormBaseItemArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormItemOutput{})
	pulumi.RegisterOutputType(EvaluationFormItemArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionTypePropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionTypePropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSectionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSectionPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormTagOutput{})
	pulumi.RegisterOutputType(EvaluationFormTagArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationTagOutput{})
	pulumi.RegisterOutputType(HoursOfOperationTagArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationTimeSliceOutput{})
	pulumi.RegisterOutputType(InstanceAttributesOutput{})
	pulumi.RegisterOutputType(InstanceAttributesPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisFirehoseConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisFirehoseConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisVideoStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigS3ConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigS3ConfigPtrOutput{})
	pulumi.RegisterOutputType(PhoneNumberTagOutput{})
	pulumi.RegisterOutputType(PhoneNumberTagArrayOutput{})
	pulumi.RegisterOutputType(PromptTagOutput{})
	pulumi.RegisterOutputType(PromptTagArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectPhoneNumberQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectPhoneNumberQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQueueQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQueueQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectTagOutput{})
	pulumi.RegisterOutputType(QuickConnectTagArrayOutput{})
	pulumi.RegisterOutputType(QuickConnectUserQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectUserQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(RuleActionsOutput{})
	pulumi.RegisterOutputType(RuleActionsPtrOutput{})
	pulumi.RegisterOutputType(RuleAssignContactCategoryActionOutput{})
	pulumi.RegisterOutputType(RuleAssignContactCategoryActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEventBridgeActionOutput{})
	pulumi.RegisterOutputType(RuleEventBridgeActionArrayOutput{})
	pulumi.RegisterOutputType(RuleNotificationRecipientTypeOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionArrayOutput{})
	pulumi.RegisterOutputType(RuleTagOutput{})
	pulumi.RegisterOutputType(RuleTagArrayOutput{})
	pulumi.RegisterOutputType(RuleTaskActionOutput{})
	pulumi.RegisterOutputType(RuleTaskActionArrayOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceOutput{})
	pulumi.RegisterOutputType(TaskTemplateDefaultFieldValueOutput{})
	pulumi.RegisterOutputType(TaskTemplateDefaultFieldValueArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldIdentifierOutput{})
	pulumi.RegisterOutputType(TaskTemplateInvisibleFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateInvisibleFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateReadOnlyFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateReadOnlyFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateRequiredFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateRequiredFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateTagOutput{})
	pulumi.RegisterOutputType(TaskTemplateTagArrayOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigPtrOutput{})
	pulumi.RegisterOutputType(UserTagOutput{})
	pulumi.RegisterOutputType(UserTagArrayOutput{})
}
