// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type AgentStatusTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Custom metadata associated to a Predefined attribute that controls how the attribute behaves when used by upstream services.
type AttributeConfigurationProperties struct {
	// Enables customers to enforce strict validation on the specific values that this predefined attribute can hold.
	EnableValueValidationOnAssociation *bool `pulumi:"enableValueValidationOnAssociation"`
	// Allows the predefined attribute to show up and be managed in the Amazon Connect UI.
	IsReadOnly *bool `pulumi:"isReadOnly"`
}

// AttributeConfigurationPropertiesInput is an input type that accepts AttributeConfigurationPropertiesArgs and AttributeConfigurationPropertiesOutput values.
// You can construct a concrete instance of `AttributeConfigurationPropertiesInput` via:
//
//	AttributeConfigurationPropertiesArgs{...}
type AttributeConfigurationPropertiesInput interface {
	pulumi.Input

	ToAttributeConfigurationPropertiesOutput() AttributeConfigurationPropertiesOutput
	ToAttributeConfigurationPropertiesOutputWithContext(context.Context) AttributeConfigurationPropertiesOutput
}

// Custom metadata associated to a Predefined attribute that controls how the attribute behaves when used by upstream services.
type AttributeConfigurationPropertiesArgs struct {
	// Enables customers to enforce strict validation on the specific values that this predefined attribute can hold.
	EnableValueValidationOnAssociation pulumi.BoolPtrInput `pulumi:"enableValueValidationOnAssociation"`
	// Allows the predefined attribute to show up and be managed in the Amazon Connect UI.
	IsReadOnly pulumi.BoolPtrInput `pulumi:"isReadOnly"`
}

func (AttributeConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeConfigurationProperties)(nil)).Elem()
}

func (i AttributeConfigurationPropertiesArgs) ToAttributeConfigurationPropertiesOutput() AttributeConfigurationPropertiesOutput {
	return i.ToAttributeConfigurationPropertiesOutputWithContext(context.Background())
}

func (i AttributeConfigurationPropertiesArgs) ToAttributeConfigurationPropertiesOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeConfigurationPropertiesOutput)
}

func (i AttributeConfigurationPropertiesArgs) ToAttributeConfigurationPropertiesPtrOutput() AttributeConfigurationPropertiesPtrOutput {
	return i.ToAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i AttributeConfigurationPropertiesArgs) ToAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeConfigurationPropertiesOutput).ToAttributeConfigurationPropertiesPtrOutputWithContext(ctx)
}

// AttributeConfigurationPropertiesPtrInput is an input type that accepts AttributeConfigurationPropertiesArgs, AttributeConfigurationPropertiesPtr and AttributeConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `AttributeConfigurationPropertiesPtrInput` via:
//
//	        AttributeConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type AttributeConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToAttributeConfigurationPropertiesPtrOutput() AttributeConfigurationPropertiesPtrOutput
	ToAttributeConfigurationPropertiesPtrOutputWithContext(context.Context) AttributeConfigurationPropertiesPtrOutput
}

type attributeConfigurationPropertiesPtrType AttributeConfigurationPropertiesArgs

func AttributeConfigurationPropertiesPtr(v *AttributeConfigurationPropertiesArgs) AttributeConfigurationPropertiesPtrInput {
	return (*attributeConfigurationPropertiesPtrType)(v)
}

func (*attributeConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeConfigurationProperties)(nil)).Elem()
}

func (i *attributeConfigurationPropertiesPtrType) ToAttributeConfigurationPropertiesPtrOutput() AttributeConfigurationPropertiesPtrOutput {
	return i.ToAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *attributeConfigurationPropertiesPtrType) ToAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeConfigurationPropertiesPtrOutput)
}

// Custom metadata associated to a Predefined attribute that controls how the attribute behaves when used by upstream services.
type AttributeConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (AttributeConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttributeConfigurationProperties)(nil)).Elem()
}

func (o AttributeConfigurationPropertiesOutput) ToAttributeConfigurationPropertiesOutput() AttributeConfigurationPropertiesOutput {
	return o
}

func (o AttributeConfigurationPropertiesOutput) ToAttributeConfigurationPropertiesOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesOutput {
	return o
}

func (o AttributeConfigurationPropertiesOutput) ToAttributeConfigurationPropertiesPtrOutput() AttributeConfigurationPropertiesPtrOutput {
	return o.ToAttributeConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o AttributeConfigurationPropertiesOutput) ToAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttributeConfigurationProperties) *AttributeConfigurationProperties {
		return &v
	}).(AttributeConfigurationPropertiesPtrOutput)
}

// Enables customers to enforce strict validation on the specific values that this predefined attribute can hold.
func (o AttributeConfigurationPropertiesOutput) EnableValueValidationOnAssociation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttributeConfigurationProperties) *bool { return v.EnableValueValidationOnAssociation }).(pulumi.BoolPtrOutput)
}

// Allows the predefined attribute to show up and be managed in the Amazon Connect UI.
func (o AttributeConfigurationPropertiesOutput) IsReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttributeConfigurationProperties) *bool { return v.IsReadOnly }).(pulumi.BoolPtrOutput)
}

type AttributeConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AttributeConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeConfigurationProperties)(nil)).Elem()
}

func (o AttributeConfigurationPropertiesPtrOutput) ToAttributeConfigurationPropertiesPtrOutput() AttributeConfigurationPropertiesPtrOutput {
	return o
}

func (o AttributeConfigurationPropertiesPtrOutput) ToAttributeConfigurationPropertiesPtrOutputWithContext(ctx context.Context) AttributeConfigurationPropertiesPtrOutput {
	return o
}

func (o AttributeConfigurationPropertiesPtrOutput) Elem() AttributeConfigurationPropertiesOutput {
	return o.ApplyT(func(v *AttributeConfigurationProperties) AttributeConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret AttributeConfigurationProperties
		return ret
	}).(AttributeConfigurationPropertiesOutput)
}

// Enables customers to enforce strict validation on the specific values that this predefined attribute can hold.
func (o AttributeConfigurationPropertiesPtrOutput) EnableValueValidationOnAssociation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttributeConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableValueValidationOnAssociation
	}).(pulumi.BoolPtrOutput)
}

// Allows the predefined attribute to show up and be managed in the Amazon Connect UI.
func (o AttributeConfigurationPropertiesPtrOutput) IsReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttributeConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsReadOnly
	}).(pulumi.BoolPtrOutput)
}

// The constraints for the task template
type ConstraintsProperties struct {
	// Lists the fields that are invisible to agents.
	InvisibleFields []TaskTemplateInvisibleFieldInfo `pulumi:"invisibleFields"`
	// Lists the fields that are read-only to agents, and cannot be edited.
	ReadOnlyFields []TaskTemplateReadOnlyFieldInfo `pulumi:"readOnlyFields"`
	// Lists the fields that are required to be filled by agents.
	RequiredFields []TaskTemplateRequiredFieldInfo `pulumi:"requiredFields"`
}

// ConstraintsPropertiesInput is an input type that accepts ConstraintsPropertiesArgs and ConstraintsPropertiesOutput values.
// You can construct a concrete instance of `ConstraintsPropertiesInput` via:
//
//	ConstraintsPropertiesArgs{...}
type ConstraintsPropertiesInput interface {
	pulumi.Input

	ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput
	ToConstraintsPropertiesOutputWithContext(context.Context) ConstraintsPropertiesOutput
}

// The constraints for the task template
type ConstraintsPropertiesArgs struct {
	// Lists the fields that are invisible to agents.
	InvisibleFields TaskTemplateInvisibleFieldInfoArrayInput `pulumi:"invisibleFields"`
	// Lists the fields that are read-only to agents, and cannot be edited.
	ReadOnlyFields TaskTemplateReadOnlyFieldInfoArrayInput `pulumi:"readOnlyFields"`
	// Lists the fields that are required to be filled by agents.
	RequiredFields TaskTemplateRequiredFieldInfoArrayInput `pulumi:"requiredFields"`
}

func (ConstraintsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConstraintsProperties)(nil)).Elem()
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput {
	return i.ToConstraintsPropertiesOutputWithContext(context.Background())
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesOutputWithContext(ctx context.Context) ConstraintsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesOutput)
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return i.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (i ConstraintsPropertiesArgs) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesOutput).ToConstraintsPropertiesPtrOutputWithContext(ctx)
}

// ConstraintsPropertiesPtrInput is an input type that accepts ConstraintsPropertiesArgs, ConstraintsPropertiesPtr and ConstraintsPropertiesPtrOutput values.
// You can construct a concrete instance of `ConstraintsPropertiesPtrInput` via:
//
//	        ConstraintsPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConstraintsPropertiesPtrInput interface {
	pulumi.Input

	ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput
	ToConstraintsPropertiesPtrOutputWithContext(context.Context) ConstraintsPropertiesPtrOutput
}

type constraintsPropertiesPtrType ConstraintsPropertiesArgs

func ConstraintsPropertiesPtr(v *ConstraintsPropertiesArgs) ConstraintsPropertiesPtrInput {
	return (*constraintsPropertiesPtrType)(v)
}

func (*constraintsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConstraintsProperties)(nil)).Elem()
}

func (i *constraintsPropertiesPtrType) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return i.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (i *constraintsPropertiesPtrType) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConstraintsPropertiesPtrOutput)
}

// The constraints for the task template
type ConstraintsPropertiesOutput struct{ *pulumi.OutputState }

func (ConstraintsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConstraintsProperties)(nil)).Elem()
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesOutput() ConstraintsPropertiesOutput {
	return o
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesOutputWithContext(ctx context.Context) ConstraintsPropertiesOutput {
	return o
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return o.ToConstraintsPropertiesPtrOutputWithContext(context.Background())
}

func (o ConstraintsPropertiesOutput) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConstraintsProperties) *ConstraintsProperties {
		return &v
	}).(ConstraintsPropertiesPtrOutput)
}

// Lists the fields that are invisible to agents.
func (o ConstraintsPropertiesOutput) InvisibleFields() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateInvisibleFieldInfo { return v.InvisibleFields }).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

// Lists the fields that are read-only to agents, and cannot be edited.
func (o ConstraintsPropertiesOutput) ReadOnlyFields() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateReadOnlyFieldInfo { return v.ReadOnlyFields }).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

// Lists the fields that are required to be filled by agents.
func (o ConstraintsPropertiesOutput) RequiredFields() TaskTemplateRequiredFieldInfoArrayOutput {
	return o.ApplyT(func(v ConstraintsProperties) []TaskTemplateRequiredFieldInfo { return v.RequiredFields }).(TaskTemplateRequiredFieldInfoArrayOutput)
}

type ConstraintsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConstraintsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConstraintsProperties)(nil)).Elem()
}

func (o ConstraintsPropertiesPtrOutput) ToConstraintsPropertiesPtrOutput() ConstraintsPropertiesPtrOutput {
	return o
}

func (o ConstraintsPropertiesPtrOutput) ToConstraintsPropertiesPtrOutputWithContext(ctx context.Context) ConstraintsPropertiesPtrOutput {
	return o
}

func (o ConstraintsPropertiesPtrOutput) Elem() ConstraintsPropertiesOutput {
	return o.ApplyT(func(v *ConstraintsProperties) ConstraintsProperties {
		if v != nil {
			return *v
		}
		var ret ConstraintsProperties
		return ret
	}).(ConstraintsPropertiesOutput)
}

// Lists the fields that are invisible to agents.
func (o ConstraintsPropertiesPtrOutput) InvisibleFields() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateInvisibleFieldInfo {
		if v == nil {
			return nil
		}
		return v.InvisibleFields
	}).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

// Lists the fields that are read-only to agents, and cannot be edited.
func (o ConstraintsPropertiesPtrOutput) ReadOnlyFields() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateReadOnlyFieldInfo {
		if v == nil {
			return nil
		}
		return v.ReadOnlyFields
	}).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

// Lists the fields that are required to be filled by agents.
func (o ConstraintsPropertiesPtrOutput) RequiredFields() TaskTemplateRequiredFieldInfoArrayOutput {
	return o.ApplyT(func(v *ConstraintsProperties) []TaskTemplateRequiredFieldInfo {
		if v == nil {
			return nil
		}
		return v.RequiredFields
	}).(TaskTemplateRequiredFieldInfoArrayOutput)
}

// A key-value pair to associate with a resource.
type ContactFlowModuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type ContactFlowTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type EmailAddressTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type EvaluationFormAutoEvaluationConfiguration struct {
	Enabled *bool `pulumi:"enabled"`
}

// EvaluationFormAutoEvaluationConfigurationInput is an input type that accepts EvaluationFormAutoEvaluationConfigurationArgs and EvaluationFormAutoEvaluationConfigurationOutput values.
// You can construct a concrete instance of `EvaluationFormAutoEvaluationConfigurationInput` via:
//
//	EvaluationFormAutoEvaluationConfigurationArgs{...}
type EvaluationFormAutoEvaluationConfigurationInput interface {
	pulumi.Input

	ToEvaluationFormAutoEvaluationConfigurationOutput() EvaluationFormAutoEvaluationConfigurationOutput
	ToEvaluationFormAutoEvaluationConfigurationOutputWithContext(context.Context) EvaluationFormAutoEvaluationConfigurationOutput
}

type EvaluationFormAutoEvaluationConfigurationArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EvaluationFormAutoEvaluationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormAutoEvaluationConfiguration)(nil)).Elem()
}

func (i EvaluationFormAutoEvaluationConfigurationArgs) ToEvaluationFormAutoEvaluationConfigurationOutput() EvaluationFormAutoEvaluationConfigurationOutput {
	return i.ToEvaluationFormAutoEvaluationConfigurationOutputWithContext(context.Background())
}

func (i EvaluationFormAutoEvaluationConfigurationArgs) ToEvaluationFormAutoEvaluationConfigurationOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormAutoEvaluationConfigurationOutput)
}

func (i EvaluationFormAutoEvaluationConfigurationArgs) ToEvaluationFormAutoEvaluationConfigurationPtrOutput() EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return i.ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormAutoEvaluationConfigurationArgs) ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormAutoEvaluationConfigurationOutput).ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(ctx)
}

// EvaluationFormAutoEvaluationConfigurationPtrInput is an input type that accepts EvaluationFormAutoEvaluationConfigurationArgs, EvaluationFormAutoEvaluationConfigurationPtr and EvaluationFormAutoEvaluationConfigurationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormAutoEvaluationConfigurationPtrInput` via:
//
//	        EvaluationFormAutoEvaluationConfigurationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormAutoEvaluationConfigurationPtrInput interface {
	pulumi.Input

	ToEvaluationFormAutoEvaluationConfigurationPtrOutput() EvaluationFormAutoEvaluationConfigurationPtrOutput
	ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(context.Context) EvaluationFormAutoEvaluationConfigurationPtrOutput
}

type evaluationFormAutoEvaluationConfigurationPtrType EvaluationFormAutoEvaluationConfigurationArgs

func EvaluationFormAutoEvaluationConfigurationPtr(v *EvaluationFormAutoEvaluationConfigurationArgs) EvaluationFormAutoEvaluationConfigurationPtrInput {
	return (*evaluationFormAutoEvaluationConfigurationPtrType)(v)
}

func (*evaluationFormAutoEvaluationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormAutoEvaluationConfiguration)(nil)).Elem()
}

func (i *evaluationFormAutoEvaluationConfigurationPtrType) ToEvaluationFormAutoEvaluationConfigurationPtrOutput() EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return i.ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormAutoEvaluationConfigurationPtrType) ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormAutoEvaluationConfigurationPtrOutput)
}

type EvaluationFormAutoEvaluationConfigurationOutput struct{ *pulumi.OutputState }

func (EvaluationFormAutoEvaluationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormAutoEvaluationConfiguration)(nil)).Elem()
}

func (o EvaluationFormAutoEvaluationConfigurationOutput) ToEvaluationFormAutoEvaluationConfigurationOutput() EvaluationFormAutoEvaluationConfigurationOutput {
	return o
}

func (o EvaluationFormAutoEvaluationConfigurationOutput) ToEvaluationFormAutoEvaluationConfigurationOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationOutput {
	return o
}

func (o EvaluationFormAutoEvaluationConfigurationOutput) ToEvaluationFormAutoEvaluationConfigurationPtrOutput() EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return o.ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormAutoEvaluationConfigurationOutput) ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormAutoEvaluationConfiguration) *EvaluationFormAutoEvaluationConfiguration {
		return &v
	}).(EvaluationFormAutoEvaluationConfigurationPtrOutput)
}

func (o EvaluationFormAutoEvaluationConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormAutoEvaluationConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EvaluationFormAutoEvaluationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormAutoEvaluationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormAutoEvaluationConfiguration)(nil)).Elem()
}

func (o EvaluationFormAutoEvaluationConfigurationPtrOutput) ToEvaluationFormAutoEvaluationConfigurationPtrOutput() EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return o
}

func (o EvaluationFormAutoEvaluationConfigurationPtrOutput) ToEvaluationFormAutoEvaluationConfigurationPtrOutputWithContext(ctx context.Context) EvaluationFormAutoEvaluationConfigurationPtrOutput {
	return o
}

func (o EvaluationFormAutoEvaluationConfigurationPtrOutput) Elem() EvaluationFormAutoEvaluationConfigurationOutput {
	return o.ApplyT(func(v *EvaluationFormAutoEvaluationConfiguration) EvaluationFormAutoEvaluationConfiguration {
		if v != nil {
			return *v
		}
		var ret EvaluationFormAutoEvaluationConfiguration
		return ret
	}).(EvaluationFormAutoEvaluationConfigurationOutput)
}

func (o EvaluationFormAutoEvaluationConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EvaluationFormAutoEvaluationConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// An item at the root level. All items must be sections.
type EvaluationFormBaseItem struct {
	// A subsection or inner section of an item.
	Section EvaluationFormSection `pulumi:"section"`
}

// EvaluationFormBaseItemInput is an input type that accepts EvaluationFormBaseItemArgs and EvaluationFormBaseItemOutput values.
// You can construct a concrete instance of `EvaluationFormBaseItemInput` via:
//
//	EvaluationFormBaseItemArgs{...}
type EvaluationFormBaseItemInput interface {
	pulumi.Input

	ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput
	ToEvaluationFormBaseItemOutputWithContext(context.Context) EvaluationFormBaseItemOutput
}

// An item at the root level. All items must be sections.
type EvaluationFormBaseItemArgs struct {
	// A subsection or inner section of an item.
	Section EvaluationFormSectionInput `pulumi:"section"`
}

func (EvaluationFormBaseItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormBaseItem)(nil)).Elem()
}

func (i EvaluationFormBaseItemArgs) ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput {
	return i.ToEvaluationFormBaseItemOutputWithContext(context.Background())
}

func (i EvaluationFormBaseItemArgs) ToEvaluationFormBaseItemOutputWithContext(ctx context.Context) EvaluationFormBaseItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormBaseItemOutput)
}

// EvaluationFormBaseItemArrayInput is an input type that accepts EvaluationFormBaseItemArray and EvaluationFormBaseItemArrayOutput values.
// You can construct a concrete instance of `EvaluationFormBaseItemArrayInput` via:
//
//	EvaluationFormBaseItemArray{ EvaluationFormBaseItemArgs{...} }
type EvaluationFormBaseItemArrayInput interface {
	pulumi.Input

	ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput
	ToEvaluationFormBaseItemArrayOutputWithContext(context.Context) EvaluationFormBaseItemArrayOutput
}

type EvaluationFormBaseItemArray []EvaluationFormBaseItemInput

func (EvaluationFormBaseItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormBaseItem)(nil)).Elem()
}

func (i EvaluationFormBaseItemArray) ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput {
	return i.ToEvaluationFormBaseItemArrayOutputWithContext(context.Background())
}

func (i EvaluationFormBaseItemArray) ToEvaluationFormBaseItemArrayOutputWithContext(ctx context.Context) EvaluationFormBaseItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormBaseItemArrayOutput)
}

// An item at the root level. All items must be sections.
type EvaluationFormBaseItemOutput struct{ *pulumi.OutputState }

func (EvaluationFormBaseItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormBaseItem)(nil)).Elem()
}

func (o EvaluationFormBaseItemOutput) ToEvaluationFormBaseItemOutput() EvaluationFormBaseItemOutput {
	return o
}

func (o EvaluationFormBaseItemOutput) ToEvaluationFormBaseItemOutputWithContext(ctx context.Context) EvaluationFormBaseItemOutput {
	return o
}

// A subsection or inner section of an item.
func (o EvaluationFormBaseItemOutput) Section() EvaluationFormSectionOutput {
	return o.ApplyT(func(v EvaluationFormBaseItem) EvaluationFormSection { return v.Section }).(EvaluationFormSectionOutput)
}

type EvaluationFormBaseItemArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormBaseItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormBaseItem)(nil)).Elem()
}

func (o EvaluationFormBaseItemArrayOutput) ToEvaluationFormBaseItemArrayOutput() EvaluationFormBaseItemArrayOutput {
	return o
}

func (o EvaluationFormBaseItemArrayOutput) ToEvaluationFormBaseItemArrayOutputWithContext(ctx context.Context) EvaluationFormBaseItemArrayOutput {
	return o
}

func (o EvaluationFormBaseItemArrayOutput) Index(i pulumi.IntInput) EvaluationFormBaseItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormBaseItem {
		return vs[0].([]EvaluationFormBaseItem)[vs[1].(int)]
	}).(EvaluationFormBaseItemOutput)
}

// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
type EvaluationFormItem struct {
	// The information of the question.
	Question *EvaluationFormQuestion `pulumi:"question"`
	// The information of the section.
	Section *EvaluationFormSection `pulumi:"section"`
}

// EvaluationFormItemInput is an input type that accepts EvaluationFormItemArgs and EvaluationFormItemOutput values.
// You can construct a concrete instance of `EvaluationFormItemInput` via:
//
//	EvaluationFormItemArgs{...}
type EvaluationFormItemInput interface {
	pulumi.Input

	ToEvaluationFormItemOutput() EvaluationFormItemOutput
	ToEvaluationFormItemOutputWithContext(context.Context) EvaluationFormItemOutput
}

// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
type EvaluationFormItemArgs struct {
	// The information of the question.
	Question EvaluationFormQuestionPtrInput `pulumi:"question"`
	// The information of the section.
	Section EvaluationFormSectionPtrInput `pulumi:"section"`
}

func (EvaluationFormItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormItem)(nil)).Elem()
}

func (i EvaluationFormItemArgs) ToEvaluationFormItemOutput() EvaluationFormItemOutput {
	return i.ToEvaluationFormItemOutputWithContext(context.Background())
}

func (i EvaluationFormItemArgs) ToEvaluationFormItemOutputWithContext(ctx context.Context) EvaluationFormItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormItemOutput)
}

// EvaluationFormItemArrayInput is an input type that accepts EvaluationFormItemArray and EvaluationFormItemArrayOutput values.
// You can construct a concrete instance of `EvaluationFormItemArrayInput` via:
//
//	EvaluationFormItemArray{ EvaluationFormItemArgs{...} }
type EvaluationFormItemArrayInput interface {
	pulumi.Input

	ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput
	ToEvaluationFormItemArrayOutputWithContext(context.Context) EvaluationFormItemArrayOutput
}

type EvaluationFormItemArray []EvaluationFormItemInput

func (EvaluationFormItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormItem)(nil)).Elem()
}

func (i EvaluationFormItemArray) ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput {
	return i.ToEvaluationFormItemArrayOutputWithContext(context.Background())
}

func (i EvaluationFormItemArray) ToEvaluationFormItemArrayOutputWithContext(ctx context.Context) EvaluationFormItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormItemArrayOutput)
}

// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
type EvaluationFormItemOutput struct{ *pulumi.OutputState }

func (EvaluationFormItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormItem)(nil)).Elem()
}

func (o EvaluationFormItemOutput) ToEvaluationFormItemOutput() EvaluationFormItemOutput {
	return o
}

func (o EvaluationFormItemOutput) ToEvaluationFormItemOutputWithContext(ctx context.Context) EvaluationFormItemOutput {
	return o
}

// The information of the question.
func (o EvaluationFormItemOutput) Question() EvaluationFormQuestionPtrOutput {
	return o.ApplyT(func(v EvaluationFormItem) *EvaluationFormQuestion { return v.Question }).(EvaluationFormQuestionPtrOutput)
}

// The information of the section.
func (o EvaluationFormItemOutput) Section() EvaluationFormSectionPtrOutput {
	return o.ApplyT(func(v EvaluationFormItem) *EvaluationFormSection { return v.Section }).(EvaluationFormSectionPtrOutput)
}

type EvaluationFormItemArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormItem)(nil)).Elem()
}

func (o EvaluationFormItemArrayOutput) ToEvaluationFormItemArrayOutput() EvaluationFormItemArrayOutput {
	return o
}

func (o EvaluationFormItemArrayOutput) ToEvaluationFormItemArrayOutputWithContext(ctx context.Context) EvaluationFormItemArrayOutput {
	return o
}

func (o EvaluationFormItemArrayOutput) Index(i pulumi.IntInput) EvaluationFormItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormItem {
		return vs[0].([]EvaluationFormItem)[vs[1].(int)]
	}).(EvaluationFormItemOutput)
}

// Information about the automation configuration in numeric questions.
type EvaluationFormNumericQuestionAutomation struct {
	AnswerSource interface{} `pulumi:"answerSource"`
	// The property value of the automation.
	PropertyValue *EvaluationFormNumericQuestionPropertyValueAutomation `pulumi:"propertyValue"`
}

// EvaluationFormNumericQuestionAutomationInput is an input type that accepts EvaluationFormNumericQuestionAutomationArgs and EvaluationFormNumericQuestionAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionAutomationInput` via:
//
//	EvaluationFormNumericQuestionAutomationArgs{...}
type EvaluationFormNumericQuestionAutomationInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput
	ToEvaluationFormNumericQuestionAutomationOutputWithContext(context.Context) EvaluationFormNumericQuestionAutomationOutput
}

// Information about the automation configuration in numeric questions.
type EvaluationFormNumericQuestionAutomationArgs struct {
	AnswerSource pulumi.Input `pulumi:"answerSource"`
	// The property value of the automation.
	PropertyValue EvaluationFormNumericQuestionPropertyValueAutomationPtrInput `pulumi:"propertyValue"`
}

func (EvaluationFormNumericQuestionAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput {
	return i.ToEvaluationFormNumericQuestionAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationOutput)
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionAutomationArgs) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationOutput).ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionAutomationPtrInput is an input type that accepts EvaluationFormNumericQuestionAutomationArgs, EvaluationFormNumericQuestionAutomationPtr and EvaluationFormNumericQuestionAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionAutomationPtrInput` via:
//
//	        EvaluationFormNumericQuestionAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput
	ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionAutomationPtrOutput
}

type evaluationFormNumericQuestionAutomationPtrType EvaluationFormNumericQuestionAutomationArgs

func EvaluationFormNumericQuestionAutomationPtr(v *EvaluationFormNumericQuestionAutomationArgs) EvaluationFormNumericQuestionAutomationPtrInput {
	return (*evaluationFormNumericQuestionAutomationPtrType)(v)
}

func (*evaluationFormNumericQuestionAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionAutomationPtrType) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionAutomationPtrType) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// Information about the automation configuration in numeric questions.
type EvaluationFormNumericQuestionAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationOutput() EvaluationFormNumericQuestionAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionAutomationOutput) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionAutomation) *EvaluationFormNumericQuestionAutomation {
		return &v
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

func (o EvaluationFormNumericQuestionAutomationOutput) AnswerSource() pulumi.AnyOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionAutomation) interface{} { return v.AnswerSource }).(pulumi.AnyOutput)
}

// The property value of the automation.
func (o EvaluationFormNumericQuestionAutomationOutput) PropertyValue() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionAutomation) *EvaluationFormNumericQuestionPropertyValueAutomation {
		return v.PropertyValue
	}).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

type EvaluationFormNumericQuestionAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) ToEvaluationFormNumericQuestionAutomationPtrOutput() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) ToEvaluationFormNumericQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) Elem() EvaluationFormNumericQuestionAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionAutomation) EvaluationFormNumericQuestionAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionAutomation
		return ret
	}).(EvaluationFormNumericQuestionAutomationOutput)
}

func (o EvaluationFormNumericQuestionAutomationPtrOutput) AnswerSource() pulumi.AnyOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionAutomation) interface{} {
		if v == nil {
			return nil
		}
		return v.AnswerSource
	}).(pulumi.AnyOutput)
}

// The property value of the automation.
func (o EvaluationFormNumericQuestionAutomationPtrOutput) PropertyValue() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionAutomation) *EvaluationFormNumericQuestionPropertyValueAutomation {
		if v == nil {
			return nil
		}
		return v.PropertyValue
	}).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// Information about the option range used for scoring in numeric questions.
type EvaluationFormNumericQuestionOption struct {
	// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
	AutomaticFail *bool `pulumi:"automaticFail"`
	// The maximum answer value of the range option.
	MaxValue int `pulumi:"maxValue"`
	// The minimum answer value of the range option.
	MinValue int `pulumi:"minValue"`
	// The score assigned to answer values within the range option.
	//  *Minimum*: 0
	//  *Maximum*: 10
	Score *int `pulumi:"score"`
}

// EvaluationFormNumericQuestionOptionInput is an input type that accepts EvaluationFormNumericQuestionOptionArgs and EvaluationFormNumericQuestionOptionOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionOptionInput` via:
//
//	EvaluationFormNumericQuestionOptionArgs{...}
type EvaluationFormNumericQuestionOptionInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput
	ToEvaluationFormNumericQuestionOptionOutputWithContext(context.Context) EvaluationFormNumericQuestionOptionOutput
}

// Information about the option range used for scoring in numeric questions.
type EvaluationFormNumericQuestionOptionArgs struct {
	// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
	AutomaticFail pulumi.BoolPtrInput `pulumi:"automaticFail"`
	// The maximum answer value of the range option.
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The minimum answer value of the range option.
	MinValue pulumi.IntInput `pulumi:"minValue"`
	// The score assigned to answer values within the range option.
	//  *Minimum*: 0
	//  *Maximum*: 10
	Score pulumi.IntPtrInput `pulumi:"score"`
}

func (EvaluationFormNumericQuestionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionOptionArgs) ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput {
	return i.ToEvaluationFormNumericQuestionOptionOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionOptionArgs) ToEvaluationFormNumericQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionOptionOutput)
}

// EvaluationFormNumericQuestionOptionArrayInput is an input type that accepts EvaluationFormNumericQuestionOptionArray and EvaluationFormNumericQuestionOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionOptionArrayInput` via:
//
//	EvaluationFormNumericQuestionOptionArray{ EvaluationFormNumericQuestionOptionArgs{...} }
type EvaluationFormNumericQuestionOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput
	ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(context.Context) EvaluationFormNumericQuestionOptionArrayOutput
}

type EvaluationFormNumericQuestionOptionArray []EvaluationFormNumericQuestionOptionInput

func (EvaluationFormNumericQuestionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionOptionArray) ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput {
	return i.ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionOptionArray) ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionOptionArrayOutput)
}

// Information about the option range used for scoring in numeric questions.
type EvaluationFormNumericQuestionOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionOptionOutput) ToEvaluationFormNumericQuestionOptionOutput() EvaluationFormNumericQuestionOptionOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionOutput) ToEvaluationFormNumericQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionOutput {
	return o
}

// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
func (o EvaluationFormNumericQuestionOptionOutput) AutomaticFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) *bool { return v.AutomaticFail }).(pulumi.BoolPtrOutput)
}

// The maximum answer value of the range option.
func (o EvaluationFormNumericQuestionOptionOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The minimum answer value of the range option.
func (o EvaluationFormNumericQuestionOptionOutput) MinValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) int { return v.MinValue }).(pulumi.IntOutput)
}

// The score assigned to answer values within the range option.
//
//	*Minimum*: 0
//	*Maximum*: 10
func (o EvaluationFormNumericQuestionOptionOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionOption) *int { return v.Score }).(pulumi.IntPtrOutput)
}

type EvaluationFormNumericQuestionOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormNumericQuestionOption)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) ToEvaluationFormNumericQuestionOptionArrayOutput() EvaluationFormNumericQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) ToEvaluationFormNumericQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormNumericQuestionOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormNumericQuestionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormNumericQuestionOption {
		return vs[0].([]EvaluationFormNumericQuestionOption)[vs[1].(int)]
	}).(EvaluationFormNumericQuestionOptionOutput)
}

// Information about properties for a numeric question in an evaluation form.
type EvaluationFormNumericQuestionProperties struct {
	// The automation properties of the numeric question.
	Automation *EvaluationFormNumericQuestionAutomation `pulumi:"automation"`
	// The maximum answer value.
	MaxValue int `pulumi:"maxValue"`
	// The minimum answer value.
	MinValue int `pulumi:"minValue"`
	// The scoring options of the numeric question.
	Options []EvaluationFormNumericQuestionOption `pulumi:"options"`
}

// EvaluationFormNumericQuestionPropertiesInput is an input type that accepts EvaluationFormNumericQuestionPropertiesArgs and EvaluationFormNumericQuestionPropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertiesInput` via:
//
//	EvaluationFormNumericQuestionPropertiesArgs{...}
type EvaluationFormNumericQuestionPropertiesInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput
	ToEvaluationFormNumericQuestionPropertiesOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertiesOutput
}

// Information about properties for a numeric question in an evaluation form.
type EvaluationFormNumericQuestionPropertiesArgs struct {
	// The automation properties of the numeric question.
	Automation EvaluationFormNumericQuestionAutomationPtrInput `pulumi:"automation"`
	// The maximum answer value.
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The minimum answer value.
	MinValue pulumi.IntInput `pulumi:"minValue"`
	// The scoring options of the numeric question.
	Options EvaluationFormNumericQuestionOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormNumericQuestionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesOutput)
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertiesArgs) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesOutput).ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionPropertiesPtrInput is an input type that accepts EvaluationFormNumericQuestionPropertiesArgs, EvaluationFormNumericQuestionPropertiesPtr and EvaluationFormNumericQuestionPropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertiesPtrInput` via:
//
//	        EvaluationFormNumericQuestionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionPropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput
	ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput
}

type evaluationFormNumericQuestionPropertiesPtrType EvaluationFormNumericQuestionPropertiesArgs

func EvaluationFormNumericQuestionPropertiesPtr(v *EvaluationFormNumericQuestionPropertiesArgs) EvaluationFormNumericQuestionPropertiesPtrInput {
	return (*evaluationFormNumericQuestionPropertiesPtrType)(v)
}

func (*evaluationFormNumericQuestionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionPropertiesPtrType) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionPropertiesPtrType) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// Information about properties for a numeric question in an evaluation form.
type EvaluationFormNumericQuestionPropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesOutput() EvaluationFormNumericQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertiesOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionProperties {
		return &v
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The automation properties of the numeric question.
func (o EvaluationFormNumericQuestionPropertiesOutput) Automation() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionAutomation {
		return v.Automation
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The maximum answer value.
func (o EvaluationFormNumericQuestionPropertiesOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The minimum answer value.
func (o EvaluationFormNumericQuestionPropertiesOutput) MinValue() pulumi.IntOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) int { return v.MinValue }).(pulumi.IntOutput)
}

// The scoring options of the numeric question.
func (o EvaluationFormNumericQuestionPropertiesOutput) Options() EvaluationFormNumericQuestionOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionProperties) []EvaluationFormNumericQuestionOption {
		return v.Options
	}).(EvaluationFormNumericQuestionOptionArrayOutput)
}

type EvaluationFormNumericQuestionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutput() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) ToEvaluationFormNumericQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Elem() EvaluationFormNumericQuestionPropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) EvaluationFormNumericQuestionProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionProperties
		return ret
	}).(EvaluationFormNumericQuestionPropertiesOutput)
}

// The automation properties of the numeric question.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Automation() EvaluationFormNumericQuestionAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *EvaluationFormNumericQuestionAutomation {
		if v == nil {
			return nil
		}
		return v.Automation
	}).(EvaluationFormNumericQuestionAutomationPtrOutput)
}

// The maximum answer value.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) MaxValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MaxValue
	}).(pulumi.IntPtrOutput)
}

// The minimum answer value.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) MinValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) *int {
		if v == nil {
			return nil
		}
		return &v.MinValue
	}).(pulumi.IntPtrOutput)
}

// The scoring options of the numeric question.
func (o EvaluationFormNumericQuestionPropertiesPtrOutput) Options() EvaluationFormNumericQuestionOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionProperties) []EvaluationFormNumericQuestionOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormNumericQuestionOptionArrayOutput)
}

// Information about the property value used in automation of a numeric questions.
type EvaluationFormNumericQuestionPropertyValueAutomation struct {
	// The property label of the automation.
	Label EvaluationFormNumericQuestionPropertyValueAutomationLabel `pulumi:"label"`
}

// EvaluationFormNumericQuestionPropertyValueAutomationInput is an input type that accepts EvaluationFormNumericQuestionPropertyValueAutomationArgs and EvaluationFormNumericQuestionPropertyValueAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertyValueAutomationInput` via:
//
//	EvaluationFormNumericQuestionPropertyValueAutomationArgs{...}
type EvaluationFormNumericQuestionPropertyValueAutomationInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput
}

// Information about the property value used in automation of a numeric questions.
type EvaluationFormNumericQuestionPropertyValueAutomationArgs struct {
	// The property label of the automation.
	Label EvaluationFormNumericQuestionPropertyValueAutomationLabelInput `pulumi:"label"`
}

func (EvaluationFormNumericQuestionPropertyValueAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationOutput)
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormNumericQuestionPropertyValueAutomationArgs) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationOutput).ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormNumericQuestionPropertyValueAutomationPtrInput is an input type that accepts EvaluationFormNumericQuestionPropertyValueAutomationArgs, EvaluationFormNumericQuestionPropertyValueAutomationPtr and EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormNumericQuestionPropertyValueAutomationPtrInput` via:
//
//	        EvaluationFormNumericQuestionPropertyValueAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormNumericQuestionPropertyValueAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput
	ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput
}

type evaluationFormNumericQuestionPropertyValueAutomationPtrType EvaluationFormNumericQuestionPropertyValueAutomationArgs

func EvaluationFormNumericQuestionPropertyValueAutomationPtr(v *EvaluationFormNumericQuestionPropertyValueAutomationArgs) EvaluationFormNumericQuestionPropertyValueAutomationPtrInput {
	return (*evaluationFormNumericQuestionPropertyValueAutomationPtrType)(v)
}

func (*evaluationFormNumericQuestionPropertyValueAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (i *evaluationFormNumericQuestionPropertyValueAutomationPtrType) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return i.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormNumericQuestionPropertyValueAutomationPtrType) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// Information about the property value used in automation of a numeric questions.
type EvaluationFormNumericQuestionPropertyValueAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationOutput() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormNumericQuestionPropertyValueAutomation) *EvaluationFormNumericQuestionPropertyValueAutomation {
		return &v
	}).(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput)
}

// The property label of the automation.
func (o EvaluationFormNumericQuestionPropertyValueAutomationOutput) Label() EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput {
	return o.ApplyT(func(v EvaluationFormNumericQuestionPropertyValueAutomation) EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		return v.Label
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelOutput)
}

type EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormNumericQuestionPropertyValueAutomation)(nil)).Elem()
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutput() EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) ToEvaluationFormNumericQuestionPropertyValueAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput {
	return o
}

func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) Elem() EvaluationFormNumericQuestionPropertyValueAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionPropertyValueAutomation) EvaluationFormNumericQuestionPropertyValueAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormNumericQuestionPropertyValueAutomation
		return ret
	}).(EvaluationFormNumericQuestionPropertyValueAutomationOutput)
}

// The property label of the automation.
func (o EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput) Label() EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput {
	return o.ApplyT(func(v *EvaluationFormNumericQuestionPropertyValueAutomation) *EvaluationFormNumericQuestionPropertyValueAutomationLabel {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(EvaluationFormNumericQuestionPropertyValueAutomationLabelPtrOutput)
}

// Information about a question from an evaluation form.
type EvaluationFormQuestion struct {
	// The instructions of the section.
	//  *Length Constraints*: Minimum length of 0. Maximum length of 1024.
	Instructions *string `pulumi:"instructions"`
	// The flag to enable not applicable answers to the question.
	NotApplicableEnabled *bool `pulumi:"notApplicableEnabled"`
	// The type of the question.
	//  *Allowed values*: ``NUMERIC`` | ``SINGLESELECT`` | ``TEXT``
	QuestionType EvaluationFormQuestionQuestionType `pulumi:"questionType"`
	// The properties of the type of question. Text questions do not have to define question type properties.
	QuestionTypeProperties *EvaluationFormQuestionTypeProperties `pulumi:"questionTypeProperties"`
	// The identifier of the question. An identifier must be unique within the evaluation form.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId string `pulumi:"refId"`
	// The title of the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 350.
	Title string `pulumi:"title"`
	// The scoring weight of the section.
	//  *Minimum*: 0
	//  *Maximum*: 100
	Weight *float64 `pulumi:"weight"`
}

// EvaluationFormQuestionInput is an input type that accepts EvaluationFormQuestionArgs and EvaluationFormQuestionOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionInput` via:
//
//	EvaluationFormQuestionArgs{...}
type EvaluationFormQuestionInput interface {
	pulumi.Input

	ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput
	ToEvaluationFormQuestionOutputWithContext(context.Context) EvaluationFormQuestionOutput
}

// Information about a question from an evaluation form.
type EvaluationFormQuestionArgs struct {
	// The instructions of the section.
	//  *Length Constraints*: Minimum length of 0. Maximum length of 1024.
	Instructions pulumi.StringPtrInput `pulumi:"instructions"`
	// The flag to enable not applicable answers to the question.
	NotApplicableEnabled pulumi.BoolPtrInput `pulumi:"notApplicableEnabled"`
	// The type of the question.
	//  *Allowed values*: ``NUMERIC`` | ``SINGLESELECT`` | ``TEXT``
	QuestionType EvaluationFormQuestionQuestionTypeInput `pulumi:"questionType"`
	// The properties of the type of question. Text questions do not have to define question type properties.
	QuestionTypeProperties EvaluationFormQuestionTypePropertiesPtrInput `pulumi:"questionTypeProperties"`
	// The identifier of the question. An identifier must be unique within the evaluation form.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The title of the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 350.
	Title pulumi.StringInput `pulumi:"title"`
	// The scoring weight of the section.
	//  *Minimum*: 0
	//  *Maximum*: 100
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (EvaluationFormQuestionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestion)(nil)).Elem()
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput {
	return i.ToEvaluationFormQuestionOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionOutputWithContext(ctx context.Context) EvaluationFormQuestionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionOutput)
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return i.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionArgs) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionOutput).ToEvaluationFormQuestionPtrOutputWithContext(ctx)
}

// EvaluationFormQuestionPtrInput is an input type that accepts EvaluationFormQuestionArgs, EvaluationFormQuestionPtr and EvaluationFormQuestionPtrOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionPtrInput` via:
//
//	        EvaluationFormQuestionArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormQuestionPtrInput interface {
	pulumi.Input

	ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput
	ToEvaluationFormQuestionPtrOutputWithContext(context.Context) EvaluationFormQuestionPtrOutput
}

type evaluationFormQuestionPtrType EvaluationFormQuestionArgs

func EvaluationFormQuestionPtr(v *EvaluationFormQuestionArgs) EvaluationFormQuestionPtrInput {
	return (*evaluationFormQuestionPtrType)(v)
}

func (*evaluationFormQuestionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestion)(nil)).Elem()
}

func (i *evaluationFormQuestionPtrType) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return i.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (i *evaluationFormQuestionPtrType) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionPtrOutput)
}

// Information about a question from an evaluation form.
type EvaluationFormQuestionOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestion)(nil)).Elem()
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionOutput() EvaluationFormQuestionOutput {
	return o
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionOutputWithContext(ctx context.Context) EvaluationFormQuestionOutput {
	return o
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return o.ToEvaluationFormQuestionPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionOutput) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormQuestion) *EvaluationFormQuestion {
		return &v
	}).(EvaluationFormQuestionPtrOutput)
}

// The instructions of the section.
//
//	*Length Constraints*: Minimum length of 0. Maximum length of 1024.
func (o EvaluationFormQuestionOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *string { return v.Instructions }).(pulumi.StringPtrOutput)
}

// The flag to enable not applicable answers to the question.
func (o EvaluationFormQuestionOutput) NotApplicableEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *bool { return v.NotApplicableEnabled }).(pulumi.BoolPtrOutput)
}

// The type of the question.
//
//	*Allowed values*: ``NUMERIC`` | ``SINGLESELECT`` | ``TEXT``
func (o EvaluationFormQuestionOutput) QuestionType() EvaluationFormQuestionQuestionTypeOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) EvaluationFormQuestionQuestionType { return v.QuestionType }).(EvaluationFormQuestionQuestionTypeOutput)
}

// The properties of the type of question. Text questions do not have to define question type properties.
func (o EvaluationFormQuestionOutput) QuestionTypeProperties() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *EvaluationFormQuestionTypeProperties { return v.QuestionTypeProperties }).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The identifier of the question. An identifier must be unique within the evaluation form.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormQuestionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) string { return v.RefId }).(pulumi.StringOutput)
}

// The title of the question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 350.
func (o EvaluationFormQuestionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) string { return v.Title }).(pulumi.StringOutput)
}

// The scoring weight of the section.
//
//	*Minimum*: 0
//	*Maximum*: 100
func (o EvaluationFormQuestionOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestion) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EvaluationFormQuestionPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestion)(nil)).Elem()
}

func (o EvaluationFormQuestionPtrOutput) ToEvaluationFormQuestionPtrOutput() EvaluationFormQuestionPtrOutput {
	return o
}

func (o EvaluationFormQuestionPtrOutput) ToEvaluationFormQuestionPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionPtrOutput {
	return o
}

func (o EvaluationFormQuestionPtrOutput) Elem() EvaluationFormQuestionOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) EvaluationFormQuestion {
		if v != nil {
			return *v
		}
		var ret EvaluationFormQuestion
		return ret
	}).(EvaluationFormQuestionOutput)
}

// The instructions of the section.
//
//	*Length Constraints*: Minimum length of 0. Maximum length of 1024.
func (o EvaluationFormQuestionPtrOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return v.Instructions
	}).(pulumi.StringPtrOutput)
}

// The flag to enable not applicable answers to the question.
func (o EvaluationFormQuestionPtrOutput) NotApplicableEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *bool {
		if v == nil {
			return nil
		}
		return v.NotApplicableEnabled
	}).(pulumi.BoolPtrOutput)
}

// The type of the question.
//
//	*Allowed values*: ``NUMERIC`` | ``SINGLESELECT`` | ``TEXT``
func (o EvaluationFormQuestionPtrOutput) QuestionType() EvaluationFormQuestionQuestionTypePtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *EvaluationFormQuestionQuestionType {
		if v == nil {
			return nil
		}
		return &v.QuestionType
	}).(EvaluationFormQuestionQuestionTypePtrOutput)
}

// The properties of the type of question. Text questions do not have to define question type properties.
func (o EvaluationFormQuestionPtrOutput) QuestionTypeProperties() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *EvaluationFormQuestionTypeProperties {
		if v == nil {
			return nil
		}
		return v.QuestionTypeProperties
	}).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The identifier of the question. An identifier must be unique within the evaluation form.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormQuestionPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return &v.RefId
	}).(pulumi.StringPtrOutput)
}

// The title of the question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 350.
func (o EvaluationFormQuestionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// The scoring weight of the section.
//
//	*Minimum*: 0
//	*Maximum*: 100
func (o EvaluationFormQuestionPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestion) *float64 {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.Float64PtrOutput)
}

// Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
type EvaluationFormQuestionTypeProperties struct {
	// The properties of the numeric question.
	Numeric *EvaluationFormNumericQuestionProperties `pulumi:"numeric"`
	// The properties of the numeric question.
	SingleSelect *EvaluationFormSingleSelectQuestionProperties `pulumi:"singleSelect"`
}

// EvaluationFormQuestionTypePropertiesInput is an input type that accepts EvaluationFormQuestionTypePropertiesArgs and EvaluationFormQuestionTypePropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionTypePropertiesInput` via:
//
//	EvaluationFormQuestionTypePropertiesArgs{...}
type EvaluationFormQuestionTypePropertiesInput interface {
	pulumi.Input

	ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput
	ToEvaluationFormQuestionTypePropertiesOutputWithContext(context.Context) EvaluationFormQuestionTypePropertiesOutput
}

// Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
type EvaluationFormQuestionTypePropertiesArgs struct {
	// The properties of the numeric question.
	Numeric EvaluationFormNumericQuestionPropertiesPtrInput `pulumi:"numeric"`
	// The properties of the numeric question.
	SingleSelect EvaluationFormSingleSelectQuestionPropertiesPtrInput `pulumi:"singleSelect"`
}

func (EvaluationFormQuestionTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput {
	return i.ToEvaluationFormQuestionTypePropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesOutput)
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return i.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormQuestionTypePropertiesArgs) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesOutput).ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormQuestionTypePropertiesPtrInput is an input type that accepts EvaluationFormQuestionTypePropertiesArgs, EvaluationFormQuestionTypePropertiesPtr and EvaluationFormQuestionTypePropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormQuestionTypePropertiesPtrInput` via:
//
//	        EvaluationFormQuestionTypePropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormQuestionTypePropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput
	ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Context) EvaluationFormQuestionTypePropertiesPtrOutput
}

type evaluationFormQuestionTypePropertiesPtrType EvaluationFormQuestionTypePropertiesArgs

func EvaluationFormQuestionTypePropertiesPtr(v *EvaluationFormQuestionTypePropertiesArgs) EvaluationFormQuestionTypePropertiesPtrInput {
	return (*evaluationFormQuestionTypePropertiesPtrType)(v)
}

func (*evaluationFormQuestionTypePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (i *evaluationFormQuestionTypePropertiesPtrType) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return i.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormQuestionTypePropertiesPtrType) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
type EvaluationFormQuestionTypePropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesOutput() EvaluationFormQuestionTypePropertiesOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormQuestionTypePropertiesOutput) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormQuestionTypeProperties) *EvaluationFormQuestionTypeProperties {
		return &v
	}).(EvaluationFormQuestionTypePropertiesPtrOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesOutput) Numeric() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestionTypeProperties) *EvaluationFormNumericQuestionProperties {
		return v.Numeric
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesOutput) SingleSelect() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v EvaluationFormQuestionTypeProperties) *EvaluationFormSingleSelectQuestionProperties {
		return v.SingleSelect
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

type EvaluationFormQuestionTypePropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormQuestionTypePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormQuestionTypeProperties)(nil)).Elem()
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) ToEvaluationFormQuestionTypePropertiesPtrOutput() EvaluationFormQuestionTypePropertiesPtrOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) ToEvaluationFormQuestionTypePropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormQuestionTypePropertiesPtrOutput {
	return o
}

func (o EvaluationFormQuestionTypePropertiesPtrOutput) Elem() EvaluationFormQuestionTypePropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) EvaluationFormQuestionTypeProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormQuestionTypeProperties
		return ret
	}).(EvaluationFormQuestionTypePropertiesOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesPtrOutput) Numeric() EvaluationFormNumericQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) *EvaluationFormNumericQuestionProperties {
		if v == nil {
			return nil
		}
		return v.Numeric
	}).(EvaluationFormNumericQuestionPropertiesPtrOutput)
}

// The properties of the numeric question.
func (o EvaluationFormQuestionTypePropertiesPtrOutput) SingleSelect() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyT(func(v *EvaluationFormQuestionTypeProperties) *EvaluationFormSingleSelectQuestionProperties {
		if v == nil {
			return nil
		}
		return v.SingleSelect
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// A scoring strategy of the evaluation form.
type EvaluationFormScoringStrategy struct {
	// The scoring mode of the evaluation form.
	//  *Allowed values*: ``QUESTION_ONLY`` | ``SECTION_ONLY``
	Mode EvaluationFormScoringStrategyMode `pulumi:"mode"`
	// The scoring status of the evaluation form.
	//  *Allowed values*: ``ENABLED`` | ``DISABLED``
	Status EvaluationFormScoringStrategyStatus `pulumi:"status"`
}

// EvaluationFormScoringStrategyInput is an input type that accepts EvaluationFormScoringStrategyArgs and EvaluationFormScoringStrategyOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyInput` via:
//
//	EvaluationFormScoringStrategyArgs{...}
type EvaluationFormScoringStrategyInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput
	ToEvaluationFormScoringStrategyOutputWithContext(context.Context) EvaluationFormScoringStrategyOutput
}

// A scoring strategy of the evaluation form.
type EvaluationFormScoringStrategyArgs struct {
	// The scoring mode of the evaluation form.
	//  *Allowed values*: ``QUESTION_ONLY`` | ``SECTION_ONLY``
	Mode EvaluationFormScoringStrategyModeInput `pulumi:"mode"`
	// The scoring status of the evaluation form.
	//  *Allowed values*: ``ENABLED`` | ``DISABLED``
	Status EvaluationFormScoringStrategyStatusInput `pulumi:"status"`
}

func (EvaluationFormScoringStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategy)(nil)).Elem()
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput {
	return i.ToEvaluationFormScoringStrategyOutputWithContext(context.Background())
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyOutput)
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return i.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (i EvaluationFormScoringStrategyArgs) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyOutput).ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx)
}

// EvaluationFormScoringStrategyPtrInput is an input type that accepts EvaluationFormScoringStrategyArgs, EvaluationFormScoringStrategyPtr and EvaluationFormScoringStrategyPtrOutput values.
// You can construct a concrete instance of `EvaluationFormScoringStrategyPtrInput` via:
//
//	        EvaluationFormScoringStrategyArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormScoringStrategyPtrInput interface {
	pulumi.Input

	ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput
	ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Context) EvaluationFormScoringStrategyPtrOutput
}

type evaluationFormScoringStrategyPtrType EvaluationFormScoringStrategyArgs

func EvaluationFormScoringStrategyPtr(v *EvaluationFormScoringStrategyArgs) EvaluationFormScoringStrategyPtrInput {
	return (*evaluationFormScoringStrategyPtrType)(v)
}

func (*evaluationFormScoringStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategy)(nil)).Elem()
}

func (i *evaluationFormScoringStrategyPtrType) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return i.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (i *evaluationFormScoringStrategyPtrType) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormScoringStrategyPtrOutput)
}

// A scoring strategy of the evaluation form.
type EvaluationFormScoringStrategyOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormScoringStrategy)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyOutput() EvaluationFormScoringStrategyOutput {
	return o
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyOutput {
	return o
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return o.ToEvaluationFormScoringStrategyPtrOutputWithContext(context.Background())
}

func (o EvaluationFormScoringStrategyOutput) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormScoringStrategy) *EvaluationFormScoringStrategy {
		return &v
	}).(EvaluationFormScoringStrategyPtrOutput)
}

// The scoring mode of the evaluation form.
//
//	*Allowed values*: ``QUESTION_ONLY`` | ``SECTION_ONLY``
func (o EvaluationFormScoringStrategyOutput) Mode() EvaluationFormScoringStrategyModeOutput {
	return o.ApplyT(func(v EvaluationFormScoringStrategy) EvaluationFormScoringStrategyMode { return v.Mode }).(EvaluationFormScoringStrategyModeOutput)
}

// The scoring status of the evaluation form.
//
//	*Allowed values*: ``ENABLED`` | ``DISABLED``
func (o EvaluationFormScoringStrategyOutput) Status() EvaluationFormScoringStrategyStatusOutput {
	return o.ApplyT(func(v EvaluationFormScoringStrategy) EvaluationFormScoringStrategyStatus { return v.Status }).(EvaluationFormScoringStrategyStatusOutput)
}

type EvaluationFormScoringStrategyPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormScoringStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormScoringStrategy)(nil)).Elem()
}

func (o EvaluationFormScoringStrategyPtrOutput) ToEvaluationFormScoringStrategyPtrOutput() EvaluationFormScoringStrategyPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyPtrOutput) ToEvaluationFormScoringStrategyPtrOutputWithContext(ctx context.Context) EvaluationFormScoringStrategyPtrOutput {
	return o
}

func (o EvaluationFormScoringStrategyPtrOutput) Elem() EvaluationFormScoringStrategyOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) EvaluationFormScoringStrategy {
		if v != nil {
			return *v
		}
		var ret EvaluationFormScoringStrategy
		return ret
	}).(EvaluationFormScoringStrategyOutput)
}

// The scoring mode of the evaluation form.
//
//	*Allowed values*: ``QUESTION_ONLY`` | ``SECTION_ONLY``
func (o EvaluationFormScoringStrategyPtrOutput) Mode() EvaluationFormScoringStrategyModePtrOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) *EvaluationFormScoringStrategyMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(EvaluationFormScoringStrategyModePtrOutput)
}

// The scoring status of the evaluation form.
//
//	*Allowed values*: ``ENABLED`` | ``DISABLED``
func (o EvaluationFormScoringStrategyPtrOutput) Status() EvaluationFormScoringStrategyStatusPtrOutput {
	return o.ApplyT(func(v *EvaluationFormScoringStrategy) *EvaluationFormScoringStrategyStatus {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(EvaluationFormScoringStrategyStatusPtrOutput)
}

// Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
type EvaluationFormSection struct {
	// The instructions of the section.
	Instructions *string `pulumi:"instructions"`
	// The items of the section.
	//  *Minimum*: 1
	Items []EvaluationFormItem `pulumi:"items"`
	// The identifier of the section. An identifier must be unique within the evaluation form.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId string `pulumi:"refId"`
	// The title of the section.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 128.
	Title string `pulumi:"title"`
	// The scoring weight of the section.
	//  *Minimum*: 0
	//  *Maximum*: 100
	Weight *float64 `pulumi:"weight"`
}

// EvaluationFormSectionInput is an input type that accepts EvaluationFormSectionArgs and EvaluationFormSectionOutput values.
// You can construct a concrete instance of `EvaluationFormSectionInput` via:
//
//	EvaluationFormSectionArgs{...}
type EvaluationFormSectionInput interface {
	pulumi.Input

	ToEvaluationFormSectionOutput() EvaluationFormSectionOutput
	ToEvaluationFormSectionOutputWithContext(context.Context) EvaluationFormSectionOutput
}

// Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
type EvaluationFormSectionArgs struct {
	// The instructions of the section.
	Instructions pulumi.StringPtrInput `pulumi:"instructions"`
	// The items of the section.
	//  *Minimum*: 1
	Items EvaluationFormItemArrayInput `pulumi:"items"`
	// The identifier of the section. An identifier must be unique within the evaluation form.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The title of the section.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 128.
	Title pulumi.StringInput `pulumi:"title"`
	// The scoring weight of the section.
	//  *Minimum*: 0
	//  *Maximum*: 100
	Weight pulumi.Float64PtrInput `pulumi:"weight"`
}

func (EvaluationFormSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSection)(nil)).Elem()
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionOutput() EvaluationFormSectionOutput {
	return i.ToEvaluationFormSectionOutputWithContext(context.Background())
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionOutputWithContext(ctx context.Context) EvaluationFormSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionOutput)
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return i.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSectionArgs) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionOutput).ToEvaluationFormSectionPtrOutputWithContext(ctx)
}

// EvaluationFormSectionPtrInput is an input type that accepts EvaluationFormSectionArgs, EvaluationFormSectionPtr and EvaluationFormSectionPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSectionPtrInput` via:
//
//	        EvaluationFormSectionArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSectionPtrInput interface {
	pulumi.Input

	ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput
	ToEvaluationFormSectionPtrOutputWithContext(context.Context) EvaluationFormSectionPtrOutput
}

type evaluationFormSectionPtrType EvaluationFormSectionArgs

func EvaluationFormSectionPtr(v *EvaluationFormSectionArgs) EvaluationFormSectionPtrInput {
	return (*evaluationFormSectionPtrType)(v)
}

func (*evaluationFormSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSection)(nil)).Elem()
}

func (i *evaluationFormSectionPtrType) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return i.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSectionPtrType) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSectionPtrOutput)
}

// Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
type EvaluationFormSectionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSection)(nil)).Elem()
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionOutput() EvaluationFormSectionOutput {
	return o
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionOutputWithContext(ctx context.Context) EvaluationFormSectionOutput {
	return o
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return o.ToEvaluationFormSectionPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSectionOutput) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSection) *EvaluationFormSection {
		return &v
	}).(EvaluationFormSectionPtrOutput)
}

// The instructions of the section.
func (o EvaluationFormSectionOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormSection) *string { return v.Instructions }).(pulumi.StringPtrOutput)
}

// The items of the section.
//
//	*Minimum*: 1
func (o EvaluationFormSectionOutput) Items() EvaluationFormItemArrayOutput {
	return o.ApplyT(func(v EvaluationFormSection) []EvaluationFormItem { return v.Items }).(EvaluationFormItemArrayOutput)
}

// The identifier of the section. An identifier must be unique within the evaluation form.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSectionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSection) string { return v.RefId }).(pulumi.StringOutput)
}

// The title of the section.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 128.
func (o EvaluationFormSectionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSection) string { return v.Title }).(pulumi.StringOutput)
}

// The scoring weight of the section.
//
//	*Minimum*: 0
//	*Maximum*: 100
func (o EvaluationFormSectionOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EvaluationFormSection) *float64 { return v.Weight }).(pulumi.Float64PtrOutput)
}

type EvaluationFormSectionPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSection)(nil)).Elem()
}

func (o EvaluationFormSectionPtrOutput) ToEvaluationFormSectionPtrOutput() EvaluationFormSectionPtrOutput {
	return o
}

func (o EvaluationFormSectionPtrOutput) ToEvaluationFormSectionPtrOutputWithContext(ctx context.Context) EvaluationFormSectionPtrOutput {
	return o
}

func (o EvaluationFormSectionPtrOutput) Elem() EvaluationFormSectionOutput {
	return o.ApplyT(func(v *EvaluationFormSection) EvaluationFormSection {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSection
		return ret
	}).(EvaluationFormSectionOutput)
}

// The instructions of the section.
func (o EvaluationFormSectionPtrOutput) Instructions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return v.Instructions
	}).(pulumi.StringPtrOutput)
}

// The items of the section.
//
//	*Minimum*: 1
func (o EvaluationFormSectionPtrOutput) Items() EvaluationFormItemArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSection) []EvaluationFormItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(EvaluationFormItemArrayOutput)
}

// The identifier of the section. An identifier must be unique within the evaluation form.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSectionPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return &v.RefId
	}).(pulumi.StringPtrOutput)
}

// The title of the section.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 128.
func (o EvaluationFormSectionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// The scoring weight of the section.
//
//	*Minimum*: 0
//	*Maximum*: 100
func (o EvaluationFormSectionPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *EvaluationFormSection) *float64 {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.Float64PtrOutput)
}

// Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
type EvaluationFormSingleSelectQuestionAutomation struct {
	// The identifier of the default answer option, when none of the automation options match the criteria.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	DefaultOptionRefId *string `pulumi:"defaultOptionRefId"`
	// The automation options of the single select question.
	//  *Minimum*: 1
	//  *Maximum*: 20
	Options []EvaluationFormSingleSelectQuestionAutomationOption `pulumi:"options"`
}

// EvaluationFormSingleSelectQuestionAutomationInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationArgs and EvaluationFormSingleSelectQuestionAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationArgs{...}
type EvaluationFormSingleSelectQuestionAutomationInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput
	ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOutput
}

// Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
type EvaluationFormSingleSelectQuestionAutomationArgs struct {
	// The identifier of the default answer option, when none of the automation options match the criteria.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	DefaultOptionRefId pulumi.StringPtrInput `pulumi:"defaultOptionRefId"`
	// The automation options of the single select question.
	//  *Minimum*: 1
	//  *Maximum*: 20
	Options EvaluationFormSingleSelectQuestionAutomationOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormSingleSelectQuestionAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOutput)
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationArgs) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOutput).ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx)
}

// EvaluationFormSingleSelectQuestionAutomationPtrInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationArgs, EvaluationFormSingleSelectQuestionAutomationPtr and EvaluationFormSingleSelectQuestionAutomationPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationPtrInput` via:
//
//	        EvaluationFormSingleSelectQuestionAutomationArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSingleSelectQuestionAutomationPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput
	ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput
}

type evaluationFormSingleSelectQuestionAutomationPtrType EvaluationFormSingleSelectQuestionAutomationArgs

func EvaluationFormSingleSelectQuestionAutomationPtr(v *EvaluationFormSingleSelectQuestionAutomationArgs) EvaluationFormSingleSelectQuestionAutomationPtrInput {
	return (*evaluationFormSingleSelectQuestionAutomationPtrType)(v)
}

func (*evaluationFormSingleSelectQuestionAutomationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (i *evaluationFormSingleSelectQuestionAutomationPtrType) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSingleSelectQuestionAutomationPtrType) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
type EvaluationFormSingleSelectQuestionAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationOutput() EvaluationFormSingleSelectQuestionAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionAutomationOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionAutomation) *EvaluationFormSingleSelectQuestionAutomation {
		return &v
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The identifier of the default answer option, when none of the automation options match the criteria.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSingleSelectQuestionAutomationOutput) DefaultOptionRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomation) *string { return v.DefaultOptionRefId }).(pulumi.StringPtrOutput)
}

// The automation options of the single select question.
//
//	*Minimum*: 1
//	*Maximum*: 20
func (o EvaluationFormSingleSelectQuestionAutomationOutput) Options() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomation) []EvaluationFormSingleSelectQuestionAutomationOption {
		return v.Options
	}).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

type EvaluationFormSingleSelectQuestionAutomationPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutput() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) ToEvaluationFormSingleSelectQuestionAutomationPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) Elem() EvaluationFormSingleSelectQuestionAutomationOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) EvaluationFormSingleSelectQuestionAutomation {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionAutomation
		return ret
	}).(EvaluationFormSingleSelectQuestionAutomationOutput)
}

// The identifier of the default answer option, when none of the automation options match the criteria.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) DefaultOptionRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) *string {
		if v == nil {
			return nil
		}
		return v.DefaultOptionRefId
	}).(pulumi.StringPtrOutput)
}

// The automation options of the single select question.
//
//	*Minimum*: 1
//	*Maximum*: 20
func (o EvaluationFormSingleSelectQuestionAutomationPtrOutput) Options() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionAutomation) []EvaluationFormSingleSelectQuestionAutomationOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

// The automation options of the single select question.
type EvaluationFormSingleSelectQuestionAutomationOption struct {
	// The automation option based on a rule category for the single select question.
	RuleCategory EvaluationFormSingleSelectQuestionRuleCategoryAutomation `pulumi:"ruleCategory"`
}

// EvaluationFormSingleSelectQuestionAutomationOptionInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationOptionArgs and EvaluationFormSingleSelectQuestionAutomationOptionOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationOptionInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationOptionArgs{...}
type EvaluationFormSingleSelectQuestionAutomationOptionInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput
	ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput
}

// The automation options of the single select question.
type EvaluationFormSingleSelectQuestionAutomationOptionArgs struct {
	// The automation option based on a rule category for the single select question.
	RuleCategory EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput `pulumi:"ruleCategory"`
}

func (EvaluationFormSingleSelectQuestionAutomationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArgs) ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArgs) ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOptionOutput)
}

// EvaluationFormSingleSelectQuestionAutomationOptionArrayInput is an input type that accepts EvaluationFormSingleSelectQuestionAutomationOptionArray and EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionAutomationOptionArrayInput` via:
//
//	EvaluationFormSingleSelectQuestionAutomationOptionArray{ EvaluationFormSingleSelectQuestionAutomationOptionArgs{...} }
type EvaluationFormSingleSelectQuestionAutomationOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput
	ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput
}

type EvaluationFormSingleSelectQuestionAutomationOptionArray []EvaluationFormSingleSelectQuestionAutomationOptionInput

func (EvaluationFormSingleSelectQuestionAutomationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArray) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return i.ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionAutomationOptionArray) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput)
}

// The automation options of the single select question.
type EvaluationFormSingleSelectQuestionAutomationOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionOutput() EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return o
}

// The automation option based on a rule category for the single select question.
func (o EvaluationFormSingleSelectQuestionAutomationOptionOutput) RuleCategory() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionAutomationOption) EvaluationFormSingleSelectQuestionRuleCategoryAutomation {
		return v.RuleCategory
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput)
}

type EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionAutomationOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutput() EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) ToEvaluationFormSingleSelectQuestionAutomationOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormSingleSelectQuestionAutomationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormSingleSelectQuestionAutomationOption {
		return vs[0].([]EvaluationFormSingleSelectQuestionAutomationOption)[vs[1].(int)]
	}).(EvaluationFormSingleSelectQuestionAutomationOptionOutput)
}

// Information about the automation configuration in single select questions.
type EvaluationFormSingleSelectQuestionOption struct {
	// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
	AutomaticFail *bool `pulumi:"automaticFail"`
	// The identifier of the answer option. An identifier must be unique within the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId string `pulumi:"refId"`
	// The score assigned to the answer option.
	//  *Minimum*: 0
	//  *Maximum*: 10
	Score *int `pulumi:"score"`
	// The title of the answer option.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 128.
	Text string `pulumi:"text"`
}

// EvaluationFormSingleSelectQuestionOptionInput is an input type that accepts EvaluationFormSingleSelectQuestionOptionArgs and EvaluationFormSingleSelectQuestionOptionOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionOptionInput` via:
//
//	EvaluationFormSingleSelectQuestionOptionArgs{...}
type EvaluationFormSingleSelectQuestionOptionInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput
	ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionOptionOutput
}

// Information about the automation configuration in single select questions.
type EvaluationFormSingleSelectQuestionOptionArgs struct {
	// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
	AutomaticFail pulumi.BoolPtrInput `pulumi:"automaticFail"`
	// The identifier of the answer option. An identifier must be unique within the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The score assigned to the answer option.
	//  *Minimum*: 0
	//  *Maximum*: 10
	Score pulumi.IntPtrInput `pulumi:"score"`
	// The title of the answer option.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 128.
	Text pulumi.StringInput `pulumi:"text"`
}

func (EvaluationFormSingleSelectQuestionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionOptionArgs) ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput {
	return i.ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionOptionArgs) ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionOptionOutput)
}

// EvaluationFormSingleSelectQuestionOptionArrayInput is an input type that accepts EvaluationFormSingleSelectQuestionOptionArray and EvaluationFormSingleSelectQuestionOptionArrayOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionOptionArrayInput` via:
//
//	EvaluationFormSingleSelectQuestionOptionArray{ EvaluationFormSingleSelectQuestionOptionArgs{...} }
type EvaluationFormSingleSelectQuestionOptionArrayInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput
	ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput
}

type EvaluationFormSingleSelectQuestionOptionArray []EvaluationFormSingleSelectQuestionOptionInput

func (EvaluationFormSingleSelectQuestionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionOptionArray) ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return i.ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionOptionArray) ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

// Information about the automation configuration in single select questions.
type EvaluationFormSingleSelectQuestionOptionOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionOptionOutput) ToEvaluationFormSingleSelectQuestionOptionOutput() EvaluationFormSingleSelectQuestionOptionOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionOutput) ToEvaluationFormSingleSelectQuestionOptionOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionOutput {
	return o
}

// The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
func (o EvaluationFormSingleSelectQuestionOptionOutput) AutomaticFail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) *bool { return v.AutomaticFail }).(pulumi.BoolPtrOutput)
}

// The identifier of the answer option. An identifier must be unique within the question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSingleSelectQuestionOptionOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) string { return v.RefId }).(pulumi.StringOutput)
}

// The score assigned to the answer option.
//
//	*Minimum*: 0
//	*Maximum*: 10
func (o EvaluationFormSingleSelectQuestionOptionOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// The title of the answer option.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 128.
func (o EvaluationFormSingleSelectQuestionOptionOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionOption) string { return v.Text }).(pulumi.StringOutput)
}

type EvaluationFormSingleSelectQuestionOptionArrayOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvaluationFormSingleSelectQuestionOption)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) ToEvaluationFormSingleSelectQuestionOptionArrayOutput() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) ToEvaluationFormSingleSelectQuestionOptionArrayOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionOptionArrayOutput) Index(i pulumi.IntInput) EvaluationFormSingleSelectQuestionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvaluationFormSingleSelectQuestionOption {
		return vs[0].([]EvaluationFormSingleSelectQuestionOption)[vs[1].(int)]
	}).(EvaluationFormSingleSelectQuestionOptionOutput)
}

// Information about the options in single select questions.
type EvaluationFormSingleSelectQuestionProperties struct {
	// The display mode of the single select question.
	Automation *EvaluationFormSingleSelectQuestionAutomation `pulumi:"automation"`
	// The display mode of the single select question.
	//  *Allowed values*: ``DROPDOWN`` | ``RADIO``
	DisplayAs *EvaluationFormSingleSelectQuestionPropertiesDisplayAs `pulumi:"displayAs"`
	// The answer options of the single select question.
	//  *Minimum*: 2
	//  *Maximum*: 256
	Options []EvaluationFormSingleSelectQuestionOption `pulumi:"options"`
}

// EvaluationFormSingleSelectQuestionPropertiesInput is an input type that accepts EvaluationFormSingleSelectQuestionPropertiesArgs and EvaluationFormSingleSelectQuestionPropertiesOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionPropertiesInput` via:
//
//	EvaluationFormSingleSelectQuestionPropertiesArgs{...}
type EvaluationFormSingleSelectQuestionPropertiesInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput
	ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput
}

// Information about the options in single select questions.
type EvaluationFormSingleSelectQuestionPropertiesArgs struct {
	// The display mode of the single select question.
	Automation EvaluationFormSingleSelectQuestionAutomationPtrInput `pulumi:"automation"`
	// The display mode of the single select question.
	//  *Allowed values*: ``DROPDOWN`` | ``RADIO``
	DisplayAs EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrInput `pulumi:"displayAs"`
	// The answer options of the single select question.
	//  *Minimum*: 2
	//  *Maximum*: 256
	Options EvaluationFormSingleSelectQuestionOptionArrayInput `pulumi:"options"`
}

func (EvaluationFormSingleSelectQuestionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesOutput)
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionPropertiesArgs) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesOutput).ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx)
}

// EvaluationFormSingleSelectQuestionPropertiesPtrInput is an input type that accepts EvaluationFormSingleSelectQuestionPropertiesArgs, EvaluationFormSingleSelectQuestionPropertiesPtr and EvaluationFormSingleSelectQuestionPropertiesPtrOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionPropertiesPtrInput` via:
//
//	        EvaluationFormSingleSelectQuestionPropertiesArgs{...}
//
//	or:
//
//	        nil
type EvaluationFormSingleSelectQuestionPropertiesPtrInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput
	ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput
}

type evaluationFormSingleSelectQuestionPropertiesPtrType EvaluationFormSingleSelectQuestionPropertiesArgs

func EvaluationFormSingleSelectQuestionPropertiesPtr(v *EvaluationFormSingleSelectQuestionPropertiesArgs) EvaluationFormSingleSelectQuestionPropertiesPtrInput {
	return (*evaluationFormSingleSelectQuestionPropertiesPtrType)(v)
}

func (*evaluationFormSingleSelectQuestionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (i *evaluationFormSingleSelectQuestionPropertiesPtrType) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return i.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (i *evaluationFormSingleSelectQuestionPropertiesPtrType) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// Information about the options in single select questions.
type EvaluationFormSingleSelectQuestionPropertiesOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesOutput() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(context.Background())
}

func (o EvaluationFormSingleSelectQuestionPropertiesOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionProperties {
		return &v
	}).(EvaluationFormSingleSelectQuestionPropertiesPtrOutput)
}

// The display mode of the single select question.
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) Automation() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionAutomation {
		return v.Automation
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The display mode of the single select question.
//
//	*Allowed values*: ``DROPDOWN`` | ``RADIO``
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) DisplayAs() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		return v.DisplayAs
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

// The answer options of the single select question.
//
//	*Minimum*: 2
//	*Maximum*: 256
func (o EvaluationFormSingleSelectQuestionPropertiesOutput) Options() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionProperties) []EvaluationFormSingleSelectQuestionOption {
		return v.Options
	}).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

type EvaluationFormSingleSelectQuestionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvaluationFormSingleSelectQuestionProperties)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutput() EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) ToEvaluationFormSingleSelectQuestionPropertiesPtrOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionPropertiesPtrOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Elem() EvaluationFormSingleSelectQuestionPropertiesOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) EvaluationFormSingleSelectQuestionProperties {
		if v != nil {
			return *v
		}
		var ret EvaluationFormSingleSelectQuestionProperties
		return ret
	}).(EvaluationFormSingleSelectQuestionPropertiesOutput)
}

// The display mode of the single select question.
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Automation() EvaluationFormSingleSelectQuestionAutomationPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionAutomation {
		if v == nil {
			return nil
		}
		return v.Automation
	}).(EvaluationFormSingleSelectQuestionAutomationPtrOutput)
}

// The display mode of the single select question.
//
//	*Allowed values*: ``DROPDOWN`` | ``RADIO``
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) DisplayAs() EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) *EvaluationFormSingleSelectQuestionPropertiesDisplayAs {
		if v == nil {
			return nil
		}
		return v.DisplayAs
	}).(EvaluationFormSingleSelectQuestionPropertiesDisplayAsPtrOutput)
}

// The answer options of the single select question.
//
//	*Minimum*: 2
//	*Maximum*: 256
func (o EvaluationFormSingleSelectQuestionPropertiesPtrOutput) Options() EvaluationFormSingleSelectQuestionOptionArrayOutput {
	return o.ApplyT(func(v *EvaluationFormSingleSelectQuestionProperties) []EvaluationFormSingleSelectQuestionOption {
		if v == nil {
			return nil
		}
		return v.Options
	}).(EvaluationFormSingleSelectQuestionOptionArrayOutput)
}

// Information about the automation option based on a rule category for a single select question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 50.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomation struct {
	// The category name, as defined in Rules.
	//  *Minimum*: 1
	//  *Maximum*: 50
	Category string `pulumi:"category"`
	// The condition to apply for the automation option. If the condition is PRESENT, then the option is applied when the contact data includes the category. Similarly, if the condition is NOT_PRESENT, then the option is applied when the contact data does not include the category.
	//  *Allowed values*: ``PRESENT`` | ``NOT_PRESENT``
	//  *Maximum*: 50
	Condition EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition `pulumi:"condition"`
	// The identifier of the answer option. An identifier must be unique within the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	OptionRefId string `pulumi:"optionRefId"`
}

// EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput is an input type that accepts EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs and EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput values.
// You can construct a concrete instance of `EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput` via:
//
//	EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs{...}
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput interface {
	pulumi.Input

	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput
	ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput
}

// Information about the automation option based on a rule category for a single select question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 50.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs struct {
	// The category name, as defined in Rules.
	//  *Minimum*: 1
	//  *Maximum*: 50
	Category pulumi.StringInput `pulumi:"category"`
	// The condition to apply for the automation option. If the condition is PRESENT, then the option is applied when the contact data includes the category. Similarly, if the condition is NOT_PRESENT, then the option is applied when the contact data does not include the category.
	//  *Allowed values*: ``PRESENT`` | ``NOT_PRESENT``
	//  *Maximum*: 50
	Condition EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionInput `pulumi:"condition"`
	// The identifier of the answer option. An identifier must be unique within the question.
	//  *Length Constraints*: Minimum length of 1. Maximum length of 40.
	OptionRefId pulumi.StringInput `pulumi:"optionRefId"`
}

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomation)(nil)).Elem()
}

func (i EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return i.ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(context.Background())
}

func (i EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput)
}

// Information about the automation option based on a rule category for a single select question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 50.
type EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput struct{ *pulumi.OutputState }

func (EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomation)(nil)).Elem()
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput() EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o
}

func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) ToEvaluationFormSingleSelectQuestionRuleCategoryAutomationOutputWithContext(ctx context.Context) EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput {
	return o
}

// The category name, as defined in Rules.
//
//	*Minimum*: 1
//	*Maximum*: 50
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) string { return v.Category }).(pulumi.StringOutput)
}

// The condition to apply for the automation option. If the condition is PRESENT, then the option is applied when the contact data includes the category. Similarly, if the condition is NOT_PRESENT, then the option is applied when the contact data does not include the category.
//
//	*Allowed values*: ``PRESENT`` | ``NOT_PRESENT``
//	*Maximum*: 50
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) Condition() EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) EvaluationFormSingleSelectQuestionRuleCategoryAutomationCondition {
		return v.Condition
	}).(EvaluationFormSingleSelectQuestionRuleCategoryAutomationConditionOutput)
}

// The identifier of the answer option. An identifier must be unique within the question.
//
//	*Length Constraints*: Minimum length of 1. Maximum length of 40.
func (o EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput) OptionRefId() pulumi.StringOutput {
	return o.ApplyT(func(v EvaluationFormSingleSelectQuestionRuleCategoryAutomation) string { return v.OptionRefId }).(pulumi.StringOutput)
}

// A key-value pair to associate with a resource.
type EvaluationFormTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Value string `pulumi:"value"`
}

// Contains information about the hours of operation.
type HoursOfOperationConfig struct {
	// The day that the hours of operation applies to.
	Day HoursOfOperationConfigDay `pulumi:"day"`
	// The end time that your contact center closes.
	EndTime HoursOfOperationTimeSlice `pulumi:"endTime"`
	// The start time that your contact center opens.
	StartTime HoursOfOperationTimeSlice `pulumi:"startTime"`
}

// HoursOfOperationConfigInput is an input type that accepts HoursOfOperationConfigArgs and HoursOfOperationConfigOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigInput` via:
//
//	HoursOfOperationConfigArgs{...}
type HoursOfOperationConfigInput interface {
	pulumi.Input

	ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput
	ToHoursOfOperationConfigOutputWithContext(context.Context) HoursOfOperationConfigOutput
}

// Contains information about the hours of operation.
type HoursOfOperationConfigArgs struct {
	// The day that the hours of operation applies to.
	Day HoursOfOperationConfigDayInput `pulumi:"day"`
	// The end time that your contact center closes.
	EndTime HoursOfOperationTimeSliceInput `pulumi:"endTime"`
	// The start time that your contact center opens.
	StartTime HoursOfOperationTimeSliceInput `pulumi:"startTime"`
}

func (HoursOfOperationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return i.ToHoursOfOperationConfigOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArgs) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigOutput)
}

// HoursOfOperationConfigArrayInput is an input type that accepts HoursOfOperationConfigArray and HoursOfOperationConfigArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationConfigArrayInput` via:
//
//	HoursOfOperationConfigArray{ HoursOfOperationConfigArgs{...} }
type HoursOfOperationConfigArrayInput interface {
	pulumi.Input

	ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput
	ToHoursOfOperationConfigArrayOutputWithContext(context.Context) HoursOfOperationConfigArrayOutput
}

type HoursOfOperationConfigArray []HoursOfOperationConfigInput

func (HoursOfOperationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return i.ToHoursOfOperationConfigArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationConfigArray) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationConfigArrayOutput)
}

// Contains information about the hours of operation.
type HoursOfOperationConfigOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutput() HoursOfOperationConfigOutput {
	return o
}

func (o HoursOfOperationConfigOutput) ToHoursOfOperationConfigOutputWithContext(ctx context.Context) HoursOfOperationConfigOutput {
	return o
}

// The day that the hours of operation applies to.
func (o HoursOfOperationConfigOutput) Day() HoursOfOperationConfigDayOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationConfigDay { return v.Day }).(HoursOfOperationConfigDayOutput)
}

// The end time that your contact center closes.
func (o HoursOfOperationConfigOutput) EndTime() HoursOfOperationTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationTimeSlice { return v.EndTime }).(HoursOfOperationTimeSliceOutput)
}

// The start time that your contact center opens.
func (o HoursOfOperationConfigOutput) StartTime() HoursOfOperationTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationConfig) HoursOfOperationTimeSlice { return v.StartTime }).(HoursOfOperationTimeSliceOutput)
}

type HoursOfOperationConfigArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationConfig)(nil)).Elem()
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutput() HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) ToHoursOfOperationConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationConfigArrayOutput {
	return o
}

func (o HoursOfOperationConfigArrayOutput) Index(i pulumi.IntInput) HoursOfOperationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationConfig {
		return vs[0].([]HoursOfOperationConfig)[vs[1].(int)]
	}).(HoursOfOperationConfigOutput)
}

// Overrides attached to the hours of operation.
type HoursOfOperationOverride struct {
	// The date from which the hours of operation override would be effective.
	EffectiveFrom string `pulumi:"effectiveFrom"`
	// The date till which the hours of operation override would be effective.
	EffectiveTill string `pulumi:"effectiveTill"`
	// The identifier for the hours of operation override.
	HoursOfOperationOverrideId *string                          `pulumi:"hoursOfOperationOverrideId"`
	OverrideConfig             []HoursOfOperationOverrideConfig `pulumi:"overrideConfig"`
	OverrideDescription        *string                          `pulumi:"overrideDescription"`
	OverrideName               string                           `pulumi:"overrideName"`
}

// HoursOfOperationOverrideInput is an input type that accepts HoursOfOperationOverrideArgs and HoursOfOperationOverrideOutput values.
// You can construct a concrete instance of `HoursOfOperationOverrideInput` via:
//
//	HoursOfOperationOverrideArgs{...}
type HoursOfOperationOverrideInput interface {
	pulumi.Input

	ToHoursOfOperationOverrideOutput() HoursOfOperationOverrideOutput
	ToHoursOfOperationOverrideOutputWithContext(context.Context) HoursOfOperationOverrideOutput
}

// Overrides attached to the hours of operation.
type HoursOfOperationOverrideArgs struct {
	// The date from which the hours of operation override would be effective.
	EffectiveFrom pulumi.StringInput `pulumi:"effectiveFrom"`
	// The date till which the hours of operation override would be effective.
	EffectiveTill pulumi.StringInput `pulumi:"effectiveTill"`
	// The identifier for the hours of operation override.
	HoursOfOperationOverrideId pulumi.StringPtrInput                    `pulumi:"hoursOfOperationOverrideId"`
	OverrideConfig             HoursOfOperationOverrideConfigArrayInput `pulumi:"overrideConfig"`
	OverrideDescription        pulumi.StringPtrInput                    `pulumi:"overrideDescription"`
	OverrideName               pulumi.StringInput                       `pulumi:"overrideName"`
}

func (HoursOfOperationOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverride)(nil)).Elem()
}

func (i HoursOfOperationOverrideArgs) ToHoursOfOperationOverrideOutput() HoursOfOperationOverrideOutput {
	return i.ToHoursOfOperationOverrideOutputWithContext(context.Background())
}

func (i HoursOfOperationOverrideArgs) ToHoursOfOperationOverrideOutputWithContext(ctx context.Context) HoursOfOperationOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOverrideOutput)
}

// HoursOfOperationOverrideArrayInput is an input type that accepts HoursOfOperationOverrideArray and HoursOfOperationOverrideArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationOverrideArrayInput` via:
//
//	HoursOfOperationOverrideArray{ HoursOfOperationOverrideArgs{...} }
type HoursOfOperationOverrideArrayInput interface {
	pulumi.Input

	ToHoursOfOperationOverrideArrayOutput() HoursOfOperationOverrideArrayOutput
	ToHoursOfOperationOverrideArrayOutputWithContext(context.Context) HoursOfOperationOverrideArrayOutput
}

type HoursOfOperationOverrideArray []HoursOfOperationOverrideInput

func (HoursOfOperationOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationOverride)(nil)).Elem()
}

func (i HoursOfOperationOverrideArray) ToHoursOfOperationOverrideArrayOutput() HoursOfOperationOverrideArrayOutput {
	return i.ToHoursOfOperationOverrideArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationOverrideArray) ToHoursOfOperationOverrideArrayOutputWithContext(ctx context.Context) HoursOfOperationOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOverrideArrayOutput)
}

// Overrides attached to the hours of operation.
type HoursOfOperationOverrideOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverride)(nil)).Elem()
}

func (o HoursOfOperationOverrideOutput) ToHoursOfOperationOverrideOutput() HoursOfOperationOverrideOutput {
	return o
}

func (o HoursOfOperationOverrideOutput) ToHoursOfOperationOverrideOutputWithContext(ctx context.Context) HoursOfOperationOverrideOutput {
	return o
}

// The date from which the hours of operation override would be effective.
func (o HoursOfOperationOverrideOutput) EffectiveFrom() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) string { return v.EffectiveFrom }).(pulumi.StringOutput)
}

// The date till which the hours of operation override would be effective.
func (o HoursOfOperationOverrideOutput) EffectiveTill() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) string { return v.EffectiveTill }).(pulumi.StringOutput)
}

// The identifier for the hours of operation override.
func (o HoursOfOperationOverrideOutput) HoursOfOperationOverrideId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) *string { return v.HoursOfOperationOverrideId }).(pulumi.StringPtrOutput)
}

func (o HoursOfOperationOverrideOutput) OverrideConfig() HoursOfOperationOverrideConfigArrayOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) []HoursOfOperationOverrideConfig { return v.OverrideConfig }).(HoursOfOperationOverrideConfigArrayOutput)
}

func (o HoursOfOperationOverrideOutput) OverrideDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) *string { return v.OverrideDescription }).(pulumi.StringPtrOutput)
}

func (o HoursOfOperationOverrideOutput) OverrideName() pulumi.StringOutput {
	return o.ApplyT(func(v HoursOfOperationOverride) string { return v.OverrideName }).(pulumi.StringOutput)
}

type HoursOfOperationOverrideArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationOverride)(nil)).Elem()
}

func (o HoursOfOperationOverrideArrayOutput) ToHoursOfOperationOverrideArrayOutput() HoursOfOperationOverrideArrayOutput {
	return o
}

func (o HoursOfOperationOverrideArrayOutput) ToHoursOfOperationOverrideArrayOutputWithContext(ctx context.Context) HoursOfOperationOverrideArrayOutput {
	return o
}

func (o HoursOfOperationOverrideArrayOutput) Index(i pulumi.IntInput) HoursOfOperationOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationOverride {
		return vs[0].([]HoursOfOperationOverride)[vs[1].(int)]
	}).(HoursOfOperationOverrideOutput)
}

// Contains information about the hours of operation override.
type HoursOfOperationOverrideConfig struct {
	// The day that the hours of operation override applies to.
	Day HoursOfOperationOverrideConfigDay `pulumi:"day"`
	// The new end time that your contact center closes for the overriden days.
	EndTime HoursOfOperationOverrideTimeSlice `pulumi:"endTime"`
	// The new start time that your contact center opens for the overriden days.
	StartTime HoursOfOperationOverrideTimeSlice `pulumi:"startTime"`
}

// HoursOfOperationOverrideConfigInput is an input type that accepts HoursOfOperationOverrideConfigArgs and HoursOfOperationOverrideConfigOutput values.
// You can construct a concrete instance of `HoursOfOperationOverrideConfigInput` via:
//
//	HoursOfOperationOverrideConfigArgs{...}
type HoursOfOperationOverrideConfigInput interface {
	pulumi.Input

	ToHoursOfOperationOverrideConfigOutput() HoursOfOperationOverrideConfigOutput
	ToHoursOfOperationOverrideConfigOutputWithContext(context.Context) HoursOfOperationOverrideConfigOutput
}

// Contains information about the hours of operation override.
type HoursOfOperationOverrideConfigArgs struct {
	// The day that the hours of operation override applies to.
	Day HoursOfOperationOverrideConfigDayInput `pulumi:"day"`
	// The new end time that your contact center closes for the overriden days.
	EndTime HoursOfOperationOverrideTimeSliceInput `pulumi:"endTime"`
	// The new start time that your contact center opens for the overriden days.
	StartTime HoursOfOperationOverrideTimeSliceInput `pulumi:"startTime"`
}

func (HoursOfOperationOverrideConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverrideConfig)(nil)).Elem()
}

func (i HoursOfOperationOverrideConfigArgs) ToHoursOfOperationOverrideConfigOutput() HoursOfOperationOverrideConfigOutput {
	return i.ToHoursOfOperationOverrideConfigOutputWithContext(context.Background())
}

func (i HoursOfOperationOverrideConfigArgs) ToHoursOfOperationOverrideConfigOutputWithContext(ctx context.Context) HoursOfOperationOverrideConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOverrideConfigOutput)
}

// HoursOfOperationOverrideConfigArrayInput is an input type that accepts HoursOfOperationOverrideConfigArray and HoursOfOperationOverrideConfigArrayOutput values.
// You can construct a concrete instance of `HoursOfOperationOverrideConfigArrayInput` via:
//
//	HoursOfOperationOverrideConfigArray{ HoursOfOperationOverrideConfigArgs{...} }
type HoursOfOperationOverrideConfigArrayInput interface {
	pulumi.Input

	ToHoursOfOperationOverrideConfigArrayOutput() HoursOfOperationOverrideConfigArrayOutput
	ToHoursOfOperationOverrideConfigArrayOutputWithContext(context.Context) HoursOfOperationOverrideConfigArrayOutput
}

type HoursOfOperationOverrideConfigArray []HoursOfOperationOverrideConfigInput

func (HoursOfOperationOverrideConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationOverrideConfig)(nil)).Elem()
}

func (i HoursOfOperationOverrideConfigArray) ToHoursOfOperationOverrideConfigArrayOutput() HoursOfOperationOverrideConfigArrayOutput {
	return i.ToHoursOfOperationOverrideConfigArrayOutputWithContext(context.Background())
}

func (i HoursOfOperationOverrideConfigArray) ToHoursOfOperationOverrideConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationOverrideConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOverrideConfigArrayOutput)
}

// Contains information about the hours of operation override.
type HoursOfOperationOverrideConfigOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOverrideConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverrideConfig)(nil)).Elem()
}

func (o HoursOfOperationOverrideConfigOutput) ToHoursOfOperationOverrideConfigOutput() HoursOfOperationOverrideConfigOutput {
	return o
}

func (o HoursOfOperationOverrideConfigOutput) ToHoursOfOperationOverrideConfigOutputWithContext(ctx context.Context) HoursOfOperationOverrideConfigOutput {
	return o
}

// The day that the hours of operation override applies to.
func (o HoursOfOperationOverrideConfigOutput) Day() HoursOfOperationOverrideConfigDayOutput {
	return o.ApplyT(func(v HoursOfOperationOverrideConfig) HoursOfOperationOverrideConfigDay { return v.Day }).(HoursOfOperationOverrideConfigDayOutput)
}

// The new end time that your contact center closes for the overriden days.
func (o HoursOfOperationOverrideConfigOutput) EndTime() HoursOfOperationOverrideTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationOverrideConfig) HoursOfOperationOverrideTimeSlice { return v.EndTime }).(HoursOfOperationOverrideTimeSliceOutput)
}

// The new start time that your contact center opens for the overriden days.
func (o HoursOfOperationOverrideConfigOutput) StartTime() HoursOfOperationOverrideTimeSliceOutput {
	return o.ApplyT(func(v HoursOfOperationOverrideConfig) HoursOfOperationOverrideTimeSlice { return v.StartTime }).(HoursOfOperationOverrideTimeSliceOutput)
}

type HoursOfOperationOverrideConfigArrayOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOverrideConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HoursOfOperationOverrideConfig)(nil)).Elem()
}

func (o HoursOfOperationOverrideConfigArrayOutput) ToHoursOfOperationOverrideConfigArrayOutput() HoursOfOperationOverrideConfigArrayOutput {
	return o
}

func (o HoursOfOperationOverrideConfigArrayOutput) ToHoursOfOperationOverrideConfigArrayOutputWithContext(ctx context.Context) HoursOfOperationOverrideConfigArrayOutput {
	return o
}

func (o HoursOfOperationOverrideConfigArrayOutput) Index(i pulumi.IntInput) HoursOfOperationOverrideConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HoursOfOperationOverrideConfig {
		return vs[0].([]HoursOfOperationOverrideConfig)[vs[1].(int)]
	}).(HoursOfOperationOverrideConfigOutput)
}

// The start time or end time for an an hours of operation override.
type HoursOfOperationOverrideTimeSlice struct {
	// The hours.
	Hours int `pulumi:"hours"`
	// The minutes.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationOverrideTimeSliceInput is an input type that accepts HoursOfOperationOverrideTimeSliceArgs and HoursOfOperationOverrideTimeSliceOutput values.
// You can construct a concrete instance of `HoursOfOperationOverrideTimeSliceInput` via:
//
//	HoursOfOperationOverrideTimeSliceArgs{...}
type HoursOfOperationOverrideTimeSliceInput interface {
	pulumi.Input

	ToHoursOfOperationOverrideTimeSliceOutput() HoursOfOperationOverrideTimeSliceOutput
	ToHoursOfOperationOverrideTimeSliceOutputWithContext(context.Context) HoursOfOperationOverrideTimeSliceOutput
}

// The start time or end time for an an hours of operation override.
type HoursOfOperationOverrideTimeSliceArgs struct {
	// The hours.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationOverrideTimeSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverrideTimeSlice)(nil)).Elem()
}

func (i HoursOfOperationOverrideTimeSliceArgs) ToHoursOfOperationOverrideTimeSliceOutput() HoursOfOperationOverrideTimeSliceOutput {
	return i.ToHoursOfOperationOverrideTimeSliceOutputWithContext(context.Background())
}

func (i HoursOfOperationOverrideTimeSliceArgs) ToHoursOfOperationOverrideTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationOverrideTimeSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationOverrideTimeSliceOutput)
}

// The start time or end time for an an hours of operation override.
type HoursOfOperationOverrideTimeSliceOutput struct{ *pulumi.OutputState }

func (HoursOfOperationOverrideTimeSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationOverrideTimeSlice)(nil)).Elem()
}

func (o HoursOfOperationOverrideTimeSliceOutput) ToHoursOfOperationOverrideTimeSliceOutput() HoursOfOperationOverrideTimeSliceOutput {
	return o
}

func (o HoursOfOperationOverrideTimeSliceOutput) ToHoursOfOperationOverrideTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationOverrideTimeSliceOutput {
	return o
}

// The hours.
func (o HoursOfOperationOverrideTimeSliceOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationOverrideTimeSlice) int { return v.Hours }).(pulumi.IntOutput)
}

// The minutes.
func (o HoursOfOperationOverrideTimeSliceOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationOverrideTimeSlice) int { return v.Minutes }).(pulumi.IntOutput)
}

// A key-value pair to associate with a resource.
type HoursOfOperationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSlice struct {
	// The hours.
	Hours int `pulumi:"hours"`
	// The minutes.
	Minutes int `pulumi:"minutes"`
}

// HoursOfOperationTimeSliceInput is an input type that accepts HoursOfOperationTimeSliceArgs and HoursOfOperationTimeSliceOutput values.
// You can construct a concrete instance of `HoursOfOperationTimeSliceInput` via:
//
//	HoursOfOperationTimeSliceArgs{...}
type HoursOfOperationTimeSliceInput interface {
	pulumi.Input

	ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput
	ToHoursOfOperationTimeSliceOutputWithContext(context.Context) HoursOfOperationTimeSliceOutput
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSliceArgs struct {
	// The hours.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The minutes.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (HoursOfOperationTimeSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTimeSlice)(nil)).Elem()
}

func (i HoursOfOperationTimeSliceArgs) ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput {
	return i.ToHoursOfOperationTimeSliceOutputWithContext(context.Background())
}

func (i HoursOfOperationTimeSliceArgs) ToHoursOfOperationTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationTimeSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HoursOfOperationTimeSliceOutput)
}

// The start time or end time for an hours of operation.
type HoursOfOperationTimeSliceOutput struct{ *pulumi.OutputState }

func (HoursOfOperationTimeSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HoursOfOperationTimeSlice)(nil)).Elem()
}

func (o HoursOfOperationTimeSliceOutput) ToHoursOfOperationTimeSliceOutput() HoursOfOperationTimeSliceOutput {
	return o
}

func (o HoursOfOperationTimeSliceOutput) ToHoursOfOperationTimeSliceOutputWithContext(ctx context.Context) HoursOfOperationTimeSliceOutput {
	return o
}

// The hours.
func (o HoursOfOperationTimeSliceOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationTimeSlice) int { return v.Hours }).(pulumi.IntOutput)
}

// The minutes.
func (o HoursOfOperationTimeSliceOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v HoursOfOperationTimeSlice) int { return v.Minutes }).(pulumi.IntOutput)
}

type InstanceAttributes struct {
	AutoResolveBestVoices     *bool `pulumi:"autoResolveBestVoices"`
	ContactLens               *bool `pulumi:"contactLens"`
	ContactflowLogs           *bool `pulumi:"contactflowLogs"`
	EarlyMedia                *bool `pulumi:"earlyMedia"`
	EnhancedChatMonitoring    *bool `pulumi:"enhancedChatMonitoring"`
	EnhancedContactMonitoring *bool `pulumi:"enhancedContactMonitoring"`
	HighVolumeOutBound        *bool `pulumi:"highVolumeOutBound"`
	InboundCalls              bool  `pulumi:"inboundCalls"`
	MultiPartyChatConference  *bool `pulumi:"multiPartyChatConference"`
	MultiPartyConference      *bool `pulumi:"multiPartyConference"`
	OutboundCalls             bool  `pulumi:"outboundCalls"`
	UseCustomTtsVoices        *bool `pulumi:"useCustomTtsVoices"`
}

// InstanceAttributesInput is an input type that accepts InstanceAttributesArgs and InstanceAttributesOutput values.
// You can construct a concrete instance of `InstanceAttributesInput` via:
//
//	InstanceAttributesArgs{...}
type InstanceAttributesInput interface {
	pulumi.Input

	ToInstanceAttributesOutput() InstanceAttributesOutput
	ToInstanceAttributesOutputWithContext(context.Context) InstanceAttributesOutput
}

type InstanceAttributesArgs struct {
	AutoResolveBestVoices     pulumi.BoolPtrInput `pulumi:"autoResolveBestVoices"`
	ContactLens               pulumi.BoolPtrInput `pulumi:"contactLens"`
	ContactflowLogs           pulumi.BoolPtrInput `pulumi:"contactflowLogs"`
	EarlyMedia                pulumi.BoolPtrInput `pulumi:"earlyMedia"`
	EnhancedChatMonitoring    pulumi.BoolPtrInput `pulumi:"enhancedChatMonitoring"`
	EnhancedContactMonitoring pulumi.BoolPtrInput `pulumi:"enhancedContactMonitoring"`
	HighVolumeOutBound        pulumi.BoolPtrInput `pulumi:"highVolumeOutBound"`
	InboundCalls              pulumi.BoolInput    `pulumi:"inboundCalls"`
	MultiPartyChatConference  pulumi.BoolPtrInput `pulumi:"multiPartyChatConference"`
	MultiPartyConference      pulumi.BoolPtrInput `pulumi:"multiPartyConference"`
	OutboundCalls             pulumi.BoolInput    `pulumi:"outboundCalls"`
	UseCustomTtsVoices        pulumi.BoolPtrInput `pulumi:"useCustomTtsVoices"`
}

func (InstanceAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttributes)(nil)).Elem()
}

func (i InstanceAttributesArgs) ToInstanceAttributesOutput() InstanceAttributesOutput {
	return i.ToInstanceAttributesOutputWithContext(context.Background())
}

func (i InstanceAttributesArgs) ToInstanceAttributesOutputWithContext(ctx context.Context) InstanceAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAttributesOutput)
}

type InstanceAttributesOutput struct{ *pulumi.OutputState }

func (InstanceAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAttributes)(nil)).Elem()
}

func (o InstanceAttributesOutput) ToInstanceAttributesOutput() InstanceAttributesOutput {
	return o
}

func (o InstanceAttributesOutput) ToInstanceAttributesOutputWithContext(ctx context.Context) InstanceAttributesOutput {
	return o
}

func (o InstanceAttributesOutput) AutoResolveBestVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.AutoResolveBestVoices }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) ContactLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.ContactLens }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) ContactflowLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.ContactflowLogs }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) EarlyMedia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.EarlyMedia }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) EnhancedChatMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.EnhancedChatMonitoring }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) EnhancedContactMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.EnhancedContactMonitoring }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) HighVolumeOutBound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.HighVolumeOutBound }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) InboundCalls() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceAttributes) bool { return v.InboundCalls }).(pulumi.BoolOutput)
}

func (o InstanceAttributesOutput) MultiPartyChatConference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.MultiPartyChatConference }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) MultiPartyConference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.MultiPartyConference }).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesOutput) OutboundCalls() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceAttributes) bool { return v.OutboundCalls }).(pulumi.BoolOutput)
}

func (o InstanceAttributesOutput) UseCustomTtsVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceAttributes) *bool { return v.UseCustomTtsVoices }).(pulumi.BoolPtrOutput)
}

type InstanceAttributesPtrOutput struct{ *pulumi.OutputState }

func (InstanceAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAttributes)(nil)).Elem()
}

func (o InstanceAttributesPtrOutput) ToInstanceAttributesPtrOutput() InstanceAttributesPtrOutput {
	return o
}

func (o InstanceAttributesPtrOutput) ToInstanceAttributesPtrOutputWithContext(ctx context.Context) InstanceAttributesPtrOutput {
	return o
}

func (o InstanceAttributesPtrOutput) Elem() InstanceAttributesOutput {
	return o.ApplyT(func(v *InstanceAttributes) InstanceAttributes {
		if v != nil {
			return *v
		}
		var ret InstanceAttributes
		return ret
	}).(InstanceAttributesOutput)
}

func (o InstanceAttributesPtrOutput) AutoResolveBestVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.AutoResolveBestVoices
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) ContactLens() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.ContactLens
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) ContactflowLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.ContactflowLogs
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) EarlyMedia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EarlyMedia
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) EnhancedChatMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedChatMonitoring
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) EnhancedContactMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.EnhancedContactMonitoring
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) HighVolumeOutBound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.HighVolumeOutBound
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) InboundCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return &v.InboundCalls
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) MultiPartyChatConference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.MultiPartyChatConference
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) MultiPartyConference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.MultiPartyConference
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) OutboundCalls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return &v.OutboundCalls
	}).(pulumi.BoolPtrOutput)
}

func (o InstanceAttributesPtrOutput) UseCustomTtsVoices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceAttributes) *bool {
		if v == nil {
			return nil
		}
		return v.UseCustomTtsVoices
	}).(pulumi.BoolPtrOutput)
}

type InstanceStorageConfigEncryptionConfig struct {
	// The type of encryption.
	EncryptionType InstanceStorageConfigEncryptionType `pulumi:"encryptionType"`
	// The full ARN of the encryption key.
	//
	// > Be sure to provide the full ARN of the encryption key, not just the ID.
	// >
	// > Amazon Connect supports only KMS keys with the default key spec of [`SYMMETRIC_DEFAULT`](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default) .
	KeyId string `pulumi:"keyId"`
}

// InstanceStorageConfigEncryptionConfigInput is an input type that accepts InstanceStorageConfigEncryptionConfigArgs and InstanceStorageConfigEncryptionConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionConfigInput` via:
//
//	InstanceStorageConfigEncryptionConfigArgs{...}
type InstanceStorageConfigEncryptionConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput
	ToInstanceStorageConfigEncryptionConfigOutputWithContext(context.Context) InstanceStorageConfigEncryptionConfigOutput
}

type InstanceStorageConfigEncryptionConfigArgs struct {
	// The type of encryption.
	EncryptionType InstanceStorageConfigEncryptionTypeInput `pulumi:"encryptionType"`
	// The full ARN of the encryption key.
	//
	// > Be sure to provide the full ARN of the encryption key, not just the ID.
	// >
	// > Amazon Connect supports only KMS keys with the default key spec of [`SYMMETRIC_DEFAULT`](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default) .
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (InstanceStorageConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput {
	return i.ToInstanceStorageConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigOutput)
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigEncryptionConfigArgs) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigOutput).ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigEncryptionConfigPtrInput is an input type that accepts InstanceStorageConfigEncryptionConfigArgs, InstanceStorageConfigEncryptionConfigPtr and InstanceStorageConfigEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigEncryptionConfigPtrInput` via:
//
//	        InstanceStorageConfigEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput
	ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Context) InstanceStorageConfigEncryptionConfigPtrOutput
}

type instanceStorageConfigEncryptionConfigPtrType InstanceStorageConfigEncryptionConfigArgs

func InstanceStorageConfigEncryptionConfigPtr(v *InstanceStorageConfigEncryptionConfigArgs) InstanceStorageConfigEncryptionConfigPtrInput {
	return (*instanceStorageConfigEncryptionConfigPtrType)(v)
}

func (*instanceStorageConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (i *instanceStorageConfigEncryptionConfigPtrType) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return i.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigEncryptionConfigPtrType) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigOutput() InstanceStorageConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigEncryptionConfigOutput) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigEncryptionConfig) *InstanceStorageConfigEncryptionConfig {
		return &v
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

// The type of encryption.
func (o InstanceStorageConfigEncryptionConfigOutput) EncryptionType() InstanceStorageConfigEncryptionTypeOutput {
	return o.ApplyT(func(v InstanceStorageConfigEncryptionConfig) InstanceStorageConfigEncryptionType {
		return v.EncryptionType
	}).(InstanceStorageConfigEncryptionTypeOutput)
}

// The full ARN of the encryption key.
//
// > Be sure to provide the full ARN of the encryption key, not just the ID.
// >
// > Amazon Connect supports only KMS keys with the default key spec of [`SYMMETRIC_DEFAULT`](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default) .
func (o InstanceStorageConfigEncryptionConfigOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigEncryptionConfig) string { return v.KeyId }).(pulumi.StringOutput)
}

type InstanceStorageConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigEncryptionConfig)(nil)).Elem()
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigEncryptionConfigPtrOutput() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) ToInstanceStorageConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigEncryptionConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigEncryptionConfigPtrOutput) Elem() InstanceStorageConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) InstanceStorageConfigEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigEncryptionConfig
		return ret
	}).(InstanceStorageConfigEncryptionConfigOutput)
}

// The type of encryption.
func (o InstanceStorageConfigEncryptionConfigPtrOutput) EncryptionType() InstanceStorageConfigEncryptionTypePtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) *InstanceStorageConfigEncryptionType {
		if v == nil {
			return nil
		}
		return &v.EncryptionType
	}).(InstanceStorageConfigEncryptionTypePtrOutput)
}

// The full ARN of the encryption key.
//
// > Be sure to provide the full ARN of the encryption key, not just the ID.
// >
// > Amazon Connect supports only KMS keys with the default key spec of [`SYMMETRIC_DEFAULT`](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default) .
func (o InstanceStorageConfigEncryptionConfigPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisFirehoseConfig struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn string `pulumi:"firehoseArn"`
}

// InstanceStorageConfigKinesisFirehoseConfigInput is an input type that accepts InstanceStorageConfigKinesisFirehoseConfigArgs and InstanceStorageConfigKinesisFirehoseConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisFirehoseConfigInput` via:
//
//	InstanceStorageConfigKinesisFirehoseConfigArgs{...}
type InstanceStorageConfigKinesisFirehoseConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput
	ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput
}

type InstanceStorageConfigKinesisFirehoseConfigArgs struct {
	// The Amazon Resource Name (ARN) of the delivery stream.
	FirehoseArn pulumi.StringInput `pulumi:"firehoseArn"`
}

func (InstanceStorageConfigKinesisFirehoseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigOutput)
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisFirehoseConfigArgs) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigOutput).ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisFirehoseConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisFirehoseConfigArgs, InstanceStorageConfigKinesisFirehoseConfigPtr and InstanceStorageConfigKinesisFirehoseConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisFirehoseConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisFirehoseConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisFirehoseConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput
	ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput
}

type instanceStorageConfigKinesisFirehoseConfigPtrType InstanceStorageConfigKinesisFirehoseConfigArgs

func InstanceStorageConfigKinesisFirehoseConfigPtr(v *InstanceStorageConfigKinesisFirehoseConfigArgs) InstanceStorageConfigKinesisFirehoseConfigPtrInput {
	return (*instanceStorageConfigKinesisFirehoseConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisFirehoseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisFirehoseConfigPtrType) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisFirehoseConfigPtrOutput)
}

type InstanceStorageConfigKinesisFirehoseConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisFirehoseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigOutput() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisFirehoseConfigOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisFirehoseConfig) *InstanceStorageConfigKinesisFirehoseConfig {
		return &v
	}).(InstanceStorageConfigKinesisFirehoseConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o InstanceStorageConfigKinesisFirehoseConfigOutput) FirehoseArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisFirehoseConfig) string { return v.FirehoseArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigKinesisFirehoseConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisFirehoseConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutput() InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) ToInstanceStorageConfigKinesisFirehoseConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisFirehoseConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) Elem() InstanceStorageConfigKinesisFirehoseConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisFirehoseConfig) InstanceStorageConfigKinesisFirehoseConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisFirehoseConfig
		return ret
	}).(InstanceStorageConfigKinesisFirehoseConfigOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream.
func (o InstanceStorageConfigKinesisFirehoseConfigPtrOutput) FirehoseArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisFirehoseConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FirehoseArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisStreamConfig struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn string `pulumi:"streamArn"`
}

// InstanceStorageConfigKinesisStreamConfigInput is an input type that accepts InstanceStorageConfigKinesisStreamConfigArgs and InstanceStorageConfigKinesisStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisStreamConfigInput` via:
//
//	InstanceStorageConfigKinesisStreamConfigArgs{...}
type InstanceStorageConfigKinesisStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput
	ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisStreamConfigOutput
}

type InstanceStorageConfigKinesisStreamConfigArgs struct {
	// The Amazon Resource Name (ARN) of the data stream.
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (InstanceStorageConfigKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigOutput)
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisStreamConfigArgs) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigOutput).ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisStreamConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisStreamConfigArgs, InstanceStorageConfigKinesisStreamConfigPtr and InstanceStorageConfigKinesisStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput
	ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput
}

type instanceStorageConfigKinesisStreamConfigPtrType InstanceStorageConfigKinesisStreamConfigArgs

func InstanceStorageConfigKinesisStreamConfigPtr(v *InstanceStorageConfigKinesisStreamConfigArgs) InstanceStorageConfigKinesisStreamConfigPtrInput {
	return (*instanceStorageConfigKinesisStreamConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisStreamConfigPtrType) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisStreamConfigPtrOutput)
}

type InstanceStorageConfigKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigOutput() InstanceStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisStreamConfigOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisStreamConfig) *InstanceStorageConfigKinesisStreamConfig {
		return &v
	}).(InstanceStorageConfigKinesisStreamConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the data stream.
func (o InstanceStorageConfigKinesisStreamConfigOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisStreamConfig) string { return v.StreamArn }).(pulumi.StringOutput)
}

type InstanceStorageConfigKinesisStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutput() InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) ToInstanceStorageConfigKinesisStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) Elem() InstanceStorageConfigKinesisStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisStreamConfig) InstanceStorageConfigKinesisStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisStreamConfig
		return ret
	}).(InstanceStorageConfigKinesisStreamConfigOutput)
}

// The Amazon Resource Name (ARN) of the data stream.
func (o InstanceStorageConfigKinesisStreamConfigPtrOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StreamArn
	}).(pulumi.StringPtrOutput)
}

type InstanceStorageConfigKinesisVideoStreamConfig struct {
	// The encryption configuration.
	EncryptionConfig InstanceStorageConfigEncryptionConfig `pulumi:"encryptionConfig"`
	// The prefix of the video stream.
	Prefix string `pulumi:"prefix"`
	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.
	//
	// The default value is 0, indicating that the stream does not persist data.
	RetentionPeriodHours float64 `pulumi:"retentionPeriodHours"`
}

// InstanceStorageConfigKinesisVideoStreamConfigInput is an input type that accepts InstanceStorageConfigKinesisVideoStreamConfigArgs and InstanceStorageConfigKinesisVideoStreamConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisVideoStreamConfigInput` via:
//
//	InstanceStorageConfigKinesisVideoStreamConfigArgs{...}
type InstanceStorageConfigKinesisVideoStreamConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput
	ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput
}

type InstanceStorageConfigKinesisVideoStreamConfigArgs struct {
	// The encryption configuration.
	EncryptionConfig InstanceStorageConfigEncryptionConfigInput `pulumi:"encryptionConfig"`
	// The prefix of the video stream.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.
	//
	// The default value is 0, indicating that the stream does not persist data.
	RetentionPeriodHours pulumi.Float64Input `pulumi:"retentionPeriodHours"`
}

func (InstanceStorageConfigKinesisVideoStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigOutput)
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigKinesisVideoStreamConfigArgs) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigOutput).ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigKinesisVideoStreamConfigPtrInput is an input type that accepts InstanceStorageConfigKinesisVideoStreamConfigArgs, InstanceStorageConfigKinesisVideoStreamConfigPtr and InstanceStorageConfigKinesisVideoStreamConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigKinesisVideoStreamConfigPtrInput` via:
//
//	        InstanceStorageConfigKinesisVideoStreamConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigKinesisVideoStreamConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput
	ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput
}

type instanceStorageConfigKinesisVideoStreamConfigPtrType InstanceStorageConfigKinesisVideoStreamConfigArgs

func InstanceStorageConfigKinesisVideoStreamConfigPtr(v *InstanceStorageConfigKinesisVideoStreamConfigArgs) InstanceStorageConfigKinesisVideoStreamConfigPtrInput {
	return (*instanceStorageConfigKinesisVideoStreamConfigPtrType)(v)
}

func (*instanceStorageConfigKinesisVideoStreamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (i *instanceStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return i.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigKinesisVideoStreamConfigPtrType) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput)
}

type InstanceStorageConfigKinesisVideoStreamConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisVideoStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigOutput() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigKinesisVideoStreamConfig {
		return &v
	}).(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput)
}

// The encryption configuration.
func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) InstanceStorageConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigOutput)
}

// The prefix of the video stream.
func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) string { return v.Prefix }).(pulumi.StringOutput)
}

// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.
//
// The default value is 0, indicating that the stream does not persist data.
func (o InstanceStorageConfigKinesisVideoStreamConfigOutput) RetentionPeriodHours() pulumi.Float64Output {
	return o.ApplyT(func(v InstanceStorageConfigKinesisVideoStreamConfig) float64 { return v.RetentionPeriodHours }).(pulumi.Float64Output)
}

type InstanceStorageConfigKinesisVideoStreamConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigKinesisVideoStreamConfig)(nil)).Elem()
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutput() InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) ToInstanceStorageConfigKinesisVideoStreamConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigKinesisVideoStreamConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) Elem() InstanceStorageConfigKinesisVideoStreamConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) InstanceStorageConfigKinesisVideoStreamConfig {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigKinesisVideoStreamConfig
		return ret
	}).(InstanceStorageConfigKinesisVideoStreamConfigOutput)
}

// The encryption configuration.
func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *InstanceStorageConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return &v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

// The prefix of the video stream.
func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.
//
// The default value is 0, indicating that the stream does not persist data.
func (o InstanceStorageConfigKinesisVideoStreamConfigPtrOutput) RetentionPeriodHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigKinesisVideoStreamConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodHours
	}).(pulumi.Float64PtrOutput)
}

type InstanceStorageConfigS3Config struct {
	// The S3 bucket name.
	BucketName string `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix string `pulumi:"bucketPrefix"`
	// The Amazon S3 encryption configuration.
	EncryptionConfig *InstanceStorageConfigEncryptionConfig `pulumi:"encryptionConfig"`
}

// InstanceStorageConfigS3ConfigInput is an input type that accepts InstanceStorageConfigS3ConfigArgs and InstanceStorageConfigS3ConfigOutput values.
// You can construct a concrete instance of `InstanceStorageConfigS3ConfigInput` via:
//
//	InstanceStorageConfigS3ConfigArgs{...}
type InstanceStorageConfigS3ConfigInput interface {
	pulumi.Input

	ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput
	ToInstanceStorageConfigS3ConfigOutputWithContext(context.Context) InstanceStorageConfigS3ConfigOutput
}

type InstanceStorageConfigS3ConfigArgs struct {
	// The S3 bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The S3 bucket prefix.
	BucketPrefix pulumi.StringInput `pulumi:"bucketPrefix"`
	// The Amazon S3 encryption configuration.
	EncryptionConfig InstanceStorageConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
}

func (InstanceStorageConfigS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigS3Config)(nil)).Elem()
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput {
	return i.ToInstanceStorageConfigS3ConfigOutputWithContext(context.Background())
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigOutput)
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i InstanceStorageConfigS3ConfigArgs) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigOutput).ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx)
}

// InstanceStorageConfigS3ConfigPtrInput is an input type that accepts InstanceStorageConfigS3ConfigArgs, InstanceStorageConfigS3ConfigPtr and InstanceStorageConfigS3ConfigPtrOutput values.
// You can construct a concrete instance of `InstanceStorageConfigS3ConfigPtrInput` via:
//
//	        InstanceStorageConfigS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceStorageConfigS3ConfigPtrInput interface {
	pulumi.Input

	ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput
	ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Context) InstanceStorageConfigS3ConfigPtrOutput
}

type instanceStorageConfigS3ConfigPtrType InstanceStorageConfigS3ConfigArgs

func InstanceStorageConfigS3ConfigPtr(v *InstanceStorageConfigS3ConfigArgs) InstanceStorageConfigS3ConfigPtrInput {
	return (*instanceStorageConfigS3ConfigPtrType)(v)
}

func (*instanceStorageConfigS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigS3Config)(nil)).Elem()
}

func (i *instanceStorageConfigS3ConfigPtrType) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return i.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i *instanceStorageConfigS3ConfigPtrType) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStorageConfigS3ConfigPtrOutput)
}

type InstanceStorageConfigS3ConfigOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigOutput() InstanceStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return o.ToInstanceStorageConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (o InstanceStorageConfigS3ConfigOutput) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStorageConfigS3Config) *InstanceStorageConfigS3Config {
		return &v
	}).(InstanceStorageConfigS3ConfigPtrOutput)
}

// The S3 bucket name.
func (o InstanceStorageConfigS3ConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) string { return v.BucketName }).(pulumi.StringOutput)
}

// The S3 bucket prefix.
func (o InstanceStorageConfigS3ConfigOutput) BucketPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) string { return v.BucketPrefix }).(pulumi.StringOutput)
}

// The Amazon S3 encryption configuration.
func (o InstanceStorageConfigS3ConfigOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v InstanceStorageConfigS3Config) *InstanceStorageConfigEncryptionConfig {
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

type InstanceStorageConfigS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceStorageConfigS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStorageConfigS3Config)(nil)).Elem()
}

func (o InstanceStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigS3ConfigPtrOutput() InstanceStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigPtrOutput) ToInstanceStorageConfigS3ConfigPtrOutputWithContext(ctx context.Context) InstanceStorageConfigS3ConfigPtrOutput {
	return o
}

func (o InstanceStorageConfigS3ConfigPtrOutput) Elem() InstanceStorageConfigS3ConfigOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) InstanceStorageConfigS3Config {
		if v != nil {
			return *v
		}
		var ret InstanceStorageConfigS3Config
		return ret
	}).(InstanceStorageConfigS3ConfigOutput)
}

// The S3 bucket name.
func (o InstanceStorageConfigS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 bucket prefix.
func (o InstanceStorageConfigS3ConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 encryption configuration.
func (o InstanceStorageConfigS3ConfigPtrOutput) EncryptionConfig() InstanceStorageConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *InstanceStorageConfigS3Config) *InstanceStorageConfigEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.EncryptionConfig
	}).(InstanceStorageConfigEncryptionConfigPtrOutput)
}

// A key-value pair to associate with a resource.
type InstanceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type PhoneNumberTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type PromptTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The outbound caller ID name, number, and outbound whisper flow.
type QueueOutboundCallerConfig struct {
	// The caller ID name.
	OutboundCallerIdName *string `pulumi:"outboundCallerIdName"`
	// The Amazon Resource Name (ARN) of the outbound caller ID number.
	//
	// > Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid` . This is the same ARN format that is returned when you create a phone number using CloudFormation , or when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.
	OutboundCallerIdNumberArn *string `pulumi:"outboundCallerIdNumberArn"`
	// The Amazon Resource Name (ARN) of the outbound flow.
	OutboundFlowArn *string `pulumi:"outboundFlowArn"`
}

// QueueOutboundCallerConfigInput is an input type that accepts QueueOutboundCallerConfigArgs and QueueOutboundCallerConfigOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigInput` via:
//
//	QueueOutboundCallerConfigArgs{...}
type QueueOutboundCallerConfigInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput
	ToQueueOutboundCallerConfigOutputWithContext(context.Context) QueueOutboundCallerConfigOutput
}

// The outbound caller ID name, number, and outbound whisper flow.
type QueueOutboundCallerConfigArgs struct {
	// The caller ID name.
	OutboundCallerIdName pulumi.StringPtrInput `pulumi:"outboundCallerIdName"`
	// The Amazon Resource Name (ARN) of the outbound caller ID number.
	//
	// > Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid` . This is the same ARN format that is returned when you create a phone number using CloudFormation , or when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.
	OutboundCallerIdNumberArn pulumi.StringPtrInput `pulumi:"outboundCallerIdNumberArn"`
	// The Amazon Resource Name (ARN) of the outbound flow.
	OutboundFlowArn pulumi.StringPtrInput `pulumi:"outboundFlowArn"`
}

func (QueueOutboundCallerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return i.ToQueueOutboundCallerConfigOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput)
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i QueueOutboundCallerConfigArgs) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigOutput).ToQueueOutboundCallerConfigPtrOutputWithContext(ctx)
}

// QueueOutboundCallerConfigPtrInput is an input type that accepts QueueOutboundCallerConfigArgs, QueueOutboundCallerConfigPtr and QueueOutboundCallerConfigPtrOutput values.
// You can construct a concrete instance of `QueueOutboundCallerConfigPtrInput` via:
//
//	        QueueOutboundCallerConfigArgs{...}
//
//	or:
//
//	        nil
type QueueOutboundCallerConfigPtrInput interface {
	pulumi.Input

	ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput
	ToQueueOutboundCallerConfigPtrOutputWithContext(context.Context) QueueOutboundCallerConfigPtrOutput
}

type queueOutboundCallerConfigPtrType QueueOutboundCallerConfigArgs

func QueueOutboundCallerConfigPtr(v *QueueOutboundCallerConfigArgs) QueueOutboundCallerConfigPtrInput {
	return (*queueOutboundCallerConfigPtrType)(v)
}

func (*queueOutboundCallerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return i.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (i *queueOutboundCallerConfigPtrType) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundCallerConfigPtrOutput)
}

// The outbound caller ID name, number, and outbound whisper flow.
type QueueOutboundCallerConfigOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutput() QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigOutputWithContext(ctx context.Context) QueueOutboundCallerConfigOutput {
	return o
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o.ToQueueOutboundCallerConfigPtrOutputWithContext(context.Background())
}

func (o QueueOutboundCallerConfigOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueOutboundCallerConfig) *QueueOutboundCallerConfig {
		return &v
	}).(QueueOutboundCallerConfigPtrOutput)
}

// The caller ID name.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the outbound caller ID number.
//
// > Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid` . This is the same ARN format that is returned when you create a phone number using CloudFormation , or when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.
func (o QueueOutboundCallerConfigOutput) OutboundCallerIdNumberArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundCallerIdNumberArn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the outbound flow.
func (o QueueOutboundCallerConfigOutput) OutboundFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundCallerConfig) *string { return v.OutboundFlowArn }).(pulumi.StringPtrOutput)
}

type QueueOutboundCallerConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueOutboundCallerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundCallerConfig)(nil)).Elem()
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutput() QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) ToQueueOutboundCallerConfigPtrOutputWithContext(ctx context.Context) QueueOutboundCallerConfigPtrOutput {
	return o
}

func (o QueueOutboundCallerConfigPtrOutput) Elem() QueueOutboundCallerConfigOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) QueueOutboundCallerConfig {
		if v != nil {
			return *v
		}
		var ret QueueOutboundCallerConfig
		return ret
	}).(QueueOutboundCallerConfigOutput)
}

// The caller ID name.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdName
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the outbound caller ID number.
//
// > Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid` . This is the same ARN format that is returned when you create a phone number using CloudFormation , or when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.
func (o QueueOutboundCallerConfigPtrOutput) OutboundCallerIdNumberArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundCallerIdNumberArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the outbound flow.
func (o QueueOutboundCallerConfigPtrOutput) OutboundFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundCallerConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundFlowArn
	}).(pulumi.StringPtrOutput)
}

// The outbound email address ID.
type QueueOutboundEmailConfig struct {
	// The identifier of the email address.
	OutboundEmailAddressId *string `pulumi:"outboundEmailAddressId"`
}

// QueueOutboundEmailConfigInput is an input type that accepts QueueOutboundEmailConfigArgs and QueueOutboundEmailConfigOutput values.
// You can construct a concrete instance of `QueueOutboundEmailConfigInput` via:
//
//	QueueOutboundEmailConfigArgs{...}
type QueueOutboundEmailConfigInput interface {
	pulumi.Input

	ToQueueOutboundEmailConfigOutput() QueueOutboundEmailConfigOutput
	ToQueueOutboundEmailConfigOutputWithContext(context.Context) QueueOutboundEmailConfigOutput
}

// The outbound email address ID.
type QueueOutboundEmailConfigArgs struct {
	// The identifier of the email address.
	OutboundEmailAddressId pulumi.StringPtrInput `pulumi:"outboundEmailAddressId"`
}

func (QueueOutboundEmailConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundEmailConfig)(nil)).Elem()
}

func (i QueueOutboundEmailConfigArgs) ToQueueOutboundEmailConfigOutput() QueueOutboundEmailConfigOutput {
	return i.ToQueueOutboundEmailConfigOutputWithContext(context.Background())
}

func (i QueueOutboundEmailConfigArgs) ToQueueOutboundEmailConfigOutputWithContext(ctx context.Context) QueueOutboundEmailConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundEmailConfigOutput)
}

func (i QueueOutboundEmailConfigArgs) ToQueueOutboundEmailConfigPtrOutput() QueueOutboundEmailConfigPtrOutput {
	return i.ToQueueOutboundEmailConfigPtrOutputWithContext(context.Background())
}

func (i QueueOutboundEmailConfigArgs) ToQueueOutboundEmailConfigPtrOutputWithContext(ctx context.Context) QueueOutboundEmailConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundEmailConfigOutput).ToQueueOutboundEmailConfigPtrOutputWithContext(ctx)
}

// QueueOutboundEmailConfigPtrInput is an input type that accepts QueueOutboundEmailConfigArgs, QueueOutboundEmailConfigPtr and QueueOutboundEmailConfigPtrOutput values.
// You can construct a concrete instance of `QueueOutboundEmailConfigPtrInput` via:
//
//	        QueueOutboundEmailConfigArgs{...}
//
//	or:
//
//	        nil
type QueueOutboundEmailConfigPtrInput interface {
	pulumi.Input

	ToQueueOutboundEmailConfigPtrOutput() QueueOutboundEmailConfigPtrOutput
	ToQueueOutboundEmailConfigPtrOutputWithContext(context.Context) QueueOutboundEmailConfigPtrOutput
}

type queueOutboundEmailConfigPtrType QueueOutboundEmailConfigArgs

func QueueOutboundEmailConfigPtr(v *QueueOutboundEmailConfigArgs) QueueOutboundEmailConfigPtrInput {
	return (*queueOutboundEmailConfigPtrType)(v)
}

func (*queueOutboundEmailConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundEmailConfig)(nil)).Elem()
}

func (i *queueOutboundEmailConfigPtrType) ToQueueOutboundEmailConfigPtrOutput() QueueOutboundEmailConfigPtrOutput {
	return i.ToQueueOutboundEmailConfigPtrOutputWithContext(context.Background())
}

func (i *queueOutboundEmailConfigPtrType) ToQueueOutboundEmailConfigPtrOutputWithContext(ctx context.Context) QueueOutboundEmailConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutboundEmailConfigPtrOutput)
}

// The outbound email address ID.
type QueueOutboundEmailConfigOutput struct{ *pulumi.OutputState }

func (QueueOutboundEmailConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueOutboundEmailConfig)(nil)).Elem()
}

func (o QueueOutboundEmailConfigOutput) ToQueueOutboundEmailConfigOutput() QueueOutboundEmailConfigOutput {
	return o
}

func (o QueueOutboundEmailConfigOutput) ToQueueOutboundEmailConfigOutputWithContext(ctx context.Context) QueueOutboundEmailConfigOutput {
	return o
}

func (o QueueOutboundEmailConfigOutput) ToQueueOutboundEmailConfigPtrOutput() QueueOutboundEmailConfigPtrOutput {
	return o.ToQueueOutboundEmailConfigPtrOutputWithContext(context.Background())
}

func (o QueueOutboundEmailConfigOutput) ToQueueOutboundEmailConfigPtrOutputWithContext(ctx context.Context) QueueOutboundEmailConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueOutboundEmailConfig) *QueueOutboundEmailConfig {
		return &v
	}).(QueueOutboundEmailConfigPtrOutput)
}

// The identifier of the email address.
func (o QueueOutboundEmailConfigOutput) OutboundEmailAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueOutboundEmailConfig) *string { return v.OutboundEmailAddressId }).(pulumi.StringPtrOutput)
}

type QueueOutboundEmailConfigPtrOutput struct{ *pulumi.OutputState }

func (QueueOutboundEmailConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueOutboundEmailConfig)(nil)).Elem()
}

func (o QueueOutboundEmailConfigPtrOutput) ToQueueOutboundEmailConfigPtrOutput() QueueOutboundEmailConfigPtrOutput {
	return o
}

func (o QueueOutboundEmailConfigPtrOutput) ToQueueOutboundEmailConfigPtrOutputWithContext(ctx context.Context) QueueOutboundEmailConfigPtrOutput {
	return o
}

func (o QueueOutboundEmailConfigPtrOutput) Elem() QueueOutboundEmailConfigOutput {
	return o.ApplyT(func(v *QueueOutboundEmailConfig) QueueOutboundEmailConfig {
		if v != nil {
			return *v
		}
		var ret QueueOutboundEmailConfig
		return ret
	}).(QueueOutboundEmailConfigOutput)
}

// The identifier of the email address.
func (o QueueOutboundEmailConfigPtrOutput) OutboundEmailAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueOutboundEmailConfig) *string {
		if v == nil {
			return nil
		}
		return v.OutboundEmailAddressId
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type QueueTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Value string `pulumi:"value"`
}

// Configuration settings for the quick connect.
type QuickConnectConfig struct {
	// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
	PhoneConfig *QuickConnectPhoneNumberQuickConnectConfig `pulumi:"phoneConfig"`
	// The queue configuration. This is required only if QuickConnectType is QUEUE.
	QueueConfig *QuickConnectQueueQuickConnectConfig `pulumi:"queueConfig"`
	// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
	QuickConnectType QuickConnectType `pulumi:"quickConnectType"`
	// The user configuration. This is required only if QuickConnectType is USER.
	UserConfig *QuickConnectUserQuickConnectConfig `pulumi:"userConfig"`
}

// QuickConnectConfigInput is an input type that accepts QuickConnectConfigArgs and QuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectConfigInput` via:
//
//	QuickConnectConfigArgs{...}
type QuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectConfigOutput() QuickConnectConfigOutput
	ToQuickConnectConfigOutputWithContext(context.Context) QuickConnectConfigOutput
}

// Configuration settings for the quick connect.
type QuickConnectConfigArgs struct {
	// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
	PhoneConfig QuickConnectPhoneNumberQuickConnectConfigPtrInput `pulumi:"phoneConfig"`
	// The queue configuration. This is required only if QuickConnectType is QUEUE.
	QueueConfig QuickConnectQueueQuickConnectConfigPtrInput `pulumi:"queueConfig"`
	// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
	QuickConnectType QuickConnectTypeInput `pulumi:"quickConnectType"`
	// The user configuration. This is required only if QuickConnectType is USER.
	UserConfig QuickConnectUserQuickConnectConfigPtrInput `pulumi:"userConfig"`
}

func (QuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectConfigArgs) ToQuickConnectConfigOutput() QuickConnectConfigOutput {
	return i.ToQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectConfigArgs) ToQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectConfigOutput)
}

// Configuration settings for the quick connect.
type QuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectConfigOutput) ToQuickConnectConfigOutput() QuickConnectConfigOutput {
	return o
}

func (o QuickConnectConfigOutput) ToQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectConfigOutput {
	return o
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
func (o QuickConnectConfigOutput) PhoneConfig() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig { return v.PhoneConfig }).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
func (o QuickConnectConfigOutput) QueueConfig() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectQueueQuickConnectConfig { return v.QueueConfig }).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
func (o QuickConnectConfigOutput) QuickConnectType() QuickConnectTypeOutput {
	return o.ApplyT(func(v QuickConnectConfig) QuickConnectType { return v.QuickConnectType }).(QuickConnectTypeOutput)
}

// The user configuration. This is required only if QuickConnectType is USER.
func (o QuickConnectConfigOutput) UserConfig() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v QuickConnectConfig) *QuickConnectUserQuickConnectConfig { return v.UserConfig }).(QuickConnectUserQuickConnectConfigPtrOutput)
}

type QuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectConfigPtrOutput) ToQuickConnectConfigPtrOutput() QuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectConfigPtrOutput) ToQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectConfigPtrOutput) Elem() QuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectConfig) QuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectConfig
		return ret
	}).(QuickConnectConfigOutput)
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
func (o QuickConnectConfigPtrOutput) PhoneConfig() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.PhoneConfig
	}).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
func (o QuickConnectConfigPtrOutput) QueueConfig() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectQueueQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.QueueConfig
	}).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

// The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
func (o QuickConnectConfigPtrOutput) QuickConnectType() QuickConnectTypePtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectType {
		if v == nil {
			return nil
		}
		return &v.QuickConnectType
	}).(QuickConnectTypePtrOutput)
}

// The user configuration. This is required only if QuickConnectType is USER.
func (o QuickConnectConfigPtrOutput) UserConfig() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyT(func(v *QuickConnectConfig) *QuickConnectUserQuickConnectConfig {
		if v == nil {
			return nil
		}
		return v.UserConfig
	}).(QuickConnectUserQuickConnectConfigPtrOutput)
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfig struct {
	// The phone number in E.164 format.
	PhoneNumber string `pulumi:"phoneNumber"`
}

// QuickConnectPhoneNumberQuickConnectConfigInput is an input type that accepts QuickConnectPhoneNumberQuickConnectConfigArgs and QuickConnectPhoneNumberQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectPhoneNumberQuickConnectConfigInput` via:
//
//	QuickConnectPhoneNumberQuickConnectConfigArgs{...}
type QuickConnectPhoneNumberQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput
	ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfigArgs struct {
	// The phone number in E.164 format.
	PhoneNumber pulumi.StringInput `pulumi:"phoneNumber"`
}

func (QuickConnectPhoneNumberQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigOutput)
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectPhoneNumberQuickConnectConfigArgs) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigOutput).ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectPhoneNumberQuickConnectConfigPtrInput is an input type that accepts QuickConnectPhoneNumberQuickConnectConfigArgs, QuickConnectPhoneNumberQuickConnectConfigPtr and QuickConnectPhoneNumberQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectPhoneNumberQuickConnectConfigPtrInput` via:
//
//	        QuickConnectPhoneNumberQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectPhoneNumberQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput
	ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput
}

type quickConnectPhoneNumberQuickConnectConfigPtrType QuickConnectPhoneNumberQuickConnectConfigArgs

func QuickConnectPhoneNumberQuickConnectConfigPtr(v *QuickConnectPhoneNumberQuickConnectConfigArgs) QuickConnectPhoneNumberQuickConnectConfigPtrInput {
	return (*quickConnectPhoneNumberQuickConnectConfigPtrType)(v)
}

func (*quickConnectPhoneNumberQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectPhoneNumberQuickConnectConfigPtrType) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return i.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectPhoneNumberQuickConnectConfigPtrType) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

// The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
type QuickConnectPhoneNumberQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectPhoneNumberQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigOutput() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectPhoneNumberQuickConnectConfigOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectPhoneNumberQuickConnectConfig) *QuickConnectPhoneNumberQuickConnectConfig {
		return &v
	}).(QuickConnectPhoneNumberQuickConnectConfigPtrOutput)
}

// The phone number in E.164 format.
func (o QuickConnectPhoneNumberQuickConnectConfigOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectPhoneNumberQuickConnectConfig) string { return v.PhoneNumber }).(pulumi.StringOutput)
}

type QuickConnectPhoneNumberQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectPhoneNumberQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutput() QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) ToQuickConnectPhoneNumberQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectPhoneNumberQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) Elem() QuickConnectPhoneNumberQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectPhoneNumberQuickConnectConfig) QuickConnectPhoneNumberQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectPhoneNumberQuickConnectConfig
		return ret
	}).(QuickConnectPhoneNumberQuickConnectConfigOutput)
}

// The phone number in E.164 format.
func (o QuickConnectPhoneNumberQuickConnectConfigPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectPhoneNumberQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfig struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn string `pulumi:"contactFlowArn"`
	// The Amazon Resource Name (ARN) of the queue.
	QueueArn string `pulumi:"queueArn"`
}

// QuickConnectQueueQuickConnectConfigInput is an input type that accepts QuickConnectQueueQuickConnectConfigArgs and QuickConnectQueueQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectQueueQuickConnectConfigInput` via:
//
//	QuickConnectQueueQuickConnectConfigArgs{...}
type QuickConnectQueueQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput
	ToQuickConnectQueueQuickConnectConfigOutputWithContext(context.Context) QuickConnectQueueQuickConnectConfigOutput
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfigArgs struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	// The Amazon Resource Name (ARN) of the queue.
	QueueArn pulumi.StringInput `pulumi:"queueArn"`
}

func (QuickConnectQueueQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput {
	return i.ToQuickConnectQueueQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigOutput)
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectQueueQuickConnectConfigArgs) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigOutput).ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectQueueQuickConnectConfigPtrInput is an input type that accepts QuickConnectQueueQuickConnectConfigArgs, QuickConnectQueueQuickConnectConfigPtr and QuickConnectQueueQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectQueueQuickConnectConfigPtrInput` via:
//
//	        QuickConnectQueueQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectQueueQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput
	ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectQueueQuickConnectConfigPtrOutput
}

type quickConnectQueueQuickConnectConfigPtrType QuickConnectQueueQuickConnectConfigArgs

func QuickConnectQueueQuickConnectConfigPtr(v *QuickConnectQueueQuickConnectConfigArgs) QuickConnectQueueQuickConnectConfigPtrInput {
	return (*quickConnectQueueQuickConnectConfigPtrType)(v)
}

func (*quickConnectQueueQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectQueueQuickConnectConfigPtrType) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return i.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectQueueQuickConnectConfigPtrType) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

// The queue configuration. This is required only if QuickConnectType is QUEUE.
type QuickConnectQueueQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectQueueQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigOutput() QuickConnectQueueQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectQueueQuickConnectConfigOutput) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectQueueQuickConnectConfig) *QuickConnectQueueQuickConnectConfig {
		return &v
	}).(QuickConnectQueueQuickConnectConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the flow.
func (o QuickConnectQueueQuickConnectConfigOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQueueQuickConnectConfig) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the queue.
func (o QuickConnectQueueQuickConnectConfigOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectQueueQuickConnectConfig) string { return v.QueueArn }).(pulumi.StringOutput)
}

type QuickConnectQueueQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectQueueQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectQueueQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) ToQuickConnectQueueQuickConnectConfigPtrOutput() QuickConnectQueueQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) ToQuickConnectQueueQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectQueueQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectQueueQuickConnectConfigPtrOutput) Elem() QuickConnectQueueQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) QuickConnectQueueQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectQueueQuickConnectConfig
		return ret
	}).(QuickConnectQueueQuickConnectConfigOutput)
}

// The Amazon Resource Name (ARN) of the flow.
func (o QuickConnectQueueQuickConnectConfigPtrOutput) ContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ContactFlowArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the queue.
func (o QuickConnectQueueQuickConnectConfigPtrOutput) QueueArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectQueueQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QueueArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type QuickConnectTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfig struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn string `pulumi:"contactFlowArn"`
	// The Amazon Resource Name (ARN) of the user.
	UserArn string `pulumi:"userArn"`
}

// QuickConnectUserQuickConnectConfigInput is an input type that accepts QuickConnectUserQuickConnectConfigArgs and QuickConnectUserQuickConnectConfigOutput values.
// You can construct a concrete instance of `QuickConnectUserQuickConnectConfigInput` via:
//
//	QuickConnectUserQuickConnectConfigArgs{...}
type QuickConnectUserQuickConnectConfigInput interface {
	pulumi.Input

	ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput
	ToQuickConnectUserQuickConnectConfigOutputWithContext(context.Context) QuickConnectUserQuickConnectConfigOutput
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfigArgs struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	// The Amazon Resource Name (ARN) of the user.
	UserArn pulumi.StringInput `pulumi:"userArn"`
}

func (QuickConnectUserQuickConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput {
	return i.ToQuickConnectUserQuickConnectConfigOutputWithContext(context.Background())
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigOutput)
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return i.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i QuickConnectUserQuickConnectConfigArgs) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigOutput).ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx)
}

// QuickConnectUserQuickConnectConfigPtrInput is an input type that accepts QuickConnectUserQuickConnectConfigArgs, QuickConnectUserQuickConnectConfigPtr and QuickConnectUserQuickConnectConfigPtrOutput values.
// You can construct a concrete instance of `QuickConnectUserQuickConnectConfigPtrInput` via:
//
//	        QuickConnectUserQuickConnectConfigArgs{...}
//
//	or:
//
//	        nil
type QuickConnectUserQuickConnectConfigPtrInput interface {
	pulumi.Input

	ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput
	ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Context) QuickConnectUserQuickConnectConfigPtrOutput
}

type quickConnectUserQuickConnectConfigPtrType QuickConnectUserQuickConnectConfigArgs

func QuickConnectUserQuickConnectConfigPtr(v *QuickConnectUserQuickConnectConfigArgs) QuickConnectUserQuickConnectConfigPtrInput {
	return (*quickConnectUserQuickConnectConfigPtrType)(v)
}

func (*quickConnectUserQuickConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (i *quickConnectUserQuickConnectConfigPtrType) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return i.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (i *quickConnectUserQuickConnectConfigPtrType) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuickConnectUserQuickConnectConfigPtrOutput)
}

// The user configuration. This is required only if QuickConnectType is USER.
type QuickConnectUserQuickConnectConfigOutput struct{ *pulumi.OutputState }

func (QuickConnectUserQuickConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigOutput() QuickConnectUserQuickConnectConfigOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(context.Background())
}

func (o QuickConnectUserQuickConnectConfigOutput) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuickConnectUserQuickConnectConfig) *QuickConnectUserQuickConnectConfig {
		return &v
	}).(QuickConnectUserQuickConnectConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the flow.
func (o QuickConnectUserQuickConnectConfigOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectUserQuickConnectConfig) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the user.
func (o QuickConnectUserQuickConnectConfigOutput) UserArn() pulumi.StringOutput {
	return o.ApplyT(func(v QuickConnectUserQuickConnectConfig) string { return v.UserArn }).(pulumi.StringOutput)
}

type QuickConnectUserQuickConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (QuickConnectUserQuickConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuickConnectUserQuickConnectConfig)(nil)).Elem()
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) ToQuickConnectUserQuickConnectConfigPtrOutput() QuickConnectUserQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) ToQuickConnectUserQuickConnectConfigPtrOutputWithContext(ctx context.Context) QuickConnectUserQuickConnectConfigPtrOutput {
	return o
}

func (o QuickConnectUserQuickConnectConfigPtrOutput) Elem() QuickConnectUserQuickConnectConfigOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) QuickConnectUserQuickConnectConfig {
		if v != nil {
			return *v
		}
		var ret QuickConnectUserQuickConnectConfig
		return ret
	}).(QuickConnectUserQuickConnectConfigOutput)
}

// The Amazon Resource Name (ARN) of the flow.
func (o QuickConnectUserQuickConnectConfigPtrOutput) ContactFlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ContactFlowArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the user.
func (o QuickConnectUserQuickConnectConfigPtrOutput) UserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuickConnectUserQuickConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserArn
	}).(pulumi.StringPtrOutput)
}

// Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel.
type RoutingProfileCrossChannelBehavior struct {
	// Specifies the other channels that can be routed to an agent handling their current channel.
	BehaviorType RoutingProfileBehaviorType `pulumi:"behaviorType"`
}

// RoutingProfileCrossChannelBehaviorInput is an input type that accepts RoutingProfileCrossChannelBehaviorArgs and RoutingProfileCrossChannelBehaviorOutput values.
// You can construct a concrete instance of `RoutingProfileCrossChannelBehaviorInput` via:
//
//	RoutingProfileCrossChannelBehaviorArgs{...}
type RoutingProfileCrossChannelBehaviorInput interface {
	pulumi.Input

	ToRoutingProfileCrossChannelBehaviorOutput() RoutingProfileCrossChannelBehaviorOutput
	ToRoutingProfileCrossChannelBehaviorOutputWithContext(context.Context) RoutingProfileCrossChannelBehaviorOutput
}

// Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel.
type RoutingProfileCrossChannelBehaviorArgs struct {
	// Specifies the other channels that can be routed to an agent handling their current channel.
	BehaviorType RoutingProfileBehaviorTypeInput `pulumi:"behaviorType"`
}

func (RoutingProfileCrossChannelBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileCrossChannelBehavior)(nil)).Elem()
}

func (i RoutingProfileCrossChannelBehaviorArgs) ToRoutingProfileCrossChannelBehaviorOutput() RoutingProfileCrossChannelBehaviorOutput {
	return i.ToRoutingProfileCrossChannelBehaviorOutputWithContext(context.Background())
}

func (i RoutingProfileCrossChannelBehaviorArgs) ToRoutingProfileCrossChannelBehaviorOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileCrossChannelBehaviorOutput)
}

func (i RoutingProfileCrossChannelBehaviorArgs) ToRoutingProfileCrossChannelBehaviorPtrOutput() RoutingProfileCrossChannelBehaviorPtrOutput {
	return i.ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(context.Background())
}

func (i RoutingProfileCrossChannelBehaviorArgs) ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileCrossChannelBehaviorOutput).ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(ctx)
}

// RoutingProfileCrossChannelBehaviorPtrInput is an input type that accepts RoutingProfileCrossChannelBehaviorArgs, RoutingProfileCrossChannelBehaviorPtr and RoutingProfileCrossChannelBehaviorPtrOutput values.
// You can construct a concrete instance of `RoutingProfileCrossChannelBehaviorPtrInput` via:
//
//	        RoutingProfileCrossChannelBehaviorArgs{...}
//
//	or:
//
//	        nil
type RoutingProfileCrossChannelBehaviorPtrInput interface {
	pulumi.Input

	ToRoutingProfileCrossChannelBehaviorPtrOutput() RoutingProfileCrossChannelBehaviorPtrOutput
	ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(context.Context) RoutingProfileCrossChannelBehaviorPtrOutput
}

type routingProfileCrossChannelBehaviorPtrType RoutingProfileCrossChannelBehaviorArgs

func RoutingProfileCrossChannelBehaviorPtr(v *RoutingProfileCrossChannelBehaviorArgs) RoutingProfileCrossChannelBehaviorPtrInput {
	return (*routingProfileCrossChannelBehaviorPtrType)(v)
}

func (*routingProfileCrossChannelBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProfileCrossChannelBehavior)(nil)).Elem()
}

func (i *routingProfileCrossChannelBehaviorPtrType) ToRoutingProfileCrossChannelBehaviorPtrOutput() RoutingProfileCrossChannelBehaviorPtrOutput {
	return i.ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(context.Background())
}

func (i *routingProfileCrossChannelBehaviorPtrType) ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileCrossChannelBehaviorPtrOutput)
}

// Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel.
type RoutingProfileCrossChannelBehaviorOutput struct{ *pulumi.OutputState }

func (RoutingProfileCrossChannelBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileCrossChannelBehavior)(nil)).Elem()
}

func (o RoutingProfileCrossChannelBehaviorOutput) ToRoutingProfileCrossChannelBehaviorOutput() RoutingProfileCrossChannelBehaviorOutput {
	return o
}

func (o RoutingProfileCrossChannelBehaviorOutput) ToRoutingProfileCrossChannelBehaviorOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorOutput {
	return o
}

func (o RoutingProfileCrossChannelBehaviorOutput) ToRoutingProfileCrossChannelBehaviorPtrOutput() RoutingProfileCrossChannelBehaviorPtrOutput {
	return o.ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(context.Background())
}

func (o RoutingProfileCrossChannelBehaviorOutput) ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingProfileCrossChannelBehavior) *RoutingProfileCrossChannelBehavior {
		return &v
	}).(RoutingProfileCrossChannelBehaviorPtrOutput)
}

// Specifies the other channels that can be routed to an agent handling their current channel.
func (o RoutingProfileCrossChannelBehaviorOutput) BehaviorType() RoutingProfileBehaviorTypeOutput {
	return o.ApplyT(func(v RoutingProfileCrossChannelBehavior) RoutingProfileBehaviorType { return v.BehaviorType }).(RoutingProfileBehaviorTypeOutput)
}

type RoutingProfileCrossChannelBehaviorPtrOutput struct{ *pulumi.OutputState }

func (RoutingProfileCrossChannelBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProfileCrossChannelBehavior)(nil)).Elem()
}

func (o RoutingProfileCrossChannelBehaviorPtrOutput) ToRoutingProfileCrossChannelBehaviorPtrOutput() RoutingProfileCrossChannelBehaviorPtrOutput {
	return o
}

func (o RoutingProfileCrossChannelBehaviorPtrOutput) ToRoutingProfileCrossChannelBehaviorPtrOutputWithContext(ctx context.Context) RoutingProfileCrossChannelBehaviorPtrOutput {
	return o
}

func (o RoutingProfileCrossChannelBehaviorPtrOutput) Elem() RoutingProfileCrossChannelBehaviorOutput {
	return o.ApplyT(func(v *RoutingProfileCrossChannelBehavior) RoutingProfileCrossChannelBehavior {
		if v != nil {
			return *v
		}
		var ret RoutingProfileCrossChannelBehavior
		return ret
	}).(RoutingProfileCrossChannelBehaviorOutput)
}

// Specifies the other channels that can be routed to an agent handling their current channel.
func (o RoutingProfileCrossChannelBehaviorPtrOutput) BehaviorType() RoutingProfileBehaviorTypePtrOutput {
	return o.ApplyT(func(v *RoutingProfileCrossChannelBehavior) *RoutingProfileBehaviorType {
		if v == nil {
			return nil
		}
		return &v.BehaviorType
	}).(RoutingProfileBehaviorTypePtrOutput)
}

// Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
type RoutingProfileMediaConcurrency struct {
	// The channels that agents can handle in the Contact Control Panel (CCP).
	Channel RoutingProfileChannel `pulumi:"channel"`
	// The number of contacts an agent can have on a channel simultaneously.
	//
	// Valid Range for `VOICE` : Minimum value of 1. Maximum value of 1.
	//
	// Valid Range for `CHAT` : Minimum value of 1. Maximum value of 10.
	//
	// Valid Range for `TASK` : Minimum value of 1. Maximum value of 10.
	Concurrency int `pulumi:"concurrency"`
	// Defines the cross-channel routing behavior for each channel that is enabled for this Routing Profile. For example, this allows you to offer an agent a different contact from another channel when they are currently working with a contact from a Voice channel.
	CrossChannelBehavior *RoutingProfileCrossChannelBehavior `pulumi:"crossChannelBehavior"`
}

// RoutingProfileMediaConcurrencyInput is an input type that accepts RoutingProfileMediaConcurrencyArgs and RoutingProfileMediaConcurrencyOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyInput` via:
//
//	RoutingProfileMediaConcurrencyArgs{...}
type RoutingProfileMediaConcurrencyInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput
	ToRoutingProfileMediaConcurrencyOutputWithContext(context.Context) RoutingProfileMediaConcurrencyOutput
}

// Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
type RoutingProfileMediaConcurrencyArgs struct {
	// The channels that agents can handle in the Contact Control Panel (CCP).
	Channel RoutingProfileChannelInput `pulumi:"channel"`
	// The number of contacts an agent can have on a channel simultaneously.
	//
	// Valid Range for `VOICE` : Minimum value of 1. Maximum value of 1.
	//
	// Valid Range for `CHAT` : Minimum value of 1. Maximum value of 10.
	//
	// Valid Range for `TASK` : Minimum value of 1. Maximum value of 10.
	Concurrency pulumi.IntInput `pulumi:"concurrency"`
	// Defines the cross-channel routing behavior for each channel that is enabled for this Routing Profile. For example, this allows you to offer an agent a different contact from another channel when they are currently working with a contact from a Voice channel.
	CrossChannelBehavior RoutingProfileCrossChannelBehaviorPtrInput `pulumi:"crossChannelBehavior"`
}

func (RoutingProfileMediaConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return i.ToRoutingProfileMediaConcurrencyOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArgs) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyOutput)
}

// RoutingProfileMediaConcurrencyArrayInput is an input type that accepts RoutingProfileMediaConcurrencyArray and RoutingProfileMediaConcurrencyArrayOutput values.
// You can construct a concrete instance of `RoutingProfileMediaConcurrencyArrayInput` via:
//
//	RoutingProfileMediaConcurrencyArray{ RoutingProfileMediaConcurrencyArgs{...} }
type RoutingProfileMediaConcurrencyArrayInput interface {
	pulumi.Input

	ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput
	ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Context) RoutingProfileMediaConcurrencyArrayOutput
}

type RoutingProfileMediaConcurrencyArray []RoutingProfileMediaConcurrencyInput

func (RoutingProfileMediaConcurrencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return i.ToRoutingProfileMediaConcurrencyArrayOutputWithContext(context.Background())
}

func (i RoutingProfileMediaConcurrencyArray) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileMediaConcurrencyArrayOutput)
}

// Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
type RoutingProfileMediaConcurrencyOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutput() RoutingProfileMediaConcurrencyOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyOutput) ToRoutingProfileMediaConcurrencyOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyOutput {
	return o
}

// The channels that agents can handle in the Contact Control Panel (CCP).
func (o RoutingProfileMediaConcurrencyOutput) Channel() RoutingProfileChannelOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) RoutingProfileChannel { return v.Channel }).(RoutingProfileChannelOutput)
}

// The number of contacts an agent can have on a channel simultaneously.
//
// Valid Range for `VOICE` : Minimum value of 1. Maximum value of 1.
//
// Valid Range for `CHAT` : Minimum value of 1. Maximum value of 10.
//
// Valid Range for `TASK` : Minimum value of 1. Maximum value of 10.
func (o RoutingProfileMediaConcurrencyOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) int { return v.Concurrency }).(pulumi.IntOutput)
}

// Defines the cross-channel routing behavior for each channel that is enabled for this Routing Profile. For example, this allows you to offer an agent a different contact from another channel when they are currently working with a contact from a Voice channel.
func (o RoutingProfileMediaConcurrencyOutput) CrossChannelBehavior() RoutingProfileCrossChannelBehaviorPtrOutput {
	return o.ApplyT(func(v RoutingProfileMediaConcurrency) *RoutingProfileCrossChannelBehavior {
		return v.CrossChannelBehavior
	}).(RoutingProfileCrossChannelBehaviorPtrOutput)
}

type RoutingProfileMediaConcurrencyArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileMediaConcurrencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileMediaConcurrency)(nil)).Elem()
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutput() RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) ToRoutingProfileMediaConcurrencyArrayOutputWithContext(ctx context.Context) RoutingProfileMediaConcurrencyArrayOutput {
	return o
}

func (o RoutingProfileMediaConcurrencyArrayOutput) Index(i pulumi.IntInput) RoutingProfileMediaConcurrencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileMediaConcurrency {
		return vs[0].([]RoutingProfileMediaConcurrency)[vs[1].(int)]
	}).(RoutingProfileMediaConcurrencyOutput)
}

// Contains information about the queue and channel for which priority and delay can be set.
type RoutingProfileQueueConfig struct {
	// The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) in the *Amazon Connect Administrator Guide* .
	Delay int `pulumi:"delay"`
	// The order in which contacts are to be handled for the queue. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) .
	Priority int `pulumi:"priority"`
	// Contains information about a queue resource.
	QueueReference RoutingProfileQueueReference `pulumi:"queueReference"`
}

// RoutingProfileQueueConfigInput is an input type that accepts RoutingProfileQueueConfigArgs and RoutingProfileQueueConfigOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigInput` via:
//
//	RoutingProfileQueueConfigArgs{...}
type RoutingProfileQueueConfigInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput
	ToRoutingProfileQueueConfigOutputWithContext(context.Context) RoutingProfileQueueConfigOutput
}

// Contains information about the queue and channel for which priority and delay can be set.
type RoutingProfileQueueConfigArgs struct {
	// The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) in the *Amazon Connect Administrator Guide* .
	Delay pulumi.IntInput `pulumi:"delay"`
	// The order in which contacts are to be handled for the queue. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) .
	Priority pulumi.IntInput `pulumi:"priority"`
	// Contains information about a queue resource.
	QueueReference RoutingProfileQueueReferenceInput `pulumi:"queueReference"`
}

func (RoutingProfileQueueConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return i.ToRoutingProfileQueueConfigOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArgs) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigOutput)
}

// RoutingProfileQueueConfigArrayInput is an input type that accepts RoutingProfileQueueConfigArray and RoutingProfileQueueConfigArrayOutput values.
// You can construct a concrete instance of `RoutingProfileQueueConfigArrayInput` via:
//
//	RoutingProfileQueueConfigArray{ RoutingProfileQueueConfigArgs{...} }
type RoutingProfileQueueConfigArrayInput interface {
	pulumi.Input

	ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput
	ToRoutingProfileQueueConfigArrayOutputWithContext(context.Context) RoutingProfileQueueConfigArrayOutput
}

type RoutingProfileQueueConfigArray []RoutingProfileQueueConfigInput

func (RoutingProfileQueueConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return i.ToRoutingProfileQueueConfigArrayOutputWithContext(context.Background())
}

func (i RoutingProfileQueueConfigArray) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueConfigArrayOutput)
}

// Contains information about the queue and channel for which priority and delay can be set.
type RoutingProfileQueueConfigOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutput() RoutingProfileQueueConfigOutput {
	return o
}

func (o RoutingProfileQueueConfigOutput) ToRoutingProfileQueueConfigOutputWithContext(ctx context.Context) RoutingProfileQueueConfigOutput {
	return o
}

// The delay, in seconds, a contact should be in the queue before they are routed to an available agent. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) in the *Amazon Connect Administrator Guide* .
func (o RoutingProfileQueueConfigOutput) Delay() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Delay }).(pulumi.IntOutput)
}

// The order in which contacts are to be handled for the queue. For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html) .
func (o RoutingProfileQueueConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Contains information about a queue resource.
func (o RoutingProfileQueueConfigOutput) QueueReference() RoutingProfileQueueReferenceOutput {
	return o.ApplyT(func(v RoutingProfileQueueConfig) RoutingProfileQueueReference { return v.QueueReference }).(RoutingProfileQueueReferenceOutput)
}

type RoutingProfileQueueConfigArrayOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingProfileQueueConfig)(nil)).Elem()
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutput() RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) ToRoutingProfileQueueConfigArrayOutputWithContext(ctx context.Context) RoutingProfileQueueConfigArrayOutput {
	return o
}

func (o RoutingProfileQueueConfigArrayOutput) Index(i pulumi.IntInput) RoutingProfileQueueConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingProfileQueueConfig {
		return vs[0].([]RoutingProfileQueueConfig)[vs[1].(int)]
	}).(RoutingProfileQueueConfigOutput)
}

// Contains the channel and queue identifier for a routing profile.
type RoutingProfileQueueReference struct {
	// The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
	Channel RoutingProfileChannel `pulumi:"channel"`
	// The Amazon Resource Name (ARN) of the queue.
	QueueArn string `pulumi:"queueArn"`
}

// RoutingProfileQueueReferenceInput is an input type that accepts RoutingProfileQueueReferenceArgs and RoutingProfileQueueReferenceOutput values.
// You can construct a concrete instance of `RoutingProfileQueueReferenceInput` via:
//
//	RoutingProfileQueueReferenceArgs{...}
type RoutingProfileQueueReferenceInput interface {
	pulumi.Input

	ToRoutingProfileQueueReferenceOutput() RoutingProfileQueueReferenceOutput
	ToRoutingProfileQueueReferenceOutputWithContext(context.Context) RoutingProfileQueueReferenceOutput
}

// Contains the channel and queue identifier for a routing profile.
type RoutingProfileQueueReferenceArgs struct {
	// The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
	Channel RoutingProfileChannelInput `pulumi:"channel"`
	// The Amazon Resource Name (ARN) of the queue.
	QueueArn pulumi.StringInput `pulumi:"queueArn"`
}

func (RoutingProfileQueueReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueReference)(nil)).Elem()
}

func (i RoutingProfileQueueReferenceArgs) ToRoutingProfileQueueReferenceOutput() RoutingProfileQueueReferenceOutput {
	return i.ToRoutingProfileQueueReferenceOutputWithContext(context.Background())
}

func (i RoutingProfileQueueReferenceArgs) ToRoutingProfileQueueReferenceOutputWithContext(ctx context.Context) RoutingProfileQueueReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingProfileQueueReferenceOutput)
}

// Contains the channel and queue identifier for a routing profile.
type RoutingProfileQueueReferenceOutput struct{ *pulumi.OutputState }

func (RoutingProfileQueueReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProfileQueueReference)(nil)).Elem()
}

func (o RoutingProfileQueueReferenceOutput) ToRoutingProfileQueueReferenceOutput() RoutingProfileQueueReferenceOutput {
	return o
}

func (o RoutingProfileQueueReferenceOutput) ToRoutingProfileQueueReferenceOutputWithContext(ctx context.Context) RoutingProfileQueueReferenceOutput {
	return o
}

// The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
func (o RoutingProfileQueueReferenceOutput) Channel() RoutingProfileChannelOutput {
	return o.ApplyT(func(v RoutingProfileQueueReference) RoutingProfileChannel { return v.Channel }).(RoutingProfileChannelOutput)
}

// The Amazon Resource Name (ARN) of the queue.
func (o RoutingProfileQueueReferenceOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingProfileQueueReference) string { return v.QueueArn }).(pulumi.StringOutput)
}

// A key-value pair to associate with a resource.
type RoutingProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A list of actions to be run when the rule is triggered.
type RuleActions struct {
	// Information about the contact category action. The syntax can be empty, for example, ``{}``.
	AssignContactCategoryActions []RuleAssignContactCategoryAction `pulumi:"assignContactCategoryActions"`
	CreateCaseActions            []RuleCreateCaseAction            `pulumi:"createCaseActions"`
	EndAssociatedTasksActions    []RuleEndAssociatedTasksAction    `pulumi:"endAssociatedTasksActions"`
	// Information about the EV action.
	EventBridgeActions []RuleEventBridgeAction `pulumi:"eventBridgeActions"`
	// Information about the send notification action.
	SendNotificationActions     []RuleSendNotificationAction     `pulumi:"sendNotificationActions"`
	SubmitAutoEvaluationActions []RuleSubmitAutoEvaluationAction `pulumi:"submitAutoEvaluationActions"`
	// Information about the task action. This field is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``
	TaskActions       []RuleTaskAction       `pulumi:"taskActions"`
	UpdateCaseActions []RuleUpdateCaseAction `pulumi:"updateCaseActions"`
}

// RuleActionsInput is an input type that accepts RuleActionsArgs and RuleActionsOutput values.
// You can construct a concrete instance of `RuleActionsInput` via:
//
//	RuleActionsArgs{...}
type RuleActionsInput interface {
	pulumi.Input

	ToRuleActionsOutput() RuleActionsOutput
	ToRuleActionsOutputWithContext(context.Context) RuleActionsOutput
}

// A list of actions to be run when the rule is triggered.
type RuleActionsArgs struct {
	// Information about the contact category action. The syntax can be empty, for example, ``{}``.
	AssignContactCategoryActions RuleAssignContactCategoryActionArrayInput `pulumi:"assignContactCategoryActions"`
	CreateCaseActions            RuleCreateCaseActionArrayInput            `pulumi:"createCaseActions"`
	EndAssociatedTasksActions    RuleEndAssociatedTasksActionArrayInput    `pulumi:"endAssociatedTasksActions"`
	// Information about the EV action.
	EventBridgeActions RuleEventBridgeActionArrayInput `pulumi:"eventBridgeActions"`
	// Information about the send notification action.
	SendNotificationActions     RuleSendNotificationActionArrayInput     `pulumi:"sendNotificationActions"`
	SubmitAutoEvaluationActions RuleSubmitAutoEvaluationActionArrayInput `pulumi:"submitAutoEvaluationActions"`
	// Information about the task action. This field is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``
	TaskActions       RuleTaskActionArrayInput       `pulumi:"taskActions"`
	UpdateCaseActions RuleUpdateCaseActionArrayInput `pulumi:"updateCaseActions"`
}

func (RuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleActions)(nil)).Elem()
}

func (i RuleActionsArgs) ToRuleActionsOutput() RuleActionsOutput {
	return i.ToRuleActionsOutputWithContext(context.Background())
}

func (i RuleActionsArgs) ToRuleActionsOutputWithContext(ctx context.Context) RuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleActionsOutput)
}

// A list of actions to be run when the rule is triggered.
type RuleActionsOutput struct{ *pulumi.OutputState }

func (RuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleActions)(nil)).Elem()
}

func (o RuleActionsOutput) ToRuleActionsOutput() RuleActionsOutput {
	return o
}

func (o RuleActionsOutput) ToRuleActionsOutputWithContext(ctx context.Context) RuleActionsOutput {
	return o
}

// Information about the contact category action. The syntax can be empty, for example, “{}“.
func (o RuleActionsOutput) AssignContactCategoryActions() RuleAssignContactCategoryActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleAssignContactCategoryAction { return v.AssignContactCategoryActions }).(RuleAssignContactCategoryActionArrayOutput)
}

func (o RuleActionsOutput) CreateCaseActions() RuleCreateCaseActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleCreateCaseAction { return v.CreateCaseActions }).(RuleCreateCaseActionArrayOutput)
}

func (o RuleActionsOutput) EndAssociatedTasksActions() RuleEndAssociatedTasksActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleEndAssociatedTasksAction { return v.EndAssociatedTasksActions }).(RuleEndAssociatedTasksActionArrayOutput)
}

// Information about the EV action.
func (o RuleActionsOutput) EventBridgeActions() RuleEventBridgeActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleEventBridgeAction { return v.EventBridgeActions }).(RuleEventBridgeActionArrayOutput)
}

// Information about the send notification action.
func (o RuleActionsOutput) SendNotificationActions() RuleSendNotificationActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleSendNotificationAction { return v.SendNotificationActions }).(RuleSendNotificationActionArrayOutput)
}

func (o RuleActionsOutput) SubmitAutoEvaluationActions() RuleSubmitAutoEvaluationActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleSubmitAutoEvaluationAction { return v.SubmitAutoEvaluationActions }).(RuleSubmitAutoEvaluationActionArrayOutput)
}

// Information about the task action. This field is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
func (o RuleActionsOutput) TaskActions() RuleTaskActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleTaskAction { return v.TaskActions }).(RuleTaskActionArrayOutput)
}

func (o RuleActionsOutput) UpdateCaseActions() RuleUpdateCaseActionArrayOutput {
	return o.ApplyT(func(v RuleActions) []RuleUpdateCaseAction { return v.UpdateCaseActions }).(RuleUpdateCaseActionArrayOutput)
}

type RuleActionsPtrOutput struct{ *pulumi.OutputState }

func (RuleActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleActions)(nil)).Elem()
}

func (o RuleActionsPtrOutput) ToRuleActionsPtrOutput() RuleActionsPtrOutput {
	return o
}

func (o RuleActionsPtrOutput) ToRuleActionsPtrOutputWithContext(ctx context.Context) RuleActionsPtrOutput {
	return o
}

func (o RuleActionsPtrOutput) Elem() RuleActionsOutput {
	return o.ApplyT(func(v *RuleActions) RuleActions {
		if v != nil {
			return *v
		}
		var ret RuleActions
		return ret
	}).(RuleActionsOutput)
}

// Information about the contact category action. The syntax can be empty, for example, “{}“.
func (o RuleActionsPtrOutput) AssignContactCategoryActions() RuleAssignContactCategoryActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleAssignContactCategoryAction {
		if v == nil {
			return nil
		}
		return v.AssignContactCategoryActions
	}).(RuleAssignContactCategoryActionArrayOutput)
}

func (o RuleActionsPtrOutput) CreateCaseActions() RuleCreateCaseActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleCreateCaseAction {
		if v == nil {
			return nil
		}
		return v.CreateCaseActions
	}).(RuleCreateCaseActionArrayOutput)
}

func (o RuleActionsPtrOutput) EndAssociatedTasksActions() RuleEndAssociatedTasksActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleEndAssociatedTasksAction {
		if v == nil {
			return nil
		}
		return v.EndAssociatedTasksActions
	}).(RuleEndAssociatedTasksActionArrayOutput)
}

// Information about the EV action.
func (o RuleActionsPtrOutput) EventBridgeActions() RuleEventBridgeActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleEventBridgeAction {
		if v == nil {
			return nil
		}
		return v.EventBridgeActions
	}).(RuleEventBridgeActionArrayOutput)
}

// Information about the send notification action.
func (o RuleActionsPtrOutput) SendNotificationActions() RuleSendNotificationActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleSendNotificationAction {
		if v == nil {
			return nil
		}
		return v.SendNotificationActions
	}).(RuleSendNotificationActionArrayOutput)
}

func (o RuleActionsPtrOutput) SubmitAutoEvaluationActions() RuleSubmitAutoEvaluationActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleSubmitAutoEvaluationAction {
		if v == nil {
			return nil
		}
		return v.SubmitAutoEvaluationActions
	}).(RuleSubmitAutoEvaluationActionArrayOutput)
}

// Information about the task action. This field is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
func (o RuleActionsPtrOutput) TaskActions() RuleTaskActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleTaskAction {
		if v == nil {
			return nil
		}
		return v.TaskActions
	}).(RuleTaskActionArrayOutput)
}

func (o RuleActionsPtrOutput) UpdateCaseActions() RuleUpdateCaseActionArrayOutput {
	return o.ApplyT(func(v *RuleActions) []RuleUpdateCaseAction {
		if v == nil {
			return nil
		}
		return v.UpdateCaseActions
	}).(RuleUpdateCaseActionArrayOutput)
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryAction struct {
}

// RuleAssignContactCategoryActionInput is an input type that accepts RuleAssignContactCategoryActionArgs and RuleAssignContactCategoryActionOutput values.
// You can construct a concrete instance of `RuleAssignContactCategoryActionInput` via:
//
//	RuleAssignContactCategoryActionArgs{...}
type RuleAssignContactCategoryActionInput interface {
	pulumi.Input

	ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput
	ToRuleAssignContactCategoryActionOutputWithContext(context.Context) RuleAssignContactCategoryActionOutput
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryActionArgs struct {
}

func (RuleAssignContactCategoryActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAssignContactCategoryAction)(nil)).Elem()
}

func (i RuleAssignContactCategoryActionArgs) ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput {
	return i.ToRuleAssignContactCategoryActionOutputWithContext(context.Background())
}

func (i RuleAssignContactCategoryActionArgs) ToRuleAssignContactCategoryActionOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAssignContactCategoryActionOutput)
}

// RuleAssignContactCategoryActionArrayInput is an input type that accepts RuleAssignContactCategoryActionArray and RuleAssignContactCategoryActionArrayOutput values.
// You can construct a concrete instance of `RuleAssignContactCategoryActionArrayInput` via:
//
//	RuleAssignContactCategoryActionArray{ RuleAssignContactCategoryActionArgs{...} }
type RuleAssignContactCategoryActionArrayInput interface {
	pulumi.Input

	ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput
	ToRuleAssignContactCategoryActionArrayOutputWithContext(context.Context) RuleAssignContactCategoryActionArrayOutput
}

type RuleAssignContactCategoryActionArray []RuleAssignContactCategoryActionInput

func (RuleAssignContactCategoryActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAssignContactCategoryAction)(nil)).Elem()
}

func (i RuleAssignContactCategoryActionArray) ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput {
	return i.ToRuleAssignContactCategoryActionArrayOutputWithContext(context.Background())
}

func (i RuleAssignContactCategoryActionArray) ToRuleAssignContactCategoryActionArrayOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAssignContactCategoryActionArrayOutput)
}

// The definition for assigning contact category action.
type RuleAssignContactCategoryActionOutput struct{ *pulumi.OutputState }

func (RuleAssignContactCategoryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAssignContactCategoryAction)(nil)).Elem()
}

func (o RuleAssignContactCategoryActionOutput) ToRuleAssignContactCategoryActionOutput() RuleAssignContactCategoryActionOutput {
	return o
}

func (o RuleAssignContactCategoryActionOutput) ToRuleAssignContactCategoryActionOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionOutput {
	return o
}

type RuleAssignContactCategoryActionArrayOutput struct{ *pulumi.OutputState }

func (RuleAssignContactCategoryActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleAssignContactCategoryAction)(nil)).Elem()
}

func (o RuleAssignContactCategoryActionArrayOutput) ToRuleAssignContactCategoryActionArrayOutput() RuleAssignContactCategoryActionArrayOutput {
	return o
}

func (o RuleAssignContactCategoryActionArrayOutput) ToRuleAssignContactCategoryActionArrayOutputWithContext(ctx context.Context) RuleAssignContactCategoryActionArrayOutput {
	return o
}

func (o RuleAssignContactCategoryActionArrayOutput) Index(i pulumi.IntInput) RuleAssignContactCategoryActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleAssignContactCategoryAction {
		return vs[0].([]RuleAssignContactCategoryAction)[vs[1].(int)]
	}).(RuleAssignContactCategoryActionOutput)
}

type RuleCreateCaseAction struct {
	Fields     []RuleField `pulumi:"fields"`
	TemplateId string      `pulumi:"templateId"`
}

// RuleCreateCaseActionInput is an input type that accepts RuleCreateCaseActionArgs and RuleCreateCaseActionOutput values.
// You can construct a concrete instance of `RuleCreateCaseActionInput` via:
//
//	RuleCreateCaseActionArgs{...}
type RuleCreateCaseActionInput interface {
	pulumi.Input

	ToRuleCreateCaseActionOutput() RuleCreateCaseActionOutput
	ToRuleCreateCaseActionOutputWithContext(context.Context) RuleCreateCaseActionOutput
}

type RuleCreateCaseActionArgs struct {
	Fields     RuleFieldArrayInput `pulumi:"fields"`
	TemplateId pulumi.StringInput  `pulumi:"templateId"`
}

func (RuleCreateCaseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleCreateCaseAction)(nil)).Elem()
}

func (i RuleCreateCaseActionArgs) ToRuleCreateCaseActionOutput() RuleCreateCaseActionOutput {
	return i.ToRuleCreateCaseActionOutputWithContext(context.Background())
}

func (i RuleCreateCaseActionArgs) ToRuleCreateCaseActionOutputWithContext(ctx context.Context) RuleCreateCaseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleCreateCaseActionOutput)
}

// RuleCreateCaseActionArrayInput is an input type that accepts RuleCreateCaseActionArray and RuleCreateCaseActionArrayOutput values.
// You can construct a concrete instance of `RuleCreateCaseActionArrayInput` via:
//
//	RuleCreateCaseActionArray{ RuleCreateCaseActionArgs{...} }
type RuleCreateCaseActionArrayInput interface {
	pulumi.Input

	ToRuleCreateCaseActionArrayOutput() RuleCreateCaseActionArrayOutput
	ToRuleCreateCaseActionArrayOutputWithContext(context.Context) RuleCreateCaseActionArrayOutput
}

type RuleCreateCaseActionArray []RuleCreateCaseActionInput

func (RuleCreateCaseActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleCreateCaseAction)(nil)).Elem()
}

func (i RuleCreateCaseActionArray) ToRuleCreateCaseActionArrayOutput() RuleCreateCaseActionArrayOutput {
	return i.ToRuleCreateCaseActionArrayOutputWithContext(context.Background())
}

func (i RuleCreateCaseActionArray) ToRuleCreateCaseActionArrayOutputWithContext(ctx context.Context) RuleCreateCaseActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleCreateCaseActionArrayOutput)
}

type RuleCreateCaseActionOutput struct{ *pulumi.OutputState }

func (RuleCreateCaseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleCreateCaseAction)(nil)).Elem()
}

func (o RuleCreateCaseActionOutput) ToRuleCreateCaseActionOutput() RuleCreateCaseActionOutput {
	return o
}

func (o RuleCreateCaseActionOutput) ToRuleCreateCaseActionOutputWithContext(ctx context.Context) RuleCreateCaseActionOutput {
	return o
}

func (o RuleCreateCaseActionOutput) Fields() RuleFieldArrayOutput {
	return o.ApplyT(func(v RuleCreateCaseAction) []RuleField { return v.Fields }).(RuleFieldArrayOutput)
}

func (o RuleCreateCaseActionOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v RuleCreateCaseAction) string { return v.TemplateId }).(pulumi.StringOutput)
}

type RuleCreateCaseActionArrayOutput struct{ *pulumi.OutputState }

func (RuleCreateCaseActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleCreateCaseAction)(nil)).Elem()
}

func (o RuleCreateCaseActionArrayOutput) ToRuleCreateCaseActionArrayOutput() RuleCreateCaseActionArrayOutput {
	return o
}

func (o RuleCreateCaseActionArrayOutput) ToRuleCreateCaseActionArrayOutputWithContext(ctx context.Context) RuleCreateCaseActionArrayOutput {
	return o
}

func (o RuleCreateCaseActionArrayOutput) Index(i pulumi.IntInput) RuleCreateCaseActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleCreateCaseAction {
		return vs[0].([]RuleCreateCaseAction)[vs[1].(int)]
	}).(RuleCreateCaseActionOutput)
}

// The definition for ending associated task action.
type RuleEndAssociatedTasksAction struct {
}

// RuleEndAssociatedTasksActionInput is an input type that accepts RuleEndAssociatedTasksActionArgs and RuleEndAssociatedTasksActionOutput values.
// You can construct a concrete instance of `RuleEndAssociatedTasksActionInput` via:
//
//	RuleEndAssociatedTasksActionArgs{...}
type RuleEndAssociatedTasksActionInput interface {
	pulumi.Input

	ToRuleEndAssociatedTasksActionOutput() RuleEndAssociatedTasksActionOutput
	ToRuleEndAssociatedTasksActionOutputWithContext(context.Context) RuleEndAssociatedTasksActionOutput
}

// The definition for ending associated task action.
type RuleEndAssociatedTasksActionArgs struct {
}

func (RuleEndAssociatedTasksActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEndAssociatedTasksAction)(nil)).Elem()
}

func (i RuleEndAssociatedTasksActionArgs) ToRuleEndAssociatedTasksActionOutput() RuleEndAssociatedTasksActionOutput {
	return i.ToRuleEndAssociatedTasksActionOutputWithContext(context.Background())
}

func (i RuleEndAssociatedTasksActionArgs) ToRuleEndAssociatedTasksActionOutputWithContext(ctx context.Context) RuleEndAssociatedTasksActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEndAssociatedTasksActionOutput)
}

// RuleEndAssociatedTasksActionArrayInput is an input type that accepts RuleEndAssociatedTasksActionArray and RuleEndAssociatedTasksActionArrayOutput values.
// You can construct a concrete instance of `RuleEndAssociatedTasksActionArrayInput` via:
//
//	RuleEndAssociatedTasksActionArray{ RuleEndAssociatedTasksActionArgs{...} }
type RuleEndAssociatedTasksActionArrayInput interface {
	pulumi.Input

	ToRuleEndAssociatedTasksActionArrayOutput() RuleEndAssociatedTasksActionArrayOutput
	ToRuleEndAssociatedTasksActionArrayOutputWithContext(context.Context) RuleEndAssociatedTasksActionArrayOutput
}

type RuleEndAssociatedTasksActionArray []RuleEndAssociatedTasksActionInput

func (RuleEndAssociatedTasksActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEndAssociatedTasksAction)(nil)).Elem()
}

func (i RuleEndAssociatedTasksActionArray) ToRuleEndAssociatedTasksActionArrayOutput() RuleEndAssociatedTasksActionArrayOutput {
	return i.ToRuleEndAssociatedTasksActionArrayOutputWithContext(context.Background())
}

func (i RuleEndAssociatedTasksActionArray) ToRuleEndAssociatedTasksActionArrayOutputWithContext(ctx context.Context) RuleEndAssociatedTasksActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEndAssociatedTasksActionArrayOutput)
}

// The definition for ending associated task action.
type RuleEndAssociatedTasksActionOutput struct{ *pulumi.OutputState }

func (RuleEndAssociatedTasksActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEndAssociatedTasksAction)(nil)).Elem()
}

func (o RuleEndAssociatedTasksActionOutput) ToRuleEndAssociatedTasksActionOutput() RuleEndAssociatedTasksActionOutput {
	return o
}

func (o RuleEndAssociatedTasksActionOutput) ToRuleEndAssociatedTasksActionOutputWithContext(ctx context.Context) RuleEndAssociatedTasksActionOutput {
	return o
}

type RuleEndAssociatedTasksActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEndAssociatedTasksActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEndAssociatedTasksAction)(nil)).Elem()
}

func (o RuleEndAssociatedTasksActionArrayOutput) ToRuleEndAssociatedTasksActionArrayOutput() RuleEndAssociatedTasksActionArrayOutput {
	return o
}

func (o RuleEndAssociatedTasksActionArrayOutput) ToRuleEndAssociatedTasksActionArrayOutputWithContext(ctx context.Context) RuleEndAssociatedTasksActionArrayOutput {
	return o
}

func (o RuleEndAssociatedTasksActionArrayOutput) Index(i pulumi.IntInput) RuleEndAssociatedTasksActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEndAssociatedTasksAction {
		return vs[0].([]RuleEndAssociatedTasksAction)[vs[1].(int)]
	}).(RuleEndAssociatedTasksActionOutput)
}

// The EV action definition.
type RuleEventBridgeAction struct {
	// The name.
	Name string `pulumi:"name"`
}

// RuleEventBridgeActionInput is an input type that accepts RuleEventBridgeActionArgs and RuleEventBridgeActionOutput values.
// You can construct a concrete instance of `RuleEventBridgeActionInput` via:
//
//	RuleEventBridgeActionArgs{...}
type RuleEventBridgeActionInput interface {
	pulumi.Input

	ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput
	ToRuleEventBridgeActionOutputWithContext(context.Context) RuleEventBridgeActionOutput
}

// The EV action definition.
type RuleEventBridgeActionArgs struct {
	// The name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (RuleEventBridgeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEventBridgeAction)(nil)).Elem()
}

func (i RuleEventBridgeActionArgs) ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput {
	return i.ToRuleEventBridgeActionOutputWithContext(context.Background())
}

func (i RuleEventBridgeActionArgs) ToRuleEventBridgeActionOutputWithContext(ctx context.Context) RuleEventBridgeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEventBridgeActionOutput)
}

// RuleEventBridgeActionArrayInput is an input type that accepts RuleEventBridgeActionArray and RuleEventBridgeActionArrayOutput values.
// You can construct a concrete instance of `RuleEventBridgeActionArrayInput` via:
//
//	RuleEventBridgeActionArray{ RuleEventBridgeActionArgs{...} }
type RuleEventBridgeActionArrayInput interface {
	pulumi.Input

	ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput
	ToRuleEventBridgeActionArrayOutputWithContext(context.Context) RuleEventBridgeActionArrayOutput
}

type RuleEventBridgeActionArray []RuleEventBridgeActionInput

func (RuleEventBridgeActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEventBridgeAction)(nil)).Elem()
}

func (i RuleEventBridgeActionArray) ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput {
	return i.ToRuleEventBridgeActionArrayOutputWithContext(context.Background())
}

func (i RuleEventBridgeActionArray) ToRuleEventBridgeActionArrayOutputWithContext(ctx context.Context) RuleEventBridgeActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEventBridgeActionArrayOutput)
}

// The EV action definition.
type RuleEventBridgeActionOutput struct{ *pulumi.OutputState }

func (RuleEventBridgeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEventBridgeAction)(nil)).Elem()
}

func (o RuleEventBridgeActionOutput) ToRuleEventBridgeActionOutput() RuleEventBridgeActionOutput {
	return o
}

func (o RuleEventBridgeActionOutput) ToRuleEventBridgeActionOutputWithContext(ctx context.Context) RuleEventBridgeActionOutput {
	return o
}

// The name.
func (o RuleEventBridgeActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEventBridgeAction) string { return v.Name }).(pulumi.StringOutput)
}

type RuleEventBridgeActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEventBridgeActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEventBridgeAction)(nil)).Elem()
}

func (o RuleEventBridgeActionArrayOutput) ToRuleEventBridgeActionArrayOutput() RuleEventBridgeActionArrayOutput {
	return o
}

func (o RuleEventBridgeActionArrayOutput) ToRuleEventBridgeActionArrayOutputWithContext(ctx context.Context) RuleEventBridgeActionArrayOutput {
	return o
}

func (o RuleEventBridgeActionArrayOutput) Index(i pulumi.IntInput) RuleEventBridgeActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEventBridgeAction {
		return vs[0].([]RuleEventBridgeAction)[vs[1].(int)]
	}).(RuleEventBridgeActionOutput)
}

type RuleField struct {
	Id    string         `pulumi:"id"`
	Value RuleFieldValue `pulumi:"value"`
}

// RuleFieldInput is an input type that accepts RuleFieldArgs and RuleFieldOutput values.
// You can construct a concrete instance of `RuleFieldInput` via:
//
//	RuleFieldArgs{...}
type RuleFieldInput interface {
	pulumi.Input

	ToRuleFieldOutput() RuleFieldOutput
	ToRuleFieldOutputWithContext(context.Context) RuleFieldOutput
}

type RuleFieldArgs struct {
	Id    pulumi.StringInput  `pulumi:"id"`
	Value RuleFieldValueInput `pulumi:"value"`
}

func (RuleFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleField)(nil)).Elem()
}

func (i RuleFieldArgs) ToRuleFieldOutput() RuleFieldOutput {
	return i.ToRuleFieldOutputWithContext(context.Background())
}

func (i RuleFieldArgs) ToRuleFieldOutputWithContext(ctx context.Context) RuleFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleFieldOutput)
}

// RuleFieldArrayInput is an input type that accepts RuleFieldArray and RuleFieldArrayOutput values.
// You can construct a concrete instance of `RuleFieldArrayInput` via:
//
//	RuleFieldArray{ RuleFieldArgs{...} }
type RuleFieldArrayInput interface {
	pulumi.Input

	ToRuleFieldArrayOutput() RuleFieldArrayOutput
	ToRuleFieldArrayOutputWithContext(context.Context) RuleFieldArrayOutput
}

type RuleFieldArray []RuleFieldInput

func (RuleFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleField)(nil)).Elem()
}

func (i RuleFieldArray) ToRuleFieldArrayOutput() RuleFieldArrayOutput {
	return i.ToRuleFieldArrayOutputWithContext(context.Background())
}

func (i RuleFieldArray) ToRuleFieldArrayOutputWithContext(ctx context.Context) RuleFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleFieldArrayOutput)
}

type RuleFieldOutput struct{ *pulumi.OutputState }

func (RuleFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleField)(nil)).Elem()
}

func (o RuleFieldOutput) ToRuleFieldOutput() RuleFieldOutput {
	return o
}

func (o RuleFieldOutput) ToRuleFieldOutputWithContext(ctx context.Context) RuleFieldOutput {
	return o
}

func (o RuleFieldOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RuleField) string { return v.Id }).(pulumi.StringOutput)
}

func (o RuleFieldOutput) Value() RuleFieldValueOutput {
	return o.ApplyT(func(v RuleField) RuleFieldValue { return v.Value }).(RuleFieldValueOutput)
}

type RuleFieldArrayOutput struct{ *pulumi.OutputState }

func (RuleFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleField)(nil)).Elem()
}

func (o RuleFieldArrayOutput) ToRuleFieldArrayOutput() RuleFieldArrayOutput {
	return o
}

func (o RuleFieldArrayOutput) ToRuleFieldArrayOutputWithContext(ctx context.Context) RuleFieldArrayOutput {
	return o
}

func (o RuleFieldArrayOutput) Index(i pulumi.IntInput) RuleFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleField {
		return vs[0].([]RuleField)[vs[1].(int)]
	}).(RuleFieldOutput)
}

// Object for case field values.
type RuleFieldValue struct {
	BooleanValue *bool       `pulumi:"booleanValue"`
	DoubleValue  *float64    `pulumi:"doubleValue"`
	EmptyValue   interface{} `pulumi:"emptyValue"`
	StringValue  *string     `pulumi:"stringValue"`
}

// RuleFieldValueInput is an input type that accepts RuleFieldValueArgs and RuleFieldValueOutput values.
// You can construct a concrete instance of `RuleFieldValueInput` via:
//
//	RuleFieldValueArgs{...}
type RuleFieldValueInput interface {
	pulumi.Input

	ToRuleFieldValueOutput() RuleFieldValueOutput
	ToRuleFieldValueOutputWithContext(context.Context) RuleFieldValueOutput
}

// Object for case field values.
type RuleFieldValueArgs struct {
	BooleanValue pulumi.BoolPtrInput    `pulumi:"booleanValue"`
	DoubleValue  pulumi.Float64PtrInput `pulumi:"doubleValue"`
	EmptyValue   pulumi.Input           `pulumi:"emptyValue"`
	StringValue  pulumi.StringPtrInput  `pulumi:"stringValue"`
}

func (RuleFieldValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleFieldValue)(nil)).Elem()
}

func (i RuleFieldValueArgs) ToRuleFieldValueOutput() RuleFieldValueOutput {
	return i.ToRuleFieldValueOutputWithContext(context.Background())
}

func (i RuleFieldValueArgs) ToRuleFieldValueOutputWithContext(ctx context.Context) RuleFieldValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleFieldValueOutput)
}

// Object for case field values.
type RuleFieldValueOutput struct{ *pulumi.OutputState }

func (RuleFieldValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleFieldValue)(nil)).Elem()
}

func (o RuleFieldValueOutput) ToRuleFieldValueOutput() RuleFieldValueOutput {
	return o
}

func (o RuleFieldValueOutput) ToRuleFieldValueOutputWithContext(ctx context.Context) RuleFieldValueOutput {
	return o
}

func (o RuleFieldValueOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleFieldValue) *bool { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

func (o RuleFieldValueOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RuleFieldValue) *float64 { return v.DoubleValue }).(pulumi.Float64PtrOutput)
}

func (o RuleFieldValueOutput) EmptyValue() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleFieldValue) interface{} { return v.EmptyValue }).(pulumi.AnyOutput)
}

func (o RuleFieldValueOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleFieldValue) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

// The type of notification recipient.
type RuleNotificationRecipientType struct {
	// The Amazon Resource Name (ARN) of the user account.
	UserArns []string `pulumi:"userArns"`
	// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }. CON users with the specified tags will be notified.
	UserTags map[string]string `pulumi:"userTags"`
}

// RuleNotificationRecipientTypeInput is an input type that accepts RuleNotificationRecipientTypeArgs and RuleNotificationRecipientTypeOutput values.
// You can construct a concrete instance of `RuleNotificationRecipientTypeInput` via:
//
//	RuleNotificationRecipientTypeArgs{...}
type RuleNotificationRecipientTypeInput interface {
	pulumi.Input

	ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput
	ToRuleNotificationRecipientTypeOutputWithContext(context.Context) RuleNotificationRecipientTypeOutput
}

// The type of notification recipient.
type RuleNotificationRecipientTypeArgs struct {
	// The Amazon Resource Name (ARN) of the user account.
	UserArns pulumi.StringArrayInput `pulumi:"userArns"`
	// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }. CON users with the specified tags will be notified.
	UserTags pulumi.StringMapInput `pulumi:"userTags"`
}

func (RuleNotificationRecipientTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNotificationRecipientType)(nil)).Elem()
}

func (i RuleNotificationRecipientTypeArgs) ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput {
	return i.ToRuleNotificationRecipientTypeOutputWithContext(context.Background())
}

func (i RuleNotificationRecipientTypeArgs) ToRuleNotificationRecipientTypeOutputWithContext(ctx context.Context) RuleNotificationRecipientTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleNotificationRecipientTypeOutput)
}

// The type of notification recipient.
type RuleNotificationRecipientTypeOutput struct{ *pulumi.OutputState }

func (RuleNotificationRecipientTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNotificationRecipientType)(nil)).Elem()
}

func (o RuleNotificationRecipientTypeOutput) ToRuleNotificationRecipientTypeOutput() RuleNotificationRecipientTypeOutput {
	return o
}

func (o RuleNotificationRecipientTypeOutput) ToRuleNotificationRecipientTypeOutputWithContext(ctx context.Context) RuleNotificationRecipientTypeOutput {
	return o
}

// The Amazon Resource Name (ARN) of the user account.
func (o RuleNotificationRecipientTypeOutput) UserArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleNotificationRecipientType) []string { return v.UserArns }).(pulumi.StringArrayOutput)
}

// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }. CON users with the specified tags will be notified.
func (o RuleNotificationRecipientTypeOutput) UserTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RuleNotificationRecipientType) map[string]string { return v.UserTags }).(pulumi.StringMapOutput)
}

// Information about the reference when the “referenceType“ is “URL“. Otherwise, null. (Supports variable injection in the “Value“ field.)
type RuleReference struct {
	// The type of the reference. ``DATE`` must be of type Epoch timestamp.
	//  *Allowed values*: ``URL`` | ``ATTACHMENT`` | ``NUMBER`` | ``STRING`` | ``DATE`` | ``EMAIL``
	Type RuleReferenceType `pulumi:"type"`
	// A valid value for the reference. For example, for a URL reference, a formatted URL that is displayed to an agent in the Contact Control Panel (CCP).
	Value string `pulumi:"value"`
}

// RuleReferenceInput is an input type that accepts RuleReferenceArgs and RuleReferenceOutput values.
// You can construct a concrete instance of `RuleReferenceInput` via:
//
//	RuleReferenceArgs{...}
type RuleReferenceInput interface {
	pulumi.Input

	ToRuleReferenceOutput() RuleReferenceOutput
	ToRuleReferenceOutputWithContext(context.Context) RuleReferenceOutput
}

// Information about the reference when the “referenceType“ is “URL“. Otherwise, null. (Supports variable injection in the “Value“ field.)
type RuleReferenceArgs struct {
	// The type of the reference. ``DATE`` must be of type Epoch timestamp.
	//  *Allowed values*: ``URL`` | ``ATTACHMENT`` | ``NUMBER`` | ``STRING`` | ``DATE`` | ``EMAIL``
	Type RuleReferenceTypeInput `pulumi:"type"`
	// A valid value for the reference. For example, for a URL reference, a formatted URL that is displayed to an agent in the Contact Control Panel (CCP).
	Value pulumi.StringInput `pulumi:"value"`
}

func (RuleReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleReference)(nil)).Elem()
}

func (i RuleReferenceArgs) ToRuleReferenceOutput() RuleReferenceOutput {
	return i.ToRuleReferenceOutputWithContext(context.Background())
}

func (i RuleReferenceArgs) ToRuleReferenceOutputWithContext(ctx context.Context) RuleReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleReferenceOutput)
}

// RuleReferenceMapInput is an input type that accepts RuleReferenceMap and RuleReferenceMapOutput values.
// You can construct a concrete instance of `RuleReferenceMapInput` via:
//
//	RuleReferenceMap{ "key": RuleReferenceArgs{...} }
type RuleReferenceMapInput interface {
	pulumi.Input

	ToRuleReferenceMapOutput() RuleReferenceMapOutput
	ToRuleReferenceMapOutputWithContext(context.Context) RuleReferenceMapOutput
}

type RuleReferenceMap map[string]RuleReferenceInput

func (RuleReferenceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RuleReference)(nil)).Elem()
}

func (i RuleReferenceMap) ToRuleReferenceMapOutput() RuleReferenceMapOutput {
	return i.ToRuleReferenceMapOutputWithContext(context.Background())
}

func (i RuleReferenceMap) ToRuleReferenceMapOutputWithContext(ctx context.Context) RuleReferenceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleReferenceMapOutput)
}

// Information about the reference when the “referenceType“ is “URL“. Otherwise, null. (Supports variable injection in the “Value“ field.)
type RuleReferenceOutput struct{ *pulumi.OutputState }

func (RuleReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleReference)(nil)).Elem()
}

func (o RuleReferenceOutput) ToRuleReferenceOutput() RuleReferenceOutput {
	return o
}

func (o RuleReferenceOutput) ToRuleReferenceOutputWithContext(ctx context.Context) RuleReferenceOutput {
	return o
}

// The type of the reference. “DATE“ must be of type Epoch timestamp.
//
//	*Allowed values*: ``URL`` | ``ATTACHMENT`` | ``NUMBER`` | ``STRING`` | ``DATE`` | ``EMAIL``
func (o RuleReferenceOutput) Type() RuleReferenceTypeOutput {
	return o.ApplyT(func(v RuleReference) RuleReferenceType { return v.Type }).(RuleReferenceTypeOutput)
}

// A valid value for the reference. For example, for a URL reference, a formatted URL that is displayed to an agent in the Contact Control Panel (CCP).
func (o RuleReferenceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RuleReference) string { return v.Value }).(pulumi.StringOutput)
}

type RuleReferenceMapOutput struct{ *pulumi.OutputState }

func (RuleReferenceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RuleReference)(nil)).Elem()
}

func (o RuleReferenceMapOutput) ToRuleReferenceMapOutput() RuleReferenceMapOutput {
	return o
}

func (o RuleReferenceMapOutput) ToRuleReferenceMapOutputWithContext(ctx context.Context) RuleReferenceMapOutput {
	return o
}

func (o RuleReferenceMapOutput) MapIndex(k pulumi.StringInput) RuleReferenceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) RuleReference {
		return vs[0].(map[string]RuleReference)[vs[1].(string)]
	}).(RuleReferenceOutput)
}

// Information about the send notification action.
type RuleSendNotificationAction struct {
	// Notification content. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Content string `pulumi:"content"`
	// Content type format.
	//  *Allowed value*: ``PLAIN_TEXT``
	ContentType RuleSendNotificationActionContentType `pulumi:"contentType"`
	// Notification delivery method.
	//  *Allowed value*: ``EMAIL``
	DeliveryMethod RuleSendNotificationActionDeliveryMethod `pulumi:"deliveryMethod"`
	// Notification recipient.
	Recipient RuleNotificationRecipientType `pulumi:"recipient"`
	// The subject of the email if the delivery method is ``EMAIL``. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Subject *string `pulumi:"subject"`
}

// RuleSendNotificationActionInput is an input type that accepts RuleSendNotificationActionArgs and RuleSendNotificationActionOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionInput` via:
//
//	RuleSendNotificationActionArgs{...}
type RuleSendNotificationActionInput interface {
	pulumi.Input

	ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput
	ToRuleSendNotificationActionOutputWithContext(context.Context) RuleSendNotificationActionOutput
}

// Information about the send notification action.
type RuleSendNotificationActionArgs struct {
	// Notification content. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Content pulumi.StringInput `pulumi:"content"`
	// Content type format.
	//  *Allowed value*: ``PLAIN_TEXT``
	ContentType RuleSendNotificationActionContentTypeInput `pulumi:"contentType"`
	// Notification delivery method.
	//  *Allowed value*: ``EMAIL``
	DeliveryMethod RuleSendNotificationActionDeliveryMethodInput `pulumi:"deliveryMethod"`
	// Notification recipient.
	Recipient RuleNotificationRecipientTypeInput `pulumi:"recipient"`
	// The subject of the email if the delivery method is ``EMAIL``. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
}

func (RuleSendNotificationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationAction)(nil)).Elem()
}

func (i RuleSendNotificationActionArgs) ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput {
	return i.ToRuleSendNotificationActionOutputWithContext(context.Background())
}

func (i RuleSendNotificationActionArgs) ToRuleSendNotificationActionOutputWithContext(ctx context.Context) RuleSendNotificationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSendNotificationActionOutput)
}

// RuleSendNotificationActionArrayInput is an input type that accepts RuleSendNotificationActionArray and RuleSendNotificationActionArrayOutput values.
// You can construct a concrete instance of `RuleSendNotificationActionArrayInput` via:
//
//	RuleSendNotificationActionArray{ RuleSendNotificationActionArgs{...} }
type RuleSendNotificationActionArrayInput interface {
	pulumi.Input

	ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput
	ToRuleSendNotificationActionArrayOutputWithContext(context.Context) RuleSendNotificationActionArrayOutput
}

type RuleSendNotificationActionArray []RuleSendNotificationActionInput

func (RuleSendNotificationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSendNotificationAction)(nil)).Elem()
}

func (i RuleSendNotificationActionArray) ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput {
	return i.ToRuleSendNotificationActionArrayOutputWithContext(context.Background())
}

func (i RuleSendNotificationActionArray) ToRuleSendNotificationActionArrayOutputWithContext(ctx context.Context) RuleSendNotificationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSendNotificationActionArrayOutput)
}

// Information about the send notification action.
type RuleSendNotificationActionOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSendNotificationAction)(nil)).Elem()
}

func (o RuleSendNotificationActionOutput) ToRuleSendNotificationActionOutput() RuleSendNotificationActionOutput {
	return o
}

func (o RuleSendNotificationActionOutput) ToRuleSendNotificationActionOutputWithContext(ctx context.Context) RuleSendNotificationActionOutput {
	return o
}

// Notification content. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
func (o RuleSendNotificationActionOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) string { return v.Content }).(pulumi.StringOutput)
}

// Content type format.
//
//	*Allowed value*: ``PLAIN_TEXT``
func (o RuleSendNotificationActionOutput) ContentType() RuleSendNotificationActionContentTypeOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleSendNotificationActionContentType { return v.ContentType }).(RuleSendNotificationActionContentTypeOutput)
}

// Notification delivery method.
//
//	*Allowed value*: ``EMAIL``
func (o RuleSendNotificationActionOutput) DeliveryMethod() RuleSendNotificationActionDeliveryMethodOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleSendNotificationActionDeliveryMethod { return v.DeliveryMethod }).(RuleSendNotificationActionDeliveryMethodOutput)
}

// Notification recipient.
func (o RuleSendNotificationActionOutput) Recipient() RuleNotificationRecipientTypeOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) RuleNotificationRecipientType { return v.Recipient }).(RuleNotificationRecipientTypeOutput)
}

// The subject of the email if the delivery method is “EMAIL“. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
func (o RuleSendNotificationActionOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSendNotificationAction) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type RuleSendNotificationActionArrayOutput struct{ *pulumi.OutputState }

func (RuleSendNotificationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSendNotificationAction)(nil)).Elem()
}

func (o RuleSendNotificationActionArrayOutput) ToRuleSendNotificationActionArrayOutput() RuleSendNotificationActionArrayOutput {
	return o
}

func (o RuleSendNotificationActionArrayOutput) ToRuleSendNotificationActionArrayOutputWithContext(ctx context.Context) RuleSendNotificationActionArrayOutput {
	return o
}

func (o RuleSendNotificationActionArrayOutput) Index(i pulumi.IntInput) RuleSendNotificationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleSendNotificationAction {
		return vs[0].([]RuleSendNotificationAction)[vs[1].(int)]
	}).(RuleSendNotificationActionOutput)
}

type RuleSubmitAutoEvaluationAction struct {
	EvaluationFormArn string `pulumi:"evaluationFormArn"`
}

// RuleSubmitAutoEvaluationActionInput is an input type that accepts RuleSubmitAutoEvaluationActionArgs and RuleSubmitAutoEvaluationActionOutput values.
// You can construct a concrete instance of `RuleSubmitAutoEvaluationActionInput` via:
//
//	RuleSubmitAutoEvaluationActionArgs{...}
type RuleSubmitAutoEvaluationActionInput interface {
	pulumi.Input

	ToRuleSubmitAutoEvaluationActionOutput() RuleSubmitAutoEvaluationActionOutput
	ToRuleSubmitAutoEvaluationActionOutputWithContext(context.Context) RuleSubmitAutoEvaluationActionOutput
}

type RuleSubmitAutoEvaluationActionArgs struct {
	EvaluationFormArn pulumi.StringInput `pulumi:"evaluationFormArn"`
}

func (RuleSubmitAutoEvaluationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSubmitAutoEvaluationAction)(nil)).Elem()
}

func (i RuleSubmitAutoEvaluationActionArgs) ToRuleSubmitAutoEvaluationActionOutput() RuleSubmitAutoEvaluationActionOutput {
	return i.ToRuleSubmitAutoEvaluationActionOutputWithContext(context.Background())
}

func (i RuleSubmitAutoEvaluationActionArgs) ToRuleSubmitAutoEvaluationActionOutputWithContext(ctx context.Context) RuleSubmitAutoEvaluationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSubmitAutoEvaluationActionOutput)
}

// RuleSubmitAutoEvaluationActionArrayInput is an input type that accepts RuleSubmitAutoEvaluationActionArray and RuleSubmitAutoEvaluationActionArrayOutput values.
// You can construct a concrete instance of `RuleSubmitAutoEvaluationActionArrayInput` via:
//
//	RuleSubmitAutoEvaluationActionArray{ RuleSubmitAutoEvaluationActionArgs{...} }
type RuleSubmitAutoEvaluationActionArrayInput interface {
	pulumi.Input

	ToRuleSubmitAutoEvaluationActionArrayOutput() RuleSubmitAutoEvaluationActionArrayOutput
	ToRuleSubmitAutoEvaluationActionArrayOutputWithContext(context.Context) RuleSubmitAutoEvaluationActionArrayOutput
}

type RuleSubmitAutoEvaluationActionArray []RuleSubmitAutoEvaluationActionInput

func (RuleSubmitAutoEvaluationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSubmitAutoEvaluationAction)(nil)).Elem()
}

func (i RuleSubmitAutoEvaluationActionArray) ToRuleSubmitAutoEvaluationActionArrayOutput() RuleSubmitAutoEvaluationActionArrayOutput {
	return i.ToRuleSubmitAutoEvaluationActionArrayOutputWithContext(context.Background())
}

func (i RuleSubmitAutoEvaluationActionArray) ToRuleSubmitAutoEvaluationActionArrayOutputWithContext(ctx context.Context) RuleSubmitAutoEvaluationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSubmitAutoEvaluationActionArrayOutput)
}

type RuleSubmitAutoEvaluationActionOutput struct{ *pulumi.OutputState }

func (RuleSubmitAutoEvaluationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSubmitAutoEvaluationAction)(nil)).Elem()
}

func (o RuleSubmitAutoEvaluationActionOutput) ToRuleSubmitAutoEvaluationActionOutput() RuleSubmitAutoEvaluationActionOutput {
	return o
}

func (o RuleSubmitAutoEvaluationActionOutput) ToRuleSubmitAutoEvaluationActionOutputWithContext(ctx context.Context) RuleSubmitAutoEvaluationActionOutput {
	return o
}

func (o RuleSubmitAutoEvaluationActionOutput) EvaluationFormArn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSubmitAutoEvaluationAction) string { return v.EvaluationFormArn }).(pulumi.StringOutput)
}

type RuleSubmitAutoEvaluationActionArrayOutput struct{ *pulumi.OutputState }

func (RuleSubmitAutoEvaluationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSubmitAutoEvaluationAction)(nil)).Elem()
}

func (o RuleSubmitAutoEvaluationActionArrayOutput) ToRuleSubmitAutoEvaluationActionArrayOutput() RuleSubmitAutoEvaluationActionArrayOutput {
	return o
}

func (o RuleSubmitAutoEvaluationActionArrayOutput) ToRuleSubmitAutoEvaluationActionArrayOutputWithContext(ctx context.Context) RuleSubmitAutoEvaluationActionArrayOutput {
	return o
}

func (o RuleSubmitAutoEvaluationActionArrayOutput) Index(i pulumi.IntInput) RuleSubmitAutoEvaluationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleSubmitAutoEvaluationAction {
		return vs[0].([]RuleSubmitAutoEvaluationAction)[vs[1].(int)]
	}).(RuleSubmitAutoEvaluationActionOutput)
}

// A key-value pair to associate with a resource.
type RuleTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -
	Value string `pulumi:"value"`
}

// Information about the task action. This field is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
type RuleTaskAction struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn string `pulumi:"contactFlowArn"`
	// The description. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Description *string `pulumi:"description"`
	// The name. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Name string `pulumi:"name"`
	// Information about the reference when the ``referenceType`` is ``URL``. Otherwise, null. ``URL`` is the only accepted type. (Supports variable injection in the ``Value`` field.)
	References map[string]RuleReference `pulumi:"references"`
}

// RuleTaskActionInput is an input type that accepts RuleTaskActionArgs and RuleTaskActionOutput values.
// You can construct a concrete instance of `RuleTaskActionInput` via:
//
//	RuleTaskActionArgs{...}
type RuleTaskActionInput interface {
	pulumi.Input

	ToRuleTaskActionOutput() RuleTaskActionOutput
	ToRuleTaskActionOutputWithContext(context.Context) RuleTaskActionOutput
}

// Information about the task action. This field is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
type RuleTaskActionArgs struct {
	// The Amazon Resource Name (ARN) of the flow.
	ContactFlowArn pulumi.StringInput `pulumi:"contactFlowArn"`
	// The description. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
	Name pulumi.StringInput `pulumi:"name"`
	// Information about the reference when the ``referenceType`` is ``URL``. Otherwise, null. ``URL`` is the only accepted type. (Supports variable injection in the ``Value`` field.)
	References RuleReferenceMapInput `pulumi:"references"`
}

func (RuleTaskActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTaskAction)(nil)).Elem()
}

func (i RuleTaskActionArgs) ToRuleTaskActionOutput() RuleTaskActionOutput {
	return i.ToRuleTaskActionOutputWithContext(context.Background())
}

func (i RuleTaskActionArgs) ToRuleTaskActionOutputWithContext(ctx context.Context) RuleTaskActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTaskActionOutput)
}

// RuleTaskActionArrayInput is an input type that accepts RuleTaskActionArray and RuleTaskActionArrayOutput values.
// You can construct a concrete instance of `RuleTaskActionArrayInput` via:
//
//	RuleTaskActionArray{ RuleTaskActionArgs{...} }
type RuleTaskActionArrayInput interface {
	pulumi.Input

	ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput
	ToRuleTaskActionArrayOutputWithContext(context.Context) RuleTaskActionArrayOutput
}

type RuleTaskActionArray []RuleTaskActionInput

func (RuleTaskActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTaskAction)(nil)).Elem()
}

func (i RuleTaskActionArray) ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput {
	return i.ToRuleTaskActionArrayOutputWithContext(context.Background())
}

func (i RuleTaskActionArray) ToRuleTaskActionArrayOutputWithContext(ctx context.Context) RuleTaskActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTaskActionArrayOutput)
}

// Information about the task action. This field is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
type RuleTaskActionOutput struct{ *pulumi.OutputState }

func (RuleTaskActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTaskAction)(nil)).Elem()
}

func (o RuleTaskActionOutput) ToRuleTaskActionOutput() RuleTaskActionOutput {
	return o
}

func (o RuleTaskActionOutput) ToRuleTaskActionOutputWithContext(ctx context.Context) RuleTaskActionOutput {
	return o
}

// The Amazon Resource Name (ARN) of the flow.
func (o RuleTaskActionOutput) ContactFlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTaskAction) string { return v.ContactFlowArn }).(pulumi.StringOutput)
}

// The description. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
func (o RuleTaskActionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTaskAction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
func (o RuleTaskActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTaskAction) string { return v.Name }).(pulumi.StringOutput)
}

// Information about the reference when the “referenceType“ is “URL“. Otherwise, null. “URL“ is the only accepted type. (Supports variable injection in the “Value“ field.)
func (o RuleTaskActionOutput) References() RuleReferenceMapOutput {
	return o.ApplyT(func(v RuleTaskAction) map[string]RuleReference { return v.References }).(RuleReferenceMapOutput)
}

type RuleTaskActionArrayOutput struct{ *pulumi.OutputState }

func (RuleTaskActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTaskAction)(nil)).Elem()
}

func (o RuleTaskActionArrayOutput) ToRuleTaskActionArrayOutput() RuleTaskActionArrayOutput {
	return o
}

func (o RuleTaskActionArrayOutput) ToRuleTaskActionArrayOutputWithContext(ctx context.Context) RuleTaskActionArrayOutput {
	return o
}

func (o RuleTaskActionArrayOutput) Index(i pulumi.IntInput) RuleTaskActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleTaskAction {
		return vs[0].([]RuleTaskAction)[vs[1].(int)]
	}).(RuleTaskActionOutput)
}

// The name of the event source.
type RuleTriggerEventSource struct {
	// The name of the event source.
	EventSourceName RuleTriggerEventSourceEventSourceName `pulumi:"eventSourceName"`
	// The Amazon Resource Name (ARN) of the integration association. ``IntegrationAssociationArn`` is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``
	IntegrationAssociationArn *string `pulumi:"integrationAssociationArn"`
}

// RuleTriggerEventSourceInput is an input type that accepts RuleTriggerEventSourceArgs and RuleTriggerEventSourceOutput values.
// You can construct a concrete instance of `RuleTriggerEventSourceInput` via:
//
//	RuleTriggerEventSourceArgs{...}
type RuleTriggerEventSourceInput interface {
	pulumi.Input

	ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput
	ToRuleTriggerEventSourceOutputWithContext(context.Context) RuleTriggerEventSourceOutput
}

// The name of the event source.
type RuleTriggerEventSourceArgs struct {
	// The name of the event source.
	EventSourceName RuleTriggerEventSourceEventSourceNameInput `pulumi:"eventSourceName"`
	// The Amazon Resource Name (ARN) of the integration association. ``IntegrationAssociationArn`` is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``
	IntegrationAssociationArn pulumi.StringPtrInput `pulumi:"integrationAssociationArn"`
}

func (RuleTriggerEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSource)(nil)).Elem()
}

func (i RuleTriggerEventSourceArgs) ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput {
	return i.ToRuleTriggerEventSourceOutputWithContext(context.Background())
}

func (i RuleTriggerEventSourceArgs) ToRuleTriggerEventSourceOutputWithContext(ctx context.Context) RuleTriggerEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTriggerEventSourceOutput)
}

// The name of the event source.
type RuleTriggerEventSourceOutput struct{ *pulumi.OutputState }

func (RuleTriggerEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTriggerEventSource)(nil)).Elem()
}

func (o RuleTriggerEventSourceOutput) ToRuleTriggerEventSourceOutput() RuleTriggerEventSourceOutput {
	return o
}

func (o RuleTriggerEventSourceOutput) ToRuleTriggerEventSourceOutputWithContext(ctx context.Context) RuleTriggerEventSourceOutput {
	return o
}

// The name of the event source.
func (o RuleTriggerEventSourceOutput) EventSourceName() RuleTriggerEventSourceEventSourceNameOutput {
	return o.ApplyT(func(v RuleTriggerEventSource) RuleTriggerEventSourceEventSourceName { return v.EventSourceName }).(RuleTriggerEventSourceEventSourceNameOutput)
}

// The Amazon Resource Name (ARN) of the integration association. “IntegrationAssociationArn“ is required if “TriggerEventSource“ is one of the following values: “OnZendeskTicketCreate“ | “OnZendeskTicketStatusUpdate“ | “OnSalesforceCaseCreate“
func (o RuleTriggerEventSourceOutput) IntegrationAssociationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTriggerEventSource) *string { return v.IntegrationAssociationArn }).(pulumi.StringPtrOutput)
}

type RuleUpdateCaseAction struct {
	Fields []RuleField `pulumi:"fields"`
}

// RuleUpdateCaseActionInput is an input type that accepts RuleUpdateCaseActionArgs and RuleUpdateCaseActionOutput values.
// You can construct a concrete instance of `RuleUpdateCaseActionInput` via:
//
//	RuleUpdateCaseActionArgs{...}
type RuleUpdateCaseActionInput interface {
	pulumi.Input

	ToRuleUpdateCaseActionOutput() RuleUpdateCaseActionOutput
	ToRuleUpdateCaseActionOutputWithContext(context.Context) RuleUpdateCaseActionOutput
}

type RuleUpdateCaseActionArgs struct {
	Fields RuleFieldArrayInput `pulumi:"fields"`
}

func (RuleUpdateCaseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleUpdateCaseAction)(nil)).Elem()
}

func (i RuleUpdateCaseActionArgs) ToRuleUpdateCaseActionOutput() RuleUpdateCaseActionOutput {
	return i.ToRuleUpdateCaseActionOutputWithContext(context.Background())
}

func (i RuleUpdateCaseActionArgs) ToRuleUpdateCaseActionOutputWithContext(ctx context.Context) RuleUpdateCaseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleUpdateCaseActionOutput)
}

// RuleUpdateCaseActionArrayInput is an input type that accepts RuleUpdateCaseActionArray and RuleUpdateCaseActionArrayOutput values.
// You can construct a concrete instance of `RuleUpdateCaseActionArrayInput` via:
//
//	RuleUpdateCaseActionArray{ RuleUpdateCaseActionArgs{...} }
type RuleUpdateCaseActionArrayInput interface {
	pulumi.Input

	ToRuleUpdateCaseActionArrayOutput() RuleUpdateCaseActionArrayOutput
	ToRuleUpdateCaseActionArrayOutputWithContext(context.Context) RuleUpdateCaseActionArrayOutput
}

type RuleUpdateCaseActionArray []RuleUpdateCaseActionInput

func (RuleUpdateCaseActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleUpdateCaseAction)(nil)).Elem()
}

func (i RuleUpdateCaseActionArray) ToRuleUpdateCaseActionArrayOutput() RuleUpdateCaseActionArrayOutput {
	return i.ToRuleUpdateCaseActionArrayOutputWithContext(context.Background())
}

func (i RuleUpdateCaseActionArray) ToRuleUpdateCaseActionArrayOutputWithContext(ctx context.Context) RuleUpdateCaseActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleUpdateCaseActionArrayOutput)
}

type RuleUpdateCaseActionOutput struct{ *pulumi.OutputState }

func (RuleUpdateCaseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleUpdateCaseAction)(nil)).Elem()
}

func (o RuleUpdateCaseActionOutput) ToRuleUpdateCaseActionOutput() RuleUpdateCaseActionOutput {
	return o
}

func (o RuleUpdateCaseActionOutput) ToRuleUpdateCaseActionOutputWithContext(ctx context.Context) RuleUpdateCaseActionOutput {
	return o
}

func (o RuleUpdateCaseActionOutput) Fields() RuleFieldArrayOutput {
	return o.ApplyT(func(v RuleUpdateCaseAction) []RuleField { return v.Fields }).(RuleFieldArrayOutput)
}

type RuleUpdateCaseActionArrayOutput struct{ *pulumi.OutputState }

func (RuleUpdateCaseActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleUpdateCaseAction)(nil)).Elem()
}

func (o RuleUpdateCaseActionArrayOutput) ToRuleUpdateCaseActionArrayOutput() RuleUpdateCaseActionArrayOutput {
	return o
}

func (o RuleUpdateCaseActionArrayOutput) ToRuleUpdateCaseActionArrayOutputWithContext(ctx context.Context) RuleUpdateCaseActionArrayOutput {
	return o
}

func (o RuleUpdateCaseActionArrayOutput) Index(i pulumi.IntInput) RuleUpdateCaseActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleUpdateCaseAction {
		return vs[0].([]RuleUpdateCaseAction)[vs[1].(int)]
	}).(RuleUpdateCaseActionOutput)
}

// A third-party application's metadata.
type SecurityProfileApplication struct {
	// The permissions that the agent is granted on the application
	ApplicationPermissions []string `pulumi:"applicationPermissions"`
	// Namespace of the application that you want to give access to.
	Namespace string `pulumi:"namespace"`
}

// SecurityProfileApplicationInput is an input type that accepts SecurityProfileApplicationArgs and SecurityProfileApplicationOutput values.
// You can construct a concrete instance of `SecurityProfileApplicationInput` via:
//
//	SecurityProfileApplicationArgs{...}
type SecurityProfileApplicationInput interface {
	pulumi.Input

	ToSecurityProfileApplicationOutput() SecurityProfileApplicationOutput
	ToSecurityProfileApplicationOutputWithContext(context.Context) SecurityProfileApplicationOutput
}

// A third-party application's metadata.
type SecurityProfileApplicationArgs struct {
	// The permissions that the agent is granted on the application
	ApplicationPermissions pulumi.StringArrayInput `pulumi:"applicationPermissions"`
	// Namespace of the application that you want to give access to.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (SecurityProfileApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileApplication)(nil)).Elem()
}

func (i SecurityProfileApplicationArgs) ToSecurityProfileApplicationOutput() SecurityProfileApplicationOutput {
	return i.ToSecurityProfileApplicationOutputWithContext(context.Background())
}

func (i SecurityProfileApplicationArgs) ToSecurityProfileApplicationOutputWithContext(ctx context.Context) SecurityProfileApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileApplicationOutput)
}

// SecurityProfileApplicationArrayInput is an input type that accepts SecurityProfileApplicationArray and SecurityProfileApplicationArrayOutput values.
// You can construct a concrete instance of `SecurityProfileApplicationArrayInput` via:
//
//	SecurityProfileApplicationArray{ SecurityProfileApplicationArgs{...} }
type SecurityProfileApplicationArrayInput interface {
	pulumi.Input

	ToSecurityProfileApplicationArrayOutput() SecurityProfileApplicationArrayOutput
	ToSecurityProfileApplicationArrayOutputWithContext(context.Context) SecurityProfileApplicationArrayOutput
}

type SecurityProfileApplicationArray []SecurityProfileApplicationInput

func (SecurityProfileApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileApplication)(nil)).Elem()
}

func (i SecurityProfileApplicationArray) ToSecurityProfileApplicationArrayOutput() SecurityProfileApplicationArrayOutput {
	return i.ToSecurityProfileApplicationArrayOutputWithContext(context.Background())
}

func (i SecurityProfileApplicationArray) ToSecurityProfileApplicationArrayOutputWithContext(ctx context.Context) SecurityProfileApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileApplicationArrayOutput)
}

// A third-party application's metadata.
type SecurityProfileApplicationOutput struct{ *pulumi.OutputState }

func (SecurityProfileApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileApplication)(nil)).Elem()
}

func (o SecurityProfileApplicationOutput) ToSecurityProfileApplicationOutput() SecurityProfileApplicationOutput {
	return o
}

func (o SecurityProfileApplicationOutput) ToSecurityProfileApplicationOutputWithContext(ctx context.Context) SecurityProfileApplicationOutput {
	return o
}

// The permissions that the agent is granted on the application
func (o SecurityProfileApplicationOutput) ApplicationPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityProfileApplication) []string { return v.ApplicationPermissions }).(pulumi.StringArrayOutput)
}

// Namespace of the application that you want to give access to.
func (o SecurityProfileApplicationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileApplication) string { return v.Namespace }).(pulumi.StringOutput)
}

type SecurityProfileApplicationArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileApplication)(nil)).Elem()
}

func (o SecurityProfileApplicationArrayOutput) ToSecurityProfileApplicationArrayOutput() SecurityProfileApplicationArrayOutput {
	return o
}

func (o SecurityProfileApplicationArrayOutput) ToSecurityProfileApplicationArrayOutputWithContext(ctx context.Context) SecurityProfileApplicationArrayOutput {
	return o
}

func (o SecurityProfileApplicationArrayOutput) Index(i pulumi.IntInput) SecurityProfileApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileApplication {
		return vs[0].([]SecurityProfileApplication)[vs[1].(int)]
	}).(SecurityProfileApplicationOutput)
}

// A key-value pair to associate with a resource.
type SecurityProfileTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// SecurityProfileTagInput is an input type that accepts SecurityProfileTagArgs and SecurityProfileTagOutput values.
// You can construct a concrete instance of `SecurityProfileTagInput` via:
//
//	SecurityProfileTagArgs{...}
type SecurityProfileTagInput interface {
	pulumi.Input

	ToSecurityProfileTagOutput() SecurityProfileTagOutput
	ToSecurityProfileTagOutputWithContext(context.Context) SecurityProfileTagOutput
}

// A key-value pair to associate with a resource.
type SecurityProfileTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityProfileTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileTag)(nil)).Elem()
}

func (i SecurityProfileTagArgs) ToSecurityProfileTagOutput() SecurityProfileTagOutput {
	return i.ToSecurityProfileTagOutputWithContext(context.Background())
}

func (i SecurityProfileTagArgs) ToSecurityProfileTagOutputWithContext(ctx context.Context) SecurityProfileTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileTagOutput)
}

// SecurityProfileTagArrayInput is an input type that accepts SecurityProfileTagArray and SecurityProfileTagArrayOutput values.
// You can construct a concrete instance of `SecurityProfileTagArrayInput` via:
//
//	SecurityProfileTagArray{ SecurityProfileTagArgs{...} }
type SecurityProfileTagArrayInput interface {
	pulumi.Input

	ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput
	ToSecurityProfileTagArrayOutputWithContext(context.Context) SecurityProfileTagArrayOutput
}

type SecurityProfileTagArray []SecurityProfileTagInput

func (SecurityProfileTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileTag)(nil)).Elem()
}

func (i SecurityProfileTagArray) ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput {
	return i.ToSecurityProfileTagArrayOutputWithContext(context.Background())
}

func (i SecurityProfileTagArray) ToSecurityProfileTagArrayOutputWithContext(ctx context.Context) SecurityProfileTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityProfileTagArrayOutput)
}

// A key-value pair to associate with a resource.
type SecurityProfileTagOutput struct{ *pulumi.OutputState }

func (SecurityProfileTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfileTag)(nil)).Elem()
}

func (o SecurityProfileTagOutput) ToSecurityProfileTagOutput() SecurityProfileTagOutput {
	return o
}

func (o SecurityProfileTagOutput) ToSecurityProfileTagOutputWithContext(ctx context.Context) SecurityProfileTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SecurityProfileTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SecurityProfileTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityProfileTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityProfileTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityProfileTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityProfileTag)(nil)).Elem()
}

func (o SecurityProfileTagArrayOutput) ToSecurityProfileTagArrayOutput() SecurityProfileTagArrayOutput {
	return o
}

func (o SecurityProfileTagArrayOutput) ToSecurityProfileTagArrayOutputWithContext(ctx context.Context) SecurityProfileTagArrayOutput {
	return o
}

func (o SecurityProfileTagArrayOutput) Index(i pulumi.IntInput) SecurityProfileTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityProfileTag {
		return vs[0].([]SecurityProfileTag)[vs[1].(int)]
	}).(SecurityProfileTagOutput)
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValue struct {
	// Default value for the field.
	DefaultValue string `pulumi:"defaultValue"`
	// Identifier of a field.
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateDefaultFieldValueInput is an input type that accepts TaskTemplateDefaultFieldValueArgs and TaskTemplateDefaultFieldValueOutput values.
// You can construct a concrete instance of `TaskTemplateDefaultFieldValueInput` via:
//
//	TaskTemplateDefaultFieldValueArgs{...}
type TaskTemplateDefaultFieldValueInput interface {
	pulumi.Input

	ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput
	ToTaskTemplateDefaultFieldValueOutputWithContext(context.Context) TaskTemplateDefaultFieldValueOutput
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValueArgs struct {
	// Default value for the field.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Identifier of a field.
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateDefaultFieldValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (i TaskTemplateDefaultFieldValueArgs) ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput {
	return i.ToTaskTemplateDefaultFieldValueOutputWithContext(context.Background())
}

func (i TaskTemplateDefaultFieldValueArgs) ToTaskTemplateDefaultFieldValueOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateDefaultFieldValueOutput)
}

// TaskTemplateDefaultFieldValueArrayInput is an input type that accepts TaskTemplateDefaultFieldValueArray and TaskTemplateDefaultFieldValueArrayOutput values.
// You can construct a concrete instance of `TaskTemplateDefaultFieldValueArrayInput` via:
//
//	TaskTemplateDefaultFieldValueArray{ TaskTemplateDefaultFieldValueArgs{...} }
type TaskTemplateDefaultFieldValueArrayInput interface {
	pulumi.Input

	ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput
	ToTaskTemplateDefaultFieldValueArrayOutputWithContext(context.Context) TaskTemplateDefaultFieldValueArrayOutput
}

type TaskTemplateDefaultFieldValueArray []TaskTemplateDefaultFieldValueInput

func (TaskTemplateDefaultFieldValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (i TaskTemplateDefaultFieldValueArray) ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput {
	return i.ToTaskTemplateDefaultFieldValueArrayOutputWithContext(context.Background())
}

func (i TaskTemplateDefaultFieldValueArray) ToTaskTemplateDefaultFieldValueArrayOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateDefaultFieldValueArrayOutput)
}

// the default value for the task template's field
type TaskTemplateDefaultFieldValueOutput struct{ *pulumi.OutputState }

func (TaskTemplateDefaultFieldValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (o TaskTemplateDefaultFieldValueOutput) ToTaskTemplateDefaultFieldValueOutput() TaskTemplateDefaultFieldValueOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueOutput) ToTaskTemplateDefaultFieldValueOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueOutput {
	return o
}

// Default value for the field.
func (o TaskTemplateDefaultFieldValueOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateDefaultFieldValue) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Identifier of a field.
func (o TaskTemplateDefaultFieldValueOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateDefaultFieldValue) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateDefaultFieldValueArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateDefaultFieldValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateDefaultFieldValue)(nil)).Elem()
}

func (o TaskTemplateDefaultFieldValueArrayOutput) ToTaskTemplateDefaultFieldValueArrayOutput() TaskTemplateDefaultFieldValueArrayOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueArrayOutput) ToTaskTemplateDefaultFieldValueArrayOutputWithContext(ctx context.Context) TaskTemplateDefaultFieldValueArrayOutput {
	return o
}

func (o TaskTemplateDefaultFieldValueArrayOutput) Index(i pulumi.IntInput) TaskTemplateDefaultFieldValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateDefaultFieldValue {
		return vs[0].([]TaskTemplateDefaultFieldValue)[vs[1].(int)]
	}).(TaskTemplateDefaultFieldValueOutput)
}

// A task template field object.
type TaskTemplateField struct {
	// The description of the task template's field
	Description *string `pulumi:"description"`
	// The unique identifier for the field.
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
	// list of field options to be used with single select
	SingleSelectOptions []string `pulumi:"singleSelectOptions"`
	// Indicates the type of field. Following are the valid field types: `NAME` `DESCRIPTION` | `SCHEDULED_TIME` | `QUICK_CONNECT` | `URL` | `NUMBER` | `TEXT` | `TEXT_AREA` | `DATE_TIME` | `BOOLEAN` | `SINGLE_SELECT` | `EMAIL`
	Type TaskTemplateFieldType `pulumi:"type"`
}

// TaskTemplateFieldInput is an input type that accepts TaskTemplateFieldArgs and TaskTemplateFieldOutput values.
// You can construct a concrete instance of `TaskTemplateFieldInput` via:
//
//	TaskTemplateFieldArgs{...}
type TaskTemplateFieldInput interface {
	pulumi.Input

	ToTaskTemplateFieldOutput() TaskTemplateFieldOutput
	ToTaskTemplateFieldOutputWithContext(context.Context) TaskTemplateFieldOutput
}

// A task template field object.
type TaskTemplateFieldArgs struct {
	// The description of the task template's field
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The unique identifier for the field.
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
	// list of field options to be used with single select
	SingleSelectOptions pulumi.StringArrayInput `pulumi:"singleSelectOptions"`
	// Indicates the type of field. Following are the valid field types: `NAME` `DESCRIPTION` | `SCHEDULED_TIME` | `QUICK_CONNECT` | `URL` | `NUMBER` | `TEXT` | `TEXT_AREA` | `DATE_TIME` | `BOOLEAN` | `SINGLE_SELECT` | `EMAIL`
	Type TaskTemplateFieldTypeInput `pulumi:"type"`
}

func (TaskTemplateFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateField)(nil)).Elem()
}

func (i TaskTemplateFieldArgs) ToTaskTemplateFieldOutput() TaskTemplateFieldOutput {
	return i.ToTaskTemplateFieldOutputWithContext(context.Background())
}

func (i TaskTemplateFieldArgs) ToTaskTemplateFieldOutputWithContext(ctx context.Context) TaskTemplateFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldOutput)
}

// TaskTemplateFieldArrayInput is an input type that accepts TaskTemplateFieldArray and TaskTemplateFieldArrayOutput values.
// You can construct a concrete instance of `TaskTemplateFieldArrayInput` via:
//
//	TaskTemplateFieldArray{ TaskTemplateFieldArgs{...} }
type TaskTemplateFieldArrayInput interface {
	pulumi.Input

	ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput
	ToTaskTemplateFieldArrayOutputWithContext(context.Context) TaskTemplateFieldArrayOutput
}

type TaskTemplateFieldArray []TaskTemplateFieldInput

func (TaskTemplateFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateField)(nil)).Elem()
}

func (i TaskTemplateFieldArray) ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput {
	return i.ToTaskTemplateFieldArrayOutputWithContext(context.Background())
}

func (i TaskTemplateFieldArray) ToTaskTemplateFieldArrayOutputWithContext(ctx context.Context) TaskTemplateFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldArrayOutput)
}

// A task template field object.
type TaskTemplateFieldOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateField)(nil)).Elem()
}

func (o TaskTemplateFieldOutput) ToTaskTemplateFieldOutput() TaskTemplateFieldOutput {
	return o
}

func (o TaskTemplateFieldOutput) ToTaskTemplateFieldOutputWithContext(ctx context.Context) TaskTemplateFieldOutput {
	return o
}

// The description of the task template's field
func (o TaskTemplateFieldOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskTemplateField) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique identifier for the field.
func (o TaskTemplateFieldOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateField) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

// list of field options to be used with single select
func (o TaskTemplateFieldOutput) SingleSelectOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TaskTemplateField) []string { return v.SingleSelectOptions }).(pulumi.StringArrayOutput)
}

// Indicates the type of field. Following are the valid field types: `NAME` `DESCRIPTION` | `SCHEDULED_TIME` | `QUICK_CONNECT` | `URL` | `NUMBER` | `TEXT` | `TEXT_AREA` | `DATE_TIME` | `BOOLEAN` | `SINGLE_SELECT` | `EMAIL`
func (o TaskTemplateFieldOutput) Type() TaskTemplateFieldTypeOutput {
	return o.ApplyT(func(v TaskTemplateField) TaskTemplateFieldType { return v.Type }).(TaskTemplateFieldTypeOutput)
}

type TaskTemplateFieldArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateField)(nil)).Elem()
}

func (o TaskTemplateFieldArrayOutput) ToTaskTemplateFieldArrayOutput() TaskTemplateFieldArrayOutput {
	return o
}

func (o TaskTemplateFieldArrayOutput) ToTaskTemplateFieldArrayOutputWithContext(ctx context.Context) TaskTemplateFieldArrayOutput {
	return o
}

func (o TaskTemplateFieldArrayOutput) Index(i pulumi.IntInput) TaskTemplateFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateField {
		return vs[0].([]TaskTemplateField)[vs[1].(int)]
	}).(TaskTemplateFieldOutput)
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifier struct {
	// The name of the task template field
	Name string `pulumi:"name"`
}

// TaskTemplateFieldIdentifierInput is an input type that accepts TaskTemplateFieldIdentifierArgs and TaskTemplateFieldIdentifierOutput values.
// You can construct a concrete instance of `TaskTemplateFieldIdentifierInput` via:
//
//	TaskTemplateFieldIdentifierArgs{...}
type TaskTemplateFieldIdentifierInput interface {
	pulumi.Input

	ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput
	ToTaskTemplateFieldIdentifierOutputWithContext(context.Context) TaskTemplateFieldIdentifierOutput
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifierArgs struct {
	// The name of the task template field
	Name pulumi.StringInput `pulumi:"name"`
}

func (TaskTemplateFieldIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldIdentifier)(nil)).Elem()
}

func (i TaskTemplateFieldIdentifierArgs) ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput {
	return i.ToTaskTemplateFieldIdentifierOutputWithContext(context.Background())
}

func (i TaskTemplateFieldIdentifierArgs) ToTaskTemplateFieldIdentifierOutputWithContext(ctx context.Context) TaskTemplateFieldIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateFieldIdentifierOutput)
}

// the identifier (name) for the task template field
type TaskTemplateFieldIdentifierOutput struct{ *pulumi.OutputState }

func (TaskTemplateFieldIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateFieldIdentifier)(nil)).Elem()
}

func (o TaskTemplateFieldIdentifierOutput) ToTaskTemplateFieldIdentifierOutput() TaskTemplateFieldIdentifierOutput {
	return o
}

func (o TaskTemplateFieldIdentifierOutput) ToTaskTemplateFieldIdentifierOutputWithContext(ctx context.Context) TaskTemplateFieldIdentifierOutput {
	return o
}

// The name of the task template field
func (o TaskTemplateFieldIdentifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskTemplateFieldIdentifier) string { return v.Name }).(pulumi.StringOutput)
}

// Invisible field info
type TaskTemplateInvisibleFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateInvisibleFieldInfoInput is an input type that accepts TaskTemplateInvisibleFieldInfoArgs and TaskTemplateInvisibleFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateInvisibleFieldInfoInput` via:
//
//	TaskTemplateInvisibleFieldInfoArgs{...}
type TaskTemplateInvisibleFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput
	ToTaskTemplateInvisibleFieldInfoOutputWithContext(context.Context) TaskTemplateInvisibleFieldInfoOutput
}

// Invisible field info
type TaskTemplateInvisibleFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateInvisibleFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (i TaskTemplateInvisibleFieldInfoArgs) ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput {
	return i.ToTaskTemplateInvisibleFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateInvisibleFieldInfoArgs) ToTaskTemplateInvisibleFieldInfoOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateInvisibleFieldInfoOutput)
}

// TaskTemplateInvisibleFieldInfoArrayInput is an input type that accepts TaskTemplateInvisibleFieldInfoArray and TaskTemplateInvisibleFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateInvisibleFieldInfoArrayInput` via:
//
//	TaskTemplateInvisibleFieldInfoArray{ TaskTemplateInvisibleFieldInfoArgs{...} }
type TaskTemplateInvisibleFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput
	ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(context.Context) TaskTemplateInvisibleFieldInfoArrayOutput
}

type TaskTemplateInvisibleFieldInfoArray []TaskTemplateInvisibleFieldInfoInput

func (TaskTemplateInvisibleFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (i TaskTemplateInvisibleFieldInfoArray) ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput {
	return i.ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateInvisibleFieldInfoArray) ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateInvisibleFieldInfoArrayOutput)
}

// Invisible field info
type TaskTemplateInvisibleFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateInvisibleFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (o TaskTemplateInvisibleFieldInfoOutput) ToTaskTemplateInvisibleFieldInfoOutput() TaskTemplateInvisibleFieldInfoOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoOutput) ToTaskTemplateInvisibleFieldInfoOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateInvisibleFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateInvisibleFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateInvisibleFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateInvisibleFieldInfo)(nil)).Elem()
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) ToTaskTemplateInvisibleFieldInfoArrayOutput() TaskTemplateInvisibleFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) ToTaskTemplateInvisibleFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateInvisibleFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateInvisibleFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateInvisibleFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateInvisibleFieldInfo {
		return vs[0].([]TaskTemplateInvisibleFieldInfo)[vs[1].(int)]
	}).(TaskTemplateInvisibleFieldInfoOutput)
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateReadOnlyFieldInfoInput is an input type that accepts TaskTemplateReadOnlyFieldInfoArgs and TaskTemplateReadOnlyFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateReadOnlyFieldInfoInput` via:
//
//	TaskTemplateReadOnlyFieldInfoArgs{...}
type TaskTemplateReadOnlyFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput
	ToTaskTemplateReadOnlyFieldInfoOutputWithContext(context.Context) TaskTemplateReadOnlyFieldInfoOutput
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateReadOnlyFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (i TaskTemplateReadOnlyFieldInfoArgs) ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput {
	return i.ToTaskTemplateReadOnlyFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateReadOnlyFieldInfoArgs) ToTaskTemplateReadOnlyFieldInfoOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateReadOnlyFieldInfoOutput)
}

// TaskTemplateReadOnlyFieldInfoArrayInput is an input type that accepts TaskTemplateReadOnlyFieldInfoArray and TaskTemplateReadOnlyFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateReadOnlyFieldInfoArrayInput` via:
//
//	TaskTemplateReadOnlyFieldInfoArray{ TaskTemplateReadOnlyFieldInfoArgs{...} }
type TaskTemplateReadOnlyFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput
	ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput
}

type TaskTemplateReadOnlyFieldInfoArray []TaskTemplateReadOnlyFieldInfoInput

func (TaskTemplateReadOnlyFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (i TaskTemplateReadOnlyFieldInfoArray) ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return i.ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateReadOnlyFieldInfoArray) ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateReadOnlyFieldInfoArrayOutput)
}

// ReadOnly field info
type TaskTemplateReadOnlyFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateReadOnlyFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (o TaskTemplateReadOnlyFieldInfoOutput) ToTaskTemplateReadOnlyFieldInfoOutput() TaskTemplateReadOnlyFieldInfoOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoOutput) ToTaskTemplateReadOnlyFieldInfoOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateReadOnlyFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateReadOnlyFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateReadOnlyFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateReadOnlyFieldInfo)(nil)).Elem()
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) ToTaskTemplateReadOnlyFieldInfoArrayOutput() TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) ToTaskTemplateReadOnlyFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateReadOnlyFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateReadOnlyFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateReadOnlyFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateReadOnlyFieldInfo {
		return vs[0].([]TaskTemplateReadOnlyFieldInfo)[vs[1].(int)]
	}).(TaskTemplateReadOnlyFieldInfoOutput)
}

// Required field info
type TaskTemplateRequiredFieldInfo struct {
	Id TaskTemplateFieldIdentifier `pulumi:"id"`
}

// TaskTemplateRequiredFieldInfoInput is an input type that accepts TaskTemplateRequiredFieldInfoArgs and TaskTemplateRequiredFieldInfoOutput values.
// You can construct a concrete instance of `TaskTemplateRequiredFieldInfoInput` via:
//
//	TaskTemplateRequiredFieldInfoArgs{...}
type TaskTemplateRequiredFieldInfoInput interface {
	pulumi.Input

	ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput
	ToTaskTemplateRequiredFieldInfoOutputWithContext(context.Context) TaskTemplateRequiredFieldInfoOutput
}

// Required field info
type TaskTemplateRequiredFieldInfoArgs struct {
	Id TaskTemplateFieldIdentifierInput `pulumi:"id"`
}

func (TaskTemplateRequiredFieldInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (i TaskTemplateRequiredFieldInfoArgs) ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput {
	return i.ToTaskTemplateRequiredFieldInfoOutputWithContext(context.Background())
}

func (i TaskTemplateRequiredFieldInfoArgs) ToTaskTemplateRequiredFieldInfoOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateRequiredFieldInfoOutput)
}

// TaskTemplateRequiredFieldInfoArrayInput is an input type that accepts TaskTemplateRequiredFieldInfoArray and TaskTemplateRequiredFieldInfoArrayOutput values.
// You can construct a concrete instance of `TaskTemplateRequiredFieldInfoArrayInput` via:
//
//	TaskTemplateRequiredFieldInfoArray{ TaskTemplateRequiredFieldInfoArgs{...} }
type TaskTemplateRequiredFieldInfoArrayInput interface {
	pulumi.Input

	ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput
	ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(context.Context) TaskTemplateRequiredFieldInfoArrayOutput
}

type TaskTemplateRequiredFieldInfoArray []TaskTemplateRequiredFieldInfoInput

func (TaskTemplateRequiredFieldInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (i TaskTemplateRequiredFieldInfoArray) ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput {
	return i.ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(context.Background())
}

func (i TaskTemplateRequiredFieldInfoArray) ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskTemplateRequiredFieldInfoArrayOutput)
}

// Required field info
type TaskTemplateRequiredFieldInfoOutput struct{ *pulumi.OutputState }

func (TaskTemplateRequiredFieldInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (o TaskTemplateRequiredFieldInfoOutput) ToTaskTemplateRequiredFieldInfoOutput() TaskTemplateRequiredFieldInfoOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoOutput) ToTaskTemplateRequiredFieldInfoOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoOutput) Id() TaskTemplateFieldIdentifierOutput {
	return o.ApplyT(func(v TaskTemplateRequiredFieldInfo) TaskTemplateFieldIdentifier { return v.Id }).(TaskTemplateFieldIdentifierOutput)
}

type TaskTemplateRequiredFieldInfoArrayOutput struct{ *pulumi.OutputState }

func (TaskTemplateRequiredFieldInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskTemplateRequiredFieldInfo)(nil)).Elem()
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) ToTaskTemplateRequiredFieldInfoArrayOutput() TaskTemplateRequiredFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) ToTaskTemplateRequiredFieldInfoArrayOutputWithContext(ctx context.Context) TaskTemplateRequiredFieldInfoArrayOutput {
	return o
}

func (o TaskTemplateRequiredFieldInfoArrayOutput) Index(i pulumi.IntInput) TaskTemplateRequiredFieldInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskTemplateRequiredFieldInfo {
		return vs[0].([]TaskTemplateRequiredFieldInfo)[vs[1].(int)]
	}).(TaskTemplateRequiredFieldInfoOutput)
}

// A key-value pair to associate with a resource.
type TaskTemplateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type TrafficDistributionGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type UserHierarchyGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Information about level five.
type UserHierarchyStructureLevelFive struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn *string `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId *string `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureLevelFiveInput is an input type that accepts UserHierarchyStructureLevelFiveArgs and UserHierarchyStructureLevelFiveOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelFiveInput` via:
//
//	UserHierarchyStructureLevelFiveArgs{...}
type UserHierarchyStructureLevelFiveInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelFiveOutput() UserHierarchyStructureLevelFiveOutput
	ToUserHierarchyStructureLevelFiveOutputWithContext(context.Context) UserHierarchyStructureLevelFiveOutput
}

// Information about level five.
type UserHierarchyStructureLevelFiveArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn pulumi.StringPtrInput `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId pulumi.StringPtrInput `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureLevelFiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelFive)(nil)).Elem()
}

func (i UserHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureLevelFiveOutput() UserHierarchyStructureLevelFiveOutput {
	return i.ToUserHierarchyStructureLevelFiveOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFiveOutput)
}

func (i UserHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelFiveArgs) ToUserHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFiveOutput).ToUserHierarchyStructureLevelFivePtrOutputWithContext(ctx)
}

// UserHierarchyStructureLevelFivePtrInput is an input type that accepts UserHierarchyStructureLevelFiveArgs, UserHierarchyStructureLevelFivePtr and UserHierarchyStructureLevelFivePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelFivePtrInput` via:
//
//	        UserHierarchyStructureLevelFiveArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureLevelFivePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureLevelFivePtrOutput
	ToUserHierarchyStructureLevelFivePtrOutputWithContext(context.Context) UserHierarchyStructureLevelFivePtrOutput
}

type userHierarchyStructureLevelFivePtrType UserHierarchyStructureLevelFiveArgs

func UserHierarchyStructureLevelFivePtr(v *UserHierarchyStructureLevelFiveArgs) UserHierarchyStructureLevelFivePtrInput {
	return (*userHierarchyStructureLevelFivePtrType)(v)
}

func (*userHierarchyStructureLevelFivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelFive)(nil)).Elem()
}

func (i *userHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureLevelFivePtrOutput {
	return i.ToUserHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureLevelFivePtrType) ToUserHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFivePtrOutput)
}

// Information about level five.
type UserHierarchyStructureLevelFiveOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelFiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureLevelFiveOutput() UserHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureLevelFiveOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFiveOutput {
	return o
}

func (o UserHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureLevelFivePtrOutput {
	return o.ToUserHierarchyStructureLevelFivePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureLevelFiveOutput) ToUserHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureLevelFive) *UserHierarchyStructureLevelFive {
		return &v
	}).(UserHierarchyStructureLevelFivePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelFiveOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFive) *string { return v.HierarchyLevelArn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelFiveOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFive) *string { return v.HierarchyLevelId }).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelFiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFive) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureLevelFivePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelFivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelFive)(nil)).Elem()
}

func (o UserHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureLevelFivePtrOutput() UserHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelFivePtrOutput) ToUserHierarchyStructureLevelFivePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFivePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelFivePtrOutput) Elem() UserHierarchyStructureLevelFiveOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFive) UserHierarchyStructureLevelFive {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureLevelFive
		return ret
	}).(UserHierarchyStructureLevelFiveOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelFivePtrOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelArn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelFivePtrOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelId
	}).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelFivePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFive) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about level four.
type UserHierarchyStructureLevelFour struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn *string `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId *string `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureLevelFourInput is an input type that accepts UserHierarchyStructureLevelFourArgs and UserHierarchyStructureLevelFourOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelFourInput` via:
//
//	UserHierarchyStructureLevelFourArgs{...}
type UserHierarchyStructureLevelFourInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelFourOutput() UserHierarchyStructureLevelFourOutput
	ToUserHierarchyStructureLevelFourOutputWithContext(context.Context) UserHierarchyStructureLevelFourOutput
}

// Information about level four.
type UserHierarchyStructureLevelFourArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn pulumi.StringPtrInput `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId pulumi.StringPtrInput `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureLevelFourArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelFour)(nil)).Elem()
}

func (i UserHierarchyStructureLevelFourArgs) ToUserHierarchyStructureLevelFourOutput() UserHierarchyStructureLevelFourOutput {
	return i.ToUserHierarchyStructureLevelFourOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelFourArgs) ToUserHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFourOutput)
}

func (i UserHierarchyStructureLevelFourArgs) ToUserHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelFourArgs) ToUserHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFourOutput).ToUserHierarchyStructureLevelFourPtrOutputWithContext(ctx)
}

// UserHierarchyStructureLevelFourPtrInput is an input type that accepts UserHierarchyStructureLevelFourArgs, UserHierarchyStructureLevelFourPtr and UserHierarchyStructureLevelFourPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelFourPtrInput` via:
//
//	        UserHierarchyStructureLevelFourArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureLevelFourPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureLevelFourPtrOutput
	ToUserHierarchyStructureLevelFourPtrOutputWithContext(context.Context) UserHierarchyStructureLevelFourPtrOutput
}

type userHierarchyStructureLevelFourPtrType UserHierarchyStructureLevelFourArgs

func UserHierarchyStructureLevelFourPtr(v *UserHierarchyStructureLevelFourArgs) UserHierarchyStructureLevelFourPtrInput {
	return (*userHierarchyStructureLevelFourPtrType)(v)
}

func (*userHierarchyStructureLevelFourPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelFour)(nil)).Elem()
}

func (i *userHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureLevelFourPtrOutput {
	return i.ToUserHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureLevelFourPtrType) ToUserHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelFourPtrOutput)
}

// Information about level four.
type UserHierarchyStructureLevelFourOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelFourOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureLevelFourOutput) ToUserHierarchyStructureLevelFourOutput() UserHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureLevelFourOutput) ToUserHierarchyStructureLevelFourOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourOutput {
	return o
}

func (o UserHierarchyStructureLevelFourOutput) ToUserHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureLevelFourPtrOutput {
	return o.ToUserHierarchyStructureLevelFourPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureLevelFourOutput) ToUserHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureLevelFour) *UserHierarchyStructureLevelFour {
		return &v
	}).(UserHierarchyStructureLevelFourPtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelFourOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFour) *string { return v.HierarchyLevelArn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelFourOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFour) *string { return v.HierarchyLevelId }).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelFourOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelFour) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureLevelFourPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelFourPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelFour)(nil)).Elem()
}

func (o UserHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureLevelFourPtrOutput() UserHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureLevelFourPtrOutput) ToUserHierarchyStructureLevelFourPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelFourPtrOutput {
	return o
}

func (o UserHierarchyStructureLevelFourPtrOutput) Elem() UserHierarchyStructureLevelFourOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFour) UserHierarchyStructureLevelFour {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureLevelFour
		return ret
	}).(UserHierarchyStructureLevelFourOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelFourPtrOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelArn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelFourPtrOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelId
	}).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelFourPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelFour) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about level one.
type UserHierarchyStructureLevelOne struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn *string `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId *string `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureLevelOneInput is an input type that accepts UserHierarchyStructureLevelOneArgs and UserHierarchyStructureLevelOneOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelOneInput` via:
//
//	UserHierarchyStructureLevelOneArgs{...}
type UserHierarchyStructureLevelOneInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelOneOutput() UserHierarchyStructureLevelOneOutput
	ToUserHierarchyStructureLevelOneOutputWithContext(context.Context) UserHierarchyStructureLevelOneOutput
}

// Information about level one.
type UserHierarchyStructureLevelOneArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn pulumi.StringPtrInput `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId pulumi.StringPtrInput `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureLevelOneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelOne)(nil)).Elem()
}

func (i UserHierarchyStructureLevelOneArgs) ToUserHierarchyStructureLevelOneOutput() UserHierarchyStructureLevelOneOutput {
	return i.ToUserHierarchyStructureLevelOneOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelOneArgs) ToUserHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelOneOutput)
}

func (i UserHierarchyStructureLevelOneArgs) ToUserHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelOneArgs) ToUserHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelOneOutput).ToUserHierarchyStructureLevelOnePtrOutputWithContext(ctx)
}

// UserHierarchyStructureLevelOnePtrInput is an input type that accepts UserHierarchyStructureLevelOneArgs, UserHierarchyStructureLevelOnePtr and UserHierarchyStructureLevelOnePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelOnePtrInput` via:
//
//	        UserHierarchyStructureLevelOneArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureLevelOnePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureLevelOnePtrOutput
	ToUserHierarchyStructureLevelOnePtrOutputWithContext(context.Context) UserHierarchyStructureLevelOnePtrOutput
}

type userHierarchyStructureLevelOnePtrType UserHierarchyStructureLevelOneArgs

func UserHierarchyStructureLevelOnePtr(v *UserHierarchyStructureLevelOneArgs) UserHierarchyStructureLevelOnePtrInput {
	return (*userHierarchyStructureLevelOnePtrType)(v)
}

func (*userHierarchyStructureLevelOnePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelOne)(nil)).Elem()
}

func (i *userHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureLevelOnePtrOutput {
	return i.ToUserHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureLevelOnePtrType) ToUserHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOnePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelOnePtrOutput)
}

// Information about level one.
type UserHierarchyStructureLevelOneOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelOneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureLevelOneOutput) ToUserHierarchyStructureLevelOneOutput() UserHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureLevelOneOutput) ToUserHierarchyStructureLevelOneOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOneOutput {
	return o
}

func (o UserHierarchyStructureLevelOneOutput) ToUserHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureLevelOnePtrOutput {
	return o.ToUserHierarchyStructureLevelOnePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureLevelOneOutput) ToUserHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOnePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureLevelOne) *UserHierarchyStructureLevelOne {
		return &v
	}).(UserHierarchyStructureLevelOnePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelOneOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelOne) *string { return v.HierarchyLevelArn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelOneOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelOne) *string { return v.HierarchyLevelId }).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelOneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelOne) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureLevelOnePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelOnePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelOne)(nil)).Elem()
}

func (o UserHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureLevelOnePtrOutput() UserHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelOnePtrOutput) ToUserHierarchyStructureLevelOnePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelOnePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelOnePtrOutput) Elem() UserHierarchyStructureLevelOneOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelOne) UserHierarchyStructureLevelOne {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureLevelOne
		return ret
	}).(UserHierarchyStructureLevelOneOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelOnePtrOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelArn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelOnePtrOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelId
	}).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelOnePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelOne) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about level three.
type UserHierarchyStructureLevelThree struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn *string `pulumi:"hierarchyLevelArn"`
	HierarchyLevelId  *string `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureLevelThreeInput is an input type that accepts UserHierarchyStructureLevelThreeArgs and UserHierarchyStructureLevelThreeOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelThreeInput` via:
//
//	UserHierarchyStructureLevelThreeArgs{...}
type UserHierarchyStructureLevelThreeInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelThreeOutput() UserHierarchyStructureLevelThreeOutput
	ToUserHierarchyStructureLevelThreeOutputWithContext(context.Context) UserHierarchyStructureLevelThreeOutput
}

// Information about level three.
type UserHierarchyStructureLevelThreeArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn pulumi.StringPtrInput `pulumi:"hierarchyLevelArn"`
	HierarchyLevelId  pulumi.StringPtrInput `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureLevelThreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelThree)(nil)).Elem()
}

func (i UserHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureLevelThreeOutput() UserHierarchyStructureLevelThreeOutput {
	return i.ToUserHierarchyStructureLevelThreeOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelThreeOutput)
}

func (i UserHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelThreeArgs) ToUserHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelThreeOutput).ToUserHierarchyStructureLevelThreePtrOutputWithContext(ctx)
}

// UserHierarchyStructureLevelThreePtrInput is an input type that accepts UserHierarchyStructureLevelThreeArgs, UserHierarchyStructureLevelThreePtr and UserHierarchyStructureLevelThreePtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelThreePtrInput` via:
//
//	        UserHierarchyStructureLevelThreeArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureLevelThreePtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureLevelThreePtrOutput
	ToUserHierarchyStructureLevelThreePtrOutputWithContext(context.Context) UserHierarchyStructureLevelThreePtrOutput
}

type userHierarchyStructureLevelThreePtrType UserHierarchyStructureLevelThreeArgs

func UserHierarchyStructureLevelThreePtr(v *UserHierarchyStructureLevelThreeArgs) UserHierarchyStructureLevelThreePtrInput {
	return (*userHierarchyStructureLevelThreePtrType)(v)
}

func (*userHierarchyStructureLevelThreePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelThree)(nil)).Elem()
}

func (i *userHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureLevelThreePtrOutput {
	return i.ToUserHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureLevelThreePtrType) ToUserHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelThreePtrOutput)
}

// Information about level three.
type UserHierarchyStructureLevelThreeOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelThreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureLevelThreeOutput() UserHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureLevelThreeOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreeOutput {
	return o
}

func (o UserHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureLevelThreePtrOutput {
	return o.ToUserHierarchyStructureLevelThreePtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureLevelThreeOutput) ToUserHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureLevelThree) *UserHierarchyStructureLevelThree {
		return &v
	}).(UserHierarchyStructureLevelThreePtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelThreeOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelThree) *string { return v.HierarchyLevelArn }).(pulumi.StringPtrOutput)
}

func (o UserHierarchyStructureLevelThreeOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelThree) *string { return v.HierarchyLevelId }).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelThreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelThree) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureLevelThreePtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelThreePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelThree)(nil)).Elem()
}

func (o UserHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureLevelThreePtrOutput() UserHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelThreePtrOutput) ToUserHierarchyStructureLevelThreePtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelThreePtrOutput {
	return o
}

func (o UserHierarchyStructureLevelThreePtrOutput) Elem() UserHierarchyStructureLevelThreeOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelThree) UserHierarchyStructureLevelThree {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureLevelThree
		return ret
	}).(UserHierarchyStructureLevelThreeOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelThreePtrOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelArn
	}).(pulumi.StringPtrOutput)
}

func (o UserHierarchyStructureLevelThreePtrOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelId
	}).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelThreePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelThree) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about level two.
type UserHierarchyStructureLevelTwo struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn *string `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId *string `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name string `pulumi:"name"`
}

// UserHierarchyStructureLevelTwoInput is an input type that accepts UserHierarchyStructureLevelTwoArgs and UserHierarchyStructureLevelTwoOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelTwoInput` via:
//
//	UserHierarchyStructureLevelTwoArgs{...}
type UserHierarchyStructureLevelTwoInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelTwoOutput() UserHierarchyStructureLevelTwoOutput
	ToUserHierarchyStructureLevelTwoOutputWithContext(context.Context) UserHierarchyStructureLevelTwoOutput
}

// Information about level two.
type UserHierarchyStructureLevelTwoArgs struct {
	// The Amazon Resource Name (ARN) of the hierarchy level.
	HierarchyLevelArn pulumi.StringPtrInput `pulumi:"hierarchyLevelArn"`
	// The identifier of the hierarchy level.
	HierarchyLevelId pulumi.StringPtrInput `pulumi:"hierarchyLevelId"`
	// The name of the hierarchy level.
	Name pulumi.StringInput `pulumi:"name"`
}

func (UserHierarchyStructureLevelTwoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i UserHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureLevelTwoOutput() UserHierarchyStructureLevelTwoOutput {
	return i.ToUserHierarchyStructureLevelTwoOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelTwoOutput)
}

func (i UserHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructureLevelTwoArgs) ToUserHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelTwoOutput).ToUserHierarchyStructureLevelTwoPtrOutputWithContext(ctx)
}

// UserHierarchyStructureLevelTwoPtrInput is an input type that accepts UserHierarchyStructureLevelTwoArgs, UserHierarchyStructureLevelTwoPtr and UserHierarchyStructureLevelTwoPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructureLevelTwoPtrInput` via:
//
//	        UserHierarchyStructureLevelTwoArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructureLevelTwoPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureLevelTwoPtrOutput
	ToUserHierarchyStructureLevelTwoPtrOutputWithContext(context.Context) UserHierarchyStructureLevelTwoPtrOutput
}

type userHierarchyStructureLevelTwoPtrType UserHierarchyStructureLevelTwoArgs

func UserHierarchyStructureLevelTwoPtr(v *UserHierarchyStructureLevelTwoArgs) UserHierarchyStructureLevelTwoPtrInput {
	return (*userHierarchyStructureLevelTwoPtrType)(v)
}

func (*userHierarchyStructureLevelTwoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelTwo)(nil)).Elem()
}

func (i *userHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureLevelTwoPtrOutput {
	return i.ToUserHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructureLevelTwoPtrType) ToUserHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructureLevelTwoPtrOutput)
}

// Information about level two.
type UserHierarchyStructureLevelTwoOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelTwoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureLevelTwoOutput() UserHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureLevelTwoOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoOutput {
	return o
}

func (o UserHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureLevelTwoPtrOutput {
	return o.ToUserHierarchyStructureLevelTwoPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructureLevelTwoOutput) ToUserHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureLevelTwo) *UserHierarchyStructureLevelTwo {
		return &v
	}).(UserHierarchyStructureLevelTwoPtrOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelTwoOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelTwo) *string { return v.HierarchyLevelArn }).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelTwoOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelTwo) *string { return v.HierarchyLevelId }).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelTwoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserHierarchyStructureLevelTwo) string { return v.Name }).(pulumi.StringOutput)
}

type UserHierarchyStructureLevelTwoPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureLevelTwoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureLevelTwo)(nil)).Elem()
}

func (o UserHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureLevelTwoPtrOutput() UserHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureLevelTwoPtrOutput) ToUserHierarchyStructureLevelTwoPtrOutputWithContext(ctx context.Context) UserHierarchyStructureLevelTwoPtrOutput {
	return o
}

func (o UserHierarchyStructureLevelTwoPtrOutput) Elem() UserHierarchyStructureLevelTwoOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelTwo) UserHierarchyStructureLevelTwo {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureLevelTwo
		return ret
	}).(UserHierarchyStructureLevelTwoOutput)
}

// The Amazon Resource Name (ARN) of the hierarchy level.
func (o UserHierarchyStructureLevelTwoPtrOutput) HierarchyLevelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelArn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the hierarchy level.
func (o UserHierarchyStructureLevelTwoPtrOutput) HierarchyLevelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return v.HierarchyLevelId
	}).(pulumi.StringPtrOutput)
}

// The name of the hierarchy level.
func (o UserHierarchyStructureLevelTwoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureLevelTwo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about the hierarchy structure.
type UserHierarchyStructureProperties struct {
	LevelFive *UserHierarchyStructureLevelFive `pulumi:"levelFive"`
	// The update for level four.
	LevelFour *UserHierarchyStructureLevelFour `pulumi:"levelFour"`
	// The update for level one.
	LevelOne *UserHierarchyStructureLevelOne `pulumi:"levelOne"`
	// The update for level three.
	LevelThree *UserHierarchyStructureLevelThree `pulumi:"levelThree"`
	// The update for level two.
	LevelTwo *UserHierarchyStructureLevelTwo `pulumi:"levelTwo"`
}

// UserHierarchyStructurePropertiesInput is an input type that accepts UserHierarchyStructurePropertiesArgs and UserHierarchyStructurePropertiesOutput values.
// You can construct a concrete instance of `UserHierarchyStructurePropertiesInput` via:
//
//	UserHierarchyStructurePropertiesArgs{...}
type UserHierarchyStructurePropertiesInput interface {
	pulumi.Input

	ToUserHierarchyStructurePropertiesOutput() UserHierarchyStructurePropertiesOutput
	ToUserHierarchyStructurePropertiesOutputWithContext(context.Context) UserHierarchyStructurePropertiesOutput
}

// Information about the hierarchy structure.
type UserHierarchyStructurePropertiesArgs struct {
	LevelFive UserHierarchyStructureLevelFivePtrInput `pulumi:"levelFive"`
	// The update for level four.
	LevelFour UserHierarchyStructureLevelFourPtrInput `pulumi:"levelFour"`
	// The update for level one.
	LevelOne UserHierarchyStructureLevelOnePtrInput `pulumi:"levelOne"`
	// The update for level three.
	LevelThree UserHierarchyStructureLevelThreePtrInput `pulumi:"levelThree"`
	// The update for level two.
	LevelTwo UserHierarchyStructureLevelTwoPtrInput `pulumi:"levelTwo"`
}

func (UserHierarchyStructurePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureProperties)(nil)).Elem()
}

func (i UserHierarchyStructurePropertiesArgs) ToUserHierarchyStructurePropertiesOutput() UserHierarchyStructurePropertiesOutput {
	return i.ToUserHierarchyStructurePropertiesOutputWithContext(context.Background())
}

func (i UserHierarchyStructurePropertiesArgs) ToUserHierarchyStructurePropertiesOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructurePropertiesOutput)
}

func (i UserHierarchyStructurePropertiesArgs) ToUserHierarchyStructurePropertiesPtrOutput() UserHierarchyStructurePropertiesPtrOutput {
	return i.ToUserHierarchyStructurePropertiesPtrOutputWithContext(context.Background())
}

func (i UserHierarchyStructurePropertiesArgs) ToUserHierarchyStructurePropertiesPtrOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructurePropertiesOutput).ToUserHierarchyStructurePropertiesPtrOutputWithContext(ctx)
}

// UserHierarchyStructurePropertiesPtrInput is an input type that accepts UserHierarchyStructurePropertiesArgs, UserHierarchyStructurePropertiesPtr and UserHierarchyStructurePropertiesPtrOutput values.
// You can construct a concrete instance of `UserHierarchyStructurePropertiesPtrInput` via:
//
//	        UserHierarchyStructurePropertiesArgs{...}
//
//	or:
//
//	        nil
type UserHierarchyStructurePropertiesPtrInput interface {
	pulumi.Input

	ToUserHierarchyStructurePropertiesPtrOutput() UserHierarchyStructurePropertiesPtrOutput
	ToUserHierarchyStructurePropertiesPtrOutputWithContext(context.Context) UserHierarchyStructurePropertiesPtrOutput
}

type userHierarchyStructurePropertiesPtrType UserHierarchyStructurePropertiesArgs

func UserHierarchyStructurePropertiesPtr(v *UserHierarchyStructurePropertiesArgs) UserHierarchyStructurePropertiesPtrInput {
	return (*userHierarchyStructurePropertiesPtrType)(v)
}

func (*userHierarchyStructurePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureProperties)(nil)).Elem()
}

func (i *userHierarchyStructurePropertiesPtrType) ToUserHierarchyStructurePropertiesPtrOutput() UserHierarchyStructurePropertiesPtrOutput {
	return i.ToUserHierarchyStructurePropertiesPtrOutputWithContext(context.Background())
}

func (i *userHierarchyStructurePropertiesPtrType) ToUserHierarchyStructurePropertiesPtrOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserHierarchyStructurePropertiesPtrOutput)
}

// Information about the hierarchy structure.
type UserHierarchyStructurePropertiesOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructurePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructureProperties)(nil)).Elem()
}

func (o UserHierarchyStructurePropertiesOutput) ToUserHierarchyStructurePropertiesOutput() UserHierarchyStructurePropertiesOutput {
	return o
}

func (o UserHierarchyStructurePropertiesOutput) ToUserHierarchyStructurePropertiesOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesOutput {
	return o
}

func (o UserHierarchyStructurePropertiesOutput) ToUserHierarchyStructurePropertiesPtrOutput() UserHierarchyStructurePropertiesPtrOutput {
	return o.ToUserHierarchyStructurePropertiesPtrOutputWithContext(context.Background())
}

func (o UserHierarchyStructurePropertiesOutput) ToUserHierarchyStructurePropertiesPtrOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserHierarchyStructureProperties) *UserHierarchyStructureProperties {
		return &v
	}).(UserHierarchyStructurePropertiesPtrOutput)
}

func (o UserHierarchyStructurePropertiesOutput) LevelFive() UserHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureProperties) *UserHierarchyStructureLevelFive { return v.LevelFive }).(UserHierarchyStructureLevelFivePtrOutput)
}

// The update for level four.
func (o UserHierarchyStructurePropertiesOutput) LevelFour() UserHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureProperties) *UserHierarchyStructureLevelFour { return v.LevelFour }).(UserHierarchyStructureLevelFourPtrOutput)
}

// The update for level one.
func (o UserHierarchyStructurePropertiesOutput) LevelOne() UserHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureProperties) *UserHierarchyStructureLevelOne { return v.LevelOne }).(UserHierarchyStructureLevelOnePtrOutput)
}

// The update for level three.
func (o UserHierarchyStructurePropertiesOutput) LevelThree() UserHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureProperties) *UserHierarchyStructureLevelThree { return v.LevelThree }).(UserHierarchyStructureLevelThreePtrOutput)
}

// The update for level two.
func (o UserHierarchyStructurePropertiesOutput) LevelTwo() UserHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v UserHierarchyStructureProperties) *UserHierarchyStructureLevelTwo { return v.LevelTwo }).(UserHierarchyStructureLevelTwoPtrOutput)
}

type UserHierarchyStructurePropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructurePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserHierarchyStructureProperties)(nil)).Elem()
}

func (o UserHierarchyStructurePropertiesPtrOutput) ToUserHierarchyStructurePropertiesPtrOutput() UserHierarchyStructurePropertiesPtrOutput {
	return o
}

func (o UserHierarchyStructurePropertiesPtrOutput) ToUserHierarchyStructurePropertiesPtrOutputWithContext(ctx context.Context) UserHierarchyStructurePropertiesPtrOutput {
	return o
}

func (o UserHierarchyStructurePropertiesPtrOutput) Elem() UserHierarchyStructurePropertiesOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) UserHierarchyStructureProperties {
		if v != nil {
			return *v
		}
		var ret UserHierarchyStructureProperties
		return ret
	}).(UserHierarchyStructurePropertiesOutput)
}

func (o UserHierarchyStructurePropertiesPtrOutput) LevelFive() UserHierarchyStructureLevelFivePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) *UserHierarchyStructureLevelFive {
		if v == nil {
			return nil
		}
		return v.LevelFive
	}).(UserHierarchyStructureLevelFivePtrOutput)
}

// The update for level four.
func (o UserHierarchyStructurePropertiesPtrOutput) LevelFour() UserHierarchyStructureLevelFourPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) *UserHierarchyStructureLevelFour {
		if v == nil {
			return nil
		}
		return v.LevelFour
	}).(UserHierarchyStructureLevelFourPtrOutput)
}

// The update for level one.
func (o UserHierarchyStructurePropertiesPtrOutput) LevelOne() UserHierarchyStructureLevelOnePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) *UserHierarchyStructureLevelOne {
		if v == nil {
			return nil
		}
		return v.LevelOne
	}).(UserHierarchyStructureLevelOnePtrOutput)
}

// The update for level three.
func (o UserHierarchyStructurePropertiesPtrOutput) LevelThree() UserHierarchyStructureLevelThreePtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) *UserHierarchyStructureLevelThree {
		if v == nil {
			return nil
		}
		return v.LevelThree
	}).(UserHierarchyStructureLevelThreePtrOutput)
}

// The update for level two.
func (o UserHierarchyStructurePropertiesPtrOutput) LevelTwo() UserHierarchyStructureLevelTwoPtrOutput {
	return o.ApplyT(func(v *UserHierarchyStructureProperties) *UserHierarchyStructureLevelTwo {
		if v == nil {
			return nil
		}
		return v.LevelTwo
	}).(UserHierarchyStructureLevelTwoPtrOutput)
}

// Contains information about the identity of a user.
type UserIdentityInfo struct {
	// The email address. If you are using SAML for identity management and include this parameter, an error is returned.
	Email *string `pulumi:"email"`
	// The first name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
	FirstName *string `pulumi:"firstName"`
	// The last name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
	LastName *string `pulumi:"lastName"`
	// The user's mobile number.
	Mobile *string `pulumi:"mobile"`
	// The user's secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
	//
	// *Pattern* : `(?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}`
	SecondaryEmail *string `pulumi:"secondaryEmail"`
}

// UserIdentityInfoInput is an input type that accepts UserIdentityInfoArgs and UserIdentityInfoOutput values.
// You can construct a concrete instance of `UserIdentityInfoInput` via:
//
//	UserIdentityInfoArgs{...}
type UserIdentityInfoInput interface {
	pulumi.Input

	ToUserIdentityInfoOutput() UserIdentityInfoOutput
	ToUserIdentityInfoOutputWithContext(context.Context) UserIdentityInfoOutput
}

// Contains information about the identity of a user.
type UserIdentityInfoArgs struct {
	// The email address. If you are using SAML for identity management and include this parameter, an error is returned.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The first name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// The last name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
	// The user's mobile number.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// The user's secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
	//
	// *Pattern* : `(?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}`
	SecondaryEmail pulumi.StringPtrInput `pulumi:"secondaryEmail"`
}

func (UserIdentityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return i.ToUserIdentityInfoOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput)
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i UserIdentityInfoArgs) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoOutput).ToUserIdentityInfoPtrOutputWithContext(ctx)
}

// UserIdentityInfoPtrInput is an input type that accepts UserIdentityInfoArgs, UserIdentityInfoPtr and UserIdentityInfoPtrOutput values.
// You can construct a concrete instance of `UserIdentityInfoPtrInput` via:
//
//	        UserIdentityInfoArgs{...}
//
//	or:
//
//	        nil
type UserIdentityInfoPtrInput interface {
	pulumi.Input

	ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput
	ToUserIdentityInfoPtrOutputWithContext(context.Context) UserIdentityInfoPtrOutput
}

type userIdentityInfoPtrType UserIdentityInfoArgs

func UserIdentityInfoPtr(v *UserIdentityInfoArgs) UserIdentityInfoPtrInput {
	return (*userIdentityInfoPtrType)(v)
}

func (*userIdentityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return i.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (i *userIdentityInfoPtrType) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserIdentityInfoPtrOutput)
}

// Contains information about the identity of a user.
type UserIdentityInfoOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutput() UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoOutputWithContext(ctx context.Context) UserIdentityInfoOutput {
	return o
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o.ToUserIdentityInfoPtrOutputWithContext(context.Background())
}

func (o UserIdentityInfoOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserIdentityInfo) *UserIdentityInfo {
		return &v
	}).(UserIdentityInfoPtrOutput)
}

// The email address. If you are using SAML for identity management and include this parameter, an error is returned.
func (o UserIdentityInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The first name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
func (o UserIdentityInfoOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// The last name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
func (o UserIdentityInfoOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

// The user's mobile number.
func (o UserIdentityInfoOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// The user's secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
//
// *Pattern* : `(?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}`
func (o UserIdentityInfoOutput) SecondaryEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserIdentityInfo) *string { return v.SecondaryEmail }).(pulumi.StringPtrOutput)
}

type UserIdentityInfoPtrOutput struct{ *pulumi.OutputState }

func (UserIdentityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserIdentityInfo)(nil)).Elem()
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutput() UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) ToUserIdentityInfoPtrOutputWithContext(ctx context.Context) UserIdentityInfoPtrOutput {
	return o
}

func (o UserIdentityInfoPtrOutput) Elem() UserIdentityInfoOutput {
	return o.ApplyT(func(v *UserIdentityInfo) UserIdentityInfo {
		if v != nil {
			return *v
		}
		var ret UserIdentityInfo
		return ret
	}).(UserIdentityInfoOutput)
}

// The email address. If you are using SAML for identity management and include this parameter, an error is returned.
func (o UserIdentityInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The first name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
func (o UserIdentityInfoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// The last name. This is required if you are using Amazon Connect or SAML for identity management. Inputs must be in Unicode Normalization Form C (NFC). Text containing characters in a non-NFC form (for example, decomposed characters or combining marks) are not accepted.
func (o UserIdentityInfoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

// The user's mobile number.
func (o UserIdentityInfoPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// The user's secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
//
// *Pattern* : `(?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}`
func (o UserIdentityInfoPtrOutput) SecondaryEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserIdentityInfo) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryEmail
	}).(pulumi.StringPtrOutput)
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfig struct {
	// The After Call Work (ACW) timeout setting, in seconds. This parameter has a minimum value of 0 and a maximum value of 2,000,000 seconds (24 days). Enter 0 if you don't want to allocate a specific amount of ACW time. It essentially means an indefinite amount of time. When the conversation ends, ACW starts; the agent must choose Close contact to end ACW.
	//
	// > When returned by a `SearchUsers` call, `AfterContactWorkTimeLimit` is returned in milliseconds.
	AfterContactWorkTimeLimit *int `pulumi:"afterContactWorkTimeLimit"`
	// The Auto accept setting.
	AutoAccept *bool `pulumi:"autoAccept"`
	// The phone number for the user's desk phone.
	DeskPhoneNumber      *string `pulumi:"deskPhoneNumber"`
	PersistentConnection *bool   `pulumi:"persistentConnection"`
	// The phone type.
	PhoneType UserPhoneType `pulumi:"phoneType"`
}

// UserPhoneConfigInput is an input type that accepts UserPhoneConfigArgs and UserPhoneConfigOutput values.
// You can construct a concrete instance of `UserPhoneConfigInput` via:
//
//	UserPhoneConfigArgs{...}
type UserPhoneConfigInput interface {
	pulumi.Input

	ToUserPhoneConfigOutput() UserPhoneConfigOutput
	ToUserPhoneConfigOutputWithContext(context.Context) UserPhoneConfigOutput
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfigArgs struct {
	// The After Call Work (ACW) timeout setting, in seconds. This parameter has a minimum value of 0 and a maximum value of 2,000,000 seconds (24 days). Enter 0 if you don't want to allocate a specific amount of ACW time. It essentially means an indefinite amount of time. When the conversation ends, ACW starts; the agent must choose Close contact to end ACW.
	//
	// > When returned by a `SearchUsers` call, `AfterContactWorkTimeLimit` is returned in milliseconds.
	AfterContactWorkTimeLimit pulumi.IntPtrInput `pulumi:"afterContactWorkTimeLimit"`
	// The Auto accept setting.
	AutoAccept pulumi.BoolPtrInput `pulumi:"autoAccept"`
	// The phone number for the user's desk phone.
	DeskPhoneNumber      pulumi.StringPtrInput `pulumi:"deskPhoneNumber"`
	PersistentConnection pulumi.BoolPtrInput   `pulumi:"persistentConnection"`
	// The phone type.
	PhoneType UserPhoneTypeInput `pulumi:"phoneType"`
}

func (UserPhoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return i.ToUserPhoneConfigOutputWithContext(context.Background())
}

func (i UserPhoneConfigArgs) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPhoneConfigOutput)
}

// Contains information about the phone configuration settings for a user.
type UserPhoneConfigOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutput() UserPhoneConfigOutput {
	return o
}

func (o UserPhoneConfigOutput) ToUserPhoneConfigOutputWithContext(ctx context.Context) UserPhoneConfigOutput {
	return o
}

// The After Call Work (ACW) timeout setting, in seconds. This parameter has a minimum value of 0 and a maximum value of 2,000,000 seconds (24 days). Enter 0 if you don't want to allocate a specific amount of ACW time. It essentially means an indefinite amount of time. When the conversation ends, ACW starts; the agent must choose Close contact to end ACW.
//
// > When returned by a `SearchUsers` call, `AfterContactWorkTimeLimit` is returned in milliseconds.
func (o UserPhoneConfigOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *int { return v.AfterContactWorkTimeLimit }).(pulumi.IntPtrOutput)
}

// The Auto accept setting.
func (o UserPhoneConfigOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *bool { return v.AutoAccept }).(pulumi.BoolPtrOutput)
}

// The phone number for the user's desk phone.
func (o UserPhoneConfigOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *string { return v.DeskPhoneNumber }).(pulumi.StringPtrOutput)
}

func (o UserPhoneConfigOutput) PersistentConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPhoneConfig) *bool { return v.PersistentConnection }).(pulumi.BoolPtrOutput)
}

// The phone type.
func (o UserPhoneConfigOutput) PhoneType() UserPhoneTypeOutput {
	return o.ApplyT(func(v UserPhoneConfig) UserPhoneType { return v.PhoneType }).(UserPhoneTypeOutput)
}

type UserPhoneConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPhoneConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPhoneConfig)(nil)).Elem()
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutput() UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) ToUserPhoneConfigPtrOutputWithContext(ctx context.Context) UserPhoneConfigPtrOutput {
	return o
}

func (o UserPhoneConfigPtrOutput) Elem() UserPhoneConfigOutput {
	return o.ApplyT(func(v *UserPhoneConfig) UserPhoneConfig {
		if v != nil {
			return *v
		}
		var ret UserPhoneConfig
		return ret
	}).(UserPhoneConfigOutput)
}

// The After Call Work (ACW) timeout setting, in seconds. This parameter has a minimum value of 0 and a maximum value of 2,000,000 seconds (24 days). Enter 0 if you don't want to allocate a specific amount of ACW time. It essentially means an indefinite amount of time. When the conversation ends, ACW starts; the agent must choose Close contact to end ACW.
//
// > When returned by a `SearchUsers` call, `AfterContactWorkTimeLimit` is returned in milliseconds.
func (o UserPhoneConfigPtrOutput) AfterContactWorkTimeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *int {
		if v == nil {
			return nil
		}
		return v.AfterContactWorkTimeLimit
	}).(pulumi.IntPtrOutput)
}

// The Auto accept setting.
func (o UserPhoneConfigPtrOutput) AutoAccept() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoAccept
	}).(pulumi.BoolPtrOutput)
}

// The phone number for the user's desk phone.
func (o UserPhoneConfigPtrOutput) DeskPhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *string {
		if v == nil {
			return nil
		}
		return v.DeskPhoneNumber
	}).(pulumi.StringPtrOutput)
}

func (o UserPhoneConfigPtrOutput) PersistentConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PersistentConnection
	}).(pulumi.BoolPtrOutput)
}

// The phone type.
func (o UserPhoneConfigPtrOutput) PhoneType() UserPhoneTypePtrOutput {
	return o.ApplyT(func(v *UserPhoneConfig) *UserPhoneType {
		if v == nil {
			return nil
		}
		return &v.PhoneType
	}).(UserPhoneTypePtrOutput)
}

// Proficiency of a user.
type UserProficiency struct {
	// The name of user’s proficiency. You must use a predefined attribute name that is present in the Amazon Connect instance.
	AttributeName string `pulumi:"attributeName"`
	// The value of user’s proficiency. You must use a predefined attribute value that is present in the Amazon Connect instance.
	AttributeValue string `pulumi:"attributeValue"`
	// The level of the proficiency. The valid values are 1, 2, 3, 4 and 5.
	Level float64 `pulumi:"level"`
}

// UserProficiencyInput is an input type that accepts UserProficiencyArgs and UserProficiencyOutput values.
// You can construct a concrete instance of `UserProficiencyInput` via:
//
//	UserProficiencyArgs{...}
type UserProficiencyInput interface {
	pulumi.Input

	ToUserProficiencyOutput() UserProficiencyOutput
	ToUserProficiencyOutputWithContext(context.Context) UserProficiencyOutput
}

// Proficiency of a user.
type UserProficiencyArgs struct {
	// The name of user’s proficiency. You must use a predefined attribute name that is present in the Amazon Connect instance.
	AttributeName pulumi.StringInput `pulumi:"attributeName"`
	// The value of user’s proficiency. You must use a predefined attribute value that is present in the Amazon Connect instance.
	AttributeValue pulumi.StringInput `pulumi:"attributeValue"`
	// The level of the proficiency. The valid values are 1, 2, 3, 4 and 5.
	Level pulumi.Float64Input `pulumi:"level"`
}

func (UserProficiencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProficiency)(nil)).Elem()
}

func (i UserProficiencyArgs) ToUserProficiencyOutput() UserProficiencyOutput {
	return i.ToUserProficiencyOutputWithContext(context.Background())
}

func (i UserProficiencyArgs) ToUserProficiencyOutputWithContext(ctx context.Context) UserProficiencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProficiencyOutput)
}

// UserProficiencyArrayInput is an input type that accepts UserProficiencyArray and UserProficiencyArrayOutput values.
// You can construct a concrete instance of `UserProficiencyArrayInput` via:
//
//	UserProficiencyArray{ UserProficiencyArgs{...} }
type UserProficiencyArrayInput interface {
	pulumi.Input

	ToUserProficiencyArrayOutput() UserProficiencyArrayOutput
	ToUserProficiencyArrayOutputWithContext(context.Context) UserProficiencyArrayOutput
}

type UserProficiencyArray []UserProficiencyInput

func (UserProficiencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProficiency)(nil)).Elem()
}

func (i UserProficiencyArray) ToUserProficiencyArrayOutput() UserProficiencyArrayOutput {
	return i.ToUserProficiencyArrayOutputWithContext(context.Background())
}

func (i UserProficiencyArray) ToUserProficiencyArrayOutputWithContext(ctx context.Context) UserProficiencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserProficiencyArrayOutput)
}

// Proficiency of a user.
type UserProficiencyOutput struct{ *pulumi.OutputState }

func (UserProficiencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProficiency)(nil)).Elem()
}

func (o UserProficiencyOutput) ToUserProficiencyOutput() UserProficiencyOutput {
	return o
}

func (o UserProficiencyOutput) ToUserProficiencyOutputWithContext(ctx context.Context) UserProficiencyOutput {
	return o
}

// The name of user’s proficiency. You must use a predefined attribute name that is present in the Amazon Connect instance.
func (o UserProficiencyOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v UserProficiency) string { return v.AttributeName }).(pulumi.StringOutput)
}

// The value of user’s proficiency. You must use a predefined attribute value that is present in the Amazon Connect instance.
func (o UserProficiencyOutput) AttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v UserProficiency) string { return v.AttributeValue }).(pulumi.StringOutput)
}

// The level of the proficiency. The valid values are 1, 2, 3, 4 and 5.
func (o UserProficiencyOutput) Level() pulumi.Float64Output {
	return o.ApplyT(func(v UserProficiency) float64 { return v.Level }).(pulumi.Float64Output)
}

type UserProficiencyArrayOutput struct{ *pulumi.OutputState }

func (UserProficiencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserProficiency)(nil)).Elem()
}

func (o UserProficiencyArrayOutput) ToUserProficiencyArrayOutput() UserProficiencyArrayOutput {
	return o
}

func (o UserProficiencyArrayOutput) ToUserProficiencyArrayOutputWithContext(ctx context.Context) UserProficiencyArrayOutput {
	return o
}

func (o UserProficiencyArrayOutput) Index(i pulumi.IntInput) UserProficiencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserProficiency {
		return vs[0].([]UserProficiency)[vs[1].(int)]
	}).(UserProficiencyOutput)
}

// A key-value pair to associate with a resource.
type UserTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The values of a predefined attribute.
type ValuesProperties struct {
	// Predefined attribute values of type string list.
	StringList []string `pulumi:"stringList"`
}

// ValuesPropertiesInput is an input type that accepts ValuesPropertiesArgs and ValuesPropertiesOutput values.
// You can construct a concrete instance of `ValuesPropertiesInput` via:
//
//	ValuesPropertiesArgs{...}
type ValuesPropertiesInput interface {
	pulumi.Input

	ToValuesPropertiesOutput() ValuesPropertiesOutput
	ToValuesPropertiesOutputWithContext(context.Context) ValuesPropertiesOutput
}

// The values of a predefined attribute.
type ValuesPropertiesArgs struct {
	// Predefined attribute values of type string list.
	StringList pulumi.StringArrayInput `pulumi:"stringList"`
}

func (ValuesPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValuesProperties)(nil)).Elem()
}

func (i ValuesPropertiesArgs) ToValuesPropertiesOutput() ValuesPropertiesOutput {
	return i.ToValuesPropertiesOutputWithContext(context.Background())
}

func (i ValuesPropertiesArgs) ToValuesPropertiesOutputWithContext(ctx context.Context) ValuesPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValuesPropertiesOutput)
}

func (i ValuesPropertiesArgs) ToValuesPropertiesPtrOutput() ValuesPropertiesPtrOutput {
	return i.ToValuesPropertiesPtrOutputWithContext(context.Background())
}

func (i ValuesPropertiesArgs) ToValuesPropertiesPtrOutputWithContext(ctx context.Context) ValuesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValuesPropertiesOutput).ToValuesPropertiesPtrOutputWithContext(ctx)
}

// ValuesPropertiesPtrInput is an input type that accepts ValuesPropertiesArgs, ValuesPropertiesPtr and ValuesPropertiesPtrOutput values.
// You can construct a concrete instance of `ValuesPropertiesPtrInput` via:
//
//	        ValuesPropertiesArgs{...}
//
//	or:
//
//	        nil
type ValuesPropertiesPtrInput interface {
	pulumi.Input

	ToValuesPropertiesPtrOutput() ValuesPropertiesPtrOutput
	ToValuesPropertiesPtrOutputWithContext(context.Context) ValuesPropertiesPtrOutput
}

type valuesPropertiesPtrType ValuesPropertiesArgs

func ValuesPropertiesPtr(v *ValuesPropertiesArgs) ValuesPropertiesPtrInput {
	return (*valuesPropertiesPtrType)(v)
}

func (*valuesPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValuesProperties)(nil)).Elem()
}

func (i *valuesPropertiesPtrType) ToValuesPropertiesPtrOutput() ValuesPropertiesPtrOutput {
	return i.ToValuesPropertiesPtrOutputWithContext(context.Background())
}

func (i *valuesPropertiesPtrType) ToValuesPropertiesPtrOutputWithContext(ctx context.Context) ValuesPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValuesPropertiesPtrOutput)
}

// The values of a predefined attribute.
type ValuesPropertiesOutput struct{ *pulumi.OutputState }

func (ValuesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValuesProperties)(nil)).Elem()
}

func (o ValuesPropertiesOutput) ToValuesPropertiesOutput() ValuesPropertiesOutput {
	return o
}

func (o ValuesPropertiesOutput) ToValuesPropertiesOutputWithContext(ctx context.Context) ValuesPropertiesOutput {
	return o
}

func (o ValuesPropertiesOutput) ToValuesPropertiesPtrOutput() ValuesPropertiesPtrOutput {
	return o.ToValuesPropertiesPtrOutputWithContext(context.Background())
}

func (o ValuesPropertiesOutput) ToValuesPropertiesPtrOutputWithContext(ctx context.Context) ValuesPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ValuesProperties) *ValuesProperties {
		return &v
	}).(ValuesPropertiesPtrOutput)
}

// Predefined attribute values of type string list.
func (o ValuesPropertiesOutput) StringList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValuesProperties) []string { return v.StringList }).(pulumi.StringArrayOutput)
}

type ValuesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ValuesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValuesProperties)(nil)).Elem()
}

func (o ValuesPropertiesPtrOutput) ToValuesPropertiesPtrOutput() ValuesPropertiesPtrOutput {
	return o
}

func (o ValuesPropertiesPtrOutput) ToValuesPropertiesPtrOutputWithContext(ctx context.Context) ValuesPropertiesPtrOutput {
	return o
}

func (o ValuesPropertiesPtrOutput) Elem() ValuesPropertiesOutput {
	return o.ApplyT(func(v *ValuesProperties) ValuesProperties {
		if v != nil {
			return *v
		}
		var ret ValuesProperties
		return ret
	}).(ValuesPropertiesOutput)
}

// Predefined attribute values of type string list.
func (o ValuesPropertiesPtrOutput) StringList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValuesProperties) []string {
		if v == nil {
			return nil
		}
		return v.StringList
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type ViewTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters
	Key string `pulumi:"key"`
	// The value for the tag. . You can specify a value that is maximum of 256 Unicode characters
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeConfigurationPropertiesInput)(nil)).Elem(), AttributeConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeConfigurationPropertiesPtrInput)(nil)).Elem(), AttributeConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConstraintsPropertiesInput)(nil)).Elem(), ConstraintsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConstraintsPropertiesPtrInput)(nil)).Elem(), ConstraintsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormAutoEvaluationConfigurationInput)(nil)).Elem(), EvaluationFormAutoEvaluationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormAutoEvaluationConfigurationPtrInput)(nil)).Elem(), EvaluationFormAutoEvaluationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormBaseItemInput)(nil)).Elem(), EvaluationFormBaseItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormBaseItemArrayInput)(nil)).Elem(), EvaluationFormBaseItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormItemInput)(nil)).Elem(), EvaluationFormItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormItemArrayInput)(nil)).Elem(), EvaluationFormItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionAutomationInput)(nil)).Elem(), EvaluationFormNumericQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionAutomationPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionOptionInput)(nil)).Elem(), EvaluationFormNumericQuestionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionOptionArrayInput)(nil)).Elem(), EvaluationFormNumericQuestionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertiesInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertiesPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormNumericQuestionPropertyValueAutomationPtrInput)(nil)).Elem(), EvaluationFormNumericQuestionPropertyValueAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionInput)(nil)).Elem(), EvaluationFormQuestionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionPtrInput)(nil)).Elem(), EvaluationFormQuestionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionTypePropertiesInput)(nil)).Elem(), EvaluationFormQuestionTypePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormQuestionTypePropertiesPtrInput)(nil)).Elem(), EvaluationFormQuestionTypePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyInput)(nil)).Elem(), EvaluationFormScoringStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormScoringStrategyPtrInput)(nil)).Elem(), EvaluationFormScoringStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSectionInput)(nil)).Elem(), EvaluationFormSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSectionPtrInput)(nil)).Elem(), EvaluationFormSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOptionInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionAutomationOptionArrayInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionAutomationOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionOptionInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionOptionArrayInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionPropertiesPtrInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvaluationFormSingleSelectQuestionRuleCategoryAutomationInput)(nil)).Elem(), EvaluationFormSingleSelectQuestionRuleCategoryAutomationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigInput)(nil)).Elem(), HoursOfOperationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationConfigArrayInput)(nil)).Elem(), HoursOfOperationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationOverrideInput)(nil)).Elem(), HoursOfOperationOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationOverrideArrayInput)(nil)).Elem(), HoursOfOperationOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationOverrideConfigInput)(nil)).Elem(), HoursOfOperationOverrideConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationOverrideConfigArrayInput)(nil)).Elem(), HoursOfOperationOverrideConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationOverrideTimeSliceInput)(nil)).Elem(), HoursOfOperationOverrideTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HoursOfOperationTimeSliceInput)(nil)).Elem(), HoursOfOperationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAttributesInput)(nil)).Elem(), InstanceAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionConfigInput)(nil)).Elem(), InstanceStorageConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigEncryptionConfigPtrInput)(nil)).Elem(), InstanceStorageConfigEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisFirehoseConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisFirehoseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfigInput)(nil)).Elem(), InstanceStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigKinesisVideoStreamConfigPtrInput)(nil)).Elem(), InstanceStorageConfigKinesisVideoStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigS3ConfigInput)(nil)).Elem(), InstanceStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStorageConfigS3ConfigPtrInput)(nil)).Elem(), InstanceStorageConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundCallerConfigPtrInput)(nil)).Elem(), QueueOutboundCallerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundEmailConfigInput)(nil)).Elem(), QueueOutboundEmailConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueOutboundEmailConfigPtrInput)(nil)).Elem(), QueueOutboundEmailConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectConfigInput)(nil)).Elem(), QuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfigInput)(nil)).Elem(), QuickConnectPhoneNumberQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectPhoneNumberQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectPhoneNumberQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQueueQuickConnectConfigInput)(nil)).Elem(), QuickConnectQueueQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectQueueQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectQueueQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectUserQuickConnectConfigInput)(nil)).Elem(), QuickConnectUserQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuickConnectUserQuickConnectConfigPtrInput)(nil)).Elem(), QuickConnectUserQuickConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileCrossChannelBehaviorInput)(nil)).Elem(), RoutingProfileCrossChannelBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileCrossChannelBehaviorPtrInput)(nil)).Elem(), RoutingProfileCrossChannelBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileMediaConcurrencyArrayInput)(nil)).Elem(), RoutingProfileMediaConcurrencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigInput)(nil)).Elem(), RoutingProfileQueueConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueConfigArrayInput)(nil)).Elem(), RoutingProfileQueueConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingProfileQueueReferenceInput)(nil)).Elem(), RoutingProfileQueueReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleActionsInput)(nil)).Elem(), RuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAssignContactCategoryActionInput)(nil)).Elem(), RuleAssignContactCategoryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleAssignContactCategoryActionArrayInput)(nil)).Elem(), RuleAssignContactCategoryActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleCreateCaseActionInput)(nil)).Elem(), RuleCreateCaseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleCreateCaseActionArrayInput)(nil)).Elem(), RuleCreateCaseActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEndAssociatedTasksActionInput)(nil)).Elem(), RuleEndAssociatedTasksActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEndAssociatedTasksActionArrayInput)(nil)).Elem(), RuleEndAssociatedTasksActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEventBridgeActionInput)(nil)).Elem(), RuleEventBridgeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEventBridgeActionArrayInput)(nil)).Elem(), RuleEventBridgeActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleFieldInput)(nil)).Elem(), RuleFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleFieldArrayInput)(nil)).Elem(), RuleFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleFieldValueInput)(nil)).Elem(), RuleFieldValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleNotificationRecipientTypeInput)(nil)).Elem(), RuleNotificationRecipientTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleReferenceInput)(nil)).Elem(), RuleReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleReferenceMapInput)(nil)).Elem(), RuleReferenceMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionInput)(nil)).Elem(), RuleSendNotificationActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSendNotificationActionArrayInput)(nil)).Elem(), RuleSendNotificationActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSubmitAutoEvaluationActionInput)(nil)).Elem(), RuleSubmitAutoEvaluationActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSubmitAutoEvaluationActionArrayInput)(nil)).Elem(), RuleSubmitAutoEvaluationActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTaskActionInput)(nil)).Elem(), RuleTaskActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTaskActionArrayInput)(nil)).Elem(), RuleTaskActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleTriggerEventSourceInput)(nil)).Elem(), RuleTriggerEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleUpdateCaseActionInput)(nil)).Elem(), RuleUpdateCaseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleUpdateCaseActionArrayInput)(nil)).Elem(), RuleUpdateCaseActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileApplicationInput)(nil)).Elem(), SecurityProfileApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileApplicationArrayInput)(nil)).Elem(), SecurityProfileApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileTagInput)(nil)).Elem(), SecurityProfileTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityProfileTagArrayInput)(nil)).Elem(), SecurityProfileTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateDefaultFieldValueInput)(nil)).Elem(), TaskTemplateDefaultFieldValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateDefaultFieldValueArrayInput)(nil)).Elem(), TaskTemplateDefaultFieldValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldInput)(nil)).Elem(), TaskTemplateFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldArrayInput)(nil)).Elem(), TaskTemplateFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateFieldIdentifierInput)(nil)).Elem(), TaskTemplateFieldIdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateInvisibleFieldInfoInput)(nil)).Elem(), TaskTemplateInvisibleFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateInvisibleFieldInfoArrayInput)(nil)).Elem(), TaskTemplateInvisibleFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateReadOnlyFieldInfoInput)(nil)).Elem(), TaskTemplateReadOnlyFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateReadOnlyFieldInfoArrayInput)(nil)).Elem(), TaskTemplateReadOnlyFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateRequiredFieldInfoInput)(nil)).Elem(), TaskTemplateRequiredFieldInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskTemplateRequiredFieldInfoArrayInput)(nil)).Elem(), TaskTemplateRequiredFieldInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelFiveInput)(nil)).Elem(), UserHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelFivePtrInput)(nil)).Elem(), UserHierarchyStructureLevelFiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelFourInput)(nil)).Elem(), UserHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelFourPtrInput)(nil)).Elem(), UserHierarchyStructureLevelFourArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelOneInput)(nil)).Elem(), UserHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelOnePtrInput)(nil)).Elem(), UserHierarchyStructureLevelOneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelThreeInput)(nil)).Elem(), UserHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelThreePtrInput)(nil)).Elem(), UserHierarchyStructureLevelThreeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelTwoInput)(nil)).Elem(), UserHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructureLevelTwoPtrInput)(nil)).Elem(), UserHierarchyStructureLevelTwoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructurePropertiesInput)(nil)).Elem(), UserHierarchyStructurePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserHierarchyStructurePropertiesPtrInput)(nil)).Elem(), UserHierarchyStructurePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserIdentityInfoPtrInput)(nil)).Elem(), UserIdentityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPhoneConfigInput)(nil)).Elem(), UserPhoneConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProficiencyInput)(nil)).Elem(), UserProficiencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserProficiencyArrayInput)(nil)).Elem(), UserProficiencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ValuesPropertiesInput)(nil)).Elem(), ValuesPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ValuesPropertiesPtrInput)(nil)).Elem(), ValuesPropertiesArgs{})
	pulumi.RegisterOutputType(AttributeConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(AttributeConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConstraintsPropertiesOutput{})
	pulumi.RegisterOutputType(ConstraintsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormAutoEvaluationConfigurationOutput{})
	pulumi.RegisterOutputType(EvaluationFormAutoEvaluationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormBaseItemOutput{})
	pulumi.RegisterOutputType(EvaluationFormBaseItemArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormItemOutput{})
	pulumi.RegisterOutputType(EvaluationFormItemArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormNumericQuestionPropertyValueAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionTypePropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormQuestionTypePropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyOutput{})
	pulumi.RegisterOutputType(EvaluationFormScoringStrategyPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSectionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSectionPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionAutomationOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionOptionOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionOptionArrayOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EvaluationFormSingleSelectQuestionRuleCategoryAutomationOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigOutput{})
	pulumi.RegisterOutputType(HoursOfOperationConfigArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationOverrideOutput{})
	pulumi.RegisterOutputType(HoursOfOperationOverrideArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationOverrideConfigOutput{})
	pulumi.RegisterOutputType(HoursOfOperationOverrideConfigArrayOutput{})
	pulumi.RegisterOutputType(HoursOfOperationOverrideTimeSliceOutput{})
	pulumi.RegisterOutputType(HoursOfOperationTimeSliceOutput{})
	pulumi.RegisterOutputType(InstanceAttributesOutput{})
	pulumi.RegisterOutputType(InstanceAttributesPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisFirehoseConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisFirehoseConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisVideoStreamConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigKinesisVideoStreamConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigS3ConfigOutput{})
	pulumi.RegisterOutputType(InstanceStorageConfigS3ConfigPtrOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigOutput{})
	pulumi.RegisterOutputType(QueueOutboundCallerConfigPtrOutput{})
	pulumi.RegisterOutputType(QueueOutboundEmailConfigOutput{})
	pulumi.RegisterOutputType(QueueOutboundEmailConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectPhoneNumberQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectPhoneNumberQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectQueueQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectQueueQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(QuickConnectUserQuickConnectConfigOutput{})
	pulumi.RegisterOutputType(QuickConnectUserQuickConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(RoutingProfileCrossChannelBehaviorOutput{})
	pulumi.RegisterOutputType(RoutingProfileCrossChannelBehaviorPtrOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyOutput{})
	pulumi.RegisterOutputType(RoutingProfileMediaConcurrencyArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueConfigArrayOutput{})
	pulumi.RegisterOutputType(RoutingProfileQueueReferenceOutput{})
	pulumi.RegisterOutputType(RuleActionsOutput{})
	pulumi.RegisterOutputType(RuleActionsPtrOutput{})
	pulumi.RegisterOutputType(RuleAssignContactCategoryActionOutput{})
	pulumi.RegisterOutputType(RuleAssignContactCategoryActionArrayOutput{})
	pulumi.RegisterOutputType(RuleCreateCaseActionOutput{})
	pulumi.RegisterOutputType(RuleCreateCaseActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEndAssociatedTasksActionOutput{})
	pulumi.RegisterOutputType(RuleEndAssociatedTasksActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEventBridgeActionOutput{})
	pulumi.RegisterOutputType(RuleEventBridgeActionArrayOutput{})
	pulumi.RegisterOutputType(RuleFieldOutput{})
	pulumi.RegisterOutputType(RuleFieldArrayOutput{})
	pulumi.RegisterOutputType(RuleFieldValueOutput{})
	pulumi.RegisterOutputType(RuleNotificationRecipientTypeOutput{})
	pulumi.RegisterOutputType(RuleReferenceOutput{})
	pulumi.RegisterOutputType(RuleReferenceMapOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionOutput{})
	pulumi.RegisterOutputType(RuleSendNotificationActionArrayOutput{})
	pulumi.RegisterOutputType(RuleSubmitAutoEvaluationActionOutput{})
	pulumi.RegisterOutputType(RuleSubmitAutoEvaluationActionArrayOutput{})
	pulumi.RegisterOutputType(RuleTaskActionOutput{})
	pulumi.RegisterOutputType(RuleTaskActionArrayOutput{})
	pulumi.RegisterOutputType(RuleTriggerEventSourceOutput{})
	pulumi.RegisterOutputType(RuleUpdateCaseActionOutput{})
	pulumi.RegisterOutputType(RuleUpdateCaseActionArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileApplicationOutput{})
	pulumi.RegisterOutputType(SecurityProfileApplicationArrayOutput{})
	pulumi.RegisterOutputType(SecurityProfileTagOutput{})
	pulumi.RegisterOutputType(SecurityProfileTagArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateDefaultFieldValueOutput{})
	pulumi.RegisterOutputType(TaskTemplateDefaultFieldValueArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateFieldIdentifierOutput{})
	pulumi.RegisterOutputType(TaskTemplateInvisibleFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateInvisibleFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateReadOnlyFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateReadOnlyFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(TaskTemplateRequiredFieldInfoOutput{})
	pulumi.RegisterOutputType(TaskTemplateRequiredFieldInfoArrayOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelFiveOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelFivePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelFourOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelFourPtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelOneOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelOnePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelThreeOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelThreePtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelTwoOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructureLevelTwoPtrOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructurePropertiesOutput{})
	pulumi.RegisterOutputType(UserHierarchyStructurePropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoOutput{})
	pulumi.RegisterOutputType(UserIdentityInfoPtrOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigOutput{})
	pulumi.RegisterOutputType(UserPhoneConfigPtrOutput{})
	pulumi.RegisterOutputType(UserProficiencyOutput{})
	pulumi.RegisterOutputType(UserProficiencyArrayOutput{})
	pulumi.RegisterOutputType(ValuesPropertiesOutput{})
	pulumi.RegisterOutputType(ValuesPropertiesPtrOutput{})
}
