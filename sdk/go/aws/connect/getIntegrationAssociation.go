// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::IntegrationAssociation
func LookupIntegrationAssociation(ctx *pulumi.Context, args *LookupIntegrationAssociationArgs, opts ...pulumi.InvokeOption) (*LookupIntegrationAssociationResult, error) {
	var rv LookupIntegrationAssociationResult
	err := ctx.Invoke("aws-native:connect:getIntegrationAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIntegrationAssociationArgs struct {
	InstanceId      string                                `pulumi:"instanceId"`
	IntegrationArn  string                                `pulumi:"integrationArn"`
	IntegrationType IntegrationAssociationIntegrationType `pulumi:"integrationType"`
}

type LookupIntegrationAssociationResult struct {
	IntegrationAssociationId *string `pulumi:"integrationAssociationId"`
}

func LookupIntegrationAssociationOutput(ctx *pulumi.Context, args LookupIntegrationAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupIntegrationAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIntegrationAssociationResult, error) {
			args := v.(LookupIntegrationAssociationArgs)
			r, err := LookupIntegrationAssociation(ctx, &args, opts...)
			var s LookupIntegrationAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIntegrationAssociationResultOutput)
}

type LookupIntegrationAssociationOutputArgs struct {
	InstanceId      pulumi.StringInput                         `pulumi:"instanceId"`
	IntegrationArn  pulumi.StringInput                         `pulumi:"integrationArn"`
	IntegrationType IntegrationAssociationIntegrationTypeInput `pulumi:"integrationType"`
}

func (LookupIntegrationAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationAssociationArgs)(nil)).Elem()
}

type LookupIntegrationAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupIntegrationAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIntegrationAssociationResult)(nil)).Elem()
}

func (o LookupIntegrationAssociationResultOutput) ToLookupIntegrationAssociationResultOutput() LookupIntegrationAssociationResultOutput {
	return o
}

func (o LookupIntegrationAssociationResultOutput) ToLookupIntegrationAssociationResultOutputWithContext(ctx context.Context) LookupIntegrationAssociationResultOutput {
	return o
}

func (o LookupIntegrationAssociationResultOutput) IntegrationAssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIntegrationAssociationResult) *string { return v.IntegrationAssociationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIntegrationAssociationResultOutput{})
}
