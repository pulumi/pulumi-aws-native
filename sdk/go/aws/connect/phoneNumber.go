// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Connect::PhoneNumber
type PhoneNumber struct {
	pulumi.CustomResourceState

	// The phone number e164 address.
	Address pulumi.StringOutput `pulumi:"address"`
	// The phone number country code.
	CountryCode pulumi.StringOutput `pulumi:"countryCode"`
	// The description of the phone number.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The phone number ARN
	PhoneNumberArn pulumi.StringOutput `pulumi:"phoneNumberArn"`
	// The phone number prefix.
	Prefix pulumi.StringPtrOutput `pulumi:"prefix"`
	// One or more tags.
	Tags PhoneNumberTagArrayOutput `pulumi:"tags"`
	// The ARN of the Amazon Connect instance the phone number is claimed to.
	TargetArn pulumi.StringOutput `pulumi:"targetArn"`
	// The phone number type, either TOLL_FREE or DID.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPhoneNumber registers a new resource with the given unique name, arguments, and options.
func NewPhoneNumber(ctx *pulumi.Context,
	name string, args *PhoneNumberArgs, opts ...pulumi.ResourceOption) (*PhoneNumber, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CountryCode == nil {
		return nil, errors.New("invalid value for required argument 'CountryCode'")
	}
	if args.TargetArn == nil {
		return nil, errors.New("invalid value for required argument 'TargetArn'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource PhoneNumber
	err := ctx.RegisterResource("aws-native:connect:PhoneNumber", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPhoneNumber gets an existing PhoneNumber resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPhoneNumber(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PhoneNumberState, opts ...pulumi.ResourceOption) (*PhoneNumber, error) {
	var resource PhoneNumber
	err := ctx.ReadResource("aws-native:connect:PhoneNumber", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PhoneNumber resources.
type phoneNumberState struct {
}

type PhoneNumberState struct {
}

func (PhoneNumberState) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneNumberState)(nil)).Elem()
}

type phoneNumberArgs struct {
	// The phone number country code.
	CountryCode string `pulumi:"countryCode"`
	// The description of the phone number.
	Description *string `pulumi:"description"`
	// The phone number prefix.
	Prefix *string `pulumi:"prefix"`
	// One or more tags.
	Tags []PhoneNumberTag `pulumi:"tags"`
	// The ARN of the Amazon Connect instance the phone number is claimed to.
	TargetArn string `pulumi:"targetArn"`
	// The phone number type, either TOLL_FREE or DID.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a PhoneNumber resource.
type PhoneNumberArgs struct {
	// The phone number country code.
	CountryCode pulumi.StringInput
	// The description of the phone number.
	Description pulumi.StringPtrInput
	// The phone number prefix.
	Prefix pulumi.StringPtrInput
	// One or more tags.
	Tags PhoneNumberTagArrayInput
	// The ARN of the Amazon Connect instance the phone number is claimed to.
	TargetArn pulumi.StringInput
	// The phone number type, either TOLL_FREE or DID.
	Type pulumi.StringInput
}

func (PhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneNumberArgs)(nil)).Elem()
}

type PhoneNumberInput interface {
	pulumi.Input

	ToPhoneNumberOutput() PhoneNumberOutput
	ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput
}

func (*PhoneNumber) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneNumber)(nil)).Elem()
}

func (i *PhoneNumber) ToPhoneNumberOutput() PhoneNumberOutput {
	return i.ToPhoneNumberOutputWithContext(context.Background())
}

func (i *PhoneNumber) ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneNumberOutput)
}

type PhoneNumberOutput struct{ *pulumi.OutputState }

func (PhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneNumber)(nil)).Elem()
}

func (o PhoneNumberOutput) ToPhoneNumberOutput() PhoneNumberOutput {
	return o
}

func (o PhoneNumberOutput) ToPhoneNumberOutputWithContext(ctx context.Context) PhoneNumberOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneNumberInput)(nil)).Elem(), &PhoneNumber{})
	pulumi.RegisterOutputType(PhoneNumberOutput{})
}
