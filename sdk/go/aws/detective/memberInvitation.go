// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package detective

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Detective::MemberInvitation
type MemberInvitation struct {
	pulumi.CustomResourceState

	// When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
	DisableEmailNotification pulumi.BoolPtrOutput `pulumi:"disableEmailNotification"`
	// The ARN of the graph to which the member account will be invited
	GraphArn pulumi.StringOutput `pulumi:"graphArn"`
	// The root email address for the account to be invited, for validation. Updating this field has no effect.
	MemberEmailAddress pulumi.StringOutput `pulumi:"memberEmailAddress"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId pulumi.StringOutput `pulumi:"memberId"`
	// A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
	Message pulumi.StringPtrOutput `pulumi:"message"`
}

// NewMemberInvitation registers a new resource with the given unique name, arguments, and options.
func NewMemberInvitation(ctx *pulumi.Context,
	name string, args *MemberInvitationArgs, opts ...pulumi.ResourceOption) (*MemberInvitation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GraphArn == nil {
		return nil, errors.New("invalid value for required argument 'GraphArn'")
	}
	if args.MemberEmailAddress == nil {
		return nil, errors.New("invalid value for required argument 'MemberEmailAddress'")
	}
	if args.MemberId == nil {
		return nil, errors.New("invalid value for required argument 'MemberId'")
	}
	var resource MemberInvitation
	err := ctx.RegisterResource("aws-native:detective:MemberInvitation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMemberInvitation gets an existing MemberInvitation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMemberInvitation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberInvitationState, opts ...pulumi.ResourceOption) (*MemberInvitation, error) {
	var resource MemberInvitation
	err := ctx.ReadResource("aws-native:detective:MemberInvitation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MemberInvitation resources.
type memberInvitationState struct {
}

type MemberInvitationState struct {
}

func (MemberInvitationState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberInvitationState)(nil)).Elem()
}

type memberInvitationArgs struct {
	// When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
	DisableEmailNotification *bool `pulumi:"disableEmailNotification"`
	// The ARN of the graph to which the member account will be invited
	GraphArn string `pulumi:"graphArn"`
	// The root email address for the account to be invited, for validation. Updating this field has no effect.
	MemberEmailAddress string `pulumi:"memberEmailAddress"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId string `pulumi:"memberId"`
	// A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
	Message *string `pulumi:"message"`
}

// The set of arguments for constructing a MemberInvitation resource.
type MemberInvitationArgs struct {
	// When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
	DisableEmailNotification pulumi.BoolPtrInput
	// The ARN of the graph to which the member account will be invited
	GraphArn pulumi.StringInput
	// The root email address for the account to be invited, for validation. Updating this field has no effect.
	MemberEmailAddress pulumi.StringInput
	// The AWS account ID to be invited to join the graph as a member
	MemberId pulumi.StringInput
	// A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
	Message pulumi.StringPtrInput
}

func (MemberInvitationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberInvitationArgs)(nil)).Elem()
}

type MemberInvitationInput interface {
	pulumi.Input

	ToMemberInvitationOutput() MemberInvitationOutput
	ToMemberInvitationOutputWithContext(ctx context.Context) MemberInvitationOutput
}

func (*MemberInvitation) ElementType() reflect.Type {
	return reflect.TypeOf((*MemberInvitation)(nil))
}

func (i *MemberInvitation) ToMemberInvitationOutput() MemberInvitationOutput {
	return i.ToMemberInvitationOutputWithContext(context.Background())
}

func (i *MemberInvitation) ToMemberInvitationOutputWithContext(ctx context.Context) MemberInvitationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberInvitationOutput)
}

type MemberInvitationOutput struct{ *pulumi.OutputState }

func (MemberInvitationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemberInvitation)(nil))
}

func (o MemberInvitationOutput) ToMemberInvitationOutput() MemberInvitationOutput {
	return o
}

func (o MemberInvitationOutput) ToMemberInvitationOutputWithContext(ctx context.Context) MemberInvitationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MemberInvitationInput)(nil)).Elem(), &MemberInvitation{})
	pulumi.RegisterOutputType(MemberInvitationOutput{})
}
