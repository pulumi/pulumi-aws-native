// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package detective

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Detective::MemberInvitation
func LookupMemberInvitation(ctx *pulumi.Context, args *LookupMemberInvitationArgs, opts ...pulumi.InvokeOption) (*LookupMemberInvitationResult, error) {
	var rv LookupMemberInvitationResult
	err := ctx.Invoke("aws-native:detective:getMemberInvitation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMemberInvitationArgs struct {
	// The ARN of the graph to which the member account will be invited
	GraphArn string `pulumi:"graphArn"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId string `pulumi:"memberId"`
}

type LookupMemberInvitationResult struct {
	// When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
	DisableEmailNotification *bool `pulumi:"disableEmailNotification"`
	// The root email address for the account to be invited, for validation. Updating this field has no effect.
	MemberEmailAddress *string `pulumi:"memberEmailAddress"`
	// A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
	Message *string `pulumi:"message"`
}

func LookupMemberInvitationOutput(ctx *pulumi.Context, args LookupMemberInvitationOutputArgs, opts ...pulumi.InvokeOption) LookupMemberInvitationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMemberInvitationResult, error) {
			args := v.(LookupMemberInvitationArgs)
			r, err := LookupMemberInvitation(ctx, &args, opts...)
			var s LookupMemberInvitationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMemberInvitationResultOutput)
}

type LookupMemberInvitationOutputArgs struct {
	// The ARN of the graph to which the member account will be invited
	GraphArn pulumi.StringInput `pulumi:"graphArn"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId pulumi.StringInput `pulumi:"memberId"`
}

func (LookupMemberInvitationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemberInvitationArgs)(nil)).Elem()
}

type LookupMemberInvitationResultOutput struct{ *pulumi.OutputState }

func (LookupMemberInvitationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemberInvitationResult)(nil)).Elem()
}

func (o LookupMemberInvitationResultOutput) ToLookupMemberInvitationResultOutput() LookupMemberInvitationResultOutput {
	return o
}

func (o LookupMemberInvitationResultOutput) ToLookupMemberInvitationResultOutputWithContext(ctx context.Context) LookupMemberInvitationResultOutput {
	return o
}

// When set to true, invitation emails are not sent to the member accounts. Member accounts must still accept the invitation before they are added to the behavior graph. Updating this field has no effect.
func (o LookupMemberInvitationResultOutput) DisableEmailNotification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupMemberInvitationResult) *bool { return v.DisableEmailNotification }).(pulumi.BoolPtrOutput)
}

// The root email address for the account to be invited, for validation. Updating this field has no effect.
func (o LookupMemberInvitationResultOutput) MemberEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemberInvitationResult) *string { return v.MemberEmailAddress }).(pulumi.StringPtrOutput)
}

// A message to be included in the email invitation sent to the invited account. Updating this field has no effect.
func (o LookupMemberInvitationResultOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemberInvitationResult) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMemberInvitationResultOutput{})
}
