// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package detective

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource schema for AWS::Detective::MemberInvitation
func LookupMemberInvitation(ctx *pulumi.Context, args *LookupMemberInvitationArgs, opts ...pulumi.InvokeOption) (*LookupMemberInvitationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMemberInvitationResult
	err := ctx.Invoke("aws-native:detective:getMemberInvitation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMemberInvitationArgs struct {
	// The ARN of the graph to which the member account will be invited
	GraphArn string `pulumi:"graphArn"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId string `pulumi:"memberId"`
}

type LookupMemberInvitationResult struct {
	// The root email address for the account to be invited, for validation. Updating this field has no effect.
	MemberEmailAddress *string `pulumi:"memberEmailAddress"`
}

func LookupMemberInvitationOutput(ctx *pulumi.Context, args LookupMemberInvitationOutputArgs, opts ...pulumi.InvokeOption) LookupMemberInvitationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMemberInvitationResult, error) {
			args := v.(LookupMemberInvitationArgs)
			r, err := LookupMemberInvitation(ctx, &args, opts...)
			var s LookupMemberInvitationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMemberInvitationResultOutput)
}

type LookupMemberInvitationOutputArgs struct {
	// The ARN of the graph to which the member account will be invited
	GraphArn pulumi.StringInput `pulumi:"graphArn"`
	// The AWS account ID to be invited to join the graph as a member
	MemberId pulumi.StringInput `pulumi:"memberId"`
}

func (LookupMemberInvitationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemberInvitationArgs)(nil)).Elem()
}

type LookupMemberInvitationResultOutput struct{ *pulumi.OutputState }

func (LookupMemberInvitationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMemberInvitationResult)(nil)).Elem()
}

func (o LookupMemberInvitationResultOutput) ToLookupMemberInvitationResultOutput() LookupMemberInvitationResultOutput {
	return o
}

func (o LookupMemberInvitationResultOutput) ToLookupMemberInvitationResultOutputWithContext(ctx context.Context) LookupMemberInvitationResultOutput {
	return o
}

func (o LookupMemberInvitationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupMemberInvitationResult] {
	return pulumix.Output[LookupMemberInvitationResult]{
		OutputState: o.OutputState,
	}
}

// The root email address for the account to be invited, for validation. Updating this field has no effect.
func (o LookupMemberInvitationResultOutput) MemberEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMemberInvitationResult) *string { return v.MemberEmailAddress }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMemberInvitationResultOutput{})
}
