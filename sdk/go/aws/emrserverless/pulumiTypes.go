// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// Configuration for Auto Start of Application
type ApplicationAutoStartConfiguration struct {
	// If set to true, the Application will automatically start. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
}

// ApplicationAutoStartConfigurationInput is an input type that accepts ApplicationAutoStartConfigurationArgs and ApplicationAutoStartConfigurationOutput values.
// You can construct a concrete instance of `ApplicationAutoStartConfigurationInput` via:
//
//	ApplicationAutoStartConfigurationArgs{...}
type ApplicationAutoStartConfigurationInput interface {
	pulumi.Input

	ToApplicationAutoStartConfigurationOutput() ApplicationAutoStartConfigurationOutput
	ToApplicationAutoStartConfigurationOutputWithContext(context.Context) ApplicationAutoStartConfigurationOutput
}

// Configuration for Auto Start of Application
type ApplicationAutoStartConfigurationArgs struct {
	// If set to true, the Application will automatically start. Defaults to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ApplicationAutoStartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationOutput() ApplicationAutoStartConfigurationOutput {
	return i.ToApplicationAutoStartConfigurationOutputWithContext(context.Background())
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStartConfigurationOutput)
}

func (i ApplicationAutoStartConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStartConfiguration] {
	return pulumix.Output[ApplicationAutoStartConfiguration]{
		OutputState: i.ToApplicationAutoStartConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationPtrOutput() ApplicationAutoStartConfigurationPtrOutput {
	return i.ToApplicationAutoStartConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStartConfigurationOutput).ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx)
}

// ApplicationAutoStartConfigurationPtrInput is an input type that accepts ApplicationAutoStartConfigurationArgs, ApplicationAutoStartConfigurationPtr and ApplicationAutoStartConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationAutoStartConfigurationPtrInput` via:
//
//	        ApplicationAutoStartConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationAutoStartConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationAutoStartConfigurationPtrOutput() ApplicationAutoStartConfigurationPtrOutput
	ToApplicationAutoStartConfigurationPtrOutputWithContext(context.Context) ApplicationAutoStartConfigurationPtrOutput
}

type applicationAutoStartConfigurationPtrType ApplicationAutoStartConfigurationArgs

func ApplicationAutoStartConfigurationPtr(v *ApplicationAutoStartConfigurationArgs) ApplicationAutoStartConfigurationPtrInput {
	return (*applicationAutoStartConfigurationPtrType)(v)
}

func (*applicationAutoStartConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (i *applicationAutoStartConfigurationPtrType) ToApplicationAutoStartConfigurationPtrOutput() ApplicationAutoStartConfigurationPtrOutput {
	return i.ToApplicationAutoStartConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationAutoStartConfigurationPtrType) ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStartConfigurationPtrOutput)
}

func (i *applicationAutoStartConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStartConfiguration] {
	return pulumix.Output[*ApplicationAutoStartConfiguration]{
		OutputState: i.ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// Configuration for Auto Start of Application
type ApplicationAutoStartConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationOutput() ApplicationAutoStartConfigurationOutput {
	return o
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationOutput {
	return o
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationPtrOutput() ApplicationAutoStartConfigurationPtrOutput {
	return o.ToApplicationAutoStartConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationAutoStartConfiguration) *ApplicationAutoStartConfiguration {
		return &v
	}).(ApplicationAutoStartConfigurationPtrOutput)
}

func (o ApplicationAutoStartConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStartConfiguration] {
	return pulumix.Output[ApplicationAutoStartConfiguration]{
		OutputState: o.OutputState,
	}
}

// If set to true, the Application will automatically start. Defaults to true.
func (o ApplicationAutoStartConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationAutoStartConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ApplicationAutoStartConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStartConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStartConfigurationPtrOutput) ToApplicationAutoStartConfigurationPtrOutput() ApplicationAutoStartConfigurationPtrOutput {
	return o
}

func (o ApplicationAutoStartConfigurationPtrOutput) ToApplicationAutoStartConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationPtrOutput {
	return o
}

func (o ApplicationAutoStartConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStartConfiguration] {
	return pulumix.Output[*ApplicationAutoStartConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationAutoStartConfigurationPtrOutput) Elem() ApplicationAutoStartConfigurationOutput {
	return o.ApplyT(func(v *ApplicationAutoStartConfiguration) ApplicationAutoStartConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationAutoStartConfiguration
		return ret
	}).(ApplicationAutoStartConfigurationOutput)
}

// If set to true, the Application will automatically start. Defaults to true.
func (o ApplicationAutoStartConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationAutoStartConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration for Auto Stop of Application
type ApplicationAutoStopConfiguration struct {
	// If set to true, the Application will automatically stop after being idle. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
	IdleTimeoutMinutes *int `pulumi:"idleTimeoutMinutes"`
}

// ApplicationAutoStopConfigurationInput is an input type that accepts ApplicationAutoStopConfigurationArgs and ApplicationAutoStopConfigurationOutput values.
// You can construct a concrete instance of `ApplicationAutoStopConfigurationInput` via:
//
//	ApplicationAutoStopConfigurationArgs{...}
type ApplicationAutoStopConfigurationInput interface {
	pulumi.Input

	ToApplicationAutoStopConfigurationOutput() ApplicationAutoStopConfigurationOutput
	ToApplicationAutoStopConfigurationOutputWithContext(context.Context) ApplicationAutoStopConfigurationOutput
}

// Configuration for Auto Stop of Application
type ApplicationAutoStopConfigurationArgs struct {
	// If set to true, the Application will automatically stop after being idle. Defaults to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
	IdleTimeoutMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutMinutes"`
}

func (ApplicationAutoStopConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationOutput() ApplicationAutoStopConfigurationOutput {
	return i.ToApplicationAutoStopConfigurationOutputWithContext(context.Background())
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStopConfigurationOutput)
}

func (i ApplicationAutoStopConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStopConfiguration] {
	return pulumix.Output[ApplicationAutoStopConfiguration]{
		OutputState: i.ToApplicationAutoStopConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationPtrOutput() ApplicationAutoStopConfigurationPtrOutput {
	return i.ToApplicationAutoStopConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStopConfigurationOutput).ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx)
}

// ApplicationAutoStopConfigurationPtrInput is an input type that accepts ApplicationAutoStopConfigurationArgs, ApplicationAutoStopConfigurationPtr and ApplicationAutoStopConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationAutoStopConfigurationPtrInput` via:
//
//	        ApplicationAutoStopConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationAutoStopConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationAutoStopConfigurationPtrOutput() ApplicationAutoStopConfigurationPtrOutput
	ToApplicationAutoStopConfigurationPtrOutputWithContext(context.Context) ApplicationAutoStopConfigurationPtrOutput
}

type applicationAutoStopConfigurationPtrType ApplicationAutoStopConfigurationArgs

func ApplicationAutoStopConfigurationPtr(v *ApplicationAutoStopConfigurationArgs) ApplicationAutoStopConfigurationPtrInput {
	return (*applicationAutoStopConfigurationPtrType)(v)
}

func (*applicationAutoStopConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (i *applicationAutoStopConfigurationPtrType) ToApplicationAutoStopConfigurationPtrOutput() ApplicationAutoStopConfigurationPtrOutput {
	return i.ToApplicationAutoStopConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationAutoStopConfigurationPtrType) ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStopConfigurationPtrOutput)
}

func (i *applicationAutoStopConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStopConfiguration] {
	return pulumix.Output[*ApplicationAutoStopConfiguration]{
		OutputState: i.ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

// Configuration for Auto Stop of Application
type ApplicationAutoStopConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStopConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationOutput() ApplicationAutoStopConfigurationOutput {
	return o
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationOutput {
	return o
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationPtrOutput() ApplicationAutoStopConfigurationPtrOutput {
	return o.ToApplicationAutoStopConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationAutoStopConfiguration) *ApplicationAutoStopConfiguration {
		return &v
	}).(ApplicationAutoStopConfigurationPtrOutput)
}

func (o ApplicationAutoStopConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStopConfiguration] {
	return pulumix.Output[ApplicationAutoStopConfiguration]{
		OutputState: o.OutputState,
	}
}

// If set to true, the Application will automatically stop after being idle. Defaults to true.
func (o ApplicationAutoStopConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationAutoStopConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
func (o ApplicationAutoStopConfigurationOutput) IdleTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationAutoStopConfiguration) *int { return v.IdleTimeoutMinutes }).(pulumi.IntPtrOutput)
}

type ApplicationAutoStopConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStopConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStopConfigurationPtrOutput) ToApplicationAutoStopConfigurationPtrOutput() ApplicationAutoStopConfigurationPtrOutput {
	return o
}

func (o ApplicationAutoStopConfigurationPtrOutput) ToApplicationAutoStopConfigurationPtrOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationPtrOutput {
	return o
}

func (o ApplicationAutoStopConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStopConfiguration] {
	return pulumix.Output[*ApplicationAutoStopConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationAutoStopConfigurationPtrOutput) Elem() ApplicationAutoStopConfigurationOutput {
	return o.ApplyT(func(v *ApplicationAutoStopConfiguration) ApplicationAutoStopConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationAutoStopConfiguration
		return ret
	}).(ApplicationAutoStopConfigurationOutput)
}

// If set to true, the Application will automatically stop after being idle. Defaults to true.
func (o ApplicationAutoStopConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationAutoStopConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
func (o ApplicationAutoStopConfigurationPtrOutput) IdleTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationAutoStopConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// The image configuration.
type ApplicationImageConfigurationInput struct {
	// The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
	ImageUri *string `pulumi:"imageUri"`
}

// ApplicationImageConfigurationInputInput is an input type that accepts ApplicationImageConfigurationInputArgs and ApplicationImageConfigurationInputOutput values.
// You can construct a concrete instance of `ApplicationImageConfigurationInputInput` via:
//
//	ApplicationImageConfigurationInputArgs{...}
type ApplicationImageConfigurationInputInput interface {
	pulumi.Input

	ToApplicationImageConfigurationInputOutput() ApplicationImageConfigurationInputOutput
	ToApplicationImageConfigurationInputOutputWithContext(context.Context) ApplicationImageConfigurationInputOutput
}

// The image configuration.
type ApplicationImageConfigurationInputArgs struct {
	// The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
	ImageUri pulumi.StringPtrInput `pulumi:"imageUri"`
}

func (ApplicationImageConfigurationInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImageConfigurationInput)(nil)).Elem()
}

func (i ApplicationImageConfigurationInputArgs) ToApplicationImageConfigurationInputOutput() ApplicationImageConfigurationInputOutput {
	return i.ToApplicationImageConfigurationInputOutputWithContext(context.Background())
}

func (i ApplicationImageConfigurationInputArgs) ToApplicationImageConfigurationInputOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImageConfigurationInputOutput)
}

func (i ApplicationImageConfigurationInputArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationImageConfigurationInput] {
	return pulumix.Output[ApplicationImageConfigurationInput]{
		OutputState: i.ToApplicationImageConfigurationInputOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationImageConfigurationInputArgs) ToApplicationImageConfigurationInputPtrOutput() ApplicationImageConfigurationInputPtrOutput {
	return i.ToApplicationImageConfigurationInputPtrOutputWithContext(context.Background())
}

func (i ApplicationImageConfigurationInputArgs) ToApplicationImageConfigurationInputPtrOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImageConfigurationInputOutput).ToApplicationImageConfigurationInputPtrOutputWithContext(ctx)
}

// ApplicationImageConfigurationInputPtrInput is an input type that accepts ApplicationImageConfigurationInputArgs, ApplicationImageConfigurationInputPtr and ApplicationImageConfigurationInputPtrOutput values.
// You can construct a concrete instance of `ApplicationImageConfigurationInputPtrInput` via:
//
//	        ApplicationImageConfigurationInputArgs{...}
//
//	or:
//
//	        nil
type ApplicationImageConfigurationInputPtrInput interface {
	pulumi.Input

	ToApplicationImageConfigurationInputPtrOutput() ApplicationImageConfigurationInputPtrOutput
	ToApplicationImageConfigurationInputPtrOutputWithContext(context.Context) ApplicationImageConfigurationInputPtrOutput
}

type applicationImageConfigurationInputPtrType ApplicationImageConfigurationInputArgs

func ApplicationImageConfigurationInputPtr(v *ApplicationImageConfigurationInputArgs) ApplicationImageConfigurationInputPtrInput {
	return (*applicationImageConfigurationInputPtrType)(v)
}

func (*applicationImageConfigurationInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationImageConfigurationInput)(nil)).Elem()
}

func (i *applicationImageConfigurationInputPtrType) ToApplicationImageConfigurationInputPtrOutput() ApplicationImageConfigurationInputPtrOutput {
	return i.ToApplicationImageConfigurationInputPtrOutputWithContext(context.Background())
}

func (i *applicationImageConfigurationInputPtrType) ToApplicationImageConfigurationInputPtrOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImageConfigurationInputPtrOutput)
}

func (i *applicationImageConfigurationInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationImageConfigurationInput] {
	return pulumix.Output[*ApplicationImageConfigurationInput]{
		OutputState: i.ToApplicationImageConfigurationInputPtrOutputWithContext(ctx).OutputState,
	}
}

// The image configuration.
type ApplicationImageConfigurationInputOutput struct{ *pulumi.OutputState }

func (ApplicationImageConfigurationInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImageConfigurationInput)(nil)).Elem()
}

func (o ApplicationImageConfigurationInputOutput) ToApplicationImageConfigurationInputOutput() ApplicationImageConfigurationInputOutput {
	return o
}

func (o ApplicationImageConfigurationInputOutput) ToApplicationImageConfigurationInputOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputOutput {
	return o
}

func (o ApplicationImageConfigurationInputOutput) ToApplicationImageConfigurationInputPtrOutput() ApplicationImageConfigurationInputPtrOutput {
	return o.ToApplicationImageConfigurationInputPtrOutputWithContext(context.Background())
}

func (o ApplicationImageConfigurationInputOutput) ToApplicationImageConfigurationInputPtrOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationImageConfigurationInput) *ApplicationImageConfigurationInput {
		return &v
	}).(ApplicationImageConfigurationInputPtrOutput)
}

func (o ApplicationImageConfigurationInputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationImageConfigurationInput] {
	return pulumix.Output[ApplicationImageConfigurationInput]{
		OutputState: o.OutputState,
	}
}

// The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
func (o ApplicationImageConfigurationInputOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationImageConfigurationInput) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

type ApplicationImageConfigurationInputPtrOutput struct{ *pulumi.OutputState }

func (ApplicationImageConfigurationInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationImageConfigurationInput)(nil)).Elem()
}

func (o ApplicationImageConfigurationInputPtrOutput) ToApplicationImageConfigurationInputPtrOutput() ApplicationImageConfigurationInputPtrOutput {
	return o
}

func (o ApplicationImageConfigurationInputPtrOutput) ToApplicationImageConfigurationInputPtrOutputWithContext(ctx context.Context) ApplicationImageConfigurationInputPtrOutput {
	return o
}

func (o ApplicationImageConfigurationInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationImageConfigurationInput] {
	return pulumix.Output[*ApplicationImageConfigurationInput]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationImageConfigurationInputPtrOutput) Elem() ApplicationImageConfigurationInputOutput {
	return o.ApplyT(func(v *ApplicationImageConfigurationInput) ApplicationImageConfigurationInput {
		if v != nil {
			return *v
		}
		var ret ApplicationImageConfigurationInput
		return ret
	}).(ApplicationImageConfigurationInputOutput)
}

// The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
func (o ApplicationImageConfigurationInputPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationImageConfigurationInput) *string {
		if v == nil {
			return nil
		}
		return v.ImageUri
	}).(pulumi.StringPtrOutput)
}

type ApplicationInitialCapacityConfig struct {
	WorkerConfiguration ApplicationWorkerConfiguration `pulumi:"workerConfiguration"`
	// Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
	WorkerCount int `pulumi:"workerCount"`
}

// ApplicationInitialCapacityConfigInput is an input type that accepts ApplicationInitialCapacityConfigArgs and ApplicationInitialCapacityConfigOutput values.
// You can construct a concrete instance of `ApplicationInitialCapacityConfigInput` via:
//
//	ApplicationInitialCapacityConfigArgs{...}
type ApplicationInitialCapacityConfigInput interface {
	pulumi.Input

	ToApplicationInitialCapacityConfigOutput() ApplicationInitialCapacityConfigOutput
	ToApplicationInitialCapacityConfigOutputWithContext(context.Context) ApplicationInitialCapacityConfigOutput
}

type ApplicationInitialCapacityConfigArgs struct {
	WorkerConfiguration ApplicationWorkerConfigurationInput `pulumi:"workerConfiguration"`
	// Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
	WorkerCount pulumi.IntInput `pulumi:"workerCount"`
}

func (ApplicationInitialCapacityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityConfig)(nil)).Elem()
}

func (i ApplicationInitialCapacityConfigArgs) ToApplicationInitialCapacityConfigOutput() ApplicationInitialCapacityConfigOutput {
	return i.ToApplicationInitialCapacityConfigOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityConfigArgs) ToApplicationInitialCapacityConfigOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityConfigOutput)
}

func (i ApplicationInitialCapacityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityConfig] {
	return pulumix.Output[ApplicationInitialCapacityConfig]{
		OutputState: i.ToApplicationInitialCapacityConfigOutputWithContext(ctx).OutputState,
	}
}

type ApplicationInitialCapacityConfigOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityConfig)(nil)).Elem()
}

func (o ApplicationInitialCapacityConfigOutput) ToApplicationInitialCapacityConfigOutput() ApplicationInitialCapacityConfigOutput {
	return o
}

func (o ApplicationInitialCapacityConfigOutput) ToApplicationInitialCapacityConfigOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigOutput {
	return o
}

func (o ApplicationInitialCapacityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityConfig] {
	return pulumix.Output[ApplicationInitialCapacityConfig]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInitialCapacityConfigOutput) WorkerConfiguration() ApplicationWorkerConfigurationOutput {
	return o.ApplyT(func(v ApplicationInitialCapacityConfig) ApplicationWorkerConfiguration { return v.WorkerConfiguration }).(ApplicationWorkerConfigurationOutput)
}

// Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
func (o ApplicationInitialCapacityConfigOutput) WorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationInitialCapacityConfig) int { return v.WorkerCount }).(pulumi.IntOutput)
}

type ApplicationInitialCapacityConfigKeyValuePair struct {
	// Worker type for an analytics framework.
	Key   string                           `pulumi:"key"`
	Value ApplicationInitialCapacityConfig `pulumi:"value"`
}

// ApplicationInitialCapacityConfigKeyValuePairInput is an input type that accepts ApplicationInitialCapacityConfigKeyValuePairArgs and ApplicationInitialCapacityConfigKeyValuePairOutput values.
// You can construct a concrete instance of `ApplicationInitialCapacityConfigKeyValuePairInput` via:
//
//	ApplicationInitialCapacityConfigKeyValuePairArgs{...}
type ApplicationInitialCapacityConfigKeyValuePairInput interface {
	pulumi.Input

	ToApplicationInitialCapacityConfigKeyValuePairOutput() ApplicationInitialCapacityConfigKeyValuePairOutput
	ToApplicationInitialCapacityConfigKeyValuePairOutputWithContext(context.Context) ApplicationInitialCapacityConfigKeyValuePairOutput
}

type ApplicationInitialCapacityConfigKeyValuePairArgs struct {
	// Worker type for an analytics framework.
	Key   pulumi.StringInput                    `pulumi:"key"`
	Value ApplicationInitialCapacityConfigInput `pulumi:"value"`
}

func (ApplicationInitialCapacityConfigKeyValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityConfigKeyValuePair)(nil)).Elem()
}

func (i ApplicationInitialCapacityConfigKeyValuePairArgs) ToApplicationInitialCapacityConfigKeyValuePairOutput() ApplicationInitialCapacityConfigKeyValuePairOutput {
	return i.ToApplicationInitialCapacityConfigKeyValuePairOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityConfigKeyValuePairArgs) ToApplicationInitialCapacityConfigKeyValuePairOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigKeyValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityConfigKeyValuePairOutput)
}

func (i ApplicationInitialCapacityConfigKeyValuePairArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityConfigKeyValuePair] {
	return pulumix.Output[ApplicationInitialCapacityConfigKeyValuePair]{
		OutputState: i.ToApplicationInitialCapacityConfigKeyValuePairOutputWithContext(ctx).OutputState,
	}
}

// ApplicationInitialCapacityConfigKeyValuePairArrayInput is an input type that accepts ApplicationInitialCapacityConfigKeyValuePairArray and ApplicationInitialCapacityConfigKeyValuePairArrayOutput values.
// You can construct a concrete instance of `ApplicationInitialCapacityConfigKeyValuePairArrayInput` via:
//
//	ApplicationInitialCapacityConfigKeyValuePairArray{ ApplicationInitialCapacityConfigKeyValuePairArgs{...} }
type ApplicationInitialCapacityConfigKeyValuePairArrayInput interface {
	pulumi.Input

	ToApplicationInitialCapacityConfigKeyValuePairArrayOutput() ApplicationInitialCapacityConfigKeyValuePairArrayOutput
	ToApplicationInitialCapacityConfigKeyValuePairArrayOutputWithContext(context.Context) ApplicationInitialCapacityConfigKeyValuePairArrayOutput
}

type ApplicationInitialCapacityConfigKeyValuePairArray []ApplicationInitialCapacityConfigKeyValuePairInput

func (ApplicationInitialCapacityConfigKeyValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInitialCapacityConfigKeyValuePair)(nil)).Elem()
}

func (i ApplicationInitialCapacityConfigKeyValuePairArray) ToApplicationInitialCapacityConfigKeyValuePairArrayOutput() ApplicationInitialCapacityConfigKeyValuePairArrayOutput {
	return i.ToApplicationInitialCapacityConfigKeyValuePairArrayOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityConfigKeyValuePairArray) ToApplicationInitialCapacityConfigKeyValuePairArrayOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigKeyValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityConfigKeyValuePairArrayOutput)
}

func (i ApplicationInitialCapacityConfigKeyValuePairArray) ToOutput(ctx context.Context) pulumix.Output[[]ApplicationInitialCapacityConfigKeyValuePair] {
	return pulumix.Output[[]ApplicationInitialCapacityConfigKeyValuePair]{
		OutputState: i.ToApplicationInitialCapacityConfigKeyValuePairArrayOutputWithContext(ctx).OutputState,
	}
}

type ApplicationInitialCapacityConfigKeyValuePairOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityConfigKeyValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityConfigKeyValuePair)(nil)).Elem()
}

func (o ApplicationInitialCapacityConfigKeyValuePairOutput) ToApplicationInitialCapacityConfigKeyValuePairOutput() ApplicationInitialCapacityConfigKeyValuePairOutput {
	return o
}

func (o ApplicationInitialCapacityConfigKeyValuePairOutput) ToApplicationInitialCapacityConfigKeyValuePairOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigKeyValuePairOutput {
	return o
}

func (o ApplicationInitialCapacityConfigKeyValuePairOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityConfigKeyValuePair] {
	return pulumix.Output[ApplicationInitialCapacityConfigKeyValuePair]{
		OutputState: o.OutputState,
	}
}

// Worker type for an analytics framework.
func (o ApplicationInitialCapacityConfigKeyValuePairOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationInitialCapacityConfigKeyValuePair) string { return v.Key }).(pulumi.StringOutput)
}

func (o ApplicationInitialCapacityConfigKeyValuePairOutput) Value() ApplicationInitialCapacityConfigOutput {
	return o.ApplyT(func(v ApplicationInitialCapacityConfigKeyValuePair) ApplicationInitialCapacityConfig { return v.Value }).(ApplicationInitialCapacityConfigOutput)
}

type ApplicationInitialCapacityConfigKeyValuePairArrayOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityConfigKeyValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInitialCapacityConfigKeyValuePair)(nil)).Elem()
}

func (o ApplicationInitialCapacityConfigKeyValuePairArrayOutput) ToApplicationInitialCapacityConfigKeyValuePairArrayOutput() ApplicationInitialCapacityConfigKeyValuePairArrayOutput {
	return o
}

func (o ApplicationInitialCapacityConfigKeyValuePairArrayOutput) ToApplicationInitialCapacityConfigKeyValuePairArrayOutputWithContext(ctx context.Context) ApplicationInitialCapacityConfigKeyValuePairArrayOutput {
	return o
}

func (o ApplicationInitialCapacityConfigKeyValuePairArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ApplicationInitialCapacityConfigKeyValuePair] {
	return pulumix.Output[[]ApplicationInitialCapacityConfigKeyValuePair]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationInitialCapacityConfigKeyValuePairArrayOutput) Index(i pulumi.IntInput) ApplicationInitialCapacityConfigKeyValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationInitialCapacityConfigKeyValuePair {
		return vs[0].([]ApplicationInitialCapacityConfigKeyValuePair)[vs[1].(int)]
	}).(ApplicationInitialCapacityConfigKeyValuePairOutput)
}

type ApplicationMaximumAllowedResources struct {
	// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
	Cpu string `pulumi:"cpu"`
	// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
	Disk *string `pulumi:"disk"`
	// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
	Memory string `pulumi:"memory"`
}

// ApplicationMaximumAllowedResourcesInput is an input type that accepts ApplicationMaximumAllowedResourcesArgs and ApplicationMaximumAllowedResourcesOutput values.
// You can construct a concrete instance of `ApplicationMaximumAllowedResourcesInput` via:
//
//	ApplicationMaximumAllowedResourcesArgs{...}
type ApplicationMaximumAllowedResourcesInput interface {
	pulumi.Input

	ToApplicationMaximumAllowedResourcesOutput() ApplicationMaximumAllowedResourcesOutput
	ToApplicationMaximumAllowedResourcesOutputWithContext(context.Context) ApplicationMaximumAllowedResourcesOutput
}

type ApplicationMaximumAllowedResourcesArgs struct {
	// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
	Cpu pulumi.StringInput `pulumi:"cpu"`
	// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
	Disk pulumi.StringPtrInput `pulumi:"disk"`
	// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
	Memory pulumi.StringInput `pulumi:"memory"`
}

func (ApplicationMaximumAllowedResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaximumAllowedResources)(nil)).Elem()
}

func (i ApplicationMaximumAllowedResourcesArgs) ToApplicationMaximumAllowedResourcesOutput() ApplicationMaximumAllowedResourcesOutput {
	return i.ToApplicationMaximumAllowedResourcesOutputWithContext(context.Background())
}

func (i ApplicationMaximumAllowedResourcesArgs) ToApplicationMaximumAllowedResourcesOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaximumAllowedResourcesOutput)
}

func (i ApplicationMaximumAllowedResourcesArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationMaximumAllowedResources] {
	return pulumix.Output[ApplicationMaximumAllowedResources]{
		OutputState: i.ToApplicationMaximumAllowedResourcesOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationMaximumAllowedResourcesArgs) ToApplicationMaximumAllowedResourcesPtrOutput() ApplicationMaximumAllowedResourcesPtrOutput {
	return i.ToApplicationMaximumAllowedResourcesPtrOutputWithContext(context.Background())
}

func (i ApplicationMaximumAllowedResourcesArgs) ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaximumAllowedResourcesOutput).ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx)
}

// ApplicationMaximumAllowedResourcesPtrInput is an input type that accepts ApplicationMaximumAllowedResourcesArgs, ApplicationMaximumAllowedResourcesPtr and ApplicationMaximumAllowedResourcesPtrOutput values.
// You can construct a concrete instance of `ApplicationMaximumAllowedResourcesPtrInput` via:
//
//	        ApplicationMaximumAllowedResourcesArgs{...}
//
//	or:
//
//	        nil
type ApplicationMaximumAllowedResourcesPtrInput interface {
	pulumi.Input

	ToApplicationMaximumAllowedResourcesPtrOutput() ApplicationMaximumAllowedResourcesPtrOutput
	ToApplicationMaximumAllowedResourcesPtrOutputWithContext(context.Context) ApplicationMaximumAllowedResourcesPtrOutput
}

type applicationMaximumAllowedResourcesPtrType ApplicationMaximumAllowedResourcesArgs

func ApplicationMaximumAllowedResourcesPtr(v *ApplicationMaximumAllowedResourcesArgs) ApplicationMaximumAllowedResourcesPtrInput {
	return (*applicationMaximumAllowedResourcesPtrType)(v)
}

func (*applicationMaximumAllowedResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaximumAllowedResources)(nil)).Elem()
}

func (i *applicationMaximumAllowedResourcesPtrType) ToApplicationMaximumAllowedResourcesPtrOutput() ApplicationMaximumAllowedResourcesPtrOutput {
	return i.ToApplicationMaximumAllowedResourcesPtrOutputWithContext(context.Background())
}

func (i *applicationMaximumAllowedResourcesPtrType) ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaximumAllowedResourcesPtrOutput)
}

func (i *applicationMaximumAllowedResourcesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationMaximumAllowedResources] {
	return pulumix.Output[*ApplicationMaximumAllowedResources]{
		OutputState: i.ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx).OutputState,
	}
}

type ApplicationMaximumAllowedResourcesOutput struct{ *pulumi.OutputState }

func (ApplicationMaximumAllowedResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaximumAllowedResources)(nil)).Elem()
}

func (o ApplicationMaximumAllowedResourcesOutput) ToApplicationMaximumAllowedResourcesOutput() ApplicationMaximumAllowedResourcesOutput {
	return o
}

func (o ApplicationMaximumAllowedResourcesOutput) ToApplicationMaximumAllowedResourcesOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesOutput {
	return o
}

func (o ApplicationMaximumAllowedResourcesOutput) ToApplicationMaximumAllowedResourcesPtrOutput() ApplicationMaximumAllowedResourcesPtrOutput {
	return o.ToApplicationMaximumAllowedResourcesPtrOutputWithContext(context.Background())
}

func (o ApplicationMaximumAllowedResourcesOutput) ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationMaximumAllowedResources) *ApplicationMaximumAllowedResources {
		return &v
	}).(ApplicationMaximumAllowedResourcesPtrOutput)
}

func (o ApplicationMaximumAllowedResourcesOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationMaximumAllowedResources] {
	return pulumix.Output[ApplicationMaximumAllowedResources]{
		OutputState: o.OutputState,
	}
}

// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
func (o ApplicationMaximumAllowedResourcesOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationMaximumAllowedResources) string { return v.Cpu }).(pulumi.StringOutput)
}

// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
func (o ApplicationMaximumAllowedResourcesOutput) Disk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationMaximumAllowedResources) *string { return v.Disk }).(pulumi.StringPtrOutput)
}

// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
func (o ApplicationMaximumAllowedResourcesOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationMaximumAllowedResources) string { return v.Memory }).(pulumi.StringOutput)
}

type ApplicationMaximumAllowedResourcesPtrOutput struct{ *pulumi.OutputState }

func (ApplicationMaximumAllowedResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaximumAllowedResources)(nil)).Elem()
}

func (o ApplicationMaximumAllowedResourcesPtrOutput) ToApplicationMaximumAllowedResourcesPtrOutput() ApplicationMaximumAllowedResourcesPtrOutput {
	return o
}

func (o ApplicationMaximumAllowedResourcesPtrOutput) ToApplicationMaximumAllowedResourcesPtrOutputWithContext(ctx context.Context) ApplicationMaximumAllowedResourcesPtrOutput {
	return o
}

func (o ApplicationMaximumAllowedResourcesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationMaximumAllowedResources] {
	return pulumix.Output[*ApplicationMaximumAllowedResources]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationMaximumAllowedResourcesPtrOutput) Elem() ApplicationMaximumAllowedResourcesOutput {
	return o.ApplyT(func(v *ApplicationMaximumAllowedResources) ApplicationMaximumAllowedResources {
		if v != nil {
			return *v
		}
		var ret ApplicationMaximumAllowedResources
		return ret
	}).(ApplicationMaximumAllowedResourcesOutput)
}

// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
func (o ApplicationMaximumAllowedResourcesPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationMaximumAllowedResources) *string {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
func (o ApplicationMaximumAllowedResourcesPtrOutput) Disk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationMaximumAllowedResources) *string {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(pulumi.StringPtrOutput)
}

// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
func (o ApplicationMaximumAllowedResourcesPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationMaximumAllowedResources) *string {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.StringPtrOutput)
}

type ApplicationNetworkConfiguration struct {
	// The ID of the security groups in the VPC to which you want to connect your job or application.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect your job or application.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ApplicationNetworkConfigurationInput is an input type that accepts ApplicationNetworkConfigurationArgs and ApplicationNetworkConfigurationOutput values.
// You can construct a concrete instance of `ApplicationNetworkConfigurationInput` via:
//
//	ApplicationNetworkConfigurationArgs{...}
type ApplicationNetworkConfigurationInput interface {
	pulumi.Input

	ToApplicationNetworkConfigurationOutput() ApplicationNetworkConfigurationOutput
	ToApplicationNetworkConfigurationOutputWithContext(context.Context) ApplicationNetworkConfigurationOutput
}

type ApplicationNetworkConfigurationArgs struct {
	// The ID of the security groups in the VPC to which you want to connect your job or application.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnets in the VPC to which you want to connect your job or application.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ApplicationNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNetworkConfiguration)(nil)).Elem()
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationOutput() ApplicationNetworkConfigurationOutput {
	return i.ToApplicationNetworkConfigurationOutputWithContext(context.Background())
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNetworkConfigurationOutput)
}

func (i ApplicationNetworkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationNetworkConfiguration] {
	return pulumix.Output[ApplicationNetworkConfiguration]{
		OutputState: i.ToApplicationNetworkConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationPtrOutput() ApplicationNetworkConfigurationPtrOutput {
	return i.ToApplicationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNetworkConfigurationOutput).ToApplicationNetworkConfigurationPtrOutputWithContext(ctx)
}

// ApplicationNetworkConfigurationPtrInput is an input type that accepts ApplicationNetworkConfigurationArgs, ApplicationNetworkConfigurationPtr and ApplicationNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationNetworkConfigurationPtrInput` via:
//
//	        ApplicationNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationNetworkConfigurationPtrOutput() ApplicationNetworkConfigurationPtrOutput
	ToApplicationNetworkConfigurationPtrOutputWithContext(context.Context) ApplicationNetworkConfigurationPtrOutput
}

type applicationNetworkConfigurationPtrType ApplicationNetworkConfigurationArgs

func ApplicationNetworkConfigurationPtr(v *ApplicationNetworkConfigurationArgs) ApplicationNetworkConfigurationPtrInput {
	return (*applicationNetworkConfigurationPtrType)(v)
}

func (*applicationNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationNetworkConfiguration)(nil)).Elem()
}

func (i *applicationNetworkConfigurationPtrType) ToApplicationNetworkConfigurationPtrOutput() ApplicationNetworkConfigurationPtrOutput {
	return i.ToApplicationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationNetworkConfigurationPtrType) ToApplicationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNetworkConfigurationPtrOutput)
}

func (i *applicationNetworkConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationNetworkConfiguration] {
	return pulumix.Output[*ApplicationNetworkConfiguration]{
		OutputState: i.ToApplicationNetworkConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ApplicationNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNetworkConfiguration)(nil)).Elem()
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationOutput() ApplicationNetworkConfigurationOutput {
	return o
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationOutput {
	return o
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationPtrOutput() ApplicationNetworkConfigurationPtrOutput {
	return o.ToApplicationNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationNetworkConfiguration) *ApplicationNetworkConfiguration {
		return &v
	}).(ApplicationNetworkConfigurationPtrOutput)
}

func (o ApplicationNetworkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationNetworkConfiguration] {
	return pulumix.Output[ApplicationNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the security groups in the VPC to which you want to connect your job or application.
func (o ApplicationNetworkConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationNetworkConfiguration) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect your job or application.
func (o ApplicationNetworkConfigurationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationNetworkConfiguration) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ApplicationNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationNetworkConfiguration)(nil)).Elem()
}

func (o ApplicationNetworkConfigurationPtrOutput) ToApplicationNetworkConfigurationPtrOutput() ApplicationNetworkConfigurationPtrOutput {
	return o
}

func (o ApplicationNetworkConfigurationPtrOutput) ToApplicationNetworkConfigurationPtrOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationPtrOutput {
	return o
}

func (o ApplicationNetworkConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationNetworkConfiguration] {
	return pulumix.Output[*ApplicationNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationNetworkConfigurationPtrOutput) Elem() ApplicationNetworkConfigurationOutput {
	return o.ApplyT(func(v *ApplicationNetworkConfiguration) ApplicationNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationNetworkConfiguration
		return ret
	}).(ApplicationNetworkConfigurationOutput)
}

// The ID of the security groups in the VPC to which you want to connect your job or application.
func (o ApplicationNetworkConfigurationPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnets in the VPC to which you want to connect your job or application.
func (o ApplicationNetworkConfigurationPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type ApplicationTag struct {
	// The value for the tag. You can specify a value that is 1 to 128 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ApplicationTagInput is an input type that accepts ApplicationTagArgs and ApplicationTagOutput values.
// You can construct a concrete instance of `ApplicationTagInput` via:
//
//	ApplicationTagArgs{...}
type ApplicationTagInput interface {
	pulumi.Input

	ToApplicationTagOutput() ApplicationTagOutput
	ToApplicationTagOutputWithContext(context.Context) ApplicationTagOutput
}

// A key-value pair to associate with a resource.
type ApplicationTagArgs struct {
	// The value for the tag. You can specify a value that is 1 to 128 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArgs) ToApplicationTagOutput() ApplicationTagOutput {
	return i.ToApplicationTagOutputWithContext(context.Background())
}

func (i ApplicationTagArgs) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagOutput)
}

func (i ApplicationTagArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationTag] {
	return pulumix.Output[ApplicationTag]{
		OutputState: i.ToApplicationTagOutputWithContext(ctx).OutputState,
	}
}

// ApplicationTagArrayInput is an input type that accepts ApplicationTagArray and ApplicationTagArrayOutput values.
// You can construct a concrete instance of `ApplicationTagArrayInput` via:
//
//	ApplicationTagArray{ ApplicationTagArgs{...} }
type ApplicationTagArrayInput interface {
	pulumi.Input

	ToApplicationTagArrayOutput() ApplicationTagArrayOutput
	ToApplicationTagArrayOutputWithContext(context.Context) ApplicationTagArrayOutput
}

type ApplicationTagArray []ApplicationTagInput

func (ApplicationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (i ApplicationTagArray) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return i.ToApplicationTagArrayOutputWithContext(context.Background())
}

func (i ApplicationTagArray) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTagArrayOutput)
}

func (i ApplicationTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ApplicationTag] {
	return pulumix.Output[[]ApplicationTag]{
		OutputState: i.ToApplicationTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type ApplicationTagOutput struct{ *pulumi.OutputState }

func (ApplicationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagOutput) ToApplicationTagOutput() ApplicationTagOutput {
	return o
}

func (o ApplicationTagOutput) ToApplicationTagOutputWithContext(ctx context.Context) ApplicationTagOutput {
	return o
}

func (o ApplicationTagOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationTag] {
	return pulumix.Output[ApplicationTag]{
		OutputState: o.OutputState,
	}
}

// The value for the tag. You can specify a value that is 1 to 128 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApplicationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ApplicationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationTag) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationTagArrayOutput struct{ *pulumi.OutputState }

func (ApplicationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationTag)(nil)).Elem()
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutput() ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) ToApplicationTagArrayOutputWithContext(ctx context.Context) ApplicationTagArrayOutput {
	return o
}

func (o ApplicationTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ApplicationTag] {
	return pulumix.Output[[]ApplicationTag]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationTagArrayOutput) Index(i pulumi.IntInput) ApplicationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationTag {
		return vs[0].([]ApplicationTag)[vs[1].(int)]
	}).(ApplicationTagOutput)
}

type ApplicationWorkerConfiguration struct {
	// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
	Cpu string `pulumi:"cpu"`
	// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
	Disk *string `pulumi:"disk"`
	// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
	Memory string `pulumi:"memory"`
}

// ApplicationWorkerConfigurationInput is an input type that accepts ApplicationWorkerConfigurationArgs and ApplicationWorkerConfigurationOutput values.
// You can construct a concrete instance of `ApplicationWorkerConfigurationInput` via:
//
//	ApplicationWorkerConfigurationArgs{...}
type ApplicationWorkerConfigurationInput interface {
	pulumi.Input

	ToApplicationWorkerConfigurationOutput() ApplicationWorkerConfigurationOutput
	ToApplicationWorkerConfigurationOutputWithContext(context.Context) ApplicationWorkerConfigurationOutput
}

type ApplicationWorkerConfigurationArgs struct {
	// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
	Cpu pulumi.StringInput `pulumi:"cpu"`
	// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
	Disk pulumi.StringPtrInput `pulumi:"disk"`
	// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
	Memory pulumi.StringInput `pulumi:"memory"`
}

func (ApplicationWorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWorkerConfiguration)(nil)).Elem()
}

func (i ApplicationWorkerConfigurationArgs) ToApplicationWorkerConfigurationOutput() ApplicationWorkerConfigurationOutput {
	return i.ToApplicationWorkerConfigurationOutputWithContext(context.Background())
}

func (i ApplicationWorkerConfigurationArgs) ToApplicationWorkerConfigurationOutputWithContext(ctx context.Context) ApplicationWorkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWorkerConfigurationOutput)
}

func (i ApplicationWorkerConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationWorkerConfiguration] {
	return pulumix.Output[ApplicationWorkerConfiguration]{
		OutputState: i.ToApplicationWorkerConfigurationOutputWithContext(ctx).OutputState,
	}
}

type ApplicationWorkerConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationWorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWorkerConfiguration)(nil)).Elem()
}

func (o ApplicationWorkerConfigurationOutput) ToApplicationWorkerConfigurationOutput() ApplicationWorkerConfigurationOutput {
	return o
}

func (o ApplicationWorkerConfigurationOutput) ToApplicationWorkerConfigurationOutputWithContext(ctx context.Context) ApplicationWorkerConfigurationOutput {
	return o
}

func (o ApplicationWorkerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationWorkerConfiguration] {
	return pulumix.Output[ApplicationWorkerConfiguration]{
		OutputState: o.OutputState,
	}
}

// Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
func (o ApplicationWorkerConfigurationOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationWorkerConfiguration) string { return v.Cpu }).(pulumi.StringOutput)
}

// Per worker Disk resource. GB is the only supported unit and specifying GB is optional
func (o ApplicationWorkerConfigurationOutput) Disk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationWorkerConfiguration) *string { return v.Disk }).(pulumi.StringPtrOutput)
}

// Per worker memory resource. GB is the only supported unit and specifying GB is optional.
func (o ApplicationWorkerConfigurationOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationWorkerConfiguration) string { return v.Memory }).(pulumi.StringOutput)
}

type ApplicationWorkerTypeSpecificationInputMap struct {
}

// ApplicationWorkerTypeSpecificationInputMapInput is an input type that accepts ApplicationWorkerTypeSpecificationInputMap and ApplicationWorkerTypeSpecificationInputMapOutput values.
// You can construct a concrete instance of `ApplicationWorkerTypeSpecificationInputMapInput` via:
//
//	ApplicationWorkerTypeSpecificationInputMap{ "key": ApplicationWorkerTypeSpecificationInputArgs{...} }
type ApplicationWorkerTypeSpecificationInputMapInput interface {
	pulumi.Input

	ToApplicationWorkerTypeSpecificationInputMapOutput() ApplicationWorkerTypeSpecificationInputMapOutput
	ToApplicationWorkerTypeSpecificationInputMapOutputWithContext(context.Context) ApplicationWorkerTypeSpecificationInputMapOutput
}

type ApplicationWorkerTypeSpecificationInputMapArgs struct {
}

func (ApplicationWorkerTypeSpecificationInputMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWorkerTypeSpecificationInputMap)(nil)).Elem()
}

func (i ApplicationWorkerTypeSpecificationInputMapArgs) ToApplicationWorkerTypeSpecificationInputMapOutput() ApplicationWorkerTypeSpecificationInputMapOutput {
	return i.ToApplicationWorkerTypeSpecificationInputMapOutputWithContext(context.Background())
}

func (i ApplicationWorkerTypeSpecificationInputMapArgs) ToApplicationWorkerTypeSpecificationInputMapOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWorkerTypeSpecificationInputMapOutput)
}

func (i ApplicationWorkerTypeSpecificationInputMapArgs) ToOutput(ctx context.Context) pulumix.Output[ApplicationWorkerTypeSpecificationInputMap] {
	return pulumix.Output[ApplicationWorkerTypeSpecificationInputMap]{
		OutputState: i.ToApplicationWorkerTypeSpecificationInputMapOutputWithContext(ctx).OutputState,
	}
}

func (i ApplicationWorkerTypeSpecificationInputMapArgs) ToApplicationWorkerTypeSpecificationInputMapPtrOutput() ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return i.ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(context.Background())
}

func (i ApplicationWorkerTypeSpecificationInputMapArgs) ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWorkerTypeSpecificationInputMapOutput).ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx)
}

// ApplicationWorkerTypeSpecificationInputMapPtrInput is an input type that accepts ApplicationWorkerTypeSpecificationInputMapArgs, ApplicationWorkerTypeSpecificationInputMapPtr and ApplicationWorkerTypeSpecificationInputMapPtrOutput values.
// You can construct a concrete instance of `ApplicationWorkerTypeSpecificationInputMapPtrInput` via:
//
//	        ApplicationWorkerTypeSpecificationInputMapArgs{...}
//
//	or:
//
//	        nil
type ApplicationWorkerTypeSpecificationInputMapPtrInput interface {
	pulumi.Input

	ToApplicationWorkerTypeSpecificationInputMapPtrOutput() ApplicationWorkerTypeSpecificationInputMapPtrOutput
	ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(context.Context) ApplicationWorkerTypeSpecificationInputMapPtrOutput
}

type applicationWorkerTypeSpecificationInputMapPtrType ApplicationWorkerTypeSpecificationInputMapArgs

func ApplicationWorkerTypeSpecificationInputMapPtr(v *ApplicationWorkerTypeSpecificationInputMapArgs) ApplicationWorkerTypeSpecificationInputMapPtrInput {
	return (*applicationWorkerTypeSpecificationInputMapPtrType)(v)
}

func (*applicationWorkerTypeSpecificationInputMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWorkerTypeSpecificationInputMap)(nil)).Elem()
}

func (i *applicationWorkerTypeSpecificationInputMapPtrType) ToApplicationWorkerTypeSpecificationInputMapPtrOutput() ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return i.ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(context.Background())
}

func (i *applicationWorkerTypeSpecificationInputMapPtrType) ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationWorkerTypeSpecificationInputMapPtrOutput)
}

func (i *applicationWorkerTypeSpecificationInputMapPtrType) ToOutput(ctx context.Context) pulumix.Output[*ApplicationWorkerTypeSpecificationInputMap] {
	return pulumix.Output[*ApplicationWorkerTypeSpecificationInputMap]{
		OutputState: i.ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx).OutputState,
	}
}

type ApplicationWorkerTypeSpecificationInputMapOutput struct{ *pulumi.OutputState }

func (ApplicationWorkerTypeSpecificationInputMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationWorkerTypeSpecificationInputMap)(nil)).Elem()
}

func (o ApplicationWorkerTypeSpecificationInputMapOutput) ToApplicationWorkerTypeSpecificationInputMapOutput() ApplicationWorkerTypeSpecificationInputMapOutput {
	return o
}

func (o ApplicationWorkerTypeSpecificationInputMapOutput) ToApplicationWorkerTypeSpecificationInputMapOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapOutput {
	return o
}

func (o ApplicationWorkerTypeSpecificationInputMapOutput) ToApplicationWorkerTypeSpecificationInputMapPtrOutput() ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return o.ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(context.Background())
}

func (o ApplicationWorkerTypeSpecificationInputMapOutput) ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationWorkerTypeSpecificationInputMap) *ApplicationWorkerTypeSpecificationInputMap {
		return &v
	}).(ApplicationWorkerTypeSpecificationInputMapPtrOutput)
}

func (o ApplicationWorkerTypeSpecificationInputMapOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationWorkerTypeSpecificationInputMap] {
	return pulumix.Output[ApplicationWorkerTypeSpecificationInputMap]{
		OutputState: o.OutputState,
	}
}

type ApplicationWorkerTypeSpecificationInputMapPtrOutput struct{ *pulumi.OutputState }

func (ApplicationWorkerTypeSpecificationInputMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationWorkerTypeSpecificationInputMap)(nil)).Elem()
}

func (o ApplicationWorkerTypeSpecificationInputMapPtrOutput) ToApplicationWorkerTypeSpecificationInputMapPtrOutput() ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return o
}

func (o ApplicationWorkerTypeSpecificationInputMapPtrOutput) ToApplicationWorkerTypeSpecificationInputMapPtrOutputWithContext(ctx context.Context) ApplicationWorkerTypeSpecificationInputMapPtrOutput {
	return o
}

func (o ApplicationWorkerTypeSpecificationInputMapPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationWorkerTypeSpecificationInputMap] {
	return pulumix.Output[*ApplicationWorkerTypeSpecificationInputMap]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationWorkerTypeSpecificationInputMapPtrOutput) Elem() ApplicationWorkerTypeSpecificationInputMapOutput {
	return o.ApplyT(func(v *ApplicationWorkerTypeSpecificationInputMap) ApplicationWorkerTypeSpecificationInputMap {
		if v != nil {
			return *v
		}
		var ret ApplicationWorkerTypeSpecificationInputMap
		return ret
	}).(ApplicationWorkerTypeSpecificationInputMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAutoStartConfigurationInput)(nil)).Elem(), ApplicationAutoStartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAutoStartConfigurationPtrInput)(nil)).Elem(), ApplicationAutoStartConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAutoStopConfigurationInput)(nil)).Elem(), ApplicationAutoStopConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAutoStopConfigurationPtrInput)(nil)).Elem(), ApplicationAutoStopConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImageConfigurationInputInput)(nil)).Elem(), ApplicationImageConfigurationInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationImageConfigurationInputPtrInput)(nil)).Elem(), ApplicationImageConfigurationInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInitialCapacityConfigInput)(nil)).Elem(), ApplicationInitialCapacityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInitialCapacityConfigKeyValuePairInput)(nil)).Elem(), ApplicationInitialCapacityConfigKeyValuePairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInitialCapacityConfigKeyValuePairArrayInput)(nil)).Elem(), ApplicationInitialCapacityConfigKeyValuePairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaximumAllowedResourcesInput)(nil)).Elem(), ApplicationMaximumAllowedResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaximumAllowedResourcesPtrInput)(nil)).Elem(), ApplicationMaximumAllowedResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNetworkConfigurationInput)(nil)).Elem(), ApplicationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationNetworkConfigurationPtrInput)(nil)).Elem(), ApplicationNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagInput)(nil)).Elem(), ApplicationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTagArrayInput)(nil)).Elem(), ApplicationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWorkerConfigurationInput)(nil)).Elem(), ApplicationWorkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWorkerTypeSpecificationInputMapInput)(nil)).Elem(), ApplicationWorkerTypeSpecificationInputMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationWorkerTypeSpecificationInputMapPtrInput)(nil)).Elem(), ApplicationWorkerTypeSpecificationInputMapArgs{})
	pulumi.RegisterOutputType(ApplicationAutoStartConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationAutoStartConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationAutoStopConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationAutoStopConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationImageConfigurationInputOutput{})
	pulumi.RegisterOutputType(ApplicationImageConfigurationInputPtrOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityConfigOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityConfigKeyValuePairOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityConfigKeyValuePairArrayOutput{})
	pulumi.RegisterOutputType(ApplicationMaximumAllowedResourcesOutput{})
	pulumi.RegisterOutputType(ApplicationMaximumAllowedResourcesPtrOutput{})
	pulumi.RegisterOutputType(ApplicationNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationTagOutput{})
	pulumi.RegisterOutputType(ApplicationTagArrayOutput{})
	pulumi.RegisterOutputType(ApplicationWorkerConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationWorkerTypeSpecificationInputMapOutput{})
	pulumi.RegisterOutputType(ApplicationWorkerTypeSpecificationInputMapPtrOutput{})
}
