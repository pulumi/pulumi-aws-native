// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The cpu architecture of an application.
type ApplicationArchitecture string

const (
	ApplicationArchitectureArm64 = ApplicationArchitecture("ARM64")
	ApplicationArchitectureX8664 = ApplicationArchitecture("X86_64")
)

func (ApplicationArchitecture) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArchitecture)(nil)).Elem()
}

func (e ApplicationArchitecture) ToApplicationArchitectureOutput() ApplicationArchitectureOutput {
	return pulumi.ToOutput(e).(ApplicationArchitectureOutput)
}

func (e ApplicationArchitecture) ToApplicationArchitectureOutputWithContext(ctx context.Context) ApplicationArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApplicationArchitectureOutput)
}

func (e ApplicationArchitecture) ToApplicationArchitecturePtrOutput() ApplicationArchitecturePtrOutput {
	return e.ToApplicationArchitecturePtrOutputWithContext(context.Background())
}

func (e ApplicationArchitecture) ToApplicationArchitecturePtrOutputWithContext(ctx context.Context) ApplicationArchitecturePtrOutput {
	return ApplicationArchitecture(e).ToApplicationArchitectureOutputWithContext(ctx).ToApplicationArchitecturePtrOutputWithContext(ctx)
}

func (e ApplicationArchitecture) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationArchitecture) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApplicationArchitecture) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApplicationArchitecture) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApplicationArchitectureOutput struct{ *pulumi.OutputState }

func (ApplicationArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationArchitecture)(nil)).Elem()
}

func (o ApplicationArchitectureOutput) ToApplicationArchitectureOutput() ApplicationArchitectureOutput {
	return o
}

func (o ApplicationArchitectureOutput) ToApplicationArchitectureOutputWithContext(ctx context.Context) ApplicationArchitectureOutput {
	return o
}

func (o ApplicationArchitectureOutput) ToApplicationArchitecturePtrOutput() ApplicationArchitecturePtrOutput {
	return o.ToApplicationArchitecturePtrOutputWithContext(context.Background())
}

func (o ApplicationArchitectureOutput) ToApplicationArchitecturePtrOutputWithContext(ctx context.Context) ApplicationArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationArchitecture) *ApplicationArchitecture {
		return &v
	}).(ApplicationArchitecturePtrOutput)
}

func (o ApplicationArchitectureOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationArchitecture] {
	return pulumix.Output[ApplicationArchitecture]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationArchitectureOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApplicationArchitectureOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationArchitecture) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApplicationArchitectureOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationArchitectureOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApplicationArchitecture) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApplicationArchitecturePtrOutput struct{ *pulumi.OutputState }

func (ApplicationArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationArchitecture)(nil)).Elem()
}

func (o ApplicationArchitecturePtrOutput) ToApplicationArchitecturePtrOutput() ApplicationArchitecturePtrOutput {
	return o
}

func (o ApplicationArchitecturePtrOutput) ToApplicationArchitecturePtrOutputWithContext(ctx context.Context) ApplicationArchitecturePtrOutput {
	return o
}

func (o ApplicationArchitecturePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ApplicationArchitecture] {
	return pulumix.Output[*ApplicationArchitecture]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationArchitecturePtrOutput) Elem() ApplicationArchitectureOutput {
	return o.ApplyT(func(v *ApplicationArchitecture) ApplicationArchitecture {
		if v != nil {
			return *v
		}
		var ret ApplicationArchitecture
		return ret
	}).(ApplicationArchitectureOutput)
}

func (o ApplicationArchitecturePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApplicationArchitecturePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApplicationArchitecture) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApplicationArchitectureInput is an input type that accepts ApplicationArchitectureArgs and ApplicationArchitectureOutput values.
// You can construct a concrete instance of `ApplicationArchitectureInput` via:
//
//	ApplicationArchitectureArgs{...}
type ApplicationArchitectureInput interface {
	pulumi.Input

	ToApplicationArchitectureOutput() ApplicationArchitectureOutput
	ToApplicationArchitectureOutputWithContext(context.Context) ApplicationArchitectureOutput
}

var applicationArchitecturePtrType = reflect.TypeOf((**ApplicationArchitecture)(nil)).Elem()

type ApplicationArchitecturePtrInput interface {
	pulumi.Input

	ToApplicationArchitecturePtrOutput() ApplicationArchitecturePtrOutput
	ToApplicationArchitecturePtrOutputWithContext(context.Context) ApplicationArchitecturePtrOutput
}

type applicationArchitecturePtr string

func ApplicationArchitecturePtr(v string) ApplicationArchitecturePtrInput {
	return (*applicationArchitecturePtr)(&v)
}

func (*applicationArchitecturePtr) ElementType() reflect.Type {
	return applicationArchitecturePtrType
}

func (in *applicationArchitecturePtr) ToApplicationArchitecturePtrOutput() ApplicationArchitecturePtrOutput {
	return pulumi.ToOutput(in).(ApplicationArchitecturePtrOutput)
}

func (in *applicationArchitecturePtr) ToApplicationArchitecturePtrOutputWithContext(ctx context.Context) ApplicationArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApplicationArchitecturePtrOutput)
}

func (in *applicationArchitecturePtr) ToOutput(ctx context.Context) pulumix.Output[*ApplicationArchitecture] {
	return pulumix.Output[*ApplicationArchitecture]{
		OutputState: in.ToApplicationArchitecturePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationArchitectureInput)(nil)).Elem(), ApplicationArchitecture("ARM64"))
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationArchitecturePtrInput)(nil)).Elem(), ApplicationArchitecture("ARM64"))
	pulumi.RegisterOutputType(ApplicationArchitectureOutput{})
	pulumi.RegisterOutputType(ApplicationArchitecturePtrOutput{})
}
