// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package emrcontainers

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html
type VirtualCluster struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-containerprovider
	ContainerProvider VirtualClusterContainerProviderOutput `pulumi:"containerProvider"`
	Id                pulumi.StringOutput                   `pulumi:"id"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-name
	Name pulumi.StringOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewVirtualCluster registers a new resource with the given unique name, arguments, and options.
func NewVirtualCluster(ctx *pulumi.Context,
	name string, args *VirtualClusterArgs, opts ...pulumi.ResourceOption) (*VirtualCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerProvider == nil {
		return nil, errors.New("invalid value for required argument 'ContainerProvider'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource VirtualCluster
	err := ctx.RegisterResource("aws-native:EMRContainers:VirtualCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualCluster gets an existing VirtualCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualClusterState, opts ...pulumi.ResourceOption) (*VirtualCluster, error) {
	var resource VirtualCluster
	err := ctx.ReadResource("aws-native:EMRContainers:VirtualCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualCluster resources.
type virtualClusterState struct {
}

type VirtualClusterState struct {
}

func (VirtualClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualClusterState)(nil)).Elem()
}

type virtualClusterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-containerprovider
	ContainerProvider VirtualClusterContainerProvider `pulumi:"containerProvider"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualCluster resource.
type VirtualClusterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-containerprovider
	ContainerProvider VirtualClusterContainerProviderInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-name
	Name pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-tags
	Tags aws.TagArrayInput
}

func (VirtualClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualClusterArgs)(nil)).Elem()
}

type VirtualClusterInput interface {
	pulumi.Input

	ToVirtualClusterOutput() VirtualClusterOutput
	ToVirtualClusterOutputWithContext(ctx context.Context) VirtualClusterOutput
}

func (*VirtualCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualCluster)(nil))
}

func (i *VirtualCluster) ToVirtualClusterOutput() VirtualClusterOutput {
	return i.ToVirtualClusterOutputWithContext(context.Background())
}

func (i *VirtualCluster) ToVirtualClusterOutputWithContext(ctx context.Context) VirtualClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualClusterOutput)
}

type VirtualClusterOutput struct{ *pulumi.OutputState }

func (VirtualClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualCluster)(nil))
}

func (o VirtualClusterOutput) ToVirtualClusterOutput() VirtualClusterOutput {
	return o
}

func (o VirtualClusterOutput) ToVirtualClusterOutputWithContext(ctx context.Context) VirtualClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VirtualClusterOutput{})
}
