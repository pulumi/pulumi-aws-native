// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package emrcontainers

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema of AWS::EMRContainers::VirtualCluster Type
func LookupVirtualCluster(ctx *pulumi.Context, args *LookupVirtualClusterArgs, opts ...pulumi.InvokeOption) (*LookupVirtualClusterResult, error) {
	var rv LookupVirtualClusterResult
	err := ctx.Invoke("aws-native:emrcontainers:getVirtualCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualClusterArgs struct {
	// Id of the virtual cluster.
	Id string `pulumi:"id"`
}

type LookupVirtualClusterResult struct {
	Arn *string `pulumi:"arn"`
	// Id of the virtual cluster.
	Id *string `pulumi:"id"`
	// An array of key-value pairs to apply to this virtual cluster.
	Tags []VirtualClusterTag `pulumi:"tags"`
}

func LookupVirtualClusterOutput(ctx *pulumi.Context, args LookupVirtualClusterOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualClusterResult, error) {
			args := v.(LookupVirtualClusterArgs)
			r, err := LookupVirtualCluster(ctx, &args, opts...)
			return *r, err
		}).(LookupVirtualClusterResultOutput)
}

type LookupVirtualClusterOutputArgs struct {
	// Id of the virtual cluster.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupVirtualClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualClusterArgs)(nil)).Elem()
}

type LookupVirtualClusterResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualClusterResult)(nil)).Elem()
}

func (o LookupVirtualClusterResultOutput) ToLookupVirtualClusterResultOutput() LookupVirtualClusterResultOutput {
	return o
}

func (o LookupVirtualClusterResultOutput) ToLookupVirtualClusterResultOutputWithContext(ctx context.Context) LookupVirtualClusterResultOutput {
	return o
}

func (o LookupVirtualClusterResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Id of the virtual cluster.
func (o LookupVirtualClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this virtual cluster.
func (o LookupVirtualClusterResultOutput) Tags() VirtualClusterTagArrayOutput {
	return o.ApplyT(func(v LookupVirtualClusterResult) []VirtualClusterTag { return v.Tags }).(VirtualClusterTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualClusterResultOutput{})
}
