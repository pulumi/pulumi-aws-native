// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amazonmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Optional. The authentication strategy used to secure the broker. The default is `SIMPLE` .
type BrokerAuthenticationStrategy string

const (
	BrokerAuthenticationStrategySimple = BrokerAuthenticationStrategy("SIMPLE")
	BrokerAuthenticationStrategyLdap   = BrokerAuthenticationStrategy("LDAP")
)

func (BrokerAuthenticationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticationStrategy)(nil)).Elem()
}

func (e BrokerAuthenticationStrategy) ToBrokerAuthenticationStrategyOutput() BrokerAuthenticationStrategyOutput {
	return pulumi.ToOutput(e).(BrokerAuthenticationStrategyOutput)
}

func (e BrokerAuthenticationStrategy) ToBrokerAuthenticationStrategyOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerAuthenticationStrategyOutput)
}

func (e BrokerAuthenticationStrategy) ToBrokerAuthenticationStrategyPtrOutput() BrokerAuthenticationStrategyPtrOutput {
	return e.ToBrokerAuthenticationStrategyPtrOutputWithContext(context.Background())
}

func (e BrokerAuthenticationStrategy) ToBrokerAuthenticationStrategyPtrOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyPtrOutput {
	return BrokerAuthenticationStrategy(e).ToBrokerAuthenticationStrategyOutputWithContext(ctx).ToBrokerAuthenticationStrategyPtrOutputWithContext(ctx)
}

func (e BrokerAuthenticationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerAuthenticationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerAuthenticationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerAuthenticationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerAuthenticationStrategyOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerAuthenticationStrategy)(nil)).Elem()
}

func (o BrokerAuthenticationStrategyOutput) ToBrokerAuthenticationStrategyOutput() BrokerAuthenticationStrategyOutput {
	return o
}

func (o BrokerAuthenticationStrategyOutput) ToBrokerAuthenticationStrategyOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyOutput {
	return o
}

func (o BrokerAuthenticationStrategyOutput) ToBrokerAuthenticationStrategyPtrOutput() BrokerAuthenticationStrategyPtrOutput {
	return o.ToBrokerAuthenticationStrategyPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticationStrategyOutput) ToBrokerAuthenticationStrategyPtrOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerAuthenticationStrategy) *BrokerAuthenticationStrategy {
		return &v
	}).(BrokerAuthenticationStrategyPtrOutput)
}

func (o BrokerAuthenticationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerAuthenticationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerAuthenticationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerAuthenticationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerAuthenticationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerAuthenticationStrategyPtrOutput struct{ *pulumi.OutputState }

func (BrokerAuthenticationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerAuthenticationStrategy)(nil)).Elem()
}

func (o BrokerAuthenticationStrategyPtrOutput) ToBrokerAuthenticationStrategyPtrOutput() BrokerAuthenticationStrategyPtrOutput {
	return o
}

func (o BrokerAuthenticationStrategyPtrOutput) ToBrokerAuthenticationStrategyPtrOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyPtrOutput {
	return o
}

func (o BrokerAuthenticationStrategyPtrOutput) Elem() BrokerAuthenticationStrategyOutput {
	return o.ApplyT(func(v *BrokerAuthenticationStrategy) BrokerAuthenticationStrategy {
		if v != nil {
			return *v
		}
		var ret BrokerAuthenticationStrategy
		return ret
	}).(BrokerAuthenticationStrategyOutput)
}

func (o BrokerAuthenticationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerAuthenticationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerAuthenticationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerAuthenticationStrategyInput is an input type that accepts values of the BrokerAuthenticationStrategy enum
// A concrete instance of `BrokerAuthenticationStrategyInput` can be one of the following:
//
//	BrokerAuthenticationStrategySimple
//	BrokerAuthenticationStrategyLdap
type BrokerAuthenticationStrategyInput interface {
	pulumi.Input

	ToBrokerAuthenticationStrategyOutput() BrokerAuthenticationStrategyOutput
	ToBrokerAuthenticationStrategyOutputWithContext(context.Context) BrokerAuthenticationStrategyOutput
}

var brokerAuthenticationStrategyPtrType = reflect.TypeOf((**BrokerAuthenticationStrategy)(nil)).Elem()

type BrokerAuthenticationStrategyPtrInput interface {
	pulumi.Input

	ToBrokerAuthenticationStrategyPtrOutput() BrokerAuthenticationStrategyPtrOutput
	ToBrokerAuthenticationStrategyPtrOutputWithContext(context.Context) BrokerAuthenticationStrategyPtrOutput
}

type brokerAuthenticationStrategyPtr string

func BrokerAuthenticationStrategyPtr(v string) BrokerAuthenticationStrategyPtrInput {
	return (*brokerAuthenticationStrategyPtr)(&v)
}

func (*brokerAuthenticationStrategyPtr) ElementType() reflect.Type {
	return brokerAuthenticationStrategyPtrType
}

func (in *brokerAuthenticationStrategyPtr) ToBrokerAuthenticationStrategyPtrOutput() BrokerAuthenticationStrategyPtrOutput {
	return pulumi.ToOutput(in).(BrokerAuthenticationStrategyPtrOutput)
}

func (in *brokerAuthenticationStrategyPtr) ToBrokerAuthenticationStrategyPtrOutputWithContext(ctx context.Context) BrokerAuthenticationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerAuthenticationStrategyPtrOutput)
}

// Optional. The authentication strategy used to secure the broker. The default is `SIMPLE` .
type BrokerAuthenticationStrategy0 string

const (
	BrokerAuthenticationStrategy0Simple = BrokerAuthenticationStrategy0("SIMPLE")
	BrokerAuthenticationStrategy0Ldap   = BrokerAuthenticationStrategy0("LDAP")
)

// Defines whether this broker is a part of a data replication pair.
type BrokerDataReplicationMode string

const (
	BrokerDataReplicationModeNone = BrokerDataReplicationMode("NONE")
	BrokerDataReplicationModeCrdr = BrokerDataReplicationMode("CRDR")
)

func (BrokerDataReplicationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDataReplicationMode)(nil)).Elem()
}

func (e BrokerDataReplicationMode) ToBrokerDataReplicationModeOutput() BrokerDataReplicationModeOutput {
	return pulumi.ToOutput(e).(BrokerDataReplicationModeOutput)
}

func (e BrokerDataReplicationMode) ToBrokerDataReplicationModeOutputWithContext(ctx context.Context) BrokerDataReplicationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerDataReplicationModeOutput)
}

func (e BrokerDataReplicationMode) ToBrokerDataReplicationModePtrOutput() BrokerDataReplicationModePtrOutput {
	return e.ToBrokerDataReplicationModePtrOutputWithContext(context.Background())
}

func (e BrokerDataReplicationMode) ToBrokerDataReplicationModePtrOutputWithContext(ctx context.Context) BrokerDataReplicationModePtrOutput {
	return BrokerDataReplicationMode(e).ToBrokerDataReplicationModeOutputWithContext(ctx).ToBrokerDataReplicationModePtrOutputWithContext(ctx)
}

func (e BrokerDataReplicationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerDataReplicationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerDataReplicationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerDataReplicationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerDataReplicationModeOutput struct{ *pulumi.OutputState }

func (BrokerDataReplicationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDataReplicationMode)(nil)).Elem()
}

func (o BrokerDataReplicationModeOutput) ToBrokerDataReplicationModeOutput() BrokerDataReplicationModeOutput {
	return o
}

func (o BrokerDataReplicationModeOutput) ToBrokerDataReplicationModeOutputWithContext(ctx context.Context) BrokerDataReplicationModeOutput {
	return o
}

func (o BrokerDataReplicationModeOutput) ToBrokerDataReplicationModePtrOutput() BrokerDataReplicationModePtrOutput {
	return o.ToBrokerDataReplicationModePtrOutputWithContext(context.Background())
}

func (o BrokerDataReplicationModeOutput) ToBrokerDataReplicationModePtrOutputWithContext(ctx context.Context) BrokerDataReplicationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerDataReplicationMode) *BrokerDataReplicationMode {
		return &v
	}).(BrokerDataReplicationModePtrOutput)
}

func (o BrokerDataReplicationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerDataReplicationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerDataReplicationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerDataReplicationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerDataReplicationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerDataReplicationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerDataReplicationModePtrOutput struct{ *pulumi.OutputState }

func (BrokerDataReplicationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerDataReplicationMode)(nil)).Elem()
}

func (o BrokerDataReplicationModePtrOutput) ToBrokerDataReplicationModePtrOutput() BrokerDataReplicationModePtrOutput {
	return o
}

func (o BrokerDataReplicationModePtrOutput) ToBrokerDataReplicationModePtrOutputWithContext(ctx context.Context) BrokerDataReplicationModePtrOutput {
	return o
}

func (o BrokerDataReplicationModePtrOutput) Elem() BrokerDataReplicationModeOutput {
	return o.ApplyT(func(v *BrokerDataReplicationMode) BrokerDataReplicationMode {
		if v != nil {
			return *v
		}
		var ret BrokerDataReplicationMode
		return ret
	}).(BrokerDataReplicationModeOutput)
}

func (o BrokerDataReplicationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerDataReplicationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerDataReplicationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerDataReplicationModeInput is an input type that accepts values of the BrokerDataReplicationMode enum
// A concrete instance of `BrokerDataReplicationModeInput` can be one of the following:
//
//	BrokerDataReplicationModeNone
//	BrokerDataReplicationModeCrdr
type BrokerDataReplicationModeInput interface {
	pulumi.Input

	ToBrokerDataReplicationModeOutput() BrokerDataReplicationModeOutput
	ToBrokerDataReplicationModeOutputWithContext(context.Context) BrokerDataReplicationModeOutput
}

var brokerDataReplicationModePtrType = reflect.TypeOf((**BrokerDataReplicationMode)(nil)).Elem()

type BrokerDataReplicationModePtrInput interface {
	pulumi.Input

	ToBrokerDataReplicationModePtrOutput() BrokerDataReplicationModePtrOutput
	ToBrokerDataReplicationModePtrOutputWithContext(context.Context) BrokerDataReplicationModePtrOutput
}

type brokerDataReplicationModePtr string

func BrokerDataReplicationModePtr(v string) BrokerDataReplicationModePtrInput {
	return (*brokerDataReplicationModePtr)(&v)
}

func (*brokerDataReplicationModePtr) ElementType() reflect.Type {
	return brokerDataReplicationModePtrType
}

func (in *brokerDataReplicationModePtr) ToBrokerDataReplicationModePtrOutput() BrokerDataReplicationModePtrOutput {
	return pulumi.ToOutput(in).(BrokerDataReplicationModePtrOutput)
}

func (in *brokerDataReplicationModePtr) ToBrokerDataReplicationModePtrOutputWithContext(ctx context.Context) BrokerDataReplicationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerDataReplicationModePtrOutput)
}

// Defines whether this broker is a part of a data replication pair.
type BrokerDataReplicationMode0 string

const (
	BrokerDataReplicationMode0None = BrokerDataReplicationMode0("NONE")
	BrokerDataReplicationMode0Crdr = BrokerDataReplicationMode0("CRDR")
)

// The deployment mode of the broker. Available values:
//
// - `SINGLE_INSTANCE`
// - `ACTIVE_STANDBY_MULTI_AZ`
// - `CLUSTER_MULTI_AZ`
type BrokerDeploymentMode string

const (
	BrokerDeploymentModeSingleInstance       = BrokerDeploymentMode("SINGLE_INSTANCE")
	BrokerDeploymentModeActiveStandbyMultiAz = BrokerDeploymentMode("ACTIVE_STANDBY_MULTI_AZ")
	BrokerDeploymentModeClusterMultiAz       = BrokerDeploymentMode("CLUSTER_MULTI_AZ")
)

func (BrokerDeploymentMode) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDeploymentMode)(nil)).Elem()
}

func (e BrokerDeploymentMode) ToBrokerDeploymentModeOutput() BrokerDeploymentModeOutput {
	return pulumi.ToOutput(e).(BrokerDeploymentModeOutput)
}

func (e BrokerDeploymentMode) ToBrokerDeploymentModeOutputWithContext(ctx context.Context) BrokerDeploymentModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerDeploymentModeOutput)
}

func (e BrokerDeploymentMode) ToBrokerDeploymentModePtrOutput() BrokerDeploymentModePtrOutput {
	return e.ToBrokerDeploymentModePtrOutputWithContext(context.Background())
}

func (e BrokerDeploymentMode) ToBrokerDeploymentModePtrOutputWithContext(ctx context.Context) BrokerDeploymentModePtrOutput {
	return BrokerDeploymentMode(e).ToBrokerDeploymentModeOutputWithContext(ctx).ToBrokerDeploymentModePtrOutputWithContext(ctx)
}

func (e BrokerDeploymentMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerDeploymentMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerDeploymentMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerDeploymentMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerDeploymentModeOutput struct{ *pulumi.OutputState }

func (BrokerDeploymentModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerDeploymentMode)(nil)).Elem()
}

func (o BrokerDeploymentModeOutput) ToBrokerDeploymentModeOutput() BrokerDeploymentModeOutput {
	return o
}

func (o BrokerDeploymentModeOutput) ToBrokerDeploymentModeOutputWithContext(ctx context.Context) BrokerDeploymentModeOutput {
	return o
}

func (o BrokerDeploymentModeOutput) ToBrokerDeploymentModePtrOutput() BrokerDeploymentModePtrOutput {
	return o.ToBrokerDeploymentModePtrOutputWithContext(context.Background())
}

func (o BrokerDeploymentModeOutput) ToBrokerDeploymentModePtrOutputWithContext(ctx context.Context) BrokerDeploymentModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerDeploymentMode) *BrokerDeploymentMode {
		return &v
	}).(BrokerDeploymentModePtrOutput)
}

func (o BrokerDeploymentModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerDeploymentModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerDeploymentMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerDeploymentModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerDeploymentModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerDeploymentMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerDeploymentModePtrOutput struct{ *pulumi.OutputState }

func (BrokerDeploymentModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerDeploymentMode)(nil)).Elem()
}

func (o BrokerDeploymentModePtrOutput) ToBrokerDeploymentModePtrOutput() BrokerDeploymentModePtrOutput {
	return o
}

func (o BrokerDeploymentModePtrOutput) ToBrokerDeploymentModePtrOutputWithContext(ctx context.Context) BrokerDeploymentModePtrOutput {
	return o
}

func (o BrokerDeploymentModePtrOutput) Elem() BrokerDeploymentModeOutput {
	return o.ApplyT(func(v *BrokerDeploymentMode) BrokerDeploymentMode {
		if v != nil {
			return *v
		}
		var ret BrokerDeploymentMode
		return ret
	}).(BrokerDeploymentModeOutput)
}

func (o BrokerDeploymentModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerDeploymentModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerDeploymentMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerDeploymentModeInput is an input type that accepts values of the BrokerDeploymentMode enum
// A concrete instance of `BrokerDeploymentModeInput` can be one of the following:
//
//	BrokerDeploymentModeSingleInstance
//	BrokerDeploymentModeActiveStandbyMultiAz
//	BrokerDeploymentModeClusterMultiAz
type BrokerDeploymentModeInput interface {
	pulumi.Input

	ToBrokerDeploymentModeOutput() BrokerDeploymentModeOutput
	ToBrokerDeploymentModeOutputWithContext(context.Context) BrokerDeploymentModeOutput
}

var brokerDeploymentModePtrType = reflect.TypeOf((**BrokerDeploymentMode)(nil)).Elem()

type BrokerDeploymentModePtrInput interface {
	pulumi.Input

	ToBrokerDeploymentModePtrOutput() BrokerDeploymentModePtrOutput
	ToBrokerDeploymentModePtrOutputWithContext(context.Context) BrokerDeploymentModePtrOutput
}

type brokerDeploymentModePtr string

func BrokerDeploymentModePtr(v string) BrokerDeploymentModePtrInput {
	return (*brokerDeploymentModePtr)(&v)
}

func (*brokerDeploymentModePtr) ElementType() reflect.Type {
	return brokerDeploymentModePtrType
}

func (in *brokerDeploymentModePtr) ToBrokerDeploymentModePtrOutput() BrokerDeploymentModePtrOutput {
	return pulumi.ToOutput(in).(BrokerDeploymentModePtrOutput)
}

func (in *brokerDeploymentModePtr) ToBrokerDeploymentModePtrOutputWithContext(ctx context.Context) BrokerDeploymentModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerDeploymentModePtrOutput)
}

// The deployment mode of the broker. Available values:
//
// - `SINGLE_INSTANCE`
// - `ACTIVE_STANDBY_MULTI_AZ`
// - `CLUSTER_MULTI_AZ`
type BrokerDeploymentMode0 string

const (
	BrokerDeploymentMode0SingleInstance       = BrokerDeploymentMode0("SINGLE_INSTANCE")
	BrokerDeploymentMode0ActiveStandbyMultiAz = BrokerDeploymentMode0("ACTIVE_STANDBY_MULTI_AZ")
	BrokerDeploymentMode0ClusterMultiAz       = BrokerDeploymentMode0("CLUSTER_MULTI_AZ")
)

// The type of broker engine. Currently, Amazon MQ supports `ACTIVEMQ` and `RABBITMQ` .
type BrokerEngineType string

const (
	BrokerEngineTypeActivemq = BrokerEngineType("ACTIVEMQ")
	BrokerEngineTypeRabbitmq = BrokerEngineType("RABBITMQ")
)

func (BrokerEngineType) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerEngineType)(nil)).Elem()
}

func (e BrokerEngineType) ToBrokerEngineTypeOutput() BrokerEngineTypeOutput {
	return pulumi.ToOutput(e).(BrokerEngineTypeOutput)
}

func (e BrokerEngineType) ToBrokerEngineTypeOutputWithContext(ctx context.Context) BrokerEngineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerEngineTypeOutput)
}

func (e BrokerEngineType) ToBrokerEngineTypePtrOutput() BrokerEngineTypePtrOutput {
	return e.ToBrokerEngineTypePtrOutputWithContext(context.Background())
}

func (e BrokerEngineType) ToBrokerEngineTypePtrOutputWithContext(ctx context.Context) BrokerEngineTypePtrOutput {
	return BrokerEngineType(e).ToBrokerEngineTypeOutputWithContext(ctx).ToBrokerEngineTypePtrOutputWithContext(ctx)
}

func (e BrokerEngineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerEngineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerEngineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerEngineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerEngineTypeOutput struct{ *pulumi.OutputState }

func (BrokerEngineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerEngineType)(nil)).Elem()
}

func (o BrokerEngineTypeOutput) ToBrokerEngineTypeOutput() BrokerEngineTypeOutput {
	return o
}

func (o BrokerEngineTypeOutput) ToBrokerEngineTypeOutputWithContext(ctx context.Context) BrokerEngineTypeOutput {
	return o
}

func (o BrokerEngineTypeOutput) ToBrokerEngineTypePtrOutput() BrokerEngineTypePtrOutput {
	return o.ToBrokerEngineTypePtrOutputWithContext(context.Background())
}

func (o BrokerEngineTypeOutput) ToBrokerEngineTypePtrOutputWithContext(ctx context.Context) BrokerEngineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerEngineType) *BrokerEngineType {
		return &v
	}).(BrokerEngineTypePtrOutput)
}

func (o BrokerEngineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerEngineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerEngineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerEngineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerEngineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerEngineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerEngineTypePtrOutput struct{ *pulumi.OutputState }

func (BrokerEngineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerEngineType)(nil)).Elem()
}

func (o BrokerEngineTypePtrOutput) ToBrokerEngineTypePtrOutput() BrokerEngineTypePtrOutput {
	return o
}

func (o BrokerEngineTypePtrOutput) ToBrokerEngineTypePtrOutputWithContext(ctx context.Context) BrokerEngineTypePtrOutput {
	return o
}

func (o BrokerEngineTypePtrOutput) Elem() BrokerEngineTypeOutput {
	return o.ApplyT(func(v *BrokerEngineType) BrokerEngineType {
		if v != nil {
			return *v
		}
		var ret BrokerEngineType
		return ret
	}).(BrokerEngineTypeOutput)
}

func (o BrokerEngineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerEngineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerEngineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerEngineTypeInput is an input type that accepts values of the BrokerEngineType enum
// A concrete instance of `BrokerEngineTypeInput` can be one of the following:
//
//	BrokerEngineTypeActivemq
//	BrokerEngineTypeRabbitmq
type BrokerEngineTypeInput interface {
	pulumi.Input

	ToBrokerEngineTypeOutput() BrokerEngineTypeOutput
	ToBrokerEngineTypeOutputWithContext(context.Context) BrokerEngineTypeOutput
}

var brokerEngineTypePtrType = reflect.TypeOf((**BrokerEngineType)(nil)).Elem()

type BrokerEngineTypePtrInput interface {
	pulumi.Input

	ToBrokerEngineTypePtrOutput() BrokerEngineTypePtrOutput
	ToBrokerEngineTypePtrOutputWithContext(context.Context) BrokerEngineTypePtrOutput
}

type brokerEngineTypePtr string

func BrokerEngineTypePtr(v string) BrokerEngineTypePtrInput {
	return (*brokerEngineTypePtr)(&v)
}

func (*brokerEngineTypePtr) ElementType() reflect.Type {
	return brokerEngineTypePtrType
}

func (in *brokerEngineTypePtr) ToBrokerEngineTypePtrOutput() BrokerEngineTypePtrOutput {
	return pulumi.ToOutput(in).(BrokerEngineTypePtrOutput)
}

func (in *brokerEngineTypePtr) ToBrokerEngineTypePtrOutputWithContext(ctx context.Context) BrokerEngineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerEngineTypePtrOutput)
}

// The type of broker engine. Currently, Amazon MQ supports `ACTIVEMQ` and `RABBITMQ` .
type BrokerEngineType0 string

const (
	BrokerEngineType0Activemq = BrokerEngineType0("ACTIVEMQ")
	BrokerEngineType0Rabbitmq = BrokerEngineType0("RABBITMQ")
)

// _Allowed Values_: <code>MONDAY</code> | <code>TUESDAY</code> | <code>WEDNESDAY</code> | <code>THURSDAY</code> | <code>FRIDAY</code> | <code>SATURDAY</code> | <code>SUNDAY</code>
type BrokerMaintenanceWindowDayOfWeek string

const (
	BrokerMaintenanceWindowDayOfWeekMonday    = BrokerMaintenanceWindowDayOfWeek("MONDAY")
	BrokerMaintenanceWindowDayOfWeekTuesday   = BrokerMaintenanceWindowDayOfWeek("TUESDAY")
	BrokerMaintenanceWindowDayOfWeekWednesday = BrokerMaintenanceWindowDayOfWeek("WEDNESDAY")
	BrokerMaintenanceWindowDayOfWeekThursday  = BrokerMaintenanceWindowDayOfWeek("THURSDAY")
	BrokerMaintenanceWindowDayOfWeekFriday    = BrokerMaintenanceWindowDayOfWeek("FRIDAY")
	BrokerMaintenanceWindowDayOfWeekSaturday  = BrokerMaintenanceWindowDayOfWeek("SATURDAY")
	BrokerMaintenanceWindowDayOfWeekSunday    = BrokerMaintenanceWindowDayOfWeek("SUNDAY")
)

func (BrokerMaintenanceWindowDayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerMaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (e BrokerMaintenanceWindowDayOfWeek) ToBrokerMaintenanceWindowDayOfWeekOutput() BrokerMaintenanceWindowDayOfWeekOutput {
	return pulumi.ToOutput(e).(BrokerMaintenanceWindowDayOfWeekOutput)
}

func (e BrokerMaintenanceWindowDayOfWeek) ToBrokerMaintenanceWindowDayOfWeekOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerMaintenanceWindowDayOfWeekOutput)
}

func (e BrokerMaintenanceWindowDayOfWeek) ToBrokerMaintenanceWindowDayOfWeekPtrOutput() BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return e.ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Background())
}

func (e BrokerMaintenanceWindowDayOfWeek) ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return BrokerMaintenanceWindowDayOfWeek(e).ToBrokerMaintenanceWindowDayOfWeekOutputWithContext(ctx).ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx)
}

func (e BrokerMaintenanceWindowDayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerMaintenanceWindowDayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerMaintenanceWindowDayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerMaintenanceWindowDayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerMaintenanceWindowDayOfWeekOutput struct{ *pulumi.OutputState }

func (BrokerMaintenanceWindowDayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerMaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToBrokerMaintenanceWindowDayOfWeekOutput() BrokerMaintenanceWindowDayOfWeekOutput {
	return o
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToBrokerMaintenanceWindowDayOfWeekOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekOutput {
	return o
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToBrokerMaintenanceWindowDayOfWeekPtrOutput() BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return o.ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Background())
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerMaintenanceWindowDayOfWeek) *BrokerMaintenanceWindowDayOfWeek {
		return &v
	}).(BrokerMaintenanceWindowDayOfWeekPtrOutput)
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerMaintenanceWindowDayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerMaintenanceWindowDayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerMaintenanceWindowDayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerMaintenanceWindowDayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (BrokerMaintenanceWindowDayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerMaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (o BrokerMaintenanceWindowDayOfWeekPtrOutput) ToBrokerMaintenanceWindowDayOfWeekPtrOutput() BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return o
}

func (o BrokerMaintenanceWindowDayOfWeekPtrOutput) ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return o
}

func (o BrokerMaintenanceWindowDayOfWeekPtrOutput) Elem() BrokerMaintenanceWindowDayOfWeekOutput {
	return o.ApplyT(func(v *BrokerMaintenanceWindowDayOfWeek) BrokerMaintenanceWindowDayOfWeek {
		if v != nil {
			return *v
		}
		var ret BrokerMaintenanceWindowDayOfWeek
		return ret
	}).(BrokerMaintenanceWindowDayOfWeekOutput)
}

func (o BrokerMaintenanceWindowDayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerMaintenanceWindowDayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerMaintenanceWindowDayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerMaintenanceWindowDayOfWeekInput is an input type that accepts values of the BrokerMaintenanceWindowDayOfWeek enum
// A concrete instance of `BrokerMaintenanceWindowDayOfWeekInput` can be one of the following:
//
//	BrokerMaintenanceWindowDayOfWeekMonday
//	BrokerMaintenanceWindowDayOfWeekTuesday
//	BrokerMaintenanceWindowDayOfWeekWednesday
//	BrokerMaintenanceWindowDayOfWeekThursday
//	BrokerMaintenanceWindowDayOfWeekFriday
//	BrokerMaintenanceWindowDayOfWeekSaturday
//	BrokerMaintenanceWindowDayOfWeekSunday
type BrokerMaintenanceWindowDayOfWeekInput interface {
	pulumi.Input

	ToBrokerMaintenanceWindowDayOfWeekOutput() BrokerMaintenanceWindowDayOfWeekOutput
	ToBrokerMaintenanceWindowDayOfWeekOutputWithContext(context.Context) BrokerMaintenanceWindowDayOfWeekOutput
}

var brokerMaintenanceWindowDayOfWeekPtrType = reflect.TypeOf((**BrokerMaintenanceWindowDayOfWeek)(nil)).Elem()

type BrokerMaintenanceWindowDayOfWeekPtrInput interface {
	pulumi.Input

	ToBrokerMaintenanceWindowDayOfWeekPtrOutput() BrokerMaintenanceWindowDayOfWeekPtrOutput
	ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Context) BrokerMaintenanceWindowDayOfWeekPtrOutput
}

type brokerMaintenanceWindowDayOfWeekPtr string

func BrokerMaintenanceWindowDayOfWeekPtr(v string) BrokerMaintenanceWindowDayOfWeekPtrInput {
	return (*brokerMaintenanceWindowDayOfWeekPtr)(&v)
}

func (*brokerMaintenanceWindowDayOfWeekPtr) ElementType() reflect.Type {
	return brokerMaintenanceWindowDayOfWeekPtrType
}

func (in *brokerMaintenanceWindowDayOfWeekPtr) ToBrokerMaintenanceWindowDayOfWeekPtrOutput() BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(BrokerMaintenanceWindowDayOfWeekPtrOutput)
}

func (in *brokerMaintenanceWindowDayOfWeekPtr) ToBrokerMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowDayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerMaintenanceWindowDayOfWeekPtrOutput)
}

// _Allowed Values_: <code>MONDAY</code> | <code>TUESDAY</code> | <code>WEDNESDAY</code> | <code>THURSDAY</code> | <code>FRIDAY</code> | <code>SATURDAY</code> | <code>SUNDAY</code>
type BrokerMaintenanceWindowDayOfWeek0 string

const (
	BrokerMaintenanceWindowDayOfWeek0Monday    = BrokerMaintenanceWindowDayOfWeek0("MONDAY")
	BrokerMaintenanceWindowDayOfWeek0Tuesday   = BrokerMaintenanceWindowDayOfWeek0("TUESDAY")
	BrokerMaintenanceWindowDayOfWeek0Wednesday = BrokerMaintenanceWindowDayOfWeek0("WEDNESDAY")
	BrokerMaintenanceWindowDayOfWeek0Thursday  = BrokerMaintenanceWindowDayOfWeek0("THURSDAY")
	BrokerMaintenanceWindowDayOfWeek0Friday    = BrokerMaintenanceWindowDayOfWeek0("FRIDAY")
	BrokerMaintenanceWindowDayOfWeek0Saturday  = BrokerMaintenanceWindowDayOfWeek0("SATURDAY")
	BrokerMaintenanceWindowDayOfWeek0Sunday    = BrokerMaintenanceWindowDayOfWeek0("SUNDAY")
)

// The broker's storage type.
type BrokerStorageType string

const (
	BrokerStorageTypeEbs = BrokerStorageType("EBS")
	BrokerStorageTypeEfs = BrokerStorageType("EFS")
)

func (BrokerStorageType) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerStorageType)(nil)).Elem()
}

func (e BrokerStorageType) ToBrokerStorageTypeOutput() BrokerStorageTypeOutput {
	return pulumi.ToOutput(e).(BrokerStorageTypeOutput)
}

func (e BrokerStorageType) ToBrokerStorageTypeOutputWithContext(ctx context.Context) BrokerStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BrokerStorageTypeOutput)
}

func (e BrokerStorageType) ToBrokerStorageTypePtrOutput() BrokerStorageTypePtrOutput {
	return e.ToBrokerStorageTypePtrOutputWithContext(context.Background())
}

func (e BrokerStorageType) ToBrokerStorageTypePtrOutputWithContext(ctx context.Context) BrokerStorageTypePtrOutput {
	return BrokerStorageType(e).ToBrokerStorageTypeOutputWithContext(ctx).ToBrokerStorageTypePtrOutputWithContext(ctx)
}

func (e BrokerStorageType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerStorageType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BrokerStorageType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BrokerStorageType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BrokerStorageTypeOutput struct{ *pulumi.OutputState }

func (BrokerStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerStorageType)(nil)).Elem()
}

func (o BrokerStorageTypeOutput) ToBrokerStorageTypeOutput() BrokerStorageTypeOutput {
	return o
}

func (o BrokerStorageTypeOutput) ToBrokerStorageTypeOutputWithContext(ctx context.Context) BrokerStorageTypeOutput {
	return o
}

func (o BrokerStorageTypeOutput) ToBrokerStorageTypePtrOutput() BrokerStorageTypePtrOutput {
	return o.ToBrokerStorageTypePtrOutputWithContext(context.Background())
}

func (o BrokerStorageTypeOutput) ToBrokerStorageTypePtrOutputWithContext(ctx context.Context) BrokerStorageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerStorageType) *BrokerStorageType {
		return &v
	}).(BrokerStorageTypePtrOutput)
}

func (o BrokerStorageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BrokerStorageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerStorageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BrokerStorageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerStorageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BrokerStorageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BrokerStorageTypePtrOutput struct{ *pulumi.OutputState }

func (BrokerStorageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerStorageType)(nil)).Elem()
}

func (o BrokerStorageTypePtrOutput) ToBrokerStorageTypePtrOutput() BrokerStorageTypePtrOutput {
	return o
}

func (o BrokerStorageTypePtrOutput) ToBrokerStorageTypePtrOutputWithContext(ctx context.Context) BrokerStorageTypePtrOutput {
	return o
}

func (o BrokerStorageTypePtrOutput) Elem() BrokerStorageTypeOutput {
	return o.ApplyT(func(v *BrokerStorageType) BrokerStorageType {
		if v != nil {
			return *v
		}
		var ret BrokerStorageType
		return ret
	}).(BrokerStorageTypeOutput)
}

func (o BrokerStorageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BrokerStorageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BrokerStorageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BrokerStorageTypeInput is an input type that accepts values of the BrokerStorageType enum
// A concrete instance of `BrokerStorageTypeInput` can be one of the following:
//
//	BrokerStorageTypeEbs
//	BrokerStorageTypeEfs
type BrokerStorageTypeInput interface {
	pulumi.Input

	ToBrokerStorageTypeOutput() BrokerStorageTypeOutput
	ToBrokerStorageTypeOutputWithContext(context.Context) BrokerStorageTypeOutput
}

var brokerStorageTypePtrType = reflect.TypeOf((**BrokerStorageType)(nil)).Elem()

type BrokerStorageTypePtrInput interface {
	pulumi.Input

	ToBrokerStorageTypePtrOutput() BrokerStorageTypePtrOutput
	ToBrokerStorageTypePtrOutputWithContext(context.Context) BrokerStorageTypePtrOutput
}

type brokerStorageTypePtr string

func BrokerStorageTypePtr(v string) BrokerStorageTypePtrInput {
	return (*brokerStorageTypePtr)(&v)
}

func (*brokerStorageTypePtr) ElementType() reflect.Type {
	return brokerStorageTypePtrType
}

func (in *brokerStorageTypePtr) ToBrokerStorageTypePtrOutput() BrokerStorageTypePtrOutput {
	return pulumi.ToOutput(in).(BrokerStorageTypePtrOutput)
}

func (in *brokerStorageTypePtr) ToBrokerStorageTypePtrOutputWithContext(ctx context.Context) BrokerStorageTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BrokerStorageTypePtrOutput)
}

// The broker's storage type.
type BrokerStorageType0 string

const (
	BrokerStorageType0Ebs = BrokerStorageType0("EBS")
	BrokerStorageType0Efs = BrokerStorageType0("EFS")
)

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerAuthenticationStrategyInput)(nil)).Elem(), BrokerAuthenticationStrategy("SIMPLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerAuthenticationStrategyPtrInput)(nil)).Elem(), BrokerAuthenticationStrategy("SIMPLE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerDataReplicationModeInput)(nil)).Elem(), BrokerDataReplicationMode("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerDataReplicationModePtrInput)(nil)).Elem(), BrokerDataReplicationMode("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerDeploymentModeInput)(nil)).Elem(), BrokerDeploymentMode("SINGLE_INSTANCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerDeploymentModePtrInput)(nil)).Elem(), BrokerDeploymentMode("SINGLE_INSTANCE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerEngineTypeInput)(nil)).Elem(), BrokerEngineType("ACTIVEMQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerEngineTypePtrInput)(nil)).Elem(), BrokerEngineType("ACTIVEMQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerMaintenanceWindowDayOfWeekInput)(nil)).Elem(), BrokerMaintenanceWindowDayOfWeek("MONDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerMaintenanceWindowDayOfWeekPtrInput)(nil)).Elem(), BrokerMaintenanceWindowDayOfWeek("MONDAY"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerStorageTypeInput)(nil)).Elem(), BrokerStorageType("EBS"))
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerStorageTypePtrInput)(nil)).Elem(), BrokerStorageType("EBS"))
	pulumi.RegisterOutputType(BrokerAuthenticationStrategyOutput{})
	pulumi.RegisterOutputType(BrokerAuthenticationStrategyPtrOutput{})
	pulumi.RegisterOutputType(BrokerDataReplicationModeOutput{})
	pulumi.RegisterOutputType(BrokerDataReplicationModePtrOutput{})
	pulumi.RegisterOutputType(BrokerDeploymentModeOutput{})
	pulumi.RegisterOutputType(BrokerDeploymentModePtrOutput{})
	pulumi.RegisterOutputType(BrokerEngineTypeOutput{})
	pulumi.RegisterOutputType(BrokerEngineTypePtrOutput{})
	pulumi.RegisterOutputType(BrokerMaintenanceWindowDayOfWeekOutput{})
	pulumi.RegisterOutputType(BrokerMaintenanceWindowDayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(BrokerStorageTypeOutput{})
	pulumi.RegisterOutputType(BrokerStorageTypePtrOutput{})
}
