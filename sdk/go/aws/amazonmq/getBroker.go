// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amazonmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::AmazonMQ::Broker
func LookupBroker(ctx *pulumi.Context, args *LookupBrokerArgs, opts ...pulumi.InvokeOption) (*LookupBrokerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBrokerResult
	err := ctx.Invoke("aws-native:amazonmq:getBroker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBrokerArgs struct {
	Id string `pulumi:"id"`
}

type LookupBrokerResult struct {
	// The AMQP endpoints of each broker instance as a list of strings.
	//
	// `amqp+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:5671`
	AmqpEndpoints []string `pulumi:"amqpEndpoints"`
	// The Amazon Resource Name (ARN) of the Amazon MQ broker.
	//
	// `arn:aws:mq:us-east-2:123456789012:broker:MyBroker:b-1234a5b6-78cd-901e-2fgh-3i45j6k178l9`
	Arn *string `pulumi:"arn"`
	// Enables automatic upgrades to new patch versions for brokers as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window or after a manual broker reboot. Set to `true` by default, if no value is specified.
	//
	// > Must be set to `true` for ActiveMQ brokers version 5.18 and above and for RabbitMQ brokers version 3.13 and above.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// The ID of the current actual configuration.
	ConfigurationId *string `pulumi:"configurationId"`
	// The revision of the current actual configuration.
	ConfigurationRevision *string  `pulumi:"configurationRevision"`
	ConsoleUrls           []string `pulumi:"consoleUrls"`
	// Defines whether this broker is a part of a data replication pair.
	DataReplicationMode *string `pulumi:"dataReplicationMode"`
	// The version in use. This may have more precision than the specified EngineVersion.
	EngineVersionCurrent *string `pulumi:"engineVersionCurrent"`
	// Required. The broker's instance type.
	HostInstanceType *string `pulumi:"hostInstanceType"`
	Id               *string `pulumi:"id"`
	// The IP addresses of each broker instance as a list of strings. Does not apply to RabbitMQ brokers.
	//
	// `['198.51.100.2', '203.0.113.9']`
	IpAddresses []string `pulumi:"ipAddresses"`
	// Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.
	LdapServerMetadata *BrokerLdapServerMetadata `pulumi:"ldapServerMetadata"`
	// Enables Amazon CloudWatch logging for brokers.
	Logs *BrokerLogList `pulumi:"logs"`
	// The parameters that determine the WeeklyStartTime.
	MaintenanceWindowStartTime *BrokerMaintenanceWindow `pulumi:"maintenanceWindowStartTime"`
	// The MQTT endpoints of each broker instance as a list of strings.
	//
	// `mqtt+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:8883`
	MqttEndpoints []string `pulumi:"mqttEndpoints"`
	// The OpenWire endpoints of each broker instance as a list of strings.
	//
	// `ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61617`
	OpenWireEndpoints []string `pulumi:"openWireEndpoints"`
	// The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The STOMP endpoints of each broker instance as a list of strings.
	//
	// `stomp+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61614`
	StompEndpoints []string `pulumi:"stompEndpoints"`
	// Create tags when creating the broker.
	Tags []aws.Tag `pulumi:"tags"`
	// The WSS endpoints of each broker instance as a list of strings.
	//
	// `wss://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61619`
	WssEndpoints []string `pulumi:"wssEndpoints"`
}

func LookupBrokerOutput(ctx *pulumi.Context, args LookupBrokerOutputArgs, opts ...pulumi.InvokeOption) LookupBrokerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBrokerResultOutput, error) {
			args := v.(LookupBrokerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:amazonmq:getBroker", args, LookupBrokerResultOutput{}, options).(LookupBrokerResultOutput), nil
		}).(LookupBrokerResultOutput)
}

type LookupBrokerOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupBrokerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerArgs)(nil)).Elem()
}

type LookupBrokerResultOutput struct{ *pulumi.OutputState }

func (LookupBrokerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerResult)(nil)).Elem()
}

func (o LookupBrokerResultOutput) ToLookupBrokerResultOutput() LookupBrokerResultOutput {
	return o
}

func (o LookupBrokerResultOutput) ToLookupBrokerResultOutputWithContext(ctx context.Context) LookupBrokerResultOutput {
	return o
}

// The AMQP endpoints of each broker instance as a list of strings.
//
// `amqp+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:5671`
func (o LookupBrokerResultOutput) AmqpEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.AmqpEndpoints }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the Amazon MQ broker.
//
// `arn:aws:mq:us-east-2:123456789012:broker:MyBroker:b-1234a5b6-78cd-901e-2fgh-3i45j6k178l9`
func (o LookupBrokerResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Enables automatic upgrades to new patch versions for brokers as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window or after a manual broker reboot. Set to `true` by default, if no value is specified.
//
// > Must be set to `true` for ActiveMQ brokers version 5.18 and above and for RabbitMQ brokers version 3.13 and above.
func (o LookupBrokerResultOutput) AutoMinorVersionUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *bool { return v.AutoMinorVersionUpgrade }).(pulumi.BoolPtrOutput)
}

// The ID of the current actual configuration.
func (o LookupBrokerResultOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// The revision of the current actual configuration.
func (o LookupBrokerResultOutput) ConfigurationRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.ConfigurationRevision }).(pulumi.StringPtrOutput)
}

func (o LookupBrokerResultOutput) ConsoleUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.ConsoleUrls }).(pulumi.StringArrayOutput)
}

// Defines whether this broker is a part of a data replication pair.
func (o LookupBrokerResultOutput) DataReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.DataReplicationMode }).(pulumi.StringPtrOutput)
}

// The version in use. This may have more precision than the specified EngineVersion.
func (o LookupBrokerResultOutput) EngineVersionCurrent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.EngineVersionCurrent }).(pulumi.StringPtrOutput)
}

// Required. The broker's instance type.
func (o LookupBrokerResultOutput) HostInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.HostInstanceType }).(pulumi.StringPtrOutput)
}

func (o LookupBrokerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP addresses of each broker instance as a list of strings. Does not apply to RabbitMQ brokers.
//
// `['198.51.100.2', '203.0.113.9']`
func (o LookupBrokerResultOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.
func (o LookupBrokerResultOutput) LdapServerMetadata() BrokerLdapServerMetadataPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *BrokerLdapServerMetadata { return v.LdapServerMetadata }).(BrokerLdapServerMetadataPtrOutput)
}

// Enables Amazon CloudWatch logging for brokers.
func (o LookupBrokerResultOutput) Logs() BrokerLogListPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *BrokerLogList { return v.Logs }).(BrokerLogListPtrOutput)
}

// The parameters that determine the WeeklyStartTime.
func (o LookupBrokerResultOutput) MaintenanceWindowStartTime() BrokerMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v LookupBrokerResult) *BrokerMaintenanceWindow { return v.MaintenanceWindowStartTime }).(BrokerMaintenanceWindowPtrOutput)
}

// The MQTT endpoints of each broker instance as a list of strings.
//
// `mqtt+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:8883`
func (o LookupBrokerResultOutput) MqttEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.MqttEndpoints }).(pulumi.StringArrayOutput)
}

// The OpenWire endpoints of each broker instance as a list of strings.
//
// `ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61617`
func (o LookupBrokerResultOutput) OpenWireEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.OpenWireEndpoints }).(pulumi.StringArrayOutput)
}

// The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.
func (o LookupBrokerResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The STOMP endpoints of each broker instance as a list of strings.
//
// `stomp+ssl://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61614`
func (o LookupBrokerResultOutput) StompEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.StompEndpoints }).(pulumi.StringArrayOutput)
}

// Create tags when creating the broker.
func (o LookupBrokerResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The WSS endpoints of each broker instance as a list of strings.
//
// `wss://b-4aada85d-a80c-4be0-9d30-e344a01b921e-1.mq.eu-central-amazonaws.com:61619`
func (o LookupBrokerResultOutput) WssEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.WssEndpoints }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBrokerResultOutput{})
}
