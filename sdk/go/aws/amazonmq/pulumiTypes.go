// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package amazonmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BrokerConfigurationId struct {
	Id       string `pulumi:"id"`
	Revision int    `pulumi:"revision"`
}

// BrokerConfigurationIdInput is an input type that accepts BrokerConfigurationIdArgs and BrokerConfigurationIdOutput values.
// You can construct a concrete instance of `BrokerConfigurationIdInput` via:
//
//          BrokerConfigurationIdArgs{...}
type BrokerConfigurationIdInput interface {
	pulumi.Input

	ToBrokerConfigurationIdOutput() BrokerConfigurationIdOutput
	ToBrokerConfigurationIdOutputWithContext(context.Context) BrokerConfigurationIdOutput
}

type BrokerConfigurationIdArgs struct {
	Id       pulumi.StringInput `pulumi:"id"`
	Revision pulumi.IntInput    `pulumi:"revision"`
}

func (BrokerConfigurationIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerConfigurationId)(nil)).Elem()
}

func (i BrokerConfigurationIdArgs) ToBrokerConfigurationIdOutput() BrokerConfigurationIdOutput {
	return i.ToBrokerConfigurationIdOutputWithContext(context.Background())
}

func (i BrokerConfigurationIdArgs) ToBrokerConfigurationIdOutputWithContext(ctx context.Context) BrokerConfigurationIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerConfigurationIdOutput)
}

func (i BrokerConfigurationIdArgs) ToBrokerConfigurationIdPtrOutput() BrokerConfigurationIdPtrOutput {
	return i.ToBrokerConfigurationIdPtrOutputWithContext(context.Background())
}

func (i BrokerConfigurationIdArgs) ToBrokerConfigurationIdPtrOutputWithContext(ctx context.Context) BrokerConfigurationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerConfigurationIdOutput).ToBrokerConfigurationIdPtrOutputWithContext(ctx)
}

// BrokerConfigurationIdPtrInput is an input type that accepts BrokerConfigurationIdArgs, BrokerConfigurationIdPtr and BrokerConfigurationIdPtrOutput values.
// You can construct a concrete instance of `BrokerConfigurationIdPtrInput` via:
//
//          BrokerConfigurationIdArgs{...}
//
//  or:
//
//          nil
type BrokerConfigurationIdPtrInput interface {
	pulumi.Input

	ToBrokerConfigurationIdPtrOutput() BrokerConfigurationIdPtrOutput
	ToBrokerConfigurationIdPtrOutputWithContext(context.Context) BrokerConfigurationIdPtrOutput
}

type brokerConfigurationIdPtrType BrokerConfigurationIdArgs

func BrokerConfigurationIdPtr(v *BrokerConfigurationIdArgs) BrokerConfigurationIdPtrInput {
	return (*brokerConfigurationIdPtrType)(v)
}

func (*brokerConfigurationIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerConfigurationId)(nil)).Elem()
}

func (i *brokerConfigurationIdPtrType) ToBrokerConfigurationIdPtrOutput() BrokerConfigurationIdPtrOutput {
	return i.ToBrokerConfigurationIdPtrOutputWithContext(context.Background())
}

func (i *brokerConfigurationIdPtrType) ToBrokerConfigurationIdPtrOutputWithContext(ctx context.Context) BrokerConfigurationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerConfigurationIdPtrOutput)
}

type BrokerConfigurationIdOutput struct{ *pulumi.OutputState }

func (BrokerConfigurationIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerConfigurationId)(nil)).Elem()
}

func (o BrokerConfigurationIdOutput) ToBrokerConfigurationIdOutput() BrokerConfigurationIdOutput {
	return o
}

func (o BrokerConfigurationIdOutput) ToBrokerConfigurationIdOutputWithContext(ctx context.Context) BrokerConfigurationIdOutput {
	return o
}

func (o BrokerConfigurationIdOutput) ToBrokerConfigurationIdPtrOutput() BrokerConfigurationIdPtrOutput {
	return o.ToBrokerConfigurationIdPtrOutputWithContext(context.Background())
}

func (o BrokerConfigurationIdOutput) ToBrokerConfigurationIdPtrOutputWithContext(ctx context.Context) BrokerConfigurationIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerConfigurationId) *BrokerConfigurationId {
		return &v
	}).(BrokerConfigurationIdPtrOutput)
}

func (o BrokerConfigurationIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerConfigurationId) string { return v.Id }).(pulumi.StringOutput)
}

func (o BrokerConfigurationIdOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v BrokerConfigurationId) int { return v.Revision }).(pulumi.IntOutput)
}

type BrokerConfigurationIdPtrOutput struct{ *pulumi.OutputState }

func (BrokerConfigurationIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerConfigurationId)(nil)).Elem()
}

func (o BrokerConfigurationIdPtrOutput) ToBrokerConfigurationIdPtrOutput() BrokerConfigurationIdPtrOutput {
	return o
}

func (o BrokerConfigurationIdPtrOutput) ToBrokerConfigurationIdPtrOutputWithContext(ctx context.Context) BrokerConfigurationIdPtrOutput {
	return o
}

func (o BrokerConfigurationIdPtrOutput) Elem() BrokerConfigurationIdOutput {
	return o.ApplyT(func(v *BrokerConfigurationId) BrokerConfigurationId {
		if v != nil {
			return *v
		}
		var ret BrokerConfigurationId
		return ret
	}).(BrokerConfigurationIdOutput)
}

func (o BrokerConfigurationIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerConfigurationId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o BrokerConfigurationIdPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BrokerConfigurationId) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

type BrokerEncryptionOptions struct {
	KmsKeyId       *string `pulumi:"kmsKeyId"`
	UseAwsOwnedKey bool    `pulumi:"useAwsOwnedKey"`
}

// BrokerEncryptionOptionsInput is an input type that accepts BrokerEncryptionOptionsArgs and BrokerEncryptionOptionsOutput values.
// You can construct a concrete instance of `BrokerEncryptionOptionsInput` via:
//
//          BrokerEncryptionOptionsArgs{...}
type BrokerEncryptionOptionsInput interface {
	pulumi.Input

	ToBrokerEncryptionOptionsOutput() BrokerEncryptionOptionsOutput
	ToBrokerEncryptionOptionsOutputWithContext(context.Context) BrokerEncryptionOptionsOutput
}

type BrokerEncryptionOptionsArgs struct {
	KmsKeyId       pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	UseAwsOwnedKey pulumi.BoolInput      `pulumi:"useAwsOwnedKey"`
}

func (BrokerEncryptionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerEncryptionOptions)(nil)).Elem()
}

func (i BrokerEncryptionOptionsArgs) ToBrokerEncryptionOptionsOutput() BrokerEncryptionOptionsOutput {
	return i.ToBrokerEncryptionOptionsOutputWithContext(context.Background())
}

func (i BrokerEncryptionOptionsArgs) ToBrokerEncryptionOptionsOutputWithContext(ctx context.Context) BrokerEncryptionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerEncryptionOptionsOutput)
}

func (i BrokerEncryptionOptionsArgs) ToBrokerEncryptionOptionsPtrOutput() BrokerEncryptionOptionsPtrOutput {
	return i.ToBrokerEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i BrokerEncryptionOptionsArgs) ToBrokerEncryptionOptionsPtrOutputWithContext(ctx context.Context) BrokerEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerEncryptionOptionsOutput).ToBrokerEncryptionOptionsPtrOutputWithContext(ctx)
}

// BrokerEncryptionOptionsPtrInput is an input type that accepts BrokerEncryptionOptionsArgs, BrokerEncryptionOptionsPtr and BrokerEncryptionOptionsPtrOutput values.
// You can construct a concrete instance of `BrokerEncryptionOptionsPtrInput` via:
//
//          BrokerEncryptionOptionsArgs{...}
//
//  or:
//
//          nil
type BrokerEncryptionOptionsPtrInput interface {
	pulumi.Input

	ToBrokerEncryptionOptionsPtrOutput() BrokerEncryptionOptionsPtrOutput
	ToBrokerEncryptionOptionsPtrOutputWithContext(context.Context) BrokerEncryptionOptionsPtrOutput
}

type brokerEncryptionOptionsPtrType BrokerEncryptionOptionsArgs

func BrokerEncryptionOptionsPtr(v *BrokerEncryptionOptionsArgs) BrokerEncryptionOptionsPtrInput {
	return (*brokerEncryptionOptionsPtrType)(v)
}

func (*brokerEncryptionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerEncryptionOptions)(nil)).Elem()
}

func (i *brokerEncryptionOptionsPtrType) ToBrokerEncryptionOptionsPtrOutput() BrokerEncryptionOptionsPtrOutput {
	return i.ToBrokerEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i *brokerEncryptionOptionsPtrType) ToBrokerEncryptionOptionsPtrOutputWithContext(ctx context.Context) BrokerEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerEncryptionOptionsPtrOutput)
}

type BrokerEncryptionOptionsOutput struct{ *pulumi.OutputState }

func (BrokerEncryptionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerEncryptionOptions)(nil)).Elem()
}

func (o BrokerEncryptionOptionsOutput) ToBrokerEncryptionOptionsOutput() BrokerEncryptionOptionsOutput {
	return o
}

func (o BrokerEncryptionOptionsOutput) ToBrokerEncryptionOptionsOutputWithContext(ctx context.Context) BrokerEncryptionOptionsOutput {
	return o
}

func (o BrokerEncryptionOptionsOutput) ToBrokerEncryptionOptionsPtrOutput() BrokerEncryptionOptionsPtrOutput {
	return o.ToBrokerEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (o BrokerEncryptionOptionsOutput) ToBrokerEncryptionOptionsPtrOutputWithContext(ctx context.Context) BrokerEncryptionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerEncryptionOptions) *BrokerEncryptionOptions {
		return &v
	}).(BrokerEncryptionOptionsPtrOutput)
}

func (o BrokerEncryptionOptionsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerEncryptionOptions) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o BrokerEncryptionOptionsOutput) UseAwsOwnedKey() pulumi.BoolOutput {
	return o.ApplyT(func(v BrokerEncryptionOptions) bool { return v.UseAwsOwnedKey }).(pulumi.BoolOutput)
}

type BrokerEncryptionOptionsPtrOutput struct{ *pulumi.OutputState }

func (BrokerEncryptionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerEncryptionOptions)(nil)).Elem()
}

func (o BrokerEncryptionOptionsPtrOutput) ToBrokerEncryptionOptionsPtrOutput() BrokerEncryptionOptionsPtrOutput {
	return o
}

func (o BrokerEncryptionOptionsPtrOutput) ToBrokerEncryptionOptionsPtrOutputWithContext(ctx context.Context) BrokerEncryptionOptionsPtrOutput {
	return o
}

func (o BrokerEncryptionOptionsPtrOutput) Elem() BrokerEncryptionOptionsOutput {
	return o.ApplyT(func(v *BrokerEncryptionOptions) BrokerEncryptionOptions {
		if v != nil {
			return *v
		}
		var ret BrokerEncryptionOptions
		return ret
	}).(BrokerEncryptionOptionsOutput)
}

func (o BrokerEncryptionOptionsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerEncryptionOptions) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o BrokerEncryptionOptionsPtrOutput) UseAwsOwnedKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrokerEncryptionOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.UseAwsOwnedKey
	}).(pulumi.BoolPtrOutput)
}

type BrokerLdapServerMetadata struct {
	Hosts                  []string `pulumi:"hosts"`
	RoleBase               string   `pulumi:"roleBase"`
	RoleName               *string  `pulumi:"roleName"`
	RoleSearchMatching     string   `pulumi:"roleSearchMatching"`
	RoleSearchSubtree      *bool    `pulumi:"roleSearchSubtree"`
	ServiceAccountPassword string   `pulumi:"serviceAccountPassword"`
	ServiceAccountUsername string   `pulumi:"serviceAccountUsername"`
	UserBase               string   `pulumi:"userBase"`
	UserRoleName           *string  `pulumi:"userRoleName"`
	UserSearchMatching     string   `pulumi:"userSearchMatching"`
	UserSearchSubtree      *bool    `pulumi:"userSearchSubtree"`
}

// BrokerLdapServerMetadataInput is an input type that accepts BrokerLdapServerMetadataArgs and BrokerLdapServerMetadataOutput values.
// You can construct a concrete instance of `BrokerLdapServerMetadataInput` via:
//
//          BrokerLdapServerMetadataArgs{...}
type BrokerLdapServerMetadataInput interface {
	pulumi.Input

	ToBrokerLdapServerMetadataOutput() BrokerLdapServerMetadataOutput
	ToBrokerLdapServerMetadataOutputWithContext(context.Context) BrokerLdapServerMetadataOutput
}

type BrokerLdapServerMetadataArgs struct {
	Hosts                  pulumi.StringArrayInput `pulumi:"hosts"`
	RoleBase               pulumi.StringInput      `pulumi:"roleBase"`
	RoleName               pulumi.StringPtrInput   `pulumi:"roleName"`
	RoleSearchMatching     pulumi.StringInput      `pulumi:"roleSearchMatching"`
	RoleSearchSubtree      pulumi.BoolPtrInput     `pulumi:"roleSearchSubtree"`
	ServiceAccountPassword pulumi.StringInput      `pulumi:"serviceAccountPassword"`
	ServiceAccountUsername pulumi.StringInput      `pulumi:"serviceAccountUsername"`
	UserBase               pulumi.StringInput      `pulumi:"userBase"`
	UserRoleName           pulumi.StringPtrInput   `pulumi:"userRoleName"`
	UserSearchMatching     pulumi.StringInput      `pulumi:"userSearchMatching"`
	UserSearchSubtree      pulumi.BoolPtrInput     `pulumi:"userSearchSubtree"`
}

func (BrokerLdapServerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLdapServerMetadata)(nil)).Elem()
}

func (i BrokerLdapServerMetadataArgs) ToBrokerLdapServerMetadataOutput() BrokerLdapServerMetadataOutput {
	return i.ToBrokerLdapServerMetadataOutputWithContext(context.Background())
}

func (i BrokerLdapServerMetadataArgs) ToBrokerLdapServerMetadataOutputWithContext(ctx context.Context) BrokerLdapServerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLdapServerMetadataOutput)
}

func (i BrokerLdapServerMetadataArgs) ToBrokerLdapServerMetadataPtrOutput() BrokerLdapServerMetadataPtrOutput {
	return i.ToBrokerLdapServerMetadataPtrOutputWithContext(context.Background())
}

func (i BrokerLdapServerMetadataArgs) ToBrokerLdapServerMetadataPtrOutputWithContext(ctx context.Context) BrokerLdapServerMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLdapServerMetadataOutput).ToBrokerLdapServerMetadataPtrOutputWithContext(ctx)
}

// BrokerLdapServerMetadataPtrInput is an input type that accepts BrokerLdapServerMetadataArgs, BrokerLdapServerMetadataPtr and BrokerLdapServerMetadataPtrOutput values.
// You can construct a concrete instance of `BrokerLdapServerMetadataPtrInput` via:
//
//          BrokerLdapServerMetadataArgs{...}
//
//  or:
//
//          nil
type BrokerLdapServerMetadataPtrInput interface {
	pulumi.Input

	ToBrokerLdapServerMetadataPtrOutput() BrokerLdapServerMetadataPtrOutput
	ToBrokerLdapServerMetadataPtrOutputWithContext(context.Context) BrokerLdapServerMetadataPtrOutput
}

type brokerLdapServerMetadataPtrType BrokerLdapServerMetadataArgs

func BrokerLdapServerMetadataPtr(v *BrokerLdapServerMetadataArgs) BrokerLdapServerMetadataPtrInput {
	return (*brokerLdapServerMetadataPtrType)(v)
}

func (*brokerLdapServerMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLdapServerMetadata)(nil)).Elem()
}

func (i *brokerLdapServerMetadataPtrType) ToBrokerLdapServerMetadataPtrOutput() BrokerLdapServerMetadataPtrOutput {
	return i.ToBrokerLdapServerMetadataPtrOutputWithContext(context.Background())
}

func (i *brokerLdapServerMetadataPtrType) ToBrokerLdapServerMetadataPtrOutputWithContext(ctx context.Context) BrokerLdapServerMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLdapServerMetadataPtrOutput)
}

type BrokerLdapServerMetadataOutput struct{ *pulumi.OutputState }

func (BrokerLdapServerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLdapServerMetadata)(nil)).Elem()
}

func (o BrokerLdapServerMetadataOutput) ToBrokerLdapServerMetadataOutput() BrokerLdapServerMetadataOutput {
	return o
}

func (o BrokerLdapServerMetadataOutput) ToBrokerLdapServerMetadataOutputWithContext(ctx context.Context) BrokerLdapServerMetadataOutput {
	return o
}

func (o BrokerLdapServerMetadataOutput) ToBrokerLdapServerMetadataPtrOutput() BrokerLdapServerMetadataPtrOutput {
	return o.ToBrokerLdapServerMetadataPtrOutputWithContext(context.Background())
}

func (o BrokerLdapServerMetadataOutput) ToBrokerLdapServerMetadataPtrOutputWithContext(ctx context.Context) BrokerLdapServerMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerLdapServerMetadata) *BrokerLdapServerMetadata {
		return &v
	}).(BrokerLdapServerMetadataPtrOutput)
}

func (o BrokerLdapServerMetadataOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

func (o BrokerLdapServerMetadataOutput) RoleBase() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.RoleBase }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataOutput) RoleSearchMatching() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.RoleSearchMatching }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) RoleSearchSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) *bool { return v.RoleSearchSubtree }).(pulumi.BoolPtrOutput)
}

func (o BrokerLdapServerMetadataOutput) ServiceAccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.ServiceAccountPassword }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) ServiceAccountUsername() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.ServiceAccountUsername }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) UserBase() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.UserBase }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) UserRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) *string { return v.UserRoleName }).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataOutput) UserSearchMatching() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) string { return v.UserSearchMatching }).(pulumi.StringOutput)
}

func (o BrokerLdapServerMetadataOutput) UserSearchSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrokerLdapServerMetadata) *bool { return v.UserSearchSubtree }).(pulumi.BoolPtrOutput)
}

type BrokerLdapServerMetadataPtrOutput struct{ *pulumi.OutputState }

func (BrokerLdapServerMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLdapServerMetadata)(nil)).Elem()
}

func (o BrokerLdapServerMetadataPtrOutput) ToBrokerLdapServerMetadataPtrOutput() BrokerLdapServerMetadataPtrOutput {
	return o
}

func (o BrokerLdapServerMetadataPtrOutput) ToBrokerLdapServerMetadataPtrOutputWithContext(ctx context.Context) BrokerLdapServerMetadataPtrOutput {
	return o
}

func (o BrokerLdapServerMetadataPtrOutput) Elem() BrokerLdapServerMetadataOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) BrokerLdapServerMetadata {
		if v != nil {
			return *v
		}
		var ret BrokerLdapServerMetadata
		return ret
	}).(BrokerLdapServerMetadataOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) RoleBase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.RoleBase
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return v.RoleName
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) RoleSearchMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.RoleSearchMatching
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) RoleSearchSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *bool {
		if v == nil {
			return nil
		}
		return v.RoleSearchSubtree
	}).(pulumi.BoolPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) ServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) ServiceAccountUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountUsername
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) UserBase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.UserBase
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) UserRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return v.UserRoleName
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) UserSearchMatching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.UserSearchMatching
	}).(pulumi.StringPtrOutput)
}

func (o BrokerLdapServerMetadataPtrOutput) UserSearchSubtree() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrokerLdapServerMetadata) *bool {
		if v == nil {
			return nil
		}
		return v.UserSearchSubtree
	}).(pulumi.BoolPtrOutput)
}

type BrokerLogList struct {
	Audit   *bool `pulumi:"audit"`
	General *bool `pulumi:"general"`
}

// BrokerLogListInput is an input type that accepts BrokerLogListArgs and BrokerLogListOutput values.
// You can construct a concrete instance of `BrokerLogListInput` via:
//
//          BrokerLogListArgs{...}
type BrokerLogListInput interface {
	pulumi.Input

	ToBrokerLogListOutput() BrokerLogListOutput
	ToBrokerLogListOutputWithContext(context.Context) BrokerLogListOutput
}

type BrokerLogListArgs struct {
	Audit   pulumi.BoolPtrInput `pulumi:"audit"`
	General pulumi.BoolPtrInput `pulumi:"general"`
}

func (BrokerLogListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLogList)(nil)).Elem()
}

func (i BrokerLogListArgs) ToBrokerLogListOutput() BrokerLogListOutput {
	return i.ToBrokerLogListOutputWithContext(context.Background())
}

func (i BrokerLogListArgs) ToBrokerLogListOutputWithContext(ctx context.Context) BrokerLogListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogListOutput)
}

func (i BrokerLogListArgs) ToBrokerLogListPtrOutput() BrokerLogListPtrOutput {
	return i.ToBrokerLogListPtrOutputWithContext(context.Background())
}

func (i BrokerLogListArgs) ToBrokerLogListPtrOutputWithContext(ctx context.Context) BrokerLogListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogListOutput).ToBrokerLogListPtrOutputWithContext(ctx)
}

// BrokerLogListPtrInput is an input type that accepts BrokerLogListArgs, BrokerLogListPtr and BrokerLogListPtrOutput values.
// You can construct a concrete instance of `BrokerLogListPtrInput` via:
//
//          BrokerLogListArgs{...}
//
//  or:
//
//          nil
type BrokerLogListPtrInput interface {
	pulumi.Input

	ToBrokerLogListPtrOutput() BrokerLogListPtrOutput
	ToBrokerLogListPtrOutputWithContext(context.Context) BrokerLogListPtrOutput
}

type brokerLogListPtrType BrokerLogListArgs

func BrokerLogListPtr(v *BrokerLogListArgs) BrokerLogListPtrInput {
	return (*brokerLogListPtrType)(v)
}

func (*brokerLogListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLogList)(nil)).Elem()
}

func (i *brokerLogListPtrType) ToBrokerLogListPtrOutput() BrokerLogListPtrOutput {
	return i.ToBrokerLogListPtrOutputWithContext(context.Background())
}

func (i *brokerLogListPtrType) ToBrokerLogListPtrOutputWithContext(ctx context.Context) BrokerLogListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogListPtrOutput)
}

type BrokerLogListOutput struct{ *pulumi.OutputState }

func (BrokerLogListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLogList)(nil)).Elem()
}

func (o BrokerLogListOutput) ToBrokerLogListOutput() BrokerLogListOutput {
	return o
}

func (o BrokerLogListOutput) ToBrokerLogListOutputWithContext(ctx context.Context) BrokerLogListOutput {
	return o
}

func (o BrokerLogListOutput) ToBrokerLogListPtrOutput() BrokerLogListPtrOutput {
	return o.ToBrokerLogListPtrOutputWithContext(context.Background())
}

func (o BrokerLogListOutput) ToBrokerLogListPtrOutputWithContext(ctx context.Context) BrokerLogListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerLogList) *BrokerLogList {
		return &v
	}).(BrokerLogListPtrOutput)
}

func (o BrokerLogListOutput) Audit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrokerLogList) *bool { return v.Audit }).(pulumi.BoolPtrOutput)
}

func (o BrokerLogListOutput) General() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrokerLogList) *bool { return v.General }).(pulumi.BoolPtrOutput)
}

type BrokerLogListPtrOutput struct{ *pulumi.OutputState }

func (BrokerLogListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLogList)(nil)).Elem()
}

func (o BrokerLogListPtrOutput) ToBrokerLogListPtrOutput() BrokerLogListPtrOutput {
	return o
}

func (o BrokerLogListPtrOutput) ToBrokerLogListPtrOutputWithContext(ctx context.Context) BrokerLogListPtrOutput {
	return o
}

func (o BrokerLogListPtrOutput) Elem() BrokerLogListOutput {
	return o.ApplyT(func(v *BrokerLogList) BrokerLogList {
		if v != nil {
			return *v
		}
		var ret BrokerLogList
		return ret
	}).(BrokerLogListOutput)
}

func (o BrokerLogListPtrOutput) Audit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrokerLogList) *bool {
		if v == nil {
			return nil
		}
		return v.Audit
	}).(pulumi.BoolPtrOutput)
}

func (o BrokerLogListPtrOutput) General() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrokerLogList) *bool {
		if v == nil {
			return nil
		}
		return v.General
	}).(pulumi.BoolPtrOutput)
}

type BrokerMaintenanceWindow struct {
	DayOfWeek string `pulumi:"dayOfWeek"`
	TimeOfDay string `pulumi:"timeOfDay"`
	TimeZone  string `pulumi:"timeZone"`
}

// BrokerMaintenanceWindowInput is an input type that accepts BrokerMaintenanceWindowArgs and BrokerMaintenanceWindowOutput values.
// You can construct a concrete instance of `BrokerMaintenanceWindowInput` via:
//
//          BrokerMaintenanceWindowArgs{...}
type BrokerMaintenanceWindowInput interface {
	pulumi.Input

	ToBrokerMaintenanceWindowOutput() BrokerMaintenanceWindowOutput
	ToBrokerMaintenanceWindowOutputWithContext(context.Context) BrokerMaintenanceWindowOutput
}

type BrokerMaintenanceWindowArgs struct {
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	TimeOfDay pulumi.StringInput `pulumi:"timeOfDay"`
	TimeZone  pulumi.StringInput `pulumi:"timeZone"`
}

func (BrokerMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerMaintenanceWindow)(nil)).Elem()
}

func (i BrokerMaintenanceWindowArgs) ToBrokerMaintenanceWindowOutput() BrokerMaintenanceWindowOutput {
	return i.ToBrokerMaintenanceWindowOutputWithContext(context.Background())
}

func (i BrokerMaintenanceWindowArgs) ToBrokerMaintenanceWindowOutputWithContext(ctx context.Context) BrokerMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerMaintenanceWindowOutput)
}

func (i BrokerMaintenanceWindowArgs) ToBrokerMaintenanceWindowPtrOutput() BrokerMaintenanceWindowPtrOutput {
	return i.ToBrokerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i BrokerMaintenanceWindowArgs) ToBrokerMaintenanceWindowPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerMaintenanceWindowOutput).ToBrokerMaintenanceWindowPtrOutputWithContext(ctx)
}

// BrokerMaintenanceWindowPtrInput is an input type that accepts BrokerMaintenanceWindowArgs, BrokerMaintenanceWindowPtr and BrokerMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `BrokerMaintenanceWindowPtrInput` via:
//
//          BrokerMaintenanceWindowArgs{...}
//
//  or:
//
//          nil
type BrokerMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToBrokerMaintenanceWindowPtrOutput() BrokerMaintenanceWindowPtrOutput
	ToBrokerMaintenanceWindowPtrOutputWithContext(context.Context) BrokerMaintenanceWindowPtrOutput
}

type brokerMaintenanceWindowPtrType BrokerMaintenanceWindowArgs

func BrokerMaintenanceWindowPtr(v *BrokerMaintenanceWindowArgs) BrokerMaintenanceWindowPtrInput {
	return (*brokerMaintenanceWindowPtrType)(v)
}

func (*brokerMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerMaintenanceWindow)(nil)).Elem()
}

func (i *brokerMaintenanceWindowPtrType) ToBrokerMaintenanceWindowPtrOutput() BrokerMaintenanceWindowPtrOutput {
	return i.ToBrokerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *brokerMaintenanceWindowPtrType) ToBrokerMaintenanceWindowPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerMaintenanceWindowPtrOutput)
}

type BrokerMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (BrokerMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerMaintenanceWindow)(nil)).Elem()
}

func (o BrokerMaintenanceWindowOutput) ToBrokerMaintenanceWindowOutput() BrokerMaintenanceWindowOutput {
	return o
}

func (o BrokerMaintenanceWindowOutput) ToBrokerMaintenanceWindowOutputWithContext(ctx context.Context) BrokerMaintenanceWindowOutput {
	return o
}

func (o BrokerMaintenanceWindowOutput) ToBrokerMaintenanceWindowPtrOutput() BrokerMaintenanceWindowPtrOutput {
	return o.ToBrokerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o BrokerMaintenanceWindowOutput) ToBrokerMaintenanceWindowPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrokerMaintenanceWindow) *BrokerMaintenanceWindow {
		return &v
	}).(BrokerMaintenanceWindowPtrOutput)
}

func (o BrokerMaintenanceWindowOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerMaintenanceWindow) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

func (o BrokerMaintenanceWindowOutput) TimeOfDay() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerMaintenanceWindow) string { return v.TimeOfDay }).(pulumi.StringOutput)
}

func (o BrokerMaintenanceWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerMaintenanceWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type BrokerMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (BrokerMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerMaintenanceWindow)(nil)).Elem()
}

func (o BrokerMaintenanceWindowPtrOutput) ToBrokerMaintenanceWindowPtrOutput() BrokerMaintenanceWindowPtrOutput {
	return o
}

func (o BrokerMaintenanceWindowPtrOutput) ToBrokerMaintenanceWindowPtrOutputWithContext(ctx context.Context) BrokerMaintenanceWindowPtrOutput {
	return o
}

func (o BrokerMaintenanceWindowPtrOutput) Elem() BrokerMaintenanceWindowOutput {
	return o.ApplyT(func(v *BrokerMaintenanceWindow) BrokerMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret BrokerMaintenanceWindow
		return ret
	}).(BrokerMaintenanceWindowOutput)
}

func (o BrokerMaintenanceWindowPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

func (o BrokerMaintenanceWindowPtrOutput) TimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.TimeOfDay
	}).(pulumi.StringPtrOutput)
}

func (o BrokerMaintenanceWindowPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrokerMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type BrokerTagsEntry struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// BrokerTagsEntryInput is an input type that accepts BrokerTagsEntryArgs and BrokerTagsEntryOutput values.
// You can construct a concrete instance of `BrokerTagsEntryInput` via:
//
//          BrokerTagsEntryArgs{...}
type BrokerTagsEntryInput interface {
	pulumi.Input

	ToBrokerTagsEntryOutput() BrokerTagsEntryOutput
	ToBrokerTagsEntryOutputWithContext(context.Context) BrokerTagsEntryOutput
}

type BrokerTagsEntryArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BrokerTagsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerTagsEntry)(nil)).Elem()
}

func (i BrokerTagsEntryArgs) ToBrokerTagsEntryOutput() BrokerTagsEntryOutput {
	return i.ToBrokerTagsEntryOutputWithContext(context.Background())
}

func (i BrokerTagsEntryArgs) ToBrokerTagsEntryOutputWithContext(ctx context.Context) BrokerTagsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerTagsEntryOutput)
}

// BrokerTagsEntryArrayInput is an input type that accepts BrokerTagsEntryArray and BrokerTagsEntryArrayOutput values.
// You can construct a concrete instance of `BrokerTagsEntryArrayInput` via:
//
//          BrokerTagsEntryArray{ BrokerTagsEntryArgs{...} }
type BrokerTagsEntryArrayInput interface {
	pulumi.Input

	ToBrokerTagsEntryArrayOutput() BrokerTagsEntryArrayOutput
	ToBrokerTagsEntryArrayOutputWithContext(context.Context) BrokerTagsEntryArrayOutput
}

type BrokerTagsEntryArray []BrokerTagsEntryInput

func (BrokerTagsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerTagsEntry)(nil)).Elem()
}

func (i BrokerTagsEntryArray) ToBrokerTagsEntryArrayOutput() BrokerTagsEntryArrayOutput {
	return i.ToBrokerTagsEntryArrayOutputWithContext(context.Background())
}

func (i BrokerTagsEntryArray) ToBrokerTagsEntryArrayOutputWithContext(ctx context.Context) BrokerTagsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerTagsEntryArrayOutput)
}

type BrokerTagsEntryOutput struct{ *pulumi.OutputState }

func (BrokerTagsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerTagsEntry)(nil)).Elem()
}

func (o BrokerTagsEntryOutput) ToBrokerTagsEntryOutput() BrokerTagsEntryOutput {
	return o
}

func (o BrokerTagsEntryOutput) ToBrokerTagsEntryOutputWithContext(ctx context.Context) BrokerTagsEntryOutput {
	return o
}

func (o BrokerTagsEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerTagsEntry) string { return v.Key }).(pulumi.StringOutput)
}

func (o BrokerTagsEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerTagsEntry) string { return v.Value }).(pulumi.StringOutput)
}

type BrokerTagsEntryArrayOutput struct{ *pulumi.OutputState }

func (BrokerTagsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerTagsEntry)(nil)).Elem()
}

func (o BrokerTagsEntryArrayOutput) ToBrokerTagsEntryArrayOutput() BrokerTagsEntryArrayOutput {
	return o
}

func (o BrokerTagsEntryArrayOutput) ToBrokerTagsEntryArrayOutputWithContext(ctx context.Context) BrokerTagsEntryArrayOutput {
	return o
}

func (o BrokerTagsEntryArrayOutput) Index(i pulumi.IntInput) BrokerTagsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerTagsEntry {
		return vs[0].([]BrokerTagsEntry)[vs[1].(int)]
	}).(BrokerTagsEntryOutput)
}

type BrokerUser struct {
	ConsoleAccess *bool    `pulumi:"consoleAccess"`
	Groups        []string `pulumi:"groups"`
	Password      string   `pulumi:"password"`
	Username      string   `pulumi:"username"`
}

// BrokerUserInput is an input type that accepts BrokerUserArgs and BrokerUserOutput values.
// You can construct a concrete instance of `BrokerUserInput` via:
//
//          BrokerUserArgs{...}
type BrokerUserInput interface {
	pulumi.Input

	ToBrokerUserOutput() BrokerUserOutput
	ToBrokerUserOutputWithContext(context.Context) BrokerUserOutput
}

type BrokerUserArgs struct {
	ConsoleAccess pulumi.BoolPtrInput     `pulumi:"consoleAccess"`
	Groups        pulumi.StringArrayInput `pulumi:"groups"`
	Password      pulumi.StringInput      `pulumi:"password"`
	Username      pulumi.StringInput      `pulumi:"username"`
}

func (BrokerUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerUser)(nil)).Elem()
}

func (i BrokerUserArgs) ToBrokerUserOutput() BrokerUserOutput {
	return i.ToBrokerUserOutputWithContext(context.Background())
}

func (i BrokerUserArgs) ToBrokerUserOutputWithContext(ctx context.Context) BrokerUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerUserOutput)
}

// BrokerUserArrayInput is an input type that accepts BrokerUserArray and BrokerUserArrayOutput values.
// You can construct a concrete instance of `BrokerUserArrayInput` via:
//
//          BrokerUserArray{ BrokerUserArgs{...} }
type BrokerUserArrayInput interface {
	pulumi.Input

	ToBrokerUserArrayOutput() BrokerUserArrayOutput
	ToBrokerUserArrayOutputWithContext(context.Context) BrokerUserArrayOutput
}

type BrokerUserArray []BrokerUserInput

func (BrokerUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerUser)(nil)).Elem()
}

func (i BrokerUserArray) ToBrokerUserArrayOutput() BrokerUserArrayOutput {
	return i.ToBrokerUserArrayOutputWithContext(context.Background())
}

func (i BrokerUserArray) ToBrokerUserArrayOutputWithContext(ctx context.Context) BrokerUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerUserArrayOutput)
}

type BrokerUserOutput struct{ *pulumi.OutputState }

func (BrokerUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerUser)(nil)).Elem()
}

func (o BrokerUserOutput) ToBrokerUserOutput() BrokerUserOutput {
	return o
}

func (o BrokerUserOutput) ToBrokerUserOutputWithContext(ctx context.Context) BrokerUserOutput {
	return o
}

func (o BrokerUserOutput) ConsoleAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrokerUser) *bool { return v.ConsoleAccess }).(pulumi.BoolPtrOutput)
}

func (o BrokerUserOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BrokerUser) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o BrokerUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerUser) string { return v.Password }).(pulumi.StringOutput)
}

func (o BrokerUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BrokerUser) string { return v.Username }).(pulumi.StringOutput)
}

type BrokerUserArrayOutput struct{ *pulumi.OutputState }

func (BrokerUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerUser)(nil)).Elem()
}

func (o BrokerUserArrayOutput) ToBrokerUserArrayOutput() BrokerUserArrayOutput {
	return o
}

func (o BrokerUserArrayOutput) ToBrokerUserArrayOutputWithContext(ctx context.Context) BrokerUserArrayOutput {
	return o
}

func (o BrokerUserArrayOutput) Index(i pulumi.IntInput) BrokerUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BrokerUser {
		return vs[0].([]BrokerUser)[vs[1].(int)]
	}).(BrokerUserOutput)
}

type ConfigurationAssociationConfigurationId struct {
	Id       string `pulumi:"id"`
	Revision int    `pulumi:"revision"`
}

// ConfigurationAssociationConfigurationIdInput is an input type that accepts ConfigurationAssociationConfigurationIdArgs and ConfigurationAssociationConfigurationIdOutput values.
// You can construct a concrete instance of `ConfigurationAssociationConfigurationIdInput` via:
//
//          ConfigurationAssociationConfigurationIdArgs{...}
type ConfigurationAssociationConfigurationIdInput interface {
	pulumi.Input

	ToConfigurationAssociationConfigurationIdOutput() ConfigurationAssociationConfigurationIdOutput
	ToConfigurationAssociationConfigurationIdOutputWithContext(context.Context) ConfigurationAssociationConfigurationIdOutput
}

type ConfigurationAssociationConfigurationIdArgs struct {
	Id       pulumi.StringInput `pulumi:"id"`
	Revision pulumi.IntInput    `pulumi:"revision"`
}

func (ConfigurationAssociationConfigurationIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAssociationConfigurationId)(nil)).Elem()
}

func (i ConfigurationAssociationConfigurationIdArgs) ToConfigurationAssociationConfigurationIdOutput() ConfigurationAssociationConfigurationIdOutput {
	return i.ToConfigurationAssociationConfigurationIdOutputWithContext(context.Background())
}

func (i ConfigurationAssociationConfigurationIdArgs) ToConfigurationAssociationConfigurationIdOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAssociationConfigurationIdOutput)
}

func (i ConfigurationAssociationConfigurationIdArgs) ToConfigurationAssociationConfigurationIdPtrOutput() ConfigurationAssociationConfigurationIdPtrOutput {
	return i.ToConfigurationAssociationConfigurationIdPtrOutputWithContext(context.Background())
}

func (i ConfigurationAssociationConfigurationIdArgs) ToConfigurationAssociationConfigurationIdPtrOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAssociationConfigurationIdOutput).ToConfigurationAssociationConfigurationIdPtrOutputWithContext(ctx)
}

// ConfigurationAssociationConfigurationIdPtrInput is an input type that accepts ConfigurationAssociationConfigurationIdArgs, ConfigurationAssociationConfigurationIdPtr and ConfigurationAssociationConfigurationIdPtrOutput values.
// You can construct a concrete instance of `ConfigurationAssociationConfigurationIdPtrInput` via:
//
//          ConfigurationAssociationConfigurationIdArgs{...}
//
//  or:
//
//          nil
type ConfigurationAssociationConfigurationIdPtrInput interface {
	pulumi.Input

	ToConfigurationAssociationConfigurationIdPtrOutput() ConfigurationAssociationConfigurationIdPtrOutput
	ToConfigurationAssociationConfigurationIdPtrOutputWithContext(context.Context) ConfigurationAssociationConfigurationIdPtrOutput
}

type configurationAssociationConfigurationIdPtrType ConfigurationAssociationConfigurationIdArgs

func ConfigurationAssociationConfigurationIdPtr(v *ConfigurationAssociationConfigurationIdArgs) ConfigurationAssociationConfigurationIdPtrInput {
	return (*configurationAssociationConfigurationIdPtrType)(v)
}

func (*configurationAssociationConfigurationIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAssociationConfigurationId)(nil)).Elem()
}

func (i *configurationAssociationConfigurationIdPtrType) ToConfigurationAssociationConfigurationIdPtrOutput() ConfigurationAssociationConfigurationIdPtrOutput {
	return i.ToConfigurationAssociationConfigurationIdPtrOutputWithContext(context.Background())
}

func (i *configurationAssociationConfigurationIdPtrType) ToConfigurationAssociationConfigurationIdPtrOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAssociationConfigurationIdPtrOutput)
}

type ConfigurationAssociationConfigurationIdOutput struct{ *pulumi.OutputState }

func (ConfigurationAssociationConfigurationIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAssociationConfigurationId)(nil)).Elem()
}

func (o ConfigurationAssociationConfigurationIdOutput) ToConfigurationAssociationConfigurationIdOutput() ConfigurationAssociationConfigurationIdOutput {
	return o
}

func (o ConfigurationAssociationConfigurationIdOutput) ToConfigurationAssociationConfigurationIdOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdOutput {
	return o
}

func (o ConfigurationAssociationConfigurationIdOutput) ToConfigurationAssociationConfigurationIdPtrOutput() ConfigurationAssociationConfigurationIdPtrOutput {
	return o.ToConfigurationAssociationConfigurationIdPtrOutputWithContext(context.Background())
}

func (o ConfigurationAssociationConfigurationIdOutput) ToConfigurationAssociationConfigurationIdPtrOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationAssociationConfigurationId) *ConfigurationAssociationConfigurationId {
		return &v
	}).(ConfigurationAssociationConfigurationIdPtrOutput)
}

func (o ConfigurationAssociationConfigurationIdOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationAssociationConfigurationId) string { return v.Id }).(pulumi.StringOutput)
}

func (o ConfigurationAssociationConfigurationIdOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationAssociationConfigurationId) int { return v.Revision }).(pulumi.IntOutput)
}

type ConfigurationAssociationConfigurationIdPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAssociationConfigurationIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAssociationConfigurationId)(nil)).Elem()
}

func (o ConfigurationAssociationConfigurationIdPtrOutput) ToConfigurationAssociationConfigurationIdPtrOutput() ConfigurationAssociationConfigurationIdPtrOutput {
	return o
}

func (o ConfigurationAssociationConfigurationIdPtrOutput) ToConfigurationAssociationConfigurationIdPtrOutputWithContext(ctx context.Context) ConfigurationAssociationConfigurationIdPtrOutput {
	return o
}

func (o ConfigurationAssociationConfigurationIdPtrOutput) Elem() ConfigurationAssociationConfigurationIdOutput {
	return o.ApplyT(func(v *ConfigurationAssociationConfigurationId) ConfigurationAssociationConfigurationId {
		if v != nil {
			return *v
		}
		var ret ConfigurationAssociationConfigurationId
		return ret
	}).(ConfigurationAssociationConfigurationIdOutput)
}

func (o ConfigurationAssociationConfigurationIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationAssociationConfigurationId) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationAssociationConfigurationIdPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigurationAssociationConfigurationId) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

type ConfigurationTagsEntry struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ConfigurationTagsEntryInput is an input type that accepts ConfigurationTagsEntryArgs and ConfigurationTagsEntryOutput values.
// You can construct a concrete instance of `ConfigurationTagsEntryInput` via:
//
//          ConfigurationTagsEntryArgs{...}
type ConfigurationTagsEntryInput interface {
	pulumi.Input

	ToConfigurationTagsEntryOutput() ConfigurationTagsEntryOutput
	ToConfigurationTagsEntryOutputWithContext(context.Context) ConfigurationTagsEntryOutput
}

type ConfigurationTagsEntryArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConfigurationTagsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTagsEntry)(nil)).Elem()
}

func (i ConfigurationTagsEntryArgs) ToConfigurationTagsEntryOutput() ConfigurationTagsEntryOutput {
	return i.ToConfigurationTagsEntryOutputWithContext(context.Background())
}

func (i ConfigurationTagsEntryArgs) ToConfigurationTagsEntryOutputWithContext(ctx context.Context) ConfigurationTagsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTagsEntryOutput)
}

// ConfigurationTagsEntryArrayInput is an input type that accepts ConfigurationTagsEntryArray and ConfigurationTagsEntryArrayOutput values.
// You can construct a concrete instance of `ConfigurationTagsEntryArrayInput` via:
//
//          ConfigurationTagsEntryArray{ ConfigurationTagsEntryArgs{...} }
type ConfigurationTagsEntryArrayInput interface {
	pulumi.Input

	ToConfigurationTagsEntryArrayOutput() ConfigurationTagsEntryArrayOutput
	ToConfigurationTagsEntryArrayOutputWithContext(context.Context) ConfigurationTagsEntryArrayOutput
}

type ConfigurationTagsEntryArray []ConfigurationTagsEntryInput

func (ConfigurationTagsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationTagsEntry)(nil)).Elem()
}

func (i ConfigurationTagsEntryArray) ToConfigurationTagsEntryArrayOutput() ConfigurationTagsEntryArrayOutput {
	return i.ToConfigurationTagsEntryArrayOutputWithContext(context.Background())
}

func (i ConfigurationTagsEntryArray) ToConfigurationTagsEntryArrayOutputWithContext(ctx context.Context) ConfigurationTagsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTagsEntryArrayOutput)
}

type ConfigurationTagsEntryOutput struct{ *pulumi.OutputState }

func (ConfigurationTagsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTagsEntry)(nil)).Elem()
}

func (o ConfigurationTagsEntryOutput) ToConfigurationTagsEntryOutput() ConfigurationTagsEntryOutput {
	return o
}

func (o ConfigurationTagsEntryOutput) ToConfigurationTagsEntryOutputWithContext(ctx context.Context) ConfigurationTagsEntryOutput {
	return o
}

func (o ConfigurationTagsEntryOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTagsEntry) string { return v.Key }).(pulumi.StringOutput)
}

func (o ConfigurationTagsEntryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTagsEntry) string { return v.Value }).(pulumi.StringOutput)
}

type ConfigurationTagsEntryArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationTagsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationTagsEntry)(nil)).Elem()
}

func (o ConfigurationTagsEntryArrayOutput) ToConfigurationTagsEntryArrayOutput() ConfigurationTagsEntryArrayOutput {
	return o
}

func (o ConfigurationTagsEntryArrayOutput) ToConfigurationTagsEntryArrayOutputWithContext(ctx context.Context) ConfigurationTagsEntryArrayOutput {
	return o
}

func (o ConfigurationTagsEntryArrayOutput) Index(i pulumi.IntInput) ConfigurationTagsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationTagsEntry {
		return vs[0].([]ConfigurationTagsEntry)[vs[1].(int)]
	}).(ConfigurationTagsEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerConfigurationIdInput)(nil)).Elem(), BrokerConfigurationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerConfigurationIdPtrInput)(nil)).Elem(), BrokerConfigurationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerEncryptionOptionsInput)(nil)).Elem(), BrokerEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerEncryptionOptionsPtrInput)(nil)).Elem(), BrokerEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerLdapServerMetadataInput)(nil)).Elem(), BrokerLdapServerMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerLdapServerMetadataPtrInput)(nil)).Elem(), BrokerLdapServerMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerLogListInput)(nil)).Elem(), BrokerLogListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerLogListPtrInput)(nil)).Elem(), BrokerLogListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerMaintenanceWindowInput)(nil)).Elem(), BrokerMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerMaintenanceWindowPtrInput)(nil)).Elem(), BrokerMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerTagsEntryInput)(nil)).Elem(), BrokerTagsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerTagsEntryArrayInput)(nil)).Elem(), BrokerTagsEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerUserInput)(nil)).Elem(), BrokerUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrokerUserArrayInput)(nil)).Elem(), BrokerUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAssociationConfigurationIdInput)(nil)).Elem(), ConfigurationAssociationConfigurationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAssociationConfigurationIdPtrInput)(nil)).Elem(), ConfigurationAssociationConfigurationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTagsEntryInput)(nil)).Elem(), ConfigurationTagsEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTagsEntryArrayInput)(nil)).Elem(), ConfigurationTagsEntryArray{})
	pulumi.RegisterOutputType(BrokerConfigurationIdOutput{})
	pulumi.RegisterOutputType(BrokerConfigurationIdPtrOutput{})
	pulumi.RegisterOutputType(BrokerEncryptionOptionsOutput{})
	pulumi.RegisterOutputType(BrokerEncryptionOptionsPtrOutput{})
	pulumi.RegisterOutputType(BrokerLdapServerMetadataOutput{})
	pulumi.RegisterOutputType(BrokerLdapServerMetadataPtrOutput{})
	pulumi.RegisterOutputType(BrokerLogListOutput{})
	pulumi.RegisterOutputType(BrokerLogListPtrOutput{})
	pulumi.RegisterOutputType(BrokerMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(BrokerMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(BrokerTagsEntryOutput{})
	pulumi.RegisterOutputType(BrokerTagsEntryArrayOutput{})
	pulumi.RegisterOutputType(BrokerUserOutput{})
	pulumi.RegisterOutputType(BrokerUserArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationAssociationConfigurationIdOutput{})
	pulumi.RegisterOutputType(ConfigurationAssociationConfigurationIdPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationTagsEntryOutput{})
	pulumi.RegisterOutputType(ConfigurationTagsEntryArrayOutput{})
}
