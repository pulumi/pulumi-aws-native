// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package billingconductor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A markup/discount that is defined for a specific set of services that can later be associated with a pricing plan.
func LookupPricingRule(ctx *pulumi.Context, args *LookupPricingRuleArgs, opts ...pulumi.InvokeOption) (*LookupPricingRuleResult, error) {
	var rv LookupPricingRuleResult
	err := ctx.Invoke("aws-native:billingconductor:getPricingRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPricingRuleArgs struct {
	// Pricing rule ARN
	Arn string `pulumi:"arn"`
}

type LookupPricingRuleResult struct {
	// Pricing rule ARN
	Arn *string `pulumi:"arn"`
	// The number of pricing plans associated with pricing rule
	AssociatedPricingPlanCount *int `pulumi:"associatedPricingPlanCount"`
	// Creation timestamp in UNIX epoch time format
	CreationTime *int `pulumi:"creationTime"`
	// Pricing rule description
	Description *string `pulumi:"description"`
	// Latest modified timestamp in UNIX epoch time format
	LastModifiedTime *int `pulumi:"lastModifiedTime"`
	// Pricing rule modifier percentage
	ModifierPercentage *float64 `pulumi:"modifierPercentage"`
	// Pricing rule name
	Name *string          `pulumi:"name"`
	Tags []PricingRuleTag `pulumi:"tags"`
	// One of MARKUP or DISCOUNT that describes the direction of the rate that is applied to a pricing plan.
	Type *PricingRuleType `pulumi:"type"`
}

func LookupPricingRuleOutput(ctx *pulumi.Context, args LookupPricingRuleOutputArgs, opts ...pulumi.InvokeOption) LookupPricingRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPricingRuleResult, error) {
			args := v.(LookupPricingRuleArgs)
			r, err := LookupPricingRule(ctx, &args, opts...)
			var s LookupPricingRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPricingRuleResultOutput)
}

type LookupPricingRuleOutputArgs struct {
	// Pricing rule ARN
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupPricingRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPricingRuleArgs)(nil)).Elem()
}

type LookupPricingRuleResultOutput struct{ *pulumi.OutputState }

func (LookupPricingRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPricingRuleResult)(nil)).Elem()
}

func (o LookupPricingRuleResultOutput) ToLookupPricingRuleResultOutput() LookupPricingRuleResultOutput {
	return o
}

func (o LookupPricingRuleResultOutput) ToLookupPricingRuleResultOutputWithContext(ctx context.Context) LookupPricingRuleResultOutput {
	return o
}

// Pricing rule ARN
func (o LookupPricingRuleResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The number of pricing plans associated with pricing rule
func (o LookupPricingRuleResultOutput) AssociatedPricingPlanCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *int { return v.AssociatedPricingPlanCount }).(pulumi.IntPtrOutput)
}

// Creation timestamp in UNIX epoch time format
func (o LookupPricingRuleResultOutput) CreationTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *int { return v.CreationTime }).(pulumi.IntPtrOutput)
}

// Pricing rule description
func (o LookupPricingRuleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Latest modified timestamp in UNIX epoch time format
func (o LookupPricingRuleResultOutput) LastModifiedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *int { return v.LastModifiedTime }).(pulumi.IntPtrOutput)
}

// Pricing rule modifier percentage
func (o LookupPricingRuleResultOutput) ModifierPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *float64 { return v.ModifierPercentage }).(pulumi.Float64PtrOutput)
}

// Pricing rule name
func (o LookupPricingRuleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupPricingRuleResultOutput) Tags() PricingRuleTagArrayOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) []PricingRuleTag { return v.Tags }).(PricingRuleTagArrayOutput)
}

// One of MARKUP or DISCOUNT that describes the direction of the rate that is applied to a pricing plan.
func (o LookupPricingRuleResultOutput) Type() PricingRuleTypePtrOutput {
	return o.ApplyT(func(v LookupPricingRuleResult) *PricingRuleType { return v.Type }).(PricingRuleTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPricingRuleResultOutput{})
}
