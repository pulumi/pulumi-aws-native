// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmquicksetup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConfigurationManagerConfigurationDefinition struct {
	// The ID of the configuration definition.
	Id *string `pulumi:"id"`
	// The ARN of the IAM role used to administrate local configuration deployments.
	LocalDeploymentAdministrationRoleArn *string `pulumi:"localDeploymentAdministrationRoleArn"`
	// The name of the IAM role used to deploy local configurations.
	LocalDeploymentExecutionRoleName *string `pulumi:"localDeploymentExecutionRoleName"`
	// The parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. The following lists outline the parameters for each configuration type.
	//
	// - **AWS Config Recording (Type: AWS QuickSetupType-CFGRecording)** - - `RecordAllResources`
	//
	// - Description: (Optional) A boolean value that determines whether all supported resources are recorded. The default value is " `true` ".
	// - `ResourceTypesToRecord`
	//
	// - Description: (Optional) A comma separated list of resource types you want to record.
	// - `RecordGlobalResourceTypes`
	//
	// - Description: (Optional) A boolean value that determines whether global resources are recorded with all resource configurations. The default value is " `false` ".
	// - `GlobalResourceTypesRegion`
	//
	// - Description: (Optional) Determines the AWS Region where global resources are recorded.
	// - `UseCustomBucket`
	//
	// - Description: (Optional) A boolean value that determines whether a custom Amazon S3 bucket is used for delivery. The default value is " `false` ".
	// - `DeliveryBucketName`
	//
	// - Description: (Optional) The name of the Amazon S3 bucket you want AWS Config to deliver configuration snapshots and configuration history files to.
	// - `DeliveryBucketPrefix`
	//
	// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
	// - `NotificationOptions`
	//
	// - Description: (Optional) Determines the notification configuration for the recorder. The valid values are `NoStreaming` , `UseExistingTopic` , and `CreateTopic` . The default value is `NoStreaming` .
	// - `CustomDeliveryTopicAccountId`
	//
	// - Description: (Optional) The ID of the AWS account where the Amazon SNS topic you want to use for notifications resides. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
	// - `CustomDeliveryTopicName`
	//
	// - Description: (Optional) The name of the Amazon SNS topic you want to use for notifications. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(7 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Change Manager (Type: AWS QuickSetupType-SSMChangeMgr)** - - `DelegatedAccountId`
	//
	// - Description: (Required) The ID of the delegated administrator account.
	// - `JobFunction`
	//
	// - Description: (Required) The name for the Change Manager job function.
	// - `PermissionType`
	//
	// - Description: (Optional) Specifies whether you want to use default administrator permissions for the job function role, or provide a custom IAM policy. The valid values are `CustomPermissions` and `AdminPermissions` . The default value for the parameter is `CustomerPermissions` .
	// - `CustomPermissions`
	//
	// - Description: (Optional) A JSON string containing the IAM policy you want your job function to use. You must provide a value for this parameter if you specify `CustomPermissions` for the `PermissionType` parameter.
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Conformance Packs (Type: AWS QuickSetupType-CFGCPacks)** - - `DelegatedAccountId`
	//
	// - Description: (Optional) The ID of the delegated administrator account. This parameter is required for Organization deployments.
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `none` ".
	// - `CPackNames`
	//
	// - Description: (Required) A comma separated list of AWS Config conformance packs.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Default Host Management Configuration (Type: AWS QuickSetupType-DHMC)** - - `UpdateSSMAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **DevOps Guru (Type: AWS QuickSetupType-DevOpsGuru)** - - `AnalyseAllResources`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru analyzes all AWS CloudFormation stacks in the account. The default value is " `false` ".
	// - `EnableSnsNotifications`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru sends notifications when an insight is created. The default value is " `true` ".
	// - `EnableSsmOpsItems`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru creates an OpsCenter OpsItem when an insight is created. The default value is " `true` ".
	// - `EnableDriftRemediation`
	//
	// - Description: (Optional) A boolean value that determines whether a drift remediation schedule is used. The default value is " `false` ".
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Distributor (Type: AWS QuickSetupType-Distributor)** - - `PackagesToInstall`
	//
	// - Description: (Required) A comma separated list of packages you want to install on the target instances. The valid values are `AWSEFSTools` , `AWSCWAgent` , and `AWSEC2LaunchAgent` .
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `rate(30 days)` ".
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Host Management (Type: AWS QuickSetupType-SSMHostMgmt)** - - `UpdateSSMAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
	// - `UpdateEc2LaunchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `false` ".
	// - `CollectInventory`
	//
	// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `true` ".
	// - `ScanInstances`
	//
	// - Description: (Optional) A boolean value that determines whether the target instances are scanned daily for available patches. The default value is " `true` ".
	// - `InstallCloudWatchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is installed on the target instances. The default value is " `false` ".
	// - `UpdateCloudWatchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is updated on the target instances every month. The default value is " `false` ".
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Optional) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Optional) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Optional) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **OpsCenter (Type: AWS QuickSetupType-SSMOpsCenter)** - - `DelegatedAccountId`
	//
	// - Description: (Required) The ID of the delegated administrator account.
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Patch Policy (Type: AWS QuickSetupType-PatchPolicy)** - - `PatchPolicyName`
	//
	// - Description: (Required) A name for the patch policy. The value you provide is applied to target Amazon EC2 instances as a tag.
	// - `SelectedPatchBaselines`
	//
	// - Description: (Required) An array of JSON objects containing the information for the patch baselines to include in your patch policy.
	// - `PatchBaselineUseDefault`
	//
	// - Description: (Optional) A boolean value that determines whether the selected patch baselines are all AWS provided.
	// - `ConfigurationOptionsPatchOperation`
	//
	// - Description: (Optional) Determines whether target instances scan for available patches, or scan and install available patches. The valid values are `Scan` and `ScanAndInstall` . The default value for the parameter is `Scan` .
	// - `ConfigurationOptionsScanValue`
	//
	// - Description: (Optional) A cron expression that is used as the schedule for when instances scan for available patches.
	// - `ConfigurationOptionsInstallValue`
	//
	// - Description: (Optional) A cron expression that is used as the schedule for when instances install available patches.
	// - `ConfigurationOptionsScanNextInterval`
	//
	// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
	// - `ConfigurationOptionsInstallNextInterval`
	//
	// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
	// - `RebootOption`
	//
	// - Description: (Optional) Determines whether instances are rebooted after patches are installed. Valid values are `RebootIfNeeded` and `NoReboot` .
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `OutputLogEnableS3`
	//
	// - Description: (Optional) A boolean value that determines whether command output logs are sent to Amazon S3.
	// - `OutputS3Location`
	//
	// - Description: (Optional) A JSON string containing information about the Amazon S3 bucket where you want to store the output details of the request.
	//
	// - `OutputS3BucketRegion`
	//
	// - Description: (Optional) The AWS Region where the Amazon S3 bucket you want to deliver command output to is located.
	// - `OutputS3BucketName`
	//
	// - Description: (Optional) The name of the Amazon S3 bucket you want to deliver command output to.
	// - `OutputS3KeyPrefix`
	//
	// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Resource Explorer (Type: AWS QuickSetupType-ResourceExplorer)** - - `SelectedAggregatorRegion`
	//
	// - Description: (Required) The AWS Region where you want to create the aggregator index.
	// - `ReplaceExistingAggregator`
	//
	// - Description: (Required) A boolean value that determines whether to demote an existing aggregator if it is in a Region that differs from the value you specify for the `SelectedAggregatorRegion` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Resource Scheduler (Type: AWS QuickSetupType-Scheduler)** - - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target.
	// - `ICalendarString`
	//
	// - Description: (Required) An iCalendar formatted string containing the schedule you want Change Manager to use.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	Parameters map[string]string `pulumi:"parameters"`
	// The type of the Quick Setup configuration.
	Type string `pulumi:"type"`
	// The version of the Quick Setup type used.
	TypeVersion *string `pulumi:"typeVersion"`
}

// ConfigurationManagerConfigurationDefinitionInput is an input type that accepts ConfigurationManagerConfigurationDefinitionArgs and ConfigurationManagerConfigurationDefinitionOutput values.
// You can construct a concrete instance of `ConfigurationManagerConfigurationDefinitionInput` via:
//
//	ConfigurationManagerConfigurationDefinitionArgs{...}
type ConfigurationManagerConfigurationDefinitionInput interface {
	pulumi.Input

	ToConfigurationManagerConfigurationDefinitionOutput() ConfigurationManagerConfigurationDefinitionOutput
	ToConfigurationManagerConfigurationDefinitionOutputWithContext(context.Context) ConfigurationManagerConfigurationDefinitionOutput
}

type ConfigurationManagerConfigurationDefinitionArgs struct {
	// The ID of the configuration definition.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ARN of the IAM role used to administrate local configuration deployments.
	LocalDeploymentAdministrationRoleArn pulumi.StringPtrInput `pulumi:"localDeploymentAdministrationRoleArn"`
	// The name of the IAM role used to deploy local configurations.
	LocalDeploymentExecutionRoleName pulumi.StringPtrInput `pulumi:"localDeploymentExecutionRoleName"`
	// The parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. The following lists outline the parameters for each configuration type.
	//
	// - **AWS Config Recording (Type: AWS QuickSetupType-CFGRecording)** - - `RecordAllResources`
	//
	// - Description: (Optional) A boolean value that determines whether all supported resources are recorded. The default value is " `true` ".
	// - `ResourceTypesToRecord`
	//
	// - Description: (Optional) A comma separated list of resource types you want to record.
	// - `RecordGlobalResourceTypes`
	//
	// - Description: (Optional) A boolean value that determines whether global resources are recorded with all resource configurations. The default value is " `false` ".
	// - `GlobalResourceTypesRegion`
	//
	// - Description: (Optional) Determines the AWS Region where global resources are recorded.
	// - `UseCustomBucket`
	//
	// - Description: (Optional) A boolean value that determines whether a custom Amazon S3 bucket is used for delivery. The default value is " `false` ".
	// - `DeliveryBucketName`
	//
	// - Description: (Optional) The name of the Amazon S3 bucket you want AWS Config to deliver configuration snapshots and configuration history files to.
	// - `DeliveryBucketPrefix`
	//
	// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
	// - `NotificationOptions`
	//
	// - Description: (Optional) Determines the notification configuration for the recorder. The valid values are `NoStreaming` , `UseExistingTopic` , and `CreateTopic` . The default value is `NoStreaming` .
	// - `CustomDeliveryTopicAccountId`
	//
	// - Description: (Optional) The ID of the AWS account where the Amazon SNS topic you want to use for notifications resides. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
	// - `CustomDeliveryTopicName`
	//
	// - Description: (Optional) The name of the Amazon SNS topic you want to use for notifications. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(7 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Change Manager (Type: AWS QuickSetupType-SSMChangeMgr)** - - `DelegatedAccountId`
	//
	// - Description: (Required) The ID of the delegated administrator account.
	// - `JobFunction`
	//
	// - Description: (Required) The name for the Change Manager job function.
	// - `PermissionType`
	//
	// - Description: (Optional) Specifies whether you want to use default administrator permissions for the job function role, or provide a custom IAM policy. The valid values are `CustomPermissions` and `AdminPermissions` . The default value for the parameter is `CustomerPermissions` .
	// - `CustomPermissions`
	//
	// - Description: (Optional) A JSON string containing the IAM policy you want your job function to use. You must provide a value for this parameter if you specify `CustomPermissions` for the `PermissionType` parameter.
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Conformance Packs (Type: AWS QuickSetupType-CFGCPacks)** - - `DelegatedAccountId`
	//
	// - Description: (Optional) The ID of the delegated administrator account. This parameter is required for Organization deployments.
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `none` ".
	// - `CPackNames`
	//
	// - Description: (Required) A comma separated list of AWS Config conformance packs.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Default Host Management Configuration (Type: AWS QuickSetupType-DHMC)** - - `UpdateSSMAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **DevOps Guru (Type: AWS QuickSetupType-DevOpsGuru)** - - `AnalyseAllResources`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru analyzes all AWS CloudFormation stacks in the account. The default value is " `false` ".
	// - `EnableSnsNotifications`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru sends notifications when an insight is created. The default value is " `true` ".
	// - `EnableSsmOpsItems`
	//
	// - Description: (Optional) A boolean value that determines whether DevOps Guru creates an OpsCenter OpsItem when an insight is created. The default value is " `true` ".
	// - `EnableDriftRemediation`
	//
	// - Description: (Optional) A boolean value that determines whether a drift remediation schedule is used. The default value is " `false` ".
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Distributor (Type: AWS QuickSetupType-Distributor)** - - `PackagesToInstall`
	//
	// - Description: (Required) A comma separated list of packages you want to install on the target instances. The valid values are `AWSEFSTools` , `AWSCWAgent` , and `AWSEC2LaunchAgent` .
	// - `RemediationSchedule`
	//
	// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `rate(30 days)` ".
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Host Management (Type: AWS QuickSetupType-SSMHostMgmt)** - - `UpdateSSMAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
	// - `UpdateEc2LaunchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `false` ".
	// - `CollectInventory`
	//
	// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `true` ".
	// - `ScanInstances`
	//
	// - Description: (Optional) A boolean value that determines whether the target instances are scanned daily for available patches. The default value is " `true` ".
	// - `InstallCloudWatchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is installed on the target instances. The default value is " `false` ".
	// - `UpdateCloudWatchAgent`
	//
	// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is updated on the target instances every month. The default value is " `false` ".
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Optional) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Optional) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Optional) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **OpsCenter (Type: AWS QuickSetupType-SSMOpsCenter)** - - `DelegatedAccountId`
	//
	// - Description: (Required) The ID of the delegated administrator account.
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Patch Policy (Type: AWS QuickSetupType-PatchPolicy)** - - `PatchPolicyName`
	//
	// - Description: (Required) A name for the patch policy. The value you provide is applied to target Amazon EC2 instances as a tag.
	// - `SelectedPatchBaselines`
	//
	// - Description: (Required) An array of JSON objects containing the information for the patch baselines to include in your patch policy.
	// - `PatchBaselineUseDefault`
	//
	// - Description: (Optional) A boolean value that determines whether the selected patch baselines are all AWS provided.
	// - `ConfigurationOptionsPatchOperation`
	//
	// - Description: (Optional) Determines whether target instances scan for available patches, or scan and install available patches. The valid values are `Scan` and `ScanAndInstall` . The default value for the parameter is `Scan` .
	// - `ConfigurationOptionsScanValue`
	//
	// - Description: (Optional) A cron expression that is used as the schedule for when instances scan for available patches.
	// - `ConfigurationOptionsInstallValue`
	//
	// - Description: (Optional) A cron expression that is used as the schedule for when instances install available patches.
	// - `ConfigurationOptionsScanNextInterval`
	//
	// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
	// - `ConfigurationOptionsInstallNextInterval`
	//
	// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
	// - `RebootOption`
	//
	// - Description: (Optional) Determines whether instances are rebooted after patches are installed. Valid values are `RebootIfNeeded` and `NoReboot` .
	// - `IsPolicyAttachAllowed`
	//
	// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
	// - `OutputLogEnableS3`
	//
	// - Description: (Optional) A boolean value that determines whether command output logs are sent to Amazon S3.
	// - `OutputS3Location`
	//
	// - Description: (Optional) A JSON string containing information about the Amazon S3 bucket where you want to store the output details of the request.
	//
	// - `OutputS3BucketRegion`
	//
	// - Description: (Optional) The AWS Region where the Amazon S3 bucket you want to deliver command output to is located.
	// - `OutputS3BucketName`
	//
	// - Description: (Optional) The name of the Amazon S3 bucket you want to deliver command output to.
	// - `OutputS3KeyPrefix`
	//
	// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
	// - `TargetType`
	//
	// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
	// - `TargetInstances`
	//
	// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
	// - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
	// - `ResourceGroupName`
	//
	// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Resource Explorer (Type: AWS QuickSetupType-ResourceExplorer)** - - `SelectedAggregatorRegion`
	//
	// - Description: (Required) The AWS Region where you want to create the aggregator index.
	// - `ReplaceExistingAggregator`
	//
	// - Description: (Required) A boolean value that determines whether to demote an existing aggregator if it is in a Region that differs from the value you specify for the `SelectedAggregatorRegion` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	// - **Resource Scheduler (Type: AWS QuickSetupType-Scheduler)** - - `TargetTagKey`
	//
	// - Description: (Required) The tag key assigned to the instances you want to target.
	// - `TargetTagValue`
	//
	// - Description: (Required) The value of the tag key assigned to the instances you want to target.
	// - `ICalendarString`
	//
	// - Description: (Required) An iCalendar formatted string containing the schedule you want Change Manager to use.
	// - `TargetAccounts`
	//
	// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
	// - `TargetOrganizationalUnits`
	//
	// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
	// - `TargetRegions`
	//
	// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The type of the Quick Setup configuration.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of the Quick Setup type used.
	TypeVersion pulumi.StringPtrInput `pulumi:"typeVersion"`
}

func (ConfigurationManagerConfigurationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationManagerConfigurationDefinition)(nil)).Elem()
}

func (i ConfigurationManagerConfigurationDefinitionArgs) ToConfigurationManagerConfigurationDefinitionOutput() ConfigurationManagerConfigurationDefinitionOutput {
	return i.ToConfigurationManagerConfigurationDefinitionOutputWithContext(context.Background())
}

func (i ConfigurationManagerConfigurationDefinitionArgs) ToConfigurationManagerConfigurationDefinitionOutputWithContext(ctx context.Context) ConfigurationManagerConfigurationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationManagerConfigurationDefinitionOutput)
}

// ConfigurationManagerConfigurationDefinitionArrayInput is an input type that accepts ConfigurationManagerConfigurationDefinitionArray and ConfigurationManagerConfigurationDefinitionArrayOutput values.
// You can construct a concrete instance of `ConfigurationManagerConfigurationDefinitionArrayInput` via:
//
//	ConfigurationManagerConfigurationDefinitionArray{ ConfigurationManagerConfigurationDefinitionArgs{...} }
type ConfigurationManagerConfigurationDefinitionArrayInput interface {
	pulumi.Input

	ToConfigurationManagerConfigurationDefinitionArrayOutput() ConfigurationManagerConfigurationDefinitionArrayOutput
	ToConfigurationManagerConfigurationDefinitionArrayOutputWithContext(context.Context) ConfigurationManagerConfigurationDefinitionArrayOutput
}

type ConfigurationManagerConfigurationDefinitionArray []ConfigurationManagerConfigurationDefinitionInput

func (ConfigurationManagerConfigurationDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationManagerConfigurationDefinition)(nil)).Elem()
}

func (i ConfigurationManagerConfigurationDefinitionArray) ToConfigurationManagerConfigurationDefinitionArrayOutput() ConfigurationManagerConfigurationDefinitionArrayOutput {
	return i.ToConfigurationManagerConfigurationDefinitionArrayOutputWithContext(context.Background())
}

func (i ConfigurationManagerConfigurationDefinitionArray) ToConfigurationManagerConfigurationDefinitionArrayOutputWithContext(ctx context.Context) ConfigurationManagerConfigurationDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationManagerConfigurationDefinitionArrayOutput)
}

type ConfigurationManagerConfigurationDefinitionOutput struct{ *pulumi.OutputState }

func (ConfigurationManagerConfigurationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationManagerConfigurationDefinition)(nil)).Elem()
}

func (o ConfigurationManagerConfigurationDefinitionOutput) ToConfigurationManagerConfigurationDefinitionOutput() ConfigurationManagerConfigurationDefinitionOutput {
	return o
}

func (o ConfigurationManagerConfigurationDefinitionOutput) ToConfigurationManagerConfigurationDefinitionOutputWithContext(ctx context.Context) ConfigurationManagerConfigurationDefinitionOutput {
	return o
}

// The ID of the configuration definition.
func (o ConfigurationManagerConfigurationDefinitionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role used to administrate local configuration deployments.
func (o ConfigurationManagerConfigurationDefinitionOutput) LocalDeploymentAdministrationRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) *string {
		return v.LocalDeploymentAdministrationRoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the IAM role used to deploy local configurations.
func (o ConfigurationManagerConfigurationDefinitionOutput) LocalDeploymentExecutionRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) *string { return v.LocalDeploymentExecutionRoleName }).(pulumi.StringPtrOutput)
}

// The parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. The following lists outline the parameters for each configuration type.
//
// - **AWS Config Recording (Type: AWS QuickSetupType-CFGRecording)** - - `RecordAllResources`
//
// - Description: (Optional) A boolean value that determines whether all supported resources are recorded. The default value is " `true` ".
// - `ResourceTypesToRecord`
//
// - Description: (Optional) A comma separated list of resource types you want to record.
// - `RecordGlobalResourceTypes`
//
// - Description: (Optional) A boolean value that determines whether global resources are recorded with all resource configurations. The default value is " `false` ".
// - `GlobalResourceTypesRegion`
//
// - Description: (Optional) Determines the AWS Region where global resources are recorded.
// - `UseCustomBucket`
//
// - Description: (Optional) A boolean value that determines whether a custom Amazon S3 bucket is used for delivery. The default value is " `false` ".
// - `DeliveryBucketName`
//
// - Description: (Optional) The name of the Amazon S3 bucket you want AWS Config to deliver configuration snapshots and configuration history files to.
// - `DeliveryBucketPrefix`
//
// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
// - `NotificationOptions`
//
// - Description: (Optional) Determines the notification configuration for the recorder. The valid values are `NoStreaming` , `UseExistingTopic` , and `CreateTopic` . The default value is `NoStreaming` .
// - `CustomDeliveryTopicAccountId`
//
// - Description: (Optional) The ID of the AWS account where the Amazon SNS topic you want to use for notifications resides. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
// - `CustomDeliveryTopicName`
//
// - Description: (Optional) The name of the Amazon SNS topic you want to use for notifications. You must specify a value for this parameter if you use the `UseExistingTopic` notification option.
// - `RemediationSchedule`
//
// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(7 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Change Manager (Type: AWS QuickSetupType-SSMChangeMgr)** - - `DelegatedAccountId`
//
// - Description: (Required) The ID of the delegated administrator account.
// - `JobFunction`
//
// - Description: (Required) The name for the Change Manager job function.
// - `PermissionType`
//
// - Description: (Optional) Specifies whether you want to use default administrator permissions for the job function role, or provide a custom IAM policy. The valid values are `CustomPermissions` and `AdminPermissions` . The default value for the parameter is `CustomerPermissions` .
// - `CustomPermissions`
//
// - Description: (Optional) A JSON string containing the IAM policy you want your job function to use. You must provide a value for this parameter if you specify `CustomPermissions` for the `PermissionType` parameter.
// - `TargetOrganizationalUnits`
//
// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Conformance Packs (Type: AWS QuickSetupType-CFGCPacks)** - - `DelegatedAccountId`
//
// - Description: (Optional) The ID of the delegated administrator account. This parameter is required for Organization deployments.
// - `RemediationSchedule`
//
// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `none` ".
// - `CPackNames`
//
// - Description: (Required) A comma separated list of AWS Config conformance packs.
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) The ID of the root of your Organization. This configuration type doesn't currently support choosing specific OUs. The configuration will be deployed to all the OUs in the Organization.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Default Host Management Configuration (Type: AWS QuickSetupType-DHMC)** - - `UpdateSSMAgent`
//
// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
// - `TargetOrganizationalUnits`
//
// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **DevOps Guru (Type: AWS QuickSetupType-DevOpsGuru)** - - `AnalyseAllResources`
//
// - Description: (Optional) A boolean value that determines whether DevOps Guru analyzes all AWS CloudFormation stacks in the account. The default value is " `false` ".
// - `EnableSnsNotifications`
//
// - Description: (Optional) A boolean value that determines whether DevOps Guru sends notifications when an insight is created. The default value is " `true` ".
// - `EnableSsmOpsItems`
//
// - Description: (Optional) A boolean value that determines whether DevOps Guru creates an OpsCenter OpsItem when an insight is created. The default value is " `true` ".
// - `EnableDriftRemediation`
//
// - Description: (Optional) A boolean value that determines whether a drift remediation schedule is used. The default value is " `false` ".
// - `RemediationSchedule`
//
// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(1 days)` , and `none` . The default value is " `none` ".
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Distributor (Type: AWS QuickSetupType-Distributor)** - - `PackagesToInstall`
//
// - Description: (Required) A comma separated list of packages you want to install on the target instances. The valid values are `AWSEFSTools` , `AWSCWAgent` , and `AWSEC2LaunchAgent` .
// - `RemediationSchedule`
//
// - Description: (Optional) A rate expression that defines the schedule for drift remediation. The valid values are `rate(30 days)` , `rate(14 days)` , `rate(2 days)` , and `none` . The default value is " `rate(30 days)` ".
// - `IsPolicyAttachAllowed`
//
// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
// - `TargetType`
//
// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
// - `TargetInstances`
//
// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
// - `TargetTagKey`
//
// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `TargetTagValue`
//
// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `ResourceGroupName`
//
// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Host Management (Type: AWS QuickSetupType-SSMHostMgmt)** - - `UpdateSSMAgent`
//
// - Description: (Optional) A boolean value that determines whether the SSM Agent is updated on the target instances every 2 weeks. The default value is " `true` ".
// - `UpdateEc2LaunchAgent`
//
// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `false` ".
// - `CollectInventory`
//
// - Description: (Optional) A boolean value that determines whether the EC2 Launch agent is updated on the target instances every month. The default value is " `true` ".
// - `ScanInstances`
//
// - Description: (Optional) A boolean value that determines whether the target instances are scanned daily for available patches. The default value is " `true` ".
// - `InstallCloudWatchAgent`
//
// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is installed on the target instances. The default value is " `false` ".
// - `UpdateCloudWatchAgent`
//
// - Description: (Optional) A boolean value that determines whether the Amazon CloudWatch agent is updated on the target instances every month. The default value is " `false` ".
// - `IsPolicyAttachAllowed`
//
// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
// - `TargetType`
//
// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
// - `TargetInstances`
//
// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
// - `TargetTagKey`
//
// - Description: (Optional) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `TargetTagValue`
//
// - Description: (Optional) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `ResourceGroupName`
//
// - Description: (Optional) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **OpsCenter (Type: AWS QuickSetupType-SSMOpsCenter)** - - `DelegatedAccountId`
//
// - Description: (Required) The ID of the delegated administrator account.
// - `TargetOrganizationalUnits`
//
// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Patch Policy (Type: AWS QuickSetupType-PatchPolicy)** - - `PatchPolicyName`
//
// - Description: (Required) A name for the patch policy. The value you provide is applied to target Amazon EC2 instances as a tag.
// - `SelectedPatchBaselines`
//
// - Description: (Required) An array of JSON objects containing the information for the patch baselines to include in your patch policy.
// - `PatchBaselineUseDefault`
//
// - Description: (Optional) A boolean value that determines whether the selected patch baselines are all AWS provided.
// - `ConfigurationOptionsPatchOperation`
//
// - Description: (Optional) Determines whether target instances scan for available patches, or scan and install available patches. The valid values are `Scan` and `ScanAndInstall` . The default value for the parameter is `Scan` .
// - `ConfigurationOptionsScanValue`
//
// - Description: (Optional) A cron expression that is used as the schedule for when instances scan for available patches.
// - `ConfigurationOptionsInstallValue`
//
// - Description: (Optional) A cron expression that is used as the schedule for when instances install available patches.
// - `ConfigurationOptionsScanNextInterval`
//
// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
// - `ConfigurationOptionsInstallNextInterval`
//
// - Description: (Optional) A boolean value that determines whether instances should scan for available patches at the next cron interval. The default value is " `false` ".
// - `RebootOption`
//
// - Description: (Optional) Determines whether instances are rebooted after patches are installed. Valid values are `RebootIfNeeded` and `NoReboot` .
// - `IsPolicyAttachAllowed`
//
// - Description: (Optional) A boolean value that determines whether Quick Setup attaches policies to instances profiles already associated with the target instances. The default value is " `false` ".
// - `OutputLogEnableS3`
//
// - Description: (Optional) A boolean value that determines whether command output logs are sent to Amazon S3.
// - `OutputS3Location`
//
// - Description: (Optional) A JSON string containing information about the Amazon S3 bucket where you want to store the output details of the request.
//
// - `OutputS3BucketRegion`
//
// - Description: (Optional) The AWS Region where the Amazon S3 bucket you want to deliver command output to is located.
// - `OutputS3BucketName`
//
// - Description: (Optional) The name of the Amazon S3 bucket you want to deliver command output to.
// - `OutputS3KeyPrefix`
//
// - Description: (Optional) The key prefix you want to use in the custom Amazon S3 bucket.
// - `TargetType`
//
// - Description: (Optional) Determines how instances are targeted for local account deployments. Don't specify a value for this parameter if you're deploying to OUs. The valid values are `*` , `InstanceIds` , `ResourceGroups` , and `Tags` . Use `*` to target all instances in the account.
// - `TargetInstances`
//
// - Description: (Optional) A comma separated list of instance IDs. You must provide a value for this parameter if you specify `InstanceIds` for the `TargetType` parameter.
// - `TargetTagKey`
//
// - Description: (Required) The tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `TargetTagValue`
//
// - Description: (Required) The value of the tag key assigned to the instances you want to target. You must provide a value for this parameter if you specify `Tags` for the `TargetType` parameter.
// - `ResourceGroupName`
//
// - Description: (Required) The name of the resource group associated with the instances you want to target. You must provide a value for this parameter if you specify `ResourceGroups` for the `TargetType` parameter.
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Resource Explorer (Type: AWS QuickSetupType-ResourceExplorer)** - - `SelectedAggregatorRegion`
//
// - Description: (Required) The AWS Region where you want to create the aggregator index.
// - `ReplaceExistingAggregator`
//
// - Description: (Required) A boolean value that determines whether to demote an existing aggregator if it is in a Region that differs from the value you specify for the `SelectedAggregatorRegion` .
// - `TargetOrganizationalUnits`
//
// - Description: (Required) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
// - **Resource Scheduler (Type: AWS QuickSetupType-Scheduler)** - - `TargetTagKey`
//
// - Description: (Required) The tag key assigned to the instances you want to target.
// - `TargetTagValue`
//
// - Description: (Required) The value of the tag key assigned to the instances you want to target.
// - `ICalendarString`
//
// - Description: (Required) An iCalendar formatted string containing the schedule you want Change Manager to use.
// - `TargetAccounts`
//
// - Description: (Optional) The ID of the AWS account initiating the configuration deployment. You only need to provide a value for this parameter if you want to deploy the configuration locally. A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits` .
// - `TargetOrganizationalUnits`
//
// - Description: (Optional) A comma separated list of organizational units (OUs) you want to deploy the configuration to.
// - `TargetRegions`
//
// - Description: (Required) A comma separated list of AWS Regions you want to deploy the configuration to.
func (o ConfigurationManagerConfigurationDefinitionOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The type of the Quick Setup configuration.
func (o ConfigurationManagerConfigurationDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) string { return v.Type }).(pulumi.StringOutput)
}

// The version of the Quick Setup type used.
func (o ConfigurationManagerConfigurationDefinitionOutput) TypeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerConfigurationDefinition) *string { return v.TypeVersion }).(pulumi.StringPtrOutput)
}

type ConfigurationManagerConfigurationDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationManagerConfigurationDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationManagerConfigurationDefinition)(nil)).Elem()
}

func (o ConfigurationManagerConfigurationDefinitionArrayOutput) ToConfigurationManagerConfigurationDefinitionArrayOutput() ConfigurationManagerConfigurationDefinitionArrayOutput {
	return o
}

func (o ConfigurationManagerConfigurationDefinitionArrayOutput) ToConfigurationManagerConfigurationDefinitionArrayOutputWithContext(ctx context.Context) ConfigurationManagerConfigurationDefinitionArrayOutput {
	return o
}

func (o ConfigurationManagerConfigurationDefinitionArrayOutput) Index(i pulumi.IntInput) ConfigurationManagerConfigurationDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationManagerConfigurationDefinition {
		return vs[0].([]ConfigurationManagerConfigurationDefinition)[vs[1].(int)]
	}).(ConfigurationManagerConfigurationDefinitionOutput)
}

type ConfigurationManagerStatusSummary struct {
	// The datetime stamp when the status was last updated.
	LastUpdatedAt string `pulumi:"lastUpdatedAt"`
	// The current status.
	Status *ConfigurationManagerStatus `pulumi:"status"`
	// Details about the status.
	StatusDetails map[string]string `pulumi:"statusDetails"`
	// When applicable, returns an informational message relevant to the current status and status type of the status summary object. We don't recommend implementing parsing logic around this value since the messages returned can vary in format.
	StatusMessage *string `pulumi:"statusMessage"`
	// The type of a status summary.
	StatusType ConfigurationManagerStatusType `pulumi:"statusType"`
}

type ConfigurationManagerStatusSummaryOutput struct{ *pulumi.OutputState }

func (ConfigurationManagerStatusSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationManagerStatusSummary)(nil)).Elem()
}

func (o ConfigurationManagerStatusSummaryOutput) ToConfigurationManagerStatusSummaryOutput() ConfigurationManagerStatusSummaryOutput {
	return o
}

func (o ConfigurationManagerStatusSummaryOutput) ToConfigurationManagerStatusSummaryOutputWithContext(ctx context.Context) ConfigurationManagerStatusSummaryOutput {
	return o
}

// The datetime stamp when the status was last updated.
func (o ConfigurationManagerStatusSummaryOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationManagerStatusSummary) string { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The current status.
func (o ConfigurationManagerStatusSummaryOutput) Status() ConfigurationManagerStatusPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerStatusSummary) *ConfigurationManagerStatus { return v.Status }).(ConfigurationManagerStatusPtrOutput)
}

// Details about the status.
func (o ConfigurationManagerStatusSummaryOutput) StatusDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigurationManagerStatusSummary) map[string]string { return v.StatusDetails }).(pulumi.StringMapOutput)
}

// When applicable, returns an informational message relevant to the current status and status type of the status summary object. We don't recommend implementing parsing logic around this value since the messages returned can vary in format.
func (o ConfigurationManagerStatusSummaryOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationManagerStatusSummary) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

// The type of a status summary.
func (o ConfigurationManagerStatusSummaryOutput) StatusType() ConfigurationManagerStatusTypeOutput {
	return o.ApplyT(func(v ConfigurationManagerStatusSummary) ConfigurationManagerStatusType { return v.StatusType }).(ConfigurationManagerStatusTypeOutput)
}

type ConfigurationManagerStatusSummaryArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationManagerStatusSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationManagerStatusSummary)(nil)).Elem()
}

func (o ConfigurationManagerStatusSummaryArrayOutput) ToConfigurationManagerStatusSummaryArrayOutput() ConfigurationManagerStatusSummaryArrayOutput {
	return o
}

func (o ConfigurationManagerStatusSummaryArrayOutput) ToConfigurationManagerStatusSummaryArrayOutputWithContext(ctx context.Context) ConfigurationManagerStatusSummaryArrayOutput {
	return o
}

func (o ConfigurationManagerStatusSummaryArrayOutput) Index(i pulumi.IntInput) ConfigurationManagerStatusSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationManagerStatusSummary {
		return vs[0].([]ConfigurationManagerStatusSummary)[vs[1].(int)]
	}).(ConfigurationManagerStatusSummaryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationManagerConfigurationDefinitionInput)(nil)).Elem(), ConfigurationManagerConfigurationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationManagerConfigurationDefinitionArrayInput)(nil)).Elem(), ConfigurationManagerConfigurationDefinitionArray{})
	pulumi.RegisterOutputType(ConfigurationManagerConfigurationDefinitionOutput{})
	pulumi.RegisterOutputType(ConfigurationManagerConfigurationDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationManagerStatusSummaryOutput{})
	pulumi.RegisterOutputType(ConfigurationManagerStatusSummaryArrayOutput{})
}
