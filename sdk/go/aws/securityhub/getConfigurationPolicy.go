// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::ConfigurationPolicy resource represents the Central Configuration Policy in your account.
func LookupConfigurationPolicy(ctx *pulumi.Context, args *LookupConfigurationPolicyArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationPolicyResult
	err := ctx.Invoke("aws-native:securityhub:getConfigurationPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationPolicyArgs struct {
	// The Amazon Resource Name (ARN) of the configuration policy.
	Arn string `pulumi:"arn"`
}

type LookupConfigurationPolicyResult struct {
	// The Amazon Resource Name (ARN) of the configuration policy.
	Arn                 *string                    `pulumi:"arn"`
	ConfigurationPolicy *ConfigurationPolicyPolicy `pulumi:"configurationPolicy"`
	// The date and time, in UTC and ISO 8601 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the configuration policy.
	Description *string `pulumi:"description"`
	// The universally unique identifier (UUID) of the configuration policy.
	Id *string `pulumi:"id"`
	// The name of the configuration policy.
	Name *string `pulumi:"name"`
	// Indicates whether the service that the configuration policy applies to is enabled in the policy.
	ServiceEnabled *bool             `pulumi:"serviceEnabled"`
	Tags           map[string]string `pulumi:"tags"`
	// The date and time, in UTC and ISO 8601 format.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupConfigurationPolicyOutput(ctx *pulumi.Context, args LookupConfigurationPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationPolicyResult, error) {
			args := v.(LookupConfigurationPolicyArgs)
			r, err := LookupConfigurationPolicy(ctx, &args, opts...)
			var s LookupConfigurationPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationPolicyResultOutput)
}

type LookupConfigurationPolicyOutputArgs struct {
	// The Amazon Resource Name (ARN) of the configuration policy.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupConfigurationPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationPolicyArgs)(nil)).Elem()
}

type LookupConfigurationPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationPolicyResult)(nil)).Elem()
}

func (o LookupConfigurationPolicyResultOutput) ToLookupConfigurationPolicyResultOutput() LookupConfigurationPolicyResultOutput {
	return o
}

func (o LookupConfigurationPolicyResultOutput) ToLookupConfigurationPolicyResultOutputWithContext(ctx context.Context) LookupConfigurationPolicyResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the configuration policy.
func (o LookupConfigurationPolicyResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupConfigurationPolicyResultOutput) ConfigurationPolicy() ConfigurationPolicyPolicyPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *ConfigurationPolicyPolicy { return v.ConfigurationPolicy }).(ConfigurationPolicyPolicyPtrOutput)
}

// The date and time, in UTC and ISO 8601 format.
func (o LookupConfigurationPolicyResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The description of the configuration policy.
func (o LookupConfigurationPolicyResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The universally unique identifier (UUID) of the configuration policy.
func (o LookupConfigurationPolicyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the configuration policy.
func (o LookupConfigurationPolicyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates whether the service that the configuration policy applies to is enabled in the policy.
func (o LookupConfigurationPolicyResultOutput) ServiceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *bool { return v.ServiceEnabled }).(pulumi.BoolPtrOutput)
}

func (o LookupConfigurationPolicyResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The date and time, in UTC and ISO 8601 format.
func (o LookupConfigurationPolicyResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationPolicyResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationPolicyResultOutput{})
}
