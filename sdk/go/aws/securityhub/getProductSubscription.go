// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::SecurityHub::ProductSubscription resource represents a subscription to a service that is allowed to generate findings for your Security Hub account. One product subscription resource is created for each product enabled.
func LookupProductSubscription(ctx *pulumi.Context, args *LookupProductSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupProductSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProductSubscriptionResult
	err := ctx.Invoke("aws-native:securityhub:getProductSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProductSubscriptionArgs struct {
	// The ARN of the product subscription for the account
	ProductSubscriptionArn string `pulumi:"productSubscriptionArn"`
}

type LookupProductSubscriptionResult struct {
	// The ARN of the product subscription for the account
	ProductSubscriptionArn *string `pulumi:"productSubscriptionArn"`
}

func LookupProductSubscriptionOutput(ctx *pulumi.Context, args LookupProductSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupProductSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProductSubscriptionResultOutput, error) {
			args := v.(LookupProductSubscriptionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProductSubscriptionResult
			secret, err := ctx.InvokePackageRaw("aws-native:securityhub:getProductSubscription", args, &rv, "", opts...)
			if err != nil {
				return LookupProductSubscriptionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProductSubscriptionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProductSubscriptionResultOutput), nil
			}
			return output, nil
		}).(LookupProductSubscriptionResultOutput)
}

type LookupProductSubscriptionOutputArgs struct {
	// The ARN of the product subscription for the account
	ProductSubscriptionArn pulumi.StringInput `pulumi:"productSubscriptionArn"`
}

func (LookupProductSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductSubscriptionArgs)(nil)).Elem()
}

type LookupProductSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupProductSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProductSubscriptionResult)(nil)).Elem()
}

func (o LookupProductSubscriptionResultOutput) ToLookupProductSubscriptionResultOutput() LookupProductSubscriptionResultOutput {
	return o
}

func (o LookupProductSubscriptionResultOutput) ToLookupProductSubscriptionResultOutputWithContext(ctx context.Context) LookupProductSubscriptionResultOutput {
	return o
}

// The ARN of the product subscription for the account
func (o LookupProductSubscriptionResultOutput) ProductSubscriptionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProductSubscriptionResult) *string { return v.ProductSubscriptionArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProductSubscriptionResultOutput{})
}
